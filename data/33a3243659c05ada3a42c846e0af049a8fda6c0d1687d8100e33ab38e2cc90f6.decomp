sub_40143c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov bl 0x70
inc eax
add [ ebx ] cl
aas
inc eax
add [ eax - 0x46ffbfbc ] ah
inc esp
inc eax
add al bh
inc esp
inc eax
add [ edi ] dh
inc ebp
inc eax
add [ esi + 0x45 ] dh
inc eax
add [ ebp - 0xbffbfbb ] dh
inc ebp
inc eax
add [ ebx ] dh
inc esi
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x74 ] ah
imul ebp [ edi + 0x6e ] 0x50000073
jne rwxdata
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffa30
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x3fb ]
push eax
push 0x0
push 0x0
call [ esi + 0x85 ]
mov [ esi + 0x8c5 ] eax
call [ esi + 0x89 ]
cmp eax 0xb7
jne rwxdata
inc esi
imul ebp [ ebp ] 0x64257325
add [ eax ] al
add [ eax ] al
inc ebx
inc edx
jb rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
lea eax [ esi + 0x145 ]
push eax
call [ esi + 0xfd ]
call sub_401555
ja rwxdata
leave
retn 0x4
xor dl bh
arpl [ ebx + 0x73 ] bp
inc esp
outsd
arpl [ eax ] ax
add [ ebx + ecx * 4 + 0x35 ] ah
xor [ eax ] al
add [ eax ] al
mov esi [ esi + 0xc ]
mov esi [ esi + 0x1c ]
push 0xbba4d88f
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
lea ecx [ ebp - 0x196 ]
push ecx
push 0x101
call eax
test eax eax
jne rwxdata
xor bl [ edi + 0x33 ]
xor al [ eax ]
mov edx [ esi + 0x8 ]
mov edi [ esi + 0x20 ]
mov esi [ esi ]
cmp [ edi + 0xc ] 0x320033
jne rwxdata
mov [ ebp - 0x4c1 ] edx
retn
leave
retn 0x4
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
mov [ ebp - 0x1bc ] 0x0
cmp [ esi + 0x2c1 ] 0xffffffff
jne rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push [ esi + 0x18c ]
pop [ esi + 0x2c1 ]
push 0x131
lea eax [ esi + 0x190 ]
push eax
lea eax [ esi + 0x2c5 ]
push eax
call [ esi + 0xa9 ]
mov [ esi + 0x18c ] 0xffffffff
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
call sub_40189d
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
jmp rwxdata
sub_4014c9
push ebp
mov ebp esp
add esp 0xfffff030
pushad
xor eax eax
lea edi [ ebp - 0xf7c ]
mov ecx 0xf74
[ edi ]
xor eax eax
lea edi [ ebp - 0xfc0 ]
mov ecx 0x44
[ edi ]
mov [ ebp - 0xe53 ] 0xe7
jmp rwxdata
lea esi [ ebp - 0xf7c ]
rdtsc
xchg edx eax
xor ecx ecx
imul eax eax 0xac564b05
add eax 0x1
mov [ esi + ecx * 4 + 0x8d9 ] eax
add ecx 0x1
cmp ecx 0x22
jb rwxdata
fld1
fstp [ esi + 0x961 ]
mov [ esi + 0x8d1 ] 0x0
mov [ esi + 0x8d5 ] 0x50
call sub_40220f
push edi
mov edi 0x1e
call sub_40220f
sub edi 0x1
jne rwxdata
pop edi
mov eax [ fs : 0x30 ]
mov eax [ esp + 0x1c ]
sub eax 0x25
call eax
nop
nop
nop
nop
nop
nop
nop
push 0x4134d1ad
push [ ebp - 0x4c1 ]
push 0x0
call sub_401b39
mov [ ebp - 0xedf ] eax
call sub_4022ff
popad
jbe rwxdata
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
jo rwxdata
idiv bh
call [ ebx + 0x6a ]
add bh bh
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
inc ebx
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
xor esi [ edx ]
add bh bh
xchg ebp eax
and ecx esi
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43bf71d
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_401555
pop eax
push eax
call [ esi + 0x9d ]
mov [ esi + 0xac3 ] eax
call sub_4015a2
loope rwxdata
retn
mov ah 0x8e
add [ eax ] eax
rol [ ecx + 0x29 ] 0x1
jl rwxdata
jo rwxdata
add [ esi ] bl
mov ebx 0x1965ec
or al 0x58
in eax dx
0x2d81001d 0x5f7e
jmp rwxdata
or eax 0x3ce88a00
jpe sub_4015a2
cmp [ edi ] 0x0
je rwxdata
add ch al
int 0xc6
sbb al 0x9
add bh dl
fild [ 0x9949 ]
add [ eax ] al
add [ edi - 0x7d ] bl
aas
add [ ebx + ebx - 0x1 ] dh
aaa
push 0xbba4d88f
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
lea ecx [ ebp - 0x196 ]
push ecx
push 0x101
call eax
test eax eax
jne rwxdata
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
movzx edx [ edi + 0x4 ]
mov [ edx + esi ] eax
add edi 0x6
push [ edi ]
leave
retn 0x4
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
mov [ ebp - 0x1bc ] 0x0
cmp [ esi + 0x2c1 ] 0xffffffff
jne rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push [ esi + 0x18c ]
pop [ esi + 0x2c1 ]
push 0x131
lea eax [ esi + 0x190 ]
push eax
lea eax [ esi + 0x2c5 ]
push eax
call [ esi + 0xa9 ]
mov [ esi + 0x18c ] 0xffffffff
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
call sub_40189d
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
jmp rwxdata
sub_4015a2
pop edi
push 0xbba4d88f
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
lea ecx [ ebp - 0x196 ]
push ecx
push 0x101
call eax
test eax eax
jne rwxdata
push [ edi ]
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
movzx edx [ edi + 0x4 ]
mov [ edx + esi ] eax
add edi 0x6
jmp rwxdata
leave
retn 0x4
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
cmp [ edi ] 0x0
je rwxdata
mov [ ebp - 0x1bc ] 0x0
cmp [ esi + 0x2c1 ] 0xffffffff
jne rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push [ esi + 0x18c ]
pop [ esi + 0x2c1 ]
push 0x131
lea eax [ esi + 0x190 ]
push eax
lea eax [ esi + 0x2c5 ]
push eax
call [ esi + 0xa9 ]
mov [ esi + 0x18c ] 0xffffffff
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
call sub_40189d
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
jmp rwxdata
sub_40189d
pop edx
lea edi [ ebp - 0x4cc ]
lea ebx [ ebp - 0x3bf ]
push 0xa10a30b6
push [ esi + 0xabf ]
push [ esi + 0xe1 ]
call [ esi + 0xdd ]
push ecx
push ebx
push edx
push edi
call eax
push eax
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
add edi 0x4
push edi
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
add edi 0x1
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push 0x1
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
cmp [ edi - 0x3 ] 0xa0d0a0d
jne rwxdata
pop edi
cmp [ edi ] 0x20333035
je rwxdata
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
cmp [ edi + 0x9 ] 0x20303032
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
call sub_40189d
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
mov [ ebp - 0x1bc ] 0x0
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
jmp rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
sub_401a51
push ebp
mov ebp esp
push esi
push edi
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
xor edx edx
xor eax eax
mov ecx eax
add esi eax
add esi 0x3
add edx 0x1
jmp rwxdata
mov [ edi ] 0x0
movzx eax [ esi ]
movzx ecx [ esi + 0x1 ]
pop edi
pop esi
leave
retn 0xc
mov al [ esi ]
mov [ edi ] al
add esi 0x1
add edi 0x1
sub ecx 0x1
jmp rwxdata
mov al [ esi ]
add esi 0x1
cmp ecx edx
je rwxdata
cmp ecx 0x0
je rwxdata
sub_401a9c
push ebp
mov ebp esp
add esp 0xfffffeec
pushad
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10c ] 0x1
push [ ebp + 0x10 ]
pop [ ebp - 0x108 ]
mov [ ebp - 0x114 ] 0xb4
mov [ ebp - 0x110 ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
jne rwxdata
lea eax [ ebp - 0x114 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x10c ]
push eax
push 0x0
call [ esi + 0x99 ]
cmp eax 0x0
jbe rwxdata
call [ esi + 0xd ]
call [ esi + 0x11 ]
jmp rwxdata
popad
xor eax eax
leave
retn 0x14
add [ ebp + 0x14 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp + 0x18 ] eax
cmp [ ebp + 0x18 ] 0x0
jne rwxdata
cmp eax 0x1
jge rwxdata
cmp [ ebp + 0xc ] 0x0
jne rwxdata
popad
mov eax [ ebp - 0x8 ]
leave
retn 0x14
sub_401b39
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push ebx
push edi
push edx
push ecx
mov eax [ ebp + 0x10 ]
xor edx edx
xchg edx eax
mov esi 0x3c
add esi [ ebp + 0xc ]
mov eax [ esi ]
add eax [ ebp + 0xc ]
mov esi [ eax + 0x78 ]
add esi 0x18
add esi [ ebp + 0xc ]
mov eax [ esi ]
mov [ ebp - 0x14 ] eax
add esi 0x4
lea edi [ ebp - 0x8 ]
lodsd [ esi ]
add eax [ ebp + 0xc ]
stosd [ edi ]
mov [ ebp - 0x8 ] eax
lodsd [ esi ]
add eax [ ebp + 0xc ]
push eax
stosd [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
pop esi
mov [ ebp - 0x4 ] 0x0
push esi
mov eax [ esi ]
add eax [ ebp + 0xc ]
xchg edi eax
mov ebx edi
push edi
xor al al
xor eax eax
pop ecx
pop edx
pop edi
pop ebx
pop esi
leave
retn 0xc
scasb [ edi ]
jne rwxdata
pop esi
sub edi ebx
push edx
cld
xor ecx ecx
dec ecx
mov edx ecx
dec dh
jne rwxdata
xor ax 0x8320
xor bx 0xedb8
shr bx 0x1
rcr ax 0x1
jae rwxdata
xor ecx eax
xor edx ebx
dec edi
jne rwxdata
xor eax eax
xor ebx ebx
lodsb [ esi ]
xor al cl
mov cl ch
mov ch dl
mov dl dh
mov dh 0x8
not edx
not ecx
mov eax edx
rol eax 0x10
mov ax cx
pop edx
cmp edx eax
je rwxdata
pop esi
mov eax [ ebp - 0x4 ]
shl eax 0x1
add eax [ ebp - 0x10 ]
xor esi esi
xchg esi eax
mov ax [ esi ]
shl ax 0x2
add eax [ ebp - 0x8 ]
xchg esi eax
mov eax [ esi ]
add eax [ ebp + 0xc ]
pop ecx
pop edx
pop edi
pop ebx
pop esi
leave
retn 0xc
pop esi
add esi 0x4
add [ ebp - 0x4 ] 0x1
jmp rwxdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x14 ] eax
jne rwxdata
sub_401c25
push ebp
mov ebp esp
pushad
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
add edi 0x40
mov ecx 0x8
cld
[ edi ] [ esi ]
mov eax [ edi - 0x20 ]
mov ebx [ edi - 0x1c ]
xor eax [ edi - 0x10 ]
xor ebx [ edi - 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov eax [ edi - 0x18 ]
mov ebx [ edi - 0x14 ]
xor eax [ edi - 0x8 ]
xor ebx [ edi - 0x4 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] ebx
mov esi edi
call sub_401c94
mov al [ 0x3b7f669e ]
int3
sub_401c94
pop ebp
add edi 0x8
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x111 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
mov eax [ edi - 0x20 ]
mov edx [ edi - 0x1c ]
xor [ edi ] eax
xor [ edi + 0x4 ] edx
mov eax [ edi - 0x18 ]
mov edx [ edi - 0x14 ]
xor [ edi + 0x8 ] eax
xor [ edi + 0xc ] edx
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
mov eax [ edi ]
mov edx [ edi + 0x4 ]
xor eax [ edi - 0x10 ]
xor edx [ edi - 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ edi - 0x8 ]
xor edx [ edi - 0x4 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
add ebp 0x8
add esi 0x8
add edi 0x18
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
mov edi [ esp + 0x2c ]
mov esi edi
add esi 0x40
mov ecx 0x10
lodsd [ esi ]
bswap eax
stosd [ edi ]
sub ecx 0x1
jne rwxdata
lea edi [ esi - 0x30 ]
mov ecx 0x4
sub esi 0x10
[ edi ] [ esi ]
xor ebx ebx
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x119 ]
movzx esi [ ebx + ecx ]
mov ecx [ eax + 0x115 ]
movzx edx [ ebx + ecx ]
add esi [ esp + 0x2c ]
call [ eax + 0x10d ]
add edi 0x8
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x119 ]
movzx esi [ ebx + ecx + 0x1 ]
mov ecx [ eax + 0x115 ]
movzx edx [ ebx + ecx + 0x1 ]
add esi [ esp + 0x2c ]
call [ eax + 0x10d ]
add ebx 0x2
add edi 0x8
cmp ebx 0x1e
jl rwxdata
xor eax eax
mov edi [ esp + 0x2c ]
mov ecx 0x10
[ edi ]
popad
leave
retn 0xc
sub_401dbd
push ebp
mov ebp esp
pushad
cld
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebp [ ebp + 0x10 ]
add ebp 0x40
mov eax [ edi ]
mov edx [ edi + 0x4 ]
xor eax [ ebp ]
xor edx [ ebp + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ ebp + 0x8 ]
xor edx [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
lea edi [ esi + 0x8 ]
add ebp 0x10
mov eax [ esp + 0x34 ]
mov ebx [ eax + 0x111 ]
mov dh 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
and eax [ ebp ]
or ecx [ esi + 0xc ]
bswap eax
xor ecx [ esi + 0x8 ]
rol eax 0x1
mov [ esi + 0x8 ] ecx
bswap eax
and ecx [ ebp + 0x8 ]
xor eax [ esi + 0x4 ]
bswap ecx
mov [ esi + 0x4 ] eax
rol ecx 0x1
or eax [ ebp + 0x4 ]
bswap ecx
xor [ esi ] eax
xor [ esi + 0xc ] ecx
add ebp 0x10
sub dh 0x1
jne rwxdata
mov dl 0x3
mov dl 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
xor eax [ ebp + 0x8 ]
xor ebx [ ebp + 0xc ]
xor ecx [ ebp ]
xor edx [ ebp + 0x4 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ebx
popad
leave
retn 0x10
sub_401ea9
push ebp
mov ebp esp
pushad
cld
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebp [ ebp + 0x10 ]
add ebp 0x140
mov eax [ edi ]
mov edx [ edi + 0x4 ]
xor eax [ ebp ]
xor edx [ ebp + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ ebp + 0x8 ]
xor edx [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
lea edi [ esi + 0x8 ]
sub ebp 0x8
mov eax [ esp + 0x34 ]
mov ebx [ eax + 0x111 ]
mov dh 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
and eax [ ebp ]
or ecx [ esi + 0xc ]
bswap eax
xor ecx [ esi + 0x8 ]
rol eax 0x1
mov [ esi + 0x8 ] ecx
bswap eax
and ecx [ ebp - 0x8 ]
xor eax [ esi + 0x4 ]
bswap ecx
mov [ esi + 0x4 ] eax
rol ecx 0x1
or eax [ ebp + 0x4 ]
bswap ecx
xor [ esi ] eax
xor [ esi + 0xc ] ecx
sub ebp 0x10
sub dh 0x1
jne rwxdata
mov dl 0x3
mov dl 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
xor eax [ ebp ]
xor ebx [ ebp + 0x4 ]
xor ecx [ ebp - 0x8 ]
xor edx [ ebp - 0x4 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ebx
popad
leave
retn 0x10
sub_401f99
mov eax [ esi ]
xor eax [ ebp ]
xlat
ror eax 0x8
xlat
rol al 0x1
ror eax 0x8
xlat
ror al 0x1
rol ah 0x1
ror eax 0x8
xlat
xor [ edi ] eax
rol eax 0x8
xor [ edi ] eax
rol eax 0x8
xor [ edi + 0x4 ] eax
rol eax 0x8
xor [ edi ] eax
xor [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
xor eax [ ebp + 0x4 ]
xlat
rol al 0x1
ror eax 0x8
xlat
ror al 0x1
rol ah 0x1
ror eax 0x8
xlat
ror eax 0x8
xlat
ror eax 0x8
mov cl al
xor cl ah
ror eax 0x10
xor cl al
xor cl ah
mov ch cl
xor ax cx
rol eax 0x10
xor ax cx
xor [ edi ] eax
xor [ edi + 0x4 ] eax
retn
sub_40220f
push ebx
mov ebx [ esi + 0x8d1 ]
mov ecx [ esi + 0x8d5 ]
mov edx [ ebx + esi + 0x8d9 ]
mov eax [ ebx + esi + 0x8dd ]
rol edx 0x13
rol eax 0x1b
add edx [ ecx + esi + 0x8d9 ]
add eax [ ecx + esi + 0x8dd ]
mov [ ebx + esi + 0x8d9 ] eax
mov [ ebx + esi + 0x8dd ] edx
sub ebx 0x8
jae rwxdata
sub ecx 0x8
jae rwxdata
mov ebx 0x80
mov [ esi + 0x8d1 ] ebx
mov [ esi + 0x8d5 ] ecx
pop ebx
retn
mov ecx 0x80
sub_4022ff
call [ ebp - 0xedf ]
mov [ ebp - 0x4a9 ] eax
call sub_402316
outsb
je rwxdata
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
insb
insb
add bh bh
xchg ebp eax
and ecx esi
idiv bh
call [ ebx + 0x6a ]
add bh bh
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
inc ebx
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43bf71d
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_402316
call [ ebp - 0xedf ]
mov [ ebp - 0x4a1 ] eax
call sub_40232e
jne rwxdata
call 0xffffffffbb898844
or al cl
add [ ebp + 0x7f ] ah
dec edx
jb rwxdata
call sub_4024c0
out 0x43 eax
xor al [ eax ]
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
idiv bh
call [ ebx + 0x6a ]
add bh bh
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
inc ebx
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43bf71d
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_40232e
call [ ebp - 0xedf ]
mov [ ebp - 0x4bd ] eax
push 0x4dcf392
push [ ebp - 0x4c1 ]
push 0x0
call sub_401b39
push 0xff
lea ebx [ ebp - 0x9ca ]
push ebx
push 0x0
call eax
mov [ ebp - 0x4 ] eax
call sub_4024c0
out 0x43 eax
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
idiv bh
call [ ebx + 0x6a ]
add bh bh
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
inc ebx
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43bf71d
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_4024c0
pop edi
lea esi [ ebp - 0xf7c ]
call $+5
pop esi
add esi 0x1fb
lea edi [ ebp - 0xf7c ]
movzx eax [ edi + 0x4 ]
push [ edi ]
push [ eax + esi ]
push 0x0
call sub_401b39
movzx edx [ edi + 0x6 ]
mov [ edx + esi ] eax
add edi 0x8
jmp rwxdata
movzx eax [ esi ]
movzx ecx [ esi + 0x2 ]
add esi 0x4
add eax edi
push ecx
push ecx
push esi
push eax
call [ ebp - 0xed3 ]
pop ecx
add esi ecx
cmp [ esi ] 0x0
jne rwxdata
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp [ edi ] 0x0
je rwxdata
push 0xff
lea eax [ ebp - 0x9ca ]
push eax
lea edi [ ebp - 0x8cb ]
push edi
call [ ebp - 0xed3 ]
cmp [ ebp - 0xb86 ] 0x1
jne rwxdata
movzx eax [ esi ]
movzx ecx [ esi + 0x2 ]
add esi 0x4
mov [ eax + edi ] esi
add esi ecx
jmp rwxdata
call sub_4025c8
popad
jbe rwxdata
push 0x1
lea eax [ ebp - 0xf7c ]
push eax
mov esi [ ebp - 0x8 ]
add esi 0x4
call esi
push 0x3921bf03
push [ ebp - 0x4c1 ]
push 0x0
call sub_401b39
call eax
push eax
call [ ebp - 0x48c ]
sub eax 0x3
mov ecx [ ebp - 0x4 ]
cmp ecx eax
jne rwxdata
cmp [ esi ] 0x0
je rwxdata
je rwxdata
popad
arpl [ ebx ] bp
lea eax [ ebp - 0xfd0 ]
push eax
lea eax [ ebp - 0xfc0 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xb6d ]
push eax
push ebx
call [ ebp - 0xf4f ]
jmp rwxdata
popad
leave
retn
push [ ebp - 0x4 ]
call [ ebp - 0xedb ]
cmp [ ebp - 0x274 ] 0x1
je rwxdata
call $+5
pop eax
sub eax 0x11ce
push [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xf7c ]
push eax
call [ ebp - 0x278 ]
lea esi [ ebp - 0xf7c ]
call $+5
pop edi
sub edi 0x1157
call sub_402697
fld [ eax ]
push ecx
add eax 0x4b00e9
in eax 0x0
popfd
add ch bl
add dl ch
add ch bh
add [ edx - 0x13fefeff ] bl
add [ 0x900ef01 ] al
add [ esi ] esp
or eax 0x11006b01
add [ eax ] eax
add [ 0x19001e01 ] edx
add [ esi ] ebx
add [ 0x59000001 ] bl
cmp [ ebp - 0xea7 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add edi edx
add ecx 0x4
jmp rwxdata
push esi
call [ ebp - 0xea3 ]
jmp rwxdata
push esi
call [ ebp - 0xea7 ]
movzx edx [ ecx ]
mov [ edx + esi ] edi
cmp [ ecx + 0x2 ] 0x0
je rwxdata
sub_4025c8
call [ ebp - 0xedf ]
push 0x7e04376b
push eax
push 0x0
call sub_401b39
push 0x0
push 0x0
call eax
mov [ ebp - 0x6cd ] al
push 0xe6e5030e
push [ ebp - 0x4a1 ]
push 0x0
call sub_401b39
or eax eax
jne rwxdata
mov [ ebp - 0xef3 ] eax
lea eax [ ebp - 0xb81 ]
push eax
push 0x0
push 0x0
call [ ebp - 0xef7 ]
mov [ ebp - 0x4 ] eax
call [ ebp - 0xef3 ]
cmp eax 0xb7
je rwxdata
push 0x87d52c94
push [ ebp - 0x4c1 ]
push 0x0
call sub_401b39
popad
leave
retn
push [ ebp - 0x4 ]
call [ ebp - 0xedb ]
cmp [ ebp - 0x274 ] 0x1
je rwxdata
call $+5
pop eax
sub eax 0x11ce
push [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xf7c ]
push eax
call [ ebp - 0x278 ]
lea esi [ ebp - 0xf7c ]
call $+5
pop edi
sub edi 0x1157
call sub_402697
fld [ eax ]
push ecx
add eax 0x4b00e9
in eax 0x0
popfd
add ch bl
add dl ch
add ch bh
add [ edx - 0x13fefeff ] bl
add [ 0x900ef01 ] al
add [ esi ] esp
or eax 0x11006b01
add [ eax ] eax
add [ 0x19001e01 ] edx
add [ esi ] ebx
add [ 0x59000001 ] bl
cmp [ ebp - 0xea7 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add edi edx
add ecx 0x4
jmp rwxdata
push esi
call [ ebp - 0xea3 ]
jmp rwxdata
push esi
call [ ebp - 0xea7 ]
movzx edx [ ecx ]
mov [ edx + esi ] edi
cmp [ ecx + 0x2 ] 0x0
je rwxdata
sub_402697
pop ecx
cmp [ ebp - 0xea7 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add edi edx
add ecx 0x4
jmp rwxdata
push esi
call [ ebp - 0xea3 ]
jmp rwxdata
push esi
call [ ebp - 0xea7 ]
movzx edx [ ecx ]
mov [ edx + esi ] edi
cmp [ ecx + 0x2 ] 0x0
je rwxdata
popad
leave
retn
sub_4027d0
inc [ ebp + 0x1 ]
pop es
add [ eax + ebp * 2 + 0x61 ] dl
outsb
imul esi [ ebx + 0x73 ] 0x41
add al 0x1
add [ ecx ] al
inc edx
add al 0xb
add [ ebp + 0x73 ] ch
outsb
insd
jae rwxdata
call [ esi + 0x51 ]
jb rwxdata
cmp [ esi + 0xd09 ] 0x1
jne rwxdata
push 0x0
push esi
call [ esi + 0xf5 ]
add [ eax + 0x3f8be ] al
add [ ecx ] al
js rwxdata
cmp [ esi + 0x3fa ] 0x1
jne rwxdata
push esi
call [ esi + 0xd0a ]
cmp [ esi + 0x3f6 ] 0x1
jne rwxdata
mov eax 0x1
sti
add eax [ edi ]
add [ ecx ] dh
popad
jno rwxdata
cmp [ esi + 0xd08 ] 0x1
jne rwxdata
lea eax [ esi + 0x8bd ]
push eax
push 0x0
push esi
push [ esi + 0xd0e ]
push 0x0
push 0x0
call [ esi + 0x29 ]
or eax eax
je rwxdata
lea edi [ esi + 0x6b1 ]
push edi
lea edi [ esi + 0x5b2 ]
push edi
call [ esi + 0xcd ]
cmp [ esi + 0x3f7 ] 0x0
jle rwxdata
xor ecx [ gs : eax ]
or eax 0x10001
add ch dl
add ch al
add [ ebp - 0x75 ] dl
in al dx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x3f7 ] 0x0
jle rwxdata
leave
retn 0x4
cmp [ esi + 0x3f9 ] 0x1
jne rwxdata
lea edi [ esi + 0x5b2 ]
push edi
jne rwxdata
cmp [ esi + 0x3f8 ] 0x1
push esi
call [ esi + 0xd00 ]
push esi
call [ esi + 0xf1 ]
lea eax [ esi + 0x8c1 ]
push eax
push 0x0
push esi
push [ esi + 0xf9 ]
push 0x0
push 0x0
call [ esi + 0x29 ]
sub_402917
push esi
call [ esi + 0xc5 ]
push eax
push 0x0
push 0x1f0fff
push 0x3e8
call [ esi + 0xa5 ]
mov [ ebp - 0xf84 ] 0x0
jmp rwxdata
add [ ebp - 0xf84 ] 0x1
push [ ebp - 0xf84 ]
call sub_402917
js rwxdata
mov [ ebp - 0xf80 ] eax
push [ ebp + 0xc ]
push 0xd0f
push [ ebp - 0xf80 ]
push esi
call [ esi + 0xd1 ]
call sub_4029a0
fld [ eax ]
push ecx
add eax 0x4b00e9
in eax 0x0
add [ edx - 0x13fefeff ] bl
add [ 0x900ef01 ] al
add [ esi ] esp
or eax 0x11006b01
add [ eax ] eax
add [ 0x19001e01 ] edx
add [ esi ] ebx
add [ 0x59000001 ] bl
insb
outsd
jb rwxdata
mov edx [ ebp + 0x10 ]
movzx edx [ ecx + 0x2 ]
add eax edx
add ecx 0x4
jmp rwxdata
popfd
add ch bl
add dl ch
jb rwxdata
push edi
push 0xf74
push [ ebp - 0xf80 ]
push esi
call [ esi + 0xd1 ]
lea ecx [ ebp - 0xf7c ]
push ecx
push 0x0
push eax
push [ edi + 0xd5 ]
push 0x0
push 0x0
push [ ebp - 0xf80 ]
call [ esi + 0xc9 ]
push eax
push [ ebp - 0xf80 ]
call [ esi + 0xa1 ]
pop eax
cmp eax 0x0
je rwxdata
movzx eax [ edx ]
movzx ecx [ edx + 0x2 ]
add edx 0x4
add eax edi
push ecx
push eax
push edx
push edx
push ecx
push [ ebp - 0xf80 ]
push esi
call [ esi + 0xd1 ]
pop edx
pop ecx
mov [ ecx ] eax
pop ecx
add edx ecx
jmp rwxdata
movzx edx [ ecx ]
mov [ edx + edi ] eax
cmp [ ecx + 0x2 ] 0x0
je rwxdata
call [ esi + 0x95 ]
cmp eax 0x0
je rwxdata
js rwxdata
leave
retn 0xc
cmp [ edx ] 0x0
je rwxdata
add ch bh
or eax eax
jne rwxdata
add [ esi - 0x1 ] dl
xchg esi eax
lds eax [ eax ]
add [ eax ] al
sub_4029a0
pop ecx
mov edx [ ebp + 0x10 ]
movzx edx [ ecx + 0x2 ]
add eax edx
add ecx 0x4
jmp rwxdata
push edi
push 0xf74
push [ ebp - 0xf80 ]
push esi
call [ esi + 0xd1 ]
lea ecx [ ebp - 0xf7c ]
push ecx
push 0x0
push eax
push [ edi + 0xd5 ]
push 0x0
push 0x0
push [ ebp - 0xf80 ]
call [ esi + 0xc9 ]
push eax
push [ ebp - 0xf80 ]
call [ esi + 0xa1 ]
pop eax
cmp eax 0x0
je rwxdata
movzx eax [ edx ]
movzx ecx [ edx + 0x2 ]
add edx 0x4
add eax edi
push ecx
push eax
push edx
push edx
push ecx
push [ ebp - 0xf80 ]
push esi
call [ esi + 0xd1 ]
pop edx
pop ecx
mov [ ecx ] eax
pop ecx
add edx ecx
jmp rwxdata
movzx edx [ ecx ]
mov [ edx + edi ] eax
cmp [ ecx + 0x2 ] 0x0
je rwxdata
add [ ebp - 0xf84 ] 0x1
push [ ebp - 0xf84 ]
call sub_402917
js rwxdata
leave
retn 0xc
cmp [ edx ] 0x0
je rwxdata
add [ edx - 0x13fefeff ] bl
add [ 0x900ef01 ] al
add [ esi ] esp
or eax 0x11006b01
add [ eax ] eax
add [ 0x19001e01 ] edx
add [ esi ] ebx
add [ 0x59000001 ] bl
insb
outsd
jb rwxdata
popfd
add ch bl
add dl ch
jb rwxdata
call [ esi + 0x95 ]
cmp eax 0x0
je rwxdata
js rwxdata
mov [ ebp - 0xf80 ] eax
push [ ebp + 0xc ]
push 0xd0f
push [ ebp - 0xf80 ]
push esi
call [ esi + 0xd1 ]
call sub_4029a0
fld [ eax ]
push ecx
add eax 0x4b00e9
in eax 0x0
add ch bh
add [ esi - 0x1 ] dl
xchg esi eax
lds eax [ eax ]
add [ eax ] al
or eax eax
jne rwxdata
push eax
push 0x0
push 0x1f0fff
push 0x3e8
call [ esi + 0xa5 ]
mov [ ebp - 0xf84 ] 0x0
jmp rwxdata
sub_402a37
rol [ eax ] 0x1
cmp al 0x0
push ebp
mov ebp esp
add esp 0xfffffffc
push edi
push esi
mov esi [ ebp + 0x8 ]
push 0x40
push 0x3000
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
call [ esi + 0xb1 ]
push eax
lea edi [ ebp - 0x4 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
call [ esi + 0xb5 ]
pop eax
pop esi
pop edi
leave
retn 0x10
sub_402a77
lds eax [ eax ]
fwait
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffed4
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push 0x2
call [ esi + 0xb9 ]
mov [ ebp - 0x12c ] eax
mov [ ebp - 0x128 ] 0x128
lea ecx [ ebp - 0x128 ]
push ecx
push [ ebp - 0x12c ]
call [ esi + 0xbd ]
jmp rwxdata
cmp eax 0x1
je rwxdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x104 ]
push ecx
call [ esi + 0xcd ]
or eax eax
jne rwxdata
push [ ebp - 0x12c ]
call [ esi + 0xa1 ]
xor eax eax
pop esi
leave
retn 0xc
lea ecx [ ebp - 0x128 ]
push ecx
push [ ebp - 0x12c ]
call [ esi + 0xc1 ]
dec [ ebp + 0x10 ]
cmp [ ebp + 0x10 ] 0x0
ja rwxdata
push [ ebp - 0x12c ]
call [ esi + 0xa1 ]
mov eax [ ebp - 0x120 ]
pop esi
leave
retn 0xc
sub_402cbf
pop ecx
cmp [ esi + 0xaf6 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add eax edx
add ecx 0x4
jmp rwxdata
push edi
push 0xf74
push [ ebp - 0x10d8 ]
push esi
call [ esi + 0xd1 ]
lea ecx [ ebp - 0x10e0 ]
push ecx
push 0x0
push eax
push [ edi + 0xd9 ]
push 0x0
push 0x0
push [ ebp - 0x10d8 ]
call [ esi + 0xc9 ]
push eax
push [ ebp - 0x10d8 ]
call [ esi + 0xa1 ]
push 0x1f4
call [ esi + 0xa5 ]
pop eax
cmp eax 0x0
je rwxdata
push [ esi + 0xaf6 ]
push 0x108
push [ ebp - 0x10d8 ]
push esi
call [ esi + 0xd1 ]
mov [ edi + 0xaf6 ] eax
movzx edx [ ecx ]
mov [ edx + edi ] eax
cmp [ ecx + 0x2 ] 0x0
je rwxdata
add [ ebp - 0x10d4 ] 0x1
cmp [ esi + 0x441 ] 0x1
jne rwxdata
pop ecx
pop edx
pop edi
pop ebx
pop esi
leave
retn 0x4
lea eax [ ebp - 0x10cc ]
push eax
lea eax [ ebp - 0x10bc ]
push eax
push 0x0
push 0x0
push 0x4
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1078 ]
push eax
push 0x0
call [ edi + 0x2d ]
push [ ebp - 0x10cc ]
pop [ ebp - 0x10d8 ]
push [ ebp - 0x10d4 ]
lea eax [ esi + 0x442 ]
push eax
push esi
call [ esi + 0xc5 ]
mov [ ebp - 0x10d8 ] eax
or eax eax
jne rwxdata
push [ ebp - 0x10d8 ]
push 0x0
push 0x1f0fff
call [ esi + 0x95 ]
cmp eax 0x0
je rwxdata
mov [ ebp - 0x10d4 ] 0x0
cmp [ ebp - 0x10dc ] 0x3
jne rwxdata
mov [ ebp - 0x10d8 ] eax
jmp rwxdata
add [ ebp - 0x10dc ] 0x1
push 0x1b58
call [ esi + 0xa5 ]
jmp rwxdata
mov [ edi + 0x441 ] 0x0
jmp rwxdata
push [ esi + 0xd9 ]
push 0xd0f
push [ ebp - 0x10d8 ]
push esi
call [ esi + 0xd1 ]
call sub_402cbf
fld [ eax ]
push ecx
add eax 0x4b00e9
in eax 0x0
popfd
add ch bl
add dl ch
add ch bh
add [ edx - 0x13fefeff ] bl
add [ 0x900ef01 ] al
add [ esi ] esp
or eax 0x11006b01
add [ eax ] eax
add [ 0x19001e01 ] edx
add [ esi ] ebx
add [ 0x59000001 ] bl
sub_403630
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push sub_403e30
push 0x4
push 0x8
mov eax [ ebp - 0xc ]
add eax 0x28
push eax
call sub_403e00
mov ecx [ ebp - 0xc ]
mov [ ecx ] rwxdata
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
cmp [ ebp - 0x4 ] 0x4
jge rwxdata
mov edx [ ebp - 0xc ]
mov [ edx + 0x24 ] 0x0
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
cmp [ ebp - 0x8 ] 0x4
jge rwxdata
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + ecx * 8 + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + ecx * 2 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_4036cf
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
cmp [ ebp - 0x4 ] 0x4
jge rwxdata
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0xc ] 0x0
jmp rwxdata
cmp [ ebp - 0xc ] 0x4
jge rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x20 ]
lea ecx [ eax + edx * 8 + 0x4 ]
mov edx [ ebp - 0xc ]
movsx eax [ ecx + edx * 2 ]
cmp eax 0x1
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp rwxdata
cmp [ ebp + 0x8 ] 0x0
je rwxdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x18 ]
sub edx [ ebp - 0xc ]
imul edx [ ebp + 0x1c ]
add edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx + eax * 8 + 0x28 ] edx
mov edx [ ebp + 0x14 ]
sub edx [ ebp - 0x4 ]
imul edx [ ebp + 0x1c ]
add edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx + eax * 8 + 0x2c ] edx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x1c ]
add ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x18 ]
sub edx [ ebp - 0xc ]
imul edx [ ebp + 0x1c ]
add edx [ ebp + 0xc ]
add edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
imul eax [ ebp + 0x1c ]
add eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x18 ]
sub ecx [ ebp - 0xc ]
imul ecx [ ebp + 0x1c ]
add ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_403e40
mov ecx eax
call sub_403e80
push eax
mov ecx [ ebp + 0x8 ]
call sub_403e90
sub_4037d4
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403d7c
movsx eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x3
ja rwxdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x8 ]
jmp [ ecx * 4 + jump_table_4038ef ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1e ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x2
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1e ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x3
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x2
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x3
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1e ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x3
sub_4038ff
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403d7c
movsx eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x3
ja rwxdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x8 ]
jmp [ ecx * 4 + jump_table_403a1a ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1e ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x2
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x2
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1e ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x2
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x3
sub_403a2a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403d7c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x16 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1e ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x48 ] 0x2
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] 0x3
mov esp ebp
pop ebp
retn 0x10
sub_403a77
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403d7c
movsx eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1a ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] 0x3
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0x3
jmp rwxdata
cmp [ ebp - 0x8 ] 0x1
je rwxdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xe ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] 0x3
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0x2
jmp rwxdata
sub_403b15
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403d7c
movsx eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x16 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] 0x3
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0x3
jmp rwxdata
cmp [ ebp - 0x8 ] 0x1
je rwxdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1e ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] 0x3
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0x2
jmp rwxdata
sub_403bb3
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403d7c
movsx eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xe ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x6 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] 0x3
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0x1
jmp rwxdata
cmp [ ebp - 0x8 ] 0x1
je rwxdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0x3
jmp rwxdata
sub_403c51
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403d7c
movsx eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x3
ja rwxdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x8 ]
jmp [ ecx * 4 + jump_table_403d6c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1e ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x3
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x2
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x3
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x3
sub_403d7c
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
cmp [ ebp - 0x4 ] 0x4
jge rwxdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
cmp [ ebp - 0x8 ] 0x4
jge rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
lea ecx [ eax + edx * 8 + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + edx * 2 ] 0x0
jmp rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_403dd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4036ae
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call Ordinal_MFC42_825
add esp 0x4
sub_403e00
push ebp
mov ebp esp
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
jmp rwxdata
mov eax [ ebp + 0x10 ]
sub eax 0x1
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x10 ] 0x0
jl rwxdata
sub_403e40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0xc ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
sub_403e90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ Rectangle@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_403eea
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_561
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403f4a
push ebp
mov ebp esp
push 0xffffffff
push sub_4070f6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x144
mov [ ebp - 0x14c ] ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx [ ebp - 0x14c ]
call Ordinal_MFC42_2621
push rwxdata
mov ecx [ ebp - 0x14c ]
call Ordinal_MFC42_6117
push 0x4
mov ecx [ ebp - 0x14c ]
call Ordinal_MFC42_4159
push 0x6c
call sub_404250
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x140 ] 0x0
je rwxdata
mov [ ebp - 0x150 ] 0x0
push rwxdata
push rwxdata
push rwxdata
push 0x80
mov ecx [ ebp - 0x140 ]
call Ordinal_MFC42_520
mov [ ebp - 0x150 ] eax
jmp rwxdata
push 0x0
mov edx [ ebp - 0x14c ]
mov ecx [ edx + 0x20 ]
call Ordinal_MFC42_6215
mov eax [ ebp - 0x14c ]
mov ecx [ eax + 0x20 ]
call sub_404290
push 0x408
push rwxdata
push rwxdata
lea ecx [ ebp - 0x138 ]
push ecx
call [ sprintf@IAT ]
add esp 0x10
mov [ ebp - 0x148 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call Ordinal_MFC42_617
mov eax [ ebp - 0x148 ]
mov [ ebp - 0x144 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call Ordinal_MFC42_617
mov eax [ ebp - 0x144 ]
jmp rwxdata
mov eax [ ebp - 0x150 ]
mov [ ebp - 0x13c ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x13c ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14c ]
call Ordinal_MFC42_986
lea ecx [ ebp - 0x34 ]
call Ordinal_MFC42_296
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x14c ]
call Ordinal_MFC42_5214
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx [ ebp - 0x14c ]
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4040d5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x64
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_324
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40412b
push ebp
mov ebp esp
push 0xffffffff
push sub_407109
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x64
mov [ ebp - 0x70 ] ecx
lea ecx [ ebp - 0x6c ]
call sub_4040d5
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call Ordinal_MFC42_2514
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6c ]
call sub_404200
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_404180
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4041b0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_4041d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404200
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_404300
push ebp
mov ebp esp
push 0xffffffff
push sub_40712a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x54
call sub_404250
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je rwxdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_404398
mov [ ebp - 0x18 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4043d3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_4823
test eax eax
jne rwxdata
mov eax 0x1
xor eax eax
jmp rwxdata
mov esp ebp
pop ebp
retn
sub_404410
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4043b7
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_404440
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
and eax 0x1
neg eax
sbb eax eax
inc eax
mov esp ebp
pop ebp
retn
sub_404672
push ebp
mov ebp esp
push 0xffffffff
push sub_40714a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x48
call sub_404250
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je rwxdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_404cf2
mov [ ebp - 0x18 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40470a
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
cmp [ ebp - 0x4 ] 0x19
jge rwxdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
cmp [ ebp - 0x8 ] 0xb
jge rwxdata
jmp rwxdata
cmp [ ebp - 0x4 ] 0x18
je rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0xb
mov edx [ ebp - 0x8 ]
mov [ ecx + edx + rwxdata ] 0x0
mov edx [ ebp - 0x4 ]
imul edx edx 0xb
mov eax [ ebp - 0x8 ]
mov [ edx + eax + rwxdata ] 0x1
jmp rwxdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp rwxdata
sub_404772
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
call strlen
add esp 0x4
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
movsx eax [ edx ]
cmp eax 0x2d
je rwxdata
mov [ ebp - 0xc ] 0x1
push 0x5
push rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
push eax
call sub_405e50
add esp 0xc
test eax eax
jne rwxdata
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx ]
cmp edx 0x2f
jne rwxdata
push 0x4
push rwxdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
push ecx
call sub_405e50
add esp 0xc
test eax eax
jne rwxdata
mov ecx [ ebp + 0xc ]
push ecx
push rwxdata
mov edx [ ebp - 0x8 ]
add edx 0x6
push edx
call [ sscanf@IAT ]
add esp 0xc
mov eax [ ebp + 0xc ]
push eax
call strlen
add esp 0x4
add eax 0x6
mov [ ebp - 0xc ] eax
jmp rwxdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x1
mov [ ebp - 0xc ] 0x5
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
jmp rwxdata
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov edx [ ebp - 0x8 ]
movsx eax [ edx ]
cmp eax 0x2d
je rwxdata
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
sub_404880
push ebp
mov ebp esp
sub esp 0x10c
push edi
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10c ] eax
cmp [ ebp - 0x10c ] 0x6
ja rwxdata
mov [ ebp - 0x104 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x103 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x108 ] 0x0
lea edx [ ebp - 0x108 ]
push edx
lea eax [ ebp - 0x104 ]
push eax
push rwxdata
call sub_404772
add esp 0xc
xor eax eax
mov ecx [ ebp - 0x10c ]
jmp [ ecx * 4 + jump_table_40496f ]
mov [ rwxdata ] rwxdata
mov eax [ rwxdata ]
jmp rwxdata
mov [ rwxdata ] rwxdata
mov eax [ rwxdata ]
jmp rwxdata
mov [ rwxdata ] rwxdata
mov eax [ rwxdata ]
jmp rwxdata
mov [ rwxdata ] rwxdata
mov eax [ rwxdata ]
jmp rwxdata
mov [ rwxdata ] rwxdata
mov eax [ rwxdata ]
jmp rwxdata
mov [ rwxdata ] rwxdata
mov eax [ rwxdata ]
jmp rwxdata
mov [ rwxdata ] rwxdata
mov eax [ rwxdata ]
jmp rwxdata
pop edi
mov esp ebp
pop ebp
retn
sub_40498b
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call strlen
add esp 0x4
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
push ecx
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
jne rwxdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call strcpy
add esp 0x8
xor eax eax
jmp rwxdata
mov edx [ ebp - 0x4 ]
push edx
call [ free@IAT ]
add esp 0x4
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx ]
cmp edx 0x2e
jne rwxdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx ]
cmp edx 0x5c
je rwxdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp rwxdata
mov edx [ ebp - 0x10 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x5c
je rwxdata
mov eax [ ebp - 0x10 ]
movsx ecx [ eax ]
cmp ecx 0x2f
jne rwxdata
mov edx [ ebp - 0x10 ]
movsx eax [ edx ]
test eax eax
je rwxdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp rwxdata
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx + 0x1 ]
cmp edx 0x2f
jne rwxdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x4 ]
je rwxdata
mov edx [ ebp - 0x10 ]
movsx eax [ edx ]
cmp eax 0x5c
je rwxdata
mov edx [ ebp - 0x10 ]
movsx eax [ edx ]
cmp eax 0x5c
je rwxdata
mov eax [ ebp - 0x10 ]
mov cl [ eax ]
mov [ ebp - 0x8 ] cl
mov edx [ ebp - 0x10 ]
mov [ edx ] 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call [ CreateDirectoryA@IAT ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov dl [ ebp - 0x8 ]
mov [ ecx ] dl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp rwxdata
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx ]
cmp edx 0x2f
jne rwxdata
mov eax [ ebp - 0x10 ]
movsx ecx [ eax - 0x1 ]
cmp ecx 0x2e
je rwxdata
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx ]
cmp edx 0x2f
jne rwxdata
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx + 0x1 ]
test edx edx
jne rwxdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp rwxdata
mov edx [ ebp - 0x10 ]
movsx eax [ edx - 0x1 ]
cmp eax 0x3a
jne rwxdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp rwxdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call [ CreateDirectoryA@IAT ]
mov [ ebp - 0xc ] eax
jmp rwxdata
sub_404b05
push ebp
mov ebp esp
push 0xffffffff
push sub_407154
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
push eax
call strlen
add esp 0x4
add eax 0x168
push eax
call Ordinal_MFC42_823
add esp 0x4
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
push edx
call strlen
add esp 0x4
add eax 0xa
push eax
call Ordinal_MFC42_823
add esp 0x4
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
cmp edx 0x5c
je rwxdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call strcpy
add esp 0x8
push rwxdata
mov eax [ ebp - 0x14 ]
push eax
call strcpy
add esp 0x8
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call strcat
add esp 0x8
jmp rwxdata
push rwxdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ strstr@IAT ]
add esp 0x8
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x24
push 0x3a
mov edx [ ebp - 0x14 ]
push edx
call [ strrchr@IAT ]
add esp 0x8
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je rwxdata
push rwxdata
mov eax [ ebp - 0x1c ]
push eax
call strcpy
add esp 0x8
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call strcat
add esp 0x8
mov eax [ ebp + 0xc ]
and eax 0xff
test eax eax
je rwxdata
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0x1 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
call strcpy
add esp 0x8
jmp rwxdata
mov ecx [ ebp - 0x1c ]
push ecx
call sub_40498b
add esp 0x4
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
push ecx
call [ CreateFileA@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
jne rwxdata
jmp rwxdata
call [ GetLastError@IAT ]
push eax
mov edx [ ebp - 0x1c ]
push edx
push rwxdata
call [ printf@IAT ]
add esp 0xc
mov eax [ ebp - 0x20 ]
push eax
call [ CloseHandle@IAT ]
jmp rwxdata
call [ GetLastError@IAT ]
push eax
mov edx [ ebp - 0x1c ]
push edx
push rwxdata
call [ printf@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
push edx
call Ordinal_MFC42_825
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404cf2
push ebp
mov ebp esp
push 0xffffffff
push sub_407167
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call Ordinal_MFC42_560
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x44 ] 0x0
call sub_40470a
call [ rand@IAT ]
and eax 0x80000007
jns rwxdata
mov [ rwxdata ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
dec eax
or eax 0xfffffff8
inc eax
sub_404d96
push ebp
mov ebp esp
sub esp 0x28
push esi
mov [ ebp - 0xc ] 0x0
jmp rwxdata
cmp [ ebp - 0xc ] 0xb
jge rwxdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x17
jmp rwxdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx + rwxdata ]
cmp edx 0x1
jne rwxdata
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
cmp [ ebp - 0xc ] 0x9
jne rwxdata
jmp rwxdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
and edx 0xff
test edx edx
je rwxdata
jmp rwxdata
mov [ ebp - 0x10 ] 0x0
jmp rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x10 ] 0xb
jge rwxdata
cmp [ ebp - 0x1c ] 0xb
jge rwxdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
jmp rwxdata
mov ecx [ ebp - 0xc ]
imul ecx ecx 0xb
mov edx [ ebp - 0x10 ]
mov [ ecx + edx + rwxdata ] 0x1
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0xb
mov edx [ ebp - 0x1c ]
xor eax eax
mov al [ ecx + edx + rwxdata ]
cmp eax 0x1
jne rwxdata
cmp [ ebp - 0x14 ] 0x0
jl rwxdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x1c ] 0xa
jne rwxdata
mov [ ebp - 0x8 ] 0x1
jmp rwxdata
mov [ ebp - 0x18 ] 0x0
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x24 ] 0x0
jmp rwxdata
cmp [ ebp - 0x18 ] 0xb
jge rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x24 ] 0xb
jge rwxdata
jmp rwxdata
mov eax [ ebp - 0x14 ]
imul eax eax 0xb
mov ecx [ ebp - 0x14 ]
add ecx 0x1
imul ecx ecx 0xb
mov edx [ ebp - 0x18 ]
mov esi [ ebp - 0x18 ]
mov al [ eax + esi + rwxdata ]
mov [ ecx + edx + rwxdata ] al
jmp rwxdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
imul edx edx 0xb
mov eax [ ebp - 0x24 ]
mov [ edx + eax + rwxdata ] 0x1
jmp rwxdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x20 ] 0x0
jl rwxdata
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x28 ] 0x0
jmp rwxdata
cmp [ ebp - 0x28 ] 0xb
jge rwxdata
jmp rwxdata
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0xb
mov edx [ ebp - 0x20 ]
add edx 0x1
imul edx edx 0xb
mov eax [ ebp - 0x28 ]
mov esi [ ebp - 0x28 ]
mov cl [ ecx + esi + rwxdata ]
mov [ edx + eax + rwxdata ] cl
jmp rwxdata
mov edx [ ebp - 0x20 ]
sub edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
sub_404f6d
push ebp
mov ebp esp
push 0xffffffff
push sub_4071b0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
mov [ ebp - 0x64 ] ecx
mov ecx [ ebp - 0x64 ]
call sub_405ea0
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x64 ]
xor ecx ecx
mov cl [ eax + 0x44 ]
test ecx ecx
jne rwxdata
lea ecx [ ebp - 0x5c ]
call sub_406130
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_323
mov [ ebp - 0x4 ] 0x1
push 0x0
lea ecx [ ebp - 0x44 ]
call sub_4061d0
mov edx [ rwxdata ]
sub edx [ rwxdata ]
push edx
mov eax [ rwxdata ]
sub eax [ rwxdata ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x5c ]
call sub_4061a0
lea edx [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x44 ]
call sub_406230
mov [ ebp - 0x4c ] eax
push 0xffffff
mov eax [ rwxdata ]
sub eax [ rwxdata ]
push eax
mov ecx [ rwxdata ]
sub ecx [ rwxdata ]
push ecx
push 0x0
push 0x0
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_2753
lea ecx [ ebp - 0x24 ]
call sub_405ed0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x14 ]
call sub_4060a0
mov [ ebp - 0x4 ] 0x3
push 0x2b86f5
lea ecx [ ebp - 0x14 ]
call sub_406110
lea ecx [ ebp - 0x1c ]
call sub_4060a0
mov [ ebp - 0x4 ] 0x4
push 0x2b0e91
lea ecx [ ebp - 0x1c ]
call sub_406110
lea ecx [ ebp - 0x2c ]
call sub_4060a0
mov [ ebp - 0x4 ] 0x5
push 0x570e0f
lea ecx [ ebp - 0x2c ]
call sub_406110
lea ecx [ ebp - 0x34 ]
call sub_4060a0
mov [ ebp - 0x4 ] 0x6
push 0x218ec7
lea ecx [ ebp - 0x34 ]
call sub_406110
push 0x212217
push 0x2
push 0x0
lea ecx [ ebp - 0x24 ]
call sub_406070
lea edx [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_5788
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_5787
mov ecx [ rwxdata ]
push ecx
call sub_404880
add esp 0x4
mov [ ebp - 0x54 ] eax
mov edx [ rwxdata ]
push edx
mov eax [ rwxdata ]
push eax
push 0x19
mov ecx [ ebp - 0x54 ]
mov edx [ ecx + 0x4c ]
push edx
mov eax [ ebp - 0x54 ]
mov ecx [ eax + 0x48 ]
push ecx
mov edx [ rwxdata ]
push edx
mov eax [ rwxdata ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx [ ebp - 0x54 ]
call sub_4036cf
mov [ ebp - 0x48 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x64 ]
mov [ edx + 0x44 ] 0x1
push rwxdata
mov ecx [ ebp - 0x64 ]
call sub_406300
mov eax [ rwxdata ]
add eax 0x64
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
mov [ rwxdata ] ecx
cmp [ ebp - 0x48 ] 0x18
jge rwxdata
call sub_404d96
push 0xcc0020
push 0x0
push 0x0
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ rwxdata ]
sub ecx [ rwxdata ]
push ecx
mov edx [ rwxdata ]
sub edx [ rwxdata ]
push edx
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_4062c0
lea ecx [ ebp - 0x24 ]
call Ordinal_MFC42_2414
lea ecx [ ebp - 0x14 ]
call Ordinal_MFC42_2414
lea ecx [ ebp - 0x5c ]
call Ordinal_MFC42_2414
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_2405
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x34 ]
call sub_4060f0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x2c ]
call sub_4060f0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x1c ]
call sub_4060f0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x14 ]
call sub_4060f0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x24 ]
call sub_406050
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_640
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x5c ]
call sub_406180
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x60 ] 0x0
jmp rwxdata
cmp [ ebp - 0x60 ] 0xb
jge rwxdata
jmp rwxdata
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0xb
mov edx [ ebp - 0x60 ]
xor eax eax
mov al [ ecx + edx + rwxdata ]
test eax eax
jne rwxdata
mov edx [ ebp - 0x48 ]
add edx 0x1
mov [ ebp - 0x48 ] edx
jmp rwxdata
cmp [ ebp - 0x48 ] 0x16
jne rwxdata
mov eax [ ebp - 0x60 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x48 ] 0x13
jl rwxdata
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_5787
cmp [ ebp - 0x48 ] 0xf
jl rwxdata
cmp [ ebp - 0x48 ] 0x15
jg rwxdata
mov ecx [ ebp - 0x48 ]
add ecx 0x1
imul ecx ecx 0x19
mov edx [ rwxdata ]
add edx ecx
push edx
mov eax [ ebp - 0x60 ]
add eax 0x1
imul eax eax 0x19
mov ecx [ rwxdata ]
add ecx eax
push ecx
mov edx [ ebp - 0x48 ]
imul edx edx 0x19
mov eax [ rwxdata ]
add eax edx
push eax
mov ecx [ ebp - 0x60 ]
imul ecx ecx 0x19
mov edx [ rwxdata ]
add edx ecx
push edx
lea ecx [ ebp - 0x44 ]
call sub_406290
cmp [ ebp - 0x48 ] 0x14
jg rwxdata
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_5787
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_5787
sub_4052d9
push ebp
mov ebp esp
push 0xffffffff
push sub_4071ba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1234
call sub_406eb0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1244 ] ecx
mov [ ebp - 0x122c ] 0x35
mov [ ebp - 0x1240 ] 0xeb32
mov [ ebp - 0x1234 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx - 0x1 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] rwxdata
mov [ ebp - 0x1234 ] 0x1
jmp rwxdata
cmp [ ebp - 0x1234 ] 0xf
jge rwxdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0xc ]
shl eax 0x1
push eax
push 0x0
call [ GlobalAlloc@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1234 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1244 ]
mov [ eax + 0x44 ] 0x0
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx ]
test edx edx
je rwxdata
mov edx [ ebp - 0x1234 ]
cmp edx [ ebp + 0xc ]
jge rwxdata
call [ rand@IAT ]
cdq
mov ecx 0x7
idiv ecx
mov [ rwxdata ] edx
jmp rwxdata
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax - 0x1 ]
mov edx [ ebp - 0x1c ]
xor eax eax
mov al [ edx ]
cmp eax ecx
jne rwxdata
mov [ ebp - 0x1228 ] 0xf
mov ecx 0x440
xor eax eax
lea edi [ ebp - 0x1227 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x124 ] 0xf
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x123 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x1230 ] edx
mov eax [ ebp - 0x1244 ]
xor ecx ecx
mov cl [ eax + 0x44 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x1234 ]
xor ecx ecx
mov cl [ eax ]
sar ecx 0x4
and ecx 0xf
add ecx 0x1e
mov edx [ ebp - 0x1234 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx * 2 ] cl
mov ecx [ ebp - 0x1c ]
add ecx [ ebp - 0x1234 ]
xor edx edx
mov dl [ ecx ]
and edx 0xf
add edx 0x1e
mov eax [ ebp - 0x1234 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax * 2 + 0x1 ] dl
jmp rwxdata
mov ecx [ ebp - 0x1234 ]
add ecx 0x1
mov [ ebp - 0x1234 ] ecx
call sub_40470a
mov ecx [ ebp - 0x1244 ]
mov [ ecx + 0x44 ] 0x1
jmp rwxdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x123c ] eax
mov edx [ ebp - 0x1230 ]
mov [ ebp - 0x123c ] edx
jmp rwxdata
mov ecx [ ebp - 0x1234 ]
add ecx 0x1
mov [ ebp - 0x1234 ] ecx
mov ecx [ ebp - 0x1234 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
lea ecx [ ebp - 0x1228 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1234 ] 0x0
jmp rwxdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1244 ]
xor ecx ecx
mov cl [ eax + 0x44 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x1234 ]
mov eax [ ebp - 0x14 ]
mov cl [ eax + edx * 2 ]
xor cl [ ebp - 0x122c ]
mov edx [ ebp - 0x1234 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx * 2 ] cl
mov ecx [ ebp - 0x1234 ]
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + ecx * 2 ]
sub eax 0x1e
shl eax 0x4
mov ecx [ ebp - 0x123c ]
mov [ ecx ] al
mov edx [ ebp - 0x1234 ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + edx * 2 + 0x1 ]
sub ecx 0x1e
mov edx [ ebp - 0x123c ]
xor eax eax
mov al [ edx ]
xor eax ecx
mov ecx [ ebp - 0x123c ]
mov [ ecx ] al
mov edx [ ebp - 0x123c ]
add edx 0x1
mov [ ebp - 0x123c ] edx
jmp rwxdata
jmp rwxdata
push 0x1
push rwxdata
call sub_404b05
add esp 0x8
mov edx 0x1
test edx edx
je rwxdata
mov eax [ ebp - 0x1234 ]
add eax 0x1
mov [ ebp - 0x1234 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x1230 ]
inc eax
mov ebx 0x24
add eax ebx
call eax
sub_4055ed
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
mov eax [ rwxdata ]
add eax 0x19
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
push ecx
call sub_404880
add esp 0x4
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov ax [ edx + 0x24 ]
push eax
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
call [ edx ]
mov eax [ rwxdata ]
push eax
mov ecx [ rwxdata ]
push ecx
push 0x19
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x48 ]
push edx
mov eax [ rwxdata ]
push eax
mov ecx [ rwxdata ]
push ecx
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_4036cf
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
cmp [ ebp - 0x4 ] 0x4
jge rwxdata
cmp [ rwxdata ] 0xa
jle rwxdata
mov eax [ rwxdata ]
push eax
call sub_404880
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov eax [ eax + ecx * 8 + 0x28 ]
sub eax [ rwxdata ]
cdq
mov ecx 0x19
idiv ecx
mov [ ebp - 0x10 ] eax
mov edx [ rwxdata ]
push edx
call sub_404880
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov eax [ eax + ecx * 8 + 0x2c ]
sub eax [ rwxdata ]
cdq
mov ecx 0x19
idiv ecx
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
imul edx edx 0xb
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx + eax + rwxdata ]
test ecx ecx
jne rwxdata
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
push 0x1
mov ecx [ ebp - 0x20 ]
call sub_406320
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_406390
cmp [ rwxdata ] 0x64
jge rwxdata
jmp rwxdata
mov [ ebp - 0x14 ] 0x0
jmp rwxdata
push 0x0
mov ecx [ ebp - 0x20 ]
call sub_405bc0
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x14 ] 0x4
jge rwxdata
call [ rand@IAT ]
imul eax eax 0x3
cdq
mov ecx 0x7
idiv ecx
mov [ rwxdata ] edx
mov edx [ rwxdata ]
push edx
call sub_404880
add esp 0x4
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
sub eax [ rwxdata ]
cdq
sub eax edx
sar eax 0x1
sub eax 0xc
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ rwxdata ] eax
jmp rwxdata
mov eax [ rwxdata ]
push eax
call sub_404880
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov eax [ eax + ecx * 8 + 0x28 ]
sub eax [ rwxdata ]
cdq
mov ecx 0x19
idiv ecx
mov [ ebp - 0x1c ] eax
mov edx [ rwxdata ]
push edx
call sub_404880
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov eax [ eax + ecx * 8 + 0x2c ]
sub eax [ rwxdata ]
cdq
mov ecx 0x19
idiv ecx
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
sub edx 0x1
imul edx edx 0xb
mov eax [ ebp - 0x1c ]
mov [ edx + eax + rwxdata ] 0x0
jmp rwxdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
sub_405804
push ebp
mov ebp esp
push 0xffffffff
push sub_4071cf
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call Ordinal_MFC42_4464
cmp eax 0xffffffff
jne rwxdata
mov [ rwxdata ] 0x0
push 0x0
push 0x96
push 0x1
mov ecx [ ebp - 0x20 ]
call sub_406340
lea ecx [ ebp - 0x14 ]
push ecx
call [ time@IAT ]
add esp 0x4
lea edx [ ebp - 0x14 ]
push edx
call [ gmtime@IAT ]
add esp 0x4
mov eax [ eax ]
push eax
call [ srand@IAT ]
add esp 0x4
push 0x24
call Ordinal_MFC42_823
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
je rwxdata
or eax 0xffffffff
jmp rwxdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_406810
mov [ ebp - 0x24 ] eax
jmp rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] edx
xor eax eax
sub_4058cf
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x20 ] ecx
mov eax [ rwxdata ]
push eax
call sub_404880
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
sub edx 0x25
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x24 ] 0x3
ja rwxdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_406370
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x24 ]
jmp [ eax * 4 + jump_table_405b17 ]
mov ecx [ ebp - 0x4 ]
mov dx [ ecx + 0x24 ]
add dx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] dx
mov ecx [ ebp - 0x4 ]
movsx eax [ ecx + 0x24 ]
mov ecx [ ebp - 0x4 ]
cdq
idiv [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] dx
jmp rwxdata
mov ecx [ rwxdata ]
cmp ecx [ rwxdata ]
jle rwxdata
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov [ ebp - 0x14 ] 0x0
jmp rwxdata
mov eax [ rwxdata ]
add eax 0x19
mov [ rwxdata ] eax
jmp rwxdata
mov edx [ rwxdata ]
sub edx 0x19
mov [ rwxdata ] edx
cmp [ ebp - 0x8 ] 0x4
jge rwxdata
cmp [ ebp - 0x14 ] 0x4
jge rwxdata
mov ecx [ rwxdata ]
cmp ecx [ rwxdata ]
jge rwxdata
mov edx [ rwxdata ]
push edx
call sub_404880
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov eax [ eax + ecx * 8 + 0x28 ]
sub eax [ rwxdata ]
cdq
mov ecx 0x19
idiv ecx
mov [ ebp - 0x10 ] eax
mov edx [ rwxdata ]
push edx
call sub_404880
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov eax [ eax + ecx * 8 + 0x2c ]
sub eax [ rwxdata ]
cdq
mov ecx 0x19
idiv ecx
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x10 ]
sub edx 0x1
test edx edx
jl rwxdata
mov ecx [ rwxdata ]
cmp ecx [ rwxdata ]
jle rwxdata
mov edx [ rwxdata ]
push edx
call sub_404880
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov eax [ eax + ecx * 8 + 0x28 ]
sub eax [ rwxdata ]
cdq
mov ecx 0x19
idiv ecx
mov [ ebp - 0x1c ] eax
mov edx [ rwxdata ]
push edx
call sub_404880
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov eax [ eax + ecx * 8 + 0x2c ]
sub eax [ rwxdata ]
cdq
mov ecx 0x19
idiv ecx
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x1c ]
add edx 0x1
cmp edx 0xa
jg rwxdata
mov eax [ rwxdata ]
sub eax 0x19
mov [ rwxdata ] eax
jmp rwxdata
mov edx [ rwxdata ]
add edx 0x19
mov [ rwxdata ] edx
jmp rwxdata
mov eax [ ebp - 0xc ]
imul eax eax 0xb
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ eax + ecx + rwxdata ]
test edx edx
jne rwxdata
mov eax [ rwxdata ]
add eax 0x19
mov [ rwxdata ] eax
mov edx [ rwxdata ]
sub edx 0x19
mov [ rwxdata ] edx
jmp rwxdata
mov eax [ ebp - 0x18 ]
imul eax eax 0xb
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ eax + ecx + rwxdata ]
test edx edx
jne rwxdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ rwxdata ]
add eax 0x19
mov [ rwxdata ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
jmp rwxdata
mov eax [ rwxdata ]
sub eax 0x19
mov [ rwxdata ] eax
jmp rwxdata
sub_405b39
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0x0
push edx
push ecx
push ebx
mov eax 0x564d5868
mov ebx 0x0
mov ecx 0xa
mov edx 0x5658
in eax dx
cmp ebx 0x564d5868
sete [ ebp - 0x1c ]
pop ebx
pop ecx
pop edx
mov [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
mov al [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405bc0
push ebp
mov ebp esp
sub esp 0x168
push esi
push edi
mov [ ebp - 0x168 ] ecx
mov ecx 0x6
mov esi rwxdata
lea edi [ ebp - 0x15c ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea eax [ ebp - 0x140 ]
push eax
lea ecx [ ebp - 0x15c ]
push ecx
call [ FindFirstFileA@IAT ]
mov [ ebp - 0x160 ] eax
push 0x0
push rwxdata
call sub_404b05
add esp 0x8
lea edx [ ebp - 0x15c ]
push edx
call strlen
add esp 0x4
mov eax 0x1
test eax eax
je rwxdata
xor ecx ecx
test ecx ecx
je rwxdata
lea ecx [ ebp - 0x15c ]
mov [ ebp - 0x164 ] ecx
mov edx rwxdata
mov eax [ ebp - 0x164 ]
mov [ eax ] edx
push 0x1915
push rwxdata
mov ecx [ ebp - 0x168 ]
call sub_4052d9
push 0x0
call [ exit@IAT ]
push 0x0
push 0x0
push rwxdata
mov ecx [ ebp - 0x168 ]
call Ordinal_MFC42_4224
sub_405c80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403630
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x50 ] 0x4
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405cb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405e30
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call Ordinal_MFC42_825
add esp 0x4
sub_405ce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403630
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x50 ] 0x1
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405d10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403630
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x50 ] 0x2
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405d40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405e30
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call Ordinal_MFC42_825
add esp 0x4
sub_405d70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403630
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x50 ] 0x2
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405da0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403630
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x50 ] 0x4
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405dd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403630
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x50 ] 0x4
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405e00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403630
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x50 ] 0x2
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405e70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404d61
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_405ef0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405f20
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405f40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405f70
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_405f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405fc0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_405fc0
push ebp
mov ebp esp
push 0xffffffff
push sub_4071e9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] rwxdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call Ordinal_MFC42_2414
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_405f70
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_406020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_406050
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_406070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ CreatePen@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_1641
mov esp ebp
pop ebp
retn 0xc
sub_4060c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4060f0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_406110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call [ CreateSolidBrush@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_1641
mov esp ebp
pop ebp
retn 0x4
sub_406150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_406180
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_4061a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push eax
call [ CreateCompatibleBitmap@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_1641
mov esp ebp
pop ebp
retn 0xc
sub_4061d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_406200
push eax
call [ CreateCompatibleDC@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_1640
mov esp ebp
pop ebp
retn 0x4
sub_406200
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne rwxdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_406230
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_406260
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call Ordinal_MFC42_5785
mov esp ebp
pop ebp
retn 0x4
sub_406260
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne rwxdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_406290
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ Rectangle@IAT ]
mov esp ebp
pop ebp
retn 0x10
sub_4062c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov ecx [ ebp + 0x18 ]
call sub_406200
push eax
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ BitBlt@IAT ]
mov esp ebp
pop ebp
retn 0x20
sub_406300
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x20 ]
push edx
call [ GetClientRect@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_406320
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x20 ]
push edx
call [ InvalidateRect@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_406340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
push ecx
call [ SetTimer@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_4063b0
push ebp
mov ebp esp
push 0xffffffff
push sub_40720a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x1e0
call sub_404250
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je rwxdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_40644b
mov [ ebp - 0x18 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40644b
push ebp
mov ebp esp
push 0xffffffff
push sub_40722c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call Ordinal_MFC42_366
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
call Ordinal_MFC42_529
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call Ordinal_MFC42_554
mov eax [ ebp - 0x10 ]
mov [ eax ] rwxdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4064b7
push ebp
mov ebp esp
push 0xffffffff
push sub_40724e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] rwxdata
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call Ordinal_MFC42_807
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
call Ordinal_MFC42_796
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call Ordinal_MFC42_674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_406520
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call Ordinal_MFC42_4457
cmp eax 0xffffffff
jne rwxdata
push 0xe800
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_403e40
sub esp 0x10
mov ecx esp
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
push 0x50402834
push 0x800
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x140
call Ordinal_MFC42_6625
test eax eax
je rwxdata
or eax 0xffffffff
jmp rwxdata
or eax 0xffffffff
jmp rwxdata
push 0x80
mov ecx [ ebp - 0x14 ]
add ecx 0x140
call sub_4067f0
test eax eax
jne rwxdata
mov esp ebp
pop ebp
retn 0x4
push 0xe801
push 0x50008200
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0xc0
call Ordinal_MFC42_2117
test eax eax
je rwxdata
or eax 0xffffffff
jmp rwxdata
push 0x4
push rwxdata
mov ecx [ ebp - 0x14 ]
add ecx 0xc0
call Ordinal_MFC42_6000
test eax eax
jne rwxdata
push 0xf000
mov ecx [ ebp - 0x14 ]
add ecx 0x140
call Ordinal_MFC42_2626
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x140
call Ordinal_MFC42_6215
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0xc0
call Ordinal_MFC42_6215
push 0xf000
mov ecx [ ebp - 0x14 ]
call Ordinal_MFC42_2627
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
add eax 0x140
push eax
mov ecx [ ebp - 0x14 ]
call Ordinal_MFC42_2494
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_40670e
xor eax eax
sub_406656
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_5252
test eax eax
jne rwxdata
xor ecx ecx
mov cl [ rwxdata ]
and ecx 0x1
test ecx ecx
jne rwxdata
xor eax eax
jmp rwxdata
xor eax eax
mov al [ rwxdata ]
and eax 0x2
test eax eax
jne rwxdata
mov dl [ rwxdata ]
or dl 0x1
mov [ rwxdata ] dl
push 0x0
call [ GetSystemMetrics@IAT ]
mov [ rwxdata ] eax
mov esp ebp
pop ebp
retn 0x4
mov eax [ rwxdata ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] eax
mov eax [ rwxdata ]
cdq
mov ecx 0x9
idiv ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x11f
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] 0x264
mov eax 0x1
mov cl [ rwxdata ]
or cl 0x2
mov [ rwxdata ] cl
push 0x1
call [ GetSystemMetrics@IAT ]
mov [ rwxdata ] eax
sub_40670e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ rwxdata ] 0x0
jne rwxdata
mov eax [ ebp + 0x8 ]
and eax 0xff
test eax eax
je rwxdata
mov ecx [ ebp - 0x4 ]
call sub_4067c0
push eax
call [ GetMenu@IAT ]
mov [ rwxdata ] eax
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_4067c0
push eax
call [ SetMenu@IAT ]
push 0x20
push 0x0
push 0xc00000
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_4284
mov ecx [ rwxdata ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4067c0
push eax
call [ SetMenu@IAT ]
push 0x20
push 0xc00000
push 0x0
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_4284
jmp rwxdata
mov esp ebp
pop ebp
retn 0x4
sub_406790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4064b7
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404230
sub_4067c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne rwxdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_406810
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] 0x0
xor eax eax
mov [ ebp - 0xb ] eax
mov [ ebp - 0x7 ] eax
mov [ ebp - 0x3 ] al
mov [ ebp - 0x10 ] 0x0
jmp rwxdata
cmp [ ebp - 0x10 ] 0x5
ja rwxdata
mov eax [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
push edx
push rwxdata
lea eax [ ebp - 0xc ]
push eax
call [ sprintf@IAT ]
add esp 0xc
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x86
push 0x0
push 0x0
push 0x0
push 0x190
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x10 ]
imul edx edx 0xa
push edx
call [ CreateFontA@IAT ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx * 4 + 0x4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_4068a3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call [ SelectObject@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_4068e4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call [ SelectObject@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_406908
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call [ SelectObject@IAT ]
mov esp ebp
pop ebp
retn
sub_406926
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
call strlen
add esp 0x4
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call [ TextOutA@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_406958
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x1c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x20 ] eax
mov esp ebp
pop ebp
retn 0x8
sub_406977
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call [ SetBkColor@IAT ]
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call [ SetTextColor@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_406eb0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb rwxdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae rwxdata
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_40706b
cmp [ rwxdata ] ebx
jne rwxdata
call sub_407056
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_407068
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_407072
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40708a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_40361b
jmp [ eax + esi * 2 ]
sub_4036ae
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov esp ebp
pop ebp
retn
sub_4036c2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x10
sub_403e30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403e80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403ed0
push ebp
mov ebp esp
mov eax [ Ordinal_MFC42_4274@IAT ]
pop ebp
retn
sub_403eda
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rwxdata
mov esp ebp
pop ebp
retn
sub_403f0b
push ebp
mov ebp esp
call sub_403f1a
call sub_403f29
pop ebp
retn
sub_403f1a
push ebp
mov ebp esp
mov ecx rwxdata
call sub_403eea
pop ebp
retn
sub_403f29
push ebp
mov ebp esp
push sub_403f3b
call sub_406e74
add esp 0x4
pop ebp
retn
sub_403f3b
push ebp
mov ebp esp
mov ecx rwxdata
call sub_4041b0
pop ebp
retn
sub_4040f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4042b0
mov esp ebp
pop ebp
retn 0x4
sub_404111
push ebp
mov ebp esp
mov eax [ Ordinal_MFC42_4234@IAT ]
pop ebp
retn
sub_40411b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rwxdata
mov esp ebp
pop ebp
retn
sub_4041b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_815
mov esp ebp
pop ebp
retn
sub_404200
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_641
mov esp ebp
pop ebp
retn
sub_404220
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_404230
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call Ordinal_MFC42_825
add esp 0x4
pop ebp
retn 0x4
sub_404250
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call Ordinal_MFC42_823
add esp 0x4
pop ebp
retn 0x4
sub_404270
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_404280
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_404290
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
push ecx
call [ UpdateWindow@IAT ]
mov esp ebp
pop ebp
retn
sub_4042b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_4042c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
push ecx
call [ EnableWindow@IAT ]
mov esp ebp
pop ebp
retn
sub_4042e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
push ecx
call [ EnableWindow@IAT ]
mov esp ebp
pop ebp
retn
sub_404364
push ebp
mov ebp esp
mov eax [ Ordinal_MFC42_1825@IAT ]
pop ebp
retn
sub_40436e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rwxdata
mov esp ebp
pop ebp
retn
sub_40437e
push ebp
mov ebp esp
mov eax [ Ordinal_MFC42_4238@IAT ]
pop ebp
retn
sub_404388
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rwxdata
mov esp ebp
pop ebp
retn
sub_404398
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_338
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4043b7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_652
mov esp ebp
pop ebp
retn
sub_4043f3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_404440
mov esp ebp
pop ebp
retn 0x4
sub_404460
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov esp ebp
pop ebp
retn
sub_404480
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x48 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_4044a0
push ebp
mov ebp esp
call sub_4044aa
pop ebp
retn
sub_4044aa
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405ec0
pop ebp
retn
sub_4044b9
push ebp
mov ebp esp
call sub_4044c8
call sub_4044d7
pop ebp
retn
sub_4044c8
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405c80
pop ebp
retn
sub_4044d7
push ebp
mov ebp esp
push sub_4044e9
call sub_406e74
add esp 0x4
pop ebp
retn
sub_4044e9
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405e30
pop ebp
retn
sub_4044f8
push ebp
mov ebp esp
call sub_404507
call sub_404516
pop ebp
retn
sub_404507
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405ce0
pop ebp
retn
sub_404516
push ebp
mov ebp esp
push sub_404528
call sub_406e74
add esp 0x4
pop ebp
retn
sub_404528
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405e30
pop ebp
retn
sub_404537
push ebp
mov ebp esp
call sub_404546
call sub_404555
pop ebp
retn
sub_404546
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405d10
pop ebp
retn
sub_404555
push ebp
mov ebp esp
push sub_404567
call sub_406e74
add esp 0x4
pop ebp
retn
sub_404567
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405e30
pop ebp
retn
sub_404576
push ebp
mov ebp esp
call sub_404585
call sub_404594
pop ebp
retn
sub_404585
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405d70
pop ebp
retn
sub_404594
push ebp
mov ebp esp
push sub_4045a6
call sub_406e74
add esp 0x4
pop ebp
retn
sub_4045a6
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405e30
pop ebp
retn
sub_4045b5
push ebp
mov ebp esp
call sub_4045c4
call sub_4045d3
pop ebp
retn
sub_4045c4
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405da0
pop ebp
retn
sub_4045d3
push ebp
mov ebp esp
push sub_4045e5
call sub_406e74
add esp 0x4
pop ebp
retn
sub_4045e5
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405e30
pop ebp
retn
sub_4045f4
push ebp
mov ebp esp
call sub_404603
call sub_404612
pop ebp
retn
sub_404603
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405dd0
pop ebp
retn
sub_404612
push ebp
mov ebp esp
push sub_404624
call sub_406e74
add esp 0x4
pop ebp
retn
sub_404624
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405e30
pop ebp
retn
sub_404633
push ebp
mov ebp esp
call sub_404642
call sub_404651
pop ebp
retn
sub_404642
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405e00
pop ebp
retn
sub_404651
push ebp
mov ebp esp
push sub_404663
call sub_406e74
add esp 0x4
pop ebp
retn
sub_404663
push ebp
mov ebp esp
mov ecx rwxdata
call sub_405e30
pop ebp
retn
sub_4046d6
push ebp
mov ebp esp
mov eax [ Ordinal_MFC42_1945@IAT ]
pop ebp
retn
sub_4046e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rwxdata
mov esp ebp
pop ebp
retn
sub_4046f0
push ebp
mov ebp esp
mov eax [ Ordinal_MFC42_4273@IAT ]
pop ebp
retn
sub_4046fa
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rwxdata
mov esp ebp
pop ebp
retn
sub_404ca9
call [ GetLastError@IAT ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push rwxdata
call [ printf@IAT ]
add esp 0xc
mov eax rwxdata
retn
sub_404d61
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_813
mov esp ebp
pop ebp
retn
sub_404d7d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_5260
mov esp ebp
pop ebp
retn 0x4
sub_405583
push 0x0
push 0x0
push rwxdata
mov ecx [ ebp - 0x1244 ]
call Ordinal_MFC42_4224
mov eax rwxdata
retn
sub_4055ba
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_2535
mov esp ebp
pop ebp
retn 0x4
sub_4055d3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_4055e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_405b27
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
sub_405b98
mov eax 0x1
retn
sub_405b9e
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405e30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4036ae
mov esp ebp
pop ebp
retn
sub_405e50
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ _mbsnbicmp@IAT ]
add esp 0xc
pop ebp
retn
sub_405ea0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov esp ebp
pop ebp
retn
sub_405ec0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405ed0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405ef0
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405f20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405f70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov esp ebp
pop ebp
retn
sub_406050
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
call sub_405fc0
mov esp ebp
pop ebp
retn
sub_4060a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405ef0
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4060f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
call sub_405fc0
mov esp ebp
pop ebp
retn
sub_406130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405ef0
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406180
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] rwxdata
mov ecx [ ebp - 0x4 ]
call sub_405fc0
mov esp ebp
pop ebp
retn
sub_406370
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_2379
mov esp ebp
pop ebp
retn 0xc
sub_406390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_2379
mov esp ebp
pop ebp
retn 0x4
sub_406417
push ebp
mov ebp esp
mov eax [ Ordinal_MFC42_1842@IAT ]
pop ebp
retn
sub_406421
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rwxdata
mov esp ebp
pop ebp
retn
sub_406431
push ebp
mov ebp esp
mov eax [ Ordinal_MFC42_4242@IAT ]
pop ebp
retn
sub_40643b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rwxdata
mov esp ebp
pop ebp
retn
sub_4067f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
call Ordinal_MFC42_4163
mov esp ebp
pop ebp
retn 0x4
sub_406898
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_640
jmp [ Ordinal_MFC42_640@IAT ]
Ordinal_MFC42_2405
jmp [ Ordinal_MFC42_2405@IAT ]
Ordinal_MFC42_2414
jmp [ Ordinal_MFC42_2414@IAT ]
Ordinal_MFC42_5787
jmp [ Ordinal_MFC42_5787@IAT ]
Ordinal_MFC42_5788
jmp [ Ordinal_MFC42_5788@IAT ]
Ordinal_MFC42_2753
jmp [ Ordinal_MFC42_2753@IAT ]
Ordinal_MFC42_323
jmp [ Ordinal_MFC42_323@IAT ]
Ordinal_MFC42_4224
jmp [ Ordinal_MFC42_4224@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_4464
jmp [ Ordinal_MFC42_4464@IAT ]
Ordinal_MFC42_3693
jmp [ Ordinal_MFC42_3693@IAT ]
Ordinal_MFC42_3626
jmp [ Ordinal_MFC42_3626@IAT ]
Ordinal_MFC42_3663
jmp [ Ordinal_MFC42_3663@IAT ]
Ordinal_MFC42_1641
jmp [ Ordinal_MFC42_1641@IAT ]
Ordinal_MFC42_3573
jmp [ Ordinal_MFC42_3573@IAT ]
Ordinal_MFC42_3571
jmp [ Ordinal_MFC42_3571@IAT ]
Ordinal_MFC42_1640
jmp [ Ordinal_MFC42_1640@IAT ]
Ordinal_MFC42_5785
jmp [ Ordinal_MFC42_5785@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_2494
jmp [ Ordinal_MFC42_2494@IAT ]
Ordinal_MFC42_2627
jmp [ Ordinal_MFC42_2627@IAT ]
Ordinal_MFC42_2626
jmp [ Ordinal_MFC42_2626@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_6625
jmp [ Ordinal_MFC42_6625@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_4284
jmp [ Ordinal_MFC42_4284@IAT ]
Ordinal_MFC42_4163
jmp [ Ordinal_MFC42_4163@IAT ]
sub_406e48
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_406e74
push [ esp + 0x4 ]
call sub_406e48
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
strlen
jmp [ strlen@IAT ]
strcpy
jmp [ strcpy@IAT ]
strcat
jmp [ strcat@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_407056
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_407068
xor eax eax
retn
sub_40706b
retn
_controlfp
jmp [ _controlfp@IAT ]
sub_407072
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_4070b8
jmp sub_4070b8
sub_4070b8
push 0x600
push 0x0
call sub_40708a
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_4070e0
mov eax [ ebp - 0x140 ]
push eax
call sub_404230
retn
sub_4070ed
lea ecx [ ebp - 0x34 ]
call Ordinal_MFC42_617
retn
sub_4070f6
mov eax rwxdata
jmp __CxxFrameHandler
sub_407100
lea ecx [ ebp - 0x6c ]
call sub_404200
retn
sub_407109
mov eax rwxdata
jmp __CxxFrameHandler
sub_407120
mov eax [ ebp - 0x14 ]
push eax
call sub_404230
retn
sub_40712a
mov eax rwxdata
jmp __CxxFrameHandler
sub_407140
mov eax [ ebp - 0x14 ]
push eax
call sub_404230
retn
sub_40714a
mov eax rwxdata
jmp __CxxFrameHandler
sub_407154
mov eax rwxdata
jmp __CxxFrameHandler
sub_40715e
mov ecx [ ebp - 0x10 ]
call Ordinal_MFC42_813
retn
sub_407167
mov eax rwxdata
jmp __CxxFrameHandler
sub_407171
lea ecx [ ebp - 0x5c ]
call sub_406180
retn
sub_40717a
lea ecx [ ebp - 0x44 ]
call Ordinal_MFC42_640
retn
sub_407183
lea ecx [ ebp - 0x24 ]
call sub_406050
retn
sub_40718c
lea ecx [ ebp - 0x14 ]
call sub_4060f0
retn
sub_407195
lea ecx [ ebp - 0x1c ]
call sub_4060f0
retn
sub_40719e
lea ecx [ ebp - 0x2c ]
call sub_4060f0
retn
sub_4071a7
lea ecx [ ebp - 0x34 ]
call sub_4060f0
retn
sub_4071b0
mov eax rwxdata
jmp __CxxFrameHandler
sub_4071ba
mov eax rwxdata
jmp __CxxFrameHandler
sub_4071c4
mov eax [ ebp - 0x1c ]
push eax
call Ordinal_MFC42_825
pop ecx
retn
sub_4071cf
mov eax rwxdata
jmp __CxxFrameHandler
sub_4071e0
mov ecx [ ebp - 0x10 ]
call sub_405f70
retn
sub_4071e9
mov eax rwxdata
jmp __CxxFrameHandler
sub_407200
mov eax [ ebp - 0x14 ]
push eax
call sub_404230
retn
sub_40720a
mov eax rwxdata
jmp __CxxFrameHandler
sub_407214
mov ecx [ ebp - 0x10 ]
call Ordinal_MFC42_674
retn
sub_40721d
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
call Ordinal_MFC42_796
retn
sub_40722c
mov eax rwxdata
jmp __CxxFrameHandler
sub_407236
mov ecx [ ebp - 0x10 ]
call Ordinal_MFC42_674
retn
sub_40723f
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
call Ordinal_MFC42_796
retn
sub_40724e
mov eax rwxdata
jmp __CxxFrameHandler
sub_40727b
jmp eax
sub_40b618
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] eax
add [ eax ] al
hlt
