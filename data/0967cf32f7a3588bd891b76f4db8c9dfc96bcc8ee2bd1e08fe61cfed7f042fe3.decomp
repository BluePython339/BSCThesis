sub_401000
push ebp
mov ebp esp
sub esp 0xd78
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
push edi
mov [ ebp - 0xc ] 0x0
push r--data
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
mov al [ r--data ]
mov [ ebp - 0x728 ] al
mov ecx 0xbf
xor eax eax
lea edi [ ebp - 0x727 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov cl [ r--data ]
mov [ ebp - 0x420 ] cl
mov ecx 0xbf
xor eax eax
lea edi [ ebp - 0x41f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x120 ] 0x0
mov [ ebp - 0x421 ] 0x1
mov [ ebp - 0x729 ] 0x0
movzx edx [ ebp - 0x729 ]
test edx edx
je r-xdata
push 0x1230
push 0x0
push rw-data
call sub_407cc0
add esp 0xc
mov [ ebp - 0x4 ] rw-data
push 0x104
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0xc
push ecx
call sub_407cc0
add esp 0xc
push 0x104
push 0x0
mov edx [ ebp - 0x4 ]
add edx 0x110
push edx
call sub_407cc0
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
push 0x36
push r--data
push 0x4
push 0x3418
call sub_401660
add esp 0x10
mov [ ebp - 0xd44 ] eax
cmp [ ebp - 0xd44 ] 0x0
je r-xdata
mov cl [ r--data ]
mov [ ebp - 0xd38 ] cl
mov ecx 0xbf
xor eax eax
lea edi [ ebp - 0xd37 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov dl [ r--data ]
mov [ ebp - 0xa30 ] dl
mov ecx 0xbf
xor eax eax
lea edi [ ebp - 0xa2f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x730 ] 0x0
mov [ ebp - 0xa31 ] 0x1
mov [ ebp - 0xd39 ] 0x0
movzx eax [ ebp - 0xd39 ]
test eax eax
je r-xdata
push r--data
push r--data
push 0x16
push r--data
lea eax [ ebp - 0x420 ]
push eax
call sub_407d20
add esp 0x14
push 0x0
push 0x0
lea eax [ ebp - 0x120 ]
push eax
push 0x400
call [ GetLastError@IAT ]
push eax
push 0x0
push 0x1300
call [ FormatMessageA@IAT ]
mov ecx [ ebp - 0x120 ]
push ecx
push r--data
push r--data
push 0x16
push r--data
lea edx [ ebp - 0x420 ]
push edx
call sub_407d20
add esp 0x18
jmp r-xdata
mov [ ebp - 0xd68 ] 0x0
mov ecx [ ebp - 0xd44 ]
call sub_402030
mov [ ebp - 0xd68 ] eax
jmp r-xdata
push r--data
push r--data
push 0x1b
push r--data
lea ecx [ ebp - 0xa30 ]
push ecx
call sub_407d20
add esp 0x14
push 0x0
push 0x0
lea ecx [ ebp - 0x730 ]
push ecx
push 0x400
call [ GetLastError@IAT ]
push eax
push 0x0
push 0x1300
call [ FormatMessageA@IAT ]
mov edx [ ebp - 0x730 ]
push edx
push r--data
push r--data
push 0x1b
push r--data
lea eax [ ebp - 0xa30 ]
push eax
call sub_407d20
add esp 0x18
jmp r-xdata
movzx edx [ ebp - 0x729 ]
test edx edx
je r-xdata
movzx eax [ ebp - 0x729 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x420 ]
push ecx
call [ OutputDebugStringA@IAT ]
movzx edx [ ebp - 0x421 ]
test edx edx
je r-xdata
mov [ ebp - 0x118 ] 0x0
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x117 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx [ rw-data ]
call sub_4024a0
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0xc
push ecx
lea edx [ ebp - 0x118 ]
push edx
call sub_407bc0
add esp 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x118 ]
push ecx
call sub_407bd0
add esp 0x8
push 0x1
push 0x0
push 0x0
lea edx [ ebp - 0x118 ]
push edx
push r--data
push 0x0
call [ ShellExecuteA@IAT ]
mov [ ebp - 0x10 ] eax
push 0x55
push r--data
push 0x4
push 0x1c
call sub_401660
add esp 0x10
mov [ ebp - 0xd54 ] eax
cmp [ ebp - 0xd54 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0xd68 ]
mov [ ebp - 0xd40 ] edx
mov eax [ ebp - 0xd40 ]
mov [ rw-data ] eax
call sub_402ab0
movzx ecx al
mov [ ebp - 0x10 ] ecx
push r--data
push 0x0
call sub_403390
add esp 0x8
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
call sub_407bc0
add esp 0x8
push r--data
mov ecx [ ebp - 0x14 ]
push ecx
call sub_407bd0
add esp 0x8
mov edx [ ebp - 0x14 ]
push edx
push r--data
mov ecx [ rw-data ]
call sub_401c60
mov [ ebp - 0x119 ] al
movzx eax [ ebp - 0x119 ]
test eax eax
jne r-xdata
movzx eax [ ebp - 0xd39 ]
test eax eax
je r-xdata
movzx ecx [ ebp - 0xd39 ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0xa30 ]
push edx
call [ OutputDebugStringA@IAT ]
movzx eax [ ebp - 0xa31 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x120 ]
push eax
call [ LocalFree@IAT ]
push r--data
push r--data
lea eax [ ebp - 0x728 ]
push eax
call sub_407d20
add esp 0xc
mov ecx [ ebp - 0x120 ]
push ecx
push r--data
push r--data
lea edx [ ebp - 0x728 ]
push edx
call sub_407d20
add esp 0x10
jmp r-xdata
mov [ ebp - 0xd70 ] 0x0
push rw-data
mov ecx [ ebp - 0xd54 ]
call sub_4067b0
mov [ ebp - 0xd70 ] eax
jmp r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0xd4c ] eax
mov ecx [ ebp - 0xd4c ]
mov [ ebp - 0xd48 ] ecx
cmp [ ebp - 0xd48 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ReleaseMutex@IAT ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
push edx
call [ CloseHandle@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x730 ]
push ecx
call [ LocalFree@IAT ]
push r--data
push r--data
lea ecx [ ebp - 0xd38 ]
push ecx
call sub_407d20
add esp 0xc
mov edx [ ebp - 0x730 ]
push edx
push r--data
push r--data
lea eax [ ebp - 0xd38 ]
push eax
call sub_407d20
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_407da9
pop edi
mov esp ebp
pop ebp
retn 0x10
push 0x50030
push r--data
lea ecx [ ebp - 0x728 ]
push ecx
push 0x0
call [ MessageBoxA@IAT ]
mov [ ebp - 0xd74 ] 0x0
push 0x1
mov ecx [ ebp - 0xd58 ]
mov edx [ ecx ]
mov ecx [ ebp - 0xd58 ]
call [ edx ]
mov [ ebp - 0xd74 ] eax
jmp r-xdata
mov eax [ ebp - 0xd70 ]
mov [ ebp - 0xd50 ] eax
mov ecx [ ebp - 0xd50 ]
mov [ rw-data ] ecx
mov edx [ rw-data ]
mov [ ebp - 0xd5c ] edx
mov eax [ ebp - 0xd5c ]
mov [ ebp - 0xd58 ] eax
cmp [ ebp - 0xd58 ] 0x0
je r-xdata
mov [ ebp - 0xd6c ] 0x0
push 0x1
mov edx [ ebp - 0xd48 ]
mov eax [ edx ]
mov ecx [ ebp - 0xd48 ]
call [ eax ]
mov [ ebp - 0xd6c ] eax
jmp r-xdata
mov [ ebp - 0xc ] 0x0
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call [ ReleaseMutex@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
push eax
call [ CloseHandle@IAT ]
mov [ ebp - 0x10 ] eax
push 0x50030
push r--data
lea edx [ ebp - 0xd38 ]
push edx
push 0x0
call [ MessageBoxA@IAT ]
mov [ ebp - 0xd78 ] 0x0
push 0x1
mov edx [ ebp - 0xd60 ]
mov eax [ edx ]
mov ecx [ ebp - 0xd60 ]
call [ eax ]
mov [ ebp - 0xd78 ] eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xd64 ] eax
mov ecx [ ebp - 0xd64 ]
mov [ ebp - 0xd60 ] ecx
cmp [ ebp - 0xd60 ] 0x0
je r-xdata
push 0x0
push r--data
push r--data
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0xc ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
push ecx
call [ ReleaseMutex@IAT ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
push edx
call [ CloseHandle@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
sub_4016a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
call [ DestroyWindow@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
call sub_405520
mov esp ebp
pop ebp
retn
sub_4016e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
call [ IsDialogMessageA@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_401720
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
push eax
push sub_4056a0
mov ecx [ ebp + 0x10 ]
push ecx
movzx edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ DialogBoxParamA@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_401760
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
push eax
push sub_4056a0
mov ecx [ ebp + 0x10 ]
push ecx
movzx edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ CreateDialogParamA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_4017b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4016a0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_4017e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax ] r--data
mov [ ebp - 0x1 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_401a80
mov [ ebp - 0x1 ] al
mov cl [ ebp - 0x1 ]
mov [ ebp - 0x1 ] cl
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_401810
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax ] r--data
mov [ ebp - 0x1 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_4019d0
mov [ ebp - 0x1 ] al
mov ecx [ ebp - 0x8 ]
call sub_401a80
mov [ ebp - 0x1 ] al
mov cl [ ebp - 0x1 ]
mov [ ebp - 0x1 ] cl
mov esp ebp
pop ebp
retn
sub_401850
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
movzx ecx [ eax + 0x4 ]
cmp ecx 0xa
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0xc ]
movzx ecx [ eax + 0x4 ]
cmp [ ebp - 0x8 ] ecx
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
movzx edx [ ebp - 0x1 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + edx * 4 + 0x8 ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0xc ]
movzx ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov dl [ ecx + 0x4 ]
add dl 0x1
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] dl
mov al 0x1
xor al al
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_4018e0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
movzx ecx [ eax + 0x4 ]
test ecx ecx
jg r-xdata
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x10 ]
movzx ecx [ eax + 0x4 ]
cmp [ ebp - 0x8 ] ecx
jge r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + edx * 4 + 0x8 ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 4 + 0x8 ] 0x0
mov edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
movzx edx [ ecx + 0x4 ]
sub edx 0x1
cmp [ ebp - 0x8 ] edx
jge r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov cl [ eax + 0x4 ]
sub cl 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x4 ] cl
mov al 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + eax * 4 + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
mov edx [ esi + edx * 4 + 0xc ]
mov [ ecx + eax * 4 + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_4019d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + 0x4 ]
cmp [ ebp - 0x4 ] edx
jge r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_401a10
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
movzx edx [ ecx + 0x4 ]
cmp [ ebp - 0xc ] edx
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + eax * 4 + 0x8 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4016e0
add eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_401a80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
push 0x28
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x8
push ecx
call sub_407cc0
add esp 0xc
mov al 0x1
mov esp ebp
pop ebp
retn
sub_401ab0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401810
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_401ae0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp + 0x8 ]
push eax
call [ CreateFileA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_401b20
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
push edi
mov al [ r--data ]
mov [ ebp - 0x118 ] al
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x117 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
push r--data
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x118 ]
push ecx
push 0xc
mov edx [ ebp + 0x10 ]
push edx
call sub_4077c0
add esp 0x1c
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x118 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_405e60
add esp 0x10
lea edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_405a00
add esp 0x8
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp - 0xc ]
call sub_407da9
pop edi
mov esp ebp
pop ebp
retn
sub_401bf0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_401f70
movzx ecx al
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_401c20
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_401f20
movzx ecx al
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_401f70
movzx edx al
mov [ ebp - 0x4 ] edx
mov esp ebp
pop ebp
retn
sub_401c60
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
call sub_401b20
add esp 0xc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_4066f0
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_401f20
movzx eax al
mov [ ebp - 0xc ] eax
xor al al
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_407cc0
add esp 0xc
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_407df0
add esp 0xc
mov ecx [ ebp - 0x8 ]
shl ecx 0x1
mov edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4066f0
add esp 0x4
mov edx [ ebp - 0x14 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_406770
add esp 0x4
mov ecx [ ebp - 0x14 ]
call sub_401f20
movzx ecx al
mov [ ebp - 0xc ] ecx
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
push edx
push 0x0
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_407cc0
add esp 0xc
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xc ]
push edx
call sub_407dd0
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x10 ]
push edx
call sub_406770
add esp 0x4
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_406770
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_401e40
movzx ecx al
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
call sub_406770
add esp 0x4
mov edx [ ebp - 0x4 ]
push edx
call sub_406770
add esp 0x4
mov ecx [ ebp - 0x14 ]
call sub_401f20
movzx eax al
mov [ ebp - 0xc ] eax
xor al al
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x4 ]
movzx eax al
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_401f20
movzx edx al
mov [ ebp - 0xc ] edx
xor al al
jmp r-xdata
mov al 0x1
mov ecx [ ebp - 0x14 ]
call sub_401f20
movzx ecx al
mov [ ebp - 0xc ] ecx
xor al al
jmp r-xdata
sub_401e40
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx + 0x10 ] 0x1
push 0x1ff8
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0x14
push eax
call sub_407cc0
add esp 0xc
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
cmp edx [ eax + 0x8 ]
jae r-xdata
mov al 0x1
movzx ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xc ]
mov cx [ eax + ecx * 2 ]
mov [ ebp - 0x8 ] cx
movzx edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xc ]
mov dx [ ecx + edx * 2 + 0x2 ]
mov [ ebp - 0x4 ] dx
movzx eax [ ebp - 0x8 ]
cmp eax 0xa
je r-xdata
movzx ecx [ ebp - 0x4 ]
test ecx ecx
jne r-xdata
jmp r-xdata
movzx edx [ ebp - 0xc ]
add edx 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov [ eax + ecx * 4 + 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
jmp r-xdata
jmp r-xdata
mov cx [ ebp - 0xc ]
add cx 0x1
mov [ ebp - 0xc ] cx
sub_401f20
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_401f70
movzx ecx al
mov [ ebp - 0x4 ] ecx
mov al 0x1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
push edx
call sub_406770
add esp 0x4
sub_401f70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
push 0x1ff8
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x14
push ecx
call sub_407cc0
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x200c ] 0x0
push 0x800
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x2010
push eax
call sub_407cc0
add esp 0xc
push 0x400
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x2810
push ecx
call sub_407cc0
add esp 0xc
mov al 0x1
mov esp ebp
pop ebp
retn
sub_402000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401c20
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_402030
push ebp
mov ebp esp
push 0xffffffff
push sub_414078
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_401bf0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_4026b0
movzx ecx al
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4020a0
push ebp
mov ebp esp
push 0xffffffff
push sub_41408a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_4026b0
movzx ecx al
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
call sub_401c20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_402100
push ebp
mov ebp esp
sub esp 0x128
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
push edi
mov [ ebp - 0x128 ] ecx
mov eax [ ebp - 0x128 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x2c10 ] eax
mov ecx [ ebp - 0x128 ]
mov edx [ ecx + 0x2c10 ]
mov eax [ ebp - 0x128 ]
mov ecx [ eax + edx * 4 + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x128 ]
mov eax [ edx + 0x2c10 ]
mov ecx [ ebp - 0x128 ]
mov edx [ ecx + eax * 4 + 0x18 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x128 ]
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
lea eax [ ecx + edx * 2 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x128 ]
mov [ ecx + 0x2c14 ] 0x0
mov edx [ ebp - 0x128 ]
mov [ edx + 0x200c ] 0x0
push 0x800
push 0x0
mov eax [ ebp - 0x128 ]
add eax 0x2c18
push eax
call sub_407cc0
add esp 0xc
push 0x800
push 0x0
mov ecx [ ebp - 0x128 ]
add ecx 0x2010
push ecx
call sub_407cc0
add esp 0xc
push 0x400
push 0x0
mov edx [ ebp - 0x128 ]
add edx 0x2810
push edx
call sub_407cc0
add esp 0xc
mov eax [ ebp - 0x128 ]
mov ecx [ eax + 0x2c10 ]
add ecx 0x1
mov edx [ ebp - 0x128 ]
cmp ecx [ edx + 0x10 ]
jae r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx + 0x8 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x128 ]
mov [ ecx + 0x2c14 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x128 ]
mov [ ecx + 0x2c14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_407da9
pop edi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x128 ]
mov ecx [ eax + 0x2c14 ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x11c ] 0x0
jmp r-xdata
mov al [ r--data ]
mov [ ebp - 0x118 ] al
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x117 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx [ ebp - 0x128 ]
mov [ ecx + 0x2c14 ] 0x3ff
mov edx [ ebp - 0x128 ]
mov eax [ edx + 0x2c10 ]
add eax 0x1
push eax
push r--data
lea ecx [ ebp - 0x118 ]
push ecx
call sub_407d20
add esp 0xc
lea edx [ ebp - 0x118 ]
push edx
call [ OutputDebugStringA@IAT ]
mov edx [ ebp - 0x128 ]
cmp [ edx + 0x2c14 ] 0x400
jb r-xdata
mov eax [ ebp - 0x11c ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax + 0x2c14 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x120 ] 0x0
jmp r-xdata
push 0x2
mov ecx [ ebp - 0x11c ]
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx * 2 ]
push eax
push r--data
call sub_4085ce
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x120 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ebp - 0x11c ]
mov [ ecx + 0x2c14 ] edx
jmp r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ecx + 0x2c14 ]
sub edx 0x1
mov [ ebp - 0xc ] edx
mov [ ebp - 0x124 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x120 ]
mov edx [ ebp - 0x14 ]
mov ax [ edx + ecx * 2 ]
mov [ ebp - 0x10 ] ax
movzx ecx [ ebp - 0x10 ]
cmp ecx 0xa
je r-xdata
mov edx [ ebp - 0x11c ]
add edx 0x1
mov [ ebp - 0x11c ] edx
mov ecx [ ebp - 0x124 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ ebp - 0x120 ]
mov [ edx + 0x2c14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x128 ]
cmp [ ecx + 0x2c14 ] 0x0
jne r-xdata
push 0x2
mov edx [ ebp - 0x124 ]
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx * 2 ]
push ecx
push r--data
call sub_4085ce
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x120 ]
add edx 0x1
mov [ ebp - 0x120 ] edx
mov edx [ ebp - 0x128 ]
mov eax [ edx + 0x2c14 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x128 ]
add edx 0x2c18
push edx
call sub_407df0
add esp 0xc
mov al 0x1
xor al al
jmp r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ ebp - 0x124 ]
mov [ edx + 0x2c14 ] eax
jmp r-xdata
mov eax [ ebp - 0x124 ]
add eax 0x1
mov [ ebp - 0x124 ] eax
sub_402440
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x2c10 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x10 ]
jae r-xdata
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_402100
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_4024a0
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x10 ] 0x7ff
mov [ ebp - 0xc ] 0x0
push 0x800
push 0x0
mov eax [ ebp - 0x1c ]
add eax 0x2010
push eax
call sub_407cc0
add esp 0xc
push 0x400
push 0x0
mov ecx [ ebp - 0x1c ]
add ecx 0x2810
push ecx
call sub_407cc0
add esp 0xc
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x200c ]
mov edx [ ebp - 0x1c ]
mov ax [ edx + ecx * 2 + 0x2c18 ]
mov [ ebp - 0x18 ] ax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x200c ]
mov eax [ ebp - 0x1c ]
mov cx [ eax + edx * 2 + 0x2c1a ]
mov [ ebp - 0x8 ] cx
mov [ ebp - 0x11 ] 0x0
movzx edx [ ebp - 0x18 ]
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
push 0x400
mov eax [ ebp - 0x1c ]
add eax 0x2810
push eax
push 0xffffffff
mov ecx [ ebp - 0x1c ]
add ecx 0x2010
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x2810
xor eax eax
jmp r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x9
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx ecx [ ebp - 0x18 ]
cmp ecx 0xa
jne r-xdata
mov [ ebp - 0x11 ] 0x1
jmp r-xdata
movzx edx [ ebp - 0x18 ]
cmp edx 0xd
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x200c ]
add eax 0x1
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x200c ] eax
jmp r-xdata
movzx eax [ ebp - 0x11 ]
test eax eax
je r-xdata
mov [ ebp - 0x11 ] 0x1
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x1c ]
mov cx [ ebp - 0x18 ]
mov [ eax + edx * 2 + 0x2010 ] cx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
movzx ecx [ ebp - 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x200c ]
add eax 0x1
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x200c ] eax
movzx edx [ ebp - 0x8 ]
cmp edx 0x9
jne r-xdata
jmp r-xdata
movzx eax [ ebp - 0x8 ]
cmp eax 0xa
jne r-xdata
jmp r-xdata
movzx ecx [ ebp - 0x8 ]
cmp ecx 0xd
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x200c ]
add eax 0x1
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x200c ] eax
jmp r-xdata
jmp r-xdata
sub_402660
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_402100
movzx eax al
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
mov ecx [ ebp - 0x8 ]
call sub_402440
movzx ecx al
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4026b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x2c14 ] 0x0
push 0x800
push 0x0
mov edx [ ebp - 0x4 ]
add edx 0x2c18
push edx
call sub_407cc0
add esp 0xc
mov al 0x1
mov esp ebp
pop ebp
retn
sub_4026f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4020a0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_402720
push ebp
mov ebp esp
push 0xffffffff
push sub_4140a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_401bf0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_402a70
movzx ecx al
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_402790
push ebp
mov ebp esp
push 0xffffffff
push sub_4140ba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_402a70
movzx ecx al
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
call sub_401c20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4027f0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] 0x0
push 0x800
push 0x0
mov eax [ ebp - 0x14 ]
add eax 0x2010
push eax
call sub_407cc0
add esp 0xc
push 0x400
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x2810
push ecx
call sub_407cc0
add esp 0xc
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x200c ]
cmp ecx [ eax + 0x8 ]
jae r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x200c ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xc ]
mov ax [ edx + eax * 2 ]
mov [ ebp - 0x10 ] ax
mov [ ebp - 0x1 ] 0x0
movzx ecx [ ebp - 0x10 ]
test ecx ecx
jne r-xdata
mov [ ebp - 0x8 ] 0x0
push 0x0
push 0x0
push 0x400
mov edx [ ebp - 0x14 ]
add edx 0x2810
push edx
push 0xffffffff
mov eax [ ebp - 0x14 ]
add eax 0x2010
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x2810
xor eax eax
jmp r-xdata
movzx edx [ ebp - 0x10 ]
cmp edx 0x9
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x10 ]
cmp eax 0xa
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
movzx ecx [ ebp - 0x10 ]
cmp ecx 0xd
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov ax [ ebp - 0x10 ]
mov [ edx + ecx * 2 + 0x2010 ] ax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx edx [ ebp - 0x10 ]
cmp edx 0x20
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x200c ]
add eax 0x1
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x200c ] eax
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
sub_402950
push ebp
mov ebp esp
sub esp 0x14
push esi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8 ]
sub ecx [ ebp - 0xc ]
shl ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx eax [ ebp - 0x5 ]
test eax eax
je r-xdata
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
push 0x0
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0xc ]
lea eax [ ecx + edx * 2 ]
push eax
call sub_407cc0
add esp 0xc
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xc ]
push edx
call sub_407dd0
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x8 ] eax
push 0x2
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx * 2 ]
push edx
push r--data
call sub_4085ce
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xc ]
mov eax [ ebp - 0x10 ]
movzx ecx [ edx + eax * 2 ]
cmp ecx 0xa
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0xc ]
mov edx [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
mov cx [ ecx + esi * 2 ]
mov [ eax + edx * 2 ] cx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
push 0x2
push r--data
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0xc ]
lea eax [ ecx + edx * 2 ]
push eax
call sub_408603
add esp 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x2
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_402a80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402790
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_402ab0
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
push edi
mov [ ebp - 0x8 ] 0x0
push 0x104
push 0x0
push rw-data
call sub_407cc0
add esp 0xc
push 0x514
push 0x0
push rw-data
call sub_407cc0
add esp 0xc
mov al [ r--data ]
mov [ ebp - 0x118 ] al
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x117 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov cl [ r--data ]
mov [ ebp - 0x4 ] cl
xor edx edx
mov [ ebp - 0x3 ] dx
mov al [ r--data ]
mov [ ebp - 0x218 ] al
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x217 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov cl [ r--data ]
mov [ ebp - 0x318 ] cl
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x317 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov dl [ r--data ]
mov [ ebp - 0x418 ] dl
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x417 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x104
lea eax [ ebp - 0x118 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x418 ]
push ecx
lea edx [ ebp - 0x318 ]
push edx
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x118 ]
push edx
call sub_408697
add esp 0x14
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
push 0x104
push rw-data
call sub_408640
add esp 0x14
mov [ ebp - 0x8 ] eax
push 0x1
push rw-data
call sub_403510
add esp 0x8
movzx edx al
mov [ ebp - 0x8 ] edx
mov al 0x1
xor al al
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_407da9
pop edi
mov esp ebp
pop ebp
retn
sub_402c10
push ebp
mov ebp esp
sub esp 0x124
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
push edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
push 0x104
push 0x0
push rw-data
call sub_407cc0
add esp 0xc
push 0x514
push 0x0
push rw-data
call sub_407cc0
add esp 0xc
lea eax [ ebp - 0x8 ]
push eax
push 0x20019
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov al [ r--data ]
mov [ ebp - 0x120 ] al
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x11f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x124 ] 0x1
mov [ ebp - 0x4 ] 0x104
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x120 ]
push edx
lea eax [ ebp - 0x124 ]
push eax
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call [ RegQueryValueExA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call [ RegCloseKey@IAT ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x120 ]
push edx
push rw-data
call sub_407bc0
add esp 0x8
push 0x1
push rw-data
call sub_403510
add esp 0x8
mov [ ebp - 0xd ] al
mov al 0x1
mov eax [ ebp - 0x8 ]
push eax
call [ RegCloseKey@IAT ]
mov [ ebp - 0xc ] eax
xor al al
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_407da9
pop edi
mov esp ebp
pop ebp
retn
sub_402d50
push ebp
mov ebp esp
sub esp 0x638
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
push edi
mov ax [ r--data ]
mov [ ebp - 0x210 ] ax
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x20e ]
[ edi ]
stosw [ edi ]
mov cx [ r--data ]
mov [ ebp - 0x620 ] cx
mov ecx 0x7f
xor eax eax
lea edi [ ebp - 0x61e ]
[ edi ]
stosw [ edi ]
mov [ ebp - 0x218 ] 0x0
push 0x208
push 0x0
lea edx [ ebp - 0x210 ]
push edx
call sub_407cc0
add esp 0xc
push 0x200
push 0x0
lea eax [ ebp - 0x620 ]
push eax
call sub_407cc0
add esp 0xc
mov cx [ r--data ]
mov [ ebp - 0x420 ] cx
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x41e ]
[ edi ]
stosw [ edi ]
lea edx [ ebp - 0x420 ]
mov [ ebp - 0x628 ] edx
push 0x208
push 0x0
lea eax [ ebp - 0x420 ]
push eax
call sub_407cc0
add esp 0xc
push 0x104
lea ecx [ ebp - 0x420 ]
push ecx
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp - 0x420 ]
push eax
call sub_407dd0
add esp 0x4
mov [ ebp - 0x62c ] eax
mov [ ebp - 0x630 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x630 ]
cmp edx [ ebp - 0x62c ]
jae r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
mov edx [ ebp - 0x628 ]
push edx
call sub_408904
add esp 0x14
lea eax [ ebp - 0x620 ]
push eax
call sub_407dd0
add esp 0x4
mov [ ebp - 0x214 ] eax
lea ecx [ ebp - 0x210 ]
push ecx
call sub_407dd0
add esp 0x4
mov [ ebp - 0x624 ] eax
mov [ ebp - 0x634 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x630 ]
movzx ecx [ ebp + eax * 2 - 0x420 ]
cmp ecx 0x2f
jne r-xdata
mov ecx [ ebp - 0x634 ]
cmp ecx [ ebp - 0x214 ]
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x630 ]
mov [ ebp + edx * 2 - 0x420 ] 0x5c
mov al 0x1
mov edx [ ebp - 0x624 ]
mov eax [ ebp - 0x634 ]
mov cx [ ebp + eax * 2 - 0x620 ]
mov [ ebp + edx * 2 - 0x210 ] cx
mov edx [ ebp - 0x634 ]
movzx eax [ ebp + edx * 2 - 0x620 ]
cmp eax 0x5c
je r-xdata
mov ecx [ ebp - 0x630 ]
add ecx 0x1
mov [ ebp - 0x630 ] ecx
cmp [ ebp - 0x634 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0x638 ] 0x0
lea ecx [ ebp - 0x210 ]
push ecx
call [ GetFileAttributesW@IAT ]
mov [ ebp - 0x638 ] eax
cmp [ ebp - 0x638 ] 0xffffffff
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x634 ]
add edx 0x1
mov [ ebp - 0x634 ] edx
mov eax [ ebp - 0x624 ]
add eax 0x1
mov [ ebp - 0x624 ] eax
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x210 ]
push eax
call [ CreateDirectoryW@IAT ]
mov [ ebp - 0x218 ] eax
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_407da9
pop edi
mov esp ebp
pop ebp
retn
sub_402fd0
push ebp
mov ebp esp
sub esp 0x854
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
push edi
mov ax [ r--data ]
mov [ ebp - 0x428 ] ax
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x426 ]
[ edi ]
stosw [ edi ]
mov cx [ r--data ]
mov [ ebp - 0x838 ] cx
mov ecx 0x7f
xor eax eax
lea edi [ ebp - 0x836 ]
[ edi ]
stosw [ edi ]
mov [ ebp - 0x21c ] 0x0
push 0x208
push 0x0
lea edx [ ebp - 0x428 ]
push edx
call sub_407cc0
add esp 0xc
push 0x200
push 0x0
lea eax [ ebp - 0x838 ]
push eax
call sub_407cc0
add esp 0xc
mov cx [ r--data ]
mov [ ebp - 0x630 ] cx
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x62e ]
[ edi ]
stosw [ edi ]
mov [ ebp - 0x83c ] 0x0
push 0x208
push 0x0
lea edx [ ebp - 0x630 ]
push edx
call sub_407cc0
add esp 0xc
push 0x104
lea eax [ ebp - 0x428 ]
push eax
push 0xffffffff
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x21c ] eax
push 0x104
lea edx [ ebp - 0x630 ]
push edx
push 0xffffffff
mov eax [ ebp + 0xc ]
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x21c ] eax
lea ecx [ ebp - 0x428 ]
push ecx
call sub_407dd0
add esp 0x4
mov [ ebp - 0x214 ] eax
mov [ ebp - 0x844 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x844 ]
cmp eax [ ebp - 0x214 ]
jae r-xdata
lea ecx [ ebp - 0x630 ]
push ecx
call sub_407dd0
add esp 0x4
mov [ ebp - 0x840 ] eax
mov [ ebp - 0x848 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x844 ]
movzx edx [ ebp + ecx * 2 - 0x428 ]
cmp edx 0x2f
jne r-xdata
mov eax [ ebp - 0x848 ]
cmp eax [ ebp - 0x840 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x844 ]
mov [ ebp + eax * 2 - 0x428 ] 0x5c
lea ecx [ ebp - 0x428 ]
push ecx
call sub_407dd0
add esp 0x4
lea edx [ ebp + eax * 2 - 0x42a ]
mov [ ebp - 0x634 ] edx
mov eax [ ebp - 0x634 ]
movzx ecx [ eax ]
cmp ecx 0x5c
je r-xdata
mov ecx [ ebp - 0x848 ]
movzx edx [ ebp + ecx * 2 - 0x630 ]
cmp edx 0x2f
jne r-xdata
mov edx [ ebp - 0x844 ]
add edx 0x1
mov [ ebp - 0x844 ] edx
mov [ ebp - 0x84c ] 0x0
jmp r-xdata
push r--data
lea edx [ ebp - 0x428 ]
push edx
call sub_408a9c
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x848 ]
mov [ ebp + eax * 2 - 0x630 ] 0x5c
mov ecx [ ebp - 0x84c ]
movzx edx [ ebp + ecx * 2 - 0x630 ]
mov eax [ ebp - 0x84c ]
movzx ecx [ ebp + eax * 2 - 0x428 ]
cmp edx ecx
je r-xdata
mov edx [ ebp - 0x848 ]
add edx 0x1
mov [ ebp - 0x848 ] edx
mov edx [ ebp - 0x83c ]
add edx 0x1
mov [ ebp - 0x83c ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x84c ]
add eax 0x1
mov [ ebp - 0x84c ] eax
mov eax [ ebp - 0x83c ]
movzx ecx [ ebp + eax * 2 - 0x630 ]
cmp ecx 0x5c
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x838 ]
push eax
push 0x0
mov ecx [ ebp - 0x83c ]
lea edx [ ebp + ecx * 2 - 0x630 ]
push edx
call sub_408904
add esp 0x14
lea eax [ ebp - 0x838 ]
push eax
call sub_407dd0
add esp 0x4
mov [ ebp - 0x218 ] eax
mov cx [ r--data ]
mov [ ebp - 0x210 ] cx
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x20e ]
[ edi ]
stosw [ edi ]
mov edx [ ebp - 0x218 ]
mov [ ebp - 0x850 ] edx
jmp r-xdata
mov edx [ ebp - 0x83c ]
add edx 0x1
mov [ ebp - 0x83c ] edx
cmp [ ebp - 0x850 ] 0x0
jl r-xdata
mov al 0x1
mov ecx [ ebp - 0x850 ]
movzx edx [ ebp + ecx * 2 - 0x838 ]
cmp edx 0x5c
je r-xdata
push 0x208
push 0x0
lea eax [ ebp - 0x210 ]
push eax
call sub_407cc0
add esp 0xc
lea ecx [ ebp - 0x428 ]
push ecx
lea edx [ ebp - 0x210 ]
push edx
call sub_408ac6
add esp 0x8
mov eax [ ebp - 0x850 ]
add eax 0x1
push eax
lea ecx [ ebp - 0x838 ]
push ecx
lea edx [ ebp - 0x210 ]
push edx
call sub_408a5f
add esp 0xc
mov [ ebp - 0x854 ] 0x0
lea eax [ ebp - 0x210 ]
push eax
call [ GetFileAttributesW@IAT ]
mov [ ebp - 0x854 ] eax
cmp [ ebp - 0x854 ] 0xffffffff
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call [ RemoveDirectoryW@IAT ]
mov [ ebp - 0x21c ] eax
cmp [ ebp - 0x21c ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x850 ]
sub eax 0x1
mov [ ebp - 0x850 ] eax
jmp r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_407da9
pop edi
mov esp ebp
pop ebp
retn
sub_403390
push ebp
mov ebp esp
sub esp 0x408
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov al [ r--data ]
mov [ ebp - 0x408 ] al
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x407 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x408 ]
push ecx
call sub_408ae2
add esp 0xc
mov [ ebp - 0x4 ] 0x0
push rw-data
movzx edx [ ebp + 0x8 ]
imul edx edx 0x104
add edx rw-data
push edx
call [ lstrcpyA@IAT ]
movsx eax [ ebp - 0x408 ]
cmp eax 0x5c
je r-xdata
movzx esi [ ebp + 0x8 ]
imul esi esi 0x104
movzx edx [ ebp + 0x8 ]
imul edx edx 0x104
add edx rw-data
push edx
call [ lstrlenA@IAT ]
mov [ esi + eax + rw-data ] 0x0
movsx ecx [ ebp - 0x408 ]
cmp ecx 0x2f
jne r-xdata
lea eax [ ebp - 0x408 ]
push eax
movzx ecx [ ebp + 0x8 ]
imul ecx ecx 0x104
add ecx rw-data
push ecx
call [ lstrcatA@IAT ]
movzx eax [ ebp + 0x8 ]
imul eax eax 0x104
add eax rw-data
mov ecx [ ebp - 0x8 ]
call sub_407da9
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_403490
push ebp
mov ebp esp
sub esp 0x408
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push edi
mov [ ebp - 0x4 ] 0x0
mov al [ r--data ]
mov [ ebp - 0x408 ] al
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x407 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x3ff
lea ecx [ ebp - 0x408 ]
push ecx
call sub_408b69
add esp 0x10
mov [ ebp - 0x9 ] 0x0
lea edx [ ebp - 0x408 ]
push edx
call [ OutputDebugStringA@IAT ]
mov [ ebp - 0x4 ] 0x0
mov al 0x1
mov ecx [ ebp - 0x8 ]
call sub_407da9
pop edi
mov esp ebp
pop ebp
retn
sub_403510
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call [ lstrlenA@IAT ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x5c
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x2f
jne r-xdata
mov esp ebp
pop ebp
retn
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
xor al al
push r--data
mov eax [ ebp + 0x8 ]
push eax
call [ lstrcatA@IAT ]
sub_403570
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_408b39
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_403a70
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_403bd0
push eax
call sub_408b69
add esp 0x10
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_403ad0
mov [ eax ] 0x0
mov [ ebp - 0x8 ] 0x0
lea ecx [ ebp - 0x20 ]
call sub_403bd0
push eax
mov ecx [ ebp + 0x8 ]
call sub_404f50
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x20 ]
call sub_403ab0
mov eax [ ebp - 0x24 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_403620
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_408c2e
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_403b20
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_403bd0
push eax
call sub_408bbf
add esp 0x10
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_403b80
mov [ eax ] 0x0
mov [ ebp - 0x8 ] 0x0
lea ecx [ ebp - 0x20 ]
call sub_403bd0
push eax
mov ecx [ ebp + 0x8 ]
call sub_403bf0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x20 ]
call sub_403b60
mov eax [ ebp - 0x24 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_403720
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp - 0x10 ]
push eax
call sub_408ec3
add esp 0x4
lea ecx [ ebp - 0x10 ]
push ecx
call sub_408cb5
add esp 0x4
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x20 ]
push edx
call [ GetLocalTime@IAT ]
mov eax [ ebp + 0x8 ]
mov cx [ ebp - 0x20 ]
mov [ eax ] cx
mov edx [ ebp + 0x8 ]
mov ax [ ebp - 0x1e ]
mov [ edx + 0x2 ] ax
mov ecx [ ebp + 0x8 ]
mov dx [ ebp - 0x1a ]
mov [ ecx + 0x4 ] dx
mov eax [ ebp + 0x8 ]
mov cx [ ebp - 0x18 ]
mov [ eax + 0x6 ] cx
mov edx [ ebp + 0x8 ]
mov ax [ ebp - 0x16 ]
mov [ edx + 0x8 ] ax
mov ecx [ ebp + 0x8 ]
mov dx [ ebp - 0x14 ]
mov [ ecx + 0xa ] dx
mov eax [ ebp + 0x8 ]
mov cx [ ebp - 0x12 ]
mov [ eax + 0xc ] cx
mov edx [ ebp + 0x8 ]
mov ax [ ebp - 0x1c ]
mov [ edx + 0xe ] ax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov ax [ edx + 0x1c ]
mov [ ecx + 0x10 ] ax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov ax [ edx + 0x20 ]
mov [ ecx + 0x12 ] ax
mov esp ebp
pop ebp
retn
sub_403800
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] ecx
mov edx [ ebp + 0x10 ]
mov [ rw-data ] edx
mov eax [ rw-data ]
add eax [ rw-data ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
cmp [ rw-data ] 0x3e8
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
fild [ ebp - 0x8 ]
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
fild [ ebp - 0x10 ]
fmul [ r--data ]
fdivp st1
fstp [ rw-data ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx ] edx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov [ eax ] ecx
sub_4038d0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] ecx
mov edx [ rw-data ]
cmp edx [ ebp - 0x4 ]
jae r-xdata
mov eax 0x3e8
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
mov edx [ rw-data ]
add edx 0x1
mov [ rw-data ] edx
cmp [ rw-data ] 0x3e8
jb r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
fild [ ebp - 0xc ]
mov ecx [ rw-data ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x0
fild [ ebp - 0x14 ]
fmul [ r--data ]
fdivp st1
fstp [ rw-data ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ edx ] eax
mov al 0x1
mov ecx [ ebp + 0xc ]
mov edx [ rw-data ]
mov [ ecx ] edx
sub_4039d0
push ebp
mov ebp esp
push ecx
push 0x208
push 0x0
push rw-data
call sub_407cc0
add esp 0xc
push r--data
push 0x0
call sub_409601
add esp 0x8
push 0x104
mov eax [ ebp + 0x8 ]
push eax
push rw-data
call sub_408eff
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax rw-data
mov esp ebp
pop ebp
retn
sub_403a20
push ebp
mov ebp esp
push ecx
push 0x104
push 0x0
push rw-data
call sub_407cc0
add esp 0xc
push r--data
push 0x0
call sub_409601
add esp 0x8
push 0x104
mov eax [ ebp + 0x8 ]
push eax
push rw-data
call sub_4097f4
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax rw-data
mov esp ebp
pop ebp
retn
sub_403a70
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push ecx
mov ecx esp
call sub_403c40
mov ecx [ ebp - 0xc ]
call sub_403f50
mov [ ebp - 0x5 ] 0x0
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_403c50
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
sub_403ad0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_403d00
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_403ce0
mov ecx eax
call sub_4041e0
mov ecx eax
call sub_4041c0
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xc ]
call sub_403db0
sub_403b20
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push ecx
mov ecx esp
call sub_403c40
mov ecx [ ebp - 0xc ]
call sub_403f50
mov [ ebp - 0x6 ] 0x0
lea eax [ ebp - 0x6 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_403e10
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
sub_403b80
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_403ea0
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_403ce0
mov ecx eax
call sub_404210
mov ecx eax
call sub_4041c0
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xc ]
call sub_403db0
sub_403bd0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_403ce0
mov ecx eax
call sub_4041c0
mov esp ebp
pop ebp
retn
sub_403bf0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_403c20
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4040b0
mov esp ebp
pop ebp
retn 0x4
sub_403c50
push ebp
mov ebp esp
push 0xffffffff
push sub_4140d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_404320
movzx ecx al
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4043a0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
sub_403ce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_404710
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_403d00
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_403d40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_404450
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
sub ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405270
sub_403db0
push ebp
mov ebp esp
push 0xffffffff
push sub_4140f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
mov [ ebp - 0x54 ] ecx
push r--data
lea ecx [ ebp - 0x50 ]
call sub_4042e0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_403f70
push r--data
lea ecx [ ebp - 0x34 ]
push ecx
call sub_4099ad
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_403e10
push ebp
mov ebp esp
push 0xffffffff
push sub_4140e0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4043d0
movzx ecx al
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_404480
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
sub_403ea0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
sub eax [ edx + 0x4 ]
sar eax 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_403ee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_404450
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
sub ecx [ eax + 0x4 ]
sar ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405270
sub_403f70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_403fa0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_403fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_414118
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_4099e7
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_404de0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_404020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404050
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_404050
push ebp
mov ebp esp
push 0xffffffff
push sub_414118
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_404e30
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_409a7f
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4040b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_404680
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4045e0
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4046c0
mov ecx [ ebp + 0x8 ]
sub ecx eax
sar ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4044c0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4046c0
push eax
call sub_404130
add esp 0xc
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_404580
mov esp ebp
pop ebp
retn 0x8
sub_404150
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
shl eax 0x1
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_407df0
add esp 0xc
pop ebp
retn
sub_404190
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404170
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_4041e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x4 ]
call sub_4046f0
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_404210
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x4 ]
call sub_404730
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_404240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_404270
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404270
push ebp
mov ebp esp
push 0xffffffff
push sub_414118
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_409a35
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp + 0x8 ]
add edx 0xc
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_404de0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_4042e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push ecx
mov ecx esp
call sub_403c40
mov ecx [ ebp - 0x8 ]
call sub_403f50
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_404fa0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_404f50
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_404320
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_404760
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405470
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x4 ]
call sub_404820
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov al 0x1
sub_4043a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404c50
add esp 0x10
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn 0xc
sub_4043d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_404800
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_404880
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x4 ]
call sub_404820
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov al 0x1
sub_404450
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404c90
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_404480
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404cd0
add esp 0x10
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx * 2 ]
mov esp ebp
pop ebp
retn 0xc
sub_4044c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_404980
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_404980
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
call sub_4079a5
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4045e0
movzx ecx al
test ecx ecx
je r-xdata
mov eax [ r--data ]
push eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4048a0
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_4048a0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4046c0
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_4046c0
push eax
call sub_404130
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_404580
sub_404580
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x2 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_4046c0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_4045c0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_4045e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4049a0
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4079e5
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4049e0
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x8
jae r-xdata
xor eax eax
cmp eax [ ebp + 0x8 ]
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn 0x8
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_404580
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x14 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_404b40
jmp r-xdata
sub_404680
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4046c0
cmp [ ebp + 0x8 ] eax
jb r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4046c0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
lea eax [ eax + edx * 2 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov esp ebp
pop ebp
retn 0x4
mov al 0x1
sub_4046c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4046f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404730
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 2 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404780
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_403fa0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4047d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4047b0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_404820
push ebp
mov ebp esp
push 0xffffffff
push sub_4140f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
mov [ ebp - 0x54 ] ecx
push r--data
lea ecx [ ebp - 0x50 ]
call sub_4042e0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_404780
push r--data
lea ecx [ ebp - 0x34 ]
push ecx
call sub_4099ad
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4048a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
call sub_4079a5
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x14 ]
sub edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
sub ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4046c0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_4046c0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_404940
add esp 0xc
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
sub ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_404580
sub_404960
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
shl eax 0x1
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_409af0
add esp 0xc
pop ebp
retn
sub_4049a0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_404c10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
ja r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4049e0
push ebp
mov ebp esp
push 0xffffffff
push sub_414130
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x14
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
or eax 0x7
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1c ]
call sub_4049a0
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0x18 ]
shr ecx 0x1
mov eax [ ebp - 0x18 ]
xor edx edx
mov esi 0x3
div esi
cmp eax ecx
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x1c ]
call sub_404880
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ edx + 0x18 ]
shr esi 0x1
mov ecx [ ebp - 0x1c ]
call sub_4049a0
sub eax esi
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x18 ] eax
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x18 ]
shr eax 0x1
mov ecx [ ebp - 0x1c ]
add eax [ ecx + 0x18 ]
mov [ ebp - 0x18 ] eax
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_404b40
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_404580
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4046c0
push eax
mov edx [ ebp - 0x14 ]
push edx
call sub_404130
add esp 0xc
sub_404a87
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x1c ]
call sub_404880
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_404b40
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
movzx eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] 0x7
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_404580
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x18 ]
add edx 0x1
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_405270
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0x4
push eax
call sub_404130
add esp 0xc
sub_404be0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_404270
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404c10
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x7fffffff
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_404c50
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404c40
add esp 0x8
mov [ ebp - 0x1 ] al
mov dl [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404d30
add esp 0x14
mov esp ebp
pop ebp
retn
sub_404c90
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404c40
add esp 0x8
mov [ ebp - 0x1 ] al
mov dl [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404d50
add esp 0x10
mov esp ebp
pop ebp
retn
sub_404cd0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404c40
add esp 0x8
mov [ ebp - 0x1 ] al
mov dl [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404d60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_404d80
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov cl [ eax ]
mov [ edx ] cl
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
sub_404db0
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov cx [ eax ]
mov [ edx ] cx
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x2
mov [ ebp + 0x8 ] ecx
sub_404de0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push ecx
mov ecx esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4044b0
mov ecx [ ebp - 0x8 ]
call sub_403f50
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_404fa0
mov ecx [ r--data ]
push ecx
push 0x0
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_404e70
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_404e70
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_404980
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_404980
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
call sub_4079a5
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4051d0
movzx ecx al
test ecx ecx
je r-xdata
mov eax [ r--data ]
push eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4050d0
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_4050d0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_405020
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_405020
push eax
call sub_404f30
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_405180
sub_404f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_404f80
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_405050
mov esp ebp
pop ebp
retn 0x4
sub_404fa0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
movzx eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] 0xf
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_405180
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x18 ]
add edx 0x1
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_405270
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0x4
push eax
call sub_404f30
add esp 0xc
sub_405020
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_405050
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405430
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4051d0
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405020
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_404e70
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405020
push eax
call sub_404f30
add esp 0xc
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_405180
mov esp ebp
pop ebp
retn 0x8
sub_4050d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
call sub_4079a5
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x14 ]
sub edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
sub ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_405020
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_405020
add eax [ ebp + 0x8 ]
push eax
call sub_405160
add esp 0xc
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_405180
sub_405180
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
lea edx [ ebp - 0x1 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_405020
add eax [ ebp + 0x8 ]
push eax
call sub_4051c0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_4051d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405290
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4079e5
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4052d0
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x10
jae r-xdata
xor eax eax
cmp eax [ ebp + 0x8 ]
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn 0x8
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_405180
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x14 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_404fa0
jmp r-xdata
sub_405290
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_405490
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
ja r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4052d0
push ebp
mov ebp esp
push 0xffffffff
push sub_414140
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x14
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
or eax 0xf
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1c ]
call sub_405290
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0x18 ]
shr ecx 0x1
mov eax [ ebp - 0x18 ]
xor edx edx
mov esi 0x3
div esi
cmp eax ecx
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x1c ]
call sub_405470
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ edx + 0x18 ]
shr esi 0x1
mov ecx [ ebp - 0x1c ]
call sub_405290
sub eax esi
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x18 ] eax
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x18 ]
shr eax 0x1
mov ecx [ ebp - 0x1c ]
add eax [ ecx + 0x18 ]
mov [ ebp - 0x18 ] eax
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_404fa0
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_405180
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_405020
push eax
mov edx [ ebp - 0x14 ]
push edx
call sub_404f30
add esp 0xc
sub_405377
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x1c ]
call sub_405470
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_405430
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405020
cmp [ ebp + 0x8 ] eax
jb r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_405020
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x14 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov esp ebp
pop ebp
retn 0x4
mov al 0x1
sub_405490
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4054c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x18
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_407cc0
add esp 0xc
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4054e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405540
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
push 0x4
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
push eax
call [ GetWindowLongA@IAT ]
neg eax
sbb eax eax
neg eax
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x8 ] al
mov edx [ ebp - 0x10 ]
movzx eax [ edx + 0x8 ]
neg eax
sbb eax eax
and eax 0x8
add eax 0xfffffffc
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
push ecx
push r--data
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
push eax
call [ SetPropA@IAT ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] sub_4056a0
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
push eax
call [ GetWindowLongA@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
push edx
call [ SetWindowLongA@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_405610
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0xc ] 0x0
push r--data
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
push edx
call [ RemovePropA@IAT ]
mov [ ebp - 0xc ] eax
mov al 0x1
mov edx [ ebp - 0x14 ]
movzx eax [ edx + 0x8 ]
neg eax
sbb eax eax
and eax 0x8
add eax 0xfffffffc
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4 ]
push eax
call [ SetWindowLongA@IAT ]
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_4056a0
push ebp
mov ebp esp
sub esp 0xc
push r--data
mov eax [ ebp + 0x8 ]
push eax
call [ GetPropA@IAT ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x5 ] 0x0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
push 0x4
mov eax [ ebp + 0x8 ]
push eax
call [ GetWindowLongA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x2
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp [ ebp + 0xc ] 0x81
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ DefWindowProcA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_405610
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x110
jne r-xdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_405540
mov [ ebp - 0x5 ] al
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
sub_405780
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + 0x8 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
push eax
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ DefWindowProcA@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
sub_4057f0
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ GetWindowRect@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x24 ]
push edx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x20 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov edx [ ebp + 0x10 ]
mov [ edx + 0x4 ] ecx
push 0x8
push 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_407cc0
add esp 0xc
movzx ecx [ ebp + 0x14 ]
mov [ ebp - 0x34 ] ecx
cmp [ ebp - 0x34 ] 0x4
ja r-xdata
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
mov al 0x1
mov edx [ ebp - 0x34 ]
jmp [ edx * 4 + jump_table_40593c ]
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x2c ]
sub eax [ edx ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x28 ]
sub edx [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x2c ]
sub edx [ ecx ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x28 ]
sub edx [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x2c ]
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp - 0x28 ]
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x4 ]
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov eax [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
sub_405950
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4057f0
movzx ecx al
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax + 0xc ] edx
mov al 0x1
mov esp ebp
pop ebp
retn 0xc
sub_4059d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405520
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_405a00
push ebp
mov ebp esp
sub esp 0x10
push r--data
mov eax [ ebp + 0x8 ]
push eax
call sub_409ec0
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80000000
mov edx [ ebp + 0x8 ]
push edx
call [ CreateFileA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x0
xor eax eax
jmp r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ GetFileSize@IAT ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
push edx
call sub_4066f0
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x4 ]
push edx
call [ GlobalFree@IAT ]
xor eax eax
jmp r-xdata
sub_405af0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jae r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
movsx ecx [ eax ]
imul ecx ecx 0xffffffff
mov edx [ ebp - 0x8 ]
mov [ edx ] cl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_405b40
push ebp
mov ebp esp
sub esp 0x2c
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80000000
mov edx [ ebp + 0x8 ]
push edx
call [ CreateFileA@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp - 0x18 ]
push eax
call [ GetFileSize@IAT ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push 0x10
call sub_4066f0
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push 0x4
mov edx [ ebp - 0x4 ]
add edx 0x4
push edx
mov eax [ ebp - 0x18 ]
push eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
push edx
call [ CloseHandle@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shl ecx 0x5
push ecx
call sub_4066f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
shl edx 0x5
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_406770
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
shl eax 0x5
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_405af0
add esp 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shl ecx 0x2
push ecx
call sub_4066f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
shl edx 0x2
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_406770
add esp 0x4
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
imul eax eax 0x24
add eax 0x8
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_406770
add esp 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_406770
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406770
add esp 0x4
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_406570
add esp 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call sub_409f48
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_406770
add esp 0x4
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_406770
add esp 0x4
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
add ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x20
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x4
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406770
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_406770
add esp 0x4
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x4 ]
push edx
call sub_406770
add esp 0x4
sub_405e60
push ebp
mov ebp esp
sub esp 0x34
push r--data
mov eax [ ebp + 0xc ]
push eax
call sub_409ec0
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
jmp r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80000000
mov edx [ ebp + 0x8 ]
push edx
call [ CreateFileA@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov edx [ ebp - 0x18 ]
push edx
call [ GetFileSize@IAT ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push 0x10
call sub_4066f0
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x4
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push 0x4
mov edx [ ebp - 0x4 ]
add edx 0x4
push edx
mov eax [ ebp - 0x18 ]
push eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
shl eax 0x5
push eax
call sub_4066f0
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
push 0x0
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shl ecx 0x5
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_406770
add esp 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shl ecx 0x5
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_405af0
add esp 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
shl edx 0x2
push edx
call sub_4066f0
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
push 0x0
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shl ecx 0x2
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406770
add esp 0x4
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
imul ecx ecx 0x24
add ecx 0x8
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_406770
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx ]
jge r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_406770
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_406770
add esp 0x4
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_406570
add esp 0x4
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_406570
add esp 0x4
push eax
mov edx [ ebp - 0x2c ]
push edx
call sub_409f48
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_406770
add esp 0x4
mov edx [ ebp - 0x18 ]
push edx
call [ CloseHandle@IAT ]
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
push eax
call sub_4066f0
add esp 0x4
mov [ ebp - 0x30 ] eax
push 0x0
push 0x0
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
call [ SetFilePointer@IAT ]
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x28 ]
add eax [ edx ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x20
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x34 ]
add edx 0x4
mov [ ebp - 0x34 ] edx
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x34 ]
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_406770
add esp 0x4
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_406770
add esp 0x4
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_406770
add esp 0x4
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_405af0
add esp 0x8
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x30 ]
mov [ eax ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x24 ]
mov [ edx ] eax
mov edx [ ebp - 0x4 ]
push edx
call sub_406770
add esp 0x4
sub_4062a0
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80000000
mov eax [ ebp + 0x8 ]
push eax
call [ CreateFileA@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x18 ]
push ecx
call [ GetFileSize@IAT ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0xffffffff
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
push edx
call [ CloseHandle@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
push 0x10
call sub_4066f0
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
call sub_406770
add esp 0x4
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push 0x4
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_406770
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
shl eax 0x5
push eax
call sub_4066f0
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
push 0x0
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shl ecx 0x5
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_406770
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
shl eax 0x5
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_405af0
add esp 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shl ecx 0x2
push ecx
call sub_4066f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
shl edx 0x2
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
imul ecx ecx 0x24
add ecx 0x8
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx ]
jge r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_406570
add esp 0x4
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_409f48
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
add edx [ ecx ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x20
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x4
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
mov edx [ ebp - 0x30 ]
mov eax [ edx ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_406510
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push eax
call [ DeleteFileA@IAT ]
push 0x0
push 0x0
push 0x4
push 0x0
push 0x0
push 0x40000000
mov ecx [ ebp + 0x8 ]
push ecx
call [ CreateFileA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_406570
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
cmp edx 0x5c
jne r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
cmp edx 0x80
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x2e
je r-xdata
jmp r-xdata
sub_4065f0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
cmp edx 0x5c
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
cmp edx 0x80
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x2e
je r-xdata
jmp r-xdata
sub_406690
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push eax
call sub_4066f0
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapSize@IAT ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_407df0
add esp 0xc
mov edx [ ebp - 0x8 ]
push edx
call sub_406770
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn
sub_4066f0
push ebp
mov ebp esp
sub esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x8
mov ecx [ rw-data ]
push ecx
call [ HeapAlloc@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
push 0x400
push 0x0
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
mov edx [ ebp - 0x8 ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapSize@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
add ecx [ ebp - 0x4 ]
mov [ rw-data ] ecx
mov eax [ ebp - 0x8 ]
call [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_406770
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapSize@IAT ]
mov edx [ rw-data ]
sub edx eax
mov [ rw-data ] edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapFree@IAT ]
pop ebp
retn
sub_4067b0
push ebp
mov ebp esp
push 0xffffffff
push sub_414158
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_401680
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x14 ]
mov [ eax + 0x10 ] 0x0
push 0x0
push 0x6c
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x18 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_401720
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x10 ]
push eax
call [ CloseHandle@IAT ]
sub_406860
push ebp
mov ebp esp
push 0xffffffff
push sub_41416a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x400
jge r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
call sub_4016a0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x10 ]
cmp [ eax + ecx * 4 + 0x21c ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + ecx * 4 + 0x21c ]
push edx
call sub_406770
add esp 0x4
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + edx * 4 + 0x21c ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_406910
push ebp
mov ebp esp
sub esp 0x864
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
push esi
push edi
mov [ ebp - 0x864 ] ecx
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x864 ]
mov eax [ edx + 0x4 ]
mov [ ecx ] eax
push 0x640000
push 0x0
push 0x401
push 0x418
mov ecx [ ebp - 0x864 ]
mov edx [ ecx + 0x4 ]
push edx
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov al [ r--data ]
mov [ ebp - 0x230 ] al
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x22f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov cl [ r--data ]
mov [ ebp - 0x120 ] cl
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x11f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x18 ]
cmp [ ecx + 0x214 ] 0x0
jne r-xdata
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x14 ]
mov ecx [ ecx + 0x122c ]
call sub_402440
movzx edx al
test edx edx
jne r-xdata
mov al 0x1
push 0x40000
push 0x0
push r--data
mov edx [ ebp - 0x864 ]
mov eax [ edx + 0x4 ]
push eax
call [ MessageBoxA@IAT ]
xor al al
jmp r-xdata
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x14 ]
mov ecx [ ecx + 0x122c ]
call sub_4024a0
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0x124 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_407da9
pop edi
pop esi
mov esp ebp
pop ebp
retn
push r--data
mov edx [ ebp - 0x124 ]
push edx
call sub_409ec0
add esp 0x8
test eax eax
jne r-xdata
xor al al
jmp r-xdata
movzx edx [ ebp - 0xd ]
test edx edx
jne r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x18 ]
cmp [ ecx + 0x214 ] 0x400
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x864 ]
mov eax [ edx + 0x14 ]
mov ecx [ eax + 0x122c ]
call sub_402440
movzx ecx al
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x864 ]
mov eax [ edx + 0x14 ]
mov ecx [ eax + 0x122c ]
call sub_4024a0
mov [ ebp - 0x124 ] eax
push r--data
push 0x80000001
mov ecx [ ebp - 0x124 ]
push ecx
call sub_402c10
add esp 0xc
mov [ ebp - 0xd ] al
movzx edx [ ebp - 0xd ]
test edx edx
jne r-xdata
movzx ecx [ ebp - 0xd ]
test ecx ecx
je r-xdata
push 0x30c
call sub_4066f0
add esp 0x4
mov [ ebp - 0x33c ] eax
mov ecx [ ebp - 0x124 ]
push ecx
mov edx [ ebp - 0x33c ]
push edx
call sub_407bc0
add esp 0x8
lea eax [ ebp - 0x230 ]
push eax
mov ecx [ ebp - 0x33c ]
add ecx 0x104
push ecx
call sub_407bc0
add esp 0x8
lea edx [ ebp - 0x120 ]
push edx
mov eax [ ebp - 0x33c ]
add eax 0x208
push eax
call sub_407bc0
add esp 0x8
mov ecx [ ebp - 0x864 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x18 ]
mov eax [ ecx + 0x214 ]
mov ecx [ ebp - 0x33c ]
mov [ edx + eax * 4 + 0x21c ] ecx
mov edx [ ebp - 0x864 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x214 ]
add ecx 0x1
mov edx [ ebp - 0x864 ]
mov eax [ edx + 0x18 ]
mov [ eax + 0x214 ] ecx
push 0x104
push 0x0
lea ecx [ ebp - 0x338 ]
push ecx
call sub_407cc0
add esp 0xc
mov edx [ ebp - 0x33c ]
push edx
mov eax [ ebp - 0x33c ]
add eax 0x104
push eax
push r--data
lea ecx [ ebp - 0x338 ]
push ecx
call sub_407d20
add esp 0x10
lea edx [ ebp - 0x338 ]
push edx
call sub_401ae0
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push 0x40000
push 0x0
push r--data
mov edx [ ebp - 0x864 ]
mov eax [ edx + 0x4 ]
push eax
call [ MessageBoxA@IAT ]
xor al al
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
movzx ecx [ ebp - 0xd ]
test ecx ecx
je r-xdata
push r--data
push 0x80000002
mov eax [ ebp - 0x124 ]
push eax
call sub_402c10
add esp 0xc
mov [ ebp - 0xd ] al
jmp r-xdata
mov edx [ ebp - 0x864 ]
mov esi [ edx + 0x18 ]
push 0x0
mov eax [ ebp - 0xc ]
push eax
call [ GetFileSize@IAT ]
add eax [ esi + 0x218 ]
mov ecx [ ebp - 0x864 ]
mov edx [ ecx + 0x18 ]
mov [ edx + 0x218 ] eax
jmp r-xdata
push 0x40000
push r--data
push r--data
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ MessageBoxA@IAT ]
xor al al
jmp r-xdata
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x14 ]
mov ecx [ ecx + 0x122c ]
call sub_402440
movzx edx al
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x14 ]
mov ecx [ ecx + 0x122c ]
call sub_4024a0
mov [ ebp - 0x124 ] eax
movzx edx [ ebp - 0xd ]
test edx edx
je r-xdata
push r--data
push 0x0
call sub_403390
add esp 0x8
push eax
lea edx [ ebp - 0x120 ]
push edx
call sub_407bc0
add esp 0x8
mov ecx [ ebp - 0x864 ]
mov edx [ ecx + 0x14 ]
mov ecx [ edx + 0x122c ]
call sub_402440
movzx eax al
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x864 ]
mov edx [ ecx + 0x14 ]
mov ecx [ edx + 0x122c ]
call sub_4024a0
mov [ ebp - 0x124 ] eax
mov eax [ ebp - 0x124 ]
push eax
call j_sub_409fc9
add esp 0x4
mov [ ebp - 0x1 ] al
mov ecx [ ebp - 0x864 ]
mov edx [ ecx + 0x14 ]
mov ecx [ edx + 0x122c ]
call sub_402440
movzx eax al
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x864 ]
mov edx [ ecx + 0x14 ]
mov ecx [ edx + 0x122c ]
call sub_4024a0
mov [ ebp - 0x124 ] eax
mov al [ r--data ]
mov [ ebp - 0x740 ] al
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x73f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x860 ] 0x0
jmp r-xdata
push r--data
mov eax [ ebp - 0x124 ]
push eax
call sub_409ec0
add esp 0x8
test eax eax
je r-xdata
cmp [ ebp - 0x860 ] 0x3ff
jge r-xdata
mov cl [ r--data ]
mov [ ebp - 0x858 ] cl
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x857 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea edx [ ebp - 0x120 ]
push edx
lea eax [ ebp - 0x858 ]
push eax
call sub_407bc0
add esp 0x8
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x858 ]
push edx
call sub_407bd0
add esp 0x8
lea eax [ ebp - 0x858 ]
push eax
call [ GetFileAttributesA@IAT ]
mov [ ebp - 0x85c ] eax
cmp [ ebp - 0x85c ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x124 ]
add edx [ ebp - 0x860 ]
movsx eax [ edx ]
cmp eax 0x5c
jne r-xdata
mov [ ebp - 0xd ] 0x0
cmp [ ebp - 0x85c ] 0xffffffff
jne r-xdata
mov [ ebp - 0x748 ] r--data
mov edx [ ebp - 0x748 ]
push edx
call sub_409e30
add esp 0x4
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x74c ] 0x0
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x14 ]
mov ecx [ ecx + 0x122c ]
call sub_402440
movzx edx al
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x14 ]
mov ecx [ ecx + 0x122c ]
call sub_4024a0
mov [ ebp - 0x74c ] eax
mov edx [ ebp - 0x744 ]
push edx
mov eax [ ebp - 0x748 ]
push eax
mov ecx [ ebp - 0x74c ]
push ecx
call sub_409f90
add esp 0xc
test eax eax
jne r-xdata
movzx ecx [ ebp - 0xd ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x124 ]
add eax [ ebp - 0x860 ]
mov ecx [ ebp - 0x860 ]
mov dl [ eax ]
mov [ ebp + ecx - 0x740 ] dl
mov ecx [ ebp - 0x124 ]
add ecx [ ebp - 0x860 ]
movsx edx [ ecx + 0x1 ]
cmp edx 0x6e
jne r-xdata
mov [ ebp - 0xd ] 0x0
push 0x40000
push 0x0
push r--data
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ MessageBoxA@IAT ]
xor al al
jmp r-xdata
mov edx [ ebp - 0x74c ]
add edx [ ebp - 0x744 ]
push edx
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x18 ]
add ecx 0xc
push ecx
push r--data
lea edx [ ebp - 0x230 ]
push edx
call sub_407d20
add esp 0x10
jmp r-xdata
push 0x40000
push 0x0
lea edx [ ebp - 0x740 ]
push edx
mov eax [ ebp - 0x864 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ MessageBoxA@IAT ]
xor al al
jmp r-xdata
mov ecx [ ebp - 0x860 ]
add ecx 0x1
mov [ ebp - 0x860 ] ecx
mov eax [ ebp - 0x860 ]
mov [ ebp + eax - 0x740 ] 0xd
mov ecx [ ebp - 0x860 ]
mov [ ebp + ecx - 0x73f ] 0xa
mov edx [ ebp - 0x860 ]
add edx 0x1
mov [ ebp - 0x860 ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_406fc0
push ebp
mov ebp esp
sub esp 0x53c
mov eax [ rw-data ]
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x8 ] 0x0
push 0x104
push 0x0
push rw-data
call sub_407cc0
add esp 0xc
push 0x410
push 0xffffffff
lea eax [ ebp - 0x418 ]
push eax
call sub_407cc0
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x52c ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x530 ] edx
mov [ ebp - 0x534 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x52c ]
mov [ ebp - 0x53c ] eax
mov [ ebp - 0x538 ] 0x0
fild [ ebp - 0x53c ]
fmul [ r--data ]
call sub_40a028
mov [ ebp - 0x52c ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x52c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x534 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x530 ]
xor edx edx
mov ecx 0xa
div ecx
mov eax [ ebp - 0x534 ]
mov [ ebp + eax * 4 - 0x418 ] edx
mov eax [ ebp - 0x530 ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp - 0x530 ] eax
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
jle r-xdata
mov eax [ ebp - 0x534 ]
add eax 0x1
mov [ ebp - 0x534 ] eax
mov eax rw-data
mov ecx [ ebp - 0x41c ]
call sub_407da9
mov esp ebp
pop ebp
retn
push 0x104
push 0x0
lea ecx [ ebp - 0x528 ]
push ecx
call sub_407cc0
add esp 0xc
mov edx [ ebp - 0x4 ]
mov eax [ ebp + edx * 4 - 0x418 ]
push eax
push r--data
lea ecx [ ebp - 0x528 ]
push ecx
call sub_407d20
add esp 0xc
lea edx [ ebp - 0x528 ]
push edx
push rw-data
call sub_407bd0
add esp 0x8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cdq
mov ecx 0x3
idiv ecx
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
push r--data
push rw-data
call sub_407bd0
add esp 0x8
sub_407160
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x38 ]
mov ecx [ ebp + 0x10 ]
sub ecx [ eax + 0x1220 ]
mov edx [ ebp + 0x38 ]
add ecx [ edx + 0x121c ]
mov eax [ ebp + 0x38 ]
mov [ eax + 0x121c ] ecx
mov ecx [ ebp + 0x38 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x1220 ] edx
mov eax [ ebp + 0x38 ]
mov ecx [ eax + 0x121c ]
push ecx
call sub_406fc0
add esp 0x4
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
push edx
push 0x41e
mov eax [ ebp + 0x38 ]
mov ecx [ eax ]
push ecx
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextA@IAT ]
mov edx [ ebp + 0x38 ]
mov eax [ edx + 0x121c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
fild [ ebp - 0x10 ]
mov ecx [ ebp + 0x38 ]
mov edx [ ecx + 0x218 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] 0x0
fild [ ebp - 0x18 ]
fdivp st1
fmul [ r--data ]
call sub_40a028
mov [ ebp - 0x8 ] eax
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x402
push 0x418
mov ecx [ ebp + 0x38 ]
mov edx [ ecx ]
push edx
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov eax [ ebp - 0x8 ]
push eax
push r--data
mov ecx [ ebp - 0x4 ]
push ecx
call sub_407d20
add esp 0xc
mov edx [ ebp - 0x4 ]
push edx
push 0x41f
mov eax [ ebp + 0x38 ]
mov ecx [ eax ]
push ecx
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextA@IAT ]
xor eax eax
mov esp ebp
pop ebp
retn 0x34
sub_407260
push ebp
mov ebp esp
sub esp 0x440
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x334 ] 0x0
mov [ ebp - 0x114 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x114 ]
cmp edx [ ecx + 0x214 ]
jge r-xdata
push r--data
push 0x41d
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextA@IAT ]
push 0x1
push 0x41a
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
push 0x0
call [ ExitThread@IAT ]
push 0x104
push 0x0
lea eax [ ebp - 0x110 ]
push eax
call sub_407cc0
add esp 0xc
mov ecx [ ebp - 0x114 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x21c ]
add eax 0x104
push eax
lea ecx [ ebp - 0x110 ]
push ecx
call sub_407bc0
add esp 0x8
mov edx [ ebp - 0x114 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x21c ]
push ecx
lea edx [ ebp - 0x110 ]
push edx
call sub_407bd0
add esp 0x8
push 0x104
push 0x0
lea eax [ ebp - 0x330 ]
push eax
call sub_407cc0
add esp 0xc
mov ecx [ ebp - 0x114 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x21c ]
add eax 0x208
push eax
lea ecx [ ebp - 0x330 ]
push ecx
call sub_407bc0
add esp 0x8
mov edx [ ebp - 0x114 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x21c ]
push ecx
lea edx [ ebp - 0x330 ]
push edx
call sub_407bd0
add esp 0x8
mov eax [ ebp - 0x114 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x21c ]
add edx 0x208
push edx
push 0x417
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ SetDlgItemTextA@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1220 ] 0x0
push 0x104
push 0x0
lea eax [ ebp - 0x220 ]
push eax
call sub_407cc0
add esp 0xc
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x220 ]
push ecx
push 0xc
mov edx [ ebp - 0x114 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x21c ]
push ecx
call sub_4077c0
add esp 0x1c
lea edx [ ebp - 0x220 ]
push edx
push 0x41b
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextA@IAT ]
lea edx [ ebp - 0x330 ]
push edx
call [ GetFileAttributesA@IAT ]
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x118 ] 0x0
je r-xdata
mov [ ebp - 0x338 ] 0x0
push 0x104
push 0x0
lea ecx [ ebp - 0x440 ]
push ecx
call sub_407cc0
add esp 0xc
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x440 ]
push edx
push 0x3
lea eax [ ebp - 0x330 ]
push eax
call sub_4077c0
add esp 0x1c
push 0x0
lea ecx [ ebp - 0x440 ]
push ecx
call sub_402d50
add esp 0x8
movzx edx al
mov [ ebp - 0x224 ] edx
cmp [ ebp - 0x224 ] 0x0
jne r-xdata
cmp [ ebp - 0x118 ] 0xffffffff
je r-xdata
push 0x2
lea ecx [ ebp - 0x334 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push sub_407160
lea eax [ ebp - 0x330 ]
push eax
lea ecx [ ebp - 0x110 ]
push ecx
call [ CopyFileExA@IAT ]
mov [ ebp - 0x224 ] eax
cmp [ ebp - 0x224 ] 0x0
jne r-xdata
push 0x0
push r--data
push r--data
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ MessageBoxA@IAT ]
push 0x1
push 0x41a
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
jmp r-xdata
push 0x80
lea eax [ ebp - 0x330 ]
push eax
call [ SetFileAttributesA@IAT ]
mov [ ebp - 0x224 ] eax
lea eax [ ebp - 0x330 ]
push eax
call [ GetFileAttributesA@IAT ]
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x118 ] 0x0
je r-xdata
push 0x0
push r--data
push r--data
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ MessageBoxA@IAT ]
push 0x1
push 0x41a
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x118 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x114 ]
add eax 0x1
mov [ ebp - 0x114 ] eax
push 0x80
lea ecx [ ebp - 0x330 ]
push ecx
call [ SetFileAttributesA@IAT ]
mov [ ebp - 0x224 ] eax
sub_4075d0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x0
push 0x419
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
push edx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
push 0x0
push 0x41a
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
push edx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
push r--data
push 0x41d
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
push edx
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextA@IAT ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx + 0x218 ]
push edx
call sub_406fc0
add esp 0x4
mov [ ebp - 0x4 ] eax
push r--data
mov eax [ ebp - 0x4 ]
push eax
call sub_407bd0
add esp 0x8
mov ecx [ ebp - 0x4 ]
push ecx
push 0x41c
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x18 ]
mov ecx [ eax ]
push ecx
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextA@IAT ]
lea edx [ ebp - 0x8 ]
push edx
push 0x0
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x18 ]
push ecx
push sub_407260
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x10 ] eax
mov al 0x1
mov esp ebp
pop ebp
retn
sub_4076b0
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x10 ]
and eax 0xffff
mov [ ebp - 0xc ] ax
mov ecx [ ebp + 0x10 ]
shr ecx 0x10
mov [ ebp - 0x8 ] cx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x14 ] 0x110
ja r-xdata
cmp [ ebp - 0x14 ] 0x111
je r-xdata
cmp [ ebp - 0x14 ] 0x110
je r-xdata
mov edx [ ebp + 0x10 ]
and edx 0xffff
movzx eax dx
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x419
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
call sub_406910
movzx eax al
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x2
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_4075d0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x41a
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
push edx
call [ EndDialog@IAT ]
mov [ ebp - 0x4 ] eax
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
je r-xdata
push 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
push edx
call [ EndDialog@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ DestroyWindow@IAT ]
jmp r-xdata
jmp r-xdata
sub_407790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_406860
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40a265
add esp 0x4
sub_4077c0
push ebp
mov ebp esp
sub esp 0x308
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x308 ]
push eax
lea ecx [ ebp - 0x108 ]
push ecx
lea edx [ ebp - 0x208 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_408697
add esp 0x14
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
call sub_407bc0
add esp 0x8
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea ecx [ ebp - 0x208 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
call sub_407bc0
add esp 0x8
cmp [ ebp + 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x108 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
call sub_407bc0
add esp 0x8
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea edx [ ebp - 0x308 ]
push edx
mov eax [ ebp + 0x20 ]
push eax
call sub_407bc0
add esp 0x8
mov al 0x1
mov ecx [ ebp - 0x8 ]
call sub_407da9
mov esp ebp
pop ebp
retn
push 0x104
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
call sub_407cc0
add esp 0xc
movzx edx [ ebp + 0xc ]
and edx 0x1
je r-xdata
movzx edx [ ebp + 0xc ]
and edx 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call [ lstrcatA@IAT ]
movzx edx [ ebp + 0xc ]
and edx 0x4
je r-xdata
lea eax [ ebp - 0x208 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call [ lstrcatA@IAT ]
movzx edx [ ebp + 0xc ]
and edx 0x8
je r-xdata
lea eax [ ebp - 0x108 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x308 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call [ lstrcatA@IAT ]
sub_4078f0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push sub_40a164
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x24 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40794a
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
mov [ ebp - 0x1c ] 0x80004005
mov [ ebp - 0x1c ] 0x8007000e
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407981
push esi
mov esi [ esp + 0x8 ]
jmp r-xdata
push esi
call sub_40a510
test eax eax
pop ecx
je r-xdata
push esi
call sub_40a522
test eax eax
pop ecx
jne r-xdata
pop esi
retn
call sub_407a64
sub_4079a5
mov eax sub_41417c
call sub_40a540
sub esp 0x44
push r--data
lea ecx [ ebp - 0x28 ]
call sub_4042e0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_403fa0
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_4099ad
int3
sub_4079e5
mov eax sub_41417c
call sub_40a540
sub esp 0x44
push r--data
lea ecx [ ebp - 0x28 ]
call sub_4042e0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_403fa0
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_4099ad
int3
sub_407a64
push ebp
mov ebp esp
sub esp 0x10
test [ rw-data ] 0x1
push esi
mov esi r--data
jne r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_409a35
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_4099ad
int3
or [ rw-data ] 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] r--data
call sub_4099f8
push sub_4141c0
mov [ rw-data ] esi
call sub_40a11f
pop ecx
sub_407ac5
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_40a265
and [ esi ] 0x0
pop ecx
sub_407b12
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x98
mov eax [ rw-data ]
push esi
mov [ ebp + 0x74 ] eax
mov esi ecx
call sub_407ae2
mov eax __dos_header
push 0x94
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x20 ]
push 0x0
push eax
mov [ esi ] 0x3c
mov [ esi + 0xc ] 0x0
call sub_407cc0
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] 0x94
call [ GetVersionExA@IAT ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
cmp [ ebp - 0x1c ] 0x5
jb r-xdata
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x710
mov [ esi + 0x14 ] r--data
call sub_4078f0
test eax eax
jge r-xdata
cmp [ ebp - 0x1c ] 0x4
ja r-xdata
jmp r-xdata
mov ecx [ ebp + 0x74 ]
mov eax esi
pop esi
call sub_407da9
add ebp 0x78
leave
retn
mov [ rw-data ] 0x1
mov [ esi + 0xc ] 0x1
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
sub_407bc0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_407bd0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_407cc0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_407d20
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call sub_40a8b2
add esp 0xc
test esi esi
mov edi eax
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40a70e
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
sub_407df0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_407e50 ]
jmp [ ecx * 4 + jump_table_407ed0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407f3c ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_407f3c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_4080d8 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_407fdc ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4080d8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407f3c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407f3c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407f3c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4080d8 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4080d8 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4080d8 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4080d8 ]
sub_40812d
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_408164
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4081b6
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ba1e
add esp 0x20
mov [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4081ec
cld
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ rw-data ]
je r-xdata
push 0x0
push eax
push [ eax + 0x14 ]
push [ eax + 0xc ]
push 0x0
push [ esp + 0x20 ]
push [ eax + 0x10 ]
push [ esp + 0x20 ]
call sub_40ba1e
add esp 0x20
retn
mov eax [ esp + 0x4 ]
or [ eax + 0x4 ] 0x8
xor eax eax
inc eax
retn
sub_408227
push ebp
mov ebp esp
sub esp 0x34
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_4082ec
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rw-data ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x34 ]
sub_4082ec
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
or eax 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
xor eax eax
inc eax
jmp r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_40ba1e
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_408227
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_408164
sub_40839e
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_40baed
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
lea eax [ ebx + eax * 4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_40baed
pop edi
lea eax [ esi + esi * 4 ]
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_40844c
mov edx [ esp + 0x4 ]
mov eax [ rw-data ]
cmp edx eax
jne r-xdata
mov ecx eax
add eax 0x4
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
retn
cmp [ eax ] 0x0
jne r-xdata
mov eax [ eax ]
cmp edx eax
je r-xdata
jmp sub_40baed
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
retn
mov ecx eax
lea eax [ ecx + 0x4 ]
sub_408485
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_4081ec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40bb20
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_4084e0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408522
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_408500
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4085b6
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4085ce
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
mov ax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_408603
mov ecx [ esp + 0xc ]
test ecx ecx
push esi
push edi
mov edi [ esp + 0xc ]
mov esi edi
je r-xdata
pop edi
mov eax esi
pop esi
retn
mov edx [ esp + 0x10 ]
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
mov ax [ edx ]
mov [ edi ] ax
inc edi
inc edi
inc edx
inc edx
test ax ax
je r-xdata
xor eax eax
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_408640
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push edi
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call sub_40a8b2
add esp 0xc
test esi esi
mov edi eax
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40a70e
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
sub_408697
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_409e30
cmp eax 0x1
pop ecx
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x1 ] 0x3a
jne r-xdata
and [ ebp + 0x8 ] 0x0
cmp [ ebx ] 0x0
mov eax ebx
mov [ ebp - 0x8 ] eax
mov esi 0xff
je r-xdata
mov [ eax ] 0x0
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov cl [ eax ]
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
inc ebx
inc ebx
jmp r-xdata
push 0x2
push ebx
push esi
call sub_40bf54
add esp 0xc
mov [ esi + 0x2 ] 0x0
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ ecx ] 0x0
cmp cl 0x2f
je r-xdata
inc eax
jmp r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
cmp edi ebx
jb r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp + 0x8 ] ecx
cmp cl 0x5c
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
sub eax ebx
cmp eax esi
jae r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x8 ] eax
je r-xdata
cmp cl 0x2e
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov [ eax ] 0x0
push esi
push ebx
push edi
call sub_40bf54
add esp 0xc
mov [ esi + edi ] 0x0
mov esi eax
mov edi [ ebp + 0x18 ]
test edi edi
je r-xdata
sub edi ebx
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax [ ebp - 0x4 ]
cmp eax esi
jae r-xdata
push edi
push ebx
push [ ebp + 0x14 ]
call sub_40bf54
mov eax [ ebp + 0x14 ]
mov [ edi + eax ] 0x0
mov eax [ ebp - 0x8 ]
add esp 0xc
mov edi esi
mov ebx [ ebp + 0x8 ]
jmp r-xdata
sub edi ebx
cmp edi esi
jb r-xdata
push esi
push [ ebp - 0x4 ]
push edi
call sub_40bf54
add esp 0xc
mov [ esi + edi ] 0x0
jmp r-xdata
mov esi eax
push edi
push ebx
push [ ebp + 0x10 ]
call sub_40bf54
mov eax [ ebp + 0x10 ]
mov [ edi + eax ] 0x0
mov eax [ ebp - 0x8 ]
add esp 0xc
mov edi esi
sub_4087e0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_408904
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor edi edi
push ebx
mov [ ebp - 0x4 ] edi
call sub_407dd0
cmp eax 0x1
pop ecx
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax edi
je r-xdata
cmp [ ebx + 0x2 ] 0x3a
jne r-xdata
xor eax eax
mov ax [ ebx ]
test ax ax
mov [ ebp - 0x8 ] edi
mov edi ebx
mov esi 0xff
je r-xdata
mov [ eax ] di
mov esi [ ebp + 0xc ]
cmp esi edi
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp ax 0x2f
je r-xdata
add ebx 0x4
mov [ ebp + 0x8 ] ebx
jmp r-xdata
push 0x2
push ebx
push esi
call sub_408603
add esp 0xc
mov [ esi + 0x4 ] di
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
and [ eax ] 0x0
lea eax [ edi + 0x2 ]
mov [ ebp - 0x8 ] eax
cmp ax 0x5c
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp eax ebx
jb r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
cmp ax 0x2e
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
sub edi ebx
shr edi 0x1
cmp edi esi
jae r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
inc edi
inc edi
mov ax [ edi ]
test ax ax
jne r-xdata
mov [ ebp - 0x4 ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ eax ] 0x0
push esi
push ebx
push [ ebp + 0x14 ]
call sub_408603
mov eax [ ebp + 0x14 ]
add esp 0xc
and [ eax + esi * 2 ] 0x0
mov esi edi
mov ebx [ ebp + 0x18 ]
test ebx ebx
je r-xdata
sub eax ebx
shr eax 0x1
cmp eax esi
mov ebx eax
jb r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x8 ] eax
mov ebx eax
jmp r-xdata
sub eax ebx
shr eax 0x1
cmp eax esi
mov ebx eax
jb r-xdata
sub edi [ ebp - 0x4 ]
shr edi 0x1
cmp edi esi
jae r-xdata
push ebx
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_408603
mov eax [ ebp + 0x14 ]
add esp 0xc
and [ eax + ebx * 2 ] 0x0
mov ebx esi
push ebx
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_408603
mov eax [ ebp + 0x10 ]
add esp 0xc
and [ eax + ebx * 2 ] 0x0
mov ebx esi
push esi
push [ ebp - 0x4 ]
push ebx
call sub_408603
add esp 0xc
and [ ebx + esi * 2 ] 0x0
jmp r-xdata
mov esi edi
sub_408a5f
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
mov dx [ ecx ]
inc ecx
inc ecx
test dx dx
jne r-xdata
dec ecx
dec ecx
cmp [ ebp + 0x10 ] 0x0
push esi
je r-xdata
and [ ecx ] 0x0
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov dx [ esi ]
dec [ ebp + 0x10 ]
mov [ ecx ] dx
inc ecx
inc ecx
inc esi
inc esi
test dx dx
je r-xdata
sub_408a9c
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
mov edx eax
je r-xdata
push esi
mov esi [ esp + 0xc ]
inc edx
inc edx
cmp [ edx ] 0x0
jne r-xdata
mov cx [ esi ]
mov [ edx ] cx
inc edx
inc edx
inc esi
inc esi
test cx cx
jne r-xdata
pop esi
retn
sub_408ae2
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call sub_40a8b2
add esp 0xc
test esi esi
mov edi eax
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40a70e
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
sub_408b39
push ebp
mov ebp esp
sub esp 0x20
push [ ebp + 0xc ]
and [ ebp - 0x18 ] 0x0
push [ ebp + 0x8 ]
and [ ebp - 0x20 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_40a8b2
add esp 0xc
leave
retn
sub_408b69
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call sub_40a8b2
add esp 0xc
test esi esi
mov edi eax
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40a70e
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
sub_408bbf
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x14 ]
add eax eax
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
call sub_40c05c
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40a70e
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40a70e
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
leave
retn
sub_408c2e
push ebp
mov ebp esp
sub esp 0x20
push [ ebp + 0xc ]
and [ ebp - 0x18 ] 0x0
push [ ebp + 0x8 ]
and [ ebp - 0x20 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_40c05c
add esp 0xc
leave
retn
sub_408cb5
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
xor ebx ebx
cmp ecx ebx
jl r-xdata
xor eax eax
jg r-xdata
cmp ecx 0x1000
jg r-xdata
cmp eax ebx
jb r-xdata
jl r-xdata
push esi
call sub_40d280
mov ecx [ edi + 0x4 ]
cmp ecx ebx
mov esi [ edi ]
jl r-xdata
cmp eax ebx
ja r-xdata
push edi
call sub_40d295
cmp [ rw-data ] ebx
pop ecx
mov esi eax
je r-xdata
jg r-xdata
mov eax [ esi ]
cdq
mov ecx eax
mov eax [ rw-data ]
mov edi edx
cdq
sub ecx eax
sbb edi edx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_40d0f3
test eax eax
pop ecx
je r-xdata
mov eax [ rw-data ]
cdq
sub esi eax
lea eax [ ebp - 0x8 ]
sbb ecx edx
push eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ecx
call sub_40d295
cmp [ rw-data ] ebx
pop ecx
mov esi eax
je r-xdata
cmp esi 0x3f480
jbe r-xdata
push ebx
push 0x3c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_40d4a0
mov ecx eax
mov eax [ esi + 0x4 ]
mov edi edx
cdq
add ecx eax
push ebx
adc edi edx
push 0x3c
push edi
push ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edi
call sub_40d550
cmp eax ebx
mov [ esi + 0x4 ] eax
jge r-xdata
add eax 0x3c
mov [ esi ] eax
add [ ebp - 0x8 ] 0xffffffc4
adc [ ebp - 0x4 ] 0xffffffff
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cdq
mov ecx eax
mov eax [ esi ]
mov edi edx
cdq
sub eax ecx
sbb edx edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov [ esi + 0x20 ] 0x1
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax esi
pop esi
jmp r-xdata
push esi
call sub_40d0f3
test eax eax
pop ecx
je r-xdata
push ebx
push 0x3c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_40d4a0
mov ecx eax
mov eax [ esi + 0x8 ]
mov edi edx
cdq
add ecx eax
push ebx
adc edi edx
push 0x18
push edi
push ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edi
call sub_40d550
cmp eax ebx
mov [ esi + 0x8 ] eax
jge r-xdata
add eax 0x3c
mov [ esi + 0x4 ] eax
add [ ebp - 0x8 ] 0xffffffc4
adc [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x3c
push edi
push ecx
call sub_40d550
cmp eax ebx
mov [ esi ] eax
jge r-xdata
pop edi
pop ebx
leave
retn
mov eax [ rw-data ]
cdq
sub [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
sbb [ ebp - 0x4 ] edx
call sub_40d295
mov esi eax
pop ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
push ebx
push 0x18
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_40d4a0
cmp edx ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jg r-xdata
add eax 0x18
mov [ esi + 0x8 ] eax
add [ ebp - 0x8 ] 0xffffffe8
adc [ ebp - 0x4 ] 0xffffffff
jl r-xdata
mov ecx [ esi + 0x18 ]
lea eax [ ecx + eax + 0x7 ]
cdq
push 0x7
pop ecx
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp - 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
cmp eax ebx
jg r-xdata
cmp eax ebx
jae r-xdata
mov eax [ ebp - 0x8 ]
add [ esi + 0x1c ] eax
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] 0x16c
mov [ esi + 0x10 ] 0xb
jmp r-xdata
sub_408ec3
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_40d610
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
sub_408eff
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
xor eax eax
cmp ebx esi
push edi
je r-xdata
cmp [ rw-data ] esi
jne r-xdata
mov edx [ ebp + 0x10 ]
cmp edx esi
je r-xdata
push esi
push esi
push 0xffffffff
push [ ebp + 0xc ]
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
cmp eax esi
je r-xdata
push [ ebp + 0xc ]
call sub_409e30
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] esi
jne r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
dec eax
mov edi [ ebp + 0xc ]
mov esi [ MultiByteToWideChar@IAT ]
push edx
push ebx
push 0xffffffff
push edi
push 0x9
push [ rw-data ]
call esi
test eax eax
jne r-xdata
cmp edx esi
jbe r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
je r-xdata
mov ecx [ ebp + 0xc ]
add ecx eax
movzx si [ ecx ]
mov [ ebx ] si
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax edi
inc eax
inc ebx
inc ebx
cmp eax edx
jb r-xdata
push [ ebp + 0x10 ]
sub eax edi
push ebx
push eax
push edi
push 0x1
push [ rw-data ]
call esi
test eax eax
jne r-xdata
mov edx [ rw-data ]
movzx ecx cl
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
jmp r-xdata
jmp r-xdata
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
inc eax
cmp [ eax ] 0x0
je r-xdata
mov cl [ eax ]
dec [ ebp + 0x8 ]
test cl cl
je r-xdata
sub_409009
push edi
mov edi [ esp + 0xc ]
test edi edi
jle r-xdata
pop edi
retn
push esi
lea esi [ esp + 0x10 ]
add esi 0x4
push [ esi ]
push [ esp + 0x10 ]
call sub_407bd0
dec edi
pop ecx
pop ecx
jne r-xdata
pop esi
sub_40902d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
push 0x0
push edi
call sub_407cc0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x2e
jne r-xdata
pop edi
pop esi
pop ebp
retn
and [ ebp + 0xc ] 0x0
push ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
push r--data
push esi
call sub_40e380
test eax eax
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push eax
call sub_4087e0
add esp 0xc
mov [ edi + 0x8f ] 0x0
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
add eax 0x40
jmp r-xdata
call sub_4087e0
add esp 0xc
cmp bl 0x2c
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
add eax 0x80
cmp bl 0x2c
jne r-xdata
push esi
push eax
xor eax eax
jmp r-xdata
test bl bl
je r-xdata
pop ebx
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
sub_409109
push esi
mov esi [ esp + 0xc ]
push esi
push [ esp + 0xc ]
call sub_407bc0
lea eax [ esi + 0x40 ]
cmp [ eax ] 0x0
pop ecx
pop ecx
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] 0x0
pop esi
je r-xdata
push eax
push r--data
push 0x2
push [ esp + 0x14 ]
call sub_409009
add esp 0x10
retn
push eax
push r--data
push 0x2
push [ esp + 0x10 ]
call sub_409009
add esp 0x10
sub_409157
mov eax [ rw-data ]
push ebp
xor ebp ebp
inc ebp
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov [ eax ] 0x0
push [ rw-data ]
mov edi r--data
push edi
push [ rw-data ]
push 0x3
push [ rw-data ]
call sub_409009
mov esi rw-data
add esp 0x14
mov ebx esi
push 0x351
call sub_40a510
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
push [ esi ]
mov ebx esi
push edi
push [ esi - 0x4 ]
push 0x3
push [ rw-data ]
call sub_409009
add esp 0x14
cmp esi rw-data
jl r-xdata
xor ebp ebp
pop ebp
retn
push r--data
push [ rw-data ]
call sub_407bd0
add esi 0xc
push [ esi ]
push [ ebx ]
call sub_409ec0
add esp 0x10
test eax eax
je r-xdata
test ebp ebp
pop edi
pop esi
pop ebx
jne r-xdata
push [ rw-data ]
call sub_40a265
and [ rw-data ] 0x0
mov eax [ rw-data ]
pop ecx
pop ebp
retn
mov eax [ rw-data ]
pop ebp
retn
sub_409216
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
cmp esi edx
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp [ esi ] 0x43
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
push esi
call sub_409e30
mov edi 0x82
cmp eax edi
pop ecx
mov ebx rw-data
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
call sub_407da9
leave
retn
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_40902d
test eax eax
pop ecx
pop ecx
jne r-xdata
push esi
push rw-data
call sub_409ec0
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
cmp ecx edx
mov [ eax ] 0x43
mov [ eax + 0x1 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x94 ]
push eax
push rw-data
push eax
call sub_40eb05
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push esi
push ebx
call sub_409ec0
test eax eax
pop ecx
pop ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
cmp ecx edx
je r-xdata
mov [ ecx ] dx
mov [ ecx + 0x2 ] dx
mov [ ecx + 0x4 ] dx
pop edi
pop ebx
movzx eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x94 ]
push eax
push rw-data
call sub_409109
cmp [ esi ] 0x0
pop ecx
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push 0x6
push rw-data
push [ ebp + 0x10 ]
call sub_407df0
add esp 0xc
mov [ ecx ] edx
jmp r-xdata
mov esi r--data
push esi
call sub_409e30
cmp eax edi
pop ecx
jb r-xdata
mov esi rw-data
push esi
push [ ebp + 0xc ]
call sub_407bc0
pop ecx
pop ecx
mov eax esi
push 0x4
push rw-data
push [ ebp + 0x14 ]
call sub_407df0
add esp 0xc
push edi
push esi
push ebx
mov [ rw-data ] 0x0
call sub_4087e0
add esp 0xc
sub_409372
push ebp
lea ebp [ esp - 0x74 ]
sub esp 0x1c0
mov eax [ rw-data ]
mov [ ebp + 0x70 ] eax
push esi
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x138 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x7c ]
call sub_409216
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebp + 0x70 ]
call sub_407da9
add ebp 0x74
leave
retn
push ebx
lea ebx [ esi + esi * 2 ]
shl ebx 0x2
push [ ebx + rw-data ]
lea eax [ ebp - 0x14 ]
push eax
call sub_409ec0
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_409e30
inc eax
push eax
call sub_40a510
test eax eax
pop ecx
pop ecx
mov [ ebp - 0x124 ] eax
je r-xdata
mov eax [ ebx + rw-data ]
jmp r-xdata
pop ebx
mov eax [ ebx + rw-data ]
push edi
mov [ ebp - 0x120 ] eax
lea edi [ esi * 4 + rw-data ]
mov eax [ edi ]
mov [ ebp - 0x13c ] eax
lea eax [ esi + esi * 2 ]
lea eax [ eax * 2 + rw-data ]
push 0x6
push eax
mov [ ebp - 0x118 ] eax
lea eax [ ebp - 0x14c ]
push eax
call sub_407df0
mov eax [ rw-data ]
mov [ ebp - 0x128 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x124 ]
call sub_407bc0
mov [ ebx + rw-data ] eax
movzx eax [ ebp - 0x138 ]
mov [ edi ] eax
push 0x6
lea eax [ ebp - 0x138 ]
push eax
push [ ebp - 0x118 ]
call sub_407df0
add esp 0x20
cmp esi 0x2
jne r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ ebp - 0x11c ]
mov ecx [ rw-data ]
and [ ebp - 0x118 ] 0x0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ ebp - 0x12c ] eax
mov eax rw-data
call [ ebx + rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x11c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x118 ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x118 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x12c ]
mov [ ebp - 0x144 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x144 ]
add eax 0x8
cmp eax rw-data
mov [ ebp - 0x12c ] edx
jl r-xdata
cmp [ ebp - 0x120 ] rw-data
je r-xdata
mov eax [ ebp - 0x120 ]
push [ ebp - 0x124 ]
mov [ ebx + rw-data ] eax
call sub_40a265
mov eax [ ebp - 0x13c ]
mov [ edi ] eax
mov eax [ ebp - 0x128 ]
mov [ rw-data ] eax
pop ecx
xor eax eax
jmp r-xdata
cmp [ ebp - 0x118 ] 0x5
jne r-xdata
lea eax [ eax * 8 + rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x12c ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x11c ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov eax [ ebx + rw-data ]
push [ ebp - 0x120 ]
call sub_40a265
pop ecx
pop edi
mov eax [ rw-data ]
push 0x1
push [ rw-data ]
lea eax [ ebp - 0x114 ]
push [ ebp - 0x11c ]
push eax
push 0x7f
push r--data
push 0x1
call sub_40ed78
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
xor eax eax
mov [ rw-data ] eax
and [ ebp + eax * 2 - 0x113 ] 0x1
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_40ecc0
add esp 0xc
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
jmp r-xdata
sub_409601
push ebp
lea ebp [ esp - 0x70 ]
sub esp 0x90
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x78 ]
xor ebx ebx
cmp esi ebx
mov [ ebp + 0x6c ] eax
push edi
jl r-xdata
xor eax eax
cmp esi 0x5
jg r-xdata
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x7c ]
cmp edi ebx
mov [ ebp - 0x1c ] 0x1
mov [ ebp + 0x78 ] ebx
je r-xdata
cmp [ ebp + 0x7c ] ebx
je r-xdata
call sub_409157
cmp [ edi ] 0x4c
jne r-xdata
lea eax [ esi + esi * 2 ]
mov esi [ eax * 4 + rw-data ]
jmp r-xdata
push [ ebp + 0x7c ]
call sub_409372
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x6c ]
pop edi
pop esi
pop ebx
call sub_407da9
add ebp 0x70
leave
retn
push ebx
push ebx
push ebx
lea eax [ ebp - 0x18 ]
push eax
push edi
call sub_409216
mov esi eax
add esp 0x14
cmp esi ebx
je r-xdata
cmp [ edi + 0x1 ] 0x43
jne r-xdata
mov eax esi
jmp r-xdata
mov esi eax
mov edi rw-data
xor esi esi
mov ebx edi
cmp [ edi + 0x2 ] 0x5f
jne r-xdata
add ebx 0xc
inc esi
cmp ebx rw-data
jle r-xdata
push [ ebx ]
lea eax [ ebp - 0x18 ]
push eax
call sub_409ec0
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push edi
call sub_40ef40
mov ebx eax
test ebx ebx
pop ecx
pop ecx
je r-xdata
cmp ebx edi
je r-xdata
xor edi edi
cmp [ ebp - 0x1c ] edi
je r-xdata
inc [ ebp + 0x78 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_409372
test eax eax
pop ecx
jne r-xdata
sub eax edi
mov [ ebp - 0x1c ] eax
je r-xdata
cmp [ ebp + 0x78 ] edi
jne r-xdata
call sub_409157
push [ rw-data ]
mov esi eax
call sub_40a265
pop ecx
mov [ rw-data ] edi
jmp r-xdata
and [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
xor esi esi
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
mov esi rw-data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_409f90
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x20 ]
add esi 0xc
cmp esi rw-data
jle r-xdata
push [ esi ]
call sub_409e30
cmp [ ebp - 0x1c ] eax
pop ecx
je r-xdata
mov eax [ ebp - 0x1c ]
inc ebx
push r--data
push ebx
call sub_40e380
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
mov esi [ ebp - 0x20 ]
cmp esi 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
lea eax [ ebp - 0x18 ]
push ebx
push eax
call sub_4087e0
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp + edi - 0x18 ] 0x0
call sub_409372
add esp 0x10
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x78 ] esi
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
inc [ ebp + 0x78 ]
sub_4097f4
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
xor esi esi
cmp edi ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push ebx
push 0xffffffff
push [ ebp + 0xc ]
push ebx
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0xc ]
call sub_407dd0
pop ecx
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp - 0x10 ] ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_407da9
leave
retn
cmp [ rw-data ] 0x1
jne r-xdata
cmp edx ebx
jbe r-xdata
dec eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edx
push edi
mov edi [ WideCharToMultiByte@IAT ]
push 0xffffffff
push [ ebp + 0xc ]
push ebx
push [ rw-data ]
call edi
mov esi eax
cmp esi ebx
je r-xdata
cmp edx ebx
jbe r-xdata
mov eax esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edx
push edi
push edx
push [ ebp + 0xc ]
push ebx
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx edx
mov al [ ecx ]
mov [ esi + edi ] al
mov ax [ ecx ]
inc ecx
inc ecx
test ax ax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
je r-xdata
lea eax [ esi - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp ecx ebx
je r-xdata
inc eax
inc eax
dec ecx
jne r-xdata
inc esi
cmp esi edx
jb r-xdata
cmp esi [ ebp + 0x10 ]
jb r-xdata
cmp [ eax + edi - 0x1 ] bl
jne r-xdata
cmp [ eax ] bx
jne r-xdata
cmp [ eax ] bx
je r-xdata
cmp [ ecx ] 0xff
ja r-xdata
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
push [ ebp + 0xc ]
push ebx
push [ rw-data ]
call edi
cmp eax ebx
mov [ ebp - 0x14 ] eax
je r-xdata
jmp r-xdata
sub eax [ ebp + 0xc ]
sar eax 0x1
inc eax
mov [ ebp + 0x10 ] eax
mov edx eax
cmp [ ebp - 0x10 ] ebx
jne r-xdata
lea ecx [ eax + esi ]
cmp ecx [ ebp + 0x10 ]
ja r-xdata
xor edx edx
cmp eax ebx
jle r-xdata
add [ ebp + 0xc ] 0x2
mov cl [ ebp + edx - 0xc ]
cmp cl bl
mov eax [ ebp + 0x8 ]
mov [ esi + eax ] cl
je r-xdata
inc edx
inc esi
cmp edx [ ebp - 0x14 ]
jl r-xdata
sub_4099ad
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_4099f8
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
push [ edi ]
call sub_409e30
inc eax
push eax
call sub_40a510
test eax eax
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
pop edi
mov [ esi + 0x8 ] 0x1
mov eax esi
pop esi
retn 0x4
push [ edi ]
push eax
call sub_407bc0
pop ecx
pop ecx
sub_409a35
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov [ esi ] r--data
mov eax [ edi + 0x8 ]
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
call sub_409e30
inc eax
push eax
call sub_40a510
test eax eax
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
push [ edi + 0x4 ]
push eax
call sub_407bc0
pop ecx
pop ecx
jmp r-xdata
sub_409af0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_409b50 ]
jmp [ ecx * 4 + jump_table_409bd0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409c3c ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409c3c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_409dd8 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_409cdc ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409dd8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409c3c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409c3c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409c3c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409dd8 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409dd8 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409dd8 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409dd8 ]
sub_409e30
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_409ec0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_409f48
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
jmp sub_40f0d0
pop edi
mov eax ebx
pop esi
sub eax ecx
pop ebx
retn
cmp ebx ecx
je r-xdata
movzx eax [ esi ]
push eax
call sub_40efee
mov ebx eax
movzx eax [ edi ]
push eax
inc esi
call sub_40efee
pop ecx
inc edi
test ebx ebx
pop ecx
mov ecx eax
je r-xdata
sub_409f90
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
sub ecx 0x2
sub_409fc9
push esi
mov esi [ esp + 0x8 ]
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_40f11e
test eax eax
pop ecx
jne r-xdata
inc esi
movzx ecx [ esi ]
inc esi
cmp ecx 0x2d
mov edx ecx
je r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0x2b
jne r-xdata
or ecx 0xffffffff
cmp ecx 0x39
jg r-xdata
xor eax eax
cmp edx 0x2d
pop esi
jne r-xdata
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
movzx ecx [ esi ]
inc esi
jmp r-xdata
sub ecx 0x30
jmp r-xdata
retn
neg eax
cmp ecx 0x30
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_40a028
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_40a09d
push esi
push [ rw-data ]
call sub_40f1e4
pop ecx
mov ecx [ rw-data ]
mov esi eax
mov eax [ rw-data ]
mov edx ecx
sub edx eax
add edx 0x4
cmp esi edx
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
pop esi
retn
mov ecx 0x800
cmp esi ecx
jae r-xdata
add ecx esi
push ecx
push eax
call sub_40a5ac
test eax eax
pop ecx
pop ecx
jne r-xdata
mov ecx esi
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
add esi 0x10
push esi
push [ rw-data ]
call sub_40a5ac
test eax eax
pop ecx
pop ecx
jne r-xdata
pop esi
retn
sub_40a131
push 0x80
call sub_40a510
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
retn
push 0x18
pop eax
retn
sub_40a164
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_408522
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
push ebx
call sub_40f21c
add esp 0x4
or eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
cmp esi 0xffffffff
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
mov eax [ edi + ecx * 4 + 0x4 ]
or eax eax
je r-xdata
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
xor ebx ebx
xor ecx ecx
xor edx edx
xor esi esi
xor edi edi
call eax
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_4084e0
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_408522
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_4085b6
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
mov eax [ edi + ecx * 4 + 0x8 ]
xor ebx ebx
xor ecx ecx
xor edx edx
xor esi esi
xor edi edi
call eax
sub_40a265
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ rw-data ] 0x3
push esi
jne r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
call sub_40f4f8
test eax eax
pop ecx
push esi
je r-xdata
push eax
call sub_40f523
pop ecx
pop ecx
pop esi
retn
sub_40a2c2
push 0x60
push r--data
call sub_40a560
mov edi 0x94
mov eax edi
call sub_410980
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ esi ] edi
push esi
call [ GetVersionExA@IAT ]
mov ecx [ esi + 0x10 ]
mov [ rw-data ] ecx
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
mov edx [ esi + 0x8 ]
mov [ rw-data ] edx
mov esi [ esi + 0xc ]
and esi 0x7fff
mov [ rw-data ] esi
cmp ecx 0x2
je r-xdata
shl eax 0x8
add eax edx
mov [ rw-data ] eax
xor esi esi
push esi
mov edi [ GetModuleHandleA@IAT ]
call edi
cmp [ eax ] 0x5a4d
jne r-xdata
or esi 0x8000
mov [ rw-data ] esi
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
cmp [ ecx ] 0x4550
jne r-xdata
push esi
call sub_40f45f
pop ecx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x18 ]
cmp eax 0x10b
je r-xdata
call sub_4108f3
mov [ ebp - 0x4 ] esi
call sub_410748
test eax eax
jge r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp [ ecx + 0x74 ] 0xe
jbe r-xdata
cmp eax 0x20b
je r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_410626
mov [ rw-data ] eax
call sub_410584
test eax eax
jge r-xdata
push 0x1b
call sub_40a29d
pop ecx
push 0x1c
call sub_40ffd3
push 0xff
call sub_40d678
call sub_41014a
xor eax eax
cmp [ ecx + 0xe8 ] esi
cmp [ ecx + 0x84 ] 0xe
jbe r-xdata
call sub_410351
test eax eax
jge r-xdata
push 0x8
call sub_40a29d
pop ecx
xor eax eax
cmp [ ecx + 0xf8 ] esi
jmp r-xdata
push 0x1
call sub_40d6a8
pop ecx
mov [ ebp - 0x28 ] eax
cmp eax esi
je r-xdata
push 0x9
call sub_40a29d
pop ecx
setne al
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x44 ] esi
lea eax [ ebp - 0x70 ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_4102f4
mov [ ebp - 0x20 ] eax
test [ ebp - 0x44 ] 0x1
je r-xdata
push eax
call sub_40a29d
pop ecx
push 0xa
pop eax
movzx eax [ ebp - 0x40 ]
jmp r-xdata
call sub_40d7f5
jmp r-xdata
push edi
call sub_40d7d3
push eax
push [ ebp - 0x20 ]
push esi
push esi
call edi
push eax
call sub_401000
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x1c ] esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax edi
lea esp [ ebp - 0x7c ]
call sub_40a59b
retn
sub_40a49e
cmp [ rw-data ] 0x3
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
cmp [ rw-data ] 0x1
je r-xdata
inc esi
push esi
call sub_40fcd7
test eax eax
pop ecx
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
add esi 0xf
and esi 0xfffffff0
pop esi
retn
sub_40a4e4
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_40a49e
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40a522
test eax eax
pop ecx
jne r-xdata
sub_40a522
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
xor eax eax
inc eax
retn
sub_40a560
push sub_40a164
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] esp
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40a5ac
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push ebp
push edi
jne r-xdata
push esi
mov esi [ esp + 0x18 ]
test esi esi
jne r-xdata
push [ esp + 0x14 ]
call sub_40a510
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_40a265
pop ecx
jmp r-xdata
pop edi
pop ebp
pop ebx
retn
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call sub_40f4f8
mov ebp eax
test ebp ebp
pop ecx
je r-xdata
pop esi
push esi
call sub_40a522
test eax eax
pop ecx
jne r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
push esi
call sub_40a522
test eax eax
pop ecx
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
inc esi
test esi esi
jne r-xdata
push esi
push ebx
push ebp
call sub_40f9f8
add esp 0xc
test eax eax
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
inc esi
push esi
call sub_40fcd7
mov edi eax
test edi edi
pop ecx
je r-xdata
mov edi ebx
jmp r-xdata
test ebp ebp
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_407df0
push ebx
push ebp
call sub_40f523
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_407df0
push ebx
call sub_40f4f8
mov ebp eax
push ebx
push ebp
call sub_40f523
add esp 0x18
mov eax esi
sub_40a70e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
test al 0x82
mov ebx [ esi + 0x10 ]
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and eax 0xffffffef
or eax 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push ebx
call sub_410a49
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_410c7d
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_410a49
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_410c39
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov eax ebx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov ecx ebx
and ecx 0x1f
lea eax [ eax + ecx * 8 ]
jmp r-xdata
add esp 0xc
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_4109bd
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40a824
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40a70e
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_40a857
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_40a824
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_40a87b
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ esp + 0xc ]
mov ecx edi
call sub_40a824
inc ebx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebx
retn
mov eax [ esp + 0xc ]
add [ esi ] eax
jmp r-xdata
sub_40a8b2
push ebp
lea ebp [ esp - 0x1d4 ]
sub esp 0x254
mov eax [ rw-data ]
mov [ ebp + 0x1d0 ] eax
xor eax eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x1e0 ]
push ebx
mov bl [ eax ]
xor ecx ecx
test bl bl
je r-xdata
mov ecx [ ebp + 0x1d0 ]
mov eax [ ebp - 0x4c ]
pop ebx
call sub_407da9
add ebp 0x1d4
leave
retn
push esi
push edi
mov edi eax
jmp r-xdata
inc edi
cmp [ ebp - 0x4c ] 0x0
mov [ ebp + 0x1e0 ] edi
jl r-xdata
pop edi
pop esi
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0x1e0 ]
mov bl [ edi ]
test bl bl
jne r-xdata
jmp [ eax * 4 + jump_table_40b08c ]
movsx eax bl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x70 ]
xor eax eax
or [ ebp - 0x40 ] 0xffffffff
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x5c ] eax
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
and [ ebp - 0x40 ] 0x0
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
and [ ebp - 0x5c ] 0x0
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
cmp eax ecx
mov [ ebp - 0x70 ] eax
ja r-xdata
or [ ebp - 0x3c ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x58 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x58 ] eax
jmp r-xdata
add [ ebp + 0x1e4 ] 0x4
mov eax [ ebp + 0x1e4 ]
mov eax [ eax - 0x4 ]
test eax eax
mov [ ebp - 0x58 ] eax
jge r-xdata
mov eax [ ebp - 0x40 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
add [ ebp + 0x1e4 ] 0x4
mov eax [ ebp + 0x1e4 ]
mov eax [ eax - 0x4 ]
test eax eax
mov [ ebp - 0x40 ] eax
jge r-xdata
mov al [ edi ]
cmp al 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
mov ecx [ ebp + 0x1dc ]
lea esi [ ebp - 0x4c ]
mov al bl
call sub_40a824
jmp r-xdata
mov ecx [ ebp + 0x1dc ]
lea esi [ ebp - 0x4c ]
mov al bl
call sub_40a824
mov bl [ edi ]
inc edi
mov [ ebp + 0x1e0 ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x3c ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x3c ] 0x4
neg [ ebp - 0x58 ]
jmp r-xdata
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x3c ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x3c ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x3c ] 0x40
cmp [ ebp - 0x40 ] 0x0
lea esi [ ebp - 0x38 ]
mov [ ebp - 0x44 ] esi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x3c ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
inc edi
inc edi
or [ ebp - 0x3b ] 0x80
mov [ ebp + 0x1e0 ] edi
jmp r-xdata
or [ ebp - 0x3c ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
add [ ebp + 0x1e4 ] 0x4
test bl 0x20
mov eax [ ebp + 0x1e4 ]
je r-xdata
mov ecx [ ebp + 0x1e4 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add ecx 0x8
mov [ ebp + 0x1e4 ] ecx
jmp r-xdata
add [ ebp + 0x1e4 ] 0x4
test [ ebp - 0x3c ] 0x20
mov eax [ ebp + 0x1e4 ]
mov eax [ eax - 0x4 ]
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x40 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x3c ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc edi
inc edi
and [ ebp - 0x3b ] 0x7f
mov [ ebp + 0x1e0 ] edi
jmp r-xdata
or [ ebp - 0x3b ] 0x8
jmp r-xdata
test bl 0x40
mov eax [ eax - 0x4 ]
jne r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov ecx [ ebp - 0x4c ]
mov [ eax ] ecx
mov cx [ ebp - 0x4c ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x3c ] 0x80
mov [ ebp - 0x48 ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax 0x200
cmp [ ebp - 0x40 ] eax
jle r-xdata
cmp bl 0x67
jne r-xdata
mov eax [ ebp + 0x1e4 ]
mov ecx [ eax ]
push [ ebp - 0x6c ]
add eax 0x8
push [ ebp - 0x40 ]
mov [ ebp + 0x1e4 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x7c ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x80 ]
push esi
push eax
mov [ ebp - 0x80 ] ecx
call [ rw-data ]
mov edi [ ebp - 0x3c ]
add esp 0x14
and edi 0x80
je r-xdata
add [ ebp + 0x1e4 ] 0x4
mov eax [ ebp + 0x1e4 ]
mov eax [ eax - 0x4 ]
test eax eax
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x68 ] ecx
sub eax 0x43
je r-xdata
or [ ebp - 0x3c ] 0x8
jmp r-xdata
cmp al 0x6f
je r-xdata
cdq
jmp r-xdata
xor edx edx
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
test [ ebp - 0x3c ] esi
mov ebx eax
mov edi edx
jne r-xdata
test edx edx
jg r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov [ ebp - 0x64 ] 0x1
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov esi 0x8000
test esi ebx
je r-xdata
or [ ebp - 0x3b ] 0x2
jmp r-xdata
mov [ ebp - 0x40 ] 0x8
sub eax 0x3
je r-xdata
mov edi 0xa3
cmp [ ebp - 0x40 ] edi
jle r-xdata
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x44 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
add [ ebp + 0x1e4 ] 0x4
test [ ebp - 0x3c ] 0x810
mov eax [ ebp + 0x1e4 ]
je r-xdata
dec eax
jne r-xdata
mov al [ ebp - 0x68 ]
add al 0x51
mov [ ebp - 0x50 ] 0x30
mov [ ebp - 0x4f ] al
mov [ ebp - 0x54 ] 0x2
jmp r-xdata
test [ ebp - 0x3c ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
cmp [ ebp - 0x40 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
push [ ebp - 0x60 ]
call sub_40a265
and [ ebp - 0x60 ] 0x0
pop ecx
mov ecx [ ebp - 0x40 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x40 ]
add eax 0x15d
push eax
call sub_40a510
test eax eax
pop ecx
mov [ ebp - 0x60 ] eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
push esi
call [ rw-data ]
pop ecx
call sub_409e30
pop ecx
jmp r-xdata
test [ ebp - 0x3b ] 0x8
movsx eax [ eax ]
mov [ ebp - 0x44 ] ecx
je r-xdata
mov al [ eax - 0x4 ]
mov [ ebp - 0x38 ] al
mov [ ebp - 0x48 ] 0x1
movsx eax [ eax - 0x4 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_410d5e
test eax eax
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
jge r-xdata
cmp [ ebp - 0x64 ] 0x0
jne r-xdata
or [ ebp - 0x3b ] 0x8
mov [ ebp - 0x6c ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
and [ ebp - 0x3c ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40 ] eax
jle r-xdata
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x3b ] 0x1
test eax eax
jae r-xdata
add [ ebp + 0x1e4 ] 0x4
test [ ebp - 0x3c ] 0x810
mov eax [ ebp + 0x1e4 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x48 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] eax
mov esi eax
jmp r-xdata
push esi
or [ ebp - 0x3b ] 0x1
inc esi
mov [ ebp - 0x44 ] esi
push esi
call [ rw-data ]
pop ecx
mov [ ebp - 0x48 ] eax
and [ ebp - 0x5c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x5c ] 0x1
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x64 ] 0x1
jmp r-xdata
mov ebx [ ebp - 0x3c ]
test bl 0x40
je r-xdata
sub eax 0xc
jne r-xdata
cmp al 0x58
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov [ ebp - 0x68 ] 0x27
jmp r-xdata
mov esi [ ebp - 0x58 ]
sub esi [ ebp - 0x54 ]
sub esi [ ebp - 0x48 ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
test [ ebp - 0x3c ] 0x830
jne r-xdata
and [ ebp - 0x70 ] 0x0
lea esi [ ebp + 0x1c7 ]
and [ ebp - 0x54 ] 0x0
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x5c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x44 ] eax
test [ ebp - 0x3c ] 0x80
mov [ ebp - 0x48 ] 0x10
je r-xdata
push [ ebp - 0x54 ]
mov edi [ ebp + 0x1dc ]
lea eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x50 ]
call sub_40a87b
test bl 0x8
pop ecx
je r-xdata
push [ ebp + 0x1dc ]
lea eax [ ebp - 0x4c ]
push esi
push 0x20
call sub_40a857
add esp 0xc
test bl 0x1
je r-xdata
mov [ ebp - 0x50 ] 0x2d
jmp r-xdata
or [ ebp - 0x3b ] 0x8
mov eax [ ebp - 0x48 ]
cdq
push edx
push eax
push edi
push ebx
call sub_410dd0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x74 ] ebx
mov ebx eax
mov edi edx
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x50 ] 0x2b
jmp r-xdata
mov [ ebp - 0x54 ] 0x1
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x68 ]
lea eax [ ebp + 0x1c7 ]
sub eax esi
inc esi
test [ ebp - 0x3b ] 0x2
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] esi
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x44 ]
jmp r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x44 ]
sar eax 0x1
jmp r-xdata
push [ ebp - 0x48 ]
mov ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x4c ]
call sub_40a87b
pop ecx
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
push edi
push esi
push 0x30
lea eax [ ebp - 0x4c ]
call sub_40a857
add esp 0xc
mov [ ebp - 0x50 ] 0x20
mov eax [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
test eax eax
jg r-xdata
mov ecx esi
cmp [ ecx ] 0x30
jne r-xdata
inc eax
inc eax
inc eax
push [ ebp + 0x1dc ]
lea eax [ ebp - 0x4c ]
push esi
push 0x20
call sub_40a857
add esp 0xc
mov eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x44 ]
mov [ ebp - 0x74 ] eax
dec [ ebp - 0x44 ]
mov ecx [ ebp - 0x44 ]
mov [ ecx ] 0x30
inc eax
test eax eax
jne r-xdata
test [ ebp - 0x3c ] 0x4
je r-xdata
mov edi [ ebp + 0x1dc ]
push eax
lea eax [ ebp - 0x4c ]
lea ecx [ ebp + 0x1c8 ]
call sub_40a87b
cmp [ ebp - 0x74 ] 0x0
pop ecx
jne r-xdata
dec [ ebp - 0x74 ]
xor eax eax
mov ax [ ebx ]
push eax
lea eax [ ebp + 0x1c8 ]
push eax
call sub_410d5e
inc ebx
pop ecx
inc ebx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_40b0ac
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
mov [ rw-data ] esi
jne r-xdata
cmp eax 0xbb40e64e
jne r-xdata
pop esi
mov [ rw-data ] 0xbb40e64e
leave
retn
sub_40b112
push 0x118
push r--data
call sub_40a560
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
dec eax
je r-xdata
mov [ ebp - 0x4 ] ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ecx
pop ecx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov edi r--data
mov [ ebp - 0x128 ] r--data
mov esi 0xb9
mov edi r--data
mov [ ebp - 0x128 ] r--data
mov esi 0xd4
jmp r-xdata
push 0x3
call sub_40d7e4
int3
lea ebx [ ebp - 0x124 ]
mov eax ebx
push eax
call sub_409e30
pop ecx
add eax 0xb
cmp eax 0x3c
jbe r-xdata
push r--data
lea eax [ ebp - 0x124 ]
push eax
call sub_407bc0
pop ecx
pop ecx
mov [ ebp - 0x20 ] cl
push 0x104
lea eax [ ebp - 0x124 ]
push eax
push ecx
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_409e30
pop ecx
lea eax [ eax + esi + 0xc ]
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov esi esp
push edi
push esi
call sub_407bc0
mov edi r--data
push edi
push esi
call sub_407bd0
push r--data
push esi
call sub_407bd0
push ebx
push esi
call sub_407bd0
push edi
push esi
call sub_407bd0
push [ ebp - 0x128 ]
push esi
call sub_407bd0
push 0x12010
push r--data
push esi
call sub_410e65
add esp 0x3c
mov eax ebx
push eax
call sub_409e30
mov ebx eax
lea eax [ ebp - 0x124 ]
sub eax 0x31
add ebx eax
push 0x3
push r--data
push ebx
call sub_4087e0
add esp 0x10
sub_40b25a
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
retn
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ edi + 0x4 ]
cmp eax ecx
je r-xdata
test [ edi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_409ec0
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
test [ esi ] 0x2
jne r-xdata
sub_40b2c2
push 0x10
push r--data
call sub_40a560
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
inc [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_40b36f
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebx + 0x8 ] esi
call sub_40a59b
retn
call sub_40baed
call sub_40baed
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_40bb20
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40b37f
push 0x8
push r--data
call sub_40a560
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_40a59b
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_40815d
or [ ebp - 0x4 ] 0xffffffff
sub_40b3c4
push esi
mov esi eax
mov eax [ ecx ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40b3e3
push 0x40
push r--data
call sub_40a560
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ebx
and [ ebp - 0x48 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x38 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x50 ]
push eax
call sub_408418
pop ecx
pop ecx
mov [ ebp - 0x3c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x40 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x44 ] eax
mov [ rw-data ] esi
mov eax [ ebp + 0x10 ]
mov [ rw-data ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_408485
add esp 0x14
mov [ ebp - 0x20 ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_40b527
mov eax [ ebp - 0x20 ]
call sub_40a59b
retn
sub_40b45d
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x1c ] 0x0
mov [ ebp - 0x24 ] 0x1
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x14 ] 0x19930521
jne r-xdata
mov eax [ ebp - 0x24 ]
retn
sub_40b4ac
mov esp [ ebp - 0x18 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x30 ] eax
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x2c ] edx
xor edx edx
push eax
push ecx
xor esi esi
push esi
push edi
call sub_40b2c2
add esp 0x10
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] esi
mov esi [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_40b527
mov eax [ ebp - 0x20 ]
call sub_40a59b
retn
lea esi [ edx + edx * 4 ]
mov ebx [ ebp - 0x2c ]
lea esi [ ebx + esi * 4 ]
mov ebx [ esi + 0x4 ]
cmp eax ebx
jle r-xdata
inc edx
jmp r-xdata
cmp eax [ esi + 0x8 ]
jg r-xdata
mov [ ebp - 0x34 ] edx
cmp edx [ ecx + 0xc ]
jae r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x30 ]
mov eax [ edx + eax * 8 ]
mov [ ebp - 0x28 ] eax
sub_40b527
mov eax [ ebp - 0x38 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x3c ]
call sub_40844c
pop ecx
mov eax [ ebp - 0x40 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x44 ]
mov [ rw-data ] eax
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
cmp eax 0x19930521
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push [ esi + 0x18 ]
call sub_408431
pop ecx
test eax eax
je r-xdata
call sub_40858a
push eax
push esi
call sub_40b37f
pop ecx
pop ecx
sub_40b58d
push 0x8
push r--data
call sub_40a560
mov esi ecx
mov eax [ ebp + 0xc ]
mov edi edx
mov ebx [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
call sub_40a59b
retn
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ eax ]
test eax eax
js r-xdata
test [ eax + 0x3 ] 0x80
je r-xdata
and [ ebp - 0x4 ] 0x0
push 0x1
push [ ebx + 0x18 ]
test al 0x8
je r-xdata
lea edi [ ecx + edi + 0xc ]
test [ esi ] 0x1
je r-xdata
call sub_410f5e
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
call sub_410f5e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40baed
push 0x1
push edi
call sub_410f7a
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_410f5e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_410f5e
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_410f7a
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ edi ] eax
push 0x1
push edi
call sub_410f7a
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_410f7a
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_409af0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_410f96
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea ecx [ esi + 0x8 ]
mov eax [ ebx + 0x18 ]
call sub_40b3c4
push eax
push edi
call sub_409af0
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
lea ecx [ esi + 0x8 ]
test [ esi ] 0x4
je r-xdata
jmp r-xdata
call sub_40b3c4
push eax
push [ esi + 0x18 ]
push edi
call sub_40815d
jmp r-xdata
push 0x1
call sub_40b3c4
push eax
push [ esi + 0x18 ]
push edi
call sub_40815d
jmp r-xdata
lea ecx [ esi + 0x8 ]
call sub_40b3c4
mov [ edi ] eax
jmp r-xdata
sub_40b709
push ebp
mov ebp esp
test ecx ecx
je r-xdata
cmp [ ebp + 0x1c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push ebx
push [ ebp + 0x8 ]
mov edx esi
call sub_40b58d
pop ecx
pop ecx
push [ ebp + 0x1c ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_40812d
call sub_408164
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_40b2c2
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x18 ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_40b3e3
add esp 0x28
test eax eax
je r-xdata
sub_40b770
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x80000003
je r-xdata
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0x1c ]
push edi
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40839e
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_408227
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
push ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
lea ebx [ eax - 0x10 ]
push [ ebp + 0x18 ]
xor ecx ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40b709
mov esi [ ebp + 0x1c ]
add esp 0x18
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_40b82c
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x1c ] eax
jl r-xdata
call sub_40baed
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0xe06d7363
push esi
push edi
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] 0x3
mov edi 0x19930520
jne r-xdata
jmp sub_40bac0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40b770
add esp 0x20
jmp r-xdata
cmp [ ebx ] 0xe06d7363
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp eax edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40839e
mov ecx [ ebp - 0xc ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
jae r-xdata
cmp eax 0x19930521
jne r-xdata
mov esi eax
mov eax [ rw-data ]
push 0x1
push esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x1 ] 0x1
call sub_410f5e
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
jmp r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_40baed
push 0x1
push ebx
call sub_40b37f
pop ecx
pop ecx
cmp [ eax ] esi
jg r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
inc [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
add eax 0x14
cmp ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
jb r-xdata
cmp esi [ eax + 0x4 ]
jg r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax edi
je r-xdata
mov esi [ ebp - 0x1c ]
mov ecx [ eax + 0xc ]
test ecx ecx
mov esi [ eax + 0x10 ]
mov [ ebp - 0x18 ] ecx
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
jne r-xdata
mov ecx [ ebx + 0x1c ]
mov ecx [ ecx + 0xc ]
lea edx [ ecx + 0x4 ]
mov ecx [ ecx ]
test ecx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] ecx
jle r-xdata
call sub_40baed
dec [ ebp - 0x18 ]
add esi 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
push [ ebx + 0x1c ]
mov [ ebp - 0x24 ] edi
call sub_40b25a
test eax eax
pop ecx
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x8 ]
push [ ebp + 0x20 ]
mov ecx [ ebp - 0x24 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
mov ebx esi
mov esi [ ebp + 0xc ]
call sub_40b709
mov ebx [ ebp + 0x8 ]
add esp 0x18
mov eax edi
dec [ ebp - 0x14 ]
add [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub_40ba1e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
mov eax [ esi ]
push edi
and eax 0x1fffffff
mov edi 0x19930520
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_40baed
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
inc eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40b82c
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40b2c2
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40bac0
push 0x8
push r--data
call sub_40a560
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
push 0xa
call sub_40ffd3
push 0x16
call sub_4125d5
pop ecx
pop ecx
push 0x3
call sub_40d7e4
int3
or [ ebp - 0x4 ] 0xffffffff
sub_40bb20
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4085ad
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4085ad
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40bb6c
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40bb9b
push edi
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40bbc4
push ebp
mov ebp esp
sub esp 0x518
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
mov esi 0x100
jne r-xdata
xor eax eax
xor eax eax
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x118 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0x12 ]
test al al
mov [ ebp - 0x118 ] 0x20
je r-xdata
mov [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x518 ]
push [ rw-data ]
push eax
push esi
lea eax [ ebp - 0x118 ]
push eax
push 0x1
call sub_40ed78
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x218 ]
push esi
push eax
push esi
lea eax [ ebp - 0x118 ]
push eax
push esi
push [ rw-data ]
call sub_410fc6
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x318 ]
push esi
push eax
push esi
lea eax [ ebp - 0x118 ]
push eax
push 0x200
push [ rw-data ]
call sub_410fc6
add esp 0x5c
xor eax eax
push ebx
lea edx [ ebp - 0x11 ]
push edi
cmp eax 0x41
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
call sub_407da9
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test cl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov cl [ ebp + eax - 0x218 ]
inc edx
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub ecx eax
inc ecx
mov ebx ecx
shr ecx 0x2
lea edi [ ebp + eax - 0x118 ]
mov eax 0x20202020
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
mov [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov cl [ ebp + eax - 0x318 ]
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov cx [ ebp + eax * 2 - 0x518 ]
test cl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] cl
jmp r-xdata
sub_40bd50
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi 0xfffffffe
mov [ ebp - 0x4 ] eax
push edi
mov [ rw-data ] ebx
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov esi eax
cmp esi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
xor eax eax
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_407da9
leave
retn
call sub_40bb9b
xor edx edx
xor eax eax
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea ecx [ edx + edx * 2 ]
shl ecx 0x4
mov [ ebp - 0x1c ] ebx
stosb [ edi ]
lea ebx [ ecx + rw-data ]
add eax 0x30
inc edx
cmp eax 0xf0
jb r-xdata
test al al
jne r-xdata
cmp [ eax + rw-data ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
mov dl [ esi + 0x1 ]
test dl dl
je r-xdata
inc [ ebp - 0x1c ]
add ebx 0x8
cmp [ ebp - 0x1c ] 0x4
jb r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
stosb [ edi ]
xor edi edi
inc edi
cmp [ ebp - 0x18 ] edi
mov [ rw-data ] esi
mov [ rw-data ] ebx
jbe r-xdata
movzx eax al
movzx edi dl
cmp eax edi
ja r-xdata
mov al [ ebx ]
mov esi ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
call sub_40bb6c
lea esi [ ecx + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
inc esi
inc esi
mov al [ esi ]
mov edx [ ebp - 0x1c ]
mov dl [ edx + rw-data ]
call sub_40bbc4
mov eax edi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
mov eax esi
call sub_40bb6c
mov [ rw-data ] eax
mov [ rw-data ] edi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
jmp r-xdata
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax edx
jbe r-xdata
or [ eax + rw-data ] 0x4
inc eax
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
sub_40bf54
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4087e0
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push esi
pop edi
pop ebp
retn
inc edi
inc edx
test al al
je r-xdata
inc edi
inc edx
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov al [ edx ]
dec ecx
mov [ edi ] al
inc edi
inc edx
test al al
jne r-xdata
pop esi
mov edx ecx
shr ecx 0x2
xor eax eax
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov al [ edx ]
movzx esi al
dec ecx
test [ esi + rw-data ] 0x4
mov [ edi ] al
je r-xdata
jmp r-xdata
mov [ edi - 0x2 ] al
sub_40bfd5
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ esp + 0x8 ]
call sub_411382
cmp ax 0xffff
pop ecx
pop ecx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
retn
or [ esi ] 0xffffffff
retn
sub_40bffa
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_40bfd5
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_40c01f
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
dec [ esp + 0xc ]
xor eax eax
mov ax [ ebx ]
push eax
mov eax edi
call sub_40bfd5
inc ebx
inc ebx
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebx
retn
mov eax [ esp + 0xc ]
add [ esi ] eax
jmp r-xdata
sub_40c05c
push ebp
lea ebp [ esp - 0x3d8 ]
sub esp 0x458
mov eax [ rw-data ]
mov edx [ ebp + 0x3e4 ]
mov [ ebp + 0x3d4 ] eax
xor eax eax
push ebx
mov bx [ edx ]
xor ecx ecx
cmp bx ax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x58 ] eax
je r-xdata
mov ecx [ ebp + 0x3d4 ]
mov eax [ ebp - 0x40 ]
pop ebx
call sub_407da9
add ebp 0x3d8
leave
retn
push esi
push edi
jmp r-xdata
push 0x2
pop edi
add [ ebp + 0x3e4 ] edi
cmp [ ebp - 0x40 ] 0x0
jl r-xdata
pop edi
pop esi
push 0x20
pop esi
cmp bx si
jb r-xdata
xor eax eax
cmp bx 0x78
ja r-xdata
mov eax [ ebp + 0x3e4 ]
mov bx [ eax ]
test bx bx
jne r-xdata
jmp [ eax * 4 + jump_table_40c86c ]
movzx eax bx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x68 ]
xor eax eax
or [ ebp - 0x34 ] 0xffffffff
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4c ] eax
jmp r-xdata
movzx eax bx
sub eax esi
je r-xdata
cmp bx 0x2a
jne r-xdata
and [ ebp - 0x34 ] 0x0
jmp r-xdata
cmp bx 0x2a
jne r-xdata
movzx eax bx
cmp eax 0x49
je r-xdata
mov eax [ ebp + 0x3e0 ]
push ebx
lea esi [ ebp - 0x40 ]
mov [ ebp - 0x4c ] 0x1
call sub_40bfd5
jmp r-xdata
movzx eax bx
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
cmp eax ecx
mov [ ebp - 0x68 ] eax
ja r-xdata
or [ ebp - 0x30 ] edi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x48 ]
movzx ecx bx
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x48 ] eax
jmp r-xdata
add [ ebp + 0x3e8 ] 0x4
mov eax [ ebp + 0x3e8 ]
mov eax [ eax - 0x4 ]
test eax eax
mov [ ebp - 0x48 ] eax
jge r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx bx
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
add [ ebp + 0x3e8 ] 0x4
mov eax [ ebp + 0x3e8 ]
mov eax [ eax - 0x4 ]
test eax eax
mov [ ebp - 0x34 ] eax
jge r-xdata
mov eax [ ebp + 0x3e4 ]
mov ax [ eax ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x30 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x30 ] 0x4
neg [ ebp - 0x48 ]
jmp r-xdata
or [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
mov ecx [ ebp + 0x3e4 ]
cmp [ ecx + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x30 ] esi
jmp r-xdata
cmp eax 0x6c
je r-xdata
or [ ebp - 0x30 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x30 ] 0x40
cmp [ ebp - 0x34 ] 0x0
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x3c ] esi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x30 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
cmp ax 0x64
je r-xdata
mov ecx [ ebp + 0x3e4 ]
cmp [ ecx + 0x2 ] 0x32
jne r-xdata
add [ ebp + 0x3e4 ] 0x4
or [ ebp - 0x2f ] 0x80
jmp r-xdata
or [ ebp - 0x30 ] 0x10
jmp r-xdata
cmp eax 0x77
jne r-xdata
add [ ebp + 0x3e8 ] 0x4
test bl 0x20
mov eax [ ebp + 0x3e8 ]
je r-xdata
mov ecx [ ebp + 0x3e8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add ecx 0x8
mov [ ebp + 0x3e8 ] ecx
jmp r-xdata
add [ ebp + 0x3e8 ] 0x4
test [ ebp - 0x30 ] 0x20
mov eax [ ebp + 0x3e8 ]
mov eax [ eax - 0x4 ]
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x34 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x30 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add [ ebp + 0x3e4 ] 0x4
and [ ebp - 0x2f ] 0x7f
jmp r-xdata
or [ ebp - 0x2f ] 0x8
jmp r-xdata
test bl 0x40
mov eax [ eax - 0x4 ]
jne r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov ecx [ ebp - 0x40 ]
mov [ eax ] ecx
mov cx [ ebp - 0x40 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x30 ] 0x80
mov [ ebp - 0x38 ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax 0x200
cmp [ ebp - 0x34 ] eax
jle r-xdata
cmp bx 0x67
jne r-xdata
mov eax [ ebp + 0x3e8 ]
mov ecx [ eax ]
push [ ebp - 0x6c ]
add eax 0x8
push [ ebp - 0x34 ]
mov [ ebp + 0x3e8 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x7c ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x80 ]
push esi
push eax
mov [ ebp - 0x80 ] ecx
call [ rw-data ]
mov edi [ ebp - 0x30 ]
add esp 0x14
and edi 0x80
je r-xdata
add [ ebp + 0x3e8 ] 0x4
mov eax [ ebp + 0x3e8 ]
mov eax [ eax - 0x4 ]
test eax eax
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x64 ] ecx
sub eax 0x43
je r-xdata
or [ ebp - 0x30 ] 0x8
jmp r-xdata
cmp ax 0x6f
je r-xdata
cdq
jmp r-xdata
xor edx edx
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
test [ ebp - 0x30 ] esi
mov ebx eax
mov edi edx
jne r-xdata
test edx edx
jg r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
mov [ ebp - 0x5c ] 0x1
jmp r-xdata
mov ebx [ ebp - 0x30 ]
mov esi 0x8000
test esi ebx
je r-xdata
or [ ebp - 0x2f ] 0x2
jmp r-xdata
mov [ ebp - 0x34 ] 0x8
sub eax 0x3
je r-xdata
mov edi 0xa3
cmp [ ebp - 0x34 ] edi
jle r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
cmp bx 0x67
jne r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x3c ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
add [ ebp + 0x3e8 ] 0x4
mov eax [ ebp + 0x3e8 ]
movzx eax [ eax - 0x4 ]
xor esi esi
inc esi
test [ ebp - 0x30 ] 0x20
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x70 ] eax
je r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0x64 ]
add eax 0x51
mov [ ebp - 0x50 ] 0x30
mov [ ebp - 0x4e ] ax
mov [ ebp - 0x44 ] edi
jmp r-xdata
test [ ebp - 0x30 ] 0x830
jne r-xdata
sub eax edi
je r-xdata
cmp ax 0x75
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
push [ ebp - 0x58 ]
call sub_40a265
and [ ebp - 0x58 ] 0x0
mov edx [ ebp - 0x34 ]
cmp edx 0xffffffff
jne r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x15d
push eax
call sub_40a510
test eax eax
pop ecx
mov [ ebp - 0x58 ] eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
push esi
call [ rw-data ]
pop ecx
call sub_409e30
pop ecx
jmp r-xdata
test [ ebp - 0x2f ] 0x8
movsx eax [ eax ]
mov [ ebp - 0x3c ] ecx
je r-xdata
mov [ ebp - 0x2c ] ax
push [ rw-data ]
mov [ ebp - 0x54 ] al
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x53 ] 0x0
call sub_411454
add esp 0xc
test eax eax
jge r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
or [ ebp - 0x30 ] esi
mov [ ebp - 0x6c ] 0x1
add ebx esi
sub eax edi
je r-xdata
cmp ax 0x78
je r-xdata
and [ ebp - 0x30 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x34 ] eax
jle r-xdata
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x2f ] 0x1
test eax eax
jae r-xdata
add [ ebp + 0x3e8 ] 0x4
test [ ebp - 0x30 ] 0x20
mov eax [ ebp + 0x3e8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x3c ] eax
je r-xdata
mov edx 0x7fffffff
mov [ ebp - 0x38 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x3c ] eax
mov esi eax
jmp r-xdata
push esi
or [ ebp - 0x2f ] 0x1
inc esi
mov [ ebp - 0x3c ] esi
push esi
call [ rw-data ]
pop ecx
mov [ ebp - 0x38 ] eax
and [ ebp - 0x4c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov [ ebp - 0x5c ] esi
jmp r-xdata
mov eax [ ebp - 0x30 ]
test al 0x40
je r-xdata
sub eax 0xc
jne r-xdata
cmp ax 0x58
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x34 ] eax
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov [ ebp - 0x64 ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x48 ]
sub ebx [ ebp - 0x44 ]
sub ebx [ ebp - 0x38 ]
test [ ebp - 0x30 ] 0xc
jne r-xdata
test ah 0x1
je r-xdata
test [ ebp - 0x30 ] 0x830
jne r-xdata
and [ ebp - 0x68 ] 0x0
lea esi [ ebp + 0x1d3 ]
and [ ebp - 0x44 ] 0x0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x3c ] eax
and [ ebp - 0x38 ] 0x0
test edx edx
mov eax [ ebp - 0x3c ]
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x3c ] eax
test [ ebp - 0x30 ] 0x80
mov [ ebp - 0x38 ] 0x10
je r-xdata
push [ ebp - 0x44 ]
mov edi [ ebp + 0x3e0 ]
lea eax [ ebp - 0x40 ]
lea ecx [ ebp - 0x50 ]
call sub_40c01f
test [ ebp - 0x30 ] 0x8
pop ecx
je r-xdata
push [ ebp + 0x3e0 ]
lea eax [ ebp - 0x40 ]
push ebx
push 0x20
call sub_40bffa
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x50 ] 0x2d
jmp r-xdata
or [ ebp - 0x30 ] esi
mov eax [ ebp - 0x38 ]
cdq
push edx
push eax
push edi
push ebx
call sub_410dd0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x74 ] ebx
mov ebx eax
mov edi edx
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
test edx edx
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
test [ ebp - 0x30 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x50 ] 0x2b
jmp r-xdata
mov [ ebp - 0x44 ] 0x1
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x64 ]
lea eax [ ebp + 0x1d3 ]
sub eax esi
inc esi
test [ ebp - 0x2f ] 0x2
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] esi
je r-xdata
dec edx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x3c ]
sar eax 0x1
jmp r-xdata
mov esi [ rw-data ]
movzx ecx cl
test [ esi + ecx * 2 + 0x1 ] 0x80
je r-xdata
push [ ebp - 0x38 ]
mov ecx [ ebp - 0x3c ]
lea eax [ ebp - 0x40 ]
call sub_40c01f
pop ecx
mov eax [ ebp - 0x38 ]
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x40 ]
call sub_40bffa
add esp 0xc
mov [ ebp - 0x50 ] 0x20
mov eax [ ebp - 0x34 ]
dec [ ebp - 0x34 ]
test eax eax
jg r-xdata
mov ecx esi
cmp [ ecx ] 0x30
jne r-xdata
add eax edi
inc eax
inc [ ebp - 0x38 ]
cmp [ ebp - 0x38 ] edx
jl r-xdata
inc eax
push [ ebp + 0x3e0 ]
lea eax [ ebp - 0x40 ]
push ebx
push 0x20
call sub_40bffa
add esp 0xc
mov edi [ ebp - 0x3c ]
mov [ ebp - 0x60 ] eax
dec [ ebp - 0x3c ]
mov ecx [ ebp - 0x3c ]
mov [ ecx ] 0x30
inc eax
test eax eax
jne r-xdata
jmp r-xdata
test [ ebp - 0x30 ] 0x4
je r-xdata
push [ ebp - 0x70 ]
mov eax [ ebp + 0x3e0 ]
lea esi [ ebp - 0x40 ]
call sub_40bfd5
add edi [ ebp - 0x74 ]
cmp [ ebp - 0x60 ] 0x0
pop ecx
jg r-xdata
push [ rw-data ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x70 ]
push edi
push eax
call sub_411454
add esp 0xc
test eax eax
mov [ ebp - 0x74 ] eax
jle r-xdata
jmp r-xdata
sub_40c88c
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_40efee
cmp eax 0x65
pop ecx
je r-xdata
mov al [ esi ]
mov cl [ rw-data ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
movsx eax [ esi ]
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
push 0x4
push eax
call sub_41151c
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_40c8e4
mov eax [ esp + 0x4 ]
push ebx
mov bl [ rw-data ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl bl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
inc eax
pop ebx
retn
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] bl
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
test cl cl
mov [ eax ] cl
jne r-xdata
dec eax
sub_40c949
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4118fb
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_4118be
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_40c987
test edi edi
push esi
mov esi eax
je r-xdata
pop esi
retn
push esi
call sub_409e30
inc eax
push eax
push esi
add esi edi
push esi
call sub_409af0
add esp 0x10
sub_40c9a4
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_411a69
mov ebx [ ebp + 0x10 ]
mov esi eax
push esi
lea eax [ ebx + 0x1 ]
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
xor ecx ecx
test ebx ebx
setg cl
add eax [ ebp + 0xc ]
add ecx eax
push ecx
call sub_411938
add esp 0x14
mov ebx [ ebp + 0x10 ]
mov eax [ rw-data ]
xor ecx ecx
test ebx ebx
setg cl
xor edx edx
cmp [ eax ] 0x2d
mov esi eax
sete dl
mov edi ecx
add edx [ ebp + 0xc ]
mov eax edx
call sub_40c987
jmp r-xdata
test ebx ebx
jle r-xdata
mov [ eax ] 0x2d
inc eax
cmp [ esi ] 0x2d
mov eax [ ebp + 0xc ]
jne r-xdata
xor ecx ecx
cmp [ rw-data ] cl
push r--data
sete cl
add ecx eax
add ecx ebx
push ecx
call sub_407bc0
cmp [ ebp + 0x14 ] 0x0
pop ecx
pop ecx
mov ecx eax
je r-xdata
lea edi [ eax + 0x1 ]
mov cl [ edi ]
mov [ eax ] cl
mov cl [ rw-data ]
mov eax edi
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x4 ]
dec eax
jns r-xdata
inc ecx
cmp eax 0x64
jl r-xdata
neg eax
mov [ ecx ] 0x2d
inc ecx
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop esi
idiv esi
add [ ecx ] al
mov eax edx
add [ ecx + 0x1 ] al
cdq
push 0xa
pop esi
idiv esi
add [ ecx ] al
mov eax edx
sub_40ca95
cmp [ rw-data ] 0x0
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_411a69
mov esi eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x24 ]
push esi
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax ebx
push eax
call sub_411938
add esp 0x14
mov eax [ rw-data ]
cmp eax [ esp + 0x1c ]
mov esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea ebp [ ebx + 0x1 ]
cmp [ esi ] 0x2d
mov ebp ebx
jne r-xdata
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebx
mov eax ecx
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
jmp r-xdata
add ebp eax
mov eax ebp
call sub_40c987
mov [ ebp ] 0x30
inc ebp
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn
mov eax ebp
call sub_40c987
mov al [ rw-data ]
mov [ ebp ] al
mov esi [ esi + 0x4 ]
inc ebp
test esi esi
jge r-xdata
cmp [ esp + 0x1c ] 0x0
jle r-xdata
neg esi
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esp + 0x1c ] esi
cmp [ esp + 0x1c ] esi
jl r-xdata
mov edi [ esp + 0x1c ]
mov eax ebp
call sub_40c987
push edi
push 0x30
push ebp
call sub_407cc0
add esp 0xc
sub_40cb72
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ esi + 0x4 ]
push [ esi ]
call sub_411a69
mov ecx [ eax + 0x4 ]
mov ebx [ ebp + 0x10 ]
dec ecx
mov [ rw-data ] ecx
xor ecx ecx
cmp [ eax ] 0x2d
push eax
sete cl
push ebx
mov [ rw-data ] eax
add ecx [ ebp + 0xc ]
mov edi ecx
push edi
call sub_411938
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
add esp 0x14
dec eax
cmp [ rw-data ] eax
mov [ rw-data ] eax
setl cl
cmp eax 0xfffffffc
mov [ rw-data ] cl
jl r-xdata
push [ ebp + 0x14 ]
mov [ rw-data ] 0x1
push ebx
push [ ebp + 0xc ]
push esi
call sub_40c9a4
add esp 0x10
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
push ebx
push [ ebp + 0xc ]
mov [ rw-data ] 0x1
push esi
call sub_40ca95
add esp 0xc
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
pop edi
pop esi
mov [ rw-data ] 0x0
pop ebx
pop ebp
retn
mov [ edi - 0x2 ] al
sub_40cc1c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c9a4
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40cb72
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ca95
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_40cc7f
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_40ccbf
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_40cc7f
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_40cce8
push ebp
mov ebp esp
push ecx
push ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
push ebx
push esi
push edi
mov edi [ rw-data ]
xor ebx ebx
push r--data
mov [ ebp - 0x8 ] ebx
mov [ rw-data ] ebx
call sub_411c4e
mov esi eax
cmp esi ebx
pop ecx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call sub_40a265
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
xor edx edx
inc edx
cmp [ rw-data ] bx
mov [ rw-data ] edx
mov [ rw-data ] eax
je r-xdata
push esi
call sub_409e30
inc eax
push eax
call sub_40a510
cmp eax ebx
pop ecx
pop ecx
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_409ec0
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_407bc0
push 0x3
push esi
push [ rw-data ]
call sub_4087e0
mov eax [ rw-data ]
add esi 0x3
add esp 0x14
mov [ eax + 0x3 ] bl
cmp [ esi ] 0x2d
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_409fc9
imul eax eax 0xe10
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x8 ] 0x1
inc esi
push eax
call sub_40a265
pop ecx
mov eax [ rw-data ]
mov [ eax ] bl
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub eax ecx
imul eax eax 0x3c
mov [ rw-data ] edx
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ rw-data ]
mov [ eax ] bl
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3f ] bl
jmp r-xdata
mov esi [ WideCharToMultiByte@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x3f
push [ rw-data ]
push 0xffffffff
push rw-data
push ebx
push edi
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x3f
push [ rw-data ]
push 0xffffffff
push rw-data
push ebx
push edi
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
inc esi
push esi
call sub_409fc9
imul eax eax 0x3c
add [ rw-data ] eax
pop ecx
jmp r-xdata
movsx eax [ esi ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
neg [ rw-data ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_4087e0
mov eax [ rw-data ]
add esp 0xc
mov [ eax + 0x3 ] bl
jmp r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
inc esi
inc esi
push esi
call sub_409fc9
add [ rw-data ] eax
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_40cf3b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
push 0x4
cdq
pop ebx
idiv ebx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
test edx edx
jne r-xdata
test edx edx
mov [ ebp - 0x8 ] edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
add ecx [ rw-data ]
mov [ rw-data ] esi
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
mov [ rw-data ] ecx
jns r-xdata
add ecx [ ebp + 0x24 ]
mov [ rw-data ] esi
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
mov [ rw-data ] edi
mov [ rw-data ] ecx
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x4
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x4 ]
pop edi
push 0x7
sub edx eax
mov eax [ ebp + 0x10 ]
dec eax
mov ebx edx
cdq
idiv edi
mov edi [ ebp + 0x10 ]
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax 0x5265c00
cmp ecx eax
jl r-xdata
add ecx 0x5265c00
dec esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov [ rw-data ] edi
sub ecx eax
inc esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_40d0f3
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push ebx
mov ebx [ esp + 0xc ]
push ebp
xor ebp ebp
push edi
mov edi [ ebx + 0x14 ]
inc ebp
cmp edi [ rw-data ]
jne r-xdata
xor eax eax
pop esi
retn
cmp [ rw-data ] esi
je r-xdata
cmp edi [ rw-data ]
je r-xdata
push esi
push esi
push esi
push esi
push esi
push ebp
push edi
push ebp
push ebp
push 0x2
pop ecx
push 0x4
pop eax
call sub_40cf3b
push esi
push esi
push esi
push esi
push esi
push 0x5
push edi
push ebp
push esi
push 0x2
pop ecx
push 0xa
pop eax
call sub_40cf3b
add esp 0x48
cmp [ rw-data ] si
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
cmp edx eax
mov ecx [ ebx + 0x1c ]
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push edi
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edi
push ebp
jmp r-xdata
mov eax ebp
cmp ecx edx
jg r-xdata
xor eax eax
jmp r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push edi
push esi
jmp r-xdata
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edi
push ebp
movzx eax [ rw-data ]
push ebp
call sub_40cf3b
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
cmp [ rw-data ] si
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
pop edi
pop ebp
pop ebx
pop esi
retn
cmp ecx edx
jle r-xdata
movzx eax [ rw-data ]
push esi
call sub_40cf3b
add esp 0x24
jmp r-xdata
mov eax [ ebx + 0x8 ]
imul eax eax 0x3c
add eax [ ebx + 0x4 ]
imul eax eax 0x3c
add eax [ ebx ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jge r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_40d295
sub esp 0x10
mov eax [ esp + 0x14 ]
and [ esp ] 0x0
push edi
mov edi [ eax ]
mov eax [ eax + 0x4 ]
test eax eax
mov [ esp + 0x10 ] eax
jl r-xdata
xor eax eax
jg r-xdata
cmp eax 0x1000
jg r-xdata
test edi edi
jb r-xdata
jl r-xdata
push ebx
push ebp
push esi
push 0x0
push 0x1e13380
push eax
push edi
call sub_40d4a0
mov esi eax
add esi 0x46
lea eax [ esi + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
push 0x64
lea ecx [ esi - 0x1 ]
pop ebp
push 0x4
mov [ esp + 0x18 ] ecx
mov ebx eax
mov eax ecx
cdq
idiv ebp
sub ebx eax
mov eax ecx
cdq
pop ecx
idiv ecx
push 0xffffffff
push 0xfffffe93
lea eax [ ebx + eax - 0x11 ]
cdq
mov ebx eax
mov ebp edx
lea eax [ esi - 0x46 ]
cdq
push edx
push eax
call sub_40f1b0
sub eax ebx
sbb edx ebp
push 0x0
mov ebp 0x15180
push ebp
push edx
push eax
call sub_40f1b0
mov ebx [ esp + 0x1c ]
add edi eax
adc ebx edx
test ebx ebx
jg r-xdata
test edi edi
ja r-xdata
mov eax esi
push 0x4
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jl r-xdata
lea eax [ esi + 0x76c ]
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov esi [ esp + 0x14 ]
mov eax esi
add edi 0x1e13380
push 0x4
cdq
adc ebx 0x0
pop ecx
idiv ecx
test edx edx
jne r-xdata
test edi edi
jae r-xdata
push 0x0
push ebp
push ebx
push edi
mov [ rw-data ] esi
call sub_40d4a0
push 0xffffffff
mov esi eax
cdq
push 0xfffeae80
push edx
push eax
mov [ rw-data ] esi
call sub_40f1b0
add edi eax
adc ebx edx
cmp [ esp + 0x10 ] 0x0
mov ecx rw-data
jne r-xdata
mov [ esp + 0x10 ] 0x1
lea eax [ esi + 0x76c ]
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
xor eax eax
inc eax
cmp [ ecx + 0x4 ] esi
jge r-xdata
mov ecx rw-data
add edi ebp
adc ebx 0x0
jmp r-xdata
dec eax
mov [ rw-data ] eax
sub esi [ ecx + eax * 4 ]
mov eax [ esp + 0x24 ]
push 0x0
push ebp
mov [ rw-data ] esi
push [ eax + 0x4 ]
push [ eax ]
call sub_40d4a0
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor esi esi
push esi
push 0xe10
push ebx
push edi
mov [ rw-data ] edx
call sub_40d4a0
push 0xffffffff
mov [ rw-data ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_40f1b0
push esi
add edi eax
push 0x3c
adc ebx edx
push ebx
push edi
call sub_40d4a0
mov [ rw-data ] eax
imul eax eax 0x3c
mov [ rw-data ] esi
pop esi
sub edi eax
pop ebp
mov [ rw-data ] edi
mov eax rw-data
pop ebx
jmp r-xdata
inc eax
cmp [ ecx + eax * 4 ] esi
jl r-xdata
pop edi
add esp 0x10
retn
sub_40d4a0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_40d550
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40d610
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40d678
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call eax
sub_40d6a8
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push edi
mov ecx rw-data
mov edi rw-data
xor eax eax
cmp ecx edi
mov esi ecx
jae r-xdata
push [ esp + 0x4 ]
call eax
pop ecx
push sub_410937
call sub_40a11f
mov esi rw-data
mov eax esi
mov edi rw-data
cmp eax edi
pop ecx
jae r-xdata
test eax eax
jne r-xdata
xor eax eax
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
add esi 0x4
cmp esi edi
jb r-xdata
call ecx
test eax eax
jne r-xdata
sub_40d712
push ebp
mov ebp esp
push esi
xor esi esi
inc esi
cmp [ rw-data ] esi
push edi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
mov al [ ebp + 0x10 ]
mov [ rw-data ] esi
mov [ rw-data ] al
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov eax rw-data
mov esi rw-data
cmp eax esi
mov edi eax
jae r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
pop edi
pop esi
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax rw-data
mov esi rw-data
cmp eax esi
mov edi eax
jae r-xdata
mov eax [ rw-data ]
sub eax 0x4
cmp eax ecx
jmp r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
mov [ rw-data ] 0x1
call sub_40d678
add edi 0x4
cmp edi esi
jb r-xdata
call eax
mov eax [ edi ]
test eax eax
je r-xdata
mov [ rw-data ] eax
jae r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ rw-data ]
sub eax 0x4
cmp eax [ rw-data ]
call eax
sub_40d813
push ebp
mov ebp esp
push ecx
push ecx
test esi esi
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push ebx
push edi
lea ecx [ esi + 0x4 ]
push ecx
push 0x31
xor ebx ebx
push eax
inc ebx
push ebx
call sub_411ccf
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
push ebx
call sub_411ccf
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
push ebx
call sub_411ccf
mov ebx [ ebp - 0x8 ]
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push ebx
push 0x0
call sub_411ccf
add esp 0x40
or edi eax
mov [ esi + 0xac ] ebx
mov eax edi
pop edi
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_40db7a
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call sub_40a265
push [ esi + 0x8 ]
call sub_40a265
push [ esi + 0xc ]
call sub_40a265
push [ esi + 0x10 ]
call sub_40a265
push [ esi + 0x14 ]
call sub_40a265
push [ esi + 0x18 ]
call sub_40a265
push [ esi ]
call sub_40a265
push [ esi + 0x20 ]
call sub_40a265
push [ esi + 0x24 ]
call sub_40a265
push [ esi + 0x28 ]
call sub_40a265
push [ esi + 0x2c ]
call sub_40a265
push [ esi + 0x30 ]
call sub_40a265
push [ esi + 0x34 ]
call sub_40a265
push [ esi + 0x1c ]
call sub_40a265
push [ esi + 0x38 ]
call sub_40a265
push [ esi + 0x3c ]
call sub_40a265
add esp 0x40
push [ esi + 0x40 ]
call sub_40a265
push [ esi + 0x44 ]
call sub_40a265
push [ esi + 0x48 ]
call sub_40a265
push [ esi + 0x4c ]
call sub_40a265
push [ esi + 0x50 ]
call sub_40a265
push [ esi + 0x54 ]
call sub_40a265
push [ esi + 0x58 ]
call sub_40a265
push [ esi + 0x5c ]
call sub_40a265
push [ esi + 0x60 ]
call sub_40a265
push [ esi + 0x64 ]
call sub_40a265
push [ esi + 0x68 ]
call sub_40a265
push [ esi + 0x6c ]
call sub_40a265
push [ esi + 0x70 ]
call sub_40a265
push [ esi + 0x74 ]
call sub_40a265
push [ esi + 0x78 ]
call sub_40a265
push [ esi + 0x7c ]
call sub_40a265
add esp 0x40
push [ esi + 0x80 ]
call sub_40a265
push [ esi + 0x84 ]
call sub_40a265
push [ esi + 0x88 ]
call sub_40a265
push [ esi + 0x8c ]
call sub_40a265
push [ esi + 0x90 ]
call sub_40a265
push [ esi + 0x94 ]
call sub_40a265
push [ esi + 0x98 ]
call sub_40a265
push [ esi + 0x9c ]
call sub_40a265
push [ esi + 0xa0 ]
call sub_40a265
push [ esi + 0xa4 ]
call sub_40a265
push [ esi + 0xa8 ]
call sub_40a265
add esp 0x2c
sub_40dd0a
cmp [ rw-data ] 0x0
push esi
je r-xdata
push [ rw-data ]
mov [ rw-data ] rw-data
call sub_40db7a
push [ rw-data ]
call sub_40a265
and [ rw-data ] 0x0
push 0xb4
push 0x1
call sub_411e17
mov esi eax
test esi esi
pop ecx
pop ecx
jne r-xdata
call sub_40d813
test eax eax
je r-xdata
inc eax
pop esi
retn
push [ rw-data ]
mov [ rw-data ] esi
call sub_40db7a
push [ rw-data ]
call sub_40a265
mov [ rw-data ] esi
jmp r-xdata
push esi
call sub_40db7a
push esi
call sub_40a265
xor eax eax
inc eax
jmp r-xdata
xor eax eax
pop ecx
pop ecx
pop esi
retn
sub_40dd96
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a265
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40a265
pop ecx
push esi
call sub_40a265
pop ecx
sub_40ddd6
push ebx
push ebp
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push 0x30
push 0x1
call sub_411e17
mov ebp eax
cmp ebp ebx
pop ecx
pop ecx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ rw-data ]
push 0xc
pop ecx
mov edi ebp
[ edi ] [ esi ]
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ rw-data ]
call sub_40dd96
push [ rw-data ]
call sub_40a265
mov ebp rw-data
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp ] eax
mov eax [ rw-data ]
mov [ ebp + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
movzx esi [ rw-data ]
push ebp
push 0xe
push esi
push 0x1
call sub_411ccf
mov ebx eax
lea eax [ ebp + 0x4 ]
push eax
push 0xf
push esi
push 0x1
call sub_411ccf
lea edi [ ebp + 0x8 ]
push edi
push 0x10
push esi
push 0x1
or ebx eax
call sub_411ccf
add esp 0x30
or eax ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov [ rw-data ] ebp
mov eax [ ebp ]
mov al [ eax ]
mov [ rw-data ] al
mov [ rw-data ] 0x1
xor eax eax
mov eax [ edi ]
jmp r-xdata
push ebp
call sub_40dd96
push ebp
call sub_40a265
or eax 0xffffffff
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
pop ecx
pop ecx
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
push [ rw-data ]
call sub_40dd96
push [ rw-data ]
call sub_40a265
mov [ rw-data ] ebp
inc eax
mov ecx eax
sub cl 0x30
mov [ eax ] cl
lea esi [ ecx + 0x1 ]
mov dl [ esi ]
mov [ ecx ] dl
mov ecx esi
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
sub_40df1c
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a265
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a265
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a265
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a265
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a265
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40a265
pop ecx
push esi
call sub_40a265
pop ecx
sub_40dfa5
push ebx
push ebp
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push 0x30
push 0x1
call sub_411e17
mov ebp eax
cmp ebp ebx
pop ecx
pop ecx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
push [ rw-data ]
call sub_40df1c
push [ rw-data ]
call sub_40a265
mov [ rw-data ] rw-data
mov [ rw-data ] ebx
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push 0xc
pop ecx
mov esi rw-data
mov edi ebp
[ edi ] [ esi ]
movzx esi [ rw-data ]
lea eax [ ebp + 0xc ]
push eax
push 0x15
push esi
push 0x1
call sub_411ccf
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push 0x14
push esi
push 0x1
call sub_411ccf
or edi eax
lea eax [ ebp + 0x14 ]
push eax
push 0x16
push esi
push 0x1
call sub_411ccf
or edi eax
lea eax [ ebp + 0x18 ]
push eax
push 0x17
push esi
push 0x1
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ ebp + 0x1c ]
push eax
push 0x18
push esi
push 0x1
call sub_411ccf
or edi eax
lea eax [ ebp + 0x20 ]
push eax
push 0x50
push esi
push 0x1
call sub_411ccf
or edi eax
lea eax [ ebp + 0x24 ]
push eax
push 0x51
push esi
push 0x1
call sub_411ccf
or edi eax
lea eax [ ebp + 0x28 ]
push eax
push 0x1a
push esi
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ ebp + 0x29 ]
push eax
push 0x19
push esi
push ebx
call sub_411ccf
or edi eax
lea eax [ ebp + 0x2a ]
push eax
push 0x54
push esi
push ebx
call sub_411ccf
or edi eax
lea eax [ ebp + 0x2b ]
push eax
push 0x55
push esi
push ebx
call sub_411ccf
or edi eax
lea eax [ ebp + 0x2c ]
push eax
push 0x56
push esi
push ebx
call sub_411ccf
add esp 0x40
or edi eax
lea eax [ ebp + 0x2d ]
push eax
push 0x57
push esi
push ebx
call sub_411ccf
or edi eax
lea eax [ ebp + 0x2e ]
push eax
push 0x52
push esi
push ebx
call sub_411ccf
or edi eax
lea eax [ ebp + 0x2f ]
push eax
push 0x53
push esi
push ebx
call sub_411ccf
add esp 0x30
or eax edi
je r-xdata
pop ecx
pop ecx
xor eax eax
mov eax [ ebp + 0x1c ]
jmp r-xdata
push ebp
call sub_40df1c
push ebp
call sub_40a265
pop ecx
pop ecx
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov [ ebp + 0x8 ] eax
push [ rw-data ]
mov [ rw-data ] ebp
call sub_40df1c
push [ rw-data ]
call sub_40a265
mov [ rw-data ] ebp
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] bl
jne r-xdata
jmp r-xdata
sub_40e1a4
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ rw-data ]
add eax 0xffffff02
push eax
mov [ rw-data ] r--data
call sub_40a265
pop ecx
mov [ rw-data ] ebx
xor eax eax
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push 0x300
call sub_40a510
mov esi eax
mov [ esp ] 0x101
call sub_40a510
cmp esi ebx
pop ecx
mov [ ebp - 0x1c ] eax
je r-xdata
movzx eax [ rw-data ]
push rw-data
push 0x1004
push eax
push ebx
call sub_411ccf
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_40a265
xor ebx ebx
pop ecx
inc ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x20 ]
push [ ebp - 0x1c ]
call sub_40a265
pop ecx
pop edi
mov eax ebx
pop esi
jmp r-xdata
xor eax eax
mov edi 0x100
mov ecx [ ebp - 0x4 ]
pop ebx
call sub_407da9
leave
retn
mov ecx [ ebp - 0x1c ]
mov [ eax + ecx ] al
inc eax
cmp eax edi
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ rw-data ] eax
jle r-xdata
push ebx
push ebx
push ebx
lea eax [ esi + 0x100 ]
push eax
push edi
push [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
push 0x1
call sub_40ed78
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
lea edi [ esi + 0xfe ]
mov [ edi ] bx
cmp [ rw-data ] 0x1
mov [ ebp - 0x24 ] edi
jle r-xdata
lea eax [ ebp - 0x11 ]
push 0xfe
lea eax [ esi + 0x200 ]
push eax
push esi
call sub_407df0
mov eax [ ebp - 0x20 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
movzx ecx [ eax - 0x1 ]
movzx edx dl
jmp r-xdata
mov [ rw-data ] edi
add eax 0xffffff02
push eax
call sub_40a265
pop ecx
lea eax [ ebp - 0x11 ]
cmp ecx edx
jle r-xdata
movzx ecx [ eax - 0x1 ]
movzx edx dl
cmp ecx edx
jg r-xdata
mov edx [ ebp - 0x1c ]
mov [ ecx + edx ] bl
movzx edx [ eax ]
inc ecx
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
lea edx [ esi + ecx * 2 + 0x100 ]
mov dl [ eax ]
cmp dl bl
je r-xdata
mov dl [ eax ]
cmp dl bl
je r-xdata
mov [ edx ] 0x8000
movzx edi [ eax ]
inc ecx
inc edx
inc edx
cmp ecx edi
jle r-xdata
mov edi [ ebp - 0x24 ]
sub_40e380
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_40e3c6
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_409f48
test eax eax
pop ecx
pop ecx
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_40e440
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
push esi
mov esi ecx
test esi esi
mov [ ebp - 0x4 ] eax
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
call sub_407da9
leave
retn
lea esi [ ebp - 0xc ]
push r--data
push esi
call sub_409ec0
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
push esi
call sub_409ec0
test eax eax
pop ecx
pop ecx
jne r-xdata
push esi
call sub_409fc9
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
jmp r-xdata
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
sub_40e4b6
xor eax eax
xor eax eax
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ esp + 0x4 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
retn
sub_40e4d4
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x1a
xor esi esi
pop edi
mov ecx [ ebp + 0xc ]
dec ecx
je r-xdata
jae r-xdata
imul eax eax 0x2c
add eax r--data
dec ecx
dec ecx
je r-xdata
lea esi [ eax + 0x1 ]
lea edi [ eax - 0x1 ]
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
cmp ebx 0x1
jl r-xdata
imul eax eax 0x2c
add eax r--data
jmp r-xdata
sub ecx 0x4
je r-xdata
mov ebx [ ebp + 0x14 ]
lea eax [ edi + esi ]
cdq
sub eax edx
sar eax 0x1
mov ecx eax
imul ecx ecx 0x2c
mov ecx [ ecx + r--data ]
cmp [ ebp + 0x8 ] ecx
je r-xdata
cmp esi edi
jle r-xdata
mov esi [ ebp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push eax
push esi
call sub_4087e0
xor eax eax
add esp 0xc
mov [ esi + ebx - 0x1 ] 0x0
inc eax
jmp r-xdata
test eax eax
je r-xdata
imul eax eax 0x2c
add eax r--data
jmp r-xdata
sub ecx 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
imul eax eax 0x2c
add eax r--data
jmp r-xdata
sub ecx 0xff6
je r-xdata
imul eax eax 0x2c
mov eax [ eax + r--data ]
jmp r-xdata
dec ecx
je r-xdata
imul eax eax 0x2c
mov eax [ eax + r--data ]
jmp r-xdata
dec ecx
dec ecx
jne r-xdata
imul eax eax 0x2c
add eax r--data
jmp r-xdata
sub_40e5b7
xor eax eax
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
inc edx
cmp cl 0x61
jl r-xdata
retn
cmp cl 0x41
jl r-xdata
cmp cl 0x66
jg r-xdata
add eax 0xffffffd
movsx ecx cl
shl eax 0x4
add eax ecx
cmp cl 0x46
jg r-xdata
add cl 0xd9
jmp r-xdata
add cl 0xf9
sub_40e5ec
xor eax eax
cmp cl 0x61
jl r-xdata
cmp cl 0x5a
jle r-xdata
retn
cmp cl 0x7a
jg r-xdata
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_40e609
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
call sub_40e5b7
mov esi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push esi
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ rw-data ]
call sub_409f48
test eax eax
pop ecx
pop ecx
jne r-xdata
and [ rw-data ] eax
inc eax
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x2
not eax
and eax 0x1
push esi
call sub_40e4b6
test eax eax
pop ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
call sub_407da9
leave
retn 0x4
or [ rw-data ] 0x4
mov [ rw-data ] esi
mov [ rw-data ] esi
sub_40e69d
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x7c ]
call sub_40e5b7
cmp [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_407da9
leave
retn
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
push [ rw-data ]
call sub_409e30
mov edx [ rw-data ]
pop ecx
mov esi eax
call sub_40e5ec
cmp eax esi
pop esi
jne r-xdata
sub_40e70e
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
call sub_40e5b7
mov esi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push esi
call [ rw-data ]
test eax eax
jne r-xdata
push ebx
push edi
lea eax [ ebp - 0x7c ]
push eax
push [ rw-data ]
call sub_409f48
test eax eax
pop ecx
pop ecx
mov ebx 0xfffff002
mov edi 0x1001
jne r-xdata
and [ rw-data ] eax
inc eax
jmp r-xdata
mov ecx [ rw-data ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax ebx
add eax edi
push eax
push esi
call [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
call sub_407da9
leave
retn 0x4
mov eax [ rw-data ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax ebx
add eax edi
push eax
push esi
call [ rw-data ]
test eax eax
jne r-xdata
and [ rw-data ] 0x0
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ rw-data ]
call sub_409f48
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ rw-data ]
call sub_409f48
pop ecx
xor edi edi
test eax eax
pop ecx
jne r-xdata
pop edi
pop ebx
test [ rw-data ] 0x2
jne r-xdata
or [ rw-data ] 0x304
mov [ rw-data ] esi
jmp r-xdata
cmp [ rw-data ] edi
jne r-xdata
or [ rw-data ] 0x2
cmp [ rw-data ] edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] esi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
or [ rw-data ] 0x1
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
test [ rw-data ] 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ rw-data ]
call sub_411e92
add esp 0xc
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ rw-data ]
call sub_411e92
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] esi
push [ rw-data ]
call sub_409e30
cmp eax [ rw-data ]
pop ecx
jne r-xdata
push esi
call sub_40e4b6
test eax eax
pop ecx
je r-xdata
push [ rw-data ]
or [ rw-data ] 0x2
mov [ rw-data ] esi
call sub_409e30
cmp eax [ rw-data ]
pop ecx
jne r-xdata
push edi
push 0x1
jmp r-xdata
or [ rw-data ] 0x1
mov [ rw-data ] esi
jmp r-xdata
push esi
call sub_40e69d
test eax eax
pop ecx
pop ecx
je r-xdata
sub_40e928
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
call sub_40e5b7
mov esi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push esi
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ rw-data ]
call sub_409f48
test eax eax
pop ecx
pop ecx
jne r-xdata
and [ rw-data ] eax
inc eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
call sub_407da9
leave
retn 0x4
mov eax [ rw-data ]
shr eax 0x2
not eax
and eax 0x1
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ rw-data ] 0x4
mov [ rw-data ] esi
mov [ rw-data ] esi
push 0x1
jmp r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ rw-data ]
call sub_411e92
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_40e69d
test eax eax
pop ecx
pop ecx
je r-xdata
push eax
sub_40e9f3
push [ rw-data ]
call sub_409e30
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_40e609
mov [ rw-data ] eax
call [ EnumSystemLocalesA@IAT ]
test [ rw-data ] 0x4
jne r-xdata
retn
and [ rw-data ] 0x0
sub_40ea2a
push [ rw-data ]
call sub_409e30
push [ rw-data ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ rw-data ] eax
call sub_409e30
sub eax 0x3
neg eax
sbb eax eax
and [ rw-data ] 0x0
inc eax
cmp [ rw-data ] 0x0
pop ecx
pop ecx
mov [ rw-data ] eax
je r-xdata
mov edx [ rw-data ]
call sub_40e5ec
mov [ rw-data ] eax
mov [ rw-data ] 0x2
jmp r-xdata
and [ rw-data ] 0x0
test ah 0x2
je r-xdata
push 0x1
push sub_40e70e
call [ EnumSystemLocalesA@IAT ]
mov eax [ rw-data ]
test ah 0x1
je r-xdata
test al 0x7
jne r-xdata
retn
sub_40eab0
push [ rw-data ]
call sub_409e30
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ rw-data ] eax
je r-xdata
mov edx [ rw-data ]
call sub_40e5ec
mov [ rw-data ] eax
mov [ rw-data ] 0x2
jmp r-xdata
retn
and [ rw-data ] 0x0
push 0x1
push sub_40e928
call [ EnumSystemLocalesA@IAT ]
test [ rw-data ] 0x4
jne r-xdata
sub_40eb05
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
jne r-xdata
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call sub_40e426
lea eax [ esi + 0x40 ]
cmp eax ebx
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] sub_40e4d4
mov eax [ GetLocaleInfoA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push edi
lea ecx [ esi + 0x80 ]
call sub_40e440
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx ebx
mov [ rw-data ] ebx
je r-xdata
cmp [ eax ] bl
je r-xdata
xor eax eax
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax ebx
je r-xdata
cmp [ ecx ] bl
je r-xdata
push rw-data
push 0x16
push r--data
call sub_40e3c6
mov ecx [ rw-data ]
mov eax [ rw-data ]
add esp 0xc
push 0x1
push [ rw-data ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
cmp [ eax ] bl
je r-xdata
cmp eax ebx
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebx
mov ecx [ rw-data ]
je r-xdata
call sub_40e9f3
jmp r-xdata
call sub_40eab0
cmp [ eax ] bl
je r-xdata
mov esi [ esp + 0x18 ]
cmp esi ebx
je r-xdata
mov dx [ rw-data ]
mov [ eax ] cx
mov [ eax + 0x2 ] dx
mov [ eax + 0x4 ] di
cmp [ rw-data ] ebx
jne r-xdata
push rw-data
push 0x40
push r--data
call sub_40e3c6
add esp 0xc
test eax eax
je r-xdata
call sub_40ea2a
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ eax ] 0x814
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
pop edi
push 0x40
push esi
push 0x1001
push ecx
call [ rw-data ]
test eax eax
je r-xdata
push r--data
push esi
call sub_407bc0
pop ecx
pop ecx
jmp r-xdata
call sub_40eab0
jmp r-xdata
cmp [ eax ] bl
je r-xdata
push 0x40
lea eax [ esi + 0x40 ]
push eax
push 0x1002
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
call sub_40ea2a
jmp r-xdata
push 0xa
add esi 0x80
push esi
push edi
call sub_411f25
add esp 0xc
sub_40ecc0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
add esi 0x1
add edi 0x1
sub eax 0x1
je r-xdata
mov eax 0x0
sub eax 0x1
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
sub eax 0x1
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
sub eax 0x1
sub_40ed78
push 0x1c
push r--data
call sub_40a560
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
xor edi edi
inc edi
push edi
push r--data
push edi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x1c ]
cmp ebx esi
jne r-xdata
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov edi [ ebp + 0x18 ]
test edi edi
jne r-xdata
mov ebx [ rw-data ]
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x2
push ebx
call sub_411f4f
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi [ rw-data ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
cmp eax edi
je r-xdata
lea esp [ ebp - 0x38 ]
call sub_40a59b
retn
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
xor eax eax
cmp [ ebp + 0x20 ] esi
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call [ GetStringTypeA@IAT ]
mov edi eax
test esi esi
je r-xdata
push 0x0
push 0x0
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push edi
call sub_411f92
add esp 0x18
mov esi eax
test esi esi
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + edi ]
mov eax ebx
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x2c ] esi
push ebx
push 0x0
push esi
call sub_407cc0
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_40a265
pop ecx
mov [ ebp + 0xc ] esi
test esi esi
jne r-xdata
push edi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push 0x2
call sub_411e17
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x24 ]
jmp r-xdata
push esi
call sub_40a265
pop ecx
sub_40ef40
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40ef80
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_410f96
test eax eax
pop ecx
je r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
push esi
call [ rw-data ]
jmp r-xdata
call sub_40bac0
cmp eax 0x19930521
jne r-xdata
pop esi
retn 0x4
sub_40efee
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
je r-xdata
cmp ebx 0x41
jl r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
cmp ebx 0x5a
lea eax [ ebx + 0x20 ]
jle r-xdata
xor esi esi
mov edi 0x100
inc esi
cmp ebx edi
jae r-xdata
cmp ebx 0x7f
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
mov eax esi
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop eax
jmp r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_41151c
pop ecx
pop ecx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
push 0x3
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ rw-data ]
call sub_410fc6
add esp 0x20
test eax eax
je r-xdata
test eax eax
je r-xdata
movzx ecx [ ebp - 0x7 ]
xor eax eax
mov ah [ ebp - 0x8 ]
or eax ecx
jmp r-xdata
movzx eax [ ebp - 0x8 ]
jmp r-xdata
sub_40f0d0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov al 0xff
mov edi edi
movsx eax al
pop ebx
pop esi
pop edi
leave
retn
mov al [ esi ]
add esi 0x1
mov ah [ edi ]
add edi 0x1
cmp ah al
je r-xdata
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
sbb al al
sbb al 0xff
sub_40f11e
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
mov [ ebp + 0xb ] cl
pop edi
jne r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
leave
retn
push 0x8
push ecx
call sub_41151c
pop ecx
pop ecx
leave
retn
push 0x1
push [ rw-data ]
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push eax
push 0x2
lea eax [ ebp + 0xa ]
push eax
push 0x1
call sub_40ed78
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x8
je r-xdata
xor eax eax
inc eax
leave
retn
sub_40f1b0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40f1e4
cmp [ rw-data ] 0x3
push esi
jne r-xdata
push [ esp + 0x8 ]
mov esi [ esp + 0x8 ]
push esi
call sub_40f4f8
test eax eax
pop ecx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi - 0x4 ]
sub eax 0x9
pop esi
retn
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop esi
retn
sub_40f21c
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x8 ]
test bl 0x3
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ fs : 0x18 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp ebx ecx
mov [ ebp - 0x4 ] ecx
jb r-xdata
pop esi
pop ebx
leave
retn
push edi
mov edi [ esi + 0xc ]
cmp edi 0xffffffff
jne r-xdata
cmp ebx [ eax + 0x4 ]
jae r-xdata
xor edx edx
mov [ ebp + 0x8 ] edx
mov eax ebx
xor eax eax
inc eax
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp ecx edx
jae r-xdata
pop edi
inc edx
add eax 0xc
cmp edx edi
jbe r-xdata
inc [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edi ebx
and edi 0xfffff000
xor esi esi
test eax eax
jle r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
push ebx
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
cmp [ esi * 4 + rw-data ] edi
je r-xdata
cmp eax esi
jae r-xdata
or eax 0xffffffff
cmp [ ebp - 0x8 ] 0x1000000
jne r-xdata
test esi esi
jle r-xdata
inc esi
cmp esi eax
jl r-xdata
test [ ebp - 0xc ] 0xcc
je r-xdata
mov ebx [ InterlockedExchange@IAT ]
push 0x1
push rw-data
call ebx
test eax eax
jne r-xdata
push 0x1
push rw-data
call [ InterlockedExchange@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp [ ecx ] 0x5a4d
jne r-xdata
cmp [ esi * 4 + rw-data ] edi
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov edx ecx
jle r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor ecx ecx
test esi esi
jl r-xdata
mov eax [ rw-data ]
lea esi [ eax - 0x1 ]
test esi esi
jl r-xdata
test edx edx
jne r-xdata
lea eax [ ecx * 4 + rw-data ]
cmp [ eax + 0x18 ] 0x10b
jne r-xdata
push 0x0
push rw-data
call ebx
jmp r-xdata
lea eax [ ecx * 4 + rw-data ]
mov edx [ eax ]
inc ecx
cmp ecx esi
mov [ eax ] edi
mov edi edx
jle r-xdata
cmp eax 0x10
jge r-xdata
cmp [ esi * 4 + rw-data ] edi
je r-xdata
push 0x0
push rw-data
call [ InterlockedExchange@IAT ]
jmp r-xdata
push 0xf
pop ebx
cmp ecx ebx
jg r-xdata
dec edx
sub eax 0x4
test edx edx
jg r-xdata
sub ebx ecx
cmp [ eax + 0x6 ] 0x0
movzx ecx [ eax + 0x14 ]
lea ecx [ ecx + eax + 0x18 ]
jbe r-xdata
lea esi [ eax - 0x1 ]
jmp r-xdata
inc eax
mov [ rw-data ] eax
test esi esi
jge r-xdata
dec esi
jns r-xdata
xor edx edx
test ebx ebx
jl r-xdata
mov ebx ecx
cmp [ eax ] edi
je r-xdata
mov eax [ ecx + 0xc ]
cmp ebx eax
jb r-xdata
je r-xdata
cmp ecx 0x10
jge r-xdata
lea eax [ edx * 4 + rw-data ]
mov esi [ eax ]
inc edx
cmp edx ebx
mov [ eax ] edi
mov edi esi
jle r-xdata
mov edx [ ecx + 0x8 ]
add edx eax
cmp ebx edx
jae r-xdata
inc ecx
mov [ rw-data ] ecx
test [ ecx + 0x27 ] 0x80
jne r-xdata
sub_40f45f
xor eax eax
cmp [ esp + 0x4 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_40f445
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
xor eax eax
inc eax
retn
push 0x3f8
call sub_40f4b0
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_40f4b0
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
inc eax
retn
retn
sub_40f4f8
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
retn
add eax 0x14
sub_40f523
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp edx 0x20
mov ebx 0x80000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
cmp edx esi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp edx 0x20
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
mov esi 0x80000000
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_409af0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_40f83b
mov eax [ rw-data ]
mov ecx [ rw-data ]
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push esi
push 0x41c4
push 0x8
push [ rw-data ]
lea eax [ eax + eax * 4 ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
jne r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
xor eax eax
pop edi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
pop esi
pop edi
retn
sub_40f8f2
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
shl eax 0x1
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
mov [ ebp - 0x4 ] edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_40f9f8
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
mov ebx 0x80000000
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
mov ebx 0x80000000
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
cmp edi 0x3f
lea ecx [ ecx + esi - 0x4 ]
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
cmp edi 0x20
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_40fcd7
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov edx [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
push ebx
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push esi
lea eax [ eax + eax * 4 ]
push edi
dec ecx
cmp ecx 0x20
lea edi [ edx + eax * 4 ]
mov [ ebp - 0x4 ] edi
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov eax [ rw-data ]
mov ebx eax
mov [ ebp - 0xc ] esi
cmp ebx edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
jmp r-xdata
mov edx [ eax + 0xc4 ]
and edx [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
mov esi [ ecx ]
and esi [ ebp - 0xc ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
and edx [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
add ecx 0x4
mov edi [ ecx ]
and edi esi
or edx edi
je r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx eax
je r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
jb r-xdata
shl ecx 0x1
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_40f8f2
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
add ebx 0x14
call sub_40f83b
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40ffd3
push ebp
lea ebp [ esp - 0x8c ]
sub esp 0x10c
mov eax [ rw-data ]
mov ecx [ ebp + 0x94 ]
push ebx
push esi
mov [ ebp + 0x88 ] eax
xor edx edx
push edi
xor eax eax
mov esi eax
shl esi 0x3
cmp ecx [ esi + rw-data ]
jne r-xdata
inc eax
cmp eax 0x13
jb r-xdata
lea esp [ ebp - 0x8c ]
mov ecx [ ebp + 0x88 ]
call sub_407da9
pop edi
pop esi
pop ebx
add ebp 0x8c
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
push edx
lea eax [ ebp + 0x94 ]
push eax
lea esi [ esi + rw-data ]
push [ esi ]
call sub_409e30
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
cmp eax edx
jne r-xdata
cmp ecx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x104
lea eax [ ebp - 0x80 ]
push eax
push edx
mov [ ebp + 0x84 ] dl
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea edi [ ebp - 0x80 ]
mov eax edi
push eax
call sub_409e30
inc eax
cmp eax 0x3c
pop ecx
jbe r-xdata
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_407bc0
pop ecx
pop ecx
push edi
call sub_409e30
push [ esi + rw-data ]
mov ebx eax
call sub_409e30
lea eax [ ebx + eax + 0x1c ]
pop ecx
add eax 0x3
pop ecx
and eax 0xfffffffc
call sub_410980
mov ebx esp
push r--data
push ebx
call sub_407bc0
push edi
push ebx
call sub_407bd0
push r--data
push ebx
call sub_407bd0
push [ esi + rw-data ]
push ebx
call sub_407bd0
push 0x12010
push r--data
push ebx
call sub_410e65
add esp 0x2c
jmp r-xdata
mov eax edi
push eax
call sub_409e30
mov edi eax
lea eax [ ebp - 0x80 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_4087e0
add esp 0x10
sub_41014a
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40ffd3
mov eax [ rw-data ]
test eax eax
pop ecx
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_40ffd3
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_410183
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ rw-data ]
push ebx
mov ecx rw-data
push esi
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
cmp ecx eax
jae r-xdata
lea esi [ eax + eax * 2 ]
add ecx 0xc
lea esi [ esi * 4 + rw-data ]
cmp ecx esi
jb r-xdata
xor ecx ecx
cmp [ ecx ] edx
je r-xdata
cmp [ ecx ] edx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ ecx + 0x8 ]
test ebx ebx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
cmp eax 0x8
jne r-xdata
pop esi
pop ebx
pop ebp
retn
and [ ecx + 0x8 ] 0x0
push eax
call ebx
mov eax [ rw-data ]
mov edx [ rw-data ]
add edx eax
cmp eax edx
jge r-xdata
mov ecx [ ecx ]
cmp ecx 0xc000008e
mov esi [ rw-data ]
jne r-xdata
lea esi [ eax + eax * 2 ]
lea esi [ esi * 4 + rw-data ]
sub edx eax
cmp ecx 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne r-xdata
cmp ecx 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
push [ rw-data ]
push 0x8
call ebx
pop ecx
mov [ rw-data ] esi
jmp r-xdata
cmp ecx 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ecx
mov [ rw-data ] eax
cmp ecx 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
cmp ecx 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
cmp ecx 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_4102f4
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_40bf36
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_412271
test eax eax
pop ecx
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_410351
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
cmp esi ebx
jne r-xdata
call sub_40bf36
mov al [ esi ]
cmp al bl
jne r-xdata
jmp r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_40a510
mov edi eax
cmp edi ebx
pop ecx
mov [ rw-data ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_409e30
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebp
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi ] bl
jne r-xdata
push esi
call sub_409e30
mov ebp eax
inc ebp
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_40a265
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
add esi ebp
push ebp
call sub_40a510
cmp eax ebx
pop ecx
mov [ edi ] eax
je r-xdata
push [ rw-data ]
call sub_40a265
mov [ rw-data ] ebx
or eax 0xffffffff
jmp r-xdata
push esi
push eax
call sub_407bc0
pop ecx
pop ecx
add edi 0x4
pop ecx
pop ebp
sub_410418
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x8 ] edx
push edi
mov [ esi ] edx
mov edi ecx
mov [ ebx ] 0x1
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] edi
inc [ esi ]
test edi edi
je r-xdata
xor ecx ecx
test edx edx
sete cl
inc eax
mov edx ecx
mov cl 0x22
jmp r-xdata
mov cl [ eax ]
movzx ebx cl
inc eax
test [ ebx + rw-data ] 0x4
je r-xdata
mov cl [ eax ]
mov [ edi ] cl
inc edi
test edx edx
jne r-xdata
test cl cl
mov ebx [ ebp + 0xc ]
je r-xdata
inc [ esi ]
test edi edi
je r-xdata
cmp cl 0x20
je r-xdata
dec eax
jmp r-xdata
inc eax
mov bl [ eax ]
mov [ edi ] bl
inc edi
test edi edi
je r-xdata
cmp cl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edi - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov cl [ eax ]
cmp cl 0x20
je r-xdata
inc [ ebx ]
pop edi
pop ebx
leave
retn
and [ eax ] 0x0
inc eax
jmp r-xdata
cmp cl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebx ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] edi
cmp [ eax ] 0x5c
je r-xdata
inc eax
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
je r-xdata
test dl 0x1
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
test edi edi
je r-xdata
shr edx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ esi ]
dec edx
jne r-xdata
mov [ edi ] 0x5c
inc edi
xor ebx ebx
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ esi ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test ebx ebx
je r-xdata
cmp cl 0x20
je r-xdata
mov eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test edi edi
je r-xdata
cmp cl 0x9
je r-xdata
xor ecx ecx
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
xor ebx ebx
inc ebx
xor edx edx
jmp r-xdata
movzx ecx cl
test [ ecx + rw-data ] 0x4
je r-xdata
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
inc [ esi ]
inc eax
inc [ esi ]
mov cl [ eax ]
mov [ edi ] cl
inc edi
jmp r-xdata
mov [ edi ] cl
inc edi
inc eax
inc [ esi ]
sub_410584
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
push 0x104
mov esi rw-data
push esi
push edi
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] esi
je r-xdata
call sub_40bf36
mov ebx esi
cmp [ eax ] 0x0
mov ebx eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + edi ]
push edi
lea esi [ ebp - 0x8 ]
mov eax ebx
call sub_410418
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] edi
xor eax eax
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
lea esi [ ebp - 0x8 ]
xor ecx ecx
mov eax ebx
call sub_410418
mov esi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
shl esi 0x2
add eax esi
push eax
call sub_40a510
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_410626
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi [ GetEnvironmentStringsW@IAT ]
xor ebx ebx
xor esi esi
cmp eax ebx
push 0x2
pop ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebp
je r-xdata
cmp esi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov eax ebp
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax esi
push ebx
sar eax 0x1
inc eax
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub eax esi
inc eax
mov ebp eax
push ebp
call sub_40a510
mov edi eax
cmp edi ebx
pop ecx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_40a510
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
push ebp
push esi
push edi
call sub_407df0
add esp 0xc
xor edi edi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40a265
pop ecx
mov [ esp + 0x10 ] ebx
sub_410748
sub esp 0x44
push 0x100
call sub_40a510
test eax eax
pop ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x20
lea ecx [ eax + 0x100 ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax ecx
jb r-xdata
add esp 0x44
retn
or [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ rw-data ]
add eax 0x8
add ecx 0x100
push ebx
push esi
push edi
lea eax [ esp + 0xc ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x3e ] 0x0
je r-xdata
xor ebx ebx
mov eax [ esp + 0x40 ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov esi [ eax ]
push ebp
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl r-xdata
mov eax [ rw-data ]
lea esi [ eax + ebx * 8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jge r-xdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor edi edi
test esi esi
jle r-xdata
mov edi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
cmp eax 0x2
mov [ esi ] edi
jne r-xdata
pop ebp
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
add [ rw-data ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
jmp r-xdata
cmp eax 0x3
jne r-xdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
cmp eax ecx
jb r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test cl 0x8
jne r-xdata
or [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
add edi 0x4
cmp [ rw-data ] esi
jl r-xdata
mov eax edi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov ecx edi
and ecx 0x1f
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x100
call sub_40a510
test eax eax
pop ecx
je r-xdata
jmp r-xdata
sub_4108f3
push 0xc
push r--data
call sub_40a560
mov [ ebp - 0x1c ] r--data
call sub_40a59b
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
sub_410937
push 0xc
push r--data
call sub_40a560
mov [ ebp - 0x1c ] r--data
call sub_40a59b
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
sub_410968
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x1c ] r--data
jae r-xdata
call sub_40a59b
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
sub_410980
cmp eax 0x1000
jae r-xdata
push ecx
lea ecx [ esp + 0x8 ]
neg eax
add eax esp
add eax 0x4
test [ eax ] eax
xchg esp eax
mov eax [ eax ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub_4109bd
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
push ebx
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x3
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
push eax
call sub_41235b
cmp eax 0xffffffff
pop ecx
je r-xdata
mov [ rw-data ] 0x9
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
mov eax [ edi ]
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax ebx
jmp r-xdata
push eax
call sub_412282
pop ecx
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
or eax 0xffffffff
sub_410a49
push ebp
lea ebp [ esp - 0x39c ]
sub esp 0x41c
mov ecx [ ebp + 0x3a4 ]
cmp ecx [ rw-data ]
mov eax [ rw-data ]
push ebx
push esi
mov [ ebp + 0x398 ] eax
push edi
jae r-xdata
and [ rw-data ] 0x0
mov eax ecx
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov esi ecx
and esi 0x1f
shl esi 0x3
mov al [ eax + esi + 0x4 ]
test al 0x1
mov [ ebp - 0x80 ] ebx
je r-xdata
xor edi edi
cmp [ ebp + 0x3ac ] edi
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x7c ] edi
jne r-xdata
test al 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push edi
push ecx
call sub_412397
add esp 0x10
mov ecx [ ebp + 0x398 ]
pop edi
pop esi
pop ebx
call sub_407da9
add ebp 0x39c
leave
retn
push edi
lea ecx [ ebp - 0x78 ]
push ecx
push [ ebp + 0x3ac ]
push [ ebp + 0x3a8 ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x3ac ] edi
mov eax [ ebp + 0x3a8 ]
mov [ ebp - 0x70 ] eax
mov [ ebp + 0x3a4 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x3a4 ] eax
jmp r-xdata
mov eax [ ebp - 0x78 ]
mov [ ebp + 0x3a4 ] edi
mov [ ebp - 0x74 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x70 ]
sub ecx [ ebp + 0x3a8 ]
lea eax [ ebp - 0x6c ]
mov eax [ ebp - 0x74 ]
cmp eax edi
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp + 0x3a8 ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x6c ]
sub edi eax
push 0x0
lea eax [ ebp - 0x78 ]
push eax
push edi
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x70 ]
inc [ ebp - 0x70 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
sub eax [ ebp - 0x7c ]
jmp r-xdata
cmp [ ebp + 0x3a4 ] edi
je r-xdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x3a4 ] eax
mov eax [ ebp - 0x78 ]
add [ ebp - 0x74 ] eax
cmp eax edi
jl r-xdata
mov ebx [ ebp - 0x80 ]
mov [ eax ] dl
inc eax
inc edi
cmp edi 0x400
jl r-xdata
inc [ ebp - 0x7c ]
mov [ eax ] 0xd
inc eax
inc edi
push 0x5
pop eax
cmp [ ebp + 0x3a4 ] eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x70 ]
sub eax [ ebp + 0x3a8 ]
xor edi edi
cmp eax [ ebp + 0x3ac ]
jb r-xdata
cmp ecx [ ebp + 0x3ac ]
jae r-xdata
push [ ebp + 0x3a4 ]
call sub_412282
pop ecx
jmp r-xdata
mov [ rw-data ] eax
jmp r-xdata
jmp r-xdata
mov [ rw-data ] 0x9
sub_410c39
inc [ rw-data ]
push 0x1000
call sub_40a510
test eax eax
pop ecx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_410ca4
mov eax [ rw-data ]
test eax eax
push esi
push 0x14
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_411e17
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_411e17
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
xor edx edx
mov ecx rw-data
or [ ecx ] 0xffffffff
test eax eax
jne r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov esi edx
and esi 0x1f
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_410d5e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
jne r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
push esi
push [ rw-data ]
mov [ ebp + 0x8 ] esi
push eax
push 0x1
lea eax [ ebp + 0xc ]
push eax
push esi
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
cmp eax esi
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
pop esi
pop ebp
retn
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] esi
je r-xdata
mov [ eax ] cl
xor eax eax
inc eax
jmp r-xdata
sub_410dd0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_410e65
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call eax
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x4
jb r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x2
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp + 0x12 ] 0x4
jmp r-xdata
or [ ebp + 0x12 ] 0x20
jmp r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
push ebx
call eax
mov ebx eax
push r--data
push edi
call esi
mov [ rw-data ] eax
sub_410fc6
push 0x38
push r--data
call sub_40a560
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor esi esi
inc esi
push esi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov [ ebp - 0x28 ] ebx
xor edi edi
mov [ ebp - 0x3c ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
or eax 0xffffffff
sub eax ecx
add [ ebp + 0x14 ] eax
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_411f4f
pop ecx
mov [ ebp - 0x40 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
xor edi edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x54 ]
call sub_40a59b
retn
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x30 ] esi
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_411f92
add esp 0x18
mov [ ebp - 0x28 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax esi
push [ ebp - 0x28 ]
call sub_40a265
pop ecx
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
mov [ ebp - 0x24 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] ebx
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x44 ] edi
push esi
push ebx
push edi
call sub_407cc0
add esp 0xc
jmp r-xdata
push esi
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ esi + esi ]
push eax
call sub_40a510
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
push edi
call sub_40a265
pop ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x34 ] ebx
je r-xdata
push ebx
push ebx
push esi
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov edi eax
mov [ ebp - 0x2c ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x38 ] 0x1
push [ ebp - 0x24 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0x28 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x24 ]
call sub_40a510
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
push [ ebp - 0x20 ]
call sub_40a265
pop ecx
test [ ebp + 0xd ] 0x4
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x24 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x40 ]
call sub_411f92
add esp 0x18
mov esi eax
neg esi
sbb esi esi
neg esi
jmp r-xdata
xor esi esi
jmp r-xdata
push [ ebp - 0x24 ]
push ebx
push edi
call sub_407cc0
add esp 0xc
mov [ ebp - 0x3c ] 0x1
mov eax edi
jmp r-xdata
push [ ebp - 0x1c ]
call sub_40a265
pop ecx
mov [ ebp - 0x4 ] 0x2
lea eax [ edi + edi ]
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0x3c ] ebx
je r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
cmp edi [ ebp + 0x1c ]
jg r-xdata
push edi
push [ ebp - 0x20 ]
push esi
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ edi + edi ]
push eax
call sub_40a510
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
jmp r-xdata
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x34 ] 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
push edi
push [ ebp - 0x20 ]
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
sub_411382
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
mov [ ebp - 0x4 ] eax
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_4126fe
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax rw-data
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
lea eax [ ecx + eax * 8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_407da9
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_410d5e
mov ebx eax
cmp ebx 0xffffffff
pop ecx
pop ecx
jne r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov [ rw-data ] 0x2a
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_40a70e
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
or ax 0xffff
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_411454
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov al [ esi ]
cmp al bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ax al
mov [ ecx ] ax
jmp r-xdata
cmp [ ebp + 0x10 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
pop esi
pop ebx
pop ebp
retn
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ esi + 0x1 ] bl
jne r-xdata
jb r-xdata
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push eax
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
sub_41151c
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
sar ecx 0x8
push esi
mov esi [ rw-data ]
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
mov [ ebp - 0x4 ] al
xor eax eax
mov [ ebp - 0x3 ] 0x0
inc eax
push 0x2
mov [ ebp - 0x3 ] al
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x2 ] 0x0
pop eax
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
push 0x1
push [ rw-data ]
lea ecx [ ebp + 0xa ]
push [ rw-data ]
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40ed78
add esp 0x1c
test eax eax
jne r-xdata
sub_41159a
mov eax [ esp + 0x8 ]
push 0x20
pop ecx
cdq
idiv ecx
push 0x1f
pop ecx
sub ecx edx
or edx 0xffffffff
shl edx cl
mov ecx [ esp + 0x4 ]
not edx
test [ ecx + eax * 4 ] edx
je r-xdata
inc eax
cmp eax 0x3
jl r-xdata
xor eax eax
retn
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
retn
sub_4115cc
mov eax [ esp + 0x8 ]
push esi
push edi
push 0x20
pop ecx
cdq
idiv ecx
mov edi [ esp + 0xc ]
mov esi eax
lea eax [ edi + esi * 4 ]
push eax
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
push edx
push [ eax ]
call sub_412823
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
retn
lea edi [ edi + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_412823
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_411619
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
dec edi
push 0x20
lea eax [ edi + 0x1 ]
pop ecx
cdq
idiv ecx
push 0x1f
pop esi
sub esi edx
xor edx edx
inc edx
mov ecx esi
shl edx cl
mov ebx eax
mov eax [ ebp + 0x8 ]
test [ eax + ebx * 4 ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax + ebx * 4 ] edx
inc ebx
cmp ebx ecx
jge r-xdata
lea ecx [ edi + 0x1 ]
push ecx
push eax
call sub_41159a
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
lea edi [ eax + ebx * 4 ]
sub ecx ebx
xor eax eax
[ edi ]
mov eax [ ebp + 0x8 ]
push edi
push [ ebp + 0x8 ]
call sub_4115cc
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
sub_41168b
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x3
pop edx
sub ecx eax
push esi
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_4116bf
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
pop esi
cdq
mov ecx esi
idiv ecx
mov ebx [ ebp + 0x8 ]
or edi 0xffffffff
mov [ ebp + 0xc ] esi
mov ecx edx
shl edi cl
mov [ ebp - 0x8 ] eax
xor eax eax
sub [ ebp + 0xc ] edx
not edi
mov [ ebp - 0x4 ] eax
mov esi [ ebx + eax * 4 ]
mov ecx esi
and ecx edi
mov [ ebp - 0xc ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp + 0xc ]
or esi [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] esi
mov esi [ ebp - 0xc ]
shl esi cl
inc eax
cmp eax 0x3
mov [ ebp - 0x4 ] esi
jl r-xdata
push 0x2
pop eax
mov ecx eax
sub ecx [ ebp - 0x8 ]
lea ecx [ ebx + ecx * 4 ]
and [ ebx + eax * 4 ] 0x0
mov edx [ ecx ]
mov [ ebx + eax * 4 ] edx
jmp r-xdata
cmp eax [ ebp - 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec eax
sub ecx 0x4
test eax eax
jge r-xdata
sub_41173a
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
shl eax 0x10
and edi 0x7fff
sub edi 0x3fff
cmp edi 0xffffc001
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_41168b
push [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_411619
add esp 0x10
test eax eax
je r-xdata
xor ebx ebx
call sub_4116a6
test eax eax
pop ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx eax
sub ecx [ esi + 0x8 ]
cmp edi ecx
jge r-xdata
inc edi
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
cmp edi eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp esi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ esi + 0xc ]
mov esi [ esi + 0x10 ]
shl ebx cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
or ebx [ ebp - 0xc ]
cmp esi 0x40
jne r-xdata
cmp edi [ esi ]
push [ esi + 0xc ]
jl r-xdata
sub eax edi
mov edi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_41168b
lea eax [ ebp - 0xc ]
push edi
push eax
call sub_4116bf
push [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_411619
mov eax [ esi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4116bf
add esp 0x20
xor ebx ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
mov ebx [ esi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add ebx edi
call sub_4116bf
pop ecx
pop ecx
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_4116bf
mov ebx [ esi + 0x14 ]
add ebx [ esi ]
pop ecx
xor eax eax
pop ecx
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_4118be
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4129db
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_411892
mov ecx [ ebp - 0x4 ]
add esp 0x24
call sub_407da9
leave
retn
sub_4118fb
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4129db
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4118a8
mov ecx [ ebp - 0x4 ]
add esp 0x24
call sub_407da9
leave
retn
sub_411938
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov ecx [ edx + 0xc ]
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
jle r-xdata
test ebx ebx
mov [ eax ] 0x0
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_409e30
inc eax
push eax
push edi
push esi
call sub_409af0
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4119af
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x6 ]
push ebx
push esi
push edi
mov edi 0x7ff
mov esi 0x80000000
mov [ ebp - 0x4 ] esi
mov ecx eax
shr ecx 0x4
and eax 0x8000
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
and eax 0xfffff
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
shl edx 0x1
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
test esi edx
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
test esi ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_411a69
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
push esi
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4119af
pop ecx
pop ecx
push rw-data
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_412e62
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] eax
movsx eax [ rw-data ]
mov [ rw-data ] eax
movsx eax [ rw-data ]
mov [ rw-data ] eax
add esp 0x18
mov [ rw-data ] rw-data
mov eax rw-data
call sub_407da9
pop edi
pop esi
leave
retn
sub_411ae6
xor eax eax
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or eax 0x8
test bl 0x10
je r-xdata
or eax 0x4
test bl 0x20
je r-xdata
or eax 0x2
test bl 0x2
je r-xdata
or eax 0x1
push ebp
movzx edx bx
push esi
mov ecx edx
mov esi 0xc00
and ecx esi
push edi
mov edi 0x300
mov ebp 0x200
je r-xdata
or eax 0x80000
and edx edi
je r-xdata
cmp ecx 0x400
je r-xdata
or eax 0x20000
cmp edx ebp
jne r-xdata
or eax 0x100
cmp ecx 0x800
je r-xdata
retn
or eax 0x40000
test bh 0x10
pop edi
pop esi
pop ebp
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp ecx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_411b78
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
test ebx 0x40000
pop esi
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_411c06
push ebp
mov ebp esp
push ecx
push ebx
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
call sub_411ae6
mov ebx eax
mov eax [ ebp + 0xc ]
not eax
and ebx eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or ebx eax
call sub_411b78
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
mov eax ebx
pop ebx
leave
retn
sub_411c4e
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
test esi esi
push ebx
push edi
jne r-xdata
xor eax eax
pop esi
retn
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
xor eax eax
push ebx
call sub_409e30
pop ecx
mov edi eax
jmp r-xdata
call sub_41312f
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_409e30
cmp eax edi
pop ecx
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push ebx
push eax
call sub_4130f0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop ebx
pop esi
retn
sub_411ccf
push ebp
mov ebp esp
sub esp 0x84
cmp [ ebp + 0x8 ] 0x1
mov eax [ rw-data ]
push ebx
push esi
mov [ ebp - 0x4 ] eax
push edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor ebx ebx
push ebx
lea edi [ ebp - 0x84 ]
push 0x80
mov eax edi
push eax
push [ ebp + 0x10 ]
mov [ ebp + 0x8 ] ebx
push [ ebp + 0xc ]
call sub_4132ef
mov esi eax
add esp 0x14
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push 0x0
push 0x4
mov esi rw-data
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4131bf
add esp 0x14
test eax eax
je r-xdata
push esi
call sub_40a510
cmp eax ebx
pop ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov edi [ ebp + 0x14 ]
mov [ edi ] 0x0
push esi
push edi
push eax
call sub_4087e0
add esp 0xc
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4132ef
mov esi eax
add esp 0x14
cmp esi ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
push 0x4
push eax
call sub_41151c
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_40a265
pop ecx
jmp r-xdata
push edi
call sub_40a265
pop ecx
push esi
call sub_40a510
mov edi eax
cmp edi ebx
pop ecx
je r-xdata
mov al [ edi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc esi
inc esi
cmp esi rw-data
mov [ edi ] al
jl r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_407da9
leave
retn
push ebx
push esi
push edi
push [ ebp + 0x10 ]
mov [ ebp + 0x8 ] 0x1
push [ ebp + 0xc ]
call sub_4132ef
mov esi eax
add esp 0x14
cmp esi ebx
je r-xdata
cmp [ rw-data ] 0x1
mov bl [ esi ]
movzx eax bl
jle r-xdata
sub_411e17
push ebx
push esi
mov esi [ esp + 0xc ]
imul esi [ esp + 0x10 ]
test esi esi
push edi
mov ebx esi
jne r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
inc esi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
mov eax edi
push esi
call sub_40a522
test eax eax
pop ecx
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
cmp ebx [ rw-data ]
ja r-xdata
jmp r-xdata
push ebx
call sub_40fcd7
mov edi eax
test edi edi
pop ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
push 0x0
push edi
call sub_407cc0
add esp 0xc
sub_411e92
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
pop ebp
jmp sub_413430
pop edi
mov eax ebx
pop esi
sub eax ecx
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
cmp ebx ecx
je r-xdata
movzx eax [ esi ]
push eax
call sub_40efee
mov ebx eax
movzx eax [ edi ]
push eax
inc esi
call sub_40efee
pop ecx
inc edi
dec [ ebp + 0x10 ]
pop ecx
mov ecx eax
je r-xdata
sub_411ee7
cmp [ esp + 0x8 ] 0x0
je r-xdata
push esi
mov esi ecx
mov [ ecx ] 0x2d
inc ecx
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
xor edx edx
div [ esp + 0x8 ]
cmp edx 0x9
jbe r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ ecx ] dl
inc ecx
test eax eax
ja r-xdata
mov dl [ esi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ esi ] al
inc esi
cmp esi ecx
jb r-xdata
pop esi
retn
sub_411f25
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_411ee7
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
sub_411f4f
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
push 0x6
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_409fc9
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_407da9
leave
retn
sub_411f92
push 0x38
push r--data
call sub_40a560
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
xor edi edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x44 ] edi
mov eax [ ebp + 0x14 ]
mov ebx [ eax ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] edi
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov ebx [ ebp - 0x48 ]
lea ecx [ ebp - 0x30 ]
push ecx
push eax
mov esi [ GetCPInfo@IAT ]
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
push ebx
call sub_40a265
pop ecx
cmp [ ebp - 0x3c ] edi
je r-xdata
cmp [ ebp - 0x30 ] 0x1
jne r-xdata
mov esi [ ebp - 0x38 ]
cmp ebx 0xffffffff
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x48 ] ebx
lea eax [ esi + esi ]
push eax
push edi
push ebx
call sub_407cc0
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push edi
push edi
push ebx
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x38 ] esi
cmp esi edi
je r-xdata
push [ ebp + 0x10 ]
call sub_409e30
pop ecx
mov esi eax
inc esi
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x30 ] 0x1
jne r-xdata
cmp ebx edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x3c ] edi
jne r-xdata
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov [ ebp - 0x3c ] 0x1
push esi
push ebx
push [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push esi
push 0x2
call sub_411e17
pop ecx
pop ecx
mov ebx eax
cmp ebx edi
jne r-xdata
lea esp [ ebp - 0x54 ]
mov ecx [ ebp - 0x1c ]
call sub_407da9
call sub_40a59b
retn
cmp [ ebp - 0x44 ] edi
je r-xdata
cmp [ ebp + 0x18 ] edi
je r-xdata
mov [ ebp - 0x44 ] 0x1
cmp [ ebp - 0x3c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push esi
push 0x1
call sub_411e17
pop ecx
pop ecx
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
push edi
push edi
push esi
push eax
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
cmp eax edi
jne r-xdata
cmp [ ebp - 0x40 ] 0xffffffff
je r-xdata
push [ ebp - 0x34 ]
call sub_40a265
pop ecx
mov [ ebp - 0x34 ] edi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
sub_41215b
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push 0x4
pop eax
call sub_410980
mov esi esp
push 0x1c
lea eax [ ebp - 0x28 ]
push eax
push esi
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x24 ]
lea eax [ ebp - 0x4c ]
push eax
call [ GetSystemInfo@IAT ]
mov ecx [ ebp - 0x48 ]
mov eax [ rw-data ]
lea edi [ ecx - 0x1 ]
not edi
and edi esi
sub edi ecx
mov esi eax
dec esi
neg esi
sbb esi esi
and esi 0xfffffff1
add esi 0x11
imul esi ecx
add esi ebx
cmp edi esi
mov [ ebp - 0x8 ] ecx
jb r-xdata
lea esp [ ebp - 0x58 ]
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x1
je r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] ebx
mov ebx 0x1000
mov eax [ ebp - 0x1c ]
add [ ebp - 0x4 ] eax
test [ ebp - 0x18 ] ebx
je r-xdata
push 0x1c
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x4 ]
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
test [ ebp - 0x13 ] 0x1
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] eax
je r-xdata
cmp edi eax
jae r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax esi
jae r-xdata
push 0x4
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ VirtualAlloc@IAT ]
mov eax [ rw-data ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
dec eax
neg eax
sbb eax eax
and eax 0x103
lea ecx [ ebp - 0xc ]
push ecx
inc eax
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ VirtualProtect@IAT ]
sub_41223e
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
xor eax eax
inc eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_412282
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
mov [ rw-data ] eax
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
cmp eax 0x13
jb r-xdata
cmp eax 0xbc
jb r-xdata
cmp eax 0x24
ja r-xdata
mov [ rw-data ] 0x16
cmp eax 0xca
mov [ rw-data ] 0x8
jbe r-xdata
mov [ rw-data ] 0xd
retn
retn
sub_4122e1
mov ecx [ esp + 0x4 ]
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x3
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_41235b
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
lea eax [ ecx + eax * 8 ]
test [ eax + 0x4 ] 0x1
je r-xdata
mov eax [ eax ]
retn
sub_412397
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x3
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
push eax
mov [ ebp - 0x4 ] ecx
call sub_41235b
cmp eax 0xffffffff
pop ecx
je r-xdata
mov [ rw-data ] 0x9
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi ]
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_412282
pop ecx
jmp r-xdata
or eax 0xffffffff
or edx 0xffffffff
sub_412436
push esi
push edi
push 0x3
pop esi
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_413491
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40a265
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
pop ecx
inc edi
sub_41248e
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push [ esi + 0x10 ]
call sub_410a49
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4124eb
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_41248e
test eax eax
pop ecx
je r-xdata
push esi
call sub_412526
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_4134e7
pop ecx
neg eax
sbb eax eax
pop esi
retn
sub_412526
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_4124eb
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_4124eb
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_41259c
mov ecx [ rw-data ]
mov eax rw-data
push esi
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
pop esi
jae r-xdata
lea esi [ ecx + ecx * 2 ]
add eax 0xc
lea esi [ esi * 4 + rw-data ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
retn
sub_4125d5
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je r-xdata
mov esi [ rw-data ]
mov eax rw-data
dec eax
dec eax
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov edx edi
call sub_41259c
add eax 0x8
mov esi [ eax ]
jmp r-xdata
sub eax 0x4
je r-xdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je r-xdata
push 0x3
call sub_40d7e4
cmp esi 0x1
je r-xdata
sub eax 0x3
je r-xdata
mov ebx [ rw-data ]
and [ rw-data ] 0x0
cmp edi ecx
jne r-xdata
cmp edi 0xb
je r-xdata
sub eax 0x4
je r-xdata
and [ eax ] 0x0
cmp edi ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
mov [ rw-data ] 0x8c
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
push edi
call esi
cmp edi 0xb
pop ecx
je r-xdata
push [ rw-data ]
push 0x8
call esi
pop ecx
pop ecx
jmp r-xdata
cmp edi ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
dec eax
je r-xdata
cmp edi 0x8
mov [ rw-data ] ebx
jne r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
cmp eax ecx
jge r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
lea edx [ eax + eax * 2 ]
lea edx [ edx * 4 + rw-data ]
sub ecx eax
pop edi
pop esi
pop ebp
retn
and [ edx ] 0x0
add edx 0xc
dec ecx
jne r-xdata
jmp r-xdata
sub_4126fe
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
test al 0x82
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x4 ] ecx
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
xor ebx ebx
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp + 0xc ] ebx
jne r-xdata
test al 0x10
mov [ esi + 0x4 ] ebx
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov edx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] edx
mov [ esi + 0xc ] eax
mov ebx [ ebp + 0x8 ]
push 0x2
pop edi
push edi
lea eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp + 0xc ] bx
call sub_410a49
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea edx [ eax + 0x2 ]
mov [ esi ] edx
mov edx [ esi + 0x18 ]
sub edi eax
dec edx
dec edx
cmp edi ebx
mov [ esi + 0x4 ] edx
jle r-xdata
push ecx
call sub_410c7d
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax ebx
and eax 0xffff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push ecx
call sub_410a49
mov [ ebp + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push esi
call sub_410c39
pop ecx
pop esi
pop ebx
leave
retn
mov eax 0xffff
mov eax rw-data
mov eax ecx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edx ecx
and edx 0x1f
lea eax [ eax + edx * 8 ]
jmp r-xdata
add esp 0xc
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push 0x2
push ebx
push ecx
call sub_4109bd
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_412823
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
lea ecx [ edx + esi ]
xor eax eax
cmp ecx edx
jb r-xdata
xor eax eax
inc eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
mov [ edx ] ecx
pop esi
retn
sub_412844
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_412823
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_412823
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_412823
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_412823
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_4128a2
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax ]
mov ecx esi
add esi esi
push edi
mov edi [ eax + 0x4 ]
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_4128d0
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov esi edx
shr ecx 0x1
shl esi 0x1f
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
or ecx edi
shr edx 0x1
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_4128fd
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
cmp eax edx
push esi
push edi
mov [ ebp - 0x14 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov esi 0x8000
jmp r-xdata
mov edi [ ebx + 0x8 ]
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_4128a2
push ebx
call sub_4128a2
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_412844
push ebx
call sub_4128a2
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_412844
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
test [ ebx + 0x8 ] esi
je r-xdata
mov ecx [ ebx + 0x4 ]
add [ ebp - 0x14 ] 0xfff0
mov eax ecx
shr eax 0x10
mov edi eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
cmp edi edx
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
je r-xdata
mov [ ebx + 0x8 ] edi
push ebx
call sub_4128a2
add [ ebp - 0x14 ] 0xffff
pop ecx
mov ax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
call sub_407da9
leave
retn
sub_4129db
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
push ebx
lea eax [ ebp - 0x30 ]
push esi
mov [ ebp - 0x3c ] eax
xor eax eax
xor edx edx
push edi
mov edi [ ebp + 0x10 ]
inc edx
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x40 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_412e32 ]
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x44 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x44 ] edx
cmp [ ebp - 0x34 ] 0x0
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x58 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x58 ] edx
movzx eax bl
jle r-xdata
cmp bl 0x31
lea ecx [ edi - 0x2 ]
mov [ ebp - 0x40 ] ecx
jl r-xdata
mov [ ebp - 0x5c ] edx
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x5c ] 0x1
xor esi esi
cmp [ ebp - 0x44 ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] edi
je r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax esi
push esi
push eax
call sub_41151c
pop ecx
xor edx edx
pop ecx
inc edx
jmp r-xdata
cmp [ rw-data ] edx
movzx eax bl
jle r-xdata
jmp r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax esi
push esi
push eax
call sub_41151c
pop ecx
xor edx edx
pop ecx
inc edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
pop eax
dec edi
movsx eax bl
sub eax 0x2b
lea ecx [ edi - 0x1 ]
mov [ ebp - 0x40 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
push 0x4
push eax
call sub_41151c
pop ecx
pop ecx
jmp r-xdata
mov [ ebp - 0x48 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x34 ] eax
jbe r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax esi
push esi
push eax
call sub_41151c
pop ecx
xor edx edx
pop ecx
inc edx
jmp r-xdata
cmp bl 0x30
je r-xdata
mov edi [ ebp - 0x40 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
mov bl [ edi ]
inc edi
cmp bl 0x31
jl r-xdata
push 0x8
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x54 ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov eax [ ebp - 0x3c ]
cmp [ ebp - 0x19 ] 0x5
jl r-xdata
and [ ebp - 0x50 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x38 ]
mov eax [ ebp - 0x3c ]
inc [ ebp - 0x34 ]
sub bl 0x30
inc [ ebp - 0x3c ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x34 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x38 ]
mov bl [ edi ]
inc edi
dec edi
jmp r-xdata
or [ ebp - 0x4c ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
push 0x4
push eax
call sub_41151c
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
dec eax
inc [ ebp - 0x38 ]
jmp r-xdata
inc [ ebp - 0x19 ]
push 0x2
pop eax
mov [ ebp - 0x50 ] 0x8000
jmp r-xdata
sub eax 0x3
je r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
movzx eax bl
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x3c ]
sub bl 0x30
inc [ ebp - 0x3c ]
dec [ ebp - 0x38 ]
mov [ eax ] bl
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
movzx eax bl
jle r-xdata
dec eax
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
movzx eax bl
jle r-xdata
dec [ ebp - 0x34 ]
inc [ ebp - 0x38 ]
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push eax
call sub_4128fd
mov eax [ ebp - 0x54 ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x4c ] ecx
jge r-xdata
cmp bl 0x45
jle r-xdata
add eax [ ebp - 0x38 ]
cmp [ ebp - 0x5c ] ecx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp [ ebp - 0x58 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x48 ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x50 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x48 ]
mov [ ecx ] dx
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
call sub_407da9
leave
retn
mov [ ebp - 0x48 ] 0x1
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_413770
mov edx [ ebp - 0x14 ]
mov ebx [ ebp - 0x12 ]
mov esi [ ebp - 0xe ]
mov eax [ ebp - 0xa ]
add esp 0xc
jmp r-xdata
sub_412e62
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x2c ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
test dx dx
mov edi [ ebp + 0xc ]
jne r-xdata
movzx eax dx
mov esi eax
imul eax eax 0x4d10
and [ ebp - 0x10 ] 0x0
mov ecx edi
shr ecx 0x18
shr esi 0x8
lea ecx [ esi + ecx * 2 ]
imul ecx ecx 0x4d
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xe ] eax
sar esi 0x10
movsx eax si
neg eax
push 0x1
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x6 ] dx
mov [ ebp - 0xa ] edi
call sub_413770
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
cmp edi eax
mov [ ebx ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
test [ ebp + 0x18 ] 0x1
mov edi [ ebp + 0x14 ]
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
inc esi
call sub_41353e
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
cmp edi 0x15
jle r-xdata
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx ] 0x0
xor eax eax
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x5 ] 0x0
inc eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x10 ] 0x8
push 0x15
pop edi
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_407bc0
mov [ ebx + 0x3 ] 0x6
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_407da9
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_4128a2
dec [ ebp + 0x10 ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x2c ] 0x0
pop ecx
pop ecx
jmp r-xdata
lea ecx [ edi + 0x1 ]
test ecx ecx
lea eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov cl [ eax ]
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x10 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_4128d0
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_407bc0
mov [ ebx + 0x3 ] 0x5
cmp eax ecx
jae r-xdata
jmp r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_4128a2
lea eax [ ebp - 0x10 ]
push eax
call sub_4128a2
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_412844
lea eax [ ebp - 0x10 ]
push eax
call sub_4128a2
mov al [ ebp - 0x5 ]
mov ecx [ ebp - 0x30 ]
add al 0x30
add esp 0x14
inc [ ebp - 0x30 ]
dec [ ebp + 0x10 ]
mov [ ecx ] al
mov [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x30 ]
cmp [ eax ] 0x30
jne r-xdata
cmp eax ecx
jae r-xdata
cmp eax ecx
jae r-xdata
dec eax
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
mov [ eax + ebx + 0x4 ] 0x0
mov [ ecx ] 0x30
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
inc [ eax ]
inc eax
inc [ ebx ]
sub_4130f0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_413812
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_41312f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push eax
call sub_40a510
cmp eax esi
pop ecx
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40a265
pop ecx
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_413c44
test eax eax
pop ecx
pop ecx
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
cmp eax esi
mov [ ebp - 0x8 ] eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40a265
pop ecx
mov [ ebp - 0x4 ] esi
sub_4131bf
push 0x18
push r--data
call sub_40a560
xor edi edi
xor ebx ebx
inc ebx
cmp [ rw-data ] edi
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
push edi
push edi
push ebx
push edi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoW@IAT ]
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] ebx
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
lea esp [ ebp - 0x34 ]
call sub_40a59b
retn
mov [ rw-data ] 0x2
push edi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x28 ] esi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp esi edi
jne r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x20 ]
call sub_40a510
pop ecx
mov esi eax
cmp esi edi
je r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x1c ]
push esi
call sub_40a265
pop ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push edi
jmp r-xdata
push 0xffffffff
push esi
push ebx
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
sub_4132ef
push 0x18
push r--data
call sub_40a560
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
push esi
push esi
xor edi edi
inc edi
push edi
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x2
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
lea esp [ ebp - 0x34 ]
call sub_40a59b
retn
push esi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoW@IAT ]
mov ebx eax
mov [ ebp - 0x24 ] ebx
cmp ebx esi
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] esi
lea eax [ ebx + ebx ]
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp edi esi
jne r-xdata
push ebx
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
lea eax [ ebx + ebx ]
push eax
call sub_40a510
pop ecx
mov edi eax
cmp edi esi
je r-xdata
cmp [ ebp - 0x20 ] esi
je r-xdata
push esi
push esi
cmp [ ebp + 0x14 ] esi
jne r-xdata
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
call sub_40a265
pop ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push esi
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x18 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1c ] eax
sub_413430
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_413491
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
or edi 0xffffffff
test al 0x40
je r-xdata
test al 0x83
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_41248e
push esi
mov edi eax
call sub_413ecc
push [ esi + 0x10 ]
call sub_413e19
add esp 0xc
test eax eax
jge r-xdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_40a265
and [ esi + 0x1c ] 0x0
pop ecx
sub_4134e7
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov edx eax
and edx 0x1f
test [ ecx + edx * 8 + 0x4 ] 0x1
je r-xdata
push eax
call sub_41235b
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
retn
mov [ rw-data ] eax
test eax eax
je r-xdata
sub_41353e
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
xor eax eax
xor ecx ecx
mov cx [ ebx + 0xa ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov ax [ esi + 0xa ]
push edi
mov edi ecx
mov edx 0x7fff
and ecx edx
xor edi eax
and eax edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
xor eax eax
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_407da9
leave
retn
add [ ebp - 0x14 ] 0x2
inc [ ebp - 0x18 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0xc ]
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x28 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x24 ] 0x2
sub [ ebp - 0x20 ] 0x2
dec [ ebp - 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x5 ] 0x80
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ecx ]
movzx eax [ eax ]
imul eax ecx
mov ecx [ ebp - 0x14 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_412823
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x8000
ja r-xdata
mov eax [ ebp + 0x8 ]
neg eax
movzx ebx ax
add [ ebp + 0x8 ] ebx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_4128a2
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
pop ecx
jg r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_4128d0
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x1c ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov cx [ ebp - 0xe ]
mov [ esi ] cx
mov ecx [ ebp - 0xc ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x6 ] ecx
or eax edi
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] 0xffff
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x8000
jmp r-xdata
sub_413770
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
call sub_407da9
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
neg [ ebp + 0xc ]
mov ebx rw-data
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
lea esi [ ebx + eax * 4 ]
cmp [ esi ] 0x8000
jb r-xdata
mov eax [ ebp + 0xc ]
sar [ ebp + 0xc ] 0x3
and eax 0x7
add ebx 0x54
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_41353e
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xe ]
lea esi [ ebp - 0x10 ]
sub_4137f6
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
dec ecx
dec ecx
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
sub eax ecx
dec eax
retn
inc eax
test ecx ecx
jne r-xdata
sub_413812
push 0x40
push r--data
call sub_40a560
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
xor edi edi
xor esi esi
inc esi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push esi
mov eax r--data
push eax
push esi
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax edi
jle r-xdata
push [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call sub_4137f6
pop ecx
mov [ ebp + 0x14 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov ecx [ rw-data ]
push 0x2
pop ebx
cmp ecx ebx
je r-xdata
push eax
mov eax [ ebp + 0x18 ]
call sub_4137f6
pop ecx
mov [ ebp + 0x1c ] eax
mov [ rw-data ] 0x2
mov [ ebp - 0x38 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
mov ebx [ ebp + 0x20 ]
cmp ebx edi
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
cmp ecx esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_411f4f
pop ecx
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ebx [ rw-data ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] edi
cmp [ ebp + 0x20 ] edi
jne r-xdata
cmp esi ebx
je r-xdata
lea esp [ ebp - 0x5c ]
mov ecx [ ebp - 0x1c ]
call sub_407da9
call sub_40a59b
retn
cmp [ ebp + 0x14 ] edi
je r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x20 ] ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test edi edi
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push esi
push ebx
call sub_411f92
add esp 0x18
mov edi eax
test edi edi
je r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp eax edi
jne r-xdata
mov eax esi
push edi
call sub_40a265
push [ ebp - 0x38 ]
call sub_40a265
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
push ebx
call sub_411f92
add esp 0x18
mov [ ebp - 0x38 ] eax
test eax eax
jne r-xdata
cmp eax esi
jg r-xdata
mov eax ebx
jmp r-xdata
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x48 ] ebx
cmp ebx edi
je r-xdata
mov [ ebp + 0x10 ] edi
mov eax [ ebp - 0x38 ]
mov [ ebp + 0x18 ] eax
push edi
call sub_40a265
pop ecx
jmp r-xdata
cmp [ ebp + 0x14 ] esi
jle r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x34 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
pop eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebx + ebx ]
push eax
call sub_40a510
pop ecx
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
cmp [ ebp - 0x30 ] ebx
jb r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
push 0x0
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x4c ] esi
test esi esi
je r-xdata
mov [ ebp - 0x3c ] esi
cmp [ ebp - 0x30 ] ebx
jb r-xdata
lea eax [ ebp - 0x2a ]
cmp [ ebp - 0x2a ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
push [ ebp - 0x34 ]
call sub_40a265
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and eax 0xfffffffc
call sub_410980
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x50 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x2a ]
cmp [ ebp - 0x2a ] 0x0
je r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
test edi edi
jne r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ esi + esi ]
push eax
call sub_40a510
pop ecx
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
add eax ebx
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
push esi
push edi
push ebx
push [ ebp - 0x34 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x44 ] 0x1
add eax ebx
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
push edi
call sub_40a265
pop ecx
jmp r-xdata
sub_413b96
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ esp + 0x10 ]
call sub_4130f0
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
pop esi
sar eax 0x2
neg eax
retn
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
pop esi
sar eax 0x2
retn
test al al
je r-xdata
sub_413be3
push ebp
mov ebp esp
push ecx
xor ecx ecx
test edi edi
mov eax edi
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
leave
retn
push ebx
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_40a510
mov esi eax
test esi esi
pop ecx
mov [ ebp - 0x4 ] esi
jne r-xdata
add eax 0x4
inc ecx
cmp [ eax ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx edi
jmp r-xdata
push 0x9
call sub_40a29d
pop ecx
test eax eax
jne r-xdata
push eax
call sub_413ef7
mov [ esi ] eax
add esi 0x4
add ebx 0x4
mov eax [ ebx ]
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn
sub_413c44
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp eax ebx
push edi
mov [ ebp - 0x10 ] ebx
jne r-xdata
push esi
mov esi [ eax ]
cmp esi ebx
mov [ ebp - 0x4 ] esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
push 0x3d
push esi
call sub_413f22
cmp eax ebx
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
je r-xdata
pop edi
pop ebx
leave
retn
cmp esi eax
je r-xdata
xor ecx ecx
cmp [ eax + 0x1 ] bl
mov eax [ rw-data ]
sete cl
cmp eax [ rw-data ]
mov [ ebp - 0x8 ] ecx
jne r-xdata
cmp eax ebx
jne r-xdata
mov edi eax
call sub_413be3
mov [ rw-data ] eax
mov edi [ ebp - 0xc ]
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
mov esi [ rw-data ]
call sub_413b96
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push [ ebp - 0x4 ]
call sub_40a265
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
jmp r-xdata
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_40a265
cmp [ ebp - 0x8 ] ebx
pop ecx
jne r-xdata
push 0x4
call sub_40a510
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
call sub_41312f
test eax eax
je r-xdata
lea eax [ edi * 4 + 0x8 ]
push eax
push [ rw-data ]
call sub_40a5ac
cmp eax ebx
pop ecx
pop ecx
je r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
pop esi
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
mov eax [ esi + 0x4 ]
mov [ esi ] eax
inc edi
add esi 0x4
mov eax edi
shl eax 0x2
push eax
push [ rw-data ]
call sub_40a5ac
cmp eax ebx
pop ecx
pop ecx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0x4
call sub_40a510
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp - 0x4 ]
call sub_409e30
inc eax
inc eax
push eax
call sub_40a510
mov esi eax
cmp esi ebx
pop ecx
pop ecx
je r-xdata
jmp r-xdata
mov [ eax ] ebx
mov eax [ ebp - 0x10 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_40a265
pop ecx
push [ ebp - 0x4 ]
push esi
call sub_407bc0
mov eax esi
sub eax [ ebp - 0x4 ]
pop ecx
add eax [ ebp - 0xc ]
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push esi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] eax
push esi
call sub_40a265
pop ecx
or [ ebp - 0x10 ] 0xffffffff
sub_413e19
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
shl esi 0x3
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push edi
call sub_41235b
cmp eax 0xffffffff
pop ecx
je r-xdata
xor ebp ebp
cmp edi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_412282
pop ecx
jmp r-xdata
push 0x2
call sub_41235b
push 0x1
mov ebp eax
call sub_41235b
cmp eax ebp
pop ecx
pop ecx
je r-xdata
cmp edi 0x2
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_41235b
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebp eax
jmp r-xdata
push edi
call sub_4122e1
test ebp ebp
mov eax [ ebx ]
pop ecx
mov [ eax + esi + 0x4 ] 0x0
je r-xdata
sub_413ecc
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40a265
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_413ef7
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_409e30
inc eax
push eax
call sub_40a510
test eax eax
pop ecx
pop ecx
je r-xdata
push esi
push eax
call sub_407bc0
pop ecx
pop ecx
pop esi
retn
sub_413f22
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
pop ebp
jmp sub_413fa0
movzx ax [ ecx ]
test ax ax
jne r-xdata
movzx edx al
test [ edx + rw-data ] 0x4
je r-xdata
movzx edx ax
mov eax [ ebp + 0xc ]
sub eax edx
neg eax
sbb eax eax
not eax
and eax ecx
pop ebp
retn
movzx edx ax
cmp [ ebp + 0xc ] edx
je r-xdata
inc ecx
mov dl [ ecx ]
test dl dl
je r-xdata
inc ecx
xor eax eax
pop ebp
retn
movzx eax ax
movzx edx dl
shl eax 0x8
or eax edx
cmp [ ebp + 0xc ] eax
jne r-xdata
lea eax [ ecx - 0x1 ]
pop ebp
retn
sub_413fa0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_42027d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_420f70
add esp 0x4
call sub_421130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_421160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_421160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_420f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_420f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_420f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_420f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_420f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_420f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xeb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4210a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xeb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_42027d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_420f70
add esp 0x4
call sub_421130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_421160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_421160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_420f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_420f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_420f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_420f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_420f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_420f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xeb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4210a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xeb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_420f70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_4210a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80de78ac
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_421130
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_421160
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401660
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_407981
add esp 0x4
pop ebp
retn
sub_401680
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4054e0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_402a70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al 0x1
mov esp ebp
pop ebp
retn
sub_402d30
push ebp
mov ebp esp
push 0x104
mov eax [ ebp + 0x8 ]
push eax
push rw-data
call sub_4087e0
add esp 0xc
mov al 0x1
pop ebp
retn
sub_4036e0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
sub_403700
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fld [ rw-data ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
sub_4037d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop ebp
retn
sub_403ab0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403d40
mov esp ebp
pop ebp
retn
sub_403b60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403ee0
mov esp ebp
pop ebp
retn
sub_403c20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_407dd0
add esp 0x4
pop ebp
retn
sub_403c40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4044b0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_404e50
mov esp ebp
pop ebp
retn
sub_404130
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404150
add esp 0xc
pop ebp
retn
sub_404170
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_404050
mov esp ebp
pop ebp
retn
sub_4041c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404750
mov esp ebp
pop ebp
retn
sub_4044b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4045c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dx [ ecx ]
mov [ eax ] dx
pop ebp
retn
sub_404710
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_404bc0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_404760
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405490
mov esp ebp
pop ebp
retn
sub_4047b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_404050
mov esp ebp
pop ebp
retn
sub_404800
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404c10
mov esp ebp
pop ebp
retn
sub_404880
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_404d10
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_404940
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404960
add esp 0xc
pop ebp
retn
sub_404aae
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_404b40
push 0x0
push 0x0
call sub_4099ad
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_404bc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404c40
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_404d10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
shl eax 0x1
push eax
call sub_407981
add esp 0x4
pop ebp
retn
sub_404d30
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404d80
add esp 0xc
pop ebp
retn
sub_404d50
push ebp
mov ebp esp
pop ebp
retn
sub_404d60
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404db0
add esp 0xc
pop ebp
retn
sub_404e30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_404fa0
mov esp ebp
pop ebp
retn
sub_404e50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405020
mov esp ebp
pop ebp
retn
sub_404f30
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_407df0
add esp 0xc
pop ebp
retn
sub_404f80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_409e30
add esp 0x4
pop ebp
retn
sub_405160
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_409af0
add esp 0xc
pop ebp
retn
sub_4051c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ eax ] dl
pop ebp
retn
sub_405270
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call j_sub_40a265
add esp 0x4
mov esp ebp
pop ebp
retn 0x8
sub_40539e
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_404fa0
push 0x0
push 0x0
call sub_4099ad
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_405470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_401660
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_405520
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_405ad0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_406770
add esp 0x4
pop ebp
retn
sub_406670
push ebp
mov ebp esp
pop ebp
retn
sub_406680
push ebp
mov ebp esp
pop ebp
retn
sub_40793a
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax 0x1
retn
sub_407a25
mov [ ecx ] r--data
jmp sub_409a7f
sub_407a30
push esi
mov esi ecx
call sub_407a25
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40a265
pop ecx
sub_407a4c
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_409a35
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_407ae2
push esi
mov esi ecx
lea ecx [ esi + 0x18 ]
call sub_4054c0
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov eax esi
pop esi
retn
sub_407afc
push esi
mov esi ecx
lea eax [ esi + 0x18 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x30 ]
pop esi
jmp sub_407ac5
sub_407d78
push 0x8
push r--data
call sub_40a560
and [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
call sub_40b112
sub_407d99
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0x3
call [ ExitProcess@IAT ]
int3
sub_407da9
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_407d78
retn
j_sub_40a265
jmp sub_40a265
sub_407dbc
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x19
call sub_40a29d
pop ecx
retn
call eax
sub_407dd0
mov eax [ esp + 0x4 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ esp + 0x4 ]
sar eax 0x1
dec eax
retn
sub_408418
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov [ rw-data ] eax
retn
sub_408431
mov eax [ rw-data ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
je r-xdata
inc eax
retn
xor eax eax
retn
mov eax [ eax + 0x4 ]
sub_408500
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40858a
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_408500
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4085b6
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_408ac6
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ax [ edx ]
mov [ ecx ] ax
inc ecx
inc ecx
inc edx
inc edx
test ax ax
jne r-xdata
mov eax [ esp + 0x4 ]
retn
sub_408c5e
retn
sub_408c5f
mov eax sub_40cc1c
mov [ rw-data ] eax
mov [ rw-data ] sub_40c8e4
mov [ rw-data ] sub_40c949
mov [ rw-data ] sub_40c88c
mov [ rw-data ] sub_40c92f
mov [ rw-data ] eax
retn
sub_408c97
call sub_408c5f
call sub_40ccbf
cmp [ esp + 0x4 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
retn
call sub_40cc6d
sub_409006
xor eax eax
retn
sub_4099e7
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_409a7f
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_40a265
pop ecx
sub_409a95
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_409aa2
push esi
mov esi ecx
call sub_409a7f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40a265
pop ecx
sub_409abe
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_40a265
pop ecx
sub_409ad3
push esi
mov esi ecx
call sub_409abe
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40a265
pop ecx
j_sub_409fc9
jmp sub_409fc9
sub_40a11f
push [ esp + 0x4 ]
call sub_40a09d
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_40a24a
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_408522
add esp 0x8
pop ebp
retn 0x4
sub_40a464
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_410183
pop ecx
pop ecx
retn
sub_40a478
mov esp [ ebp - 0x18 ]
mov edi [ ebp - 0x24 ]
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40d804
or [ ebp - 0x4 ] 0xffffffff
mov eax edi
lea esp [ ebp - 0x7c ]
call sub_40a59b
retn
push edi
call sub_40d7e4
sub_40a540
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_40a59b
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
push ecx
retn
sub_40b14a
xor eax eax
inc eax
retn
sub_40b2a9
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
and [ rw-data ] 0x0
jmp sub_40bac0
xor eax eax
retn
sub_40b32f
mov eax [ ebp - 0x14 ]
call sub_40b2a9
retn
sub_40b36f
cmp [ rw-data ] 0x0
jle r-xdata
retn
dec [ rw-data ]
sub_40b3b3
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40b3bc
mov esp [ ebp - 0x18 ]
jmp sub_40bac0
sub_40b6fd
xor eax eax
inc eax
retn
sub_40b701
mov esp [ ebp - 0x18 ]
jmp sub_40bac0
sub_40badd
xor eax eax
inc eax
retn
sub_40baed
push 0x8
push r--data
call sub_40a560
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp sub_40bac0
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
sub_40bb0a
xor eax eax
inc eax
retn
sub_40bf36
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40bd50
pop ecx
mov [ rw-data ] 0x1
sub_40c92f
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
jne r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
sub_40cc6d
push 0x30000
push 0x10000
call sub_411c38
pop ecx
pop ecx
retn
sub_40d280
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cce8
inc [ rw-data ]
sub_40d7d3
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_40d712
add esp 0xc
retn
sub_40d7e4
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_40d712
add esp 0xc
retn
sub_40d7f5
push 0x1
push 0x0
push 0x0
call sub_40d712
add esp 0xc
retn
sub_40d804
push 0x1
push 0x1
push 0x0
call sub_40d712
add esp 0xc
retn
sub_40e426
or [ rw-data ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_40ee51
xor eax eax
inc eax
retn
sub_40efce
push sub_40ef80
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40efe1
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40f445
cmp [ rw-data ] 0x2
jne r-xdata
push 0x3
pop eax
retn
cmp [ rw-data ] 0x5
jb r-xdata
xor eax eax
inc eax
retn
sub_410920
xor eax eax
inc eax
retn
sub_410964
xor eax eax
inc eax
retn
sub_410c7d
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
movsx eax [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_410d4a
call sub_412593
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_412436
sub_410f5e
push esi
push [ esp + 0xc ]
xor esi esi
push [ esp + 0xc ]
inc esi
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_410f7a
push esi
push [ esp + 0xc ]
xor esi esi
push [ esp + 0xc ]
inc esi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_410f96
push esi
push [ esp + 0x8 ]
xor esi esi
inc esi
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4110bc
xor eax eax
inc eax
retn
sub_41118a
xor eax eax
inc eax
retn
sub_4112bf
xor eax eax
inc eax
retn
sub_4116a6
xor eax eax
xor eax eax
retn
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
retn
sub_411892
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41173a
add esp 0xc
retn
sub_4118a8
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41173a
add esp 0xc
retn
sub_411add
push 0x2
call sub_40a29d
pop ecx
retn
sub_411c38
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_411c06
pop ecx
pop ecx
retn
sub_412064
xor eax eax
inc eax
retn
sub_412271
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_41223e
add esp 0xc
retn
sub_412593
push 0x1
call sub_412526
pop ecx
retn
sub_413277
xor eax eax
inc eax
retn
sub_41339e
xor eax eax
inc eax
retn
sub_4139ba
xor eax eax
inc eax
retn
sub_413a54
xor eax eax
inc eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_414070
mov ecx [ ebp - 0x14 ]
jmp sub_401c20
sub_414078
mov eax r--data
jmp sub_4081b6
sub_414082
mov ecx [ ebp - 0x14 ]
jmp sub_401c20
sub_41408a
mov eax r--data
jmp sub_4081b6
sub_4140a0
mov ecx [ ebp - 0x14 ]
jmp sub_401c20
sub_4140a8
mov eax r--data
jmp sub_4081b6
sub_4140b2
mov ecx [ ebp - 0x14 ]
jmp sub_401c20
sub_4140ba
mov eax r--data
jmp sub_4081b6
sub_4140d0
mov eax r--data
jmp sub_4081b6
sub_4140e0
mov eax r--data
jmp sub_4081b6
sub_4140f0
lea ecx [ ebp - 0x50 ]
jmp sub_404e30
sub_4140f8
mov eax r--data
jmp sub_4081b6
sub_414110
mov ecx [ ebp - 0x10 ]
jmp sub_409a7f
sub_414118
mov eax r--data
jmp sub_4081b6
sub_414130
mov eax r--data
jmp sub_4081b6
sub_414140
mov eax r--data
jmp sub_4081b6
sub_414150
mov ecx [ ebp - 0x14 ]
jmp sub_4016a0
sub_414158
mov eax r--data
jmp sub_4081b6
sub_414162
mov ecx [ ebp - 0x14 ]
jmp sub_4016a0
sub_41416a
mov eax r--data
jmp sub_4081b6
sub_414174
lea ecx [ ebp - 0x28 ]
jmp sub_404e30
sub_41417c
mov eax r--data
jmp sub_4081b6
sub_414190
push ebp
mov ebp esp
mov ecx rw-data
call sub_4054c0
pop ebp
retn
sub_41419f
mov ecx rw-data
call sub_407b12
push sub_4141ca
call sub_40a11f
pop ecx
retn
sub_4141c0
mov ecx rw-data
jmp sub_407a25
sub_4141ca
mov ecx rw-data
jmp sub_407afc
