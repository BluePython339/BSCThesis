sub_4010fc
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_4010bc
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_401154
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4010fc
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_40119c
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401184
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401184
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_401154
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_40120c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_401154
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401184
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4012a0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401154
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call VirtualAlloc
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401304
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call VirtualAlloc
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call VirtualAlloc
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401154
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_40137c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401184
mov [ rw-data ] 0x1
sub_401434
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call VirtualAlloc
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_4014c8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_401548
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_4012a0
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_401434
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_40119c
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_40137c
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401184
jmp r-xdata
sub_4015d8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401304
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_40119c
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401304
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_40137c
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_40119c
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_401434
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_40137c
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401184
jmp r-xdata
sub_4016fc
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_4014c8
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_40119c
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_40137c
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_40120c
jmp r-xdata
sub_401788
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_40183e
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call InitializeCriticalSection
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_40114c
mov eax rw-data
call sub_40114c
mov eax rw-data
call sub_40114c
push 0xff8
push 0x0
call sub_4010bc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401845
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call LeaveCriticalSection
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_40184c
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401922
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call EnterCriticalSection
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_40114c
mov eax rw-data
call sub_40114c
mov eax rw-data
call sub_40114c
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call DeleteCriticalSection
retn
push rw-data
call LeaveCriticalSection
sub_40192c
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401990
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_4019c0
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401b94
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401a14
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_4019f0
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401a3c
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_40192c
add ebx esi
mov [ rw-data ] 0x6
sub_401aac
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_40192c
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401ae4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401990
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_4016fc
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_4016fc
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_4019c0
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_40120c
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401a14
sub_401b94
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401ae4
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401c1c
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_4019f0
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401c68
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401c1c
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_40119c
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401a3c
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401aac
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_4019c0
sub [ edi + 0x4 ] 0x4
sub_401cf4
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_401548
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401c68
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401d20
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4015d8
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401c68
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401d54
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_401d80
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_40192c
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401b94
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401cf4
test al al
jne r-xdata
mov eax esi
call sub_401d54
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_401e74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401788
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_401ff0
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call EnterCriticalSection
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_401d80
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call LeaveCriticalSection
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_402bec
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_402bec
jmp r-xdata
sub_402004
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402196
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401788
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call EnterCriticalSection
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call LeaveCriticalSection
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_402bec
jmp r-xdata
call sub_401c1c
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_40192c
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401b94
mov edx [ eax + 0x8 ]
add ebx edx
call sub_40192c
sub_4021a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401c1c
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_40192c
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401d20
test al al
je r-xdata
call sub_40192c
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_4019f0
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401b94
jmp r-xdata
sub_402384
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_402435
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401788
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4021a8
test al al
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_401e74
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_40254c
mov eax ebx
call sub_402004
retn
push rw-data
call LeaveCriticalSection
sub_402448
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402530
sub_402468
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402530
sub_402488
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402530
mov [ ecx ] eax
mov al 0x2
jmp sub_402530
retn
mov [ ecx ] eax
retn
sub_4024e4
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_403ec8
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4024d8
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_40254c
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402598
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40253c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40253c
jmp r-xdata
sub_4025f0
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402660
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_40269c
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_40277c
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_4027a0
cmp edx 0x1
jae r-xdata
push ecx
test eax eax
jne r-xdata
retn
mov ecx [ edx - 0x4 ]
test ecx ecx
jl r-xdata
mov eax [ edx - 0x8 ]
test eax eax
je r-xdata
xor edx edx
test eax eax
pop ecx
retn
mov [ ecx + eax ] edx
xor edx edx
cmp eax 0x1
pop ecx
retn
push edx
call sub_402448
pop edx
test eax eax
je r-xdata
xor edx edx
pop ecx
retn
push edi
mov ecx [ edx - 0x8 ]
mov edi eax
push eax
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx [ edx - 0x8 ]
and ecx 0x3
[ edi ]
pop eax
pop edi
mov ecx [ edx - 0x4 ]
test ecx ecx
jl r-xdata
test eax eax
pop ecx
retn
mov [ ecx + eax ] edx
sub_402808
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402838
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_401068
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_4028a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call RegQueryValueExA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401060
retn
sub_402930
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_40296c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_402980
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4029a0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_402980
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_402a04
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4028fc
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_403ec8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_40296c
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_402930
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_402b30
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4029a0
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_402b68
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_403ec8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_402908
call sub_402914
sub_402bbc
call sub_403ec8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_402908
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4029c8
jmp edx
sub_402c04
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4024d8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_402d64
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_402d8c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push j_sub_402a04#2
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_402dec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push j_sub_402a04
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_402e8c
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_402ee8
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_402f18
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call MessageBoxA
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call GetStdHandle
push eax
call sub_401020
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call GetStdHandle
push eax
call sub_401020
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_402fa4
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_402e8c
call sub_402f18
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_402d8c
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_402d64
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_403c00
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_402ee8
push eax
call sub_401038
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403094
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402468
pop eax
sub_4030b8
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402468
sub_4030e8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403158
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_40254c
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402468
sub_40312c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402468
sub_403158
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_402448
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403184
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403158
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403094
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_40254c
sub_4031c4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403184
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4031f4
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403184
not ecx
sub_403214
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_4030e8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_403534
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_403534
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_40254c
pop edi
pop esi
pop ebx
retn
sub_403258
test edx edx
je r-xdata
mov edx ecx
jmp sub_4030e8
test ecx ecx
je sub_4030e8
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_403214
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403158
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_40254c
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_40254c
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_4030e8
pop edx
pop eax
jmp sub_403214
call sub_4030e8
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4032cc
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403158
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_403534
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_40254c
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_4030e8
dec [ edx - 0x8 ]
sub_403358
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_403418
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403158
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_40254c
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402468
sub_403464
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403094
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403184
jmp r-xdata
pop ebx
retn 0x4
sub_4034a4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_403418
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_40254c
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_403534
mov edi ecx
sub_4034ec
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_403534
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403094
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403158
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402488
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_40254c
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4035b8
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4035dc
test edx edx
je sub_4035a0
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4035a0
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402530
retn
sub_403600
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_40364c
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_40364c
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_4030b8
jmp r-xdata
call sub_403094
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4035b8
jmp r-xdata
call sub_4035a0
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_403634
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_40364c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_403600
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_403c70
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_403b30
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402530
sub_403750
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_40254c
mov edx [ eax + esi ]
add eax ebx
call sub_4030e8
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4035dc
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_403738
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_40254c
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_40386c
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_403750
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_403c88
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_403b6c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402530
sub_40386c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4030e8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4035dc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_403738
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_40386c
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_403750
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403c88
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_403b6c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402530
sub_403998
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_403990
jmp r-xdata
mov al 0x4
call sub_402530
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402530
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402488
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_402448
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402660
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_40364c
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40254c
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402660
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_403978
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_403998
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_403b30
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402468
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_40364c
sub_403b6c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_403b30
pop edx
pop eax
sub_403b94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_402a04#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_403c00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_403c64
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403b94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403c6b
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_403c88
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_403cb4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_403d1a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4031f4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_40269c
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403d21
lea eax [ ebp - 0x10 ]
call sub_403094
retn
xor ebx ebx
sub_403d28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_403d72
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403d79
retn
mov eax rw-data
call sub_402598
mov eax rw-data
call sub_402598
mov eax rw-data
call sub_402598
call sub_40184c
sub_403d7c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] RaiseException
mov [ rw-data ] RtlUnwind
mov [ rw-data ] 0x2
mov [ rw-data ] sub_403960
call sub_402808
test al al
je r-xdata
call sub_4028fc
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call sub_401040
mov [ rw-data ] eax
call sub_401098
mov [ rw-data ] eax
call GetVersion
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402838
call GetThreadLocale
call sub_403cb4
mov [ rw-data ] eax
call GetVersion
and eax 0xff
cmp ax 0x4
jbe r-xdata
call GetThreadLocale
call sub_403cb4
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call GetCurrentThreadId
mov [ rw-data ] eax
sub_403e84
push ebx
call sub_403e7c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_403e70
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403088
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403088
sub_403ec8
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_403e84
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_403f14
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call GetModuleHandleA
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_403f08
mov edx rw-data
mov eax ebx
call sub_402e4c
pop ebx
retn
sub_403f58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_403f7d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403f84
retn
sub_403f90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_403fb5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403fbc
retn
sub_404018
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
cmp [ ebp + 0xc ] 0x1
sbb eax eax
inc eax
and eax 0x7f
push eax
mov eax [ ebp + 0x8 ]
push eax
call CreateMutexA
pop ebp
retn 0xc
sub_4041a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4041c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4041cc
retn
sub_4041d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4041fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404204
retn
sub_404210
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_404235
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40423c
retn
sub_404258
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40427d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404284
retn
sub_404290
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4042b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4042bc
retn
sub_4042c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4042ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4042f4
retn
sub_404300
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_404325
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40432c
retn
sub_404338
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40435d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404364
retn
sub_404370
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_404395
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40439c
retn
sub_4043a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4043cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4043d4
retn
sub_4043e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_404405
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40440c
retn
sub_4044b8
push 0x0
call CreateCompatibleDC
pop edx
push eax
push edx
mov eax ebx
call [ ebx + 0x34 ]
mov eax ebx
call sub_406154
push eax
push [ esp + 0x8 ]
call SelectObject
pop edx
push eax
push edx
mov eax [ esp + 0x8 ]
retn
sub_404520
test eax eax
jne r-xdata
mov edx [ eax + 0x4 ]
sar edx 0x1
je r-xdata
retn
jb r-xdata
jb r-xdata
retn
mov edx [ eax ]
call [ edx + 0x4 ]
dec [ eax + 0x4 ]
stc
sub_40453c
xor ecx ecx
xchg [ eax + 0x8 ] ecx
jecxz r-xdata
xor ecx ecx
xchg [ eax + 0x10 ] ecx
jecxz r-xdata
push eax
xchg edx eax
mov eax [ edx + 0xc ]
call ecx
pop eax
retn
push esi
push ecx
mov esi [ ecx + 0x18 ]
mov ecx [ ecx + 0x1c ]
lodsd [ esi ]
xchg edx eax
lodsd [ esi ]
push ecx
call edx
pop ecx
dec ecx
loop r-xdata
pop eax
call sub_404520
pop esi
sub_40458c
test eax eax
je r-xdata
call sub_404520
retn
mov ecx [ eax + 0x1c ]
jecxz r-xdata
mov edx [ eax + 0x18 ]
push eax
loop r-xdata
push edx
push ecx
call sub_402468
pop ecx
pop edx
mov eax [ edx + ecx * 4 - 0x4 ]
test eax eax
je r-xdata
pop eax
sub_4045e8
push edx
lea ecx [ eax + 0x1c ]
mov edx [ ecx ]
inc [ ecx ]
push edx
cmp edx [ eax + 0x20 ]
push eax
jl r-xdata
pop ecx
pop eax
pop edx
mov ecx [ ecx + 0x18 ]
mov [ ecx + eax * 4 ] edx
retn
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
add edx ecx
call sub_4045b4
mov ecx edx
shr ecx 0x2
inc ecx
sub_404624
test ecx ecx
jle r-xdata
retn
cmp edx [ eax + 0x1c ]
jge r-xdata
push ebx
xchg ebx eax
lea eax [ ecx + edx ]
cmp eax [ ebx + 0x1c ]
jbe r-xdata
mov eax [ ebx + 0x18 ]
push [ ebx + 0x1c ]
sub [ ebx + 0x1c ] ecx
mov ebx edx
lea edx [ eax + edx * 4 ]
lea eax [ edx + ecx * 4 ]
add ebx ecx
pop ecx
sub ecx ebx
shl ecx 0x2
call sub_40254c
pop ebx
mov ecx [ ebx + 0x1c ]
sub ecx edx
sub_404670
push ecx
push eax
push [ eax + 0x1c ]
push edx
call sub_4045e8
pop edx
pop eax
sub eax edx
shl eax 0x2
mov ecx eax
pop eax
mov eax [ eax + 0x18 ]
lea eax [ eax + edx * 4 ]
jl r-xdata
pop ecx
mov [ eax ] ecx
retn
push eax
lea edx [ eax + 0x4 ]
call sub_40254c
pop eax
sub_4046c0
push edi
push eax
mov edi eax
or ecx 0xffffffff
xor al al
[ edi ]
not ecx
pop edi
xchg edx eax
[ edi ]
xchg edi eax
pop edi
je r-xdata
dec eax
retn
xor eax eax
retn
sub_4046dc
push edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
std
dec edi
mov al dl
[ edi ]
mov eax 0x0
jne r-xdata
cld
pop edi
retn
mov eax edi
inc eax
sub_404700
push esi
xchg edx eax
push eax
call sub_4030e8
pop eax
call j_sub_403418
push eax
call sub_40320c
pop esi
xchg ecx eax
jecxz r-xdata
pop esi
retn
lodsb [ esi ]
sub al 0x41
cmp al 0x1a
jae r-xdata
loop r-xdata
add [ esi - 0x1 ] 0x20
sub_404728
push ecx
push eax
push edx
call sub_40320c
pop edx
test edx edx
jg r-xdata
sub eax edx
mov ecx eax
pop eax
jge r-xdata
xor edx edx
inc edx
inc ecx
call sub_403464
retn
pop eax
jl sub_403094
sub_404768
push esi
push eax
call sub_40449c
mov esi edx
xor ecx ecx
dec ecx
xchg ecx eax
jl r-xdata
xchg edx eax
pop eax
push eax
push ecx
call sub_404750
pop ecx
test eax eax
jle r-xdata
lodsb [ esi ]
test al al
je r-xdata
pop ecx
pop esi
retn
test ecx ecx
jle r-xdata
cmp eax ecx
jge r-xdata
sub_404798
push ebx
push edi
mov ebx eax
push ecx
mov eax [ ebx ]
call sub_404768
inc eax
jne r-xdata
dec eax
mov edi eax
mov ecx eax
dec ecx
xor edx edx
inc edx
mov eax [ ebx ]
call sub_403464
mov eax [ ebx ]
mov edx edi
inc edx
mov ecx ebx
call sub_404728
pop edi
pop ebx
retn
mov eax [ ebx ]
call sub_40320c
inc eax
inc eax
sub_4047d0
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
shr ecx 0x1
shr ecx 0x1
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
inc eax
sub_404808
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40320c
mov ebx eax
mov eax esi
call sub_40340c
mov edx eax
mov eax edi
mov ecx ebx
call sub_403184
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_404845
push ecx
push edx
pop edx
pop ecx
retn
mov ah 0x0
cmp [ edx ] ax
je r-xdata
cmp [ ecx ] ah
jne r-xdata
cmp [ edx ] ah
je r-xdata
dec edx
xor eax eax
cmp [ edx ] 0x3f
jne r-xdata
inc edx
cmp [ edx ] al
je r-xdata
cmp [ edx ] ah
sete al
jmp r-xdata
cmp [ edx ] al
jne r-xdata
inc ecx
inc edx
jmp r-xdata
mov ah [ edx ]
xor ah [ ecx ]
je r-xdata
inc edx
mov ah [ edx ]
or ah [ ecx ]
je r-xdata
call sub_404845
test al al
jne r-xdata
mov al 0x2a
inc ecx
jmp r-xdata
cmp [ ecx ] ah
je r-xdata
sub_404894
push esi
xchg esi eax
push 0x0
xchg edx eax
call sub_404490
mov edx esp
cmp [ eax ] 0x0
je r-xdata
xchg esi eax
push 0x0
call sub_404490
mov edx esp
cmp [ eax ] 0x0
je r-xdata
call sub_404808
pop eax
pop edx
push edx
push eax
call sub_40483c
xchg esi eax
call sub_4044a8
call sub_4044a8
xchg esi eax
pop esi
retn
call sub_404808
sub_4048d8
push edi
push esi
mov edi edx
xchg esi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4048f8
push edi
push esi
mov edi edx
xchg esi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
mov dl [ edi - 0x1 ]
mov ah dl
sub ah 0x61
cmp ah 0x19
ja r-xdata
sub al 0x20
mov ah 0x0
sub eax edx
jne r-xdata
sub dl 0x20
pop esi
pop edi
retn
cmp dl 0x0
jne r-xdata
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov ah al
sub ah 0x61
cmp ah 0x19
ja r-xdata
sub_404950
push esi
call sub_404490
mov esi edx
mov edx eax
push eax
inc eax
jmp r-xdata
pop eax
pop esi
retn
push edx
xchg edx eax
call sub_4046dc
pop edx
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
lodsb [ esi ]
test al al
je r-xdata
pop ecx
cmp [ ecx ] 0x0
je r-xdata
cmp eax ecx
jg r-xdata
push ecx
jle r-xdata
sub_404984
jmp r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
cmp dl 0x20
jbe r-xdata
retn
cmp [ eax + 0x1 ] 0x22
jne r-xdata
inc eax
add eax 0x2
jmp r-xdata
sub_4049a4
call sub_404984
jmp r-xdata
mov dl [ eax ]
cmp dl 0x20
ja r-xdata
cmp dl 0x22
jne r-xdata
retn
inc eax
inc eax
jmp r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp dl 0x22
jne r-xdata
inc eax
jmp r-xdata
inc eax
sub_4049d0
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_404ada
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
call GetCommandLineA
mov ebx eax
push 0x105
lea eax [ ebp - 0x109 ]
push eax
push 0x0
call GetModuleFileNameA
mov ecx eax
lea edx [ ebp - 0x109 ]
mov eax [ ebp - 0x4 ]
call sub_403184
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x110 ]
mov edx edi
call sub_4031c4
mov eax [ ebp - 0x110 ]
mov ecx ebx
sub ecx edi
mov edx 0x1
call sub_403464
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40320c
cmp eax 0x2
jl r-xdata
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404ae1
lea eax [ ebp - 0x110 ]
call sub_403094
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0x22
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40320c
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp [ edx + eax - 0x1 ] 0x22
jne r-xdata
mov eax ebx
call sub_404984
mov ebx eax
mov edi ebx
mov eax ebx
call sub_4049a4
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40320c
mov ecx eax
sub ecx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx 0x2
call sub_403464
sub_404ae8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_404b28
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404b2f
lea eax [ ebp - 0x4 ]
call sub_403094
retn
inc ebx
jmp r-xdata
lea edx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
call sub_4049d0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_404b38
xor ecx ecx
test cl cl
sete al
retn
cmp cl 0x61
jb r-xdata
cmp ch 0x61
jb r-xdata
cmp cl 0x7a
ja r-xdata
cmp cl ch
je r-xdata
cmp ch 0x7a
ja r-xdata
sub cl 0x20
mov cl [ edx ]
inc edx
mov ch [ eax ]
inc eax
jecxz r-xdata
sub ch 0x20
sub_404b68
xor ecx ecx
push ecx
mov ecx edx
shr ecx 0x10
and cx 0x1fff
jne r-xdata
push ecx
mov cl dh
push ecx
push 0x0
mov cl dl
push ecx
mov dx 0x0
push edx
push eax
call CreateFileA
retn
mov cl 0x80
sub_404bc4
push ebp
push 0x0
mov ebp esp
push 0x0
push ebp
push ecx
push edx
push eax
call ReadFile
test eax eax
pop eax
jne r-xdata
pop ebp
retn
xor eax eax
sub_404be0
push ebp
push ebp
mov ebp esp
push 0x0
push ebp
push ecx
push edx
push eax
call WriteFile
test eax eax
pop eax
jne r-xdata
pop ebp
retn
xor eax eax
sub_404bf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_404c66
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4031c4
mov eax [ ebp - 0x8 ]
mov edx 0x40000400
call sub_404b68
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404c6d
lea eax [ ebp - 0x8 ]
call sub_403094
retn
mov edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_404be0
mov esi eax
mov eax ebx
call sub_404b90
sub_404c78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_404ce6
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4031c4
mov eax [ ebp - 0x8 ]
mov edx 0x80000301
call sub_404b68
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404ced
lea eax [ ebp - 0x8 ]
call sub_403094
retn
mov edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_404bc4
mov esi eax
mov eax ebx
call sub_404b90
sub_404d08
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax edi
mov edx esi
call sub_4030e8
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
call sub_40320c
mov edx [ edi ]
cmp bl [ edx + eax - 0x1 ]
jne r-xdata
mov eax [ edi ]
call sub_40320c
mov edx eax
mov eax edi
mov ecx 0x1
call sub_4034a4
sub_404d48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_404dab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx edi
call sub_4030e8
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4031b4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403214
mov eax [ esi ]
call sub_40320c
mov edx [ esi ]
cmp bl [ edx + eax - 0x1 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404db2
lea eax [ ebp - 0x4 ]
call sub_403094
retn
sub_404de0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4033fc
xor eax eax
push ebp
push sub_404e9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40320c
test eax eax
setg bl
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404ea6
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4030b8
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404dcc
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40312c
mov eax [ ebp - 0x4 ]
call sub_40320c
cmp eax 0x3
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_404cf8
test al al
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404eec
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_403358
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404eec
mov eax [ ebp - 0x10 ]
call sub_404de0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404eb0
test al al
jne r-xdata
mov bl 0x1
sub_404eec
push edx
mov edx [ rw-data ]
call sub_404490
push eax
call sub_404950
xchg edx eax
xor ecx ecx
pop eax
cmp [ edx ] cl
je r-xdata
pop eax
call sub_403184
retn
sub edx eax
inc edx
xchg edx eax
xchg ecx eax
sub_404f34
push ebx
push esi
add esp 0xfffffefc
mov esi edx
mov ebx eax
push 0x104
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_40340c
push eax
call GetShortPathNameA
mov ecx eax
mov edx esp
mov eax esi
call sub_403184
add esp 0x104
pop esi
pop ebx
retn
sub_404f90
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor edx edx
mov [ ebp - 0x10c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_404ffa
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x105
lea eax [ ebp - 0x105 ]
push eax
call GetWindowsDirectoryA
lea eax [ ebp - 0x10c ]
lea edx [ ebp - 0x105 ]
call sub_4031c4
mov eax [ ebp - 0x10c ]
mov edx ebx
call sub_404db8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405001
lea eax [ ebp - 0x10c ]
call sub_403094
retn
sub_405008
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor edx edx
mov [ ebp - 0x10c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_405072
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x105 ]
push eax
push 0x105
call GetTempPathA
lea eax [ ebp - 0x10c ]
lea edx [ ebp - 0x105 ]
call sub_4031c4
mov eax [ ebp - 0x10c ]
mov edx ebx
call sub_404db8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405079
lea eax [ ebp - 0x10c ]
call sub_403094
retn
sub_405080
push ebp
mov ebp esp
add esp 0xfffffeac
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x150 ] ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4033fc
mov eax [ ebp - 0x8 ]
call sub_4033fc
xor eax eax
push ebp
push sub_4051db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403094
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40320c
mov edx [ ebp - 0x4 ]
cmp [ edx + eax - 0x1 ] 0x5c
je r-xdata
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_403258
lea eax [ ebp - 0x14c ]
push eax
mov eax [ ebp - 0xc ]
call sub_40340c
push eax
call FindFirstFileA
mov esi eax
test esi esi
setne al
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403214
test al al
jne r-xdata
lea ecx [ ebp - 0x150 ]
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_404728
mov edx [ ebp - 0x150 ]
lea eax [ ebp - 0x8 ]
call sub_40312c
test [ ebp - 0x14c ] 0x10
ja r-xdata
push esi
call FindClose
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4051e2
lea eax [ ebp - 0x154 ]
mov edx 0x2
call sub_4030b8
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4030b8
retn
lea eax [ ebp - 0x14c ]
push eax
push esi
call FindNextFileA
cmp eax 0x1
sbb eax eax
inc eax
cmp [ ebx ] 0x0
je r-xdata
push [ ebx ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x154 ]
lea edx [ ebp - 0x120 ]
mov ecx 0x104
call sub_4031f4
push [ ebp - 0x154 ]
mov eax ebx
mov edx 0x3
call sub_4032cc
mov eax ebx
mov edx r-xdata
call sub_403214
sub_405200
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_405291
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_404ed0
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_404eec
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
pop edx
call sub_405080
mov bl 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404798
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405298
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4030b8
retn
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_40340c
push eax
call DeleteFileA
test eax eax
jne r-xdata
mov ebx eax
mov al 0x1
sub_4052ac
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov edx [ r-xdata ]
xor eax eax
call sub_4044f8
mov ebx eax
push ebp
mov eax ebx
mov ecx edi
mov edx esi
call sub_405634
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40534c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_405320
mov eax [ eax ]
and eax 0x10
cmp eax 0x1
sbb eax eax
inc eax
pop esi
pop ebx
retn
sub_40536c
push ebp
mov ebp esp
add esp 0xfffffed0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x128 ] ebx
mov [ ebp - 0x12c ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_405611
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
and eax edi
cmp ebx eax
je r-xdata
mov al 0x1
mov eax ebx
and eax 0x80
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405618
lea eax [ ebp - 0x130 ]
mov edx 0x8
call sub_4030b8
retn
lea eax [ ebp - 0x110 ]
mov edx esi
call sub_402770
lea eax [ ebp - 0x110 ]
mov edx r-xdata
xor ecx ecx
mov cl [ eax ]
inc ecx
call sub_4025f0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edi [ eax + 0x1c ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebp - 0x114 ]
mov edx esi
call sub_4031c4
mov eax [ ebp - 0x114 ]
mov edx r-xdata
call sub_403358
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax ebx
and eax 0x80
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x110 ]
mov edx esi
call sub_402770
lea eax [ ebp - 0x110 ]
mov edx r-xdata
xor ecx ecx
mov cl [ eax ]
inc ecx
call sub_4025f0
je r-xdata
inc [ ebp - 0xc ]
dec edi
jne r-xdata
lea eax [ ebp - 0x110 ]
mov edx ebx
call sub_402770
lea eax [ ebp - 0x110 ]
mov edx r-xdata
xor ecx ecx
mov cl [ eax ]
inc ecx
call sub_4025f0
je r-xdata
cmp ebx 0x80
je r-xdata
mov [ ebp - 0x5 ] al
lea eax [ ebp - 0x130 ]
mov edx esi
call sub_4031c4
mov eax [ ebp - 0x130 ]
mov edx r-xdata
call sub_403358
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0xc ]
mov ebx [ eax + edx * 4 ]
test ebx ebx
je r-xdata
cmp ebx esi
je r-xdata
lea eax [ ebp - 0x118 ]
mov edx ebx
call sub_4031c4
mov eax [ ebp - 0x118 ]
mov edx r-xdata
call sub_403358
jne r-xdata
and ebx 0x10
test ebx ebx
je r-xdata
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x110 ]
mov edx esi
call sub_402770
lea eax [ ebp - 0x110 ]
mov edx r-xdata
xor ecx ecx
mov cl [ eax ]
inc ecx
call sub_4025f0
je r-xdata
and edi 0x10
test edi edi
jne r-xdata
cmp [ ebx ] 0x5e
jne r-xdata
lea eax [ ebp - 0x11c ]
mov edx esi
call sub_4031c4
mov eax [ ebp - 0x11c ]
mov edx r-xdata
call sub_403358
je r-xdata
mov [ ebp - 0xd ] 0x0
lea eax [ ebp - 0x128 ]
mov edx ebx
call sub_4031c4
mov eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x12c ]
mov edx esi
call sub_4031c4
mov eax [ ebp - 0x12c ]
pop edx
call sub_404894
test al al
je r-xdata
lea eax [ ebp - 0x120 ]
lea edx [ ebx + 0x1 ]
call sub_4031c4
mov eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x124 ]
mov edx esi
call sub_4031c4
mov eax [ ebp - 0x124 ]
pop edx
call sub_404894
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
sub_405634
push ebp
mov ebp esp
push ebx
push edi
mov ebx eax
pushad
call sub_4052d8
call sub_40456c
mov [ ebx + 0x18 ] eax
popad
pushad
lea eax [ ebx + 0x1c ]
call sub_4030e8
popad
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
xor eax eax
xchg [ ebx + 0x20 ] eax
call sub_404520
pop edi
pop ebx
pop ebp
retn 0x4
pushad
lea edx [ ebx + 0x1c ]
mov eax [ edx ]
call sub_404db8
mov eax [ ebx + 0x20 ]
test eax eax
jne r-xdata
popad
add esp 0xfffffec0
xor edx edx
push edx
push edx
xchg ecx eax
mov edx esp
call sub_405300
lea eax [ esp + 0x4 ]
mov edx [ ebx + 0x1c ]
pop ecx
push ecx
call sub_403258
call sub_4044a8
pop eax
mov edx esp
push eax
push edx
push eax
call FindFirstFileA
mov edi eax
inc eax
mov eax esp
pushfd
call sub_403094
popfd
pop ecx
je r-xdata
call sub_405c80
mov [ ebx + 0x20 ] eax
popad
pushad
push ecx
xchg ecx eax
mov edx r-xdata
call sub_4048d8
test al al
pop edx
jne r-xdata
add esp 0x140
mov ecx [ esp ]
push [ ebp + 0x8 ]
lea edx [ esp + 0x30 ]
mov eax ebx
call sub_40536c
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
call sub_405cac
jmp r-xdata
mov edx r-xdata
push esp
push edi
call FindNextFileA
test eax eax
jne r-xdata
mov ecx [ ebx + 0x24 ]
jecxz r-xdata
push edi
call FindClose
mov eax 0x140
push eax
call sub_402448
push eax
xchg edx eax
mov eax [ ebx + 0x18 ]
call sub_4045e8
pop edx
pop ecx
mov eax esp
call sub_40254c
mov eax [ ebx + 0x28 ]
mov ecx esp
push 0x1
mov edx esp
push edx
mov edx ebx
call [ ebx + 0x24 ]
pop ecx
jecxz r-xdata
loop r-xdata
sub_40575c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push 0x2001f
push 0x0
mov eax esi
call sub_40340c
push eax
push ebx
call RegOpenKeyExA
test eax eax
je r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
sub_40578c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_40320c
inc eax
push eax
mov eax esi
call sub_40340c
push eax
push 0x1
push 0x0
mov eax edi
call sub_40340c
push eax
push ebx
call RegSetValueExA
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4057f8
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_405834
push ebx
push esi
push edi
add esp 0xfffffff0
mov [ esp ] edx
mov ebx eax
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ax [ ebx ]
call sub_4057f8
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea edi [ eax * 8 + rw-data ]
cmp [ ebx ] 0x270f
ja r-xdata
mov al [ esp + 0x4 ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2 ] 0xc
ja r-xdata
movzx eax [ ebx + 0x2 ]
mov ax [ edi + eax * 2 - 0x2 ]
cmp ax [ ebx + 0x6 ]
jb r-xdata
cmp [ ebx + 0x8 ] 0x18
jae r-xdata
cmp [ ebx + 0xa ] 0x3c
jae r-xdata
cmp [ ebx + 0xc ] 0x3c
jae r-xdata
cmp [ ebx + 0xe ] 0x3e8
jae r-xdata
movzx esi [ ebx + 0x6 ]
movzx eax [ ebx + 0x2 ]
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebx ]
dec ecx
test ecx ecx
jge r-xdata
mov ecx 0x1
mov eax ecx
mov edi 0x64
cdq
idiv edi
imul edi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
xor ecx ecx
movzx edx [ edi + ecx * 2 - 0x2 ]
add esi edx
inc ecx
dec eax
jne r-xdata
sar edx 0x2
add edi edx
sub edi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add edi eax
add esi edi
mov [ esp + 0x8 ] esi
fild [ esp + 0x8 ]
movzx eax [ ebx + 0x8 ]
imul eax eax 0x36ee80
movzx edx [ ebx + 0xa ]
imul edx edx 0xea60
add eax edx
movzx edx [ ebx + 0xc ]
imul edx edx 0x3e8
add eax edx
movzx edx [ ebx + 0xe ]
add eax edx
mov [ esp + 0xc ] eax
fild [ esp + 0xc ]
fdiv [ r-xdata ]
faddp st1
mov eax [ esp ]
fstp [ eax ]
fwait
mov [ esp + 0x4 ] 0x1
add edx 0x3
sub_4059a8
push ebx
push esi
mov esi eax
mov edx [ r-xdata ]
xor eax eax
call sub_4044f8
mov ebx eax
lea edx [ ebx + 0x1c ]
mov eax esi
mov ecx 0x20
call sub_40254c
lea eax [ ebx + 0x1c ]
mov [ ebx + 0x18 ] eax
mov eax ebx
pop esi
pop ebx
retn
sub_405a24
push ebx
mov ebx edx
and ecx 0xff
loop r-xdata
loop r-xdata
add ebx [ eax + 0x4c ]
cmp ebx [ eax + 0x48 ]
jle r-xdata
add ebx [ eax + 0x48 ]
xchg ebx eax
mov [ ebx + 0x4c ] eax
pop ebx
retn
push eax
mov edx ebx
call sub_405980
pop eax
sub_405a50
cmp [ eax + 0x44 ] edx
jge r-xdata
mov [ eax + 0x48 ] edx
cmp [ eax + 0x4c ] edx
jle r-xdata
push edx
push eax
mov ecx [ eax + 0x3c ]
jecxz r-xdata
retn
mov [ eax + 0x4c ] edx
xchg edx eax
call sub_402448
xchg edx eax
pop eax
mov [ eax + 0x3c ] edx
jmp r-xdata
test edx edx
je r-xdata
pop edx
xchg [ eax + 0x3c ] edx
xchg edx eax
call sub_402468
lea eax [ eax + 0x3c ]
call sub_402488
jmp r-xdata
pop eax
sub_405a90
push ebx
xchg ebx eax
mov eax [ ebx + 0x4c ]
add eax ecx
cmp eax [ ebx + 0x48 ]
jle r-xdata
push ecx
mov eax [ ebx + 0x3c ]
add eax [ ebx + 0x4c ]
call sub_40254c
pop eax
add [ ebx + 0x4c ] eax
pop ebx
retn
mov ecx [ ebx + 0x48 ]
sub ecx [ ebx + 0x4c ]
sub_405ab4
push ebx
xchg ebx eax
mov eax [ ebx + 0x4c ]
add eax ecx
cmp eax [ ebx + 0x48 ]
push edx
push ecx
jle r-xdata
pop ecx
pop eax
mov edx [ ebx + 0x3c ]
add edx [ ebx + 0x4c ]
push ecx
call sub_40254c
pop eax
add [ ebx + 0x4c ] eax
pop ebx
retn
xchg edx eax
mov eax ebx
call sub_405980
sub_405aec
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_405968
mov esi eax
mov edx edi
mov eax ebx
call sub_405974
mov eax ebx
call sub_405984
push eax
call SetEndOfFile
cmp edi esi
jbe r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_405974
sub_405b24
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax rw-data
call sub_4059a8
mov ebx eax
mov [ ebx + 0x28 ] sub_405a00
mov [ ebx + 0x2c ] sub_405a0c
mov [ ebx + 0x24 ] sub_405aec
mov edx edi
mov eax esi
call sub_404b68
mov [ ebx + 0x40 ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_405b84
push ebx
push esi
push edi
mov edi eax
mov eax rw-data
call sub_4059a8
mov ebx eax
mov [ ebx + 0x28 ] sub_405a00
mov [ ebx + 0x2c ] sub_405a0c
mov [ ebx + 0x24 ] sub_405aec
mov esi 0x200
mov eax edi
call sub_404b9c
test al al
je r-xdata
mov edx esi
or edx 0xc0000000
or edx 0x1
mov eax edi
call sub_404b68
mov [ ebx + 0x40 ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov esi 0x300
sub_405be8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebx edx
mov edi eax
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ edi + 0x3c ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov ecx eax
add ecx esi
mov edx [ ebx + 0x48 ]
cmp ecx edx
jbe r-xdata
mov eax esi
call sub_402448
mov ebp eax
mov edx ebp
mov ecx esi
mov eax ebx
call sub_405988
mov esi eax
mov edx ebp
mov eax edi
mov ecx esi
call sub_40598c
mov esi eax
mov eax ebp
call sub_402468
mov eax [ edi + 0x4c ]
add eax esi
cmp eax [ edi + 0x48 ]
jbe r-xdata
mov edx [ ebx + 0x3c ]
add edx eax
mov eax edi
mov ecx esi
call sub_40598c
mov esi eax
add [ ebx + 0x4c ] esi
jmp r-xdata
mov esi edx
sub esi eax
mov edx [ edi + 0x3c ]
add edx [ edi + 0x4c ]
mov ecx esi
mov eax ebx
call sub_405988
mov esi eax
add [ edi + 0x4c ] esi
jmp r-xdata
mov edx eax
mov eax edi
call sub_405980
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_405cbc
push ebx
xchg ebx eax
mov edx [ ebx + 0x1c ]
xor eax eax
mov [ ebx + 0x25 ] eax
xchg [ ebx + 0x21 ] eax
test eax eax
je r-xdata
push edx
mov eax ebx
call sub_405cec
pop edx
jmp r-xdata
xchg [ ebx + 0x18 ] eax
call sub_404520
pop ebx
retn
call sub_402468
dec edx
jl r-xdata
sub_405cec
dec [ eax + 0x1c ]
push eax
mov eax [ eax + 0x18 ]
mov ecx [ eax + 0x18 ]
push [ ecx + edx * 4 ]
call sub_404618
pop eax
pop edx
mov ecx [ edx + 0x25 ]
jecxz r-xdata
call sub_402468
cmp eax [ edx + 0x21 ]
jb r-xdata
add ecx [ edx + 0x21 ]
cmp eax ecx
jb r-xdata
retn
sub_405d30
push esi
push edi
mov ecx [ eax + 0x1c ]
mov eax [ eax + 0x18 ]
push ecx
jecxz r-xdata
push esi
xchg edx eax
xor edx edx
jecxz r-xdata
mov esi [ eax + 0x18 ]
call sub_403184
pop edi
pop ecx
jecxz r-xdata
push eax
pop edi
pop esi
retn
mov edi [ edi ]
push ecx
push edx
lodsd [ esi ]
call sub_40493c
pop edx
lea edx [ eax + edx + 0x2 ]
pop ecx
loop r-xdata
pop eax
pop esi
xchg edx ecx
push eax
push ecx
lodsd [ esi ]
push eax
call sub_40493c
xchg ecx eax
pop eax
xchg esi eax
[ edi ] [ esi ]
xchg esi eax
mov ax 0xa0d
stosw [ edi ]
pop ecx
loop r-xdata
xchg ecx eax
stosb [ edi ]
sub_405d84
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov ebx [ edi + 0x1c ]
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x18 ]
mov edx esi
call sub_40465c
push eax
mov eax ebp
call sub_40340c
pop edx
call sub_4048f8
test eax eax
je r-xdata
sub_405dc4
push ebx
push edx
push ecx
xchg ebx eax
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
pop eax
push eax
call sub_40320c
inc eax
push eax
call sub_402448
mov [ eax ] 0x0
xchg edx eax
pop ecx
pop eax
push edx
test eax eax
je r-xdata
call sub_40456c
mov [ ebx + 0x18 ] eax
pop ecx
pop edx
mov eax [ ebx + 0x18 ]
call sub_404670
inc [ ebx + 0x1c ]
pop ebx
retn
call sub_40254c
sub_405e04
push eax
xchg edx eax
mov edx 0x80000301
call sub_404b68
inc eax
je r-xdata
pop edx
retn
dec eax
push ebx
xchg ebx eax
push 0x0
push ebx
call GetFileSize
xor edx edx
push edx
xchg ecx eax
mov eax esp
push ecx
call sub_403184
pop ecx
mov eax ebx
pop edx
push edx
call sub_404bc4
xchg ebx eax
call sub_404b90
pop edx
pop ebx
pop eax
push edx
xor ecx ecx
call sub_405e94
call sub_4044a8
push edx
mov al 0x1
sub_405e50
push ebx
push eax
xchg edx eax
mov edx 0x40000400
call sub_404b68
inc eax
je r-xdata
pop edx
pop ebx
retn
dec eax
xchg ebx eax
pop eax
push 0x0
mov edx esp
call sub_405d30
pop eax
push eax
call sub_40320c
xchg ecx eax
pop edx
push edx
mov eax ebx
call sub_404be0
push ebx
call SetEndOfFile
xchg ebx eax
call sub_404b90
call sub_4044a8
push edx
inc eax
sub_405e94
dec cl
je r-xdata
call sub_40449c
je r-xdata
pushad
call sub_405cbc
popad
retn
push ebx
push edi
mov ebx eax
mov edi [ ebx + 0x25 ]
mov eax [ edx - 0x4 ]
inc eax
push eax
push edx
push [ ebx + 0x21 ]
add eax [ ebx + 0x25 ]
call sub_402448
mov [ ebx + 0x21 ] eax
mov ecx edi
xchg edx eax
pop eax
jecxz r-xdata
pop eax
mov edx edi
add edx [ ebx + 0x21 ]
pop ecx
push ecx
add [ ebx + 0x25 ] ecx
call sub_40254c
add edi [ ebx + 0x21 ]
mov ecx [ ebx + 0x18 ]
inc ecx
loop r-xdata
push eax
call sub_40254c
pop edx
push edx
push esi
mov esi [ ebx + 0x18 ]
mov esi [ esi + 0x18 ]
mov ecx [ ebx + 0x1c ]
pop ecx
mov edx [ ebx + 0x1c ]
push edi
push ecx
mov al 0xd
call sub_40456c
mov [ ebx + 0x18 ] eax
loop r-xdata
add eax [ ebx + 0x21 ]
mov [ esi - 0x4 ] eax
mov [ ebx + 0x1c ] edx
mov eax [ ebx + 0x18 ]
push edx
push eax
cmp edx [ eax + 0x20 ]
jle r-xdata
inc edx
[ edi ]
jne r-xdata
lodsd [ esi ]
sub eax edx
cmp eax [ ebx + 0x25 ]
jae r-xdata
pop esi
pop eax
call sub_402468
pop eax
pop ecx
xchg [ eax + 0x1c ] ecx
mov edx [ eax + 0x18 ]
lea edx [ edx + ecx * 4 ]
pop ecx
pop edi
mov eax 0xd
call sub_4045b4
cmp [ edi ] 0xa
jne r-xdata
pop edi
pop ebx
mov [ edx ] edi
add edx 0x4
[ edi ]
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
inc edi
loop r-xdata
mov [ edi - 0x1 ] ah
cmp [ edi ] 0xa
jne r-xdata
cmp [ edi ] ah
je r-xdata
inc edi
loop r-xdata
sub_405f70
push edi
push ecx
push edx
push eax
mov eax 0x428
call sub_4047f0
mov edi eax
xchg ecx eax
xor eax eax
mov al 0x28
stosd [ edi ]
pop eax
stosd [ edi ]
pop eax
stosd [ edi ]
xor eax eax
inc eax
stosw [ edi ]
pop eax
stosw [ edi ]
xchg ecx eax
pop edi
retn
sub_405f98
push esi
mov esi rw-data
xor ecx ecx
xchg edx eax
xchg ecx eax
pop esi
retn
test al al
jne r-xdata
inc ecx
lodsb [ esi ]
cmp al dl
je r-xdata
sub_405fb4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ r-xdata ]
xor eax eax
call sub_4044f8
mov [ eax + 0x34 ] sub_405fb0
mov [ eax + 0x1c ] ebx
mov [ eax + 0x18 ] esi
pop esi
pop ebx
retn
sub_405fd8
push eax
push edx
call sub_405fb4
pop edx
pop ecx
push eax
inc [ eax + 0x3c ]
jecxz r-xdata
pop eax
retn
test edx edx
je r-xdata
push ebx
push eax
push edx
push ecx
push 0x0
call GetDC
push eax
xchg ebx eax
call CreateCompatibleBitmap
pop edx
mov [ edx + 0x20 ] eax
push ebx
push 0x0
call ReleaseDC
pop ebx
sub_406024
push ebx
mov ebx eax
call [ ebx + 0x34 ]
xor ecx ecx
xchg [ ebx + 0x20 ] ecx
jecxz r-xdata
xchg [ ebx + 0x41 ] ecx
jecxz r-xdata
push ecx
call DeleteObject
xor ecx ecx
mov [ ebx + 0x41 ] ecx
xor ecx ecx
xchg [ ebx + 0x3d ] ecx
jecxz r-xdata
xchg ecx eax
call sub_402468
xor eax eax
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x56 ] eax
mov [ ebx + 0x5a ] eax
xchg ebx eax
pop ebx
call sub_4064bc
retn
xchg ecx eax
call sub_402468
sub_406094
push ebp
mov ebp esp
push edx
push ecx
push ebx
push esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx + 0x20 ]
jecxz r-xdata
mov ecx [ ebx + 0x3d ]
jecxz r-xdata
add esp 0xffffffe8
push esp
push 0x18
push [ ebx + 0x20 ]
call GetObjectA
test eax eax
mov esi [ esp + 0x8 ]
jne r-xdata
mov esi [ ecx + 0x8 ]
test esi esi
jge r-xdata
add esp 0x18
call sub_4044b8
push 0xcc0020
push 0x0
push 0x0
push eax
call sub_4060e9
call BitBlt
call sub_4044e0
jmp r-xdata
mov esi [ ebx + 0x18 ]
push 0xcc0020
push 0x0
push ecx
push [ ebx + 0x41 ]
push esi
push [ ebx + 0x1c ]
push 0x0
push 0x0
call sub_4060e9
call StretchDIBits
test eax eax
jne r-xdata
neg esi
mov eax ebx
call sub_406154
test eax eax
xchg ebx eax
jne r-xdata
mov ebx eax
call sub_406144
je r-xdata
sub_406154
push ebx
push esi
push edi
mov ebx eax
xor esi esi
mov eax ebx
call sub_406144
test al al
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov esi [ ebx + 0x20 ]
mov eax [ ebx + 0x41 ]
test eax eax
je r-xdata
mov edi eax
push 0x0
call GetDC
mov esi eax
xor eax eax
mov [ ebx + 0x41 ] eax
push 0x0
push 0x0
lea eax [ ebx + 0x41 ]
push eax
push 0x0
mov eax [ ebx + 0x3d ]
push eax
push esi
call CreateDIBSection
mov [ ebx + 0x20 ] eax
push esi
push 0x0
call ReleaseDC
cmp [ ebx + 0x20 ] 0x0
je r-xdata
mov [ ebx + 0x41 ] edi
mov ecx [ ebx + 0x45 ]
mov edx [ ebx + 0x41 ]
mov eax edi
call sub_40254c
cmp [ ebx + 0x72 ] 0x0
jne r-xdata
mov [ ebx + 0x72 ] 0x1
xor eax eax
mov [ ebx + 0x56 ] eax
xor eax eax
mov [ ebx + 0x5a ] eax
jmp r-xdata
mov eax edi
call sub_402468
sub_4061e0
push eax
push edx
call sub_406068
pop ecx
jecxz r-xdata
pop eax
retn
push ecx
add esp 0xffffffe8
push esp
push 0x18
push ecx
call GetObjectA
pop edx
pop edx
pop ecx
add esp 0xc
test eax eax
pop eax
je r-xdata
xchg [ esp ] eax
mov [ eax + 0x1c ] edx
mov [ eax + 0x18 ] ecx
pop edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x3c ] 0x1
push eax
sub_406218
push ebx
mov ebx eax
call sub_406144
je r-xdata
pop ebx
jne sub_40627c
mov eax ebx
push edx
call sub_40648c
pop edx
cmp eax edx
je r-xdata
retn
test edx edx
mov eax ebx
jne r-xdata
mov [ ebx + 0x49 ] dl
cmp dl 0x5
jne r-xdata
pop ebx
inc edx
jmp sub_40647c
push edx
xor edx edx
call sub_40647c
mov eax [ ebx + 0x3d ]
movzx eax [ eax + 0xe ]
call sub_405f98
pop edx
cmp al dl
xchg ebx eax
dec edx
sub_40627c
push eax
call sub_406144
pop eax
je r-xdata
retn
pushad
mov ebx eax
call [ ebx + 0x34 ]
xor eax eax
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x56 ] eax
mov [ ebx + 0x5a ] eax
mov esi [ ebx + 0x1c ]
mov edi [ ebx + 0x18 ]
mov ecx [ ebx + 0x41 ]
jecxz r-xdata
mov ecx [ ebx + 0x20 ]
jecxz r-xdata
mov eax [ ebx + 0x3d ]
mov esi [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
test edi edi
jge r-xdata
push 0x0
call CreateCompatibleDC
push eax
cmp [ ebx + 0x3c ] 0x1
jne r-xdata
add esp 0xffffffe8
push esp
push 0x18
push ecx
call GetObjectA
xchg ecx eax
jecxz r-xdata
neg edi
jmp r-xdata
movzx eax [ ebx + 0x49 ]
push 0x0
call GetDC
push eax
push [ ebx + 0x18 ]
push [ ebx + 0x1c ]
push eax
call CreateCompatibleBitmap
xchg ebp eax
push 0x0
call ReleaseDC
pop edx
push edx
push ebp
push edx
call SelectObject
push eax
push [ ebx + 0x18 ]
push [ ebx + 0x1c ]
push 0x0
push 0x0
mov eax [ ebx + 0x2c ]
call sub_40469c
push eax
call CreateSolidBrush
mov edx esp
push eax
push eax
push edx
push [ esp + 0x20 ]
call FillRect
call DeleteObject
add esp 0x10
mov ecx [ ebx + 0x41 ]
jecxz r-xdata
add esp 0x18
mov esi [ esp + 0x4 ]
mov edi [ esp + 0x8 ]
xchg ecx eax
mov cl [ ecx + rw-data ]
movzx eax [ rw-data ]
jecxz r-xdata
xor ebp ebp
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x18 ]
call sub_405f70
push eax
cmp [ ebx + 0x49 ] 0x5
jne r-xdata
mov edx [ esp + 0x4 ]
push edx
mov eax ebx
xor ecx ecx
push ecx
call sub_406094
call SelectObject
push [ esp + 0x4 ]
call SelectObject
push 0x0
push [ ebx + 0x3d ]
push [ ebx + 0x41 ]
push [ ebx + 0x18 ]
push 0x0
push ebp
push [ esp + 0x18 ]
call SetDIBits
jmp r-xdata
pop eax
push eax
call sub_406268
mov edx [ ebx + 0x18 ]
mul edx
push eax
call sub_402448
push eax
push 0x0
push [ esp + 0xc ]
push eax
mov eax [ ebx + 0x18 ]
cmp eax edi
jle r-xdata
call sub_40600c
mov ecx [ ebx + 0x4a ]
jecxz r-xdata
mov eax ebx
call sub_406024
mov [ ebx + 0x20 ] ebp
jmp r-xdata
push eax
push 0x0
mov eax ebx
call sub_406154
push eax
push [ esp + 0x24 ]
call GetDIBits
mov edx [ ebx + 0x18 ]
cmp edx edi
jle r-xdata
mov eax edi
call DeleteDC
popad
pop edx
push edx
push edi
xchg esi ecx
xchg ebx eax
call esi
cmp eax edx
je r-xdata
mov edx edi
mov eax ebx
call sub_406024
pop [ ebx + 0x41 ]
pop [ ebx + 0x45 ]
pop [ ebx + 0x3d ]
mov [ ebx + 0x20 ] ebp
test esi esi
mov [ ebx + 0x72 ] 0x0
jge r-xdata
pop eax
call sub_402468
xor eax eax
push eax
mov edx esp
mov ecx [ esp + 0x8 ]
push eax
push eax
push edx
push 0x0
push ecx
push [ esp + 0x20 ]
call CreateDIBSection
xor esi 0xffffffff
xchg ebp eax
push ebp
push [ esp + 0x10 ]
call SelectObject
push eax
mov edx [ esp + 0x10 ]
xor ecx ecx
push ecx
mov eax ebx
call sub_406094
push [ esp + 0x10 ]
call SelectObject
inc [ ebx + 0x72 ]
sub_40648c
push ebx
mov ebx eax
cmp [ ebx + 0x3c ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
jne r-xdata
mov eax [ ebx + 0x3d ]
movzx eax [ eax + 0xe ]
call sub_405f98
cmp al 0x4
jne r-xdata
pop ebx
retn
mov edx [ ebx + 0x3d ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov al 0x5
sub_406520
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x1c ]
je r-xdata
add esp 0x2c
pop esi
pop ebx
retn
mov eax ebx
call sub_4064e4
mov eax esi
mov [ ebx + 0x1c ] eax
test esi esi
je r-xdata
push esp
push eax
call GetIconInfo
lea eax [ esp + 0x14 ]
push eax
push 0x18
mov eax [ esp + 0x14 ]
push eax
call GetObjectA
mov eax [ esp + 0x18 ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
call DeleteObject
push eax
call DeleteObject
sub_406580
push ebx
mov edx rw-data
xchg ecx eax
pop ebx
retn
inc edx
xor ebx ebx
inc ebx
shl ebx cl
cmp ebx eax
jl r-xdata
movzx ecx [ edx ]
jecxz r-xdata
sub_406598
push ebp
mov ebp esp
xor eax eax
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0xe ]
cmp dl 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
xor eax eax
mov al dl
mov edx [ ebp + 0x8 ]
movzx edx [ edx - 0xd ]
shl edx 0x8
add eax edx
shl eax 0x2
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0xd ] 0x1
jne r-xdata
pop ebp
retn
sub_4065cc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0xe ]
cmp al 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
and eax 0xff
mov edx [ ebp + 0x8 ]
movzx edx [ edx - 0xd ]
shl edx 0x8
add eax edx
call sub_406580
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx - 0xd ] 0x1
jne r-xdata
imul ebx
add eax 0x1f
test eax eax
jns r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xa ]
sar eax 0x5
shl eax 0x2
imul esi
pop esi
pop ebx
pop ebp
retn
add eax 0x1f
sub_406638
push ebp
mov ebp esp
add esp 0xffffff74
push ebx
push esi
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x3a ] 0x0
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp - 0x18 ]
inc eax
sar eax 0x1
jns r-xdata
mov [ ebp - 0x36 ] ax
lea edx [ ebp - 0x3a ]
mov eax [ ebp - 0x1c ]
mov ecx 0x6
call sub_40598c
cmp eax 0x6
jne r-xdata
adc eax 0x0
mov al [ ebp - 0x1d ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x36 ]
shl eax 0x4
add eax 0x6
mov [ ebp - 0x28 ] eax
call sub_40456c
mov [ ebp - 0x40 ] eax
xor edx edx
xor eax eax
call sub_405fd8
mov [ ebp - 0x30 ] eax
xor edx edx
xor eax eax
call sub_405fd8
mov [ ebp - 0x34 ] eax
xor ecx ecx
push ebp
push sub_406b11
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x18 ]
shr eax 0x1
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
shr eax 0x1
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x48 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x40 ]
call sub_404520
mov eax [ ebp - 0x30 ]
call sub_404520
mov eax [ ebp - 0x34 ]
call sub_404520
retn
inc eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x8c ]
push eax
push 0x18
mov eax [ ebp - 0x2c ]
push eax
call GetObjectA
mov ebx [ ebp - 0x88 ]
mov esi [ ebp - 0x84 ]
test edi edi
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
push 0x18
mov eax [ ebp - 0x2c ]
push eax
call GetObjectA
mov ebx [ ebp - 0x88 ]
mov esi [ ebp - 0x84 ]
lea eax [ ebp - 0x74 ]
xor ecx ecx
mov edx 0x28
call sub_402660
mov [ ebp - 0x74 ] 0x28
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] esi
test edi edi
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402660
mov [ ebp - 0x10 ] bl
mov eax esi
mov [ ebp - 0xf ] al
test edi edi
jne r-xdata
lea eax [ ebp - 0x8c ]
push eax
push 0x18
push edi
call GetObjectA
mov [ ebp - 0x68 ] 0x1
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
call sub_40465c
lea edx [ ebp - 0xe ]
mov [ edx ] ax
cmp [ ebp - 0xa ] 0x0
jne r-xdata
mov eax ebx
add eax eax
mov [ ebp - 0x6c ] eax
push 0x2000
push esi
push ebx
push 0x0
push edi
call CopyImage
mov edx eax
mov eax [ ebp - 0x30 ]
call sub_4061e0
lea eax [ ebp - 0x74 ]
xor ecx ecx
mov edx 0x28
call sub_402660
mov [ ebp - 0x74 ] 0x28
lea eax [ ebp - 0x8c ]
push eax
push 0x18
mov eax [ ebp - 0x30 ]
call sub_406154
push eax
call GetObjectA
mov ax [ ebp - 0x7c ]
cmp ax 0x1
jne r-xdata
mov [ ebp - 0xe ] 0x2
jmp r-xdata
mov ax [ ebp - 0xa ]
mov [ ebp - 0x66 ] ax
push ebp
mov edx esi
mov eax ebx
call sub_4065cc
pop ecx
add eax 0x28
push eax
mov edx esi
mov eax ebx
call sub_406624
pop edx
add edx eax
mov [ ebp - 0x60 ] edx
lea edx [ ebp - 0x74 ]
mov eax [ ebp - 0x1c ]
mov ecx 0x28
call sub_40598c
cmp eax 0x28
je r-xdata
lea eax [ ebp - 0xe ]
movzx eax [ eax ]
call sub_406580
mov [ ebp - 0xa ] ax
mov cx [ ebp - 0x7a ]
mov edx 0x1
shl edx cl
movzx eax ax
imul edx eax
cmp edx 0x10
jae r-xdata
cmp [ ebp - 0x7a ] 0xf
jb r-xdata
xor edx edx
mov dl [ ebp - 0xe ]
xor eax eax
mov al [ ebp - 0xd ]
shl eax 0x8
add edx eax
mov eax [ ebp - 0x40 ]
call sub_4045e8
push ebp
mov edx esi
mov eax ebx
call sub_4065cc
pop ecx
mov edi eax
push ebp
call sub_406598
pop ecx
add eax 0x28
add edi eax
mov edx esi
mov eax ebx
call sub_406624
add edi eax
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ecx 0x10
call sub_40598c
cmp eax 0x10
je r-xdata
test edi edi
je r-xdata
call sub_402bec
jmp r-xdata
cmp edx 0x100
jae r-xdata
mov eax [ ebp - 0x30 ]
mov dl 0x1
call sub_406218
mov [ ebp - 0xe ] 0x2
jmp r-xdata
mov [ ebp - 0xe ] 0x0
mov [ ebp - 0xd ] 0x0
mov ax [ ebp - 0x7a ]
mov [ ebp - 0xa ] ax
jmp r-xdata
mov eax [ ebp - 0x8 ]
add [ ebp - 0x28 ] eax
add [ ebp - 0x48 ] 0x8
dec [ ebp - 0x44 ]
jne r-xdata
call sub_402bec
jmp r-xdata
push 0x0
push esi
push ebx
push 0x0
mov eax [ ebp - 0x2c ]
push eax
call CopyImage
mov edx eax
mov eax [ ebp - 0x30 ]
call sub_4061e0
mov eax [ ebp - 0x30 ]
mov dl 0x1
call sub_406218
push 0x0
push esi
push ebx
push 0x0
push edi
call CopyImage
mov edx eax
mov eax [ ebp - 0x30 ]
call sub_4061e0
movzx eax [ ebp - 0x66 ]
cmp eax 0x10
jg r-xdata
mov eax [ ebp - 0x30 ]
mov dl 0x3
call sub_406218
mov [ ebp - 0xe ] 0x0
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x30 ]
mov dl 0x2
call sub_406218
mov [ ebp - 0xe ] 0x10
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov edi [ eax ]
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x2c ] eax
test edi edi
jne r-xdata
push 0x0
push esi
push ebx
push 0x0
mov eax [ ebp - 0x2c ]
push eax
call CopyImage
mov edx eax
mov eax [ ebp - 0x34 ]
call sub_4061e0
mov eax [ ebp - 0x34 ]
mov dl 0x1
call sub_406218
mov edx esi
mov eax ebx
call sub_406624
mov ecx eax
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x41 ]
mov eax [ ebp - 0x1c ]
call sub_40598c
mov edi eax
mov edx esi
mov eax ebx
call sub_406624
cmp edi eax
je r-xdata
lea eax [ ebp - 0xe ]
movzx eax [ eax ]
mov ecx eax
shl ecx 0x2
mov eax [ ebp - 0x30 ]
mov edx [ eax + 0x3d ]
add edx 0x28
mov eax [ ebp - 0x1c ]
call sub_40598c
lea edx [ ebp - 0xe ]
movzx edx [ edx ]
shl edx 0x2
cmp eax edx
je r-xdata
sub eax 0x18
je r-xdata
je r-xdata
inc [ ebp - 0x24 ]
add [ ebp - 0x4c ] 0x8
dec [ ebp - 0x44 ]
jne r-xdata
call sub_402bec
jmp r-xdata
push ebp
mov edx esi
mov eax ebx
call sub_4065cc
pop ecx
mov ecx eax
mov eax [ ebp - 0x30 ]
mov edx [ eax + 0x41 ]
mov eax [ ebp - 0x1c ]
call sub_40598c
mov edi eax
push ebp
mov edx esi
mov eax ebx
call sub_4065cc
pop ecx
cmp edi eax
je r-xdata
call sub_402bec
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov dl 0x6
call sub_406218
jmp r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x30 ]
mov dl 0x5
call sub_406218
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4c ]
mov edi [ eax ]
mov eax [ ebp - 0x4c ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x2c ] eax
test edi edi
jne r-xdata
call sub_402bec
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
mov dl 0x7
call sub_406218
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov dl 0x1
call sub_406218
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x30 ]
mov dl 0x2
call sub_406218
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x30 ]
mov dl 0x3
call sub_406218
jmp r-xdata
jmp r-xdata
sub_406b48
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_406c97
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0x8 ]
test esi esi
jl r-xdata
mov eax [ ebp - 0xc ]
call sub_405968
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
inc eax
add eax eax
push eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_403b24
add esp 0x4
mov esi [ ebp - 0x8 ]
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
call sub_403970
mov edx eax
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
call sub_406638
test al al
jne r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov ebx [ ebp - 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c9e
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_403b30
retn
mov edx [ ebp - 0x10 ]
inc edx
mov ecx [ ebp - 0x8 ]
sub ecx edx
jl r-xdata
mov eax [ ebp - 0x18 ]
call sub_403970
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov edx [ ebp - 0x14 ]
call sub_405990
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
push eax
call GetIconInfo
mov eax [ ebp - 0x10 ]
add eax eax
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
mov [ edx + eax * 4 ] ecx
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
mov [ edx + eax * 4 + 0x4 ] ecx
inc [ ebp - 0x10 ]
add ebx 0x4
dec esi
jne r-xdata
inc [ ebp - 0x10 ]
add eax 0x4
dec esi
jne r-xdata
inc ecx
mov ebx [ ebp - 0x4 ]
lea edx [ ebx + edx * 4 ]
inc esi
mov [ ebp - 0x10 ] 0x0
mov edx [ eax ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
add edx 0x4
dec ecx
jne r-xdata
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
push eax
call DeleteObject
mov ebx [ eax ]
mov ebx [ ebx + 0x18 ]
mov edi [ edx ]
cmp ebx [ edi + 0x18 ]
je r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov eax [ eax + edx * 4 ]
test eax eax
je r-xdata
sub_406ca8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4064e4
push edi
mov eax esi
call sub_40340c
push eax
mov eax [ rw-data ]
push eax
call ExtractIconA
cmp eax 0x1
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
xchg edx eax
call sub_406520
sub_406ce0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406d2f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d36
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403094
mov eax rw-data
call sub_403094
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_406d40
push ebp
mov ebp esp
add esp 0xffffff64
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x9c ] edx
mov edi eax
xor eax eax
push ebp
push sub_406dfc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x97 ]
push eax
push 0x97
call GetLogicalDriveStringsA
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
cmp [ ebp + eax - 0x97 ] 0x0
jne r-xdata
mov esi ebx
and esi 0xff
lea eax [ ebp + esi - 0x97 ]
push eax
call GetDriveTypeA
sub eax 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406e03
lea eax [ ebp - 0x9c ]
call sub_403094
retn
add bl 0x4
mov al [ ebp + esi - 0x97 ]
call sub_40258c
cmp al 0x41
je r-xdata
mov al [ ebp + esi - 0x97 ]
call sub_40258c
cmp al 0x42
je r-xdata
lea eax [ ebp - 0x9c ]
mov dl [ ebp + esi - 0x97 ]
call sub_4031b4
mov edx [ ebp - 0x9c ]
mov eax edi
call sub_403214
sub_406e0c
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_406e88
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4057d8
fstp [ ebp - 0x8 ]
fwait
lea eax [ ebp - 0xc ]
call sub_405008
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
mov edx rw-data
mov ecx 0xb
call sub_4031f4
mov edx [ ebp - 0x10 ]
pop eax
call sub_403214
mov eax [ ebp - 0xc ]
call sub_40340c
lea edx [ ebp - 0x8 ]
mov ecx 0x8
call sub_404bf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406e8f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4030b8
retn
sub_406e94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_406f22
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea eax [ ebp - 0xc ]
call sub_405008
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
mov edx rw-data
mov ecx 0xb
call sub_4031f4
mov edx [ ebp - 0x10 ]
pop eax
call sub_403214
mov eax [ ebp - 0xc ]
call sub_40340c
lea edx [ ebp - 0x8 ]
mov ecx 0x8
call sub_404c78
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f29
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4030b8
retn
call sub_4057d8
fsub [ ebp - 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
seta bl
sub_406f34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x1 ] al
xor eax eax
push ebp
push sub_406fc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403094
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi 0x2
mov esi 0x1
jmp r-xdata
mov eax [ ebx ]
call sub_40320c
mov edx eax
dec edx
mov eax ebx
call sub_403534
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406fce
lea eax [ ebp - 0x8 ]
call sub_403094
retn
inc esi
mov edi esi
call sub_404ae8
mov esi eax
sub esi edi
jl r-xdata
push [ ebx ]
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_4049d0
push [ ebp - 0x8 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4032cc
inc edi
dec esi
jne r-xdata
sub_406fe4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4033fc
mov eax [ ebp - 0x8 ]
call sub_4033fc
xor eax eax
push ebp
push sub_407064
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404f18
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_404700
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_403258
mov edx [ ebp - 0x14 ]
pop eax
call sub_403358
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40706b
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_4030b8
retn
sub_407080
push ebx
push esi
mov esi eax
mov eax [ rw-data ]
mov [ eax ] ecx
mov ebx edx
test ebx ebx
jle r-xdata
pop esi
pop ebx
retn
mov eax 0xff
call sub_402680
xor [ esi ] al
inc esi
dec ebx
jne r-xdata
sub_4070a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4070c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4070d0
retn
sub_4070dc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_407126
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4049d0
mov eax [ ebp - 0x4 ]
call sub_40340c
mov edx rw-data
mov ecx 0xa200
call sub_404c78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40712d
lea eax [ ebp - 0x4 ]
call sub_403094
retn
sub_407130
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4033fc
xor eax eax
push ebp
push sub_4071bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x80000303
mov eax [ ebp - 0x4 ]
call sub_404b68
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor ecx ecx
mov edx 0x3e8
mov eax ebx
call sub_404bb4
lea edx [ ebp - 0x104 ]
mov ecx 0x100
mov eax ebx
call sub_404bc4
mov eax ebx
call sub_404b90
lea edx [ ebp - 0x104 ]
mov eax rw-data
mov ecx 0x100
call sub_4047d0
mov ebx eax
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4071c6
lea eax [ ebp - 0x4 ]
call sub_403094
retn
sub_4071d0
push ebp
mov ebp esp
push eax
mov eax 0xa
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffffde8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0xa21c ] edx
mov [ ebp - 0xa218 ] edx
mov [ ebp - 0xa214 ] edx
mov [ ebp - 0xa210 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4033fc
xor eax eax
push ebp
push sub_40748c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
lea eax [ ebp - 0xa210 ]
mov edx rw-data
mov ecx 0x3
call sub_4031f4
mov edx [ ebp - 0xa210 ]
mov eax [ ebp - 0x4 ]
call sub_406fe4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407493
lea eax [ ebp - 0xa21c ]
mov edx 0x4
call sub_4030b8
lea eax [ ebp - 0x4 ]
call sub_403094
retn
lea edx [ ebp - 0xa214 ]
mov eax [ ebp - 0x4 ]
call sub_404f34
mov edx [ ebp - 0xa214 ]
lea eax [ ebp - 0x4 ]
call sub_40312c
lea eax [ ebp - 0xa218 ]
call sub_404f90
mov eax [ ebp - 0xa218 ]
call sub_40340c
push eax
mov eax [ ebp - 0x4 ]
call sub_40340c
mov ebx eax
mov eax ebx
pop edx
call sub_404b38
test al al
jne r-xdata
lea eax [ ebp - 0xa21c ]
call sub_405008
mov eax [ ebp - 0xa21c ]
call sub_40340c
push eax
mov eax ebx
pop edx
call sub_404b38
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4034ec
cmp eax 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_404f6c
cmp eax 0xa200
jbe r-xdata
cmp eax 0x989680
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_407130
test al al
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_40340c
mov ebx eax
push ebx
call GetFileAttributesA
mov edi eax
test edi 0x1
jbe r-xdata
call sub_405bdc
mov ebx eax
call sub_4064cc
mov esi eax
mov eax esi
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_406ca8
mov eax esi
mov edx ebx
call sub_406510
mov edx 0x16
mov eax ebx
call sub_405974
mov eax rw-data
mov edx 0x10a8
call sub_404198
mov edx rw-data
mov ecx 0x10a8
mov eax ebx
call sub_405988
mov eax ebx
call sub_404520
mov eax esi
call sub_404520
mov edx 0xc0000303
mov eax [ ebp - 0x4 ]
call sub_404b68
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
push 0x0
push ebx
call SetFileAttributesA
mov eax ebx
call sub_404b90
test edi 0x1
jbe r-xdata
lea edx [ ebp - 0xa20c ]
mov ecx 0x2
mov eax ebx
call sub_404bc4
cmp [ ebp - 0xa20c ] 0x4d
jne r-xdata
push edi
mov eax [ ebp - 0x4 ]
call sub_40340c
push eax
call SetFileAttributesA
cmp [ ebp - 0xa20b ] 0x5a
jne r-xdata
xor ecx ecx
xor edx edx
mov eax ebx
call sub_404bb4
lea edx [ ebp - 0xa20c ]
mov ecx 0xa200
mov eax ebx
call sub_404bc4
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x9d3a ]
mov ecx 0x4
call sub_40254c
lea eax [ ebp - 0xa20c ]
mov ecx [ ebp - 0xc ]
mov edx 0x3e8
call sub_407080
xor ecx ecx
xor edx edx
mov eax ebx
call sub_404bb4
mov edx rw-data
mov ecx 0xa200
mov eax ebx
call sub_404be0
mov cl 0x2
xor edx edx
mov eax ebx
call sub_404bb4
lea edx [ ebp - 0xa20c ]
mov ecx 0xa200
mov eax ebx
call sub_404be0
sub_4074b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4033fc
xor eax eax
push ebp
push sub_40758b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx rw-data
mov ecx 0x3
call sub_4031f4
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4052ac
mov ebx eax
mov eax ebx
call sub_40532c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_404520
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407592
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_4030b8
retn
inc edi
xor esi esi
lea ecx [ ebp - 0x18 ]
mov edx esi
mov eax ebx
call sub_405338
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
mov edx [ ebx + 0x1c ]
call sub_403258
mov eax [ ebp - 0x14 ]
call sub_4071d0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_405338
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x1c ]
call sub_403258
mov eax [ ebp - 0xc ]
call sub_4074b4
pop ecx
jmp r-xdata
mov edx esi
mov eax ebx
call sub_40534c
test al al
je r-xdata
inc esi
dec edi
jne r-xdata
sub_40759c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40765c
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_406e94
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407663
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4030b8
retn
mov eax rw-data
mov ecx 0x14
mov edx 0x14
call sub_407080
push rw-data
push 0x0
push 0x0
call sub_404018
mov edi eax
call GetLastError
cmp eax 0xb7
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_406d40
mov eax [ ebp - 0x4 ]
call sub_40320c
mov ebx eax
test ebx ebx
jle r-xdata
call sub_406e0c
push edi
call ReleaseMutex
mov esi 0x1
push ebp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + esi - 0x1 ]
call sub_4031b4
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403214
mov eax [ ebp - 0x8 ]
call sub_4074b4
pop ecx
inc esi
dec ebx
jne r-xdata
sub_407678
push ebp
mov ebp esp
mov ecx 0x144b
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xor eax eax
push ebp
push j_sub_402b30#9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xa210 ]
call sub_405008
lea eax [ ebp - 0xa210 ]
push eax
lea eax [ ebp - 0xa214 ]
mov edx rw-data
mov ecx 0x9
call sub_4031f4
mov edx [ ebp - 0xa214 ]
pop eax
call sub_403214
mov eax [ ebp - 0xa210 ]
call sub_404de0
lea eax [ ebp - 0xa21c ]
call sub_405008
push [ ebp - 0xa21c ]
lea eax [ ebp - 0xa220 ]
mov edx rw-data
mov ecx 0x9
call sub_4031f4
push [ ebp - 0xa220 ]
lea eax [ ebp - 0xa224 ]
mov edx rw-data
mov ecx 0x3
call sub_4031f4
push [ ebp - 0xa224 ]
lea eax [ ebp - 0xa218 ]
mov edx 0x3
call sub_4032cc
mov eax [ ebp - 0xa218 ]
call sub_405200
lea edx [ ebp - 0xa228 ]
xor eax eax
call sub_4049d0
mov eax [ ebp - 0xa228 ]
call sub_405b60
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40789f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xa230 ]
call sub_405008
push [ ebp - 0xa230 ]
lea eax [ ebp - 0xa234 ]
mov edx rw-data
mov ecx 0x9
call sub_4031f4
push [ ebp - 0xa234 ]
lea edx [ ebp - 0xa23c ]
xor eax eax
call sub_4049d0
mov eax [ ebp - 0xa23c ]
lea edx [ ebp - 0xa238 ]
call sub_404ed0
push [ ebp - 0xa238 ]
lea eax [ ebp - 0xa22c ]
mov edx 0x3
call sub_4032cc
mov eax [ ebp - 0xa22c ]
mov edx 0x40000103
call sub_405b24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_407882
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40597c
mov edx eax
sub edx 0xa200
mov eax [ ebp - 0x4 ]
call sub_405974
lea edx [ ebp - 0xa20c ]
mov eax [ ebp - 0x4 ]
mov ecx 0xa200
call sub_405988
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x9d3a ]
mov ecx 0x4
call sub_40254c
lea eax [ ebp - 0xa20c ]
mov ecx [ ebp - 0xc ]
mov edx 0x3e8
call sub_407080
lea edx [ ebp - 0xa20c ]
mov eax [ ebp - 0x8 ]
mov ecx 0xa200
call sub_40598c
mov eax [ ebp - 0x4 ]
mov edx 0xa200
call sub_405974
mov eax [ ebp - 0x4 ]
call sub_40597c
mov ecx eax
sub ecx 0x14400
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_405be8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407889
mov eax [ ebp - 0x8 ]
call sub_404520
retn
sub_4078a6
lea edx [ ebp - 0xa244 ]
xor eax eax
call sub_4049d0
mov eax [ ebp - 0xa244 ]
lea edx [ ebp - 0xa240 ]
call sub_404eec
mov eax [ ebp - 0xa240 ]
call sub_40340c
push eax
call SetCurrentDirectoryA
push 0x1
push 0x0
lea edx [ ebp - 0xa248 ]
mov al 0x1
call sub_406f34
mov eax [ ebp - 0xa248 ]
call sub_40340c
push eax
lea eax [ ebp - 0xa250 ]
call sub_405008
push [ ebp - 0xa250 ]
lea eax [ ebp - 0xa254 ]
mov edx rw-data
mov ecx 0x9
call sub_4031f4
push [ ebp - 0xa254 ]
lea edx [ ebp - 0xa25c ]
xor eax eax
call sub_4049d0
mov eax [ ebp - 0xa25c ]
lea edx [ ebp - 0xa258 ]
call sub_404ed0
push [ ebp - 0xa258 ]
lea eax [ ebp - 0xa24c ]
mov edx 0x3
call sub_4032cc
mov eax [ ebp - 0xa24c ]
call sub_40340c
push eax
push r-xdata
mov eax [ rw-data ]
push eax
call ShellExecuteA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407993
lea eax [ ebp - 0xa25c ]
mov edx 0x14
call sub_4030b8
retn
sub_4079a0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push j_sub_402b30#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax rw-data
mov ecx 0xb
mov edx 0xb
call sub_407080
lea eax [ ebp - 0x8 ]
mov edx rw-data
mov ecx 0xb
call sub_4031f4
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
call sub_404f90
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
pop ecx
call sub_403258
mov eax [ ebp - 0x4 ]
call sub_404b9c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40340c
mov edx rw-data
mov ecx 0xa200
call sub_404bf8
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40340c
push eax
call DeleteFileA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407acb
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_4030b8
retn
mov eax rw-data
mov ecx 0x1a
mov edx 0x1a
call sub_407080
lea eax [ ebp - 0x10 ]
mov edx rw-data
mov ecx 0x1a
call sub_4031f4
mov edx [ ebp - 0x10 ]
mov eax 0x80000000
call sub_40575c
mov ebx eax
mov eax rw-data
mov ecx 0x8
mov edx 0x8
call sub_407080
lea eax [ ebp - 0x18 ]
mov edx rw-data
mov ecx 0x8
call sub_4031f4
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403258
mov ecx [ ebp - 0x14 ]
xor edx edx
mov eax ebx
call sub_40578c
mov eax ebx
call sub_4057cc
sub_407ad0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4033fc
xor eax eax
push ebp
push sub_407bc7
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_405c80
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push j_sub_402b30#7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_404f90
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
mov edx rw-data
mov ecx 0xb
call sub_4031f4
mov edx [ ebp - 0x10 ]
pop eax
call sub_403214
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_405e04
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405d84
inc eax
jne r-xdata
lea eax [ ebp - 0x14 ]
call sub_404f90
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx rw-data
mov ecx 0xb
call sub_4031f4
mov edx [ ebp - 0x18 ]
pop eax
call sub_403214
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_405e50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407ba4
mov eax [ ebp - 0x8 ]
call sub_404520
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405cac
sub_407bd4
push ebp
mov ebp esp
push eax
mov eax 0xa
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffffdf0
push ebx
xor edx edx
mov [ ebp - 0xa214 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4033fc
xor eax eax
push ebp
push j_sub_402b30#5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xa214 ]
mov edx rw-data
mov ecx 0x3
call sub_4031f4
mov edx [ ebp - 0xa214 ]
mov eax [ ebp - 0x4 ]
call sub_406fe4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407d94
lea eax [ ebp - 0xa214 ]
call sub_403094
lea eax [ ebp - 0x4 ]
call sub_403094
retn
mov eax [ ebp - 0x4 ]
mov al [ eax ]
call sub_40258c
add al 0xbf
sub al 0x2
jb r-xdata
sub al 0x19
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_407ad0
mov eax [ ebp - 0x4 ]
call sub_407130
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40340c
mov ebx eax
push ebx
call GetFileAttributesA
mov [ ebp - 0x8 ] eax
test [ ebp - 0x8 ] 0x1
jbe r-xdata
mov eax [ ebp - 0x4 ]
call sub_405b84
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push j_sub_402b30#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_40597c
mov edx eax
sub edx 0xa200
mov eax [ ebp - 0xc ]
call sub_405974
lea edx [ ebp - 0xa210 ]
mov eax [ ebp - 0xc ]
mov ecx 0xa200
call sub_405988
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x9d3e ]
mov ecx 0x4
call sub_40254c
lea eax [ ebp - 0xa210 ]
mov ecx [ ebp - 0x10 ]
mov edx 0x3e8
call sub_407080
mov eax [ ebp - 0xc ]
xor edx edx
call sub_405974
lea edx [ ebp - 0xa210 ]
mov eax [ ebp - 0xc ]
mov ecx 0xa200
call sub_40598c
mov eax [ ebp - 0xc ]
call sub_40597c
mov edx eax
sub edx 0xa200
mov eax [ ebp - 0xc ]
call sub_405980
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404520
retn
push 0x0
push ebx
call SetFileAttributesA
sub_407d9c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4033fc
xor eax eax
push ebp
push j_sub_402b30#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_407bd4
mov eax [ ebp - 0x4 ]
call sub_4071d0
jmp r-xdata
push 0x1
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x18 ]
xor eax eax
call sub_406f34
push [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_4032cc
mov eax [ ebp - 0x14 ]
call sub_40340c
push eax
call WinExec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407e7c
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_4030b8
retn
mov ebx 0x1
call sub_404ae8
mov esi eax
test esi esi
jle r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4049d0
mov eax [ ebp - 0x10 ]
call sub_407bd4
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4049d0
mov eax [ ebp - 0xc ]
call sub_4071d0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4049d0
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
jne r-xdata
inc ebx
dec esi
jne r-xdata
sub_407e90
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push j_sub_402b30#3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_404f90
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx rw-data
mov ecx 0xb
call sub_4031f4
mov edx [ ebp - 0xc ]
pop eax
call sub_403214
mov eax [ ebp - 0x8 ]
call sub_404b9c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408027
lea eax [ ebp - 0x28 ]
mov edx 0x9
call sub_4030b8
retn
call sub_405c80
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_407ffe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_404f90
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx rw-data
mov ecx 0xb
call sub_4031f4
mov edx [ ebp - 0x14 ]
pop eax
call sub_403214
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_405e04
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x1c ]
jl r-xdata
lea ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_405d18
mov eax [ ebp - 0x18 ]
call sub_404b9c
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
inc ebx
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_405cec
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x1c ]
jl r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_405d18
mov eax [ ebp - 0x1c ]
call sub_4071d0
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
call sub_404f90
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
mov edx rw-data
mov ecx 0xb
call sub_4031f4
mov edx [ ebp - 0x28 ]
pop eax
call sub_403214
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_405e50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_404520
retn
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_405cec
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_405d18
mov eax [ ebp - 0x20 ]
call sub_407130
test al al
je r-xdata
inc ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_405cec
jmp r-xdata
sub_40802c
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_402b30#2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408052
retn
_start
push ebp
mov ebp esp
add esp 0xffffffe0
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] eax
mov eax r-xdata
call sub_403f14
xor eax eax
push ebp
push j_sub_402b30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax rw-data
mov ecx 0xb
mov edx 0xb
call sub_407080
mov eax rw-data
mov ecx 0x9
mov edx 0x9
call sub_407080
mov eax rw-data
mov ecx 0x3
mov edx 0x3
call sub_407080
mov eax rw-data
mov ecx 0x3
mov edx 0x3
call sub_407080
mov eax [ rw-data ]
mov ecx 0xb
mov edx 0xb
call sub_407080
call sub_4070dc
lea edx [ ebp - 0x14 ]
xor eax eax
call sub_4049d0
mov eax [ ebp - 0x14 ]
call sub_404f6c
cmp eax 0xa200
jle r-xdata
call sub_407e90
mov eax rw-data
mov ecx 0x3
mov edx 0x3
call sub_407080
call sub_404ae8
test eax eax
je r-xdata
call sub_407678
call sub_4079a0
call sub_40759c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408227
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4030b8
retn
lea edx [ ebp - 0x18 ]
xor eax eax
call sub_4049d0
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx rw-data
mov ecx 0x3
call sub_4031f4
mov edx [ ebp - 0x1c ]
pop eax
call sub_406fe4
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x1
call sub_4049d0
mov eax [ ebp - 0x20 ]
call sub_407d9c
RaiseException
jmp [ __import_lookup_table_0(kernel32:RaiseException) ]
RtlUnwind
jmp [ __import_lookup_table_0(kernel32:RtlUnwind) ]
ExitProcess
jmp [ ExitProcess@IAT ]
MessageBoxA
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401038
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
sub_401040
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_401060
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
sub_401068
jmp [ __import_lookup_table_2(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
sub_401098
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_4010bc
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
DeleteCriticalSection
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_40183e
jmp sub_402b30
sub_401845
mov al [ rw-data ]
pop ebp
retn
sub_401922
jmp sub_402b30
sub_4019f0
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402004
retn
sub_401ff0
jmp sub_402b30
sub_402196
jmp sub_402b30
sub_402435
jmp sub_402b30
sub_4024d8
mov [ rw-data ] edx
call sub_40307c
sub_402680
push ebx
xor ebx ebx
imul edx [ ebx + rw-data ] 0x8088405
inc edx
mov [ ebx + rw-data ] edx
mul edx
mov eax edx
pop ebx
retn
sub_4028a9
jmp sub_402b30
sub_4028fc
fninit
fwait
fldcw [ rw-data ]
retn
sub_402908
test eax eax
je r-xdata
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_402914
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4029c8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4029e4
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_402c01
retn
sub_402d44
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
j_sub_402a04#2
jmp sub_402a04
j_sub_402a04
jmp sub_402a04
sub_402e4c
mov [ rw-data ] RaiseException
mov [ rw-data ] RtlUnwind
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_402d44
mov [ rw-data ] 0x0
call sub_402dec
retn
sub_402f15
retn
sub_403077
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40307c
mov [ rw-data ] eax
call sub_402fa4
sub_4031b4
push edx
mov edx esp
mov ecx 0x1
call sub_403184
pop edx
retn
sub_4031f0
retn
sub_40320b
retn
sub_4032cb
retn
j_sub_403418
jmp sub_403418
sub_403461
retn
sub_4034a3
retn
sub_403634
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402530
call [ rw-data ]
retn
sub_403738
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402530
call [ rw-data ]
retn
sub_40395e
retn
sub_403960
mov al 0x11
jmp sub_402530
sub_403968
test eax eax
je r-xdata
retn
mov eax [ eax - 0x4 ]
sub_403978
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40386c
pop ebp
retn 0x4
j_sub_40364c
jmp sub_40364c
sub_40398d
retn
sub_403990
call sub_403b30
retn
sub_403b24
push esp
add [ esp ] 0x4
call sub_403998
retn
j_sub_402a04#3
jmp sub_402a04
sub_403bf0
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_403c64
jmp sub_402b30
sub_403c6b
pop ecx
pop ebp
retn
sub_403c70
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
push eax
push edx
mov eax [ edx ]
call [ eax + 0x8 ]
pop eax
sub_403d1a
jmp sub_402b30
sub_403d21
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_403d72
jmp sub_402b30
sub_403d79
pop ebp
retn
GetModuleHandleA
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_403e70
push eax
push 0x40
call LocalAlloc
retn
sub_403e7c
mov eax 0x8
retn
sub_403f08
mov eax rw-data
call sub_403bf0
retn
sub_403f7d
jmp sub_402b30
sub_403f84
pop ebp
retn
sub_403f88
sub [ rw-data ] 0x1
retn
sub_403fb5
jmp sub_402b30
sub_403fbc
pop ebp
retn
sub_403fc0
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegSetValueExA
jmp [ __import_lookup_table_5(advapi32:RegSetValueExA) ]
CloseHandle
jmp [ CloseHandle@IAT ]
CreateDirectoryA
jmp [ __import_lookup_table_6(kernel32:CreateDirectoryA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateMutexA
jmp [ __import_lookup_table_6(kernel32:CreateMutexA) ]
DeleteFileA
jmp [ __import_lookup_table_6(kernel32:DeleteFileA) ]
FindClose
jmp [ __import_lookup_table_6(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindNextFileA
jmp [ __import_lookup_table_6(kernel32:FindNextFileA) ]
FreeLibrary
jmp [ __import_lookup_table_6(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetDriveTypeA
jmp [ GetDriveTypeA@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLogicalDriveStringsA
jmp [ GetLogicalDriveStringsA@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetShortPathNameA
jmp [ GetShortPathNameA@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetWindowsDirectoryA
jmp [ GetWindowsDirectoryA@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ReleaseMutex
jmp [ ReleaseMutex@IAT ]
SetCurrentDirectoryA
jmp [ __import_lookup_table_6(kernel32:SetCurrentDirectoryA) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
WinExec
jmp [ __import_lookup_table_6(kernel32:WinExec) ]
WriteFile
jmp [ __import_lookup_table_6(kernel32:WriteFile) ]
BitBlt
jmp [ __import_lookup_table_7(gdi32:BitBlt) ]
CreateCompatibleBitmap
jmp [ __import_lookup_table_7(gdi32:CreateCompatibleBitmap) ]
CreateCompatibleDC
jmp [ __import_lookup_table_7(gdi32:CreateCompatibleDC) ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateSolidBrush
jmp [ CreateSolidBrush@IAT ]
DeleteDC
jmp [ DeleteDC@IAT ]
GetDIBits
jmp [ GetDIBits@IAT ]
SetDIBits
jmp [ SetDIBits@IAT ]
StretchDIBits
jmp [ StretchDIBits@IAT ]
CharLowerBuffA
jmp [ __import_lookup_table_8(user32:CharLowerBuffA) ]
DestroyIcon
jmp [ __import_lookup_table_8(user32:DestroyIcon) ]
FillRect
jmp [ __import_lookup_table_8(user32:FillRect) ]
GetDC
jmp [ GetDC@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
sub_404198
xor ecx ecx
call sub_402660
retn
sub_4041c5
jmp sub_402b30
sub_4041cc
pop ebp
retn
sub_4041d0
sub [ rw-data ] 0x1
retn
sub_4041fd
jmp sub_402b30
sub_404204
pop ebp
retn
sub_404208
sub [ rw-data ] 0x1
retn
sub_404235
jmp sub_402b30
sub_40423c
pop ebp
retn
sub_404240
sub [ rw-data ] 0x1
retn
ExtractIconA
jmp [ ExtractIconA@IAT ]
ShellExecuteA
jmp [ __import_lookup_table_9(shell32:ShellExecuteA) ]
sub_40427d
jmp sub_402b30
sub_404284
pop ebp
retn
sub_404288
sub [ rw-data ] 0x1
retn
sub_4042b5
jmp sub_402b30
sub_4042bc
pop ebp
retn
sub_4042c0
sub [ rw-data ] 0x1
retn
sub_4042ed
jmp sub_402b30
sub_4042f4
pop ebp
retn
sub_4042f8
sub [ rw-data ] 0x1
retn
sub_404325
jmp sub_402b30
sub_40432c
pop ebp
retn
sub_404330
sub [ rw-data ] 0x1
retn
sub_40435d
jmp sub_402b30
sub_404364
pop ebp
retn
sub_404368
sub [ rw-data ] 0x1
retn
sub_404395
jmp sub_402b30
sub_40439c
pop ebp
retn
sub_4043a0
sub [ rw-data ] 0x1
retn
sub_4043cd
jmp sub_402b30
sub_4043d4
pop ebp
retn
sub_4043d8
sub [ rw-data ] 0x1
retn
sub_404405
jmp sub_402b30
sub_40440c
pop ebp
retn
sub_404410
sub [ rw-data ] 0x1
retn
sub_40441c
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_40449c
test edx edx
jne r-xdata
retn
mov edx rw-data
sub_4044e0
pop ecx
pop eax
pop edx
push ecx
push edx
push eax
push edx
call SelectObject
call DeleteDC
retn
sub_4044f4
retn
sub_4044f8
call sub_4027a0
je r-xdata
retn
push eax
mov edx [ eax ]
call [ edx ]
pop eax
sub_40452c
push eax
call sub_40453c
pop eax
xor edx edx
call sub_402468
retn
sub_40456c
mov edx [ r-xdata ]
xor eax eax
call sub_4044f8
retn
sub_40457c
push eax
call sub_4045d0
pop eax
call sub_40452c
retn
sub_4045b4
cmp edx [ eax + 0x1c ]
jge r-xdata
cmp edx [ eax + 0x20 ]
je r-xdata
mov edx [ eax + 0x1c ]
retn
mov [ eax + 0x20 ] edx
shl edx 0x2
lea eax [ eax + 0x18 ]
call sub_402488
sub_4045d0
push [ eax + 0x18 ]
xor edx edx
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
pop eax
call sub_402468
retn
sub_404618
mov ecx 0x1
call sub_404624
retn
sub_40465c
xor ecx ecx
test edx edx
jl r-xdata
mov eax ecx
retn
cmp edx [ eax + 0x1c ]
jge r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax + edx * 4 ]
sub_40469c
test eax eax
jge r-xdata
retn
and eax 0xff
push eax
call GetSysColor
sub_404750
call sub_404490
push eax
call sub_4046c0
pop edx
test eax eax
je r-xdata
dec eax
retn
sub eax edx
inc eax
retn
sub_4047f0
test eax eax
je r-xdata
retn
push eax
call sub_402448
pop edx
push eax
mov cl 0x0
call sub_402660
pop eax
sub_40483c
test eax eax
je r-xdata
retn
xchg ecx eax
xor eax eax
mov al 0x2a
sub_404ada
jmp sub_402b30
sub_404ae1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404b28
jmp sub_402b30
sub_404b2f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_404b90
push eax
call CloseHandle
test eax eax
setne al
retn
sub_404c66
jmp sub_402b30
sub_404c6d
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_404ce6
jmp sub_402b30
sub_404ced
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_404cf8
push eax
call GetFileAttributesA
inc eax
je r-xdata
retn
dec eax
and al 0x10
setne al
sub_404dab
jmp sub_402b30
sub_404db2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_404db8
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov dl 0x5c
mov eax ebx
call sub_404d48
pop esi
pop ebx
retn
sub_404dcc
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov dl 0x5c
mov eax ebx
call sub_404d08
pop esi
pop ebx
retn
sub_404e9f
jmp sub_402b30
sub_404ea6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_404eb0
push ebx
mov ebx eax
push 0x0
mov eax ebx
call sub_40340c
push eax
call CreateDirectoryA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_404ed0
push edx
push eax
mov edx [ rw-data ]
call sub_404950
pop edx
cmp [ eax ] 0x0
je r-xdata
pop eax
call sub_4031c4
retn
xchg edx eax
inc edx
sub_404f18
push edx
mov edx [ rw-data ]
call sub_404490
call sub_404950
xchg edx eax
pop eax
call sub_4031c4
retn
sub_404f6c
add esp 0xfffffec0
push esp
push eax
call FindFirstFileA
inc eax
je r-xdata
add esp 0x140
retn
dec eax
push eax
call FindClose
mov eax [ esp + 0x20 ]
sub_404ffa
jmp sub_402b30
sub_405001
pop ebx
mov esp ebp
pop ebp
retn
sub_405072
jmp sub_402b30
sub_405079
pop ebx
mov esp ebp
pop ebp
retn
sub_4051db
jmp sub_402b30
sub_4051e2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405291
jmp sub_402b30
sub_405298
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4052d8
xor ecx ecx
xchg [ eax + 0x18 ] ecx
jecxz r-xdata
retn
xchg ecx eax
call sub_40458c
sub_4052e8
push ebx
mov ebx eax
call sub_4052d8
lea eax [ ebx + 0x1c ]
call sub_403094
xchg ebx eax
call sub_40452c
pop ebx
retn
sub_405300
xchg edx eax
push eax
call sub_4030e8
pop eax
cmp [ eax ] 0x0
jne r-xdata
retn
lea edx [ r-xdata ]
je sub_4031c4
sub ch [ esi ]
sub al [ eax ]
sub_405320
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + edx * 4 ]
retn
sub_40532c
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
retn
mov eax [ eax + 0x1c ]
sub_405611
jmp sub_402b30
sub_405618
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4057cc
test eax eax
je r-xdata
retn
push eax
call RegCloseKey
sub_4057d8
add esp 0xffffffe8
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov edx esp
lea eax [ esp + 0x8 ]
call sub_405834
fld [ esp ]
add esp 0x18
retn
sub_405968
mov cl 0x1
xor edx edx
call sub_405990
retn
sub_405980
call [ eax + 0x24 ]
retn
sub_405984
mov eax [ eax + 0x40 ]
retn
sub_405990
call [ eax + 0x1c ]
retn
sub_405994
push eax
push [ eax + 0x50 ]
call [ eax + 0x30 ]
pop eax
call sub_404520
pop eax
call sub_40452c
retn
sub_4059d8
mov eax [ eax + 0x40 ]
call sub_404bb4
retn
sub_4059e4
push 0x0
mov eax [ eax + 0x40 ]
push eax
call GetFileSize
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_4059f8
retn
sub_4059fc
xor eax eax
retn
sub_405a00
mov eax [ eax + 0x40 ]
call sub_404bc4
retn
sub_405a0c
mov eax [ eax + 0x40 ]
call sub_404be0
retn
sub_405a18
mov eax [ eax + 0x40 ]
call sub_404b90
retn
sub_405a4c
mov eax [ eax + 0x48 ]
retn
sub_405ae0
mov ecx [ eax + 0x3c ]
jecxz r-xdata
retn
xchg ecx eax
call sub_402468
sub_405b60
push ebx
xchg ebx eax
mov eax rw-data
call sub_4059a8
mov [ eax + 0x28 ] sub_405a00
xchg ebx eax
mov edx 0x80000301
call sub_404b68
mov [ ebx + 0x40 ] eax
xchg ebx eax
pop ebx
retn
sub_405bdc
mov eax rw-data
call sub_4059a8
retn
sub_405c80
mov edx [ r-xdata ]
xor eax eax
call sub_4044f8
retn
sub_405c90
push eax
call sub_405cbc
pop eax
call sub_40452c
retn
sub_405ca0
mov dl [ rw-data ]
mov [ eax + 0x29 ] dl
retn
sub_405cac
mov ecx edx
mov edx [ eax + 0x1c ]
push edx
call sub_405dc4
pop eax
retn
sub_405d2c
retn
sub_405fb0
retn
sub_40600c
mov [ eax + 0x10 ] 0x3
add eax 0x28
xchg edx eax
mov eax rw-data
xor ecx ecx
mov cl 0x4c
call sub_40254c
retn
sub_406068
push eax
call sub_40646c
pop eax
push eax
call sub_406024
pop eax
xor edx edx
mov [ eax + 0x1c ] edx
mov [ eax + 0x18 ] edx
mov [ eax + 0x72 ] dl
retn
sub_406084
push eax
call sub_406068
pop eax
call sub_40452c
retn
sub_4060e9
xchg [ esp ] esi
push [ ebx + 0x1c ]
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
jmp esi
sub_406144
push ecx
mov ecx [ eax + 0x1c ]
jecxz r-xdata
test ecx ecx
pop ecx
sete al
retn
mov ecx [ eax + 0x18 ]
sub_406268
movzx edx [ eax + 0xe ]
mov eax [ eax + 0x4 ]
mul edx
add eax 0x1f
shr eax 0x3
and eax 0xfffffffc
retn
sub_40646c
push eax
call [ eax + 0x34 ]
pop edx
xor eax eax
xchg [ edx + 0x24 ] eax
call sub_404520
retn
sub_40647c
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
call sub_40627c
sub_4064bc
or [ eax + 0x52 ] 0xffffffff
xor edx edx
xchg [ eax + 0x4e ] edx
xchg edx eax
call sub_404520
retn
sub_4064cc
mov edx [ r-xdata ]
xor eax eax
call sub_4044f8
mov [ eax + 0x18 ] 0x20
retn
sub_4064e4
xor ecx ecx
xchg [ eax + 0x1c ] ecx
jecxz r-xdata
mov [ eax + 0x20 ] 0x0
retn
cmp [ eax + 0x20 ] 0x0
jne r-xdata
push eax
push ecx
call DestroyIcon
pop eax
sub_406500
push eax
call sub_4064e4
pop eax
call sub_40452c
retn
sub_406510
push eax
mov eax esp
mov ecx edx
xor edx edx
call sub_406b48
pop eax
retn
sub_406b11
jmp sub_402b30
sub_406c97
jmp sub_402b30
sub_406c9e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406d2f
jmp sub_402b30
sub_406d36
pop ebp
retn
sub_406d38
sub [ rw-data ] 0x1
retn
sub_406dfc
jmp sub_402b30
sub_406e03
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406e88
jmp sub_402b30
sub_406e8f
mov esp ebp
pop ebp
retn
sub_406f22
jmp sub_402b30
sub_406f29
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_406fc7
jmp sub_402b30
sub_406fce
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_407064
jmp sub_402b30
sub_40706b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4070c9
jmp sub_402b30
sub_4070d0
pop ebp
retn
sub_4070d4
sub [ rw-data ] 0x1
retn
sub_407126
jmp sub_402b30
sub_40712d
pop ecx
pop ebp
retn
sub_4071bf
jmp sub_402b30
sub_4071c6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40748c
jmp sub_402b30
sub_407493
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40758b
jmp sub_402b30
sub_407592
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40765c
jmp sub_402b30
sub_407663
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_407882
jmp sub_402b30
sub_407889
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4078a6
mov eax [ ebp - 0x4 ]
call sub_404520
retn
sub_40789f
jmp sub_402b30
j_sub_402b30#9
jmp sub_402b30
sub_407993
mov esp ebp
pop ebp
retn
j_sub_402b30#8
jmp sub_402b30
sub_407acb
pop ebx
mov esp ebp
pop ebp
retn
j_sub_402b30#7
jmp sub_402b30
sub_407ba4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407bce
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4030b8
lea eax [ ebp - 0x4 ]
call sub_403094
retn
sub_407bc7
jmp sub_402b30
sub_407bce
mov esp ebp
pop ebp
retn
j_sub_402b30#6
jmp sub_402b30
j_sub_402b30#5
jmp sub_402b30
sub_407d94
pop ebx
mov esp ebp
pop ebp
retn
j_sub_402b30#4
jmp sub_402b30
sub_407e7c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407ffe
jmp sub_402b30
j_sub_402b30#3
jmp sub_402b30
sub_408027
pop ebx
mov esp ebp
pop ebp
retn
j_sub_402b30#2
jmp sub_402b30
sub_408052
pop ebp
retn
j_sub_402b30
jmp sub_402b30
sub_408227
call sub_402fa4
